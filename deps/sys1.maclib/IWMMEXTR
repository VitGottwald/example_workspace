*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMEXTR                              -01/29/13-<4> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitor environment extract service           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1993, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to extract information about    * 00002100
*      the monitoring environment which was previously passed through * 00002200
*      IWM4MINI/IWMMRELA.  When IWMMRELA was invoked for a management * 00002300
*      monitoring environment, owner token, owner data and abnormal   * 00002400
*      conditions are always available.  Arrival time, userid, and    * 00002500
*      transaction name are only available when IWM4MINI was          * 00002600
*      previously invoked.  Arrival time, however is only available   * 00002700
*      for management monitoring environments.                        * 00002800
*                                                                     * 00002900
*      When the service class token is requested for a management     * 00003000
*      monitoring environment, the value may represent a token from a * 00003100
*      prior active policy. Furthermore, when the monitoring          * 00003200
*      environment was established via IWMMRELA, the token may be     * 00003300
*      zero, which does not represent a valid service class or report * 00003400
*      class.  IWMWQRY may be used to obtain the service and/or       * 00003500
*      report class name, along with other information about these    * 00003600
*      classes.  The SERVCLS keyword is not applicable for            * 00003700
*      report-only monitoring environments. The returned token is     * 00003800
*      zero, which does not represent a valid service class.          * 00003900
*                                                                     * 00004000
*      The ENCLAVE_TOKEN and ASID keywords are only applicable for    * 00004100
*      report-only monitoring environments.                           * 00004200
*                                                                     * 00004300
*      The EWLM_S_CURCORR keyword should be specified only, if a work * 00004400
*      unit has been started by IWMMSTRT.                             * 00004500
*                                                                     * 00004600
*      When no output keywords are specified, the service merely      * 00004700
*      checks whether a monitoring environment was established and    * 00004800
*      passes short form checking.                                    * 00004900
*                                                                     * 00005000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00005100
*                                                                     * 00005200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00005300
*                                                                     * 00005400
*01* ENVIRONMENT:                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*      Dispatchable unit mode: Task or SRB mode.                      * 00005800
*                                                                     * 00005900
*      Minimum authorization: Either problem state or supervisor      * 00006000
*                        state.  Any PSW key.                         * 00006100
*                                                                     * 00006200
*      AMODE:            31-bit.                                      * 00006300
*                                                                     * 00006400
*      ASC mode:         Primary.                                     * 00006500
*                                                                     * 00006600
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00006700
*                                                                     * 00006800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00006900
*                                                                     * 00007000
*      Locks:            Suspend locks are allowed.                   * 00007100
*                                                                     * 00007200
*      Control parameters: Control parameters must be in the primary  * 00007300
*                        address space.                               * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*01* PROGRAMMING REQUIREMENTS:                                        * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*    1.  The macro IWMYCON must be included to use this macro.        * 00008100
*                                                                     * 00008200
*    2.  The macro IWMPB must be in the library concatenation, since  * 00008300
*        it is included by IWMYCON.                                   * 00008400
*                                                                     * 00008500
*    3.  Note that the high order halfword of bits 0-31 of register   * 00008600
*        0, and the reason code variable when specified, may be       * 00008700
*        non-zero and represents diagnostic data which is NOT part of * 00008800
*        the external interface.  The high order halfword should thus * 00008900
*        be excluded from comparison with the reason code values      * 00009000
*        described above.  The constant, IWMRSNCODE_MASK_CONST        * 00009100
*        defined in IWMYCON, may be used for this purpose.            * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*01* RESTRICTIONS:                                                    * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*    1.  This macro may not be used prior to the completion of WLM    * 00009900
*        address space initialization                                 * 00010000
*                                                                     * 00010100
*    2.  This macro may only be used on MVS/ESA (version 3 or         * 00010200
*        higher), NOT versions 1 or 2 of MVS.                         * 00010300
*                                                                     * 00010400
*    3.  Caller is responsible for error recovery                     * 00010500
*                                                                     * 00010600
*    4.  Only limited checking is done against the input monitoring   * 00010700
*        token.                                                       * 00010800
*                                                                     * 00010900
*    5.  If the key specified on IWM4MCRE was a user key (8-F), then  * 00011000
*        the primary addressability must exist to the performance     * 00011100
*        block IWM4MCRE obtained.  This condition is satisfied by     * 00011200
*        ensuring that current primary matches primary at the time    * 00011300
*        that IWM4MCRE was invoked.  If this service is invoked in a  * 00011400
*        subspace, the condition may be satisfied by ensuring that    * 00011500
*        the performance block is shared with the base space.         * 00011600
*                                                                     * 00011700
*    6.  The caller must serialize to prevent any delay monitoring    * 00011800
*        services from being invoked concurrently for the environment * 00011900
*        represented by the monitoring token.                         * 00012000
*                                                                     * 00012100
*    7.  This macro may only be used on z/OS R2 or higher levels for  * 00012200
*        ENCLAVE_TOKEN and ASID keywords.                             * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*01* INPUT REGISTER INFORMATION:                                      * 00012700
*                                                                     * 00012800
*    Before issuing the IWMMEXTR macro, the caller does not have to   * 00012900
*    place any information into any register unless using it in       * 00013000
*    register notation for a particular parameter, or using it as a   * 00013100
*    base register.                                                   * 00013200
*                                                                     * 00013300
*01* OUTPUT REGISTER INFORMATION:                                     * 00013400
*                                                                     * 00013500
*    When control returns to the caller, the GPRs contain:            * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*    REGISTER  CONTENTS                                               * 00013900
*                                                                     * 00014000
*    0         Reason code if GR15 return code is non-zero. The       * 00014100
*              reason code is stored in bits 0-31                     * 00014200
*                                                                     * 00014300
*    1         Used as work register by the system                    * 00014400
*                                                                     * 00014500
*    2-13      Unchanged                                              * 00014600
*                                                                     * 00014700
*    14        Used as work register by the system                    * 00014800
*                                                                     * 00014900
*    15        Return code stored in bits 0-31                        * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*    When control returns to the caller, the ARs contain:             * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*    REGISTER  CONTENTS                                               * 00015700
*                                                                     * 00015800
*    0-1       Used as work registers by the system                   * 00015900
*                                                                     * 00016000
*    2-13      Unchanged                                              * 00016100
*                                                                     * 00016200
*    14-15     Used as work registers by the system                   * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*    Some callers depend on register contents remaining the same      * 00016700
*    before and after issuing a service.  If the system changes the   * 00016800
*    contents of registers on which the caller depends, the caller    * 00016900
*    must save them before issuing the service, and restore them      * 00017000
*    after the system returns control.                                * 00017100
*                                                                     * 00017200
*01* PERFORMANCE IMPLICATIONS:                                        * 00017300
*                                                                     * 00017400
*    None                                                             * 00017500
*                                                                     * 00017600
*01* SYNTAX:                                                          * 00017700
*                                                                     * 00017800
*Ýxlabel¨  IWMMEXTR     MONTKN=xmontkn                                * 00017900
*                     Ý,OWNER_TOKEN=xowner_token¨                     * 00018000
*                     Ý,OWNER_DATA=xowner_data¨                       * 00018100
*                     Ý,ARRIVALTIME=xarrivaltime¨                     * 00018200
*                     Ý,TRXNAME=xtrxname¨                             * 00018300
*                     Ý,USERID=xuserid¨                               * 00018400
*                     Ý,SERVCLS=xservcls¨                             * 00018500
*                     Ý,ASID=xasid¨                                   * 00018600
*                     Ý,ENCLAVE_TOKEN=xenclave_token¨                 * 00018700
*                     Ý,TTRACETOKEN=xttracetoken¨                     * 00018800
*                     Ý,ABNORMAL_COND=xabnormal_cond¨                 * 00018900
*                     Ý,EWLM_CHCORR=xewlm_chcorr¨                     * 00019000
*                     Ý,EWLM_PACTKN=xewlm_pactkn¨                     * 00019100
*                     Ý,EWLM_S_CURCORR=xewlm_s_curcorr¨               * 00019200
*                     Ý,RETCODE=xretcode¨                             * 00019300
*                     Ý,RSNCODE=xrsncode¨                             * 00019400
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      Where:                                                         * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*      Ýxlabel¨                                                       * 00020100
*          is an optional symbol, starting in column 1, that is the   * 00020200
*          name on the IWMMEXTR macro invocation.  The name must      * 00020300
*          conform to the rules for an ordinary assembler language    * 00020400
*          symbol.                                                    * 00020500
*          DEFAULT: No name.                                          * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*      MONTKN=xmontkn                                                 * 00021100
*          is the name (RS-type), or address in register (2)-(12), of * 00021200
*          a required 32 bit input which contains the delay           * 00021300
*          monitoring token                                           * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*      ÝOWNER_TOKEN=xowner_token¨                                     * 00021900
*          is the name (RS-type), or address in register (2)-(12), of * 00022000
*          an optional 32 bit output which is to receive the token    * 00022100
*          established by the user/owner of the monitoring            * 00022200
*          environment.  The format is undefined to MVS.  When the    * 00022300
*          monitoring environment is not associated with an           * 00022400
*          OWNER_TOKEN value, the output will be a word of binary     * 00022500
*          zeros.                                                     * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*      ÝOWNER_DATA=xowner_data¨                                       * 00023100
*          is the name (RS-type), or address in register (2)-(12), of * 00023200
*          an optional 32 bit output which is to receive the data     * 00023300
*          established by the user/owner of the monitoring            * 00023400
*          environment.  The format is undefined to MVS.  When the    * 00023500
*          monitoring environment is not associated with an           * 00023600
*          OWNER_TOKEN value, the output will be a word of binary     * 00023700
*          zeros.                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*      ÝARRIVALTIME=xarrivaltime¨                                     * 00024300
*          is the name (RS-type), or address in register (2)-(12), of * 00024400
*          an optional 64 bit output which contains the work arrival  * 00024500
*          time in STCK format.                                       * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*      ÝTRXNAME=xtrxname¨                                             * 00025100
*          is the name (RS-type), or address in register (2)-(12), of * 00025200
*          an optional 8 character output which contains the          * 00025300
*          transaction name.  The field will be all blanks when       * 00025400
*          NO_TRXNAME was specified on IWM4MINI.                      * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*      ÝUSERID=xuserid¨                                               * 00026000
*          is the name (RS-type), or address in register (2)-(12), of * 00026100
*          an optional 8 character output which contains the local    * 00026200
*          userid associated with the work request.  The field will   * 00026300
*          be all blanks when NO_USERID was specified on IWM4MINI.    * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*      ÝSERVCLS=xservcls¨                                             * 00026900
*          is the name (RS-type), or address in register (2)-(12), of * 00027000
*          an optional 32 bit output which contains the service class * 00027100
*          token.  When the monitoring environment is not associated  * 00027200
*          with a service class token, the output will be a word of   * 00027300
*          binary zeros.                                              * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*      ÝASID=xasid¨                                                   * 00027900
*          is the name (RS-type), or address in register (2)-(12), of * 00028000
*          an optional 16 bit output which contains the address space * 00028100
*          ID.  When the monitoring environment is not associated     * 00028200
*          with an address space, the output will be a halfword of    * 00028300
*          binary zeros.  This keyword is available on z/OS R2 and    * 00028400
*          higher.                                                    * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*      ÝENCLAVE_TOKEN=xenclave_token¨                                 * 00029000
*          is the name (RS-type), or address in register (2)-(12), of * 00029100
*          an optional 64 bit output which contains the enclave       * 00029200
*          token.  When the monitoring environment is not associated  * 00029300
*          with an enclave, the output will be a doubleword of binary * 00029400
*          zeros.  This keyword is available on z/OS R2 and higher.   * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*      ÝTTRACETOKEN=xttracetoken¨                                     * 00030000
*          is the name (RS-type), or address in register (2)-(12), of * 00030100
*          an optional 32 character output which contains the         * 00030200
*          transaction trace token associated with the work request.  * 00030300
*          The field will be all zero when NO_TTRACETOKEN was         * 00030400
*          specified on IWM4MINI.                                     * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*      ÝABNORMAL_COND=xabnormal_cond¨                                 * 00031000
*          is the name (RS-type), or address in register (2)-(12), of * 00031100
*          an optional 32 bit output which contains the current       * 00031200
*          information about abnormal conditions which were either    * 00031300
*          recorded in the input monitoring environment or which were * 00031400
*          propagated to it via IWMMXFER Function(Return).  Multiple  * 00031500
*          conditions may exist.                                      * 00031600
*                                                                     * 00031700
*          The mask, Iwmmabnl_Scope_LocalMVS, may be used to          * 00031800
*          determine whether an abnormality which only affects work   * 00031900
*          on the current MVS image was recorded.                     * 00032000
*                                                                     * 00032100
*          The mask, Iwmmabnl_Scope_Sysplex, may be used to determine * 00032200
*          whether an abnormality which affects work on all MVS       * 00032300
*          images in the sysplex was recorded.                        * 00032400
*                                                                     * 00032500
*          To determine whether a condition was recorded, merely AND  * 00032600
*          the field supplied for ABNORMAL_COND with the relevant     * 00032700
*          mask. The result will be nonzero when the condition is     * 00032800
*          true, zero when the condition is false.                    * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*      ÝEWLM_CHCORR=xewlm_chcorr¨                                     * 00033400
*          is the name (RS-type), or address in register (2)-(12), of * 00033500
*          an optional character output which contains the cross      * 00033600
*          platform Enterprise Workload Management (EWLM) correlator  * 00033700
*          of the work request created by IWM4MINI.  Normally this    * 00033800
*          correlator is different from the current correlator of the * 00033900
*          work unit created by IWMMSTRT.                             * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*      ÝEWLM_PACTKN=xewlm_pactkn¨                                     * 00034500
*          is the name (RS-type), or address in register (2)-(12), of * 00034600
*          an optional character output which contains the cross      * 00034700
*          platform Enterprise Workload Management (EWLM) parent      * 00034800
*          correlator token of the work request associated with the   * 00034900
*          monitoring environment.                                    * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*      ÝEWLM_S_CURCORR=xewlm_s_curcorr¨                               * 00035500
*          is the name (RS-type), or address in register (2)-(12), of * 00035600
*          an optional character output which contains the current    * 00035700
*          correlator of the work unit started by IWMMSTRT.  Normally * 00035800
*          this correlator is different from the child correlator of  * 00035900
*          the work request created by IWM4MINI.                      * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*      ÝRETCODE=xretcode¨                                             * 00036500
*          is the name (RS-type) of an optional fullword output       * 00036600
*          variable, or register (2)-(12) or (15), into which the     * 00036700
*          return code is to be copied from GPR 15.  If you specify   * 00036800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00036900
*          the value will be left in GPR 15.                          * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*      ÝRSNCODE=xrsncode¨                                             * 00037500
*          is the name (RS-type) of an optional fullword output       * 00037600
*          variable into which the reason code is to be copied from   * 00037700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00037800
*          R0 (within or without parentheses), the value will be left * 00037900
*          in GPR 0.                                                  * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00038500
*          is an optional byte input decimal value in the "0-4" range * 00038600
*          that specifies the macro version.  PLISTVER determines     * 00038700
*          which parameter list is generated.  The macro keys         * 00038800
*          associated with each supported version of the macro are    * 00038900
*          listed in MACRO USAGE NOTE 2.  Note that MAX may be        * 00039000
*          specified instead of a number, and the parameter list will * 00039100
*          be of the largest size currently supported. This size may  * 00039200
*          grow from release to release (thus possibly affecting the  * 00039300
*          amount of storage needed by your program).                 * 00039400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00039500
*          default is the lowest version which allows all of the      * 00039600
*          parameters specified on the invocation to be processed.    * 00039700
*                                                                     * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*01* ABEND CODES:  None.                                              * 00040100
*                                                                     * 00040200
*01* RETURN CODES:                                                    * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*            0    Name: IwmRetCodeOk                                  * 00040600
*                                                                     * 00040700
*                 Meaning: Successful completion.                     * 00040800
*                                                                     * 00040900
*                 Action: None required.                              * 00041000
*                                                                     * 00041100
*            4    Name: IwmRetCodeWarning                             * 00041200
*                                                                     * 00041300
*                 Meaning: Successful completion, unusual conditions  * 00041400
*                 noted.                                              * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                 HEX REASON  MEANING/ACTION                          * 00041800
*                 CODE                                                * 00041900
*                                                                     * 00042000
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 00042100
*                                                                     * 00042200
*                             Meaning:  Monitoring token indicates    * 00042300
*                             that no monitoring environment exists.  * 00042400
*                                                                     * 00042500
*                             Action: None required.                  * 00042600
*                                                                     * 00042700
*                 xxxx040C    Name: IwmRsnCodeMonEnvLacksInfo         * 00042800
*                                                                     * 00042900
*                             Meaning:  Input monitoring environment  * 00043000
*                             does not contain the necessary          * 00043100
*                             information to return the data          * 00043200
*                             requested.                              * 00043300
*                                                                     * 00043400
*                             Action: None required.                  * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*            8    Name: IwmRetCodeInvocError                          * 00043900
*                                                                     * 00044000
*                 Meaning: Invalid invocation environment or          * 00044100
*                 parameters.                                         * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                 HEX REASON  MEANING/ACTION                          * 00044500
*                 CODE                                                * 00044600
*                                                                     * 00044700
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 00044800
*                                                                     * 00044900
*                             Meaning:  Monitoring environment does   * 00045000
*                             not pass short form verification.       * 00045100
*                                                                     * 00045200
*                             Action: Check for possible storage      * 00045300
*                             overlay.                                * 00045400
*                                                                     * 00045500
*                 xxxx0895    Name: IwmRsnCodeEWLMServNotEnabled      * 00045600
*                                                                     * 00045700
*                             Meaning: Service is not enabled because * 00045800
*                             monitoring environment can not be       * 00045900
*                             associated with EWLM work requests.     * 00046000
*                                                                     * 00046100
*                             Action: Specify the parameter           * 00046200
*                             EWLM_CHCORR or EWLM_PACTKN only when    * 00046300
*                             the monitoring environment is created   * 00046400
*                             with IWMMCREA EWLM=YES or the address   * 00046500
*                             space is connected with IWMCONN         * 00046600
*                             EWLM=YES and the connect token is       * 00046700
*                             passed to IWMMCREA when creating the    * 00046800
*                             monitoring environment.                 * 00046900
*                                                                     * 00047000
*                 xxxx08AC    Name: IwmRsnCodeTranNotStarted          * 00047100
*                                                                     * 00047200
*                             Meaning:  A work unit has not been      * 00047300
*                             started.                                * 00047400
*                                                                     * 00047500
*                             Action: Start a work unit by IWMMSTRT   * 00047600
*                             macro, before specifying the            * 00047700
*                             EWLM_S_CURCORR parameter.               * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*01* REASON CODES:                                                    * 00048400
*                                                                     * 00048500
*       A unique reason code will be returned whenever the return     * 00048600
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00048700
*       under their corresponding return code.  Reason code and       * 00048800
*       return code constants are defined within IWMYCON.  Note that  * 00048900
*       the high order halfword of bits 0-31 of register 0,      e    * 00049000
*       and the reason code variable when specified, may be non-zero  * 00049100
*       and represents diagnostic data which is NOT part of the       * 00049200
*       external interface.  The high order halfword should thus be   * 00049300
*       excluded from comparison with the reason code values          * 00049400
*       described above.  The constant, IWMRSNCODE_MASK_CONST defined * 00049500
*       in IWMYCON, may be used for this purpose.                     * 00049600
*                                                                     * 00049700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00049800
*                                                                     * 00049900
*02*   PROCESSOR:  ASSEM                                              * 00050000
*                                                                     * 00050100
*01* COMPONENT:  SCWLM                                                * 00050200
*                                                                     * 00050300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00050400
*                                                                     * 00050500
*01* EXAMPLES:                                                        * 00050600
*                                                                     * 00050700
*01* MACRO USAGE NOTES:                                               * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00051100
*        global macro variable.  Any value other than 'NO' will       * 00051200
*        result in the macro expansion being printed.  The default is * 00051300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00051400
*        variable should be set.                                      * 00051500
*                                                                     * 00051600
*                    GBLC &ZPRINT                                     * 00051700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*    2.  The IWMMEXTR macro supports multiple versions. The macro key * 00052100
*        list  below  contains the version level in which the key was * 00052200
*        first  introduced.  Positionals  are  identified by the word * 00052300
*        'Positional'  followed by the numeric value of its position. * 00052400
*        Nested  positionals  are  preceded  by their outer key.  The * 00052500
*        lowest value represents the original version and the highest * 00052600
*        value  represents  the  most  recent version of the IWMMEXTR * 00052700
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00052800
*        least  as high as the highest version number of all the keys * 00052900
*        being used.                                                  * 00053000
*                                                                     * 00053100
*        VERSION   KEY                                                * 00053200
*                                                                     * 00053300
*              0      ABNORMAL_COND                                   * 00053400
*                     ARRIVALTIME                                     * 00053500
*                     MONTKN                                          * 00053600
*                     OWNER_DATA                                      * 00053700
*                     OWNER_TOKEN                                     * 00053800
*                     SERVCLS                                         * 00053900
*                     TRXNAME                                         * 00054000
*                     USERID                                          * 00054100
*              1      TTRACETOKEN                                     * 00054200
*              2      ASID                                            * 00054300
*                     ENCLAVE_TOKEN                                   * 00054400
*              3      EWLM_CHCORR                                     * 00054500
*                     EWLM_PACTKN                                     * 00054600
*              4      EWLM_S_CURCORR                                  * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*01* CHANGE ACTIVITY:                                                 * 00055100
*                                                                     * 00055200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00055300
*                                                                     * 00055400
*    $L0=WLMI     HBB5510 920309 PD16:  Workload Manager I            * 00055500
*    $L1=WLMP     HBB6603 950612 PD16:  Extract service class for     * 00055600
*                                         Related PBs                 * 00055700
*    $L2=TTRACE   JBB6609 981009 PDDA:  Extract transaction trace     * 00055800
*                                         token for Related PBs       * 00055900
*    $L3=WLMPPBS  HBB7707 011030 3241PB:  Peter Baeuerle              * 00056000
*                                         Extract ENCLAVE_TOKEN and   * 00056100
*                                         ASID from Report- only PBs  * 00056200
*    $P1=ME01176  HBB7720 040924 3241DW:  Doc changes only.  Service  * 00056300
*                                         names changed to reflect    * 00056400
*                                         the 64bit name.             * 00056500
*    $P2=OA13573  HBB7707 050929 3241GB:  Fix wrong ASM statements    * 00056600
*                                         when extracting ETOKEN or   * 00056700
*                                         ASID                        * 00056800
*    $P2=WLMPERS  HBB7730 041202 3241SW:  EWLM CICS/IMS support       * 00056900
*    $P3=LEWLMQ   HBB7740 060419 3241KK:  EWLM MQ Support             * 00057000
*    $P4=REGEN    HBB7740 060814 3241GB:  REGEN to pick up AMG fixes  * 00057100
****** END OF SPECIFICATIONS *****************************************/ 00057200
*/********************************************************************* 00057300
         MACRO                                                          00057400
&XLABEL  IWMMEXTR &MONTKN=,&OWNER_TOKEN=,&OWNER_DATA=,&ARRIVALTIME=,   *00057500
               &TRXNAME=,&USERID=,&SERVCLS=,&ASID=,&ENCLAVE_TOKEN=,    *00057600
               &TTRACETOKEN=,&ABNORMAL_COND=,&EWLM_CHCORR=,            *00057700
               &EWLM_PACTKN=,&EWLM_S_CURCORR=,&RETCODE=,&RSNCODE=,     *00057800
               &PLISTVER=                                               00057900
.*                                                                      00058000
*                    MACDATE -01/29/13-<4>                              00058100
.*                                                                      00058200
.*******************************************************************    00058300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00058400
.*******************************************************************    00058500
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00058600
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00058700
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00058800
.*                                                                      00058900
                    GBLC  &ZIWMMEXTR  YES=MACRO USED AT LEAST ONCE      00059000
.*******************************************************************    00059100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00059200
.*******************************************************************    00059300
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00059400
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00059500
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00059600
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00059700
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00059800
                    LCLA  &ZAWRK      USED AS A WORK AREA               00059900
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00060000
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00060100
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00060200
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00060300
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00060400
                    LCLC  &ZMAC_G     "G" or null                       00060500
&ZMAC_G             SETC  ''                                            00060600
                    LCLC  &ZMAC_LR                                      00060700
&ZMAC_LR            SETC  'LR'                                          00060800
                    LCLC  &ZMAC_L                                       00060900
&ZMAC_L             SETC  'L'                                           00061000
                    LCLC  &ZMAC_ST                                      00061100
&ZMAC_ST            SETC  'ST'                                          00061200
                    LCLC  &ZMAC_LLGT                                    00061300
&ZMAC_LLGT          SETC  'L'                                           00061400
                    LCLC  &ZMAC_LGR                                     00061500
&ZMAC_LGR           SETC  'LR'                                          00061600
                    LCLC  &ZMAC_LG                                      00061700
&ZMAC_LG            SETC  'L'                                           00061800
                    LCLC  &ZMAC_STG                                     00061900
&ZMAC_STG           SETC  'ST'                                          00062000
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00062100
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00062200
.*                                                                      00062300
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00062400
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00062500
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00062600
                    LCLC  &ZENDBASEPL           End of base PL          00062700
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00062800
.*******************************************************************    00062900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00063000
.*******************************************************************    00063100
                    LCLA  &ZI         INDEX FOR ARRAY                   00063200
                    LCLA  &ZJ         INDEX FOR PARMS                   00063300
                    LCLA  &ZK         INDEX FOR PARSE                   00063400
                    LCLA  &ZLO        LOW RANGE VALUE                   00063500
                    LCLA  &ZHI        HIGH RANGE VALUE                  00063600
                    LCLC  &ZW         WORK AREA FOR PARM                00063700
.*******************************************************************    00063800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00063900
.*******************************************************************    00064000
                    LCLC  &XMONTKN    ++ NAME                           00064100
                    LCLC  &XOWNER_TOKEN         ++ NAME                 00064200
                    LCLC  &XOWNER_DATA          ++ NAME                 00064300
                    LCLC  &XARRIVALTIME         ++ NAME                 00064400
                    LCLC  &XTRXNAME   ++ NAME                           00064500
                    LCLC  &XUSERID    ++ NAME                           00064600
                    LCLC  &XSERVCLS   ++ NAME                           00064700
                    LCLC  &XASID      ++ NAME                           00064800
                    LCLC  &XENCLAVE_TOKEN       ++ NAME                 00064900
                    LCLC  &XTTRACETOKEN         ++ NAME                 00065000
                    LCLC  &XABNORMAL_COND       ++ NAME                 00065100
                    LCLC  &XEWLM_CHCORR         ++ NAME                 00065200
                    LCLC  &XEWLM_PACTKN         ++ NAME                 00065300
                    LCLC  &XEWLM_S_CURCORR      ++ NAME                 00065400
                    LCLC  &XRETCODE   ++ NAME                           00065500
                    LCLC  &XRSNCODE   ++ NAME                           00065600
                    LCLA  &XPLISTVER  ++ VALUE                          00065700
.*******************************************************************    00065800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00065900
.*******************************************************************    00066000
                    LCLC  &ZXMONTKN   ++ INPUT NAME                     00066100
                    LCLC  &ZXOWNER_TOKEN        ++ OUTPUT NAME          00066200
                    LCLC  &ZXOWNER_DATA         ++ OUTPUT NAME          00066300
                    LCLC  &ZXARRIVALTIME        ++ OUTPUT NAME          00066400
                    LCLC  &ZXTRXNAME  ++ OUTPUT NAME                    00066500
                    LCLC  &ZXUSERID   ++ OUTPUT NAME                    00066600
                    LCLC  &ZXSERVCLS  ++ OUTPUT NAME                    00066700
                    LCLC  &ZXASID     ++ OUTPUT NAME                    00066800
                    LCLC  &ZXENCLAVE_TOKEN      ++ OUTPUT NAME          00066900
                    LCLC  &ZXTTRACETOKEN        ++ OUTPUT NAME          00067000
                    LCLC  &ZXABNORMAL_COND      ++ OUTPUT NAME          00067100
                    LCLC  &ZXEWLM_CHCORR        ++ OUTPUT NAME          00067200
                    LCLC  &ZXEWLM_PACTKN        ++ OUTPUT NAME          00067300
                    LCLC  &ZXEWLM_S_CURCORR     ++ OUTPUT NAME          00067400
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00067500
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00067600
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00067700
.********************************************************************   00067800
.***AC.PLV01  PROCESS PLISTVER                                      *   00067900
.********************************************************************   00068000
&XPLISTVER      SETA  0                                                 00068100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00068200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00068300
&XPLISTVER      SETA  4                                                 00068400
.ZPLV0          ANOP  ,                                                 00068500
.*                                                                      00068600
                AIF   ('&ASID' EQ '').ZPLV1E                            00068700
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00068800
&XPLISTVER      SETA  2                                                 00068900
.ZPLV1E         ANOP  ,                                                 00069000
.*                                                                      00069100
                AIF   ('&ENCLAVE_TOKEN' EQ '').ZPLV2E                   00069200
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00069300
&XPLISTVER      SETA  2                                                 00069400
.ZPLV2E         ANOP  ,                                                 00069500
.*                                                                      00069600
                AIF   ('&TTRACETOKEN' EQ '').ZPLV3E                     00069700
                AIF   (&XPLISTVER GE 1).ZPLV3E                          00069800
&XPLISTVER      SETA  1                                                 00069900
.ZPLV3E         ANOP  ,                                                 00070000
.*                                                                      00070100
                AIF   ('&EWLM_CHCORR' EQ '').ZPLV4E                     00070200
                AIF   (&XPLISTVER GE 3).ZPLV4E                          00070300
&XPLISTVER      SETA  3                                                 00070400
.ZPLV4E         ANOP  ,                                                 00070500
.*                                                                      00070600
                AIF   ('&EWLM_PACTKN' EQ '').ZPLV5E                     00070700
                AIF   (&XPLISTVER GE 3).ZPLV5E                          00070800
&XPLISTVER      SETA  3                                                 00070900
.ZPLV5E         ANOP  ,                                                 00071000
.*                                                                      00071100
                AIF   ('&EWLM_S_CURCORR' EQ '').ZPLV6E                  00071200
                AIF   (&XPLISTVER GE 4).ZPLV6E                          00071300
&XPLISTVER      SETA  4                                                 00071400
.ZPLV6E         ANOP  ,                                                 00071500
.*                                                                      00071600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00071700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00071800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00071900
.*-------------------------------------------------------------------   00072000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00072100
&ZMS            SETC  '"PLISTVER='                                      00072200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00072300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00072400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00072500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072600
                AGO   .ZPVCK2                                           00072700
.ZPVCK3         ANOP  ,                                                 00072800
.*-------------------------------------------------------------------   00072900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00073000
&ZMS            SETC  '"PLISTVER='                                      00073100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00073200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00073300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00073400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073500
                AGO   .ZPVCKE                                           00073600
.ZPVCK2         ANOP  ,                                                 00073700
.*-------------------------------------------------------------------   00073800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00073900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00074000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00074100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00074200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00074300
                AIF   (&ZN LE 4).ZPVCK4A   NOT HIGH                     00074400
.ZPVCK6         ANOP  ,                                                 00074500
&ZMS            SETC  '"PLISTVER='                                      00074600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00074700
&ZMS            SETC  '&ZMS THE RANGE IS "0-4"'                         00074800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00074900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00075000
&XPLISTVER      SETA  4                                                 00075100
                AGO   .ZPVCKE                                           00075200
.*-------------------------------------------------------------------   00075300
.ZPVCK4A        ANOP  ,                                                 00075400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00075500
&ZMS            SETC  'PLISTVER='                                       00075600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00075700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00075800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00075900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00076000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00076100
                AGO   .ZPVCK5                                           00076200
.ZPVCK4         ANOP  ,                                                 00076300
&XPLISTVER      SETA  &PLISTVER(1)                                      00076400
.ZPVCK5         ANOP  ,                                                 00076500
.ZPVCKE         ANOP  ,                                                 00076600
.********************************************************************   00076700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00076800
.********************************************************************   00076900
                    ACTR  10000                                         00077000
.*----------------------------------------------------------------***   00077100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00077200
                    AIF   (N'&MONTKN LE 1).ZG2A  CK NUM                 00077300
&ZMS                SETC  '"MONTKN='                                    00077400
&ZMS                SETC  '&ZMS.&MONTKN"'                               00077500
&ZMS                SETC  '&ZMS "MONTKN"'                               00077600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00077700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00077800
.ZG2A               ANOP  ,                                             00077900
.*-------------------------------------------------------------------   00078000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00078100
&ZXMONTKN           SETC  'INPUT'     SET IN/OUTPUT                     00078200
&XMONTKN            SETC  '&MONTKN(1)'          SET XVARIABLE           00078300
                    AIF   (N'&MONTKN GT 1).ZG2B  MULTI PARMS            00078400
&XMONTKN            SETC  '&MONTKN'   SET XVARIABLE                     00078500
.ZG2B               AIF   (K'&MONTKN(1) GT 0).ZG2C                      00078600
&ZXMONTKN           SETC  ''          RESET IN/OUTPUT                   00078700
&ZMS                SETC  ' '                                           00078800
&ZMS                SETC  '&ZMS "MONTKN" KEY AND ITS'                   00078900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00079000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00079100
.ZG2C               ANOP  ,                                             00079200
.*-------------------------------------------------------------------   00079300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00079400
                    AIF   (K'&ZXMONTKN LE 0).ZG2R  NOT I/O              00079500
                    AIF   ('&XMONTKN'(1,1) NE '(').ZG2R                 00079600
&ZCGPR              SETC  '&XMONTKN'(2,K'&XMONTKN-2)                    00079700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                   00079800
                    AIF   (K'&ZCGPR GT 2).ZG2Q                          00079900
                    AIF   ('&ZCGPR' EQ '0').ZG2Q                        00080000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00080100
                    AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME      00080200
.ZG2P               ANOP  ,                                             00080300
                    AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC           00080400
                    AIF   ('&ZCGPR' LT '2').ZG2Q                        00080500
                    AIF   ('&ZCGPR' LE '12').ZG2R                       00080600
.ZG2Q               ANOP  ,                                             00080700
&ZMS                SETC  '"MONTKN='                                    00080800
&ZMS                SETC  '&ZMS.&MONTKN"'                               00080900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00081000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00081100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00081200
.ZG2R               ANOP  ,                                             00081300
.*----------------------------------------------------------------***   00081400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00081500
                    AIF   (N'&OWNER_TOKEN LE 1).ZG5A  CK NUM            00081600
&ZMS                SETC  '"OWNER_TOKEN='                               00081700
&ZMS                SETC  '&ZMS.&OWNER_TOKEN"'                          00081800
&ZMS                SETC  '&ZMS "OWNER_TOKEN"'                          00081900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00082000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00082100
.ZG5A               ANOP  ,                                             00082200
.*-------------------------------------------------------------------   00082300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00082400
                    AIF   (K'&OWNER_TOKEN(1) LE 0).ZG5C  NO PARM        00082500
&ZXOWNER_TOKEN      SETC  'OUTPUT'    SET OUTPUT                        00082600
&XOWNER_TOKEN       SETC  '&OWNER_TOKEN(1)'     SET XVARIABLE           00082700
                    AIF   (N'&OWNER_TOKEN GT 1).ZG5C                    00082800
&XOWNER_TOKEN       SETC  '&OWNER_TOKEN'        SET XVARIABLE           00082900
.ZG5C               ANOP  ,                                             00083000
.*-------------------------------------------------------------------   00083100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00083200
                    AIF   (K'&ZXOWNER_TOKEN LE 0).ZG5R  NOT I/O         00083300
                    AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZG5R            00083400
&ZCGPR              SETC  '&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2)          00083500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                   00083600
                    AIF   (K'&ZCGPR GT 2).ZG5Q                          00083700
                    AIF   ('&ZCGPR' EQ '0').ZG5Q                        00083800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00083900
                    AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME      00084000
.ZG5P               ANOP  ,                                             00084100
                    AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC           00084200
                    AIF   ('&ZCGPR' LT '2').ZG5Q                        00084300
                    AIF   ('&ZCGPR' LE '12').ZG5R                       00084400
.ZG5Q               ANOP  ,                                             00084500
&ZMS                SETC  '"OWNER_TOKEN='                               00084600
&ZMS                SETC  '&ZMS.&OWNER_TOKEN"'                          00084700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00084800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00084900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00085000
.ZG5R               ANOP  ,                                             00085100
.*----------------------------------------------------------------***   00085200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00085300
                    AIF   (N'&OWNER_DATA LE 1).ZG8A  CK NUM             00085400
&ZMS                SETC  '"OWNER_DATA='                                00085500
&ZMS                SETC  '&ZMS.&OWNER_DATA"'                           00085600
&ZMS                SETC  '&ZMS "OWNER_DATA"'                           00085700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00085800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00085900
.ZG8A               ANOP  ,                                             00086000
.*-------------------------------------------------------------------   00086100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00086200
                    AIF   (K'&OWNER_DATA(1) LE 0).ZG8C  NO PARM         00086300
&ZXOWNER_DATA       SETC  'OUTPUT'    SET OUTPUT                        00086400
&XOWNER_DATA        SETC  '&OWNER_DATA(1)'      SET XVARIABLE           00086500
                    AIF   (N'&OWNER_DATA GT 1).ZG8C                     00086600
&XOWNER_DATA        SETC  '&OWNER_DATA'         SET XVARIABLE           00086700
.ZG8C               ANOP  ,                                             00086800
.*-------------------------------------------------------------------   00086900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00087000
                    AIF   (K'&ZXOWNER_DATA LE 0).ZG8R  NOT I/O          00087100
                    AIF   ('&XOWNER_DATA'(1,1) NE '(').ZG8R             00087200
&ZCGPR              SETC  '&XOWNER_DATA'(2,K'&XOWNER_DATA-2)            00087300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                   00087400
                    AIF   (K'&ZCGPR GT 2).ZG8Q                          00087500
                    AIF   ('&ZCGPR' EQ '0').ZG8Q                        00087600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00087700
                    AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME      00087800
.ZG8P               ANOP  ,                                             00087900
                    AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC           00088000
                    AIF   ('&ZCGPR' LT '2').ZG8Q                        00088100
                    AIF   ('&ZCGPR' LE '12').ZG8R                       00088200
.ZG8Q               ANOP  ,                                             00088300
&ZMS                SETC  '"OWNER_DATA='                                00088400
&ZMS                SETC  '&ZMS.&OWNER_DATA"'                           00088500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00088600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00088700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00088800
.ZG8R               ANOP  ,                                             00088900
.*----------------------------------------------------------------***   00089000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00089100
                    AIF   (N'&ARRIVALTIME LE 1).ZG11A  CK NUM           00089200
&ZMS                SETC  '"ARRIVALTIME='                               00089300
&ZMS                SETC  '&ZMS.&ARRIVALTIME"'                          00089400
&ZMS                SETC  '&ZMS "ARRIVALTIME"'                          00089500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00089600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00089700
.ZG11A              ANOP  ,                                             00089800
.*-------------------------------------------------------------------   00089900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00090000
                    AIF   (K'&ARRIVALTIME(1) LE 0).ZG11C  NO PARM       00090100
&ZXARRIVALTIME      SETC  'OUTPUT'    SET OUTPUT                        00090200
&XARRIVALTIME       SETC  '&ARRIVALTIME(1)'     SET XVARIABLE           00090300
                    AIF   (N'&ARRIVALTIME GT 1).ZG11C                   00090400
&XARRIVALTIME       SETC  '&ARRIVALTIME'        SET XVARIABLE           00090500
.ZG11C              ANOP  ,                                             00090600
.*-------------------------------------------------------------------   00090700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00090800
                    AIF   (K'&ZXARRIVALTIME LE 0).ZG11R  NOT I/O        00090900
                    AIF   ('&XARRIVALTIME'(1,1) NE '(').ZG11R           00091000
&ZCGPR              SETC  '&XARRIVALTIME'(2,K'&XARRIVALTIME-2)          00091100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                  00091200
                    AIF   (K'&ZCGPR GT 2).ZG11Q                         00091300
                    AIF   ('&ZCGPR' EQ '0').ZG11Q                       00091400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00091500
                    AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME     00091600
.ZG11P              ANOP  ,                                             00091700
                    AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC          00091800
                    AIF   ('&ZCGPR' LT '2').ZG11Q                       00091900
                    AIF   ('&ZCGPR' LE '12').ZG11R                      00092000
.ZG11Q              ANOP  ,                                             00092100
&ZMS                SETC  '"ARRIVALTIME='                               00092200
&ZMS                SETC  '&ZMS.&ARRIVALTIME"'                          00092300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00092400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00092500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00092600
.ZG11R              ANOP  ,                                             00092700
.*----------------------------------------------------------------***   00092800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00092900
                    AIF   (N'&TRXNAME LE 1).ZG14A  CK NUM               00093000
&ZMS                SETC  '"TRXNAME='                                   00093100
&ZMS                SETC  '&ZMS.&TRXNAME"'                              00093200
&ZMS                SETC  '&ZMS "TRXNAME"'                              00093300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00093400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00093500
.ZG14A              ANOP  ,                                             00093600
.*-------------------------------------------------------------------   00093700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00093800
                    AIF   (K'&TRXNAME(1) LE 0).ZG14C  NO PARM           00093900
&ZXTRXNAME          SETC  'OUTPUT'    SET OUTPUT                        00094000
&XTRXNAME           SETC  '&TRXNAME(1)'         SET XVARIABLE           00094100
                    AIF   (N'&TRXNAME GT 1).ZG14C                       00094200
&XTRXNAME           SETC  '&TRXNAME'  SET XVARIABLE                     00094300
.ZG14C              ANOP  ,                                             00094400
.*-------------------------------------------------------------------   00094500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00094600
                    AIF   (K'&ZXTRXNAME LE 0).ZG14R  NOT I/O            00094700
                    AIF   ('&XTRXNAME'(1,1) NE '(').ZG14R               00094800
&ZCGPR              SETC  '&XTRXNAME'(2,K'&XTRXNAME-2)                  00094900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                  00095000
                    AIF   (K'&ZCGPR GT 2).ZG14Q                         00095100
                    AIF   ('&ZCGPR' EQ '0').ZG14Q                       00095200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00095300
                    AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME     00095400
.ZG14P              ANOP  ,                                             00095500
                    AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC          00095600
                    AIF   ('&ZCGPR' LT '2').ZG14Q                       00095700
                    AIF   ('&ZCGPR' LE '12').ZG14R                      00095800
.ZG14Q              ANOP  ,                                             00095900
&ZMS                SETC  '"TRXNAME='                                   00096000
&ZMS                SETC  '&ZMS.&TRXNAME"'                              00096100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00096200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00096300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00096400
.ZG14R              ANOP  ,                                             00096500
.*----------------------------------------------------------------***   00096600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00096700
                    AIF   (N'&USERID LE 1).ZG17A  CK NUM                00096800
&ZMS                SETC  '"USERID='                                    00096900
&ZMS                SETC  '&ZMS.&USERID"'                               00097000
&ZMS                SETC  '&ZMS "USERID"'                               00097100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00097200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00097300
.ZG17A              ANOP  ,                                             00097400
.*-------------------------------------------------------------------   00097500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00097600
                    AIF   (K'&USERID(1) LE 0).ZG17C  NO PARM            00097700
&ZXUSERID           SETC  'OUTPUT'    SET OUTPUT                        00097800
&XUSERID            SETC  '&USERID(1)'          SET XVARIABLE           00097900
                    AIF   (N'&USERID GT 1).ZG17C                        00098000
&XUSERID            SETC  '&USERID'   SET XVARIABLE                     00098100
.ZG17C              ANOP  ,                                             00098200
.*-------------------------------------------------------------------   00098300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00098400
                    AIF   (K'&ZXUSERID LE 0).ZG17R  NOT I/O             00098500
                    AIF   ('&XUSERID'(1,1) NE '(').ZG17R                00098600
&ZCGPR              SETC  '&XUSERID'(2,K'&XUSERID-2)                    00098700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                  00098800
                    AIF   (K'&ZCGPR GT 2).ZG17Q                         00098900
                    AIF   ('&ZCGPR' EQ '0').ZG17Q                       00099000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00099100
                    AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME     00099200
.ZG17P              ANOP  ,                                             00099300
                    AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC          00099400
                    AIF   ('&ZCGPR' LT '2').ZG17Q                       00099500
                    AIF   ('&ZCGPR' LE '12').ZG17R                      00099600
.ZG17Q              ANOP  ,                                             00099700
&ZMS                SETC  '"USERID='                                    00099800
&ZMS                SETC  '&ZMS.&USERID"'                               00099900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00100000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00100100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00100200
.ZG17R              ANOP  ,                                             00100300
.*----------------------------------------------------------------***   00100400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00100500
                    AIF   (N'&SERVCLS LE 1).ZG20A  CK NUM               00100600
&ZMS                SETC  '"SERVCLS='                                   00100700
&ZMS                SETC  '&ZMS.&SERVCLS"'                              00100800
&ZMS                SETC  '&ZMS "SERVCLS"'                              00100900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00101000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00101100
.ZG20A              ANOP  ,                                             00101200
.*-------------------------------------------------------------------   00101300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00101400
                    AIF   (K'&SERVCLS(1) LE 0).ZG20C  NO PARM           00101500
&ZXSERVCLS          SETC  'OUTPUT'    SET OUTPUT                        00101600
&XSERVCLS           SETC  '&SERVCLS(1)'         SET XVARIABLE           00101700
                    AIF   (N'&SERVCLS GT 1).ZG20C                       00101800
&XSERVCLS           SETC  '&SERVCLS'  SET XVARIABLE                     00101900
.ZG20C              ANOP  ,                                             00102000
.*-------------------------------------------------------------------   00102100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00102200
                    AIF   (K'&ZXSERVCLS LE 0).ZG20R  NOT I/O            00102300
                    AIF   ('&XSERVCLS'(1,1) NE '(').ZG20R               00102400
&ZCGPR              SETC  '&XSERVCLS'(2,K'&XSERVCLS-2)                  00102500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                  00102600
                    AIF   (K'&ZCGPR GT 2).ZG20Q                         00102700
                    AIF   ('&ZCGPR' EQ '0').ZG20Q                       00102800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00102900
                    AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME     00103000
.ZG20P              ANOP  ,                                             00103100
                    AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC          00103200
                    AIF   ('&ZCGPR' LT '2').ZG20Q                       00103300
                    AIF   ('&ZCGPR' LE '12').ZG20R                      00103400
.ZG20Q              ANOP  ,                                             00103500
&ZMS                SETC  '"SERVCLS='                                   00103600
&ZMS                SETC  '&ZMS.&SERVCLS"'                              00103700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00103800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00103900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00104000
.ZG20R              ANOP  ,                                             00104100
.*----------------------------------------------------------------***   00104200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00104300
                    AIF   (N'&ASID LE 1).ZG23A  CK NUM                  00104400
&ZMS                SETC  '"ASID='                                      00104500
&ZMS                SETC  '&ZMS.&ASID"'                                 00104600
&ZMS                SETC  '&ZMS "ASID"'                                 00104700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00104800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00104900
.ZG23A              ANOP  ,                                             00105000
.*-------------------------------------------------------------------   00105100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00105200
                    AIF   (K'&ASID(1) LE 0).ZG23C  NO PARM              00105300
&ZXASID             SETC  'OUTPUT'    SET OUTPUT                        00105400
&XASID              SETC  '&ASID(1)'  SET XVARIABLE                     00105500
                    AIF   (N'&ASID GT 1).ZG23C                          00105600
&XASID              SETC  '&ASID'     SET XVARIABLE                     00105700
.ZG23C              ANOP  ,                                             00105800
.*-------------------------------------------------------------------   00105900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00106000
                    AIF   (K'&ZXASID LE 0).ZG23R  NOT I/O               00106100
                    AIF   ('&XASID'(1,1) NE '(').ZG23R                  00106200
&ZCGPR              SETC  '&XASID'(2,K'&XASID-2)                        00106300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                  00106400
                    AIF   (K'&ZCGPR GT 2).ZG23Q                         00106500
                    AIF   ('&ZCGPR' EQ '0').ZG23Q                       00106600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00106700
                    AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME     00106800
.ZG23P              ANOP  ,                                             00106900
                    AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC          00107000
                    AIF   ('&ZCGPR' LT '2').ZG23Q                       00107100
                    AIF   ('&ZCGPR' LE '12').ZG23R                      00107200
.ZG23Q              ANOP  ,                                             00107300
&ZMS                SETC  '"ASID='                                      00107400
&ZMS                SETC  '&ZMS.&ASID"'                                 00107500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00107600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00107700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00107800
.ZG23R              ANOP  ,                                             00107900
.*----------------------------------------------------------------***   00108000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00108100
                    AIF   (N'&ENCLAVE_TOKEN LE 1).ZG26A  CK NUM         00108200
&ZMS                SETC  '"ENCLAVE_TOKEN='                             00108300
&ZMS                SETC  '&ZMS.&ENCLAVE_TOKEN"'                        00108400
&ZMS                SETC  '&ZMS "ENCLAVE_TOKEN"'                        00108500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00108600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00108700
.ZG26A              ANOP  ,                                             00108800
.*-------------------------------------------------------------------   00108900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00109000
                    AIF   (K'&ENCLAVE_TOKEN(1) LE 0).ZG26C  NO PARM     00109100
&ZXENCLAVE_TOKEN    SETC  'OUTPUT'    SET OUTPUT                        00109200
&XENCLAVE_TOKEN     SETC  '&ENCLAVE_TOKEN(1)'   SET XVARIABLE           00109300
                    AIF   (N'&ENCLAVE_TOKEN GT 1).ZG26C                 00109400
&XENCLAVE_TOKEN     SETC  '&ENCLAVE_TOKEN'      SET XVARIABLE           00109500
.ZG26C              ANOP  ,                                             00109600
.*-------------------------------------------------------------------   00109700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00109800
                    AIF   (K'&ZXENCLAVE_TOKEN LE 0).ZG26R  NOT I/O      00109900
                    AIF   ('&XENCLAVE_TOKEN'(1,1) NE '(').ZG26R         00110000
&ZCGPR              SETC  '&XENCLAVE_TOKEN'(2,K'&XENCLAVE_TOKEN-2)      00110100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                  00110200
                    AIF   (K'&ZCGPR GT 2).ZG26Q                         00110300
                    AIF   ('&ZCGPR' EQ '0').ZG26Q                       00110400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00110500
                    AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME     00110600
.ZG26P              ANOP  ,                                             00110700
                    AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC          00110800
                    AIF   ('&ZCGPR' LT '2').ZG26Q                       00110900
                    AIF   ('&ZCGPR' LE '12').ZG26R                      00111000
.ZG26Q              ANOP  ,                                             00111100
&ZMS                SETC  '"ENCLAVE_TOKEN='                             00111200
&ZMS                SETC  '&ZMS.&ENCLAVE_TOKEN"'                        00111300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00111400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00111500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00111600
.ZG26R              ANOP  ,                                             00111700
.*----------------------------------------------------------------***   00111800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00111900
                    AIF   (N'&TTRACETOKEN LE 1).ZG29A  CK NUM           00112000
&ZMS                SETC  '"TTRACETOKEN='                               00112100
&ZMS                SETC  '&ZMS.&TTRACETOKEN"'                          00112200
&ZMS                SETC  '&ZMS "TTRACETOKEN"'                          00112300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00112400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00112500
.ZG29A              ANOP  ,                                             00112600
.*-------------------------------------------------------------------   00112700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00112800
                    AIF   (K'&TTRACETOKEN(1) LE 0).ZG29C  NO PARM       00112900
&ZXTTRACETOKEN      SETC  'OUTPUT'    SET OUTPUT                        00113000
&XTTRACETOKEN       SETC  '&TTRACETOKEN(1)'     SET XVARIABLE           00113100
                    AIF   (N'&TTRACETOKEN GT 1).ZG29C                   00113200
&XTTRACETOKEN       SETC  '&TTRACETOKEN'        SET XVARIABLE           00113300
.ZG29C              ANOP  ,                                             00113400
.*-------------------------------------------------------------------   00113500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00113600
                    AIF   (K'&ZXTTRACETOKEN LE 0).ZG29R  NOT I/O        00113700
                    AIF   ('&XTTRACETOKEN'(1,1) NE '(').ZG29R           00113800
&ZCGPR              SETC  '&XTTRACETOKEN'(2,K'&XTTRACETOKEN-2)          00113900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                  00114000
                    AIF   (K'&ZCGPR GT 2).ZG29Q                         00114100
                    AIF   ('&ZCGPR' EQ '0').ZG29Q                       00114200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00114300
                    AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME     00114400
.ZG29P              ANOP  ,                                             00114500
                    AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC          00114600
                    AIF   ('&ZCGPR' LT '2').ZG29Q                       00114700
                    AIF   ('&ZCGPR' LE '12').ZG29R                      00114800
.ZG29Q              ANOP  ,                                             00114900
&ZMS                SETC  '"TTRACETOKEN='                               00115000
&ZMS                SETC  '&ZMS.&TTRACETOKEN"'                          00115100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00115200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00115300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00115400
.ZG29R              ANOP  ,                                             00115500
.*----------------------------------------------------------------***   00115600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00115700
                    AIF   (N'&ABNORMAL_COND LE 1).ZG32A  CK NUM         00115800
&ZMS                SETC  '"ABNORMAL_COND='                             00115900
&ZMS                SETC  '&ZMS.&ABNORMAL_COND"'                        00116000
&ZMS                SETC  '&ZMS "ABNORMAL_COND"'                        00116100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00116200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00116300
.ZG32A              ANOP  ,                                             00116400
.*-------------------------------------------------------------------   00116500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00116600
                    AIF   (K'&ABNORMAL_COND(1) LE 0).ZG32C  NO PARM     00116700
&ZXABNORMAL_COND    SETC  'OUTPUT'    SET OUTPUT                        00116800
&XABNORMAL_COND     SETC  '&ABNORMAL_COND(1)'   SET XVARIABLE           00116900
                    AIF   (N'&ABNORMAL_COND GT 1).ZG32C                 00117000
&XABNORMAL_COND     SETC  '&ABNORMAL_COND'      SET XVARIABLE           00117100
.ZG32C              ANOP  ,                                             00117200
.*-------------------------------------------------------------------   00117300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00117400
                    AIF   (K'&ZXABNORMAL_COND LE 0).ZG32R  NOT I/O      00117500
                    AIF   ('&XABNORMAL_COND'(1,1) NE '(').ZG32R         00117600
&ZCGPR              SETC  '&XABNORMAL_COND'(2,K'&XABNORMAL_COND-2)      00117700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                  00117800
                    AIF   (K'&ZCGPR GT 2).ZG32Q                         00117900
                    AIF   ('&ZCGPR' EQ '0').ZG32Q                       00118000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00118100
                    AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME     00118200
.ZG32P              ANOP  ,                                             00118300
                    AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC          00118400
                    AIF   ('&ZCGPR' LT '2').ZG32Q                       00118500
                    AIF   ('&ZCGPR' LE '12').ZG32R                      00118600
.ZG32Q              ANOP  ,                                             00118700
&ZMS                SETC  '"ABNORMAL_COND='                             00118800
&ZMS                SETC  '&ZMS.&ABNORMAL_COND"'                        00118900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00119000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00119100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00119200
.ZG32R              ANOP  ,                                             00119300
.*----------------------------------------------------------------***   00119400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00119500
                    AIF   (N'&EWLM_CHCORR LE 1).ZG35A  CK NUM           00119600
&ZMS                SETC  '"EWLM_CHCORR='                               00119700
&ZMS                SETC  '&ZMS.&EWLM_CHCORR"'                          00119800
&ZMS                SETC  '&ZMS "EWLM_CHCORR"'                          00119900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00120000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00120100
.ZG35A              ANOP  ,                                             00120200
.*-------------------------------------------------------------------   00120300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00120400
                    AIF   (K'&EWLM_CHCORR(1) LE 0).ZG35C  NO PARM       00120500
&ZXEWLM_CHCORR      SETC  'OUTPUT'    SET OUTPUT                        00120600
&XEWLM_CHCORR       SETC  '&EWLM_CHCORR(1)'     SET XVARIABLE           00120700
                    AIF   (N'&EWLM_CHCORR GT 1).ZG35C                   00120800
&XEWLM_CHCORR       SETC  '&EWLM_CHCORR'        SET XVARIABLE           00120900
.ZG35C              ANOP  ,                                             00121000
.*-------------------------------------------------------------------   00121100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00121200
                    AIF   (K'&ZXEWLM_CHCORR LE 0).ZG35R  NOT I/O        00121300
                    AIF   ('&XEWLM_CHCORR'(1,1) NE '(').ZG35R           00121400
&ZCGPR              SETC  '&XEWLM_CHCORR'(2,K'&XEWLM_CHCORR-2)          00121500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                  00121600
                    AIF   (K'&ZCGPR GT 2).ZG35Q                         00121700
                    AIF   ('&ZCGPR' EQ '0').ZG35Q                       00121800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00121900
                    AIF   (T'&ZCGPR NE 'N').ZG35Q  INVALID REG NAME     00122000
.ZG35P              ANOP  ,                                             00122100
                    AIF   (T'&ZCGPR NE 'N').ZG35R  NON NUMERIC          00122200
                    AIF   ('&ZCGPR' LT '2').ZG35Q                       00122300
                    AIF   ('&ZCGPR' LE '12').ZG35R                      00122400
.ZG35Q              ANOP  ,                                             00122500
&ZMS                SETC  '"EWLM_CHCORR='                               00122600
&ZMS                SETC  '&ZMS.&EWLM_CHCORR"'                          00122700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00122800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00122900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00123000
.ZG35R              ANOP  ,                                             00123100
.*----------------------------------------------------------------***   00123200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00123300
                    AIF   (N'&EWLM_PACTKN LE 1).ZG38A  CK NUM           00123400
&ZMS                SETC  '"EWLM_PACTKN='                               00123500
&ZMS                SETC  '&ZMS.&EWLM_PACTKN"'                          00123600
&ZMS                SETC  '&ZMS "EWLM_PACTKN"'                          00123700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00123800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00123900
.ZG38A              ANOP  ,                                             00124000
.*-------------------------------------------------------------------   00124100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00124200
                    AIF   (K'&EWLM_PACTKN(1) LE 0).ZG38C  NO PARM       00124300
&ZXEWLM_PACTKN      SETC  'OUTPUT'    SET OUTPUT                        00124400
&XEWLM_PACTKN       SETC  '&EWLM_PACTKN(1)'     SET XVARIABLE           00124500
                    AIF   (N'&EWLM_PACTKN GT 1).ZG38C                   00124600
&XEWLM_PACTKN       SETC  '&EWLM_PACTKN'        SET XVARIABLE           00124700
.ZG38C              ANOP  ,                                             00124800
.*-------------------------------------------------------------------   00124900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00125000
                    AIF   (K'&ZXEWLM_PACTKN LE 0).ZG38R  NOT I/O        00125100
                    AIF   ('&XEWLM_PACTKN'(1,1) NE '(').ZG38R           00125200
&ZCGPR              SETC  '&XEWLM_PACTKN'(2,K'&XEWLM_PACTKN-2)          00125300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                  00125400
                    AIF   (K'&ZCGPR GT 2).ZG38Q                         00125500
                    AIF   ('&ZCGPR' EQ '0').ZG38Q                       00125600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00125700
                    AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME     00125800
.ZG38P              ANOP  ,                                             00125900
                    AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC          00126000
                    AIF   ('&ZCGPR' LT '2').ZG38Q                       00126100
                    AIF   ('&ZCGPR' LE '12').ZG38R                      00126200
.ZG38Q              ANOP  ,                                             00126300
&ZMS                SETC  '"EWLM_PACTKN='                               00126400
&ZMS                SETC  '&ZMS.&EWLM_PACTKN"'                          00126500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00126600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00126700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00126800
.ZG38R              ANOP  ,                                             00126900
.*----------------------------------------------------------------***   00127000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00127100
                    AIF   (N'&EWLM_S_CURCORR LE 1).ZG41A  CK NUM        00127200
&ZMS                SETC  '"EWLM_S_CURCORR='                            00127300
&ZMS                SETC  '&ZMS.&EWLM_S_CURCORR"'                       00127400
&ZMS                SETC  '&ZMS "EWLM_S_CURCORR"'                       00127500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00127600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00127700
.ZG41A              ANOP  ,                                             00127800
.*-------------------------------------------------------------------   00127900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00128000
                    AIF   (K'&EWLM_S_CURCORR(1) LE 0).ZG41C  NO PARM    00128100
&ZXEWLM_S_CURCORR   SETC  'OUTPUT'    SET OUTPUT                        00128200
&XEWLM_S_CURCORR    SETC  '&EWLM_S_CURCORR(1)'  SET XVARIABLE           00128300
                    AIF   (N'&EWLM_S_CURCORR GT 1).ZG41C                00128400
&XEWLM_S_CURCORR    SETC  '&EWLM_S_CURCORR'     SET XVARIABLE           00128500
.ZG41C              ANOP  ,                                             00128600
.*-------------------------------------------------------------------   00128700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00128800
                    AIF   (K'&ZXEWLM_S_CURCORR LE 0).ZG41R  NOT I/O     00128900
                    AIF   ('&XEWLM_S_CURCORR'(1,1) NE '(').ZG41R        00129000
&ZCGPR              SETC  '&XEWLM_S_CURCORR'(2,K'&XEWLM_S_CURCORR-2)    00129100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                  00129200
                    AIF   (K'&ZCGPR GT 2).ZG41Q                         00129300
                    AIF   ('&ZCGPR' EQ '0').ZG41Q                       00129400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00129500
                    AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME     00129600
.ZG41P              ANOP  ,                                             00129700
                    AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC          00129800
                    AIF   ('&ZCGPR' LT '2').ZG41Q                       00129900
                    AIF   ('&ZCGPR' LE '12').ZG41R                      00130000
.ZG41Q              ANOP  ,                                             00130100
&ZMS                SETC  '"EWLM_S_CURCORR='                            00130200
&ZMS                SETC  '&ZMS.&EWLM_S_CURCORR"'                       00130300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00130400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00130500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00130600
.ZG41R              ANOP  ,                                             00130700
.*----------------------------------------------------------------***   00130800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00130900
                    AIF   (N'&RETCODE LE 1).ZG44A  CK NUM               00131000
&ZMS                SETC  '"RETCODE='                                   00131100
&ZMS                SETC  '&ZMS.&RETCODE"'                              00131200
&ZMS                SETC  '&ZMS "RETCODE"'                              00131300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00131400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00131500
.ZG44A              ANOP  ,                                             00131600
.*-------------------------------------------------------------------   00131700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00131800
                    AIF   (K'&RETCODE(1) LE 0).ZG44C  NO PARM           00131900
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00132000
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00132100
                    AIF   (N'&RETCODE GT 1).ZG44C                       00132200
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00132300
.ZG44C              ANOP  ,                                             00132400
.*-------------------------------------------------------------------   00132500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00132600
                    AIF   (K'&ZXRETCODE LE 0).ZG44R  NOT I/O            00132700
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG44R               00132800
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00132900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                  00133000
                    AIF   (K'&ZCGPR GT 2).ZG44Q                         00133100
                    AIF   ('&ZCGPR' EQ '0').ZG44Q                       00133200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00133300
                    AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME     00133400
.ZG44P              ANOP  ,                                             00133500
                    AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC          00133600
                    AIF   ('&ZCGPR' EQ '15').ZG44R                      00133700
                    AIF   ('&ZCGPR' LT '2').ZG44Q                       00133800
                    AIF   ('&ZCGPR' LE '12').ZG44R                      00133900
.ZG44Q              ANOP  ,                                             00134000
&ZMS                SETC  '"RETCODE='                                   00134100
&ZMS                SETC  '&ZMS.&RETCODE"'                              00134200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00134300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'      00134400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00134500
.ZG44R              ANOP  ,                                             00134600
.*----------------------------------------------------------------***   00134700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00134800
                    AIF   (N'&RSNCODE LE 1).ZG47A  CK NUM               00134900
&ZMS                SETC  '"RSNCODE='                                   00135000
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00135100
&ZMS                SETC  '&ZMS "RSNCODE"'                              00135200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00135300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00135400
.ZG47A              ANOP  ,                                             00135500
.*-------------------------------------------------------------------   00135600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00135700
                    AIF   (K'&RSNCODE(1) LE 0).ZG47C  NO PARM           00135800
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00135900
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00136000
                    AIF   (N'&RSNCODE GT 1).ZG47C                       00136100
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00136200
.ZG47C              ANOP  ,                                             00136300
.*-------------------------------------------------------------------   00136400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00136500
                    AIF   (K'&ZXRSNCODE LE 0).ZG47R  NOT I/O            00136600
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG47R               00136700
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00136800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                  00136900
                    AIF   (K'&ZCGPR GT 2).ZG47Q                         00137000
                    AIF   ('&ZCGPR' EQ '0').ZG47R                       00137100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00137200
                    AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME     00137300
.ZG47P              ANOP  ,                                             00137400
                    AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC          00137500
                    AIF   ('&ZCGPR' EQ '0').ZG47R                       00137600
                    AIF   ('&ZCGPR' LT '2').ZG47Q                       00137700
                    AIF   ('&ZCGPR' LE '12').ZG47R                      00137800
.ZG47Q              ANOP  ,                                             00137900
&ZMS                SETC  '"RSNCODE='                                   00138000
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00138100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00138200
                    MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'       00138300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00138400
.ZG47R              ANOP  ,                                             00138500
.******************************************************************     00138600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00138700
.******************************************************************     00138800
                    ACTR  10000                                         00138900
.*----------------------------------------------------------------***   00139000
.***AH.P02 EXTRA POSITIONALS                                            00139100
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          00139200
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          00139300
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      00139400
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       00139500
.ZGLISTX1           ANOP  ,                                             00139600
&ZCVAL              SETC  ''          ERROR FIELD                       00139700
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00139800
.ZGLIST2            ANOP  ,                                             00139900
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00140000
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          00140100
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00140200
                    AGO   .ZGLIST2                                      00140300
.*                                                                      00140400
.ZGLIST3            ANOP  ,                                             00140500
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00140600
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00140700
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00140800
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00140900
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00141000
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00141100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00141200
.ZGLISTX            ANOP  ,                                             00141300
&ZASYSLNDX          SETA  0                                             00141400
.*******************************************************************    00141500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00141600
.*******************************************************************    00141700
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00141800
.*******************************************************************    00141900
.***AE.01  START OF IWMMEXTR MACRO CODE                                 00142000
.*******************************************************************    00142100
                    LCLC  &M0M0001                 NAME                 00142200
&M0M0001            SETC  '&XLABEL'                SET NAME             00142300
                    AIF   (K'&XLABEL NE 0).XLAB2                        00142400
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00142500
.*                                                                      00142600
.XLAB2              ANOP  ,                                             00142700
&M0M0001 DS    0H                             IWMMEXTR-4                00142800
.*******************************************************************    00142900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00143000
.*******************************************************************    00143100
              PUSH  PRINT                                               00143200
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00143300
                    PRINT OFF         ++ PR01                           00143400
                    AGO   .ZPRNTXX                                      00143500
.ZPRINTX            PRINT ON                                            00143600
.ZPRNTXX            ANOP  ,                                             00143700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00143800
         LCLC  &T1,&INIT                                                00143900
         GBLC  &SYSAM64                                             @P2 00144000
         GBLA  &SYSALVL                                             @P2 00144100
&T1      SETC  '&MONTKN'                                                00144200
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         00144300
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00144400
&T1      SETC  '0(&T1.)'                                                00144500
.MONTKNRS  ANOP                                                         00144600
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00144700
         ICM   14,15,&T1               FETCH MONITORING TOKEN           00144800
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00144900
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00145000
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00145100
         B     END&SYSNDX              BRANCH TO END LABEL              00145200
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00145300
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00145400
         BE    MONENVOK&SYSNDX         BRANCH WHEN MON ENV PASSES       00145500
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00145600
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00145700
         B     END&SYSNDX              BRANCH TO END LABEL              00145800
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00145900
         USING PB,14                                                    00146000
.*                                                                      00146100
.*                                                                      00146200
.*                                                                      00146300
         AIF   ('&OWNER_TOKEN' EQ '').ENDOWNER_TOKEN                    00146400
&T1      SETC  '&OWNER_TOKEN'                                           00146500
         AIF   ('&OWNER_TOKEN'(1,1) NE '(').OWNER_TOKENRS               00146600
&T1      SETC  '&OWNER_TOKEN'(2,K'&OWNER_TOKEN-2)                       00146700
&T1      SETC  '0(&T1.)'                                                00146800
.OWNER_TOKENRS ANOP                                                     00146900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00147000
         L     1,PB_OWNER_TKN          COPY OWNER_TOKEN VIA L,ST        00147100
         ST    1,&T1                                                    00147200
.ENDOWNER_TOKEN ANOP                                                    00147300
.*                                                                      00147400
         AIF   ('&OWNER_DATA' EQ '').ENDOWNER_DATA                      00147500
&T1      SETC  '&OWNER_DATA'                                            00147600
         AIF   ('&OWNER_DATA'(1,1) NE '(').OWNER_DATARS                 00147700
&T1      SETC  '&OWNER_DATA'(2,K'&OWNER_DATA-2)                         00147800
&T1      SETC  '0(&T1.)'                                                00147900
.OWNER_DATARS ANOP                                                      00148000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00148100
         L     1,PB_OWNER_DATA         COPY OWNER_DATA VIA L,ST         00148200
         ST    1,&T1                                                    00148300
.ENDOWNER_DATA ANOP                                                     00148400
.*                                                                      00148500
         AIF   ('&ABNORMAL_COND' EQ '').ENDABNORMAL_COND                00148600
&T1      SETC  '&ABNORMAL_COND'                                         00148700
         AIF   ('&ABNORMAL_COND'(1,1) NE '(').ABNORMAL_CONDRS           00148800
&T1      SETC  '&ABNORMAL_COND'(2,K'&ABNORMAL_COND-2)                   00148900
&T1      SETC  '0(&T1.)'                                                00149000
.ABNORMAL_CONDRS ANOP                                                   00149100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00149200
         L     1,PB_ABNORMAL_FLAGS     COPY ABNORMAL FLAGS              00149300
         ST    1,&T1                                                    00149400
.ENDABNORMAL_COND ANOP                                                  00149500
.*                                                                      00149600
         AIF   ('&ASID' EQ '').ENDASIDCODE                              00149700
&T1      SETC  '&ASID'                                                  00149800
         AIF   ('&ASID'(1,1) NE '(').ASIDRS                             00149900
&T1      SETC  '&ASID'(2,K'&ASID-2)                                     00150000
&T1      SETC  '0(&T1.)'                                                00150100
.ASIDRS ANOP                                                            00150200
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00150300
         LA    1,&T1                                          @OA13573  00150400
         MVC   0(L'PB_AS_ID,1),PB_AS_ID     COPY ASID         @OA13573  00150500
.ENDASIDCODE ANOP                                                       00150600
.*                                                                      00150700
         AIF   ('&ENCLAVE_TOKEN' EQ '').ENDENCLAVE_TOKENCODE            00150800
&T1      SETC  '&ENCLAVE_TOKEN'                                         00150900
         AIF   ('&ENCLAVE_TOKEN'(1,1) NE '(').ENCLAVE_TOKENRS           00151000
&T1      SETC  '&ENCLAVE_TOKEN'(2,K'&ENCLAVE_TOKEN-2)                   00151100
&T1      SETC  '0(&T1.)'                                                00151200
.ENCLAVE_TOKENRS ANOP                                                   00151300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00151400
         LA    1,&T1                                          @OA13573  00151500
         MVC   0(L'PB_ETOKEN,1),PB_ETOKEN   COPY ETOKEN       @OA13573  00151600
.ENDENCLAVE_TOKENCODE ANOP                                              00151700
.*                                                                      00151800
         AIF   ('&SERVCLS' EQ '').ENDSERVCLSCODE                        00151900
&T1      SETC  '&SERVCLS'                                               00152000
         AIF   ('&SERVCLS'(1,1) NE '(').SERVCLSRS                       00152100
&T1      SETC  '&SERVCLS'(2,K'&SERVCLS-2)                               00152200
&T1      SETC  '0(&T1.)'                                                00152300
.SERVCLSRS ANOP                                                         00152400
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00152500
         L     1,PB_SC_TKN                                              00152600
         ST    1,&T1                   COPY SERVCLS VIA L,ST            00152700
.ENDSERVCLSCODE  ANOP                                                   00152800
.*                                                                      00152900
         AIF   ('&TTRACETOKEN' EQ '').ENDTTRACETOKENCODE                00153000
&T1      SETC  '&TTRACETOKEN'                                           00153100
         AIF   ('&TTRACETOKEN'(1,1) NE '(').TTRACETOKENRS               00153200
&T1      SETC  '&TTRACETOKEN'(2,K'&TTRACETOKEN-2)                       00153300
         MVC   0(32,&T1.),PB_TRANS_TTOKEN                               00153400
         AGO   .ENDTTRACETOKENCODE                                      00153500
.TTRACETOKENRS ANOP                                                     00153600
.* &T1 IS A VALID BASE-DISPLACEMENT EXPRESSION                          00153700
         MVC   &T1.(32),PB_TRANS_TTOKEN    COPY TTRACETOKEN             00153800
.ENDTTRACETOKENCODE   ANOP                                              00153900
.*                                                                      00154000
         AIF   ('&ARRIVALTIME' EQ '').ENDARRTIME                        00154100
&INIT    SETC  'YES'                                                    00154200
.ENDARRTIME    ANOP                                                     00154300
.*                                                                      00154400
         AIF   ('&TRXNAME' EQ '').ENDTRXNAME                            00154500
&INIT    SETC  'YES'                                                    00154600
.ENDTRXNAME    ANOP                                                     00154700
.*                                                                      00154800
         AIF   ('&USERID' EQ '').ENDUSERID                              00154900
&INIT    SETC  'YES'                                                    00155000
.ENDUSERID     ANOP                                                     00155100
.*                                                                      00155200
.*       CHECK TO SEE IF ANY KEYS WERE SPECIFIED WHICH REQUIRE          00155300
.*       CHECKING FOR INITIALIZE VS. RELATE                             00155400
.*                                                                      00155500
         AIF   ('&INIT' NE 'YES').ENDINIT                               00155600
         TM    PB_WORKDEF,PB_INIT      CHECK PB_INIT                    00155700
         BO    IWMMEXTR_INIT&SYSNDX     BRANCH IF SET                   00155800
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00155900
         LA    0,IWMRSNCODEMONENVLACKSINFO SET RSN CODE                 00156000
         B     END&SYSNDX              BRANCH TO END LABEL          @P2 00156100
IWMMEXTR_INIT&SYSNDX DS 0H             BRANCH LABEL FOR INITIALIZE DONE 00156200
.*                                                                      00156300
         AIF   ('&ARRIVALTIME' EQ '').ENDARRTIMECODE                    00156400
&T1      SETC  '&ARRIVALTIME'                                           00156500
         AIF   ('&ARRIVALTIME'(1,1) NE '(').ARRIVALTIMERS               00156600
&T1      SETC  '&ARRIVALTIME'(2,K'&ARRIVALTIME-2)                       00156700
         MVC   0(8,&T1.),PB_ARRTIME                                     00156800
         AGO   .ENDARRTIMECODE                                          00156900
.ARRIVALTIMERS ANOP                                                     00157000
.* &T1 IS A VALID BASE-DISPLACEMENT EXPRESSION                          00157100
         MVC   &T1.(8),PB_ARRTIME                                       00157200
.ENDARRTIMECODE  ANOP                                                   00157300
.*                                                                      00157400
         AIF   ('&TRXNAME' EQ '').ENDTRXNAMECODE                        00157500
&T1      SETC  '&TRXNAME'                                               00157600
         AIF   ('&TRXNAME'(1,1) NE '(').TRXNAMERS                       00157700
&T1      SETC  '&TRXNAME'(2,K'&TRXNAME-2)                               00157800
         MVC   0(8,&T1.),PB_TRXNAME                                     00157900
         AGO   .ENDTRXNAMECODE                                          00158000
.TRXNAMERS ANOP                                                         00158100
.* &T1 IS A VALID BASE-DISPLACEMENT EXPRESSION                          00158200
         MVC   &T1.(8),PB_TRXNAME          COPY TRXNAME                 00158300
.ENDTRXNAMECODE  ANOP                                                   00158400
.*                                                                      00158500
         AIF   ('&USERID' EQ '').ENDUSERIDCODE                          00158600
&T1      SETC  '&USERID'                                                00158700
         AIF   ('&USERID'(1,1) NE '(').USERIDRS                         00158800
&T1      SETC  '&USERID'(2,K'&USERID-2)                                 00158900
         MVC   0(8,&T1.),PB_USERID                                      00159000
         AGO   .ENDUSERIDCODE                                           00159100
.USERIDRS ANOP                                                          00159200
.* &T1 IS A VALID BASE-DISPLACEMENT EXPRESSION                          00159300
         MVC   &T1.(8),PB_USERID          COPY USERID                   00159400
.ENDUSERIDCODE   ANOP                                                   00159500
.*                                                                      00159600
.ENDINIT ANOP                                                           00159700
         LA    15,IWMRETCODEOK          SET RETURN CODE = OK            00159800
EWLMCORREXTR&SYSNDX DS 0H                                           @P2 00159900
.****************************************************************** @P2 00160000
.* Begin EWLM support: Extract correlators from PB                * @P2 00160100
.****************************************************************** @P2 00160200
         AIF   ('&EWLM_PACTKN' NE '').EWLMCORREXTR                  @P2 00160300
         AIF   ('&EWLM_CHCORR' NE '').EWLMCORREXTR                  @P2 00160400
         AGO   .SKIPEWLMCORREXTR                                    @P2 00160500
.*                                                                  @P2 00160600
.EWLMCORREXTR  ANOP ,                                               @P2 00160700
         TM    PB_WORKDEF,PB_RELATE    CHECK PB_RELATE WHEN CORR    @P2 00160800
         BO    EWLMCORRFILLBEG&SYSNDX  BRANCH IF SET                @P2 00160900
         TM    PB_WORKDEF,PB_INIT      CHECK PB_INIT   WHEN CORR    @P2 00161000
         BO    EWLMCORRFILLBEG&SYSNDX  BRANCH IF SET                @P2 00161100
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE      @P2 00161200
         LA    0,IWMRSNCODEMONENVLACKSINFO SET RSN CODE             @P2 00161300
         B     END&SYSNDX              BRANCH TO END LABEL          @P2 00161400
EWLMCORRFILLBEG&SYSNDX DS 0H           BRANCH LABEL FOR BEGIN       @P2 00161500
.CHECKPBINIT   ANOP                                                 @P2 00161600
         CLI   PB_VERSION,PB_VERSION6   IF EWLM IS SUPPORTED        @P2 00161700
         BL    NOEWLMSUPPORT&SYSNDX      AND                        @P2 00161800
         TM    PB_FLAGS,PB_EWLM_ENABLED    EWLM IS ENABLED          @P2 00161900
         BNO   NOEWLMENABLED&SYSNDX      THEN EXTRACT EWLM PARAMS   @P2 00162000
.*  Check and copy EWLM_PACTKN                                      @P2 00162100
         AIF   ('&EWLM_PACTKN' EQ '').EWLMCORRCOPY1                 @P2 00162200
         CLC   PB_EWLM_PARENTCORRELATOR(4),=X'0000FF3F' DUMMY CORR? @P2 00162300
         BE    EWLMCOPYPARCORR&SYSNDX      COPY  IF EQUAL           @P2 00162400
         CLC   PB_EWLM_PARENTCORRELATOR(4),=X'00000000' EMPTY CORR? @P2 00162500
         BE    EWLMCORRFILLERR&SYSNDX      ERROR IF EQUAL           @P2 00162600
         TM    PB_EWLM_PARENTCORRELATOR+5,X'04' CORR COMPRESSED ?   @P2 00162700
         BNO   EWLMCORRFILLERR&SYSNDX      ERROR IF BIT NOT SET     @P2 00162800
EWLMCOPYPARCORR&SYSNDX DS 0H           BRANCH LABEL COPY PAR CORR   @P2 00162900
         AIF   ('&XEWLM_PACTKN'(1,1) NE '(').EWLMPACTKN10           @P2 00163000
&ZCGPR   SETC  '&XEWLM_PACTKN'(2,K'&XEWLM_PACTKN-2)                 @P2 00163100
         MVC   0(L'PB_EWLM_PARENTCORRELATOR,&ZCGPR),PB_EWLM_PARENTCORRE*00163200
               LATOR EXTRACT PACTKN                                 @P2 00163300
         AGO   .EWLMPACTKN20                                        @P2 00163400
.EWLMPACTKN10 ANOP                                                  @P2 00163500
         MVC   &EWLM_PACTKN,PB_EWLM_PARENTCORRELATOR EXTRACT PACTKN @P2 00163600
.EWLMPACTKN20 ANOP                                                  @P2 00163700
.EWLMCORRCOPY1  ANOP ,                                              @P2 00163800
.*  Check and copy EWLM_CHCORR                                      @P2 00163900
         AIF   ('&EWLM_CHCORR' EQ '').EWLMCORRCOPY2                 @P2 00164000
         CLC   PB_EWLM_CURRENTCORRELATOR(4),=X'00000000' EMPTY CORR?@P2 00164100
         BE    EWLMCORRFILLERR&SYSNDX      ERROR IF EQUAL           @P2 00164200
         AIF   ('&XEWLM_CHCORR'(1,1) NE '(').EWLMCHCORR10           @P2 00164300
&ZCGPR   SETC  '&XEWLM_CHCORR'(2,K'&XEWLM_CHCORR-2)                 @P2 00164400
         MVC   0(L'PB_EWLM_CURRENTCORRELATOR,&ZCGPR),PB_EWLM_CURRENTCOR*00164500
               RELATOR EXTRACT CHCORR                               @P2 00164600
         AGO   .EWLMCHCORR20                                        @P2 00164700
.EWLMCHCORR10 ANOP                                                  @P2 00164800
         MVC   &EWLM_CHCORR,PB_EWLM_CURRENTCORRELATOR EXTRACT CHCORR@P2 00164900
.EWLMCHCORR20 ANOP                                                  @P2 00165000
.EWLMCORRCOPY2  ANOP ,                                              @P2 00165100
         B     ENDEWLMCORREXTR&SYSNDX      RETURN WITH RC = 0       @P2 00165200
.*                                                                  @P2 00165300
EWLMCORRFILLERR&SYSNDX DS 0H    BRANCH LABEL FOR ERROR              @P2 00165400
         LA    15,IWMRETCODEWARNING        SET WARNING RETURN CODE  @P2 00165500
         LA    0,IWMRSNCODEMONENVLACKSINFO SET RSN CODE             @P2 00165600
         B     END&SYSNDX                  END LABEL RC NOT 0       @P2 00165700
.*                                                                  @P2 00165800
NOEWLMENABLED&SYSNDX DS 0H      BRANCH LABEL FOR EWLM NOT ENABLED   @P2 00165900
         LA    15,IWMRETCODEINVOCERROR       SET RETURN CODE        @P2 00166000
         LA    0,IWMRSNCODEEWLMSERVNOTENABLED  AND RSN CODE.        @P2 00166100
         B     END&SYSNDX                  END LABEL RC NOT 0       @P2 00166200
.*                                                                  @P2 00166300
NOEWLMSUPPORT&SYSNDX DS 0H      BRANCH LABEL FOR EWLM NOT SUPPORTED @P2 00166400
         AIF   ('&EWLM_PACTKN' EQ '').EWLMCORRFILL1                 @P2 00166500
         AIF   ('&XEWLM_PACTKN'(1,1) NE '(').EWLMPACTKN30           @P2 00166600
&ZCGPR   SETC  '&XEWLM_PACTKN'(2,K'&XEWLM_PACTKN-2)                 @P2 00166700
         XC    0(L'PB_EWLM_PARENTCORRELATOR,&ZCGPR),0(&ZCGPR)       @P2 00166800
*                                            FILL DUMMY CORRELATOR  @P2 00166900
         MVC   0(L'PB_EWLM_PARENTCORRELATOR,&ZCGPR),=X'0000FF3F'    @P2 00167000
         AGO   .EWLMPACTKN40                                        @P2 00167100
.EWLMPACTKN30 ANOP                                                  @P2 00167200
         XC    &EWLM_PACTKN,&EWLM_PACTKN                            @P2 00167300
         MVC   &EWLM_PACTKN.(4),=X'0000FF3F' FILL DUMMY CORR        @P2 00167400
.EWLMPACTKN40 ANOP                                                  @P2 00167500
.EWLMCORRFILL1 ANOP ,                                               @P2 00167600
         AIF   ('&EWLM_CHCORR' EQ '').EWLMCORRFILL2                 @P2 00167700
         AIF   ('&XEWLM_CHCORR'(1,1) NE '(').EWLMCHCORR30           @P2 00167800
&ZCGPR   SETC  '&XEWLM_CHCORR'(2,K'&XEWLM_CHCORR-2)                 @P2 00167900
         XC    0(L'PB_EWLM_CURRENTCORRELATOR,&ZCGPR),0(&ZCGPR)      @P2 00168000
*                                            FILL DUMMY CORRELATOR  @P2 00168100
         MVC   0(L'PB_EWLM_CURRENTCORRELATOR,&ZCGPR),=X'0000FF3F'   @P2 00168200
         AGO   .EWLMCHCORR40                                        @P2 00168300
.EWLMCHCORR30 ANOP                                                  @P2 00168400
         XC    &EWLM_CHCORR,&EWLM_CHCORR                            @P2 00168500
         MVC   &EWLM_CHCORR.(4),=X'0000FF3F' FILL DUMMY CORR        @P2 00168600
.EWLMCHCORR40 ANOP                                                  @P2 00168700
.EWLMCORRFILL2 ANOP ,                                               @P2 00168800
.*                                                                  @P2 00168900
ENDEWLMCORREXTR&SYSNDX DS 0H    BRANCH LABEL FOR RC = 0             @P2 00169000
.*        END LABEL FOR BRANCH AROUND EWLM PROCESSING:              @P2 00169100
.SKIPEWLMCORREXTR ANOP                                              @P2 00169200
.****************************************************************** @P2 00169300
.* End EWLM support: fill correlators                             * @P2 00169400
.****************************************************************** @P2 00169500
.******************************************************************     00169600
.*     Begin Message Level Support                        @LEWLMQ       00169700
.******************************************************************     00169800
         AIF   ('&EWLM_S_CURCORR' EQ '').NOSCURCORR                     00169900
         CLI   PB_VERSION,PB_VERSION6                                   00170000
         BNH   S_CORR_OK&SYSNDX        BRANCH IF VERSION <= 6           00170100
.*       Version > 6                                                    00170200
         CLC   PB_EWLM_MQ_STARTTIME,=X'0000000000000000'                00170300
         BNE   EXTRCORR&SYSNDX         BRANCH IF WORK UNIT STARTED      00170400
.*       STARTTIME = HEX00                                              00170500
         LA    15,IWMRETCODEINVOCERROR                                  00170600
         LA    0,IWMRSNCODETRANNOTSTARTED                               00170700
         B     END&SYSNDX              BRANCH TO END LABEL              00170800
EXTRCORR&SYSNDX DS  0H                 LABEL EXTRACT S_CURCORR          00170900
.*       Request started, extract correlator                            00171000
         AIF   ('&XEWLM_S_CURCORR'(1,1) EQ '(').SCURCORRREG             00171100
.*       Store correlator in variable                                   00171200
         MVC   &XEWLM_S_CURCORR,PB_EWLM_MQ_CURRCORR                     00171300
         AGO   .ENDSCURCORR                                             00171400
.SCURCORRREG   ANOP                                                     00171500
.*       Store correlator in variable addressed by input register       00171600
&ZCGPR   SETC  '&XEWLM_S_CURCORR'(2,K'&XEWLM_S_CURCORR-2)               00171700
         MVC   0(L'PB_EWLM_MQ_CURRCORR,&ZCGPR),PB_EWLM_MQ_CURRCORR      00171800
.ENDSCURCORR  ANOP                                                      00171900
S_CORR_OK&SYSNDX DS  0H                LABEL END S_CURCORR PROCESSING   00172000
         SLR   0,0                     SET REASON CODE = 0              00172100
         SLR   15,15                   SET RETURN CODE = 0              00172200
.NOSCURCORR   ANOP                                                      00172300
.******************************************************************     00172400
.*     End   Message Level Support                        @LEWLMQ       00172500
.******************************************************************     00172600
.*                                                                      00172700
         DROP  14                                                       00172800
END&SYSNDX  DS    0H                    END LABEL For RC unchanged      00172900
.*******************************************************************    00173000
.***        RETURN CODE PROCESSING                                      00173100
.*******************************************************************    00173200
         AIF   (N'&RETCODE LE 0).IWMMEXTR_ENDRC_EXP                     00173300
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMEXTR_RC_REG                00173400
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMEXTR_ENDRC_EXP              00173500
         AIF   ('&XRETCODE' EQ 'REG15').IWMMEXTR_ENDRC_EXP              00173600
         AIF   ('&XRETCODE' EQ 'R15').IWMMEXTR_ENDRC_EXP                00173700
         AIF   ('&XRETCODE' EQ '15').IWMMEXTR_ENDRC_EXP                 00173800
         ST    15,&XRETCODE                                             00173900
            AGO  .IWMMEXTR_ENDRC_EXP                                    00174000
.*                                                                      00174100
.IWMMEXTR_RC_REG      ANOP  ,                                           00174200
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00174300
         AIF   ('&T1' EQ 'GPR15').IWMMEXTR_ENDRC_EXP                    00174400
         AIF   ('&T1' EQ 'REG15').IWMMEXTR_ENDRC_EXP                    00174500
         AIF   ('&T1' EQ 'R15').IWMMEXTR_ENDRC_EXP                      00174600
         AIF   ('&T1' EQ '15').IWMMEXTR_ENDRC_EXP                       00174700
         LR    &T1,15                                                   00174800
.IWMMEXTR_ENDRC_EXP   ANOP  ,                                           00174900
.*******************************************************************    00175000
.***        REASON CODE PROCESSING                                      00175100
.*******************************************************************    00175200
         AIF   (N'&RSNCODE LE 0).IWMMEXTR_ENDRSN_EXP                    00175300
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMEXTR_RSN_REG               00175400
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMEXTR_ENDRSN_EXP              00175500
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMEXTR_ENDRSN_EXP             00175600
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMEXTR_ENDRSN_EXP              00175700
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMEXTR_ENDRSN_EXP             00175800
         AIF   ('&XRSNCODE' EQ 'R0').IWMMEXTR_ENDRSN_EXP                00175900
         AIF   ('&XRSNCODE' EQ '0').IWMMEXTR_ENDRSN_EXP                 00176000
         AIF   ('&XRSNCODE' EQ '00').IWMMEXTR_ENDRSN_EXP                00176100
         ST    0,&XRSNCODE                                              00176200
         AGO   .IWMMEXTR_ENDRSN_EXP                                     00176300
.*                                                                      00176400
.IWMMEXTR_RSN_REG     ANOP  ,                                           00176500
&T1      SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                             00176600
         AIF   ('&ZCGPR' EQ 'GPR0').IWMMEXTR_ENDRSN_EXP                 00176700
         AIF   ('&ZCGPR' EQ 'GPR00').IWMMEXTR_ENDRSN_EXP                00176800
         AIF   ('&ZCGPR' EQ 'REG0').IWMMEXTR_ENDRSN_EXP                 00176900
         AIF   ('&ZCGPR' EQ 'REG00').IWMMEXTR_ENDRSN_EXP                00177000
         AIF   ('&ZCGPR' EQ 'R0').IWMMEXTR_ENDRSN_EXP                   00177100
         AIF   ('&ZCGPR' EQ '0').IWMMEXTR_ENDRSN_EXP                    00177200
         AIF   ('&ZCGPR' EQ '00').IWMMEXTR_ENDRSN_EXP                   00177300
         LR    &T1,0                                                    00177400
.IWMMEXTR_ENDRSN_EXP  ANOP  ,                                           00177500
.*******************************************************************    00177600
&ZIWMMEXTR            SETC  'YES'          SET IWMMEXTR USED            00177700
         POP   PRINT                                                    00177800
.*                                           IWMMEXTR END               00177900
         SPACE 1                                                        00178000
         MEXIT                                                          00178100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00178200
.********************************************************************   00178300
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00178400
.********************************************************************   00178500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00178600
                      LCLA  &ZOPN1         INVOCATION INDEX             00178700
                      LCLC  &ZOPL(4095)    LABEL                        00178800
                      LCLC  &ZOPO(4095)    OPERATION                    00178900
                      LCLC  &ZOPV(4095)    VALUE                        00179000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00179100
.*                                                                      00179200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00179300
.*******************************************************************    00179400
.***AO.X02  RETURN CODE PROCESSING                                      00179500
.*******************************************************************    00179600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00179700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00179800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00179900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00180000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00180100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00180200
&ZOPN                 SETA  &ZOPN+1                                     00180300
&ZOPL(&ZOPN)          SETC  ' '                                         00180400
&ZOPO(&ZOPN)          SETC  'ST'                                        00180500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00180600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00180700
                      AGO   .ZMRETX                                     00180800
.*                                                                      00180900
.ZMRET2               ANOP  ,                                           00181000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00181100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00181200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00181300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00181400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00181500
&ZOPN                 SETA  &ZOPN+1                                     00181600
&ZOPL(&ZOPN)          SETC  ' '                                         00181700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00181800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00181900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00182000
.ZMRETX               ANOP  ,                                           00182100
.*******************************************************************    00182200
.***AO.X03  REASON CODE PROCESSING                                      00182300
.*******************************************************************    00182400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00182500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00182600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00182700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00182800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00182900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00183000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00183100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00183200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00183300
&ZOPN                 SETA  &ZOPN+1                                     00183400
&ZOPL(&ZOPN)          SETC  ' '                                         00183500
&ZOPO(&ZOPN)          SETC  'ST'                                        00183600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00183700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00183800
                      AGO   .ZMRSNX                                     00183900
.*                                                                      00184000
.ZMRSN2               ANOP  ,                                           00184100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00184200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00184300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00184400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00184500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00184600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00184700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00184800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00184900
&ZOPN                 SETA  &ZOPN+1                                     00185000
&ZOPL(&ZOPN)          SETC  ' '                                         00185100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00185200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00185300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00185400
.ZMRSNX               ANOP  ,                                           00185500
.*******************************************************************    00185600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00185700
.*******************************************************************    00185800
                      ACTR  10000                                       00185900
.*                                                                      00186000
                      LCLA  &ZLC           COLUMN POSITION              00186100
                      LCLA  &ZOPX          LIST TABLE INDEX             00186200
                      LCLC  &ZLL           LABEL                        00186300
                      LCLC  &ZLOP          OPERATION                    00186400
                      LCLC  &ZLV           VALUE                        00186500
                      LCLC  &ZLD           DESCRIPTION                  00186600
.*                                                                      00186700
&ZOPX                 SETA  1                                           00186800
.*******************************************************************    00186900
.***AP.X01  FORMAT GENERATED CODE                                       00187000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00187100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00187200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00187300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00187400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00187500
                      AIF   (K'&ZLD LE 0).ZL51                          00187600
&ZLC                  SETA  35             COMMENT COLUMN               00187700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00187800
&ZLC                  SETA  33             COMMENT COLUMN               00187900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00188000
&ZLV                  SETC  '&ZLV'.' '                                  00188100
                      AGO   .ZL31                                       00188200
.*                                                                      00188300
.ZL41                 ANOP  ,                                           00188400
&ZLV                  SETC  '&ZLV'.' '                                  00188500
.ZL51                 ANOP  ,                                           00188600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00188700
.*                                                                      00188800
&ZLL     &ZLOP &ZLV                                                     00188900
.*                                                                      00189000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00189100
                      AGO   .ZL21          CONTINUE LOOPING             00189200
.*                                                                      00189300
.ZLX1                 ANOP  ,                                           00189400
.*******************************************************************    00189500
.***AP.X02  END OF IWMMEXTR MACRO                                       00189600
&ZIWMMEXTR            SETC  'YES'          SET IWMMEXTR USED            00189700
         POP   PRINT                                                    00189800
*                                            IWMMEXTR-4                 00189900
         SPACE 1                                                        00190000
.ZLX2                 ANOP  ,                                           00190100
         MEND                                                           00190200
**********************************************************************/ 00190300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00190400
*%IWMMEXTR: MACRO KEYS(MONTKN,OWNER_TOKEN,OWNER_DATA,ARRIVALTIME,       00190500
*                 TRXNAME,USERID,SERVCLS,ASID,ENCLAVE_TOKEN,            00190600
*                 TTRACETOKEN,ABNORMAL_COND,EWLM_CHCORR,EWLM_PACTKN,    00190700
*                 EWLM_S_CURCORR,RETCODE,RSNCODE,PLISTVER);             00190800
*  ANS('?'!!MACLABEL!!' '!!'IWMMEXTP '!!MACLIST!!                       00190900
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00191000
*%END IWMMEXTR;                                                         00191100
