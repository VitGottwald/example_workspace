*/*A000000-999999                                            @Z21SP00*/         
*%GOTO UXPPLS00;                    /* SKIP OVER ASSEMBLER VERSION              
         MACRO                                                                  
         GIMMPUXP &UXPALL=Y,&UXPMAIN=N,&UXPRTN=N,&UXP001=N,            X        
               &UXP002=N                                                        
         LCLC  &UXPLALL                                                         
         GBLB  &UXPSW1                                                          
         AIF   ('&UXPMAIN' EQ 'Y').UXPLB00                                      
         AIF   ('&UXPRTN' EQ 'Y').UXPLB00                                       
         AIF   ('&UXP001' EQ 'Y').UXPLB00                                       
         AIF   ('&UXP002' EQ 'Y').UXPLB00                                       
&UXPLALL SETC  'Y'                                                              
         AGO   .UXPLB02                                                         
.UXPLB00 ANOP                                                                   
&UXPLALL SETC  'N'                                                              
.UXPLB02 ANOP                                                                   
         AIF   ('&UXPSW1' EQ '1').UXPLB01                                       
&UXPSW1  SETB  1                                                                
***********************************************************************         
*                                                                     *         
*        GIMMPUXP - GIMSMP USER EXIT INTERFACE PARAMETER MAPPING      *         
*                                                                     *         
***********************************************************************         
*                                                                     *         
* THIS MACRO MAPS THE PARAMETER LIST THAT GIMSMP USES TO INTERFACE    *         
*      WITH ALL ITS SUPPORTED USER EXITS.                             *         
*      THE MACRO IS DIVIDED UP INTO MULTIPLE DSECTS, ONE FOR THE      *         
*      COMMON PARAMETER LIST, AND ONE FOR EACH USER EXIT WITH A       *         
*      SPECIFIC PARAMETER FOR THAT EXIT. THE EXPANSION IS CONTROLLED  *         
*      BY THE FOLLOWING PARAMETERS THAT MAY BE SET TO Y OR N          *         
*                                                                     *         
*      ..NAME..  DEFAULT  MEANING                                     *         
*      UXPALL       Y     EXPANSION TO INCLUDE ALL DSECTS             *         
*      UXPMAIN      N     EXPANSION TO INCLUDE MAIN SECTION           *         
*      UXPRTN       N     EXPANSION TO INCLUDE RETURN CODES           *         
*      UXP001       N     EXPANSION TO INCLUDE EXIT 001 PARM          *         
*      UXP002       N     EXPANSION TO INCLUDE EXIT 002 PARM          *         
*                                                                     *         
* ONLY THOSE RETURN CODES DEFINED WITHIN THIS MACRO WILL BE           *         
*      ACCEPTED BY GIMSMP. ANY OTHER CODE WILL RESULT IN AN ERROR.    *         
*                                                                     *         
* TO ESTABLISH ADDRESSIBILITY FOR ANY SECTION THE FOLLOWING           *         
*      SHOULD BE DONE UPON ENTRY                                      *         
*                                                                     *         
*      L     REGA,0(REG1)      LOAD ADDRESS OF GIMMPUXP               *         
*      USING GIMMPUXP,REGA     ADDRESSIBILITY FOR GIMMPUXP            *         
*      L     REGB,UXPPRMAD     LOAD ADDRESS OF PARM FOR SPECIFIC EXIT *         
*      USING UXNNNPRM,REGB     ADDRESSIBILITY FOR SPECIFIC PARM FOR   *         
*                              THIS EXIT. NNN IS EXIT NUMBER          *         
*                                                                     *         
*   THE LISTS POINTED TO BY UXPCTBAD AND UXPMODAD ARE INTENDED        *         
*        FOR FUTURE USE TO POINT TO THE INTERNAL SMP CONTROL          *         
*        BLOCKS AND SMP MODULES ACCESSIBLE BY THE USER.               *         
*        AT PRESENT NO SUPPORT IS AVAILABLE AND THESE ADDRESSES       *         
*        WILL BE SET TO ZERO.                                         *         
*                                                                     *         
***********************************************************************         
*                                                                     *         
* Licensed Materials - Property of IBM                                *         
* 5694-A01  5655-G44                                                  *         
* Copyright IBM Corp. 1983, 2001                                      *         
*                                                                     *         
***********************************************************************         
*                                                                     *         
*                                                                     *         
* CHANGE_ACTIVITY = GIMSMP 17.00                              @HMP1700*         
*                                                                     *         
*     11.00 - Z21SP00, INITIAL RELEASE OF GIMSMP              @Z21SP00*         
*     12.00 - Z22SP00, SMP/E VERSION 1 RELEASE 2              @Z22SP00*         
*     13.00 - HMP1300, SMP/E VERSION 1 RELEASE 3              @HMP1300*         
*     15.00 - HMP1500, SMP/E VERSION 1 RELEASE 5              @HMP1500*         
*           - SMP/E TO SMP/E CONVERSION                       @CNVE015*         
*   15.1.00 - HMP1502, SMP/E VERSION 1 RELEASE 5.1            @HMP1502*         
*     16.00 - HMP1600, SMP/E VERSION 1 RELEASE 6              @HMP1600*         
*     17.00 - HMP1700, SMP/E VERSION 1 RELEASE 7              @HMP1700*         
*                                                                     *         
***********************************************************************         
.UXPLB01 ANOP                                                                   
         AIF   ('&UXPLALL' EQ 'Y').UXPMN00                                      
         AIF   ('&UXPMAIN' NE 'Y').UXPMN99                                      
.UXPMN00 ANOP                                                                   
GIMMPUXP DSECT                                                                  
UXPUXNUM DS    H                  USER EXIT NUMBER                              
         DS    CL2                RESERVED                                      
UXPUXNAM DS    CL8                USER EXIT LMOD NAME(IF AVAILABLE)             
UXPUXAD  DS    F                  USER EXIT ADDRESS (IF AVAILABLE)              
UXPFUNCT DS    CL8                SMP FUNCTION IN PROCESS                       
UXPPRMAD DS    F                  ADDRESS OF PARAMETER FOR SPECIFIC             
*                                   EXIT IDENTIFIED BY UXPUXNUM                 
UXPLOJAD DS    F                  WORK AREA FOR COMMUNICATIONS FOR              
*                                   LIFE OF SMP JOB. AREA IS                    
*                                   INITIALIZED TO ZERO BEFORE                  
*                                   FIRST USER EXIT CALL AND THEN NOT           
*                                   MODIFIED AGAIN BY GIMMPP.                   
UXPLOEAD DS    F                  WORK AREA FOR COMMUNICATIONS FOR              
*                                   LIFE OF EXIT. AREA IS INITIALIZED           
*                                   TO ZERO BEFORE FIRST CALL AFTER             
*                                   EACH LOGICAL LOAD OF THE EXIT AND           
*                                   THEN NOT MODIFIED AGAIN BY GIMMPP.          
         DS    F                  RESERVED                                      
         DS    F                  RESERVED                                      
*********      END OF GIMMPUXP MAPPING                                          
.UXPMN99 ANOP                                                                   
         AIF   ('&UXPLALL' EQ 'Y').UXPRC00                                      
         AIF   ('&UXPRTN' NE 'Y').UXPRC99                                       
.UXPRC00 ANOP                                                                   
***********************************************************************         
*                                                                     *         
*        RETURN CODE DEFINITIONS                                      *         
*                                                                     *         
***********************************************************************         
*                                                                     *         
* THESE RETURN CODES ARE ACCEPTABLE FROM ALL GIMMPP EXITS             *         
*                                                                     *         
UXPGOOD  EQU   0                  EXIT PROCESSED NORMALLY                       
UXPTPTF  EQU   8                  TERMINATE SYSMOD IN PROCESS                   
UXPTFUNC EQU   12                 TERMINATE FUNCTION IN PROCESS                 
UXPTSMP  EQU   16                 TERMINATE SMP                                 
* THESE RETURN CODES ARE ACCEPTABLE FOR ONLY SPECIFIC EXITS                     
*        SEE EACH EXIT FOR DEFINITION OF ADDITIONAL RETURN CODES                
UXPADD   EQU   20                 ADD A RECORD                                  
UXPDEL   EQU   24                 DELETE A RECORD                               
UXPRNC   EQU   20                 RETRY WITHOUT COMPRESSING                     
********       END OF UXP RETURN CODE DEFINITIONS                               
.UXPRC99 ANOP                                                                   
         AIF   ('&UXPLALL' EQ 'Y').UXP0100                                      
         AIF   ('&UXP001' NE 'Y').UXP0199                                       
.UXP0100 ANOP                                                                   
***********************************************************************         
*                                                                     *         
* GIMMPP EXIT 001 - RECEIVE SMPPTFIN SCAN EXIT                        *         
*                                                                     *         
*    FUNCTION - RECEIVE TIME EXIT TO LOOK AT ALL SMPPTFIN             *         
*               INPUT CARDS PRIOR TO PROCESSING BY GIMMPP             *         
*    RTN CODE - IN ADDITION TO STANDARD                               *         
*               UXPADD - RETURN TO USER EXIT AFTER PROCESSING         *         
*                        CURRENT RECORD. EXIT WILL PUT NEXT RECORD    *         
*                        INTO BUFFER.                                 *         
*               UXPDEL - DO NOT PROCESS CURRENT RECORD. READ NEXT     *         
*                        RECORD AND RETURN TO EXIT.                   *         
*    NOTES    - WHEN GIMMPP HITS END OF FILE ON SMPPTFIN IT WILL SET  *         
*                 UX001RC TO UX001EOF AND CALL EXIT. THE EXIT MAY     *         
*                 ADD RECORDS AFTER END OF FILE BY SETTING THE        *         
*                 RETURN CODE TO UXPADD AND RETURNING. AT THE NEXT    *         
*                 ENTRY THE EXIT MAY START TO ADD RECORDS.            *         
*                                                                     *         
***********************************************************************         
UXPUX001 EQU   1                  VALUE FOR UXPUXNUM TO IDENTIFY                
*                                 REQUEST FOR RECEIVE USER EXIT                 
UX001PRM DSECT                                                                  
UX001RC  DS    CL1                CODE INDICATOR SET TO UX001EOF AT             
*                                 END OF FILE ELSE SET TO 0                     
UX001RCD DS    CL80               SMPPTFIN RECORD                               
UX001EOF EQU   4                  END OF FILE CODE FOR UX001RC                  
*********      END OF UXPUX001 MAPPING                                          
.UXP0199 ANOP  .                  .                                             
         AIF   ('&UXPLALL' EQ 'Y').UXP0200                                      
         AIF   ('&UXP002' NE 'Y').UXP0299                                       
.UXP0200 ANOP                                                                   
**************************************************************        *         
*                                                                     *         
* GIMMPP EXIT 002 - RETRY USER EXIT                                   *         
*                                                                     *         
*    FUNCTION - AFTER SMP HAS DETERMINED THAT A RETRY CAN             *         
*               BE ATTEMPTED (COMPRESS AND RE-INVOKE THE              *         
*               FAILING UTILITY), THE USER EXIT IS CALLED             *         
*               TO DETERMINE IF THE USER WISHES TO PER-               *         
*               FORM THE RETRY.                                       *         
*    RTN CODE - IN ADDITION TO STANDARD                               *         
*               UXPRNC - PERFORM THE RETRY (RE-INVOKE THE             *         
*                        FAILING UTILITY) WITHOUT FIRST               *         
*                        COMPRESSING THE DATA SET.                    *         
*               NOTE:  THE STANDARD RETURN CODE OF UXPPTF             *         
*                      IS INVALID FOR THE RETRY USER EXIT.            *         
*                                                                     *         
**************************************************************        *         
UXPUX002 EQU   2                  VALUE FOR UXPUXNUM TO                         
*                                 IDENTIFY REQUEST FOR                          
*                                 RETRY USER EXIT                               
UX002PRM DSECT                                                                  
UX002DDN DS    CL8                FAILING DDNAME                                
UX002PGM DS    CL8                FAILING UTILITY NAME                          
UX002ACH DS    XL3                ABEND CODE IN HEX (SAME                       
*                                 FORMAT AS SDWA FIELD                          
*                                 SDWACMPC)                                     
UX002RCH DS    XL1                ABEND REASON CODE IN HEX                      
UX002ACP DS    CL3                ABEND CODE IN EBCDIC                          
UX002RCP DS    CL2                ABEND REASON CODE IN EBCDIC                   
UX002LTH EQU   *-UX002PRM         LENGTH OF EXIT 002 PLIST                      
*********      END OF UXPUX002 MAPPING                                          
.UXP0299 ANOP  .                  .                                             
         MEND                          END OF ASSEMBLER VERSION      */         
*%UXPPLS00: ;                                                                   
*/********************************************************************/         
*/*                                                                  */         
*/* GIMMPUXP - PARAMETER LIST TO GIMMPP USER EXIT ROUTINES           */         
*/*                                                                  */         
*/********************************************************************/         
*   %IF XPND_MAC_SW^='N'            /*                               */         
*     %THEN                         /*                               */         
*     %GOTO UXC_EXPAND_01;          /*                               */         
*@LIST OFF;                         /*                               */         
*%UXC_EXPAND_01:;                   /*                               */         
*/*                                                                  */         
*/* THIS MACRO IS USED BY GIMMPP TO INTERFACE WITH THE SMP           */         
*/*      INTERFACE ROUTINE TO THE USER EXITS AND FOR THE             */         
*/*      INTERFACE ROUTINE TO CALL THE USER EXIT ROUTINE.            */         
*/*                                                                  */         
*/* THE LISTS POINTED TO BY UXPCTBAD AND UXPMODAD ARE INTENDED       */         
*/*      FOR FUTURE USE TO POINT TO THE INTERNAL SMP CONTROL         */         
*/*      BLOCKS AND SMP MODULES ACCESSIBLE BY THE USER.              */         
*/*      AT PRESENT NO SUPPORT IS AVAILABLE AND THESE ADDRESSES      */         
*/*      WILL BE SET TO ZERO.                                        */         
*/*                                                                  */         
*/* ONLY THOSE RETURN CODES DEFINED WITHIN THIS MACRO WILL BE        */         
*/*      ACCEPTED BY GIMMPP. IF ANY OTHER VALUES IS RETURNED         */         
*/*      GIMMPP WILL ISSUE AN ERROR MESSAGE AND TERMINATE THE        */         
*/*      CURRENT FUNCTION.                                           */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                  */         
*/* THE EXPANSION OF THIS MACRO IS CONTROLLED BY THE FOLLOWING       */         
*/*      PLS MACRO VARIABLES WHICH MAY BE SET TO 'YES' TO            */         
*/*      INDICATE THAT THE EXPANSION IS TO INCLUDE THE MAPPING FOR   */         
*/*      THE INDICATED EXIT PARAMETER. AT LEAST ONE OF THE VARIABLES */         
*/*      MUST BE SET TO 'YES'                                        */         
*/*                                                                  */         
*/*      UXP_ALL  - REQUEST FOR ALL PARMS FOR ALL USER EXIT ROUTINES */         
*/*      UXP_MAIN - REQUEST FOR MAIN MAPPING OF PARM TO ACTUAL       */         
*/*                 USER EXIT                                        */         
*/*      UXP_RTN  - REQUEST FOR EXPANSION OF VALID RETURN CODE       */         
*/*                 CONSTANTS.                                       */         
*/*      UXP_001  - REQUEST FOR MAPPING OF PARM FOR RECEIVE EXIT(001)*/         
*/*      UXP_002  - REQUEST FOR MAPPING OF PARM FOR RETRY            */         
*/*                 EXIT (002)                                       */         
*/*      UXP_A01  - REQUEST FOR CONVERT PARAMETER MAPPING    @Z21SP00*/         
*/*      UXP_A02  - REQUEST FOR BUILD   PARAMETER MAPPING    @Z22SP00*/         
*/*                                                                  */         
*/*      UXP_XXX_BASE - FOR EACH OF THE ABOVE SECTIONS THERE IS      */         
*/*                 AN ADDITIONAL VARIABLE TO CONTROL THE            */         
*/*                 ATTRIBUTES OF THE EXPANSION. XXX IS EQUAL TO     */         
*/*                 THE SECOND QUALIFIER OF THE ABOVE VARIABLES.     */         
*/*                 IF SET THE MAPPING WILL EXPAND WITH THE VALUES   */         
*/*                 SPECIFIED.                                       */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                  */         
*/* CHANGE_ACTIVITY = GIMSMP 17.00                           @HMP1700*/         
*/*                                                                  */         
*/*      11.00 - Z21SP00, INITIAL RELEASE OF GIMSMP          @Z21SP00*/         
*/*      12.00 - Z22SP00, SMP/E VERSION 1 RELEASE 2          @Z22SP00*/         
*/*      13.00 - Z22SP00, SMP/E VERSION 1 RELEASE 3          @HMP1300*/         
*/*      15.00 - HMP1500, SMP/E VERSION 1 RELEASE 5          @HMP1500*/         
*/*            - SMP/E TO SMP/E CONVERSION                   @CNVE015*/         
*/*    15.1.00 - HMP1502, SMP/E VERSION 1 RELEASE 5.1        @HMP1502*/         
*/*      16.00 - HMP1600, SMP/E VERSION 1 RELEASE 6          @HMP1600*/         
*/*      17.00 - HMP1700, SMP/E VERSION 1 RELEASE 7          @HMP1700*/         
*/*                                                                  */         
*/********************************************************************/         
*%IF UXP_MAIN_BASE=''               /*                               */         
*  %THEN                            /*                               */         
*  %UXP_MAIN_BASE=UXP_ALL_BASE;     /*                               */         
*%IF UXP_ALL='YES'                  /* IF REQUEST FOR ALL PARTS      */         
*   %THEN                           /*                               */         
*   %GOTO UXPMN01;                  /*                               */         
*%IF UXP_MAIN='YES'                 /* IF REQUEST FOR MAIN SEGMENT   */         
*   %THEN                           /*                               */         
*   %GOTO UXPMN01;                  /*                               */         
*%GOTO UXPMN99;                     /*                               */         
*%UXPMN01: ;                        /*                               */         
*   DECLARE                         /*                               */         
*     1 GIMMPUXP BDY(WORD)                                                      
*       UXP_MAIN_BASE                                                           
*       ,                           /*                               */         
*       3 UXPUXNUM FIXED(15),       /* USER EXIT IDENTIFICATION      */         
*       3 *        CHAR(2),         /* UNUSED                        */         
*       3 UXPUXNAM CHAR(8),         /* USER EXIT NAME                */         
*       3 UXPUXAD  PTR(31),         /* USER EXIT ADDRESS             */         
*       3 UXPFUNCT CHAR(8),         /* SMP FUNCTION IN PROCESS       */         
*       3 UXPPRMAD PTR(31),         /* ADDR OF USER EXIT PARM LIST   */         
*       3 UXPLOJAD PTR(31),         /* FOR USE BY USER EXITS         */         
*       3 UXPLOEAD PTR(31),         /* FOR USE BY USER EXITS         */         
*       3 UXPCTBAD PTR(31),         /* ADDR OF SMP CONTROL BLOCKS    */         
*       3 UXPMODAD PTR(31);         /* ADDR OF SMP MODULES           */         
*%UXPMN99: ;                        /*                               */         
*%IF UXP_ALL='YES'                  /* IF REQUEST FOR ALL PARTS      */         
*   %THEN                           /*                               */         
*   %GOTO UXPRTN01;                 /*                               */         
*%IF UXP_RTN='YES'                  /* IF REQUEST FOR RETURN CODES   */         
*   %THEN                           /*                               */         
*   %GOTO UXPRTN01;                 /*                               */         
*%GOTO UXPRTN99;                    /*                               */         
*%UXPRTN01: ;                       /*                               */         
*/********************************************************************/         
*/*                                                                  */         
*/*    THESE ARE THE COMMON RETURN CODES THAT MAY BE RETURNED FROM   */         
*/*    ANY OF THE GIMMPP USER EXITS                                  */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*   DECLARE                         /*                               */         
*     UXPGOOD  CONSTANT(0),         /* PROCESSING COMPLETED OK       */         
*     UXPTPTF  CONSTANT(8),         /* TERMINATE SYSMOD              */         
*     UXPTFUNC CONSTANT(12),        /* TERMINATE FUNCTION            */         
*     UXPTSMP  CONSTANT(16);        /* TERMINATE SMP                 */         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*    THESE RETURN CODES ARE ACCEPTABLE FOR ONLY SPECIFIC EXITS.    */         
*/*    SEE EACH EXIT FOR THE DEFINITION OF ADDITIONAL RETURN CODES.  */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*   DECLARE                         /*                               */         
*     UXPADD   CONSTANT(20),        /* ADD RCD AFTER CURRENT ONE     */         
*     UXPDEL   CONSTANT(24),        /* DELETE CURRENT RECORD         */         
*     UXPRNC   CONSTANT(20);        /* RETRY WITHOUT                 */         
*                                   /* COMPRESSING                   */         
*%UXPRTN99: ;                       /*                               */         
*%IF UXP_001_BASE=''                /* IF NO 001 BASE THEN USE ALL   */         
*  %THEN                            /*                               */         
*  %UXP_001_BASE=UXP_ALL_BASE;      /*                               */         
*%IF UXP_ALL='YES'                  /* IF TOTAL UXP LIST REQUESTED   */         
*  %THEN                            /*                               */         
*  %GOTO UXP00101;                  /*                               */         
*%IF UXP_001='YES'                  /* IF EXIT 001 PARM REQUESTED    */         
*  %THEN                            /*                               */         
*  %GOTO UXP00101;                  /*                               */         
*%GOTO UXP00199;                    /*                               */         
*%UXP00101: ;                       /*                               */         
*?EJECT;                                                                        
*/********************************************************************/         
*/*                                                                  */         
*/* GIMMPP EXIT 001                                                  */         
*/*                                                                  */         
*/*   FUNCTION - RECEIVE TIME EXIT TO LOOK AT ALL SMPPTFIN           */         
*/*              CONTROL CARDS PRIOR TO PROCESSING BY GIMMPP.        */         
*/*   RTN CODE - IN ADDITION TO STANDARD                             */         
*/*              UXPADD - RETURN TO USER EXIT AFTER PROCESSSING      */         
*/*                       CURRENT RECORD BUT BEFORE READING NEXT     */         
*/*                       RECORD.                                    */         
*/*                       USER EXIT WILL ADD A RECORD TO BUFFER      */         
*/*                       TO BE PROCESSED DURING SECOND CALL.        */         
*/*              UXPDEL - DO NOT PROCESS CURRENT RECORD IN BUFFER.   */         
*/*                       READ NEXT RECORD AND RETURN TO EXIT.       */         
*/*   NOTES    - WHEN GIMMPP HITS END OF FILE ON SMPPTFIN IT WILL    */         
*/*              SET UX001RC TO UX001EOF AND CALL EXIT. THE EXIT     */         
*/*              MAY CONTINUE TO ADD RECORDS AFTER END OF FILE BY    */         
*/*              RETURNING CODE UXPADD IN REGISTER 15. WHEN A        */         
*/*              RETURN CODE UXPGOOD IS RETURN SMP WILL CONTINUE     */         
*/*              WITH NORMAL EOF PROCESSING.                         */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*   DECLARE                         /*                               */         
*     UXPUX001 FIXED(15) CONSTANT(1);/* RECEIVE USER EXIT - VALUE SET           
*                                      UXPUXNUM UPON ENTRY           */         
*   DECLARE                         /*                               */         
*     1 UX001PRM                                                                
*       UXP_001_BASE                                                            
*       ,                           /*                               */         
*       3 UX001RC  FIXED(8),        /* SET TO UX001EOF AT END OF FILE*/         
*       3 UX001RCD CHAR(80);        /* SMPPTFIN RECORD               */         
*   DECLARE                         /*                               */         
*     UX001EOF FIXED(8) CONSTANT(4);/* TO INDICATE END OF FILE       */         
*%UXP00199: ;                       /*                               */         
*%IF UXP_002_BASE=''                /* IF NO 002 BASE THEN           */         
*  %THEN                            /*   USE ALL                     */         
*  %UXP_002_BASE=UXP_ALL_BASE;      /*                               */         
*%IF UXP_ALL='YES'                  /* IF TOTAL UXP LIST             */         
*  %THEN                            /*   REQUESTED                   */         
*  %GOTO UXP00201;                  /*                               */         
*%IF UXP_002='YES'                  /* IF EXIT 002 PARM              */         
*  %THEN                            /*   REQUESTED                   */         
*  %GOTO UXP00201;                  /*                               */         
*%GOTO UXP00299;                    /*                               */         
*%UXP00201: ;                       /*                               */         
*?EJECT;                                                                        
*/********************************************************************/         
*/*                                                                  */         
*/* GIMMPP EXIT 002 - RETRY USER EXIT                                */         
*/*                                                                  */         
*/*   FUNCTION - AFTER SMP HAS DETERMINED THAT A RETRY CAN           */         
*/*              BE ATTEMPTED (COMPRESS AND RE-INVOKE THE            */         
*/*              FAILING UTILITY), THE USER EXIT IS CALLED           */         
*/*              TO DETERMINE IF THE USER WISHES TO PER-             */         
*/*              FORM THE RETRY.                                     */         
*/*   RTN CODE - IN ADDITION TO STANDARD                             */         
*/*              UXPRNC - PERFORM THE RETRY (RE-INVOKE THE           */         
*/*                       FAILING UTILITY) WITHOUT FIRST             */         
*/*                       COMPRESSING THE DATA SET.                  */         
*/*              NOTE:  THE STANDARD RETURN CODE OF UXPPTF           */         
*/*                     IS INVALID FOR THE RETRY USER EXIT.          */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*   DECLARE                         /*                               */         
*     UXPUX002 FIXED(15) CONSTANT(2);/* RETRY USER EXIT - VALUE FOR             
*                                      UXPUXNUM ON ENTRY             */         
*   DECLARE                         /*                               */         
*     1 UX002PRM                                                                
*       UXP_002_BASE                                                            
*       ,                           /*                               */         
*       3 UX002DDN CHAR(8),         /* FAILING DDNAME                */         
*       3 UX002PGM CHAR(8),         /* FAILING UTILITY NAME          */         
*       3 UX002ACH BIT(24),         /* ABEND CODE IN HEX - SAME FORMAT          
*                                      AS SDWACMPC                   */         
*       3 UX002RCH BIT(8),          /* ABEND REASON CD (HEX)         */         
*       3 UX002ACP CHAR(3),         /* ABEND CODE IN EBCDIC          */         
*       3 UX002RCP CHAR(2);         /* ABEND REASON CD (EBCD)        */         
*%UXP00299: ;                       /*                               */         
*%IF UXP_A01_BASE=''                /* IF NO A01 BASE THEN   @Z21SP00*/         
*  %THEN                            /*   USE ALL             @Z21SP00*/         
*  %UXP_A01_BASE=UXP_ALL_BASE;      /*                       @Z21SP00*/         
*%IF UXP_ALL='YES'                  /* IF TOTAL UXP LIST     @Z21SP00*/         
*  %THEN                            /*   REQUESTED           @Z21SP00*/         
*  %GOTO UXPA0101;                  /*                       @Z21SP00*/         
*%IF UXP_A01='YES'                  /* IF EXIT A01 PARM      @Z21SP00*/         
*  %THEN                            /*   REQUESTED           @Z21SP00*/         
*  %GOTO UXPA0101;                  /*                       @Z21SP00*/         
*%GOTO UXPA0199;                    /*                       @Z21SP00*/         
*%UXPA0101: ;                       /*                       @Z21SP00*/         
*?EJECT;                                                                        
*/********************************************************************/         
*/*                                                                  */         
*/* GIMSMP EXIT A01 - SMP CONVERT LMOD CALL                  @Z21SP00*/         
*/*                                                          @Z21SP00*/         
*/*   FUNCTION - TO CALL THE SMP CONVERT ROUTINE             @Z21SP00*/         
*/*   RTN CODE - IN ADDITION TO STANDARD                     @Z21SP00*/         
*/*              NONE                                        @Z21SP00*/         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*   DECLARE                         /*                               */         
*     UXPUXA01 FIXED(15) CONSTANT(2561); /* CONVERT EXIT VALUE FOR              
*                                      UXPUXNUM ON ENTRY     @Z21SP00*/         
*   DECLARE                         /*                       @Z21SP00*/         
*     1 UXA01PRM                                                                
*       UXP_A01_BASE                                                            
*       ,                           /*                       @Z21SP00*/         
*       3 UXA01SW BIT(24),          /* GENERAL SWITCHES      @Z21SP00*/         
*         5 UXA01SDS BIT(8),        /* SELECTED DATA SETS    @Z21SP00*/         
*           7 UXA01SW1 BIT(1),      /* CDS  CONVERT REQUEST  @Z21SP00*/         
*           7 UXA01SW2 BIT(1),      /* ACDS CONVERT REQUEST  @Z21SP00*/         
*           7 UXA01SW3 BIT(1),      /* CRQ  CONVERT REQUEST  @Z21SP00*/         
*           7 UXA01SW4 BIT(1),      /* ACRQ CONVERT REQUEST  @Z21SP00*/         
*           7 UXA01SW5 BIT(1),      /* PTS  CONVERT REQUEST  @Z21SP00*/         
*           7 UXA01SW6 BIT(1),      /* SCDS CONVERT REQUEST  @CNVE015*/         
*           7 UXA01SW7 BIT(1),      /* OLDCSI ENTERED        @CNVE015*/         
*           7 UXA01SW8 BIT(1),      /* NEWCSI ENTERED        @CNVE015*/         
*         5 UXA01ETP BIT(16),       /* ENTRY TYPE TO CONVERT @Z21SP00*/         
*           7 UXA01SYS BIT(1),      /* SYSTEM  ENTRY         @Z21SP00*/         
*           7 UXA01ASM BIT(1),      /* ASSEM   ENTRY         @Z21SP00*/         
*           7 UXA01LMD BIT(1),      /* LMOD    ENTRY         @Z21SP00*/         
*           7 UXA01MAC BIT(1),      /* MAC     ENTRY         @Z21SP00*/         
*           7 UXA01MOD BIT(1),      /* MOD     ENTRY         @Z21SP00*/         
*           7 UXA01SRC BIT(1),      /* SRC     ENTRY         @Z21SP00*/         
*           7 UXA01DLB BIT(1),      /* DLIB    ENTRY         @Z21SP00*/         
*           7 UXA01SMD BIT(1),      /* SYSMOD  ENTRY         @Z21SP00*/         
*           7 UXA01MCS BIT(1),      /* MCS     ENTRY         @Z21SP00*/         
*           7 * BIT(7),             /* UNUSED                @Z21SP00*/         
*       3 UXA01CDS CHAR(8),         /* CDS  DDNAME           @Z21SP00*/         
*       3 UXA01ACD CHAR(8),         /* ACDS DDNAME           @Z21SP00*/         
*       3 UXA01CRQ CHAR(8),         /* CRQ  DDNAME           @Z21SP00*/         
*       3 UXA01ACR CHAR(8),         /* ACRQ DDNAME           @Z21SP00*/         
*       3 UXA01PTS CHAR(8),         /* PTS  DDNAME           @CNVE015*/         
*       3 UXA01SCDS CHAR(8),        /* SCDS DDNAME           @CNVE015*/         
*       3 UXA01ODD CHAR(8),         /* OLD CSI DD NAME       @CNVE015*/         
*       3 * CHAR(1),                /* FOR ALIGNMENT         @CNVE015*/         
*       3 UXA01OCSI PTR(31),        /* PTR TO OLDCSI DSN     @CNVE015*/         
*       3 UXA01NCSI PTR(31),        /* PTR TO NEWCSI DSN     @CNVE015*/         
*       3 UXODSNSZ FIXED(16),       /* LENGTH OF OLD DSN     @CNVE015*/         
*       3 UXNDSNSZ FIXED(16);       /* LENGTH OF NEW DSN     @CNVE015*/         
*%UXPA0199: ;                       /*                       @Z21SP00*/         
*%IF UXP_A02_BASE=''                /* IF NO A02 BASE THEN   @Z22SP00*/         
*  %THEN                            /*   USE ALL             @Z22SP00*/         
*  %UXP_A02_BASE=UXP_ALL_BASE;      /*                       @Z22SP00*/         
*%IF UXP_ALL='YES'                  /* IF TOTAL UXP LIST     @Z22SP00*/         
*  %THEN                            /*   REQUESTED           @Z22SP00*/         
*  %GOTO UXPA0201;                  /*                       @Z22SP00*/         
*%IF UXP_A02='YES'                  /* IF EXIT A02 PARM      @Z22SP00*/         
*  %THEN                            /*   REQUESTED           @Z22SP00*/         
*  %GOTO UXPA0201;                  /*                       @Z22SP00*/         
*%GOTO UXPA0299;                    /*                       @Z22SP00*/         
*%UXPA0201: ;                       /*                       @Z22SP00*/         
*?EJECT;                                                                        
*/********************************************************************/         
*/*                                                                  */         
*/* GIMSMP EXIT A02 - SMP BUILD LMOD CALL                    @Z22SP00*/         
*/*                                                          @Z22SP00*/         
*/*   FUNCTION - TO CALL THE SMP BUILD ROUTINE               @Z22SP00*/         
*/*   RTN CODE - IN ADDITION TO STANDARD                     @Z22SP00*/         
*/*              NONE                                        @Z22SP00*/         
*/*   NOTES    - THERE IS NO PARAMETER TO THIS ROUTINE       @Z22SP00*/         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*   DECLARE                         /*                               */         
*     UXPUXA02 FIXED(15) CONSTANT(2562); /* BUILD EXIT VALUE FOR                
*                                      UXPUXNUM ON ENTRY     @Z22SP00*/         
*   DECLARE                         /*                       @Z21SP00*/         
*     1 UXA02PRM BDY(WORD)                                                      
*       UXP_A02_BASE                                                            
*       ,                           /*                       @Z21SP00*/         
*       3 UXA02JOB CHAR(8),         /* DD NAME WHERE JOB CARD CAN BE            
*                                      FOUND                 @Z22SP00*/         
*       3 UXA02MEM CHAR(8),         /* JOBCARD MEMBER NAME   @Z22SP00*/         
*       3 UXA02FMS PTR(31),         /* ADDR OF GTP WITH FMIDS FROM              
*                                      FMIDSET OPERAND (ZERO IF FMIDSET         
*                                      NOT SPECIFIED)        @Z22SP00*/         
*       3 UXA02SW BIT(32),          /* SWITCHES              @HMP0013*/         
*         5 UXA02SW1 BIT(8),        /* FIRST SW              @HMP0013*/         
*         5 UXA02SW2 BIT(8),        /* UNUSED                @HMP0013*/         
*         5 UXA02SW3 BIT(8),        /* UNUSED                @HMP0013*/         
*         5 UXA02SW4 BIT(8);        /* UNUSED                @HMP0013*/         
*%UXPA0299: ;                       /*                       @Z22SP00*/         
*@LIST ON;                          /*                       @Z22SP00*/         
