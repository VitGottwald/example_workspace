*%GOTO   RPLEXTPL;  /*                                                          
         MACRO                                                 @R495808         
         ISTRPLEX &GENEQU=                                     @R495808         
         LCLC  &CHKASM                                             @N1A         
         AIF   ('&GENEQU' EQ 'YES').EQU                        @R495808         
         AGO   .RPLXBAL                                        @R495808         
* ********************************************************************/         
* /*                                                                 */         
* /*     RPL VTAM EXTENSION                                          */         
* /*                                                                 */         
* /*                                                                 */         
* /*   COPYRIGHT:                                                    */         
* /*             Licensed Materials - Property of IBM                */         
* /*             5650-ZOS Copyright IBM Corp. 1987,  2016            */         
* /*             Status = CSV2R2                                     */         
* /*                                                                 */         
* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -           */         
* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY        */         
* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.            */         
* /*                                                                 */         
* /*             SEE COPYRIGHT INSTRUCTIONS.                         */         
* /*                                                                 */         
* /*     ISTRPLEX is VTAM's mapping of the Request Parameter         */         
* /*     List (RPL), IFGRPL, which is passed to VTAM by the          */         
* /*     application.  The RPL is used by application programs       */         
* /*     as a parameter list to pass requests to VTAM.               */         
* /*                                                                 */         
* /*     It is called by the VSAM extension macro (IFGRPLVS)         */         
* /*     under the following conditions:                             */         
* /*                                                                 */         
* /*      PL/AS:  THE MODULE CONTAINING AN INCLUDE FOR IFGRPL SETS   */         
* /*              THE MACRO VARIABLE 'ACBRPLXL' TO 'VTAM' PRIOR      */         
* /*              TO ISSUING THE INCLUDE.                            */         
* /*        BAL:  THE AM=VTAM PARAMETER IS CODED ON THE MACRO        */         
* /*              CALL.                                              */         
* /*                                                                 */         
* /*     CHANGE ACTIVITY                                             */         
* /*     A87886,87986,104886                                 @ZM31226*/         
* /*     CBMM SPLIT SUPPORT                                  @ZA34940*/         
* /*             11/16/78  SNA4 SUPPORT                      @G69AKJP*/         
* /*             10/10/80  APAR OZ48668                      @AZ48668*/         
* /*             12/22/80  DCR  4747.00                      @D5B4747*/         
* /*             12/10/80  DCR  4747.02                      @D5B4747*/         
* /*             01/29/81  DCR  4790.00                      @D5P4790*/         
* /*             02/19/81  DCR  4792.00                      @D5K4792*/         
* /*             06/16/82  PTM  P011080                      @P011080*/         
* /*             01/21/83  DCR  4879.13                      @R487913*/         
* /*             04/12/83  PTM  P012727                      @P012727*/         
* /*             03/09/83  XRF  SUPPORT                      @R489301*/         
* /*             10/24/83  PTM  P014080                      @P014080*/         
* /*             09/08/83  XRF  SUPPORT                      @R489306*/         
* /*             11/04/83  APAR OZ66848                      @AZ66848*/         
* /*             11/16/83  DCR 4911.00                       @R491100*/         
* /*             01/09/84  DCR 4911.01                       @R491101*/         
* /*             06/11/84  DCR 4893.20                       @R489320*/         
* /*             11/01/85  DCR 5048.00                       @R504800*/         
* /*             12/29/85  DCR 4958.08                       @R495808*/         
* /*             10/20/86  ADD RPLCNTRU BIT FOR INQUIRE, CURRNTRU    */         
* /*                                                         @P041786*/         
* /*     02/04/87 - RESTORE RPL DSECT AFTER RPL6X            @P042186*/         
* /*     11/12/87 - RESUME DSECT NAME SET BY CALLER WHEN DSECT=NO,   */         
* /*                NOT ALWAYS IFGRPL                        @P051653*/         
* /*                                                                 */         
* /* $MAC(ISTRPLEX),COMP(API),PROD(VTAM): VTAM RPL EXTENSION         */         
* /*                                                                 */         
* /* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS           */         
* /* ---- -------- ------- ------ ------- -------------------------- */         
* /* $F1= FM8@@CLD HVT3302 890112 109772: MODEL TERMINAL SUPPORT     */         
* /* $D1= OSI00000 VM330   880318 737401: VCNS MACROS CREATION       */         
* /* $01= VM36562  HVT3303 891103 947688: IFGRPL NOT ALWAYS CALLED   */         
* /*                                      DSECT=YES                  */         
* /* $B1= AP@@@CLD HVT3401 890315 496698: PERSISTENT LU-LU SESSIONS  */         
* /* $B2= AA@@@MST HVT3401 891021 042845: CROSS-MEMORY API SUPPORT   */         
* /* $V1= P097154  HVT3401 910718 590029: DELETED AL X03004?? FLAGS  */         
* /* $KF= JN@@@CLD NQNAME1 910318 410106: ENHANCED NQN SUPPORT       */         
* /* $02= OY36649  VM340   911014 349122: QUEUED SESSION TERMINATION */         
* /*                                      SUPPORT (CLSDST & TERMSESS)*/         
* /* $N1= P100612  VM341   920225 086881: ALLOW RPL TO BE ADDED TO   */         
* /*                                      EXISTING DSECT OR CSECT    */         
* /* $KG= P105521  HATAPPN 921103 460208: RPLCHREQ TO RESERVED BIT   */         
* /* $I1= FG@@@MST GENRES  921109 879315: Generic Resource           */         
* /* $T1= P106969  HATAPPN 930121 379299: Replace RPLCHREQ bit       */         
* /* $U2= P110087  GENRES  930818 879315: Downward compatibility     */         
* /* $03= OY65532  EMERALD 930824 358168: IEV038 RECEIVED WHEN       */         
* /*                                      ASSEMBLING MODULE INVOKING */         
* /*                                      IFGRPL                     */         
* /* $U3= P109285  KEEPFRR 931104 879315: Implement FZKDR001, allow  */         
* /*                                      OPTCD=KEEPSRB/NKEEPSRB     */         
* /* $04= OY67066  EMERALD 940201 358168: Add support for INQUIRE    */         
* /*                                      OPTCD=STATUS (AE fix for   */         
* /*                                      OY63087)                   */         
* /* $D2= ID@@@MST FPAPI   941005 143576: HPDT API for APPC          */         
* /* $W1= P117054  VMVSCS  941028 947688: Add conditional CS         */         
* /* $D3= IT@@@MST TSOGR   941026 062811: TSO-Generic Resource       */         
* /* $F2= TNRAPI   CSV2R6  970815 MUELLERA: Add RPLTHRDC             */         
* /* $L1= R12GRAFF CSV1R2  000715 Stevens : LU level GR AFFIN        */         
* /*                                                                 */         
* /* Flag Reason   Release  Date   Origin    Description             */         
* /* ---- -------- -------- ------ --------  ----------------------- */         
* /* $R1= X16MNPRT CSV1R6   031006 GIERLACH: MNPS Predatory Takeover */         
* /* $Y1= R9FINAPV CSV1R9   070110 Cruse   : Lower case causes       */         
* /*                                         ASMA143E assembler msg  */         
* /*                                         (FIN APAR OA19515)      */         
* /* $A1= OA49911  HVT6220  160509 Cruse   : 3270 Data Stream        */         
* /*                                         Monitoring API          */         
* /*                                         (sysroute of OA48802)   */         
* /*******************************************************************/         
* /*                                                                 */         
*%RPLEXTPL: ;                                                                   
*             2 RPLVTEXT,                   /* START OF EXTENSION    */         
*              3 RPLAAREA    PTR(31),       /* ALTERNATE AREA ADDR              
*                                                                    */         
*              3 RPLAARLN    PTR(31),       /* ALTERNATE AREA LENGTH            
*                                                                    */         
*              3 RPLARCLN    PTR(31),       /* ALTERNATE RECORD                 
*                                              LENGTH                */         
*              3 RPLFDBK2    BIT(32) BDY(WORD), /* FEED BACK WORD 2             
*                                                                    */         
*                  5 RPLSSNSI  BIT(16),     /* SYSTEM SENSE                     
*                                              INPUT                 */         
*                    6 RPLDSB  BIT(16),     /* DEVICE STATUS BYTES              
*                                                                    */         
*                      7 RPLDSB1   BIT(8),  /* DEVICE STATUS BYTE 1             
*                                                                    */         
*                        8 RPLSSEI BIT(8),  /* SYSTEM SENSE ERROR               
*                                              CODES                 */         
*                          9 RPLPATHI BIT(1),/* SSENSEI PATH         */         
*                          9 RPLCPMI  BIT(1),/* SSENSEI CPM          */         
*                          9 RPLSTATI BIT(1),/* SSENSEI STATE        */         
*                          9 RPLFII   BIT(1),/* SSENSEI FI           */         
*                          9 RPLRRI   BIT(1),/* SSENSEI RR           */         
*                          9 *        BIT(3),/* RESERVED             */         
*                      7 RPLDSB2   BIT(8),  /* DEVICE STATUS BYTE 2             
*                                                                    */         
*                        8 RPLSSMI PTR(8),  /* SYSTEM SENSE MODIFIER            
*                                              INPUT                 */         
*                  5 RPLUSNSI  PTR(16),     /* USER SENSE                       
*                                              INPUT                 */         
*                    6 RPLESR1 BIT(8),      /* EXTENDED SYSTEM                  
*                                              RESPONSE 1            */         
*                    6 RPLESR2 BIT(8),      /* EXTENDED SYSTEM                  
*                                              RESPONSE 2            */         
*              3 RPLUSFLD    BIT(32),       /* USER FIELD            */         
*              3 RPLOPTC3    BIT(32),       /* VTAM OPTIONS          */         
*                4 RPLOPT9   BIT(8),        /* OPTION BYTE 9         */         
*                  5 RPLLOGON BIT(1),       /* INQ LOGON MESSAGE                
*                                                                    */         
*                  5 RPLDEVCH BIT(1),       /* INQ DEVICE CHAR       */         
*                  5 RPLTERMS BIT(1),       /* INQ TERMS             */         
*                  5 RPLCOUNT BIT(1),       /* INQ COUNTS            */         
*                  5 RPLAPPST BIT(1),       /* INQ APPSTAT           */         
*                  5 RPLINQST BIT(1),       /* INQ STATUS        @04A*/         
*                  5 RPLCIDE  BIT(1),       /* INQ CIDXLATE          */         
*                  5 RPLTOPL  BIT(1),       /* INQ TOP LOGON         */         
*                4 RPLOPT10  BIT(8),        /* OPTION BYTE 10        */         
*                  5 RPLBSCID BIT(1),       /* INQ BSC ID            */         
*                  5 RPLDSPLY BIT(1),       /* INQ DISPLAY           */         
*                  5 RPLSPARM BIT(1),       /* INQ SESSPARM  @Z40BHUC*/         
*                  5 RPLTSKY  BIT(1),       /* INQ SESSKEY   @G40AKSL*/         
*                  5 RPLUSVAR BIT(1),       /* OPTCD = USERVAR                  
*                                                            @R489306*/         
*                  5 RPLUNBND BIT(1),       /* UNBIND (TERMSESS OPTION)         
*                                                            @R491100*/         
*                  5 RPLSONOP BIT(1),       /* OPTCD=NSONCODE!SONCODE           
*                                              0 = NSONCODE                     
*                                              1 = SONCODE   @R491100*/         
*                  5 RPLSENOP BIT(1),       /* OPTCD=NSENSE!SENSE               
*                                              0 = NSENSE                       
*                                              1 = SENSE     @R491100*/         
*                4 RPLOPT11  BIT(8),        /* OPTION BYTE 11        */         
*                  5 RPLQUIES BIT(1),       /* SETLOGON QUIESCE                 
*                                                                    */         
*                  5 RPLSTART BIT(1),       /* SETLOGON START        */         
*                  5 RPLSTOP  BIT(1),       /* SETLOGON STOP         */         
*                  5 RPLHOLD  BIT(1),       /* HOLD (SETLOGON OPTION)           
*                                                            @R491100*/         
*                  5 RPLCNTRU BIT(1),       /* INQUIRE - CURRENT RU             
*                                                            @P041786*/         
*                  5 RPLMTS   BIT(1),       /* OPTCD = MTS       @F1C*/         
*                  5 RPLTERMQ BIT(1),       /* OPTCD = TERMQ     @02C*/         
*                  5 RPLKPSRB BIT(1),       /* OPTCD=KEEPSRB     @U3C*/         
*                    6 RPLFORCE BIT(0),     /* No longer supported,             
*                                              ignored           @U3C*/         
*                4 RPLOPT12  BIT(8),        /* OPTION BYTE 12        */         
*                  5 RPLRSPQD BIT(1),       /* OPTCD=RSPQUED!NRSPQUED           
*                                              0=NRSPQUED/1=RSPQUED             
*                                                            @R491101*/         
*                  5 RPLKEEP  BIT(1),       /* RECEIVE KEEP          */         
*                  5 RPLTRUNC BIT(1),       /* RECEIVE TRUNC         */         
*                  5 RPLNIBTK BIT(1),       /* RECEIVE NIBTK         */         
*                  5 RPLQSESS BIT(1),       /* SMLG QSESSLIM @R504800*/         
*                  5 RPLQNOTE BIT(1),       /* SMLG QNOTENAB @R504800*/         
*                  5 RPLQALL  BIT(1),       /* SMLG QALL     @R504800*/         
*                  5 RPLFMHDR BIT(1),       /* 0=NFMHDR/1=FMHDR                 
*                                                                    */         
*              3 RPLOSENS    BIT(32) BDY(WORD), /* SENSE OUTPUT                 
*                                              DATA                  */         
*                4 RPLSSNSO  BIT(16),       /* SYSTEM SENSE                     
*                                              OUTPUT                */         
*                  5 RPLSSEO   BIT(8),      /* SYSTEM SENSE ERROR CODES         
*                                                                    */         
*                    6 *        BIT(1),     /* RESERVED              */         
*                    6 RPLCPMO  BIT(1),     /* SSENSEO CPM           */         
*                    6 RPLSTATO BIT(1),     /* SSENSEO STATE         */         
*                    6 RPLFIO   BIT(1),     /* SSENSEO FI            */         
*                    6 RPLRRO   BIT(1),     /* SSENSEO RR            */         
*                    6 *        BIT(3),     /* RESERVED              */         
*                  5 RPLSSMO  PTR(8),       /* SYSTEM SENSE MODIFIER            
*                                              OUTPUT                */         
*                4 RPLUSNSO  PTR(16),       /* USER SENSE                       
*                                              OUTPUT        @Y30ASHS*/         
*              3 RPLSAV13 PTR(31),          /* SAVE AREA FOR VTAM               
*                                              FAST PATH     @Y30ASHS*/         
*              3 RPLSIGDA  PTR(31);         /* SIGNAL DATA FIELD                
*                                                            @Z40BHUC*/         
*     DCL  1 *       BASED(ADDR(RPLECB)),   /* RPL EXIT ADDRESS FIELD           
*                                                            @R487913*/         
*            2 RPLAMOD2 BIT(1);             /* SET BY VTAM--WHEN RPLECB         
*                                              IS A ROUTINE POINTER,            
*                                              COPY OF RPLAMODE                 
*                                                            @P012727*/         
*     DCL  1 RPLOF16 BASED(ADDR(RPLKEYLE)), /* BASE AT OFFSET                   
*                                              16                    */         
*            2 RPLRH3        BIT(8),        /* THIRD RH BYTE         */         
*              3 RPLBB       BIT(1),        /* BRACKET -                        
*                                              0=NBB 1=BB            */         
*              3 RPLEB       BIT(1),        /* BRACKET -                        
*                                              0=NEB 1=EB            */         
*              3 RPLCMD      BIT(1),        /* CHNGDIR -                        
*                                              0=NCMD 1=CMD          */         
*              3 RPLCHREQ    BIT(1),        /* Not used by VTAM, but            
*                                              must be left in for              
*                                              other products who may           
*                                              clear this bit                   
*                                              explicitly   @KGC @T1C*/         
*              3 RPLCSI      BIT(1),        /* 0=STANDARD  -  CODESEL           
*                                              1=ALT         @Z40BHUC*/         
*              3 *           BIT(2),        /* RESERVED      @D5P4790*/         
*              3 RPLCEB      BIT(1),        /* BRACKET-CONDITIONAL END          
*                                              0=NCEB 1=CEB  @D5P4790*/         
*            2 RPLSRTYP      BIT(8),        /* SEND OR RECEIVE                  
*                                              TYPE                  */         
*              3 RPLSTYPE    BIT(4),        /* SEND TYPE             */         
*                4 RPLSRESP  BIT(1),        /* STYPE -                          
*                                              0=REQ 1=RESP          */         
*                4 RPLS3270  BIT(1),        /* IDS3270 -                        
*                                              0 - APPL NOT MONITORING          
*                                              1 - APPL MONITORING              
*                                                                @A1A*/         
*                4 *         BIT(2),        /* RESERVED              */         
*              3 RPLRTYPE    BIT(4),        /* RECEIVE TYPE          */         
*                4 RPLRRESP  BIT(1),        /* RTYPE -                          
*                                              1=RESP 0=NRESP        */         
*                4 RPLNFSYN  BIT(1),        /* RTYPE - 0=DFSYN                  
*                                              1=NDFSYN              */         
*                4 RPLDFASY  BIT(1),        /* RTYPE - 0=NDFASY                 
*                                              1=DFASY               */         
*                4 *         BIT(1),        /* RESERVED      @Z40BHUC*/         
*            2 RPLCHN        BIT(8),        /* POSITION IN RU CHAIN             
*                                              AND APPC FLAGS        */         
*              3 RPLFIRST    BIT(1),        /* CHAIN FIRST           */         
*              3 RPLMIDLE    BIT(1),        /* CHAIN MIDDLE          */         
*              3 RPLLAST     BIT(1),        /* CHAIN LAST            */         
*              3 RPLONLY     BIT(1),        /* CHAIN ONLY            */         
*              3 RPLVACS     BIT(1),        /* 1=VTAM APPC CONTROLLED           
*                                              SESSION (APPCCMD SHOULD          
*                                              BE ISSUED)    @R495808*/         
*              3 RPLAPPC     BIT(1),        /* APPC FLAG                        
*                                              0=APPLICATION IS THE             
*                                              REQUEST ORIGINATOR               
*                                              1=APPC/VTAM IS THE               
*                                              REQUEST ORIGINATOR               
*                                                            @R495808*/         
*              3 *           BIT(2),        /* RESERVED              */         
*            2 RPLVTFL1      BIT(8),        /* VTAM FLAGS            */         
*              3 RPLXMEM     BIT(1),        /* 1=CROSS-MEMORY API MODE          
*                                              REQUEST, 0=NOT A CROSS           
*                                              MEMORY API MODE REQUEST          
*                                                                @B2C*/         
*              3 RPLVTUSE    BIT(1),        /* 0=APPL 1=SYSTEM                  
*                                                                    */         
*              3 RPLAUTUS    BIT(1),        /* AUTHORIZED PROGRAM               
*                                                            @AZ66848*/         
*              3 RPLTNDSP    BIT(1),        /* DOMAIN REQ    @G40AKCM*/         
*              3 RPLTLGAC    BIT(1),        /* LOGON ACCOMPLISHED               
*                                                            @G40AKCM*/         
*              3 RPLAMODE    BIT(1),        /* SET BY VTAM--ADDRESSING          
*                                              MODE IN WHICH RPL EXIT           
*                                              WILL BE INVOKED. 1 MEANS         
*                                              31-BIT MODE.  @P012727*/         
*              3 RPLRSPNM    BIT(1),        /* AT LEAST ONE RESPONSE            
*                                              ON NORMAL FLOW INBOUND           
*                                              RESPONSE QUEUE                   
*                                                            @R491101*/         
*              3 RPLRSPQR    BIT(1),        /* AT LEAST ONE QRI                 
*                                              RESPONSE ON NORMAL FLOW          
*                                              INBOUND DATA QUEUE               
*                                                            @R491101*/         
*            2 RPLVTFL2      BIT(8),        /* POST/RESPOND                     
*                                              FLAGS                 */         
*              3 RPLPOSTV    BIT(4),        /* POST FLAGS            */         
*                4 RPLSCHED  BIT(1),        /* POST -                           
*                                              0=RESP 1=SCHED        */         
*                4 *         BIT(3),        /* RESERVED              */         
*              3 RPLRESP     BIT(4),        /* RESPOND FLAGS         */         
*                4 RPLQRI    BIT(1),        /* RESPOND -                        
*                                             0=NQREQ 1=QREQ @G40AKSL*/         
*                4 RPLEX     BIT(1),        /* RESPOND -                        
*                                              0=NEX 1=EX            */         
*                4 RPLNFME   BIT(1),        /* RESPOND -                        
*                                              0=FME 1=NFME          */         
*                4 RPLRRN    BIT(1),        /* RESPOND -                        
*                                              0=NRRN 1=RRN          */         
*            2 RPLCNTRL      CHAR(3),       /* RU CONTROL                       
*                                              CODES                 */         
*              3 RPLCNTDF    BIT(8),        /* DATA FLOW CONTROL                
*                                              CODES                 */         
*                4 RPLDATA   BIT(1),        /* CONTROL DATA          */         
*                4 RPLCNCEL  BIT(1),        /* CONTROL CANCEL        */         
*                4 RPLQC     BIT(1),        /* CONTROL QC            */         
*                4 RPLQEC    BIT(1),        /* CONTROL QEC           */         
*                4 RPLCHASE  BIT(1),        /* CONTROL CHASE         */         
*                4 RPLRELQ   BIT(1),        /* CONTROL RELQ          */         
*                4 RPLQI     BIT(1),        /* RESERVED              */         
*                4 *         BIT(1),        /* RESERVED              */         
*              3 RPLCNTDC    BIT(8),        /* DATA FLOW CONTROL CTD            
*                                                                    */         
*                4 RPLBID    BIT(1),        /* CONTROL BID           */         
*                4 RPLRTR    BIT(1),        /* CONTROL RTR           */         
*                4 RPLLUS    BIT(1),        /* CONTROL LUS           */         
*                4 RPLSIGNL  BIT(1),        /* CONTROL SIGNAL        */         
*                4 RPLTBIND  BIT(1),        /* CONTROL BIND  @G40AKSL*/         
*                4 RPLTUNBD  BIT(1),        /* CONTROL UNBIND                   
*                                                            @G40AKSL*/         
*                4 RPLSBI    BIT(1),        /* CONTROL SBI   @G40AKSL*/         
*                4 RPLBIS    BIT(1),        /* CONTROL BIS   @G40AKSL*/         
*              3 RPLCNTSC    BIT(8),        /* SESSION CONTROL                  
*                                              CODES                 */         
*                4 RPLSDT    BIT(1),        /* CONTROL SDT           */         
*                4 RPLCLEAR  BIT(1),        /* CONTROL CLEAR         */         
*                4 RPLSTSN   BIT(1),        /* CONTROL STSN          */         
*                4 RPLSHUTD  BIT(1),        /* CONTROL SHUTD         */         
*                4 RPLSHUTC  BIT(1),        /* CONTROL SHUTC         */         
*                4 RPLRQR    BIT(1),        /* CONTROL RQR           */         
*                4 RPLRSHUT  BIT(1),        /* CONTROL RSHUTD        */         
*                4 RPLSWTCH  BIT(1);        /* CONTROL=SWITCH                   
*                                                            @R489301*/         
*                                                                               
*     DCL  1 RPLOF28 BASED(ADDR(RPLTCBPT)), /* BASE ON RPLTCBPT                 
*                                                            @D5B4747*/         
*            2 RPLUSERH CHAR(4),     /* USER RH              @D5B4747*/         
*              3 RPLURH   CHAR(3),   /* USER RH              @D5B4747*/         
*              3 RPLSONCD CHAR(1);   /* SON CODE (UNBIND TYPE CODE)             
*                                                            @R491100*/         
*     DCL  1 RPLOF4  BASED(ADDR(RPLOPT4)),/* BASE ON RPLOPT4     @B1A*/         
*            2 RPLO4 BIT(8),         /* VTAM OPTION BYTE 4       @B1A*/         
*              3 RPLOPT4X BIT(8),    /* Extended OPTCD value     @I1A*/         
*                                                                               
*              /* NOTE: The following RPLO4 indicators are defined for          
*                 migration reference.  THE SEVEN INDICATORS BELOW ONLY         
*                 HAVE MEANING WHEN RPLEXTOP IS SET OFF]]  If the               
*                 RPLEXTOP indicator is on, the value of the byte is            
*                 significant, not individual bit values.        @U2C*/         
*                                                                               
*                4 RPLPERS  BIT(1),  /* SETLOGON PERSIST         @B1A*/         
*                4 RPLNPERS BIT(1),  /* SETLOGON NPERSIST        @B1A*/         
*                4 RPLINQPS BIT(1),  /* INQUIRE PERSESS          @B1A*/         
*                4 RPLOPRES BIT(1),  /* OPNDST RESTORE           @B1A*/         
*                4 RPLSLTMR BIT(1),  /* PSTIMER SPECIFIED ON THE                
*                                       SETLOGON PERSIST MACRO   @B1A*/         
*                4 RPLNQN   BIT(1),  /* INQUIRE OPTCD=NQN        @KFC*/         
*                4 *        BIT(1),  /* RESERVED                 @I1C*/         
*                                                                               
*              /* The following bit determines extended or non-extended         
*                 use of the OPT4 byte.                          @I1A*/         
*                                                                               
*                4 RPLEXTOP BIT(1);  /* 1=OPT4X contains an extended            
*                                       OPTCD value, individual bit             
*                                       indicators are not meaningful           
*                                       0=individual bit indicators             
*                                       in RPLO4 are meaningful  @I1A*/         
*                                                                               
*     DCL  1 RPLOF56 BASED(ADDR(RPLOPT5)),/* BASE ON RPLOPT5 @G69AKJP*/         
*            2 RPLO5 BIT(8),         /* VTAM OPTION BYTE 5   @G69AKJP*/         
*              3 *   BIT(1),         /* RESERVED             @G96AKJP*/         
*              3 RPLTNFY BIT(1),     /* THIRD PARTY NOTIFY   @G69AKJP*/         
*              3 *   BIT(2),         /* RESERVED                 @F2A*/         
*              3 RPLTHRDC BIT(1),    /* CS/390 RESERVED          @F2A*/         
*              3 *   BIT(2),         /* RESERVED                 @F2C*/         
*              3 RPLCNDCS BIT(1);    /* Conditional CS (with RPLDLGIN):         
*                                       RPLDLGIN=1 & RPLCNDCS=1 means           
*                                       conditional CS mode,                    
*                                       RPLDLGIN=1 & RPLCNDCS=0 means           
*                                       normal CS mode           @W1A*/         
*                                                                               
*     DCL  1 RPLOF57 BASED(ADDR(RPLOPT6)),  /* BASE ON RPLOPT6                  
*                                                            @D5B4747*/         
*            2 RPLO6    BIT(8),      /* VTAM OPTION BYTE 6   @D5B4747*/         
*              3 *   BIT(5),         /* RESERVED                 @D2C*/         
*              3 RPLXBFL  BIT(1),    /* Extended Buffer List being              
*                                       used                     @D2A*/         
*              3 RPLBUFFL BIT(1),    /* BUFFER LIST BEING USED                  
*                                                            @D5B4747*/         
*              3 RPLCONTC BIT(1),    /* CONTINUE CHAIN IF NEGATIVE              
*                                       RESPONSE IS RECEIVED @D5B4747*/         
*            2 RPLO7    BIT(8),      /* VTAM OPTION BYTE 7   @D5B4747*/         
*              3 *   BIT(2),         /* RESERVED             @D5B4747*/         
*              3 RPLBCKUP  BIT(1),   /* OPTCD = BACKUP       @R489306*/         
*              3 *   BIT(4),         /* RESERVED             @D5B4747*/         
*              3 RPLLMPEO BIT(1),    /* VTAM IS TO ENFORCE MAXIMUM              
*                                       RU SIZE              @D5B4747*/         
*            2 RPLO8    BIT(8),      /* VTAM OPTION BYTE 8   @D5B4747*/         
*              3 *   BIT(4),         /* RESERVED        @D5B4747 @D3C*/         
*              3 RPLMAXSP BIT(1),    /* MAXSESS SPECIFIED ON THE                
*                                       SETLOGON GNAMEADD MACRO  @D3A*/         
*              3 *   BIT(2),         /* RESERVED                 @D3A*/         
*              3 RPLUSRRH BIT(1);    /* 1=OPTCD=USERRH SPECIFIED                
*                                       0=OPTCD=NUSERRH SPECIFIED               
*                                                            @D5B4747*/         
*                                                                               
*     DCL  1 RPLOF60 BASED(ADDR(RPLRBAR)),  /* BASE AT OFFSET                   
*                                              60                    */         
*            2 RPLOBSQV      FIXED(16),     /* STSN OUTBOUND SEQ. NO.           
*                                              SEQUENCE NUMBER OF               
*                                              LAST RU OF A LARGE               
*                                              MESSAGE SEND  @D5B4747*/         
*            2 RPLIBSQV      FIXED(16),     /* STSN INBOUND                     
*                                              SEQ. NO.              */         
*            2 RPLOBSQ       BIT(8),        /* STSN OUTBOUND ACTION             
*                                              CODES                 */         
*              3 RPLOSET     BIT(1),        /* OBSQAC SET            */         
*              3 RPLOTST     BIT(1),        /* OBSQAC TESTSET        */         
*              3 RPLORSET    BIT(1),        /* OBSQAC RESET          */         
*              3 RPLOIGN     BIT(1),        /* OBSQAC IGNORE         */         
*              3 RPLOPOS     BIT(1),        /* OBSQAC TESTPOS        */         
*              3 RPLONEG     BIT(1),        /* OBSQAC TESTNEG        */         
*              3 RPLOINV     BIT(1),        /* OBSQAC INVALID        */         
*              3 *           BIT(1),        /* RESERVED              */         
*            2 RPLIBSQ       BIT(8),        /* STSN INBOUND ACTION              
*                                              CODES                 */         
*              3 RPLISET     BIT(1),        /* IBSQAC SET            */         
*              3 RPLITST     BIT(1),        /* IBSQAC TESTSET        */         
*              3 RPLIRSET    BIT(1),        /* IBSQAC RESET          */         
*              3 RPLIIGN     BIT(1),        /* IBSQAC IGNORE         */         
*              3 RPLIPOS     BIT(1),        /* IBSQAC TESTPOS        */         
*              3 RPLINEG     BIT(1),        /* IBSQAC TESTNEG        */         
*              3 RPLIINV     BIT(1),        /* IBSQAC INVALID        */         
*              3 *           BIT(1),        /* RESERVED              */         
*            2 RPLSEQNO      FIXED(16);     /* SEQUENCE NUMBER       */         
*                                                                               
*     DCL  1 RPLOF68 BASED(ADDR(RPLEXTDS)), /* BASE AT OFFSET 68 @D2A*/         
*            2 *             BIT(7),  /* See RPLEXTDS            @D2A*/         
*            2 RPLXSRV       BIT(1);  /* Entire XBUFLST accepted                
*                                        by VTAM                 @D2A*/         
*     DCL      ISTRPL BASED (ADDR(IFGRPL))  /* ISTRPL LENGTH         */         
*                            CHAR(LENGTH(IFGRPL));                              
*        %INCLUDE SYSLIB(ISTRPLFB)  ;       /* INCLUDE FEEDBACK CODES*/         
*                                           /* MACRO                 */         
*        %INCLUDE SYSLIB(ISTGLBAL)  ;       /* INCLUDE AMSI GLOBALS  */         
*                                           /* MACRO         @D5K4792*/         
*        %INCLUDE SYSLIB(ISTRPL6X)  ;       /* INCLUDE LU 6.2        */         
*                                           /* EXTENSION TO THE RPL  */         
*                                           /*               @R495808*/         
*                                                                               
*/********************************************************************/         
*/* CONSTANT VALUES FOR "RPLOPT4X"                                   */         
*/********************************************************************/         
*/* The following constant values are allowed for Extended OPTCD     */         
*/* values in RPLOPT4X.  (NOTE:  All extended OPTCD values must have */         
*/* the low-order bit (RPLEXTOP) set on, to indicate that the byte   */         
*/* value of option byte 4 is significant rather than individual bit */         
*/* settings. This allows reuse of bits in other combinations to     */         
*/* give more possible OPTCDs.                                   @U2C*/         
*/********************************************************************/         
*   DCL RPLSTGNA BIT(8) CONSTANT('01'X);  /* SETLOGON GNAMEADD   @I1A*/         
*   DCL RPLSTGND BIT(8) CONSTANT('03'X);  /* SETLOGON GNAMEDEL   @I1A*/         
*   DCL RPLSTGNS BIT(8) CONSTANT('05'X);  /* SETLOGON GNAMESUB   @D3A*/         
*                                                                               
*   DCL RPLIQSNM BIT(8) CONSTANT('21'X);  /* INQUIRE SESSNAME    @I1A*/         
*                                                                               
*   DCL RPLCGEAF BIT(8) CONSTANT('41'X);  /* CHANGE ENDAFFIN     @I1A*/         
*   DCL RPLCGEF  BIT(8) CONSTANT('43'X);  /* CHANGE ENDAFFNF     @L1A*/         
*   DCL RPLSP_NOTIMER_FTOALL BIT(8)  CONSTANT('81'X); /* SETLOGON               
*                                            PERSIST with no PSTIMER            
*                                            and FORCETKO=ALL                   
*                                                           @R1A @Y1C*/         
*   DCL RPLSP_NOTIMER_FTONONE BIT(8) CONSTANT('83'X); /* SETLOGON               
*                                            PERSIST with no PSTIMER            
*                                            but FORCETKO=NONE                  
*                                                           @R1A @Y1C*/         
*   DCL RPLSP_NOTIMER_FTOSNGL BIT(8) CONSTANT('85'X); /* SETLOGON               
*                                            PERSIST with no PSTIMER            
*                                            but FORCETKO=SINGLE                
*                                                           @R1A @Y1C*/         
*   DCL RPLSP_NOTIMER_FTOMULT BIT(8) CONSTANT('87'X); /* SETLOGON               
*                                            PERSIST with no PSTIMER            
*                                            but FORCETKO=MULTI                 
*                                                           @R1A @Y1C*/         
*   DCL RPLSP_TIMER_FTOALL  BIT(8) CONSTANT('89'X); /* SETLOGON PERSIST         
*                                            with PSTIMER and                   
*                                            FORCETKO=ALL   @R1A @Y1C*/         
*   DCL RPLSP_TIMER_FTONONE BIT(8) CONSTANT('8B'X); /* SETLOGON PERSIST         
*                                            with PSTIMER and                   
*                                            FORCETKO=NONE  @R1A @Y1C*/         
*   DCL RPLSP_TIMER_FTOSNGL BIT(8) CONSTANT('8D'X); /* SETLOGON PERSIST         
*                                            with PSTIMER and                   
*                                            FORCETKO=SINGLE                    
*                                                           @R1A @Y1C*/         
*   DCL RPLSP_TIMER_FTOMULT BIT(8) CONSTANT('8F'X); /* SETLOGON PERSIST         
*                                            with PSTIMER and                   
*                                            FORCETKO=MULTI @R1A @Y1C*/         
*/********************************************************************/         
*/*                                                                  */         
*/* THE FOLLOWING CONSTANT VALUES ARE THOSE ALLOWED TO BE RECORDED   */         
*/* IN "RPLREQ" AND/OR REGISTER 0 WHEN AN APPCCMD MACRO IS ISSUED.   */         
*/*                                                          @R495808*/         
*/********************************************************************/         
*     DCL  RPL6APPC BIT(8) CONSTANT ('62'X); /* RPLREQ VALUE                    
*                                          WHEN APPCCMD ISSUED                  
*                                          EXCEPT CONTROL=CHECK                 
*                                                            @R495808*/         
*     DCL  RPL6CHEK BIT(8) CONSTANT ('6C'X); /* RPLREQ VALUE                    
*                                          WHEN APPCCMD CONTROL=                
*                                          CHECK IS ISSUED   @R495808*/         
*/********************************************************************/         
*/*                                                                  */         
*/* THE FOLLOWING CONSTANT VALUES ARE THOSE ALLOWED TO BE RECORDED   */         
*/* IN "RPLREQ" AND/OR REGISTER 0 WHEN A VCNSCMD MACRO IS ISSUED.    */         
*/*                                                              @D1A*/         
*/********************************************************************/         
*     DCL  RPL3VCNS BIT(8) CONSTANT ('32'X); /* REGISTER 0 AND                  
*                                          RPLREQ VALUE WHEN                    
*                                          A VCNSCMD IS ISSUED                  
*                                          EXCEPT CONTROL=CHECK                 
*                                                                @D1A*/         
*     DCL  RPL3CHEK BIT(8) CONSTANT ('3C'X); /* REGISTER 0 VALUE                
*                                          WHEN A VCNSCMD CONTROL=              
*                                          CHECK IS ISSUED                      
*                                                                @D1A*/         
*   GEN      (ISTRPLEX GENEQU=YES);          /*              @R495808*/         
*%GOTO   RPLEND;                                                                
* /*                                                                            
*                   ASSEMBLER DSECT FOR RPL VTAM EXTENSION          *           
*                                                                   *           
.RPLXBAL ANOP                                                  @R495808         
RPLAAREA DS    A                               POINTER TO THE ALTERNATE         
*                                              DATA AREA(VTAM) - INPUT          
*                                              AREA FOR DATA RECEIVED           
*                                              IN CONVERSATIONAL                
*                                              MODE                             
RPLAARLN DS    F                               ALTERNATE AREA                   
*                                              LENGTH(VTAM)                     
RPLARCLN DS    F                               ALTERNATE RECORD                 
*                                              LENGTH(VTAM)                     
RPLFDBK2 DS    0XL4                            FEEDBACK WORD TWO(VTAM)          
*                                                                               
RPLSSNSI DS    0XL2                            SYSTEM SENSE INPUT               
*                                                                               
RPLDSB   DS    0XL2                            DEVICE STATUS BYTE(VTAM)         
*                                                                               
RPLDSB1  DS    0XL1                            DEVICE STATUS BYTE 1             
*                                                                               
RPLSSEI  DS    XL1                             SYSTEM SENSE ERROR CODES         
*                                                                               
RPLPATHI EQU   X'80'                           PATH ERROR                       
RPLCPMI  EQU   X'40'                           CONNECTION POINT                 
*                                              MANAGER ERROR                    
RPLSTATI EQU   X'20'                           STATE ERROR                      
RPLFII   EQU   X'10'                           FUNCTION INTERPRETER             
*                                              ERROR                            
RPLRRI   EQU   X'08'                           REQUEST REJECT                   
RPLDSB2  DS    0XL1                            DEVICE STATUS BYTE 2             
*                                                                               
RPLSSMI  DS    XL1                             SYSTEM SENSE MODIFIER            
*                                              INPUT                            
RPLUSNSI DS    0XL2                            USER SENSE INPUT                 
RPLESR1  DS    XL1                             RESPONSE 1 FROM 3270             
*                                              CONTROL UNIT                     
RPLESR2  DS    XL1                             RESPONSE 2 FROM 3270             
*                                              CONTROL UNIT                     
RPLUSFLD DS    XL4                             USER FIELD(VTAM) - AT            
*                                              OPNDST TIME THE CONTENTS         
*                                              ARE SAVED FOR EACH               
*                                              TERMINAL AND RETURNED            
*                                              TO THE RPL ON COMPLETION         
*                                              OF ANY REQUEST FOR OR BY         
*                                              THAT TERMINAL                    
RPLOPTC3 DS    0XL4                            VTAM OPTIONS                     
RPLOPT9  DS    XL1                             OPTION BYTE 9                    
RPLLOGON EQU   X'80'                           PASS THE LOGON MESSAGE           
*                                              TO THE APPLICATION               
RPLDEVCH EQU   X'40'                           PASS THE DEVICE                  
*                                              CHARACTERISTICS TO THE           
*                                              APPLICATION                      
RPLTERMS EQU   X'20'                           PASS THE SYMBOLIC NAME           
*                                              OF THE TERMINAL AND ITS          
*                                              CHARACTERISTICS TO               
*                                              THE APPLICATION                  
RPLCOUNT EQU   X'10'                           PASS THE NUMBER OF               
*                                              ACTIVE CONNECTIONS AND           
*                                              QUEUED LOGON REQUESTS            
*                                              TO THE APPLICATION               
RPLAPPST EQU   X'08'                           INDICATE THE APPLICATION         
*                                              STATUS                           
RPLRNNM  EQU   X'00'                           RETIRED SYMBOL-FUNCTION          
*                                              NO LONGER SUPPORTED              
*                                                                  @04C         
RPLINQST EQU   X'04'                           INQUIRE OPTCD=STATUS             
*                                                                  @04A         
RPLCIDE  EQU   X'02'                           INDICATE THE SYMBOLIC            
*                                              NAME CORRESPONDING TO            
*                                              THE COMMUNICATION                
*                                              IDENTIFIER                       
RPLTOPL  EQU   X'01'                           PASS THE SYMBOLIC NAME           
*                                              OF THE FIRST TERMINAL            
*                                              ON THE LOGON QUEUE               
RPLOPT10 DS    XL1                             OPTION BYTE 10                   
RPLBSCID EQU   X'80'                           PASS THE HARDWARE                
*                                              IDENTIFIER OF A BINARY           
*                                              SYNCHRONOUS TERMINAL             
*                                                                               
RPLDSPLY EQU   X'40'                           DISPLAY INFORMATION FROM         
*                                              THE NETWORK OPERATOR             
*                                              CONTROL                          
RPLSPARM EQU   X'20'                           SESSPARM        @Z40BHUC         
RPLTSKY  EQU   X'10'                           SESSKEY         @G40AKSL         
RPLUSVAR EQU   X'08'                           OPTCD = USERVAR @R489306         
RPLUNBND EQU   X'04'                           OPTCD = UNBIND  @R491100         
RPLSONOP EQU   X'02'                           OPTCD = SONCODE @R491100         
RPLSENOP EQU   X'01'                           OPTCD = SENSE   @R491100         
RPLOPT11 DS    XL1                             OPTION BYTE 11                   
RPLQUIES EQU   X'80'                           STOP ACCEPTING LOGONS            
*                                              AS THE APPLICATION IS            
*                                              PREPARING TO SHUTDOWN            
*                                              (USED WITH SETLOGON)             
*                                                                               
RPLSTART EQU   X'40'                           START ACCEPTING LOGONS           
*                                              WHICH WERE TEMPORARILY           
*                                              STOPPED                          
RPLSTOP  EQU   X'20'                           STOP ACCEPTING LOGONS            
*                                              TEMPORARILY (USED WITH           
*                                              SETLOGON)                        
RPLHOLD  EQU   X'10'                           HOLD LOGONS (USED WITH           
*                                              SETLOGON)       @R491100         
RPLCNTRU EQU   X'08'                           INQUIRE - CURRENT RU             
*                                                              @P041786         
RPLMTS   EQU   X'04'                           OPTCD = MTS         @F1A         
RPLTERMQ EQU   X'02'                           OPTCD = TERMQ       @02A         
RPLKPSRB EQU   X'01'                           OPTCD=KEEPSRB       @U2C         
RPLFORCE EQU   X'00'                           NO LONGER SUPPORTED,             
*                                              IGNORED             @U2C         
RPLOPT12 DS    XL1                             OPTION BYTE 12                   
RPLRSPQD EQU   X'80'                           OPTCD=RSPQUED!NRSPQUED           
*                                              0=NRSPQUED/1=RSPQUED             
*                                                              @R491101         
RPLKEEP  EQU   X'40'                           KEEP OVERLENGTH DATA ON          
*                                              INPUT QUEUE                      
RPLTRUNC EQU   X'20'                           TRUNCATE OVERLENGTH              
*                                              DATA                             
RPLNIBTK EQU   X'10'                           USE KEEP OR TRUNCATE             
*                                              OPTION SET IN NIB AT             
*                                              OPENDST                          
RPLQSESS EQU   X'08'                           QUEUE SIMLOGONS FOR              
*                                              LU AT SESSION LIMIT              
*                                                              @R504800         
RPLQNOTE EQU   X'04'                           QUEUE SIMLOGONS FOR              
*                                              LU NOT ENABLED                   
*                                                              @R504800         
RPLQALL  EQU   X'02'                           QUEUE SIMLOGONS FOR              
*                                              ALL CASES                        
*                                                              @R504800         
RPLFMHDR EQU   X'01'                           1=FUNCTION MANAGEMENT            
*                                              HEADER INCLUDED IN DATA          
*                                              STREAM                           
RPLOSENS DS    0XL4                            SENSE OUTPUT DATA                
RPLSSNSO DS    0XL2                            SYSTEM SENSE OUTPUT              
*                                                                               
RPLSSEO  DS    XL1                             SYSTEM SENSE ERROR               
*                                              CODES                            
RPLCPMO  EQU   X'40'                           CONNECTION POINT MANAGER         
*                                              ERROR                            
RPLSTATO EQU   X'20'                           STATE ERROR                      
RPLFIO   EQU   X'10'                           FUNCTION INTERPRETER             
*                                              ERROR                            
RPLRRO   EQU   X'08'                           REQUEST REJECT                   
RPLSSMO  DS    XL1                             SYSTEM SENSE MODIFIER            
*                                              CODES                            
RPLUSNSO DS    XL2                             USER SENSE OUTPUT                
RPLSAV13 DS    XL4                             SAVE AREA FOR VTAM               
*                                              FAST PATH       @ZM31226         
RPLSIGDA DS    XL4                             SIGNAL DATA FLD @Z40BHUC         
*              END OF VTAM EXTENSION                           @Z40BHUC         
         ORG   RPLECB                                          @R487913         
RPLAMOD2 EQU   X'80'                   SET BY VTAM--WHEN RPLECB IS A            
*                                      ROUTINE POINTER, COPY OF                 
*                                      RPLAMODE                @P014080         
         ORG   ,                       RESTORE LOCATION CTR.   @R487913         
         ORG   RPLKEYLE                                                         
RPLRH3   DS    XL1                     THIRD REQUEST HEADER BYTE                
RPLBB    EQU   X'80'                   BEGIN BRACKET                            
RPLEB    EQU   X'40'                   END BRACKET                              
RPLCMD   EQU   X'20'                   CHANGE DIRECTION FROM SEND               
*                                      TO RECEIVE IMMEDIATELY                   
RPLCHREQ EQU   X'10'                   NOT USED BY VTAM - MIGRATION             
*                                      ONLY                        @T1A         
RPLCSI   EQU   X'08'                   0=STANDARD - CODESEL    @Z40BHUC         
*                                      1=ALTERNATE             @Z40BHUC         
RPLCEB   EQU   X'01'                   BRACKET - CONDITIONAL END                
*                                      0 = NCEB/1 = CEB        @D5P4790         
RPLSRTYP DS    XL1                     SEND OR RECEIVE TYPE                     
RPLSRESP EQU   X'80'                   A RESPONSE IS BEING SENT; IF 0,          
*                                      A NEW REQUEST IS BEING SENT              
RPLS3270 EQU   X'40'                   0 = APPLICATION NOT MONITORING           
*                                      1 = APPLICATION MONITORING  @A1A         
*                                                                               
RPLRRESP EQU   X'08'                   RECEIVE THE FIRST RESPONSE FROM          
*                                      THE RESPONSE QUEUE                       
RPLNFSYN EQU   X'04'                   IF 0, RECEIVE THE FIRST UNIT             
*                                      FROM THE DATA FLOW SYNCHRONOUS           
*                                      QUEUE                                    
RPLDFASY EQU   X'02'                   RECEIVE THE FIRST UNIT FROM THE          
*                                      DATA FLOW ASYNCHRONOUS QUEUE             
*                                                                               
RPLCHN   DS    XL1                     POSITION IN REQUEST UNIT CHAIN           
*                                      AND APPC FLAGS                           
RPLFIRST EQU   X'80'                   FIRST IN RU CHAIN                        
RPLMIDLE EQU   X'40'                   AN INTERMEDIATE RU                       
RPLLAST  EQU   X'20'                   LAST IN RU CHAIN                         
RPLONLY  EQU   X'10'                   ONLY ONE RU IN CHAIN                     
RPLVACS  EQU   X'08'                   APPC/NON-APPC LOGON OR SCIP EXIT         
*                                      0=NON-APPC, 1=APPC      @R495808         
RPLAPPC  EQU   X'04'                   APPC FLAG                                
*                                      0=APPLICATION IS THE REQUEST             
*                                      ORIGINATOR, 1=APPC/VTAM IS THE           
*                                      REQUEST ORIGINATOR      @R495808         
RPLVTFL1 DS    XL1                     VTAM FLAGS                               
RPLXMEM  EQU   X'80'                   CROSS-MEMORY API MODE INDICATOR          
*                                      1=CROSS-MEMORY MODE RPL, 0=NOT A         
*                                      CROSS-MEMORY MODE RPL       @B2C         
RPLVTUSE EQU   X'40'                   THIS IS A VTAM SYSTEM RPL; IF 0,         
*                                      THIS IS A USER RPL                       
RPLAUTUS EQU   X'20'                   VTAM FAST PATH          @ZM31226         
RPLTNDSP EQU   X'10'                   1=DOMAIN REQUEST        @G40AKCM         
RPLTLGAC EQU   X'08'                   1=LOGON ACCOMPLISHED    @G40AKCM         
RPLAMODE EQU   X'04'                   SET BY VTAM--ADDRESSING MODE             
*                                      IN WHICH RPL EXIT WILL BE                
*                                      INVOKED. 1 MEANS 31-BIT MODE             
*                                                              @P014080         
RPLRSPNM EQU   X'02'                   AT LEAST ONE RESPONSE ON NORMAL          
*                                      FLOW INBOUND RESPONSE QUEUE              
*                                                              @R491101         
RPLRSPQR EQU   X'01'                   AT LEAST ONE QRI RESPONSE ON             
*                                      NORMAL FLOW INBOUND DATA                 
*                                      QUEUE                   @R491101         
RPLVTFL2 DS    XL1                     POST/RESPOND FLAGS                       
RPLSCHED EQU   X'80'                   POST THE RPL WHEN THE REQUEST            
*                                      HAS BEEN SCHEDULED; IF 0, POST           
*                                      THE RPL WHEN THE RESPONSE                
*                                      HAS ARRIVED                              
RPLQRI   EQU   X'08'                   IF ON THEN QUEUE AL RESPONSES            
*                                      IF OFF DONT QUEUE       @G40AKSL         
RPLEX    EQU   X'04'                   RETURN ONLY EXCEPTION RESPONSES          
*                                      (WITH SEND) OR THIS IS AN                
*                                      EXCEPTION RESPONSE (WITH                 
*                                      RECEIVE); IF 0, RETURN ALL               
*                                      RESPONSES                                
RPLNFME  EQU   X'02'                   IF 0, RETURN A FUNCTIONAL                
*                                      MANAGEMENT END RESPONSE (WITH            
*                                      SEND) OR THIS IS A FUNCTIONAL            
*                                      MANAGEMENT END RESPONSE (WITH            
*                                      RECEIVE)                                 
RPLRRN   EQU   X'01'                   RETURN A REACHED RECOVERY                
*                                      NODE RESPONSE (WITH SEND)                
*                                      OR THIS IS A REACHED RECOVERY            
*                                      NODE RESPONSE (WITH                      
*                                      RECEIVE)                                 
RPLCNTRL DS    0XL3                    REQUEST UNIT CONTROL CODES               
*                                                                               
RPLCNTDF DS    XL1                     DATA FLOW CONTROL CODES                  
RPLDATA  EQU   X'80'                   DATA REQUEST, NOT A CONTROL              
*                                      CODE                                     
RPLCNCEL EQU   X'40'                   CANCEL REQUEST UNIT CHAIN                
RPLQC    EQU   X'20'                   THE QUIESCE IS COMPLETE(FOLLOWS          
*                                      QEC)                                     
RPLQEC   EQU   X'10'                   QUIESCE AT THE END OF THE                
*                                      CURRENT REQUEST UNIT CHAIN               
*                                                                               
RPLCHASE EQU   X'08'                   SEND ALL OUTSTANDING RESPONSES           
*                                      FOLLOWED BY THE CHASE RESPONSE           
*                                                                               
RPLRELQ  EQU   X'04'                   QUIESCE IS RELEASED                      
RPLQI    EQU   X'02'                   RESERVED                                 
RPLCNTDC DS    XL1                     DATA FLOW CONTROL CODES                  
RPLBID   EQU   X'80'                   REQUEST PERMISSION TO BEGIN              
*                                      BRACKET                                  
RPLRTR   EQU   X'40'                   READY TO RECEIVE                         
RPLLUS   EQU   X'20'                   LOGICAL UNIT STATUS                      
RPLSIGNL EQU   X'10'                   SIGNAL DATA AVAILABLE                    
RPLTBIND EQU   X'08'                   BIND                    @G40AKCM         
RPLTUNBD EQU   X'04'                   UNBIND                  @G40AKCM         
RPLSBI   EQU   X'02'                   SBI                     @G40AKCM         
RPLBIS   EQU   X'01'                   BIS                     @G40AKCM         
RPLCNTSC DS    XL1                     SESSION CONTROL CODES                    
RPLSDT   EQU   X'80'                   START DATA TRAFFIC                       
RPLCLEAR EQU   X'40'                   CLEAR ALL DATA TRAFFIC FOR               
*                                      THIS SESSION                             
RPLSTSN  EQU   X'20'                   SET AND TEST SEQUENCE                    
*                                      NUMBERS                                  
RPLSHUTD EQU   X'10'                   SHUTDOWN IS REQUESTED                    
RPLSHUTC EQU   X'08'                   SHUTDOWN IS COMPLETE                     
RPLRQR   EQU   X'04'                   REQUEST RECOVERY OF SESSION              
*                                                                               
RPLRSHUT EQU   X'02'                   REQUEST SHUTDOWN                         
*                                                              @G69AKJP         
RPLSWTCH EQU   X'01'                   CONTROL=SWITCH          @R489301         
         ORG   RPLTCBPT                                        @D5B4747         
RPLURH   DS    XL3                     USER RH                 @D5B4747         
RPLSONCD DS    XL1                     SON CODE (UNBIND TYPE CODE)              
*                                                              @R491100         
         ORG   RPLOPT4                                             @B1A         
RPLO4    DS    0XL1                     VTAM OPTION BYTE 4         @I1C         
*                                                                  @B1A         
***********************************************************************         
** NOTE:  THE FOLLOWING RPLO4 INDICATORS ARE DEFINED FOR MIGRATION    *         
** REFERENCE.  THE SEVEN BIT INDICATORS BELOW ONLY HAVE MEANING WHEN  *         
** RPLEXTOP IS SET OFF]]  IF THE RPLEXTOP INDICATOR IS ON, THE VALUE  *         
** OF THE ENTIRE BYTE IS SIGNIFICANT, NOT THE INDIVIDUAL BIT VALUES.  *         
**                                                                 @U2C         
***********************************************************************         
* The following OPTCD indicators can be set/reset with OI and NI      *         
* Example:  (Setup RPL for INQUIRE OPTCD=NQN)                         *         
*          NI   RPLO4,X'FF'-RPLEXTOP     RESET RPLEXTOP               *         
*          OI   RPLOP4,RPLNQN            SETUP RPL FOR OPTCD=NQN      *         
***********************************************************************         
RPLPERS  EQU   X'80'                    SETLOGON PERSIST           @B1A         
RPLNPERS EQU   X'40'                    SETLOGON NPERSIST          @B1A         
RPLINQPS EQU   X'20'                    INQUIRE PERSESS            @B1A         
RPLOPRES EQU   X'10'                    OPNDST RESTORE             @B1A         
RPLSLTMR EQU   X'08'                    PSTIMER ON SETLOGON PERSIST@B1A         
RPLNQN   EQU   X'04'                    INQUIRE OPTCD=NQN          @KFA         
*        EQU   X'02'                    RESERVED                   @U2A         
*                                                                               
** THE FOLLOWING BIT DETERMINES OPT4 EXTENDED OR NON-EXTENDED USE  @I1A         
RPLEXTOP EQU   X'01'                    1=AN EXTENDED OPTCD VALUE IS            
*                                       IN RPLOPT4X, INDIVIDUAL RPLO4           
*                                       BITS ARE NOT MEANINGFUL    @U2C         
*                                       0=INDIVIDUAL BITS IN RPLO4 ARE          
*                                       MEANINGFUL IN NON-EXTENDED              
*                                       OPTCD COMBINATIONS         @U2C         
*                                                                               
RPLOPT4X DS    XL1                      EXTENDED OPTCD VALUE BYTE  @I1A         
*                                                                               
***********************************************************************         
* Extended OPTCDs are byte values which are set in RPLOPT4X.  The low *         
* order bit must be on in all extended OPTCD values to distinguish    *         
* them from RPLO4 bit indicators.                                     *         
* The following defined values can be set in RPLOPT4X with MVI instr. *         
* Example:   MVI RPLOPT4X,RPLSTGNA     SETUP RPL FOR SETLOGON GENADD  *         
***********************************************************************         
** SETLOGON EXTENDED OPTCD VALUES                                  @I1A         
RPLSTGNA EQU   X'01'                    SETLOGON OPTCD=GNAMEADD    @U2C         
RPLSTGND EQU   X'03'                    SETLOGON OPTCD=GNAMEDEL    @U2C         
RPLSTGNS EQU   X'05'                    SETLOGON OPTCD=GNAMESUB    @D3A         
*                                                                               
** INQUIRE  EXTENDED OPTCD VALUES                                  @I1A         
RPLIQSNM EQU   X'21'                    INQUIRE OPTCD=SESSNAME     @U2C         
*                                                                               
** CHANGE   EXTENDED OPTCD VALUES                                  @I1A         
RPLCGEAF EQU   X'41'                    CHANGE OPTCD=ENDAFFIN      @U2C         
RPLCGEF  EQU   X'43'                    CHANGE OPTCD=ENDAFFNF      @L1A         
*                                                                               
** SETLOGON PERSIST EXTENDED OPTCD PERMUTATIONS                                 
RPLSP_NOTIMER_FTOALL  EQU X'81'         SETLOGON PERSIST with no                
*                                       PSTIMER and FORCETKO=ALL                
*                                                             @R1A @Y1C         
RPLSP_NOTIMER_FTONONE EQU X'83'         SETLOGON PERSIST with no                
*                                       PSTIMER but FORCETKO=NONE               
*                                                             @R1A @Y1C         
RPLSP_NOTIMER_FTOSNGL EQU X'85'         SETLOGON PERSIST, no PSTIMER            
*                                       but FORCETKO=SINGLE   @R1A @Y1C         
RPLSP_NOTIMER_FTOMULT EQU X'87'         SETLOGON PERSIST with no                
*                                       PSTIMER and FORCETKO=MULTI              
*                                                             @R1A @Y1C         
RPLSP_TIMER_FTOALL    EQU X'89'         SETLOGON PERSIST with PSTIMER           
*                                       and FORCETKO=ALL      @R1A @Y1C         
RPLSP_TIMER_FTONONE   EQU X'8B'         SETLOGON PERSIST with PSTIMER           
*                                       and FORCETKO=NONE     @R1A @Y1C         
RPLSP_TIMER_FTOSNGL   EQU X'8D'         SETLOGON PERSIST with PSTIMER           
*                                       and FORCETKO=SINGLE   @R1A @Y1C         
RPLSP_TIMER_FTOMULT   EQU X'8F'         SETLOGON PERSIST with PSTIMER           
*                                       and FORCETKO=MULTI    @R1A @Y1C         
***********************************************************************         
*                                                                  @B1A         
         ORG   RPLOPT5                                         @G69AKJP         
RPLO5    DS    XL1                      VTAM OPTION BYTE 5     @G69AKJP         
*                                                              @G69AKJP         
RPLTNFY  EQU   X'40'                    THIRD PARTY NOTIFY     @G69AKJP         
RPLTHRDC EQU   X'08'                    CS/390 INTERNAL USE ONLY   @F2A         
RPLCNDCS EQU   X'01'                    CONDITIONAL CS MODE        @W1A         
*                                       (USED ALONG WITH RPLDLGIN:              
*                                        RPLDLGIN=1 & RPLCNDCS=1                
*                                        means conditional CS mode,             
*                                        RPLDLGIN=1 & RPLCNDCS=0                
*                                        means normal CS mode)     @W1A         
         ORG   RPLOPT6                                         @D5B4747         
RPLO6    DS    XL1                      VTAM OPTION BYTE 6     @D5B4747         
*                                                              @G69AKJP         
RPLXBFL  EQU   X'04'                    1=Extended buffer list     @D2A         
*                                       being used                 @D2A         
RPLBUFFL EQU   X'02'                    1=BUFFER LIST BEING                     
*                                       USED                   @D5B4747         
RPLCONTC EQU   X'01'                    1=CONTINUE CHAIN IF NEGATIVE            
*                                       REPONSE IS RECEIVED    @D5B4747         
         ORG   RPLOPT7                                         @D5B4747         
RPLO7    DS    XL1                      VTAM OPTION BYTE 7     @D5B4747         
*                                                              @D5B4747         
RPLBCKUP EQU   X'20'                    OPTCD = BACKUP         @R489306         
RPLLMPEO EQU   X'01'                    1=VTAM IS TO ENFORCE MAXIMUM            
*                                       RU SIZE                @D5B4747         
         ORG   RPLOPT8                                         @D5B4747         
RPLO8    DS    XL1                      VTAM OPTION BYTE 8     @D5B4747         
*                                                              @D5B4747         
RPLMAXSP EQU   X'08'                    1=MAXSESS SPECIFIED ON THE              
*                                       SETLOGON GNAMEADD MACRO    @D3A         
RPLUSRRH EQU   X'01'                    1=OPTCD=USERRH SPECIFIED                
*                                       0=OPTCD=NUSERRH SPECIFIED               
*                                                              @D5B4747         
         ORG   RPLRBAR                                                          
RPLOBSQV DS    AL2                     STSN OUTBOUND SEQUENCE                   
*                                      SEQUENCE NUMBER OF LAST RU OFA           
*                                      LARGE MESSAGE SEND      @D5B4747         
RPLIBSQV DS    AL2                     STSN INBOUND SEQUENCE                    
*                                      NUMBER                                   
RPLOBSQ  DS    XL1                     STSN OUTBOUND ACTION CODES               
*                                                                               
RPLOSET  EQU   X'80'                   SET THE OUTBOUND SEQUENCE                
*                                      NUMBER                                   
RPLOTST  EQU   X'40'                   SET THE OUTBOUND SEQUENCE                
*                                      NUMBER UNCONDITIONALLY AND               
*                                      INDICATE IF ACCEPTABLE                   
RPLORSET EQU   X'20'                   RESET THE OUTBOUND SEQUENCE              
*                                      TO THE DEFAULT VALUE(0)                  
RPLOIGN  EQU   X'10'                   IGNORE THE OUTBOUND SEQUENCE             
*                                      NUMBER                                   
RPLOPOS  EQU   X'08'                   THE OUTBOUND SEQUENCE NUMBER             
*                                      IS ACCEPTABLE (FOLLOWS TESTSET)          
*                                                                               
RPLONEG  EQU   X'04'                   THE OUTBOUND SEQUENCE NUMBER             
*                                      IS NOT ACCEPTABLE (FOLLOWS               
*                                      TESTSET)                                 
RPLOINV  EQU   X'02'                   THE OUTBOUND SEQUENCE NUMBER             
*                                      IS INVALID                               
RPLIBSQ  DS    XL1                     STSN INBOUND ACTION CODES                
*                                                                               
RPLISET  EQU   X'80'                   SET THE INBOUND SEQUENCE                 
*                                      NUMBER                                   
RPLITST  EQU   X'40'                   SET THE INBOUND SEQUENCE                 
*                                      NUMBER UNCONDITIONALLY AND               
*                                      INDICATE IF ACCEPTABLE                   
RPLIRSET EQU   X'20'                   RESET THE INBOUND SEQUENCE               
*                                      TO THE DEFAULT VALUE(0)                  
RPLIIGN  EQU   X'10'                   IGNORE THE INBOUND SEQUENCE              
*                                      NUMBER                                   
RPLIPOS  EQU   X'08'                   THE INBOUND SEQUENCE NUMBER              
*                                      IS ACCEPTABLE (FOLLOWS TESTSET)          
*                                                                               
RPLINEG  EQU   X'04'                   THE INBOUND SEQUENCE NUMBER              
*                                      IS NOT ACCEPTABLE (FOLLOWS               
*                                      TESTSET)                                 
RPLIINV  EQU   X'02'                   THE INBOUND SEQUENCE NUMBER              
*                                      IS INVALID                               
RPLSEQNO DS    AL2                     RESPONSE SEQUENCE NUMBER                 
*                                      IDENTIFIER                               
         ORG   RPLEXTDS                Overlay for RPLEXTDS        @D2A         
RPLOF68  DS    XL1                                                 @D2A         
RPLXSRV  EQU   X'01'                   Entire XBUFLST accepted     @D2A         
*                                      by VTAM                     @D2A         
         ORG ,                                                 @AZ48668         
         ISTRPLFB ,                    INCLUDE FEEDBACK CODES                   
         ISTGLBAL ,                    INCLUDE AMSI GLOBALS    @D5K4792         
         ISTRPL6X ,    INCLUDE LU 6.2 NON-CONTIGUOUS EXTENSION @R495808         
         AIF (T'&CHKASM EQ 'O').GOTASMH  CHECK ASSEMBLER LEVEL     @N1A         
&SYSECT  DSECT                     RETURN TO DSECT OF THE RPL  @P051653         
         AGO   .ORGSEC                                             @N1A         
.GOTASMH ANOP                      ASSEMBLER H LEVEL               @N1A         
         AIF ('&SYSECT' NE 'IFGRPL').GOTOH CHECK SYSECT VALUE      @03A         
&SYSECT  DSECT                     RETURN TO IFGRPL DSECT          @03A         
         AGO   .ORGSEC                                             @03A         
.GOTOH   ANOP                   ASSEMBLER H LEVEL & NOT IFGRPL     @03A         
&SYSECT  LOCTR                     RETURN TO PREVIOUS SECTION      @N1A         
.ORGSEC  ANOP                      BACK TO ORGINAL SECTION         @N1A         
.EQU     ANOP                                                                   
***********************************************************************         
*                                                                     *         
*   THE FOLLOWING CONSTANT VALUES ARE THOSE ALLOWED TO BE RECORDED    *         
*   IN "RPLREQ" AND/OR REGISTER 0 WHEN AN APPCCMD MACRO IS ISSUED.    *         
*                                                             @R495808*         
***********************************************************************         
RPL6APPC EQU   X'62'               A "RPLREQ" VALUE IN THE RPL THAT             
*                                  INDICATES THIS IS AN APPCCMD                 
*                                  (EXCEPT CONTROL=CHECK)                       
*                                  AND AAREA CONTAINS APPC PARAMETERS           
*                                                              @R495808         
RPL6CHEK EQU   X'6C'               A VALUE IN THE REGISTER 0 ON AN              
*                                  API CROSSING THAT INDICATES THAT             
*                                  THIS IS A CONTROL=CHECK     @R495808         
***********************************************************************         
*                                                                     *         
*   THE FOLLOWING CONSTANT VALUES ARE THOSE ALLOWED TO BE RECORDED    *         
*   IN "RPLREQ" AND/OR REGISTER 0 WHEN A VCNSCMD MACRO IS ISSUED.     *         
*                                                                 @D1A*         
***********************************************************************         
RPL3VCNS EQU   X'32'               REGISTER 0 AND RPLREQ VALUE                  
*                                  WHEN A VCNSCMD IS ISSUED                     
*                                  (EXCEPT CONTROL=CHECK)                       
*                                                                  @D1A         
RPL3CHEK EQU   X'3C'               REGISTER 0 VALUE WHEN A VCNSCMD              
*                                  CONTROL=CHECK IS ISSUED                      
*                                                                  @D1A         
         MEND                                                                   
*        END OF RPL VTAM EXTENSION                                   */         
*%RPLEND: ;                                                                     
