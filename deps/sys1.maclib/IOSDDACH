*                                                                       00001000
* %DCL IOSDDACH_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IOSDDACH_INCLUDED;                                        00003000
* %IF IOSDDACH_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 17042. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IOSDDACH &DSECT=YES,&LIST=YES,&TITLE=YES,&DACH=YES,           *00009000
               &DACH_FACL_FIELDS=COND,&DACH_FACL_DEVENTRY=COND          00010000
         GBLC  &IOSDDACH_INCLUDED                                       00011000
         GBLC  &ZCBPRINT                                                00012000
&IOSDDACH_INCLUDED SETC 'YES'                                           00013000
         AIF   ('&LIST' EQ 'NONE').P0                                   00014000
         AIF   ('&TITLE' EQ 'NO').P5                                    00015000
 TITLE   'IOSDDACH  - IOS ENF device availability change              '*00016000
                                                                        00017000
.P5      ANOP                                                           00018000
**/ IOSDDACH_1:;                                                        00019000
*/****START OF SPECIFICATIONS*****************************************  00020000
*                                                                       00021000
*01* MACRO-NAME: IOSDDACH                                               00022000
*                                                                       00023000
*01* DESCRIPTIVE-NAME: IOS ENF device availability change               00024000
*                      parameter list                                   00025000
*02*   ACRONYM: DACH                                                    00026000
*                                                                       00027000
*01*   DSECT-NAME: DACH                                                 00028000
*                                                                       00029000
*                                                                    */ 00030000
*/*01* PROPRIETARY STATEMENT=                                        */ 00031000
*/***PROPRIETARY_STATEMENT********************************************/ 00032000
*/*                                                                  */ 00033000
*/*                                                                  */ 00034000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00035000
*/* 5650-ZOS COPYRIGHT IBM CORP. 1994, 2015                          */ 00036000
*/*                                                                  */ 00037000
*/* STATUS= HBB77A0                                                  */ 00038000
*/*                                                                  */ 00039000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00040000
*/*                                                                     00041000
*                                                                       00042000
*01* COMPONENT: IOS (SC1C3)                                             00043000
*                                                                       00044000
*01* EYE-CATCHER: DACH                                                  00045000
*02*   OFFSET: 0                                                        00046000
*02*   LENGTH: 4                                                        00047000
*                                                                       00048000
*01* STORAGE ATTRIBUTES:                                                00049000
*02*   SUBPOOL: 245                                                     00050000
*02*   KEY: 0                                                           00051000
*02*   RESIDENCY: Above 16M line                                  @P1C  00052000
*                                                                       00053000
*01* METHOD OF ACCESS:                                                  00054000
*                                                                     * 00055000
*02*   ASM: IOSDDACH                                                    00056000
*             ,DSECT=YES!NO to specify if the macro should be           00057000
*                           defined as a DSECT.                         00058000
*             ,LIST=YES!NO to control whether or not the macro will     00059000
*                          appear in the assembler listing.             00060000
*             ,DACH=YES!NO to control whether or not the DACH mapping   00061000
*                          is expanded.                                 00062000
*                                                                       00063000
*02*   PL/AS: %INCLUDE SYSLIB(IOSDDACH)                                 00064000
*                                                                       00065000
*      Printing of the macro expansion can be controlled by the         00066000
*      IOSDDACH_LIST global macro variable.                             00067000
*      Any value other than 'NO' will result in                         00068000
*      the  macro  expansion being printed.  The default is 'YES'.      00069000
*      The following examples illustrate how the                        00070000
*      IOSDDACH_LIST variable should be set.                            00071000
*                                                                       00072000
*            PLAS:  %IOSDDACH_LIST='YES'     %IOSDDACH_LIST='NO'        00073000
*                                                                       00074000
*01* FUNCTION = IOSDDACH maps the parameter list passed to              00075000
*               the listeners of ENF code 33.                           00076000
*                                                                       00077000
*02* NOTES= The ENF qualifier used for this signal has the        @02A  00078000
*           following format:                                     @02A  00079000
*            BYTE 1: Device class (Byte 3 from UCBTYP)            @02A  00080000
*            BYTE 2: Reserved                                     @02A  00081000
*            BYTES 3-4: Qualifier number.                         @02A  00082000
*                                                                       00083000
*           Each qualifier number designates a general class of   @02A  00084000
*           events- such as IO subchannel change or IO resource   @L1C  00085000
*           available.  Along with each qualifier number is a     @02A  00086000
*           qualifier number dependent mapping which designates   @02A  00087000
*           fields specific to the general class of events.       @02A  00088000
*                                                                       00089000
*           The DACHTYPE field is used to designate the exact           00090000
*           event which occurred under the given qualifier number.@02A  00091000
*           Since the values of DACHTYPE are unique, this field   @02A  00092000
*           can be used to determine which qualifier number       @02A  00093000
*           dependent area is to be used when no ENF qualifier is @02A  00094000
*           specified.  Furthermore, it can be used in the same   @02A  00095000
*           manner when only the device class (DACHUCBC) portion  @02A  00096000
*           of the ENF qualifier is used. An alternate method of  @L1C  00097000
*           determining the proper mapping to use for listeners   @L1C  00098000
*           not using the ENF qualifier is through the use of the @02A  00099000
*           DACHQC field.  This field contains a copy of the      @02A  00100000
*           ENF qualifier used for signalling.  The qualifier     @02A  00101000
*           number which determines the mapping used is a part    @02A  00102000
*           of DACHQC.                                            @02A  00103000
*                                                                       00104000
*           If the qualifier number (DACHQN) is not DACHFACL then       00105000
*           the size is just the size of the DACH structure.  If        00106000
*           the qualifier number is DACHFACL, then the size is          00107000
*           variable length consisting of the DACH structure, the       00108000
*           facility change header, and one or more device              00109000
*           entries.                                              @ABA  00110000
*                                                                       00111000
*01* CREATED BY =  IOSRSCH (Subchannel recovery) or IOSCACDR            00112000
*                  or IOSCDCDR or IOSVLPEP or IOSVVSWR            @L3A  00113000
*                                                                       00114000
*01* DELETED BY =  ENF service                                          00115000
*                                                                       00116000
*01* POINTED TO BY = N/A                                                00117000
*                                                                       00118000
*01* SIZE:                                                              00119000
*            DACH               -- X'0040' bytes                        00120000
*            DACH_FACL_FIELDS   -- X'0020' bytes                        00121000
*            DACH_FACL_DEVENTRY -- X'0004' bytes                        00122000
*                                                                       00123000
*01* SERIALIZATION = None                                               00124000
*                                                                       00125000
* EXTERNAL CLASSIFICATION: GUPI                                         00126000
* END OF EXTERNAL CLASSIFICATION                                        00127000
*                                                                       00128000
*01* NOTES =                                                            00129000
*                                                                       00130000
*      1.  Printing of the macro expansion is controlled by the         00131000
*          ZCBPRINT global macro variable.  Any value other than 'NO'   00132000
*          will result in the macro expansion being printed.  The       00133000
*          default is 'YES'.  The following examples illustrate how the 00134000
*          ZCBPRINT variable should be set.                             00135000
*                                                                       00136000
*               ASM:  GBLC &ZCBPRINT                                    00137000
*                     &ZCBPRINT SETC 'YES'  or   &ZCBPRINT SETC 'NO'    00138000
*              PLAS:  %DCL ZCBPRINT CHAR EXT                            00139000
*                     %ZCBPRINT='YES'       or   %ZCBPRINT='NO'         00140000
*                                                                       00141000
*     2.  A  global  variable IOSDDACH_INCLUDED is set to YES the first 00142000
*          time the macro is invoked.                                   00143000
*               ASM:  This variable can be checked by the caller, to    00144000
*                     determine if the macro has already been invoked.  00145000
*              PLAS:  This variable is checked in the macro code to     00146000
*                     determine if the control block should be          00147000
*                     included.                                         00148000
*                                                                       00149000
*01* CHANGE ACTIVITY:                                                   00150000
*                                                                       00151000
*   Flag LineItem  FMID    Date   ID    Comment                         00152000
*                                                                       00153000
*    $L0=OY28664  HBB3310 900402 PDLH:  Overlook support          @L0A  00154000
*    $L1=PAVS     HBB5520 940320 PDLP:  PAV - Support new               00155000
*                                       DACH type for change CDR (add   00156000
*                                       and delete CDR record).         00157000
*                                       Also change the macro           00158000
*                                       to bi-lingual             @L1A  00159000
*    $L2=CRYPT    JBB6609 990811 PDNO:  PCI Crypto Support        @L2A  00160000
*    $L3=DYCHM    HBB7703 991231 PDMM:  Dynamic CHPID Management  @L3A  00161000
*    $L4=MCSEX    HBB7707 020215 PDON:  Multiple Channel Subsystem      00162000
*                                       Migration and Coexistence       00163000
*                                       Support                   @L4A  00164000
*    $L5=LANFR    HBB7708 021115 PDLZ:  LAN Free Backup Enhancements    00165000
*                                                                 @L5A  00166000
*    $L6=SCHSET   HBB7720 040315 PDON:  Subchannel Sets           @L6A  00167000
*    $L7=SCHSET   HBB7720 040331 PDON:  Subchannel Sets           @L7A  00168000
*    $L8=IOSODA   HBB7730 060331 PDHC:  HyperPAV support                00169000
*                                       Flagged as APAR OA13915   @L8A  00170000
*    $L9=SCHSET2  HBB7750 080331 PDUU:  Subchannel Sets for PPRC,       00171000
*                                       changes flagged by apar         00172000
*                                       OA24142                   @L9A  00173000
*    $LA=IOSCRW   HBB7780 100531 PDGG:  Installed parameters restored   00174000
*                                       CRW support               @LAA  00175000
*    $LB=IOSPRIM  HBB7790 110430 PDI6:  IOS Prime Infrastructure  @LBA  00176000
*                                                                       00177000
*    $A1=OA13915  HBB7709 061115 PDHC:  HyperPAV Support                00178000
*                                       - Add ENF 33 Control Unit       00179000
*                                         transitioning signal    @A1A  00180000
*    $A6=OA24142  HBB7740 080831 PDUU:  Subchannel Sets for PPRC:       00181000
*                                       - Add subchannel set ID         00182000
*                                         fields                  @A6A  00183000
*    $AA=OA49090  HBB7790 160501 PDSC:  SuperPAV                        00184000
*    $AB=OA50653  HBB7790 170915 PDB7:  Synchronous I/O support         00185000
*                                                                       00186000
*    $P1=PN71206  HBB5520 940728 PDLC:  Fix SHOWHDR info          @P1A  00187000
*                                                                       00188000
*    $P2=PN71322  HBB5520 940912 PDLP:  Re-run CBGEN to clean up all    00189000
*                                       hand-modified errors      @P2A  00190000
*    $P3=PWA0208  JBB6607 980630 PDNO:  Remove obsolete copyright       00191000
*                                       statement                 @P3A  00192000
*    $P4=ME12046  HBB7750 080115 PDUU:  Changes flagged by apar         00193000
*                                       OA24142                         00194000
*                                       - Correct the value for         00195000
*                                         DACHIORA_AS             @P4A  00196000
*                                                                       00197000
*    $01=OY30457  HBB3310 900402 PDLH:  Dynamic SPE               @01A  00198000
*    $02=OY42567  HBB4420 910405 PDLU:  Support new DACH type for       00199000
*                                       IO resource available     @02A  00200000
*    $03=OW07560  HBB4430 940920 PDLZ:  Add data to I/O resource      * 00201000
*                                       available                 @03A* 00202000
*    $04=OW37980  HBB6603 990531 PDLZ:  Dynamic PAV Support       @04A* 00203000
*    $05=OW40408  HBB6603 990831 PDLZ:  Dynamic PAV Support.            00204000
*                                       - Add time values and MBI       00205000
*                                         value for Alias         @05A  00206000
*    $06=OW43831  HBB6603 000915 PDNO:  Roll OS/390 R7 DACH support     00207000
*                                       down to lower levels      @06A  00208000
*    $07=OW57714  HBB7703 030331 PDON:  No code changes.  Shipped       00209000
*                                       for completeness.         @07A  00210000
*    $08=OA11635  HBB7720 050805 PDNO:  Correct copyright info    @08A  00211000
*    $09=OA45662  HBB7790 141130 PDSC:  HyperWrite                      00212000
*                                                                       00213000
*                                                                       00214000
****** END OF SPECIFICATIONS *****************************************/ 00215000
*% /*                                                                   00216000
.P0      ANOP                                                           00217000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00218000
         AIF   ('&LIST' EQ 'YES').P2                                    00219000
.P1      ANOP                                                           00220000
         PUSH  PRINT                                                    00221000
         PRINT OFF                                                      00222000
.P2      ANOP                                                           00223000
         AIF   ('&DACH' EQ 'NO').L0002                                  00224000
         AIF   ('&DSECT' EQ 'YES').L0003                                00225000
         AIF   ('&DACH' NE 'YES').L0002                                 00226000
DACH     DS    0F        ENF signal 33 parameter list                   00227000
         AGO   .L0004                                                   00228000
.L0003   ANOP                                                           00229000
DACH     DSECT           ENF signal 33 parameter list                   00230000
.L0004   ANOP                                                           00231000
DACHID   DS    CL4       Control block ID                               00232000
DACHVERS DS    X         Version number                                 00233000
DACHDEVC DS    CL2       Device category                                00234000
DACHTYPE DS    CL4       Type of change that occurred to the device    *00235000
                         (See constant declaration for valid types)     00236000
         DS    CL1       reserved                                       00237000
DACHQUALD DS   CL32      Qualifier dependent area                       00238000
DACHQC   DS    0CL4      Copy of ENF Qualifier.                         00239000
DACHUCBC DS    CL1       Device class from UCBTYP field (Byte 3 of     *00240000
                         UCBTYP)                                        00241000
         DS    CL1       Reserved.                                      00242000
DACHQN   DS    H         DACH qualifier number field                    00243000
DACHRES  DS    CL16      reserved                                       00244000
DACHEND  DS    0C        End of DACH parameter list                     00245000
DACH_LEN EQU   *-DACH                                                   00246000
*                                                                       00247000
* ********************************************************************  00248000
* *                                                                  *  00249000
* * Qualifier dependent areas follow.                                *  00250000
* *                                                                     00251000
* ********************************************************************  00252000
* ********************************************************************  00253000
* *                                                                  *  00254000
* * Qualifier dependent area for I/O subchannel change.              *  00255000
* *                                                                  *  00256000
* * DACHQN:   DACHIO or DACHIO_AS (alternate subchannel set)         *  00257000
* * DACHType: DACHIPI DACHIPM DACHIPR DACHMONC                       *  00258000
* *                                                                     00259000
* ********************************************************************  00260000
*                                                                       00261000
*                                                                       00262000
         ORG   DACHQUALD                                                00263000
DACH_IO_FIELDS DS 0X                                                    00264000
DACH_IO_DEVN DS H        Device number undergoing a subchannel change   00265000
DACH_IO_DTYP DS CL4      Device type from UCBTYP                        00266000
DACH_IO_SSID DS X        Subchannel set of the device number            00267000
DACH_IO_QUAL DS X        Qualifier for event (May or may not be used,  *00268000
                         depends on DACHTYPE).                          00269000
DACH_IO_QUAL_MONC_ON EQU 1 DACHTYPE=DACHMONC, The device identified in *00270000
                         DACH_IO_DEVN and DACH_IO_SSID now requires    *00271000
                         monitoring                                     00272000
DACH_IO_QUAL_MONC_OFF EQU 2 DACHTYPE=DACHMONC, one or more devices     *00273000
                         that required monitoring no longer require    *00274000
                         monitoring.                                    00275000
DACH_IO_FIELDS_LEN EQU *-DACH_IO_FIELDS                                 00276000
         ORG   ,                                                        00277000
*                                                                       00278000
* ********************************************************************  00279000
* *                                                                  *  00280000
* * Qualifier dependent area for IO resource accessible              *  00281000
* *                                                                  *  00282000
* * DACHQN:   DACHIORA or DACHIORA_AS (alternate subchannel set)     *  00283000
* * DACHType: DACHLPE                                                *  00284000
* *                                                                     00285000
* ********************************************************************  00286000
*                                                                       00287000
*                                                                       00288000
         ORG   DACHQUALD                                                00289000
DACH_IORA_FIELDS DS 0X                                                  00290000
DACH_IORA_DEVN DS H      Device number becomming accessible             00291000
DACH_IORA_DTYP DS CL4    Device type from UCBTYP                        00292000
DACH_IORA_CHPD DS X      CHPID established.                             00293000
DACH_IORA_FLAGS DS 0B                                                   00294000
DACH_IORA_ONLI EQU X'80' On if device was online                        00295000
DACH_IORA_VARY_DEV EQU X'40' On if IOS issued a VARY command in order  *00296000
                         to bring a device online that was marked      *00297000
                         offline due to CC3 during NIP                  00298000
         ORG   DACH_IORA_FLAGS+1                                        00299000
DACH_IORA_SSID DS X      Subchannel set ID associated with the IO      *00300000
                         resource                                       00301000
         DS    CL23      Reserved                                       00302000
*                                                                       00303000
*    *****************************************************************  00304000
*    *                                                               *  00305000
*    * Value for DACHID                                              *  00306000
*    *                                                               *  00307000
*    *****************************************************************  00308000
*                                                                       00309000
*                                                                       00310000
DACHDACH EQU   C'DACH'   DACH control block ID                          00311000
*                                                                       00312000
*    *****************************************************************  00313000
*    *                                                               *  00314000
*    * Value for DACHVERS                                            *  00315000
*    *                                                               *  00316000
*    *****************************************************************  00317000
*                                                                       00318000
*                                                                       00319000
DACHVERC EQU   1         DACH version number                            00320000
*                                                                       00321000
*    *****************************************************************  00322000
*    *                                                               *  00323000
*    * Value for DACHDEVC                                            *  00324000
*    *                                                               *  00325000
*    *****************************************************************  00326000
*                                                                       00327000
*                                                                       00328000
DACHDTIO EQU   C'IO'     Device undergoing subchannel change is an I/O *00329000
                         device                                         00330000
DACHDTCU EQU   C'CU'     Device category is Control Unit                00331000
*                                                                       00332000
*    *****************************************************************  00333000
*    *                                                               *  00334000
*    * Value for DACH_TRAN_MODE                                         00335000
*    *                                                               *  00336000
*    *****************************************************************  00337000
*                                                                       00338000
*                                                                       00339000
DACH_HYPERPAV_TRANSITION EQU 1 PAVMode change processing is requested  *00340000
                         for all devices in the LSS, target transition *00341000
                         is HyperPAV mode.                              00342000
DACH_BASEPAV_TRANSITION EQU 2 PAVMode change processing is requested   *00343000
                         for all devices in the LSS, target transition *00344000
                         is Base PAV mode.                              00345000
DACH_XPAV_TRANSITION EQU 4 PAVMode change processing is requested for  *00346000
                         all devices in the LSS, target transition is  *00347000
                         XPAV mode.                                     00348000
*                                                                       00349000
*    *****************************************************************  00350000
*    *                                                               *  00351000
*    * Value for DACH_PCIE_EVENT                                        00352000
*    *                                                               *  00353000
*    *****************************************************************  00354000
*                                                                       00355000
*                                                                       00356000
DACH_PCIE_DEVICE_ONLINE EQU 1 PCIE Device is online                     00357000
DACH_PCIE_DEVICE_OFFLINE EQU 2 PCIE Device is offline                   00358000
DACH_PCIE_PORT_STATECHG EQU 3 PCIE Port state change                    00359000
DACH_IORA_FIELDS_LEN EQU *-DACH_IORA_FIELDS                             00360000
         ORG   ,                                                        00361000
*                                                                       00362000
* ********************************************************************  00363000
* *                                                                  *  00364000
* * Qualifier dependent area for CDR change (add or delete CDR       *  00365000
* * record)                                                          *  00366000
* *                                                                  *  00367000
* * DACHQN:   DACHCCDR                                               *  00368000
* * DACHType: DACHACDR DACHDCDR                                      *  00369000
* *                                                                     00370000
* ********************************************************************  00371000
*                                                                       00372000
*                                                                       00373000
         ORG   DACHQUALD                                                00374000
DACH_CCDR_FIELDS DS 0X                                                  00375000
DACH_CCDR_TIMESTP DS 0CL8 TOD clock value                               00376000
DACH_CCDR_DATE DS CL4    Date                                           00377000
DACH_CCDR_TIME DS CL4    Time                                           00378000
DACH_CCDR_DEVN DS H      Device number undergoing a CDR change          00379000
DACH_CCDR_DTYP DS CL4    Device type from UCBTYP                        00380000
DACH_CCDR_CDRLEN DS H    Length of CDR record                           00381000
DACH_CCDR_CDRADR DS A    Address of CDR record                          00382000
DACH_CCDR_CHPID DS X     Channel path that the CDR record was obtained  00383000
DACH_CCDR_FIELDS_LEN EQU *-DACH_CCDR_FIELDS                             00384000
         ORG   ,                                                        00385000
*                                                                       00386000
* ********************************************************************  00387000
* *                                                                  *  00388000
* * Qualifier dependent area for Parallel Access Volume changes.     *  00389000
* *                                                                  *  00390000
* * DACHQN:   DACHPAV or DACHPAV_AS (alternate subchannel set)       *  00391000
* * DACHType: DACHPAVS                                               *  00392000
* *                                                                     00393000
* ********************************************************************  00394000
*                                                                       00395000
*                                                                       00396000
         ORG   DACHQUALD                                                00397000
DACH_PAV_FIELDS DS 0X                                                   00398000
DACH_PAV_DEVN DS H       Device number of PAV-base device               00399000
DACH_PAV_FLGS DS 0CL2    Flags                                          00400000
DACH_PAVBIND EQU X'80'   Alias is bound to base                         00401000
DACH_PAVUNBIND EQU X'40' Alias is unbound from base                     00402000
DACH_PAVUNBINDALL EQU X'20' All aliases are unbound from base           00403000
DACH_PAVSCHIBDATAVALID EQU X'10' Schib data is valid                    00404000
DACH_PAV_BASEMBIVALID EQU X'08' The MBI for the base device is valid    00405000
DACH_PAV_ALIASMBIVALID EQU X'04' The MBI for the alias device is valid  00406000
DACH_PAV_DBT_VALID EQU X'02' The device busy time for the alias device *00407000
                         is valid                                       00408000
         DS    BL.009    Reserved                                       00409000
         ORG   DACH_PAV_FLGS+2                                          00410000
DACH_PAV_CNT DS H        Count of PAVs, including base                  00411000
DACH_PAV_SSIDBASE DS X   Subchannel set ID associated with the         *00412000
                         PAV-Base dev.                                  00413000
         DS    CL1       Reserved                                       00414000
DACH_PAV_TOKN DS CL4     PAV token after change                         00415000
DACH_PAV_SCHIBDATA DS 0CL12 Schib Data                                  00416000
DACH_PAV_DEVICEBUSYDTIME DS F Device busy delay time                    00417000
DACH_PAV_CUBUSYDTIME DS F CU busy delay time                            00418000
DACH_PAV_DPORTBUSYDTIME DS F Destination port busy delay time           00419000
DACH_PAV_DEVNALIAS DS H  Device number of PAV-Alias device if this is  *00420000
                         a bind or unbind request                       00421000
DACH_PAVBASEMBI DS H     MBI for base device                            00422000
DACH_PAVALIASMBI DS H    MBI for alias device                           00423000
DACH_PAV_SSIDALIAS DS X  Subchannel set of the alias device number      00424000
         DS    CL1       Reserved                                       00425000
DACH_PAV_FIELDS_LEN EQU *-DACH_PAV_FIELDS                               00426000
         ORG   ,                                                        00427000
*                                                                       00428000
* ********************************************************************  00429000
* *                                                                  *  00430000
* * Qualifier dependent area for Switch table change.                *  00431000
* *                                                                  *  00432000
* * DACHQN:   DACHSTC                                                *  00433000
* * DACHType: DACHSWTB                                               *  00434000
* *                                                                     00435000
* ********************************************************************  00436000
*                                                                       00437000
*                                                                       00438000
         ORG   DACHQUALD                                                00439000
DACH_ST_FIELDS DS 0X                                                    00440000
DACH_SW_SWITCHNUMBER DS CL4 Switch device number updated                00441000
DACH_SW_PORTNUMBER DS CL2 Port Address on Switch                        00442000
DACH_ST_FIELDS_LEN EQU *-DACH_ST_FIELDS                                 00443000
         ORG   ,                                                        00444000
*                                                                       00445000
* ********************************************************************  00446000
* *                                                                  *  00447000
* * Qualifier dependent area for Device Offline and In Use by        *  00448000
* * System Component                                                 *  00449000
* *                                                                  *  00450000
* * DACHQN:   DACHNAC                                                *  00451000
* * DACHType: DACHNAloc                                              *  00452000
* *                                                                     00453000
* ********************************************************************  00454000
*                                                                       00455000
*                                                                       00456000
         ORG   DACHQUALD                                                00457000
DACH_NALOC_FIELDS DS 0X                                                 00458000
DACH_NALOC DS  0CL32     Device offline and in use by system component  00459000
DACHNALOCUCB DS A        UCB for device in use                          00460000
         ORG   DACH_NALOC_FIELDS+32                                     00461000
DACH_NALOC_FIELDS_LEN EQU *-DACH_NALOC_FIELDS                           00462000
         ORG   ,                                                        00463000
*                                                                       00464000
* ********************************************************************  00465000
* *                                                                  *  00466000
* * Qualifier dependent area for Control Unit Transitions            *  00467000
* *                                                                  *  00468000
* * DACHQN:   DACHTran                                               *  00469000
* * DACHType: DACHTypeTran                                           *  00470000
* *                                                                     00471000
* ********************************************************************  00472000
*                                                                       00473000
*                                                                       00474000
         ORG   DACHQUALD                                                00475000
DACH_TRAN_FIELDS DS 0X                                                  00476000
DACH_TRAN_CU DS H        Control unit number undergoing transition      00477000
DACH_TRAN_MODE DS X      Target transition mode                         00478000
         DS    CL29      Reserved                                       00479000
DACH_TRAN_FIELDS_LEN EQU *-DACH_TRAN_FIELDS                             00480000
         ORG   ,                                                        00481000
*                                                                       00482000
* ********************************************************************  00483000
* *                                                                  *  00484000
* * Qualifier dependent area for PCIE Device Event                   *  00485000
* *                                                                  *  00486000
* * DACHQN:   DACHPCIE                                               *  00487000
* * DACHType: DACHTypePCIE                                           *  00488000
* *                                                                     00489000
* ********************************************************************  00490000
*                                                                       00491000
*                                                                       00492000
         ORG   DACHQUALD                                                00493000
DACH_PCIE_FIELDS DS 0X                                                  00494000
DACH_PCIE_PFID DS F      PFID of PCIE device involved in event          00495000
DACH_PCIE_DEVID DS H     Device ID of PCIE device involved in event     00496000
DACH_PCIE_VENDID DS H    Vendor ID of PCIE device involved in event     00497000
DACH_PCIE_EVENT DS X     Device event code                              00498000
         DS    CL23      Reserved                                       00499000
DACH_PCIE_FIELDS_LEN EQU *-DACH_PCIE_FIELDS                             00500000
         ORG   ,                                                        00501000
.L0002   ANOP                                                           00502000
         AIF   ('&DACH_FACL_FIELDS' EQ 'NO').L0005                      00503000
         AIF   ('&DSECT' EQ 'YES').L0006                                00504000
         AIF   ('&DACH_FACL_FIELDS' NE 'YES').L0005                     00505000
.L0006   ANOP                                                           00506000
*                                                                       00507000
* ********************************************************************  00508000
* *                                                                  *  00509000
* * Qualifier dependent area for device facility/capability change   *  00510000
* * event.                                                           *  00511000
* *                                                                  *  00512000
* * DACHQN:   DACHFacl                                               *  00513000
* * DACHType: DACHTypeFacl                                           *  00514000
* *                                                                  *  00515000
* * The type of facility or capability that changed is not           *  00516000
* * provided.  The listener should issue UCBINFO DEVINFO or examine  *  00517000
* * the UCB to determine which facilities or capabilities changed.   *  00518000
* *                                                                  *  00519000
* * A single ENF signal may be issued for multiple devices.  The     *  00520000
* * qualifier dependent area identifies the devices and/or device    *  00521000
* * ranges that are affected:                                        *  00522000
* *                                                                  *  00523000
* * -- An individual device is represented by a single device        *  00524000
* *    entry.  In this case, the DACH_FACL_RangeFirst and            *  00525000
* *    DACH_FACL_RangeLast flags are not set.                        *  00526000
* *                                                                  *  00527000
* * -- A range of devices is represented by two device entries.      *  00528000
* *    The first entry is for the first device in the range and has  *  00529000
* *    the DACH_FACL_RangeFirst flag set.  The second entry is for   *  00530000
* *    the last device in the range and has the DACH_FACL_RangeLast  *  00531000
* *    flag set.                                                     *  00532000
* *                                                                  *  00533000
* * -- The last entry has the DACH_FACL_Last flag set.               *  00534000
* *                                                                  *  00535000
* * Use DACH_FACL_DevEntry_Length to traverse the device entries.    *  00536000
* * Do not use the length of the DACH_FACL_DevEntry structure        *  00537000
* * (DSECT).                                                         *  00538000
* *                                                                  *  00539000
* * Since the number of devices or device ranges may exceed the      *  00540000
* * size of the 32 byte qualifier dependent area (DACHQUALD), this   *  00541000
* * area is defined at the end of the DACH (DACHEnd) instead of      *  00542000
* * DACHQUALD.                                                       *  00543000
* *                                                                     00544000
* ********************************************************************  00545000
*                                                                       00546000
*                                                                       00547000
         AIF   ('&DSECT' EQ 'YES').L0007                                00548000
DACH_FACL_FIELDS DS 0F   Qualifier data                                 00549000
         AGO   .L0008                                                   00550000
.L0007   ANOP                                                           00551000
DACH_FACL_FIELDS DSECT   Qualifier data                                 00552000
.L0008   ANOP                                                           00553000
DACH_FACL_HDR DS 0CL32   Header information                             00554000
DACH_FACL_DEVENTRY_COUNT DS F Number of device entries                  00555000
DACH_FACL_DEVENTRY_LENGTH DS H Device entry length                      00556000
         DS    CL26      Reserved                                       00557000
DACH_FACL_HDREND DS 0C   End of header                                  00558000
DACH_FACL_FIELDS_LEN EQU *-DACH_FACL_FIELDS                             00559000
.L0005   ANOP                                                           00560000
         AIF   ('&DACH_FACL_DEVENTRY' EQ 'NO').L0009                    00561000
         AIF   ('&DSECT' EQ 'YES').L000A                                00562000
         AIF   ('&DACH_FACL_DEVENTRY' NE 'YES').L0009                   00563000
DACH_FACL_DEVENTRY DS 0F Device entry                                   00564000
         AGO   .L000B                                                   00565000
.L000A   ANOP                                                           00566000
DACH_FACL_DEVENTRY DSECT   Device entry                                 00567000
.L000B   ANOP                                                           00568000
DACH_FACL_FLAGS DS 0B    Flags                                          00569000
DACH_FLAG_LAST EQU X'80' Last device entry                              00570000
DACH_FLAG_RANGEFIRST EQU X'40' Device is the first in a range of       *00571000
                         devices                                        00572000
DACH_FLAG_RANGELAST EQU X'20' Device is the last in a range of devices  00573000
         ORG   DACH_FACL_FLAGS+1                                        00574000
DACH_FACL_SCHSET DS X    Subchannel set id                              00575000
DACH_FACL_DEVNO DS H     Device number                                  00576000
*                                                                       00577000
* ********************************************************************  00578000
* *                                                                  *  00579000
* * Values for DACH qualifier number field (DACHQN).  This is part   *  00580000
* * of the ENF qualifier.                                            *  00581000
* *                                                                     00582000
* ********************************************************************  00583000
*                                                                       00584000
*                                                                       00585000
DACHIO   EQU   X'0001'   Qualifier value for ENF signal/listener when  *00586000
                         listening for an IO subchannel change          00587000
DACHIORA EQU   X'0002'   Qualifier value for ENF signal/listener when  *00588000
                         listening for IO resource available.           00589000
DACHCCDR EQU   X'0003'   Qualifier value for ENF signal/listener when  *00590000
                         listening for a change CDR (add or delete     *00591000
                         Configuration Data Record)                     00592000
DACHPAV  EQU   X'0004'   Qualifier value for ENF signal/listener when  *00593000
                         listening for a change in the set of PAV UCBs  00594000
DACHQAPI EQU   X'0005'   Qualifier value for ENF signal/listener when  *00595000
                         listening for a change in the Adjunct         *00596000
                         Processor Information                          00597000
DACHSTC  EQU   X'0006'   Qualifier value for ENF signal/listener when  *00598000
                         listening for a change in the switch table     00599000
DACHNAC  EQU   X'0007'   Qualifier value for ENF signal/listener when  *00600000
                         listening for an offline device in use by     *00601000
                         system component                               00602000
DACHTRAN EQU   X'0008'   Qualifier value for ENF signal/listener when  *00603000
                         listening for a control unit transitioning    *00604000
                         event                                          00605000
DACHPCIE EQU   X'0009'   Qualifier value for ENF signal/listener when  *00606000
                         listening for a PCIE Device event              00607000
DACHFACL EQU   X'000A'   Qualifier value for ENF signal/listener when  *00608000
                         listening for a device facility/capability    *00609000
                         change event                                   00610000
DACHIO_AS EQU  X'1001'   Qualifier value for ENF signal/listener when  *00611000
                         listening for an IO subchannel change for a   *00612000
                         device in an alternate subchannel set          00613000
DACHIORA_AS EQU X'1002'  Qualifier value for ENF signal/listener when  *00614000
                         listening for an IO resource available in an  *00615000
                         alternate subchannel set                       00616000
DACHPAV_AS EQU X'1004'   Qualifier value for ENF signal/listener when  *00617000
                         listening for a change in the set of PAV UCBs *00618000
                         of which a device is in an alternate          *00619000
                         subchannel set                                 00620000
*                                                                       00621000
* ********************************************************************  00622000
* *                                                                  *  00623000
* * Values for DACHTYPE field follow.  These values MUST be unique   *  00624000
* * even though they are further defining a specific qualifier       *  00625000
* * number.  The reason for this is that some listeners may not use  *  00626000
* * the qualifier number field ENF qualifier, but still need to      *  00627000
* * determine the exact event that occurred.                         *  00628000
* *                                                                     00629000
* ********************************************************************  00630000
* ********************************************************************  00631000
* *                                                                  *  00632000
* * Values for DACHTYPE field.  These are types defining the         *  00633000
* * IO subchannel change qualifier number.                           *  00634000
* *                                                                     00635000
* ********************************************************************  00636000
*                                                                       00637000
*                                                                       00638000
DACHIPI  EQU   C'IPI '   Installed parameters initialized               00639000
DACHIPM  EQU   C'IPM '   Installed parameters modified                  00640000
DACHIPR  EQU   C'IPR '   Installed parameters restored                  00641000
*                                                                       00642000
* ********************************************************************  00643000
* *                                                                  *  00644000
* * Values for DACHTYPE field.  These are types defining the         *  00645000
* * IO resource available qualifier number.                          *  00646000
* *                                                                     00647000
* ********************************************************************  00648000
*                                                                       00649000
*                                                                       00650000
DACHLPE  EQU   C'LPE '   Logical path established type.                 00651000
*                                                                       00652000
* ********************************************************************  00653000
* *                                                                  *  00654000
* * Values for DACHTYPE field.  These are types defining the         *  00655000
* * change CDR qualifier number.                                     *  00656000
* *                                                                     00657000
* ********************************************************************  00658000
*                                                                       00659000
*                                                                       00660000
DACHACDR EQU   C'ACDR'   Change CDR is an add CDR record                00661000
DACHDCDR EQU   C'DCDR'   Change CDR is a delete CDR record              00662000
*                                                                       00663000
* ********************************************************************  00664000
* *                                                                  *  00665000
* * Values for DACHTYPE field.  This type is for the set of          *  00666000
* * Parallel Access Volumes Alias UCBs.                              *  00667000
* *                                                                     00668000
* ********************************************************************  00669000
*                                                                       00670000
*                                                                       00671000
DACHPAVS EQU   C'PAVS'   Change in the set of PAV-alias devices         00672000
*                                                                       00673000
* ********************************************************************  00674000
* *                                                                  *  00675000
* * Values for DACHTYPE field.  This type is for the Adjunct         *  00676000
* * Processor Information.                                           *  00677000
* *                                                                     00678000
* ********************************************************************  00679000
*                                                                       00680000
*                                                                       00681000
DACHAPI  EQU   C'API '   Change in the Adjunct Processor Info           00682000
*                                                                       00683000
* ********************************************************************  00684000
* *                                                                  *  00685000
* * Values for DACHTYPE field.  These fields define the Port Record  *  00686000
* * update.                                                          *  00687000
* *                                                                     00688000
* ********************************************************************  00689000
*                                                                       00690000
*                                                                       00691000
DACHSWTB EQU   C'SWTB'   Change in the Port State                       00692000
*                                                                       00693000
* ********************************************************************  00694000
* *                                                                  *  00695000
* * Values for DACHTYPE field.  This type is for the Device          *  00696000
* * Offline and In Use by System Component ENF.                      *  00697000
* *                                                                     00698000
* ********************************************************************  00699000
*                                                                       00700000
*                                                                       00701000
DACHNALOC EQU  C'NALC'   Offline device in use                          00702000
*                                                                       00703000
* ********************************************************************  00704000
* *                                                                  *  00705000
* * Values for DACHTYPE field.  This type is for the Control Unit    *  00706000
* * Transition event                                                 *  00707000
* *                                                                     00708000
* ********************************************************************  00709000
*                                                                       00710000
*                                                                       00711000
DACHTYPETRAN EQU C'TRAN' Transition                                     00712000
*                                                                       00713000
* ********************************************************************  00714000
* *                                                                  *  00715000
* * Values for DACHTYPE field.  This type is for the PCIE Online/    *  00716000
* * Offline event                                                    *  00717000
* *                                                                     00718000
* ********************************************************************  00719000
*                                                                       00720000
*                                                                       00721000
DACHTYPEPCIE EQU C'PCIE' PCIE Event                                     00722000
*                                                                       00723000
* ********************************************************************  00724000
* *                                                                  *  00725000
* * Values for DACHTYPE field.  This type is for a monitor change    *  00726000
* * request event                                                    *  00727000
* *                                                                     00728000
* ********************************************************************  00729000
*                                                                       00730000
*                                                                       00731000
DACHMONC EQU   C'MONC'   Monitoring change is requested                 00732000
*                                                                       00733000
* ********************************************************************  00734000
* *                                                                  *  00735000
* * Values for DACHTYPE field.  This type is for a facility or       *  00736000
* * capability change request event.                                 *  00737000
* *                                                                     00738000
* ********************************************************************  00739000
*                                                                       00740000
*                                                                       00741000
DACHTYPEFACL EQU C'FACL' Facility/capability change event               00742000
DACH_FACL_DEVENTRY_LEN EQU *-DACH_FACL_DEVENTRY                         00743000
.L0009   ANOP                                                           00744000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00745000
         AIF   ('&LIST' EQ 'YES').P4                                    00746000
.P3      ANOP                                                           00747000
         POP   PRINT                                                    00748000
.P4      ANOP                                                           00749000
.P_EXIT  ANOP                                                           00750000
         MEND                                                           00751000
**/ IOSDDACH_2:;                                                        00752000
* %IOSDDACH_INCLUDED = 'YES';                                           00753000
* %DCL ZCBPRINT CHAR EXT;                                               00754000
* %DEACTIVATE ZCBPRINT;                                                 00755000
* %DCL IOSDDACH_LIST CHAR EXT;                                          00756000
* %DEACTIVATE IOSDDACH_LIST;                                            00757000
* %IF IOSDDACH_LIST ^= 'NO' &                                           00758000
*    ZCBPRINT ^= 'NO' %THEN                                             00759000
*   %GOTO IOSDDACH_3;                                                   00760000
*   @LIST PUSH NOECHO;                                                  00761000
*   @LIST NOASSEMBLE NOECHO;                                            00762000
*   @LIST OFF C NOECHO;                                                 00763000
* %IOSDDACH_3:;                                                         00764000
*/* Start of PL/X Source                                             */ 00765000
*%IF DACHBASE = '' %THEN %GOTO DACH100;                                 00766000
* DCL 1 DACH BDY(WORD) DACHBASE,      /* ENF signal 33 parameter list   00767000
*                                      */                               00768000
*%GOTO DACH110;                                                         00769000
*%DACH100:;                                                             00770000
* DCL 1 DACH BDY(WORD),                /* ENF signal 33 parameter list  00771000
*                                       */                              00772000
*%DACH110:;                                                             00773000
*@SPACE(2);                                                             00774000
*       3 DACHID   CHAR(4),         /* Control block ID              */ 00775000
*       3 DACHVERS FIXED(8),        /* Version number                */ 00776000
*       3 DACHDEVC CHAR(2),         /* Device category                  00777000
*                                                                    */ 00778000
*       3 DACHTYPE CHAR(4),         /* Type of change that occurred to  00779000
*                                      the device  (See constant        00780000
*                                      declaration for valid types)  */ 00781000
*       3 *         CHAR(1),        /* reserved                      */ 00782000
*       3 DACHQUALD CHAR(32),       /* Qualifier dependent area  @02C*/ 00783000
*       3 DACHQC CHAR(4) BDY(WORD), /* Copy of ENF Qualifier.    @02A*/ 00784000
*         4 DACHUCBC CHAR(1)    ,   /* Device class from UCBTYP field   00785000
*                                      (Byte 3 of UCBTYP)        @02A*/ 00786000
*         4 *        CHAR(1),       /* Reserved.                 @02A*/ 00787000
*         4 DACHQN   FIXED(16),     /* DACH qualifier number            00788000
*                                      field                     @02A*/ 00789000
*       3 DACHRES  CHAR(16),        /* reserved                  @02C*/ 00790000
*       3 DACHEND CHAR(0);          /* End of DACH parameter list    */ 00791000
*                                                                       00792000
*                                                                       00793000
*/********************************************************************/ 00794000
*/*                                                                  */ 00795000
*/* Qualifier dependent areas follow.                                */ 00796000
*/*                                                              @02A*/ 00797000
*/********************************************************************/ 00798000
*                                                                       00799000
*/********************************************************************/ 00800000
*/*                                                                  */ 00801000
*/* Qualifier dependent area for I/O subchannel change.              */ 00802000
*/*                                                                  */ 00803000
*/* DACHQN:   DACHIO or DACHIO_AS (alternate subchannel set)         */ 00804000
*/* DACHType: DACHIPI DACHIPM DACHIPR DACHMONC                       */ 00805000
*/*                                                              @ABC*/ 00806000
*/********************************************************************/ 00807000
*DCL 1 DACH_IO_FIELDS DEFINED(DACHQUALD),   /*                   @02A*/ 00808000
*      3 DACH_IO_DEVN FIXED(16),      /* Device number undergoing a     00809000
*                                        subchannel change       @02A*/ 00810000
*      3 DACH_IO_DTYP CHAR(4),        /* Device type from               00811000
*                                        UCBTYP                  @L6C*/ 00812000
*      3 DACH_IO_SSID FIXED(8),       /* Subchannel set of the device   00813000
*                                        number                  @L6A*/ 00814000
*      3 DACH_IO_QUAL FIXED(8);       /* Qualifier for event (May or    00815000
*                                        may not be used, depends on    00816000
*                                        DACHTYPE).              @09A*/ 00817000
*                                                                       00818000
*DCL DACH_IO_QUAL_MONC_ON FIXED(8) CONSTANT(1); /* DACHTYPE=DACHMONC,   00819000
*                                        The device identified in       00820000
*                                        DACH_IO_DEVN and DACH_IO_SSID  00821000
*                                        now requires monitoring @09A*/ 00822000
*DCL DACH_IO_QUAL_MONC_OFF FIXED(8) CONSTANT(2);/* DACHTYPE=DACHMONC,   00823000
*                                        one or more devices that       00824000
*                                        required monitoring no longer  00825000
*                                        require monitoring.     @09A*/ 00826000
*/********************************************************************/ 00827000
*/*                                                                  */ 00828000
*/* Qualifier dependent area for IO resource accessible              */ 00829000
*/*                                                                  */ 00830000
*/* DACHQN:   DACHIORA or DACHIORA_AS (alternate subchannel set)     */ 00831000
*/* DACHType: DACHLPE                                                */ 00832000
*/*                                                              @ABC*/ 00833000
*/********************************************************************/ 00834000
*DCL 1 DACH_IORA_FIELDS DEFINED(DACHQUALD),  /*                  @02A*/ 00835000
*      3 DACH_IORA_DEVN FIXED(16),    /* Device number becomming        00836000
*                                        accessible              @L1C*/ 00837000
*      3 DACH_IORA_DTYP CHAR(4),      /* Device type from               00838000
*                                        UCBTYP                  @02A*/ 00839000
*      3 DACH_IORA_CHPD FIXED(8),     /* CHPID established.      @02A*/ 00840000
*      3 DACH_IORA_FLAGS BIT(8),      /*                         @A1C*/ 00841000
*        5 DACH_IORA_ONLI BIT(1),     /* On if device was online @02A*/ 00842000
*        5 DACH_IORA_VARY_DEV BIT(1), /* On if IOS issued a VARY        00843000
*                                        command in order to bring a    00844000
*                                        device online that was marked  00845000
*                                        offline due to CC3 during NIP  00846000
*                                                                @03A*/ 00847000
*        5 * BIT(6),                  /*                         @L7C*/ 00848000
*      3 DACH_IORA_SSID FIXED(8),     /* Subchannel set ID associated   00849000
*                                        with the IO resource    @A6A*/ 00850000
*      3 *              CHAR(23);     /* Reserved                @A6A*/ 00851000
*                                                                       00852000
*     /* Value for DACHID                                            */ 00853000
* DCL DACHDACH CHAR(4) CONSTANT('DACH'); /* DACH control block ID    */ 00854000
*     /* Value for DACHVERS                                          */ 00855000
* DCL DACHVERC FIXED(8) CONSTANT(1);     /* DACH version number      */ 00856000
*     /* Value for DACHDEVC                                          */ 00857000
* DCL DACHDTIO CHAR(2) CONSTANT('IO'); /* Device undergoing subchannel  00858000
*                                      change is an I/O device   @L1C*/ 00859000
* DCL DACHDTCU CHAR(2) CONSTANT('CU'); /* Device category is Control    00860000
*                                      Unit                      @A1A*/ 00861000
*     /* Value for DACH_TRAN_MODE                                @A1A*/ 00862000
* DCL DACH_HyperPav_Transition FIXED(8) CONSTANT(1); /*                 00863000
*                                      PAVMode change processing is     00864000
*                                      requested for all devices in     00865000
*                                      the LSS, target transition is    00866000
*                                      HyperPAV mode.            @A1A*/ 00867000
* DCL DACH_BasePav_Transition  FIXED(8) CONSTANT(2); /*                 00868000
*                                      PAVMode change processing is     00869000
*                                      requested for all devices in     00870000
*                                      the LSS, target transition is    00871000
*                                      Base PAV mode.            @A1A*/ 00872000
* DCL DACH_XPav_Transition  FIXED(8) CONSTANT(4); /*                    00873000
*                                      PAVMode change processing is     00874000
*                                      requested for all devices in     00875000
*                                      the LSS, target transition is    00876000
*                                      XPAV mode.                @AAA*/ 00877000
*                                                                       00878000
*     /* Value for DACH_PCIE_EVENT                               @LBA*/ 00879000
* DCL DACH_PCIE_Device_Online  FIXED(8) CONSTANT(1); /*                 00880000
*                                      PCIE Device is online     @LBA*/ 00881000
* DCL DACH_PCIE_Device_Offline FIXED(8) CONSTANT(2); /*                 00882000
*                                      PCIE Device is offline    @LBA*/ 00883000
* DCL DACH_PCIE_Port_StateChg  FIXED(8) CONSTANT(3); /*                 00884000
*                                      PCIE Port state change    @ABA*/ 00885000
*                                                                       00886000
*/********************************************************************/ 00887000
*/*                                                                  */ 00888000
*/* Qualifier dependent area for CDR change (add or delete CDR       */ 00889000
*/* record)                                                          */ 00890000
*/*                                                                  */ 00891000
*/* DACHQN:   DACHCCDR                                               */ 00892000
*/* DACHType: DACHACDR DACHDCDR                                      */ 00893000
*/*                                                              @ABC*/ 00894000
*/********************************************************************/ 00895000
*DCL 1 DACH_CCDR_FIELDS DEFINED(DACHQUALD),  /*                  @L1A*/ 00896000
*      3 DACH_CCDR_TIMESTP CHAR(8),   /* TOD clock value         @L1A*/ 00897000
*        5 DACH_CCDR_DATE CHAR(4),    /* Date                    @L1A*/ 00898000
*        5 DACH_CCDR_TIME CHAR(4),    /* Time                    @L1A*/ 00899000
*      3 DACH_CCDR_DEVN FIXED(16),    /* Device number undergoing a     00900000
*                                        CDR change              @L1A*/ 00901000
*      3 DACH_CCDR_DTYP CHAR(4),      /* Device type from               00902000
*                                        UCBTYP                  @L1A*/ 00903000
*      3 DACH_CCDR_CDRLEN FIXED(16),  /* Length of CDR record    @L1A*/ 00904000
*      3 DACH_CCDR_CDRADR PTR(31),    /* Address of CDR record   @L1A*/ 00905000
*      3 DACH_CCDR_CHPID   FIXED(8);  /* Channel path that the CDR      00906000
*                                        record was obtained     @L7C*/ 00907000
*                                                                       00908000
*/********************************************************************/ 00909000
*/*                                                                  */ 00910000
*/* Qualifier dependent area for Parallel Access Volume changes.     */ 00911000
*/*                                                                  */ 00912000
*/* DACHQN:   DACHPAV or DACHPAV_AS (alternate subchannel set)       */ 00913000
*/* DACHType: DACHPAVS                                               */ 00914000
*/*                                                              @ABC*/ 00915000
*/********************************************************************/ 00916000
*DCL 1 DACH_PAV_FIELDS DEFINED(DACHQUALD),      /*               @04A*/ 00917000
*      3 DACH_PAV_DEVN FIXED(16),     /* Device number of PAV-base      00918000
*                                        device                  @04A*/ 00919000
*      3 DACH_PAV_FLGS CHAR(2),       /* Flags                   @04A*/ 00920000
*        5 DACH_PAVBind Bit(1),       /* Alias is bound to base  @04A*/ 00921000
*        5 DACH_PAVUnbind Bit(1),     /* Alias is unbound from          00922000
*                                        base                    @04A*/ 00923000
*        5 DACH_PAVUnbindAll Bit(1),  /* All aliases are unbound        00924000
*                                        from base               @04A*/ 00925000
*        5 DACH_PAVSchibDataValid Bit(1), /* Schib data is valid @05C*/ 00926000
*        5 DACH_PAV_BaseMBIValid Bit(1),  /* The MBI for the base       00927000
*                                        device is valid         @05A*/ 00928000
*        5 DACH_PAV_AliasMBIValid Bit(1), /* The MBI for the alias      00929000
*                                        device is valid         @05A*/ 00930000
*        5 DACH_PAV_DBT_Valid Bit(1), /* The device busy time for the   00931000
*                                        alias device is valid   @L4A*/ 00932000
*        5 * Bit(9),                  /* Reserved                @L4C*/ 00933000
*      3 DACH_PAV_CNT  FIXED(15),     /* Count of PAVs, including       00934000
*                                        base                    @04A*/ 00935000
*      3 DACH_PAV_SSIDBase FIXED(8),  /* Subchannel set ID associated   00936000
*                                        with the PAV-Base dev.  @A6A*/ 00937000
*      3 *             CHAR(1),       /* Reserved                @A6C*/ 00938000
*      3 DACH_PAV_TOKN CHAR(4),       /* PAV token after change  @04A*/ 00939000
*      3 DACH_PAV_SchibData CHAR(12) BDY(WORD), /* Schib Data    @05C*/ 00940000
*        5 DACH_PAV_DeviceBusyDTime FIXED(32),  /* Device busy delay    00941000
*                                                  time          @05C*/ 00942000
*        5 DACH_PAV_CUBusyDTime     FIXED(32),  /* CU busy delay        00943000
*                                                  time          @05C*/ 00944000
*        5 DACH_PAV_DPortBusyDTime  FIXED(32),  /* Destination port     00945000
*                                        busy delay time         @06C*/ 00946000
*      3 DACH_PAV_DEVNAlias FIXED(16),/* Device number of PAV-Alias     00947000
*                                        device if this is a bind       00948000
*                                        or unbind request       @04A*/ 00949000
*      3 DACH_PAVBaseMBI Fixed(16),   /* MBI for base device     @05C*/ 00950000
*      3 DACH_PAVAliasMBI Fixed(16),  /* MBI for alias device    @05C*/ 00951000
*      3 DACH_PAV_SSIDAlias FIXED(8), /* Subchannel set of the alias    00952000
*                                        device number           @L6A*/ 00953000
*      3 * CHAR(1);                   /* Reserved                @L6C*/ 00954000
*                                                                       00955000
*/********************************************************************/ 00956000
*/*                                                                  */ 00957000
*/* Qualifier dependent area for Switch table change.                */ 00958000
*/*                                                                  */ 00959000
*/* DACHQN:   DACHSTC                                                */ 00960000
*/* DACHType: DACHSWTB                                               */ 00961000
*/*                                                              @ABC*/ 00962000
*/********************************************************************/ 00963000
*DCL 1 DACH_ST_FIELDS DEFINED(DACHQUALD),   /*                   @L3A*/ 00964000
*      3 DACH_SW_SwitchNumber CHAR(4),      /* Switch device     @L3A   00965000
*                                              number updated        */ 00966000
*      3 DACH_SW_PortNumber CHAR(2);        /* Port Address on   @L3A   00967000
*                                              Switch                */ 00968000
*                                                                       00969000
*/********************************************************************/ 00970000
*/*                                                                  */ 00971000
*/* Qualifier dependent area for Device Offline and In Use by        */ 00972000
*/* System Component                                                 */ 00973000
*/*                                                                  */ 00974000
*/* DACHQN:   DACHNAC                                                */ 00975000
*/* DACHType: DACHNAloc                                              */ 00976000
*/*                                                              @ABC*/ 00977000
*/********************************************************************/ 00978000
*DCL 1 DACH_NALOC_FIELDS DEFINED(DACHQUALD),/*                   @L5A*/ 00979000
*      3 DACH_NALOC    CHAR(32) Bdy(Word),  /* Device offline and in    00980000
*                                              use by system component  00981000
*                                                                @L5A*/ 00982000
*        5 DACHNALOCUCB     Ptr(31);        /* UCB for device in use    00983000
*                                                                @L5A*/ 00984000
*                                                                       00985000
*/********************************************************************/ 00986000
*/*                                                                  */ 00987000
*/* Qualifier dependent area for Control Unit Transitions            */ 00988000
*/*                                                                  */ 00989000
*/* DACHQN:   DACHTran                                               */ 00990000
*/* DACHType: DACHTypeTran                                           */ 00991000
*/*                                                              @ABC*/ 00992000
*/********************************************************************/ 00993000
*DCL 1 DACH_TRAN_FIELDS DEFINED(DACHQUALD), /*                   @A1A*/ 00994000
*      3 DACH_TRAN_CU FIXED(16),      /* Control unit number undergoing 00995000
*                                        transition              @A1A*/ 00996000
*      3 DACH_TRAN_MODE FIXED(8),     /* Target transition mode  @A1A*/ 00997000
*      3 * CHAR(29);                  /* Reserved                @A1A*/ 00998000
*                                                                       00999000
*/********************************************************************/ 01000000
*/*                                                                  */ 01001000
*/* Qualifier dependent area for PCIE Device Event                   */ 01002000
*/*                                                                  */ 01003000
*/* DACHQN:   DACHPCIE                                               */ 01004000
*/* DACHType: DACHTypePCIE                                           */ 01005000
*/*                                                              @ABC*/ 01006000
*/********************************************************************/ 01007000
*DCL 1 DACH_PCIE_FIELDS DEFINED(DACHQUALD), /*                   @LBA*/ 01008000
*      3 DACH_PCIE_PFID FIXED(32),    /* PFID of PCIE device involved   01009000
*                                        in event                @LBA*/ 01010000
*      3 DACH_PCIE_DevID FIXED(16),   /* Device ID of PCIE device       01011000
*                                        involved in event       @LBA*/ 01012000
*      3 DACH_PCIE_VendID FIXED(16),  /* Vendor ID of PCIE device       01013000
*                                        involved in event       @LBA*/ 01014000
*      3 DACH_PCIE_EVENT FIXED(8),    /* Device event code       @LBA*/ 01015000
*      3 * CHAR(23);                  /* Reserved                @LBA*/ 01016000
*                                                                       01017000
*/********************************************************************/ 01018000
*/*                                                                  */ 01019000
*/* Qualifier dependent area for device facility/capability change   */ 01020000
*/* event.                                                           */ 01021000
*/*                                                                  */ 01022000
*/* DACHQN:   DACHFacl                                               */ 01023000
*/* DACHType: DACHTypeFacl                                           */ 01024000
*/*                                                                  */ 01025000
*/* The type of facility or capability that changed is not           */ 01026000
*/* provided.  The listener should issue UCBINFO DEVINFO or examine  */ 01027000
*/* the UCB to determine which facilities or capabilities changed.   */ 01028000
*/*                                                                  */ 01029000
*/* A single ENF signal may be issued for multiple devices.  The     */ 01030000
*/* qualifier dependent area identifies the devices and/or device    */ 01031000
*/* ranges that are affected:                                        */ 01032000
*/*                                                                  */ 01033000
*/* -- An individual device is represented by a single device        */ 01034000
*/*    entry.  In this case, the DACH_FACL_RangeFirst and            */ 01035000
*/*    DACH_FACL_RangeLast flags are not set.                        */ 01036000
*/*                                                                  */ 01037000
*/* -- A range of devices is represented by two device entries.      */ 01038000
*/*    The first entry is for the first device in the range and has  */ 01039000
*/*    the DACH_FACL_RangeFirst flag set.  The second entry is for   */ 01040000
*/*    the last device in the range and has the DACH_FACL_RangeLast  */ 01041000
*/*    flag set.                                                     */ 01042000
*/*                                                                  */ 01043000
*/* -- The last entry has the DACH_FACL_Last flag set.               */ 01044000
*/*                                                                  */ 01045000
*/* Use DACH_FACL_DevEntry_Length to traverse the device entries.    */ 01046000
*/* Do not use the length of the DACH_FACL_DevEntry structure        */ 01047000
*/* (DSECT).                                                         */ 01048000
*/*                                                                  */ 01049000
*/* Since the number of devices or device ranges may exceed the      */ 01050000
*/* size of the 32 byte qualifier dependent area (DACHQUALD), this   */ 01051000
*/* area is defined at the end of the DACH (DACHEnd) instead of      */ 01052000
*/* DACHQUALD.                                                       */ 01053000
*/*                                                              @ABA*/ 01054000
*/********************************************************************/ 01055000
*DCL                                                                    01056000
*  1 DACH_FACL_Fields BDY(WORD) BASED(ADDR(DACHEnd)),                   01057000
*                                   /* Qualifier data            @ABA*/ 01058000
*    3 DACH_FACL_Hdr,               /* Header information        @ABA*/ 01059000
*      5 DACH_FACL_DevEntry_Count Fixed(31),                            01060000
*                                   /* Number of device entries  @ABA*/ 01061000
*      5 DACH_FACL_DevEntry_Length Fixed(15),                           01062000
*                                   /* Device entry length       @ABA*/ 01063000
*      5 * CHAR(26),                /* Reserved                  @ABA*/ 01064000
*      5 DACH_FACL_HdrEnd Char(0);  /* End of header             @ABA*/ 01065000
*                                                                       01066000
*DCL                                                                    01067000
*  1 DACH_FACL_DevEntry(*) BDY(WORD) BASED,                             01068000
*                                   /* Device entry              @ABA*/ 01069000
*    3 DACH_FACL_Flags BIT(8),      /* Flags                     @ABA*/ 01070000
*      5 DACH_Flag_Last BIT(1),     /* Last device entry         @ABA*/ 01071000
*      5 DACH_Flag_RangeFirst BIT(1),                                   01072000
*                                   /* Device is the first in a range   01073000
*                                      of devices                @ABA*/ 01074000
*      5 DACH_Flag_RangeLast BIT(1),                                    01075000
*                                   /* Device is the last in a range    01076000
*                                      of devices                @ABA*/ 01077000
*      5 * BIT(5),                  /* Reserved                  @ABA*/ 01078000
*    3 DACH_FACL_Schset FIXED(8),   /* Subchannel set id         @ABA*/ 01079000
*    3 DACH_FACL_Devno FIXED(16);   /* Device number             @ABA*/ 01080000
*                                                                       01081000
*/********************************************************************/ 01082000
*/*                                                                  */ 01083000
*/* Values for DACH qualifier number field (DACHQN).  This is part   */ 01084000
*/* of the ENF qualifier.                                            */ 01085000
*/*                                                              @02C*/ 01086000
*/********************************************************************/ 01087000
* DCL DACHIO BIT(16) CONSTANT('0001'X),                                 01088000
*                                     /* Qualifier value for ENF        01089000
*                                      signal/listener when listening   01090000
*                                      for an IO subchannel             01091000
*                                      change                    @L1C*/ 01092000
*     DACHIORA BIT(16) CONSTANT('0002'X), /* Qualifier value for        01093000
*                                      ENF signal/listener when         01094000
*                                      listening for IO resource        01095000
*                                      available.                @02A*/ 01096000
*     DACHCCDR  BIT(16) CONSTANT('0003'X), /* Qualifier value for       01097000
*                                      ENF signal/listener when         01098000
*                                      listening for a change CDR       01099000
*                                      (add or delete                   01100000
*                                       Configuration Data Record)      01101000
*                                                                @L1A*/ 01102000
*     DACHPAV   BIT(16) CONSTANT('0004'X), /* Qualifier value for       01103000
*                                      ENF signal/listener when         01104000
*                                      listening for a change in        01105000
*                                      the set of PAV UCBs              01106000
*                                                                @04A*/ 01107000
*     DACHQAPI   BIT(16) CONSTANT('0005'X), /* Qualifier value for      01108000
*                                      ENF signal/listener when         01109000
*                                      listening for a change in        01110000
*                                      the Adjunct Processor            01111000
*                                      Information               @L2A*/ 01112000
*     DACHSTC   BIT(16) CONSTANT('0006'X), /* Qualifier value for       01113000
*                                      ENF signal/listener when         01114000
*                                      listening for a change in        01115000
*                                      the switch table          @L5C*/ 01116000
*     DACHNAC   BIT(16) CONSTANT('0007'X), /* Qualifier value for ENF   01117000
*                                      signal/listener when listening   01118000
*                                      for an offline device in use by  01119000
*                                      system component          @L6C*/ 01120000
*     DACHTRAN  BIT(16) CONSTANT('0008'X), /* Qualifier value for ENF   01121000
*                                      signal/listener when listening   01122000
*                                      for a control unit transitioning 01123000
*                                      event                     @A1A*/ 01124000
*     DACHPCIE  BIT(16) CONSTANT('0009'X), /* Qualifier value for ENF   01125000
*                                      signal/listener when listening   01126000
*                                      for a PCIE Device event   @LBA*/ 01127000
*     DACHFACL  BIT(16) CONSTANT('000A'X), /* Qualifier value for ENF   01128000
*                                      signal/listener when listening   01129000
*                                      for a device facility/capability 01130000
*                                      change event              @ABA*/ 01131000
*     DACHIO_AS BIT(16) CONSTANT('1001'X),                              01132000
*                                     /* Qualifier value for ENF        01133000
*                                      signal/listener when listening   01134000
*                                      for an IO subchannel change for  01135000
*                                      a device in an alternate         01136000
*                                      subchannel set            @L6A*/ 01137000
*     DACHIORA_AS BIT(16) CONSTANT('1002'X), /* Qualifier value for     01138000
*                                      ENF signal/listener when         01139000
*                                      listening for an IO resource     01140000
*                                      available in an alternate        01141000
*                                      subchannel set            @A6A*/ 01142000
*     DACHPAV_AS  BIT(16) CONSTANT('1004'X); /* Qualifier value for     01143000
*                                      ENF signal/listener when         01144000
*                                      listening for a change in        01145000
*                                      the set of PAV UCBs of which a   01146000
*                                      device is in an alternate        01147000
*                                      subchannel set            @L6A*/ 01148000
*                                                                       01149000
*/********************************************************************/ 01150000
*/*                                                                  */ 01151000
*/* Values for DACHTYPE field follow.  These values MUST be unique   */ 01152000
*/* even though they are further defining a specific qualifier       */ 01153000
*/* number.  The reason for this is that some listeners may not use  */ 01154000
*/* the qualifier number field ENF qualifier, but still need to      */ 01155000
*/* determine the exact event that occurred.                         */ 01156000
*/*                                                              @02C*/ 01157000
*/********************************************************************/ 01158000
*                                                                       01159000
*/********************************************************************/ 01160000
*/*                                                                  */ 01161000
*/* Values for DACHTYPE field.  These are types defining the         */ 01162000
*/* IO subchannel change qualifier number.                           */ 01163000
*/*                                                              @L1C*/ 01164000
*/********************************************************************/ 01165000
* DCL DACHIPI CHAR(4) CONSTANT('IPI ');/* Installed parameters          01166000
*                                      initialized                   */ 01167000
* DCL DACHIPM CHAR(4) CONSTANT('IPM ');/* Installed parameters          01168000
*                                      modified                  @01A*/ 01169000
* DCL DACHIPR CHAR(4) CONSTANT('IPR ');/* Installed parameters          01170000
*                                      restored                  @LAA*/ 01171000
*                                                                       01172000
*/********************************************************************/ 01173000
*/*                                                                  */ 01174000
*/* Values for DACHTYPE field.  These are types defining the         */ 01175000
*/* IO resource available qualifier number.                          */ 01176000
*/*                                                              @02A*/ 01177000
*/********************************************************************/ 01178000
* DCL DACHLPE CHAR(4) CONSTANT('LPE '); /* Logical path established     01179000
*                                           type.                @02A*/ 01180000
*                                                                       01181000
*/********************************************************************/ 01182000
*/*                                                                  */ 01183000
*/* Values for DACHTYPE field.  These are types defining the         */ 01184000
*/* change CDR qualifier number.                                     */ 01185000
*/*                                                              @L1A*/ 01186000
*/********************************************************************/ 01187000
* DCL DACHACDR CHAR(4) CONSTANT('ACDR'); /* Change CDR is an add        01188000
*                                           CDR record           @L1A*/ 01189000
* DCL DACHDCDR CHAR(4) CONSTANT('DCDR'); /* Change CDR is a delete      01190000
*                                           CDR record           @L1A*/ 01191000
*/********************************************************************/ 01192000
*/*                                                                  */ 01193000
*/* Values for DACHTYPE field.  This type is for the set of          */ 01194000
*/* Parallel Access Volumes Alias UCBs.                              */ 01195000
*/*                                                              @04A*/ 01196000
*/********************************************************************/ 01197000
* DCL DACHPAVS CHAR(4) CONSTANT('PAVS'); /* Change in the set of        01198000
*                                           PAV-alias devices    @04A*/ 01199000
*/********************************************************************/ 01200000
*/*                                                                  */ 01201000
*/* Values for DACHTYPE field.  This type is for the Adjunct         */ 01202000
*/* Processor Information.                                           */ 01203000
*/*                                                              @L2A*/ 01204000
*/********************************************************************/ 01205000
* DCL DACHAPI  CHAR(4) CONSTANT('API '); /* Change in the Adjunct       01206000
*                                           Processor Info       @L2A*/ 01207000
*                                                                       01208000
*/********************************************************************/ 01209000
*/*                                                                  */ 01210000
*/* Values for DACHTYPE field.  These fields define the Port Record  */ 01211000
*/* update.                                                          */ 01212000
*/*                                                              @L3A*/ 01213000
*/********************************************************************/ 01214000
* DCL DACHSWTB CHAR(4) CONSTANT('SWTB'); /* Change in the Port State */ 01215000
*                                                                       01216000
*/********************************************************************/ 01217000
*/*                                                                  */ 01218000
*/* Values for DACHTYPE field.  This type is for the Device          */ 01219000
*/* Offline and In Use by System Component ENF.                      */ 01220000
*/*                                                              @L5A*/ 01221000
*/********************************************************************/ 01222000
* DCL DACHNALOC CHAR(4) CONSTANT('NALC'); /* Offline device in use      01223000
*                                                                @L5A*/ 01224000
*                                                                       01225000
*/********************************************************************/ 01226000
*/*                                                                  */ 01227000
*/* Values for DACHTYPE field.  This type is for the Control Unit    */ 01228000
*/* Transition event                                                 */ 01229000
*/*                                                              @A1A*/ 01230000
*/********************************************************************/ 01231000
* DCL DACHTYPETRAN CHAR(4) CONSTANT('TRAN'); /* Transition       @A1A*/ 01232000
*                                                                       01233000
*/********************************************************************/ 01234000
*/*                                                                  */ 01235000
*/* Values for DACHTYPE field.  This type is for the PCIE Online/    */ 01236000
*/* Offline event                                                    */ 01237000
*/*                                                              @LBA*/ 01238000
*/********************************************************************/ 01239000
* DCL DACHTYPEPCIE CHAR(4) CONSTANT('PCIE'); /* PCIE Event       @LBA*/ 01240000
*                                                                       01241000
*/********************************************************************/ 01242000
*/*                                                                  */ 01243000
*/* Values for DACHTYPE field.  This type is for a monitor change    */ 01244000
*/* request event                                                    */ 01245000
*/*                                                              @09A*/ 01246000
*/********************************************************************/ 01247000
* DCL DACHMONC     CHAR(4) CONSTANT('MONC'); /* Monitoring change is    01248000
*                                           requested            @09A*/ 01249000
*                                                                       01250000
*/********************************************************************/ 01251000
*/*                                                                  */ 01252000
*/* Values for DACHTYPE field.  This type is for a facility or       */ 01253000
*/* capability change request event.                                 */ 01254000
*/*                                                              @ABA*/ 01255000
*/********************************************************************/ 01256000
* DCL DACHTypeFACL CHAR(4) CONSTANT('FACL'); /* Facility/capability     01257000
*                                           change event         @ABA*/ 01258000
*                                                                       01259000
* @LOGIC;                                                               01260000
* #PRAGMA TOOL=CBGEN.                                                   01261000
* #LINE.%DACHBASE = 'BASED';                                            01262000
* #LINE.%INCLUDE SYSLIB(IOSDDACH);                                      01263000
* #EPRAGMA.                                                             01264000
*#PRAGMA TOOL=PADI                                                      01265000
* #PADIDELETE.DACH_LEN                                                  01266000
* #PADIDELETE.DACH_IO_FIELDS_LEN                                        01267000
* #PADIDELETE.DACH_IORA_FIELDS_LEN                                      01268000
* #PADIDELETE.DACH_CCDR_FIELDS_LEN                                      01269000
* #PADIDELETE.DACH_PAV_FIELDS_LEN                                       01270000
* #PADIDELETE.DACH_ST_FIELDS_LEN                                        01271000
* #PADIDELETE.DACH_NALOC_FIELDS_LEN                                     01272000
* #PADIDELETE.DACH_TRAN_FIELDS_LEN                                      01273000
* #PADIDELETE.DACH_PCIE_FIELDS_LEN                                      01274000
* #PADIDELETE.DACH_FACL_FIELDS_LEN                                      01275000
*#EPRAGMA                                                               01276000
*@ENDLOGIC;                                                             01277000
*/* End of PL/X Source                                               */ 01278000
* %IF IOSDDACH_LIST ^= 'NO' &                                           01279000
*    ZCBPRINT ^= 'NO' %THEN                                             01280000
*   %GOTO IOSDDACH_4;                                                   01281000
*   @LIST POP NOECHO;                                                   01282000
* %IOSDDACH_4:;                                                         01283000
* %END;                                                                 01284000
