*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMXRA                               -04/28/07-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Resource Adjustment Exit                      * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1997, 2007                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7740                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*      IWMMXRA will invoke the resource adjustment exit specified.    * 00002000
*      This exit is responsible for making the adjustments indicated  * 00002100
*      for the buffer pool or other resource which may be involved in * 00002200
*      delays to work requests.  The return/reason codes for IWMMXRA  * 00002300
*      are those set by the exit invoked.                             * 00002400
*                                                                     * 00002500
*      The exit environment is described in the environment           * 00002600
*      description below. The parameter list is in pageable storage   * 00002700
*      addressable in the current address space, but is not           * 00002800
*      guaranteed to be in the key of the exit as it is not expected  * 00002900
*      to be changed by the exit.  Upon entry to the exit, the        * 00003000
*      register contents are as follows:                              * 00003100
*                                                                     * 00003200
*                                                                     * 00003300
*      o   Register 0 = not defined                                   * 00003400
*                                                                     * 00003500
*      o   Register 1 will contain the address of a parameter list as * 00003600
*          formatted by the list form of this macro, IWMMXRA MF=(L).  * 00003700
*                                                                     * 00003800
*      o   Registers 2-13 = not defined                               * 00003900
*                                                                     * 00004000
*      o   Register 14 = return address                               * 00004100
*                                                                     * 00004200
*      o   Register 15 = entry point address                          * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*      Upon entry to the exit, the access register contents are       * 00004600
*      undefined.                                                     * 00004700
*                                                                     * 00004800
*      Upon return from the exit, the register contents are as        * 00004900
*      follows:                                                       * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*      o   Register 0 = Reason code if GR15 return code is non-zero   * 00005300
*                                                                     * 00005400
*      o   Registers 1-14 = not defined (need not be restored to      * 00005500
*          value on entry)                                            * 00005600
*                                                                     * 00005700
*      o   Register 15 = Return code                                  * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*      Upon return from the exit, the access register contents are    * 00006100
*      unchanged.                                                     * 00006200
*                                                                     * 00006300
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00006400
*                                                                     * 00006500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00006600
*                                                                     * 00006700
*01* ENVIRONMENT:                                                     * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*      Dispatchable unit mode: Task or SRB mode.                      * 00007100
*                                                                     * 00007200
*      Minimum authorization: Supervisor state with the same PSW key  * 00007300
*                        as at time of registration (IWMMREG).        * 00007400
*                                                                     * 00007500
*      AMODE:            31-bit.                                      * 00007600
*                                                                     * 00007700
*      ASC mode:         Primary.                                     * 00007800
*                                                                     * 00007900
*      Cross Memory Mode: PASN=HASN=SASN.  The current home address   * 00008000
*                        space must be the same as at time of         * 00008100
*                        registration (IWMMREG).                      * 00008200
*                                                                     * 00008300
*      Interrupt status: Enabled for I/O and external interrupts.     * 00008400
*                                                                     * 00008500
*      Locks:            No locks held.  FRRs may be established.     * 00008600
*                                                                     * 00008700
*      Control parameters: Control parameters must be in the primary  * 00008800
*                        address space.                               * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*01* PROGRAMMING REQUIREMENTS:                                        * 00009300
*    The list form of the macro is intended for use by products       * 00009400
*    supplying a resource adjustment exit.                            * 00009500
*                                                                     * 00009600
*    The execute form of the macro is intended for use by z/OS.  The  * 00009700
*    assembler execute form only initializes the parameter list and   * 00009800
*    calls the exit routine, and has the following restrictions:      * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*    o   the invoker must save registers required before invoking the * 00010200
*        macro                                                        * 00010300
*                                                                     * 00010400
*    o   the invoker must restore registers required immediately      * 00010500
*        after invoking the macro, without depending on the exit to   * 00010600
*        preserve any registers.                                      * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*01* RESTRICTIONS:                                                    * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*    1.  This macro may not be used prior to the completion of WLM    * 00011400
*        address space initialization.                                * 00011500
*                                                                     * 00011600
*    2.  This macro may only be used on z/OS V1R8 or higher levels.   * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*01* INPUT REGISTER INFORMATION:                                      * 00012100
*                                                                     * 00012200
*    Before issuing the IWMMXRA macro, the caller does not have to    * 00012300
*    place any information into any register unless using it in       * 00012400
*    register notation for a particular parameter, or using it as a   * 00012500
*    base register.                                                   * 00012600
*                                                                     * 00012700
*01* OUTPUT REGISTER INFORMATION:                                     * 00012800
*                                                                     * 00012900
*    When control returns to the caller, the GPRs contain:            * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*    REGISTER  CONTENTS                                               * 00013300
*                                                                     * 00013400
*    0         Reason code if GR15 return code is non-zero            * 00013500
*                                                                     * 00013600
*    1         Used as work register by the system                    * 00013700
*                                                                     * 00013800
*    2-13      Unpredictable in assembler form, unchanged in PL/X     * 00013900
*              form                                                   * 00014000
*                                                                     * 00014100
*    14        Used as work register by the system                    * 00014200
*                                                                     * 00014300
*    15        Return code                                            * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*    When control returns to the caller, the ARs contain:             * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*    REGISTER  CONTENTS                                               * 00015100
*                                                                     * 00015200
*    0-1       Used as work registers by the system                   * 00015300
*                                                                     * 00015400
*    2-13      Unchanged                                              * 00015500
*                                                                     * 00015600
*    14-15     Used as work registers by the system                   * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*    Some callers depend on register contents remaining the same      * 00016100
*    before and after issuing a service.  If the system changes the   * 00016200
*    contents of registers on which the caller depends, the caller    * 00016300
*    must save them before issuing the service, and restore them      * 00016400
*    after the system returns control.                                * 00016500
*                                                                     * 00016600
*01* PERFORMANCE IMPLICATIONS:                                        * 00016700
*                                                                     * 00016800
*    None                                                             * 00016900
*                                                                     * 00017000
*01* SYNTAX:                                                          * 00017100
*                                                                     * 00017200
*Ýxlabel¨  IWMMXRA     RESOURCE_TKN                                   * 00017300
*                                   =xresource_tkn                    * 00017400
*                     ,RES_ADJ_EXIT@=xres_adj_exit@                   * 00017500
*                   Ð ,RESOURCE_TYPE=BUFFER_POOL                      * 00017600
*                   !     ,OWNER_TKN=xowner_tkn                       * 00017700
*                   !     ,RES_CUR_SIZE=xres_cur_size                 * 00017800
*                   !     ,RES_NEW_SIZE=xres_new_size                 * 00017900
*                   ¿ ,RESOURCE_TYPE=NULL                             * 00018000
*                    Ý,RETCODE=xretcode¨                              * 00018100
*                    Ý,RSNCODE=xrsncode¨                              * 00018200
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00018300
*                   ÐÝ,MF=S¨                                          * 00018400
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00018500
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      Where:                                                         * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      Ýxlabel¨                                                       * 00019200
*          is an optional symbol, starting in column 1, that is the   * 00019300
*          name on the IWMMXRA macro invocation.  The name must       * 00019400
*          conform to the rules for an ordinary assembler language    * 00019500
*          symbol.                                                    * 00019600
*          DEFAULT: No name.                                          * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*      RESOURCE_TKN=xresource_tkn                                     * 00020200
*          is the name (RS-type), or address in register (2)-(12), of * 00020300
*          a required 8 character input which contains the associated * 00020400
*          WLM resource token which was returned by Registration      * 00020500
*          (IWMMREG).                                                 * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*      RES_ADJ_EXIT@=xres_adj_exit@                                   * 00021100
*          is the name (RS-type), or address in register (2)-(12), of * 00021200
*          a required 4 byte input that contains the address of the   * 00021300
*          Resource Adjustment Exit to be invoked.                    * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*      RESOURCE_TYPE=»BUFFER_POOL!NULLº                               * 00021900
*          is a required keyword input which indicates the type of    * 00022000
*          resource being registered.                                 * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*          RESOURCE_TYPE=BUFFER_POOL                                  * 00022400
*              indicates that buffer pool adjustments are needed.     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*              OWNER_TKN=xowner_tkn                                   * 00022800
*                  is the name (RS-type), or address in register      * 00022900
*                  (2)-(12), of a required 8 character input which    * 00023000
*                  contains data associated with the resource that    * 00023100
*                  was passed at the time it was registered via       * 00023200
*                  IWMMREG.                                           * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*              RES_CUR_SIZE=xres_cur_size                             * 00023800
*                  is the name (RS-type), or address in register      * 00023900
*                  (2)-(12), of a required fullword input which       * 00024000
*                  contains the current size (in 4K pages) associated * 00024100
*                  with the specified resource.                       * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*              RES_NEW_SIZE=xres_new_size                             * 00024700
*                  is the name (RS-type), or address in register      * 00024800
*                  (2)-(12), of a required fullword input which       * 00024900
*                  contains the new size (in 4K pages) to be          * 00025000
*                  associated with the specified resource.            * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*          RESOURCE_TYPE=NULL                                         * 00025500
*              indicates that no exit is to be called.                * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*      ÝRETCODE=xretcode¨                                             * 00026300
*          is the name (RS-type) of an optional fullword output       * 00026400
*          variable, or register (2)-(12), into which the return code * 00026500
*          is to be copied from GPR 15.                               * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*      ÝRSNCODE=xrsncode¨                                             * 00027100
*          is the name (RS-type) of an optional fullword output       * 00027200
*          variable, or register (2)-(12), into which the reason code * 00027300
*          is to be copied from GPR 0.                                * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00027900
*          is an optional byte input decimal value in the "0-0" range * 00028000
*          that specifies the macro version.  PLISTVER is the only    * 00028100
*          key allowed on the list form of MF and determines which    * 00028200
*          parameter list is generated.  Note that MAX may be         * 00028300
*          specified instead of a number, and the parameter list will * 00028400
*          be of the largest size currently supported. This size may  * 00028500
*          grow from release to release (thus possibly affecting the  * 00028600
*          amount of storage needed by your program).  If your        * 00028700
*          program can tolerate this, IBM recommends that you always  * 00028800
*          specify MAX when creating the list form parameter list as  * 00028900
*          that will ensure that the list form parameter list is      * 00029000
*          always long enough to hold whatever parameters might be    * 00029100
*          specified on the execute form.                             * 00029200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00029300
*          default is the lowest version which allows all of the      * 00029400
*          parameters specified on the invocation to be processed.    * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*      ÝMF=»S!L!Eº¨                                                   * 00030000
*          is an optional keyword input which specifies the macro     * 00030100
*          form.                                                      * 00030200
*          DEFAULT: S                                                 * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*          ÝMF=S¨                                                     * 00030600
*              specifies the standard form of the macro.  The "S"     * 00030700
*              form generates code to put the parameters into an      * 00030800
*              in-line parameter list and invoke the desired service. * 00030900
*              Full checking for required macro keys is done along    * 00031000
*              with supplying defaults for omitted optional           * 00031100
*              parameters.                                            * 00031200
*                                                                     * 00031300
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00031400
*              specifies the list form of the macro.  The "L" form    * 00031500
*              defines an area to be used for the parameter list.     * 00031600
*              Only the PLISTVER key may be specified on the          * 00031700
*              invocation.  All other macro parameters are flagged as * 00031800
*              errors.  If PLISTVER is not specified, the original    * 00031900
*              parameter list definition is used.                     * 00032000
*                                                                     * 00032100
*            ,xmfctrl                                                 * 00032200
*              is a required input.  It is the name of a storage area * 00032300
*              for the parameter list.                                * 00032400
*                                                                     * 00032500
*            »,xmfattr!0Dº                                            * 00032600
*              is an optional 60 character input string that varies   * 00032700
*              from 1 to 60 characters. Use it to force boundary      * 00032800
*              alignment of the parameter list. Use only 0F or 0D.    * 00032900
*              DEFAULT: 0D which forces the parameter list to a       * 00033000
*              doubleword boundary.                                   * 00033100
*                                                                     * 00033200
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00033300
*              specifies the execute form of the macro.  The "E" form * 00033400
*              generates code to put the parameters into the          * 00033500
*              parameter list specified by xmfctrl and provides full  * 00033600
*              syntax checking with default setting.                  * 00033700
*                                                                     * 00033800
*            ,xmfctrl                                                 * 00033900
*              is a required input.  It is the name (RS-type), or     * 00034000
*              address in register (1)-(12), of a storage area for    * 00034100
*              the parameter list.                                    * 00034200
*                                                                     * 00034300
*            »,COMPLETEº                                              * 00034400
*              is an optional keyword input which specifies the       * 00034500
*              degree of macro parameter syntax checking.             * 00034600
*              DEFAULT: COMPLETE                                      * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*              COMPLETE                                               * 00035000
*                  Checking for required macro keys is done and       * 00035100
*                  defaults are supplied for omitted optional         * 00035200
*                  parameters.                                        * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*01* ABEND CODES:  None.                                              * 00036100
*                                                                     * 00036200
*01* RETURN CODES:                                                    * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*            0    Name: IwmRetCodeOk                                  * 00036600
*                                                                     * 00036700
*                 Meaning: Successful completion.                     * 00036800
*                                                                     * 00036900
*                 Action: None required.                              * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*01* REASON CODES:                                                    * 00037400
*                                                                     * 00037500
*       A unique reason code will be returned whenever the return     * 00037600
*       code is non-zero. No reason codes are currently defined.      * 00037700
*                                                                     * 00037800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00037900
*                                                                     * 00038000
*02*   PROCESSOR:  ASSEM                                              * 00038100
*                                                                     * 00038200
*01* COMPONENT:  SCWLM                                                * 00038300
*                                                                     * 00038400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00038500
*                                                                     * 00038600
*01* EXAMPLES:                                                        * 00038700
*                                                                     * 00038800
*    To call a resource adjustment exit:                              * 00038900
*                                                                     * 00039000
*               IWMMXRA                                             X * 00039100
*                     RES_ADJ_EXIT@=ADJEXIT@,                       X * 00039200
*                     OWNER_TKN=OWNERTKN,                           X * 00039300
*                     RESOURCE_TYPE=BUFFER_POOL,                    X * 00039400
*                     RESOURCE_TKN=RSCTOKEN,                        X * 00039500
*                     RES_CUR_SIZE=RESCURSIZE,                      X * 00039600
*                     RES_NEW_SIZE=RESNEWSIZE,                      X * 00039700
*                     RETCODE=RC,RSNCODE=RSN                          * 00039800
*      *                                                              * 00039900
*      * Storage areas                                                * 00040000
*      *                                                              * 00040100
*      RESCURSIZE DS  FL4             contains the current size of th * 00040200
*      e                                                              * 00040300
*      *                              specified resource in 4K pages  * 00040400
*      RESNEWSIZE DS  FL4             contains the new target size of * 00040500
*       the                                                           * 00040600
*      *                              specified resource in 4K pages  * 00040700
*      ADJEXIT@   DS  AL4             contains the address of the     * 00040800
*      *                              Resource Adjustment Exit        * 00040900
*      *                              to be invoked                   * 00041000
*      OWNERTKN DS    CL8             Contains data maintained by     * 00041100
*      *                              the user                        * 00041200
*      RSCTOKEN DS    CL8             WLM resource token              * 00041300
*      RC       DS    F               Return code                     * 00041400
*      RSN      DS    F               Reason code                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*01* MACRO USAGE NOTES:                                               * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00042100
*        global macro variable.  Any value other than 'NO' will       * 00042200
*        result in the macro expansion being printed.  The default is * 00042300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00042400
*        variable should be set.                                      * 00042500
*                                                                     * 00042600
*                    GBLC &ZPRINT                                     * 00042700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*    2.  All keys currently contained in the IWMMXRA macro correspond * 00043100
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00043200
*        MAX.                                                         * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*01* CHANGE ACTIVITY:                                                 * 00043800
*                                                                     * 00043900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00044000
*                                                                     * 00044100
*    $L0=WLM53P   HBB6603 950519 PD16:  Dynamic Buffer Pool           * 00044200
*                                         Management                  * 00044300
*    $L1=WLMPDBM  HBB7720 040707 3241UH:  Dynamic Buffer Pool         * 00044400
*                                         Management GA support       * 00044500
*    $P1=PQC0293  HBB6603 950629 PD16:  Document macro return/reason  * 00044600
*                                         codes                       * 00044700
*    $P2=ME05431  HBB7730 060112 3241BH:  Correcting problem with     * 00044800
*                                         Metadata                    * 00044900
*    $P3=ME09045  HBB7740 070206 3241BH:  External Pgmming Interface  * 00045000
*                                         incorrect                   * 00045100
****** END OF SPECIFICATIONS *****************************************/ 00045200
*/********************************************************************* 00045300
         MACRO                                                          00045400
&XLABEL  IWMMXRA &RESOURCE_TKN=,&RES_ADJ_EXIT@=,&RESOURCE_TYPE=,       *00045500
               &OWNER_TKN=,&RES_CUR_SIZE=,&RES_NEW_SIZE=,&RETCODE=,    *00045600
               &RSNCODE=,&PLISTVER=,&MF=                                00045700
.*                                                                      00045800
*                   MACDATE -04/28/07-<0>                               00045900
.*                                                                      00046000
.*******************************************************************    00046100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00046200
.*******************************************************************    00046300
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00046400
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00046500
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00046600
.*                                                                      00046700
                   GBLC  &ZIWMMXRA   YES=MACRO USED AT LEAST ONCE       00046800
.*******************************************************************    00046900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00047000
.*******************************************************************    00047100
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00047200
                   LCLC  &ZCNDX      SYSNDX CHARACTERS                  00047300
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00047400
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00047500
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00047600
                   LCLA  &ZAWRK      USED AS A WORK AREA                00047700
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00047800
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00047900
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00048000
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00048100
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00048200
                   LCLC  &ZMAC_G     "G" or null                        00048300
&ZMAC_G            SETC  ''                                             00048400
                   LCLC  &ZMAC_LR                                       00048500
&ZMAC_LR           SETC  'LR'                                           00048600
                   LCLC  &ZMAC_L                                        00048700
&ZMAC_L            SETC  'L'                                            00048800
                   LCLC  &ZMAC_ST                                       00048900
&ZMAC_ST           SETC  'ST'                                           00049000
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00049100
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00049200
.*                                                                      00049300
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00049400
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00049500
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00049600
                   LCLC  &ZENDBASEPL            End of base PL          00049700
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00049800
.*******************************************************************    00049900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00050000
.*******************************************************************    00050100
                   LCLA  &ZI         INDEX FOR ARRAY                    00050200
                   LCLA  &ZJ         INDEX FOR PARMS                    00050300
                   LCLA  &ZK         INDEX FOR PARSE                    00050400
                   LCLA  &ZLO        LOW RANGE VALUE                    00050500
                   LCLA  &ZHI        HIGH RANGE VALUE                   00050600
                   LCLC  &ZW         WORK AREA FOR PARM                 00050700
.********************************************************************   00050800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00050900
.********************************************************************   00051000
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00051100
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00051200
                   GBLA  &SYSALVL    SYSSTATE ARCHLVL                   00051300
                   GBLC  &SYSAM64    SYSSTATE AMODE64                   00051400
.*                                                                      00051500
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00051600
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00051700
                   SPLEVEL  TEST                                        00051800
.ZSYS2             ANOP  ,                                              00051900
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00052000
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00052100
                   SYSSTATE TEST                                        00052200
                   AGO   .ZSYS4                                         00052300
.ZSYS3             ANOP  ,                                              00052400
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00052500
.ZSYS4             ANOP  ,                                              00052600
.*******************************************************************    00052700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00052800
.*******************************************************************    00052900
                   LCLC  &XRESOURCE_TKN         ++ NAME                 00053000
                   LCLC  &XRES_ADJ_EXIT@        ++ NAME                 00053100
                   LCLC  &XRESOURCE_TYPE        ++ VALUE                00053200
                   LCLC  &XOWNER_TKN            ++ NAME                 00053300
                   LCLC  &XRES_CUR_SIZE         ++ NAME                 00053400
                   LCLC  &XRES_NEW_SIZE         ++ NAME                 00053500
                   LCLC  &XRETCODE   ++ NAME                            00053600
                   LCLC  &XRSNCODE   ++ NAME                            00053700
                   LCLA  &XPLISTVER  ++ VALUE                           00053800
                   LCLC  &XMF        ++ VALUE                           00053900
                   LCLC  &XMFCTRL    ++ NAME                            00054000
                   LCLC  &XMFATTR    ++ VALUE                           00054100
                   LCLC  &XMFSCK     ++ VALUE                           00054200
.*******************************************************************    00054300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00054400
.*******************************************************************    00054500
                   LCLC  &ZXRESOURCE_TKN        ++ INPUT NAME           00054600
                   LCLC  &ZXRES_ADJ_EXIT@       ++ INPUT NAME           00054700
                   LCLC  &ZXRESOURCE_TYPE       ++ INPUT VALUE          00054800
                   LCLC  &ZXOWNER_TKN           ++ INPUT NAME           00054900
                   LCLC  &ZXRES_CUR_SIZE        ++ INPUT NAME           00055000
                   LCLC  &ZXRES_NEW_SIZE        ++ INPUT NAME           00055100
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00055200
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     00055300
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00055400
                   LCLC  &ZXMF       ++ INPUT VALUE                     00055500
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00055600
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00055700
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00055800
.********************************************************************   00055900
.***AC.PLV01  PROCESS PLISTVER                                      *   00056000
.********************************************************************   00056100
&XPLISTVER      SETA  0                                                 00056200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00056300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00056400
&XPLISTVER      SETA  0                                                 00056500
.ZPLV0          ANOP  ,                                                 00056600
.*                                                                      00056700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00056800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00056900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00057000
.*-------------------------------------------------------------------   00057100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00057200
&ZMS            SETC  '"PLISTVER='                                      00057300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00057400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00057500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00057600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00057700
                AGO   .ZPVCK2                                           00057800
.ZPVCK3         ANOP  ,                                                 00057900
.*-------------------------------------------------------------------   00058000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00058100
&ZMS            SETC  '"PLISTVER='                                      00058200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00058300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00058400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00058500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00058600
                AGO   .ZPVCKE                                           00058700
.ZPVCK2         ANOP  ,                                                 00058800
.*-------------------------------------------------------------------   00058900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00059000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00059100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00059200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00059300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00059400
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00059500
.ZPVCK6         ANOP  ,                                                 00059600
&ZMS            SETC  '"PLISTVER='                                      00059700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00059800
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00059900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00060000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060100
&XPLISTVER      SETA  0                                                 00060200
                AGO   .ZPVCKE                                           00060300
.*-------------------------------------------------------------------   00060400
.ZPVCK4A        ANOP  ,                                                 00060500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00060600
&ZMS            SETC  'PLISTVER='                                       00060700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00060800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00060900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00061000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00061100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00061200
                AGO   .ZPVCK5                                           00061300
.ZPVCK4         ANOP  ,                                                 00061400
&XPLISTVER      SETA  &PLISTVER(1)                                      00061500
.ZPVCK5         ANOP  ,                                                 00061600
.ZPVCKE         ANOP  ,                                                 00061700
.********************************************************************   00061800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00061900
.********************************************************************   00062000
                   ACTR  10000                                          00062100
.*------------------------------------------------------------------    00062200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062300
&XMF               SETC  ''          INITIALIZE XVARIABLE               00062400
.*-------------------------------------------------------------------   00062500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062600
.ZG32              ANOP  ,                                              00062700
&ZTLC              SETC 'S'                                             00062800
                   AIF   ('&MF(1)' NE '&ZTLC').ZG33                     00062900
&XMF               SETC  'S'         SET KEYWORD                        00063000
                   AIF   (N'&MF LE 1).ZG32A     CK NUM                  00063100
&ZMS               SETC  '"MF='                                         00063200
&ZMS               SETC  '&ZMS.&MF"'                                    00063300
&ZMS               SETC  '&ZMS "MF"'                                    00063400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00063500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00063600
.ZG32A             ANOP  ,                                              00063700
.*-------------------------------------------------------------------   00063800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063900
.ZG33              ANOP  ,                                              00064000
&ZTLC              SETC 'L'                                             00064100
                   AIF   ('&MF(1)' NE '&ZTLC').ZG40                     00064200
&XMF               SETC  'L'         SET KEYWORD                        00064300
                   AIF   (N'&MF LE 3).ZG33A     CK NUM                  00064400
&ZMS               SETC  '"MF='                                         00064500
&ZMS               SETC  '&ZMS.&MF"'                                    00064600
&ZMS               SETC  '&ZMS "MF"'                                    00064700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00064800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00064900
.ZG33A             ANOP  ,                                              00065000
.*-------------------------------------------------------------------   00065100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00065200
                   AIF   (N'&SYSLIST NE 0).ZG33B  POSITIONALS?          00065300
                   AIF   ('&RESOURCE_TKN' NE '').ZG33B  KEYS?           00065400
                   AIF   ('&RES_ADJ_EXIT@' NE '').ZG33B  KEYS?          00065500
                   AIF   ('&RESOURCE_TYPE' NE '').ZG33B  KEYS?          00065600
                   AIF   ('&OWNER_TKN' NE '').ZG33B  KEYS?              00065700
                   AIF   ('&RES_CUR_SIZE' NE '').ZG33B  KEYS?           00065800
                   AIF   ('&RES_NEW_SIZE' NE '').ZG33B  KEYS?           00065900
                   AIF   ('&RETCODE' NE '').ZG33B  KEYS?                00066000
                   AIF   ('&RSNCODE' NE '').ZG33B  KEYS?                00066100
                   AGO    .ZG33C     INVOCATION OKAY                    00066200
.ZG33B             ANOP  ,                                              00066300
&ZMS               SETC  'THE "L" FORM OF "MF"'                         00066400
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00066500
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00066600
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00066700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00066800
.ZG33C             ANOP  ,                                              00066900
.*-------------------------------------------------------------------   00067000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00067100
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00067200
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00067300
                   AIF   (N'&MF(2) GT 1).ZG35B  MULTI PARMS             00067400
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00067500
.ZG35B             AIF   (K'&MF(2) GT 0).ZG35C                          00067600
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00067700
&ZMS               SETC  'WHEN "L" IS SPECIFIED'                        00067800
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00067900
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00068000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00068100
.ZG35C             ANOP  ,                                              00068200
.*-------------------------------------------------------------------   00068300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00068400
                   AIF   (K'&ZXMFCTRL LE 0).ZG35P  NOT I/O              00068500
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG35P                 00068600
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00068700
&ZMS               SETC  '"MF='                                         00068800
&ZMS               SETC  '&ZMS.&MF"'                                    00068900
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00069000
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00069100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00069200
.ZG35P             ANOP  ,                                              00069300
.*-------------------------------------------------------------------   00069400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00069500
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00069600
&XMFATTR           SETC  '0D'                                           00069700
                   AIF   (K'&MF(3) LE 0).ZG38B  PARM                    00069800
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00069900
                   AIF   (N'&MF(3) GT 1).ZG38B  MULTI                   00070000
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00070100
.ZG38B             ANOP  ,                                              00070200
.*-------------------------------------------------------------------   00070300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00070400
                   AIF   (K'&ZXMFATTR LE 0).ZG38P  NOT I/O              00070500
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG38P                 00070600
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00070700
&ZMS               SETC  '"MF='                                         00070800
&ZMS               SETC  '&ZMS.&MF"'                                    00070900
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00071000
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00071100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00071200
.ZG38P             ANOP  ,                                              00071300
.*-------------------------------------------------------------------   00071400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00071500
                   AIF   (K'&ZXMFATTR LE 0).ZG38S  NOT I/O              00071600
                   AIF   (K'&XMFATTR LE 60).ZG38S  LNG OK               00071700
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00071800
&ZMS               SETC  '"MF='                                         00071900
&ZMS               SETC  '&ZMS.&MF"'                                    00072000
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00072100
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00072200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00072300
.ZG38S             ANOP  ,                                              00072400
.*-------------------------------------------------------------------   00072500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00072600
.ZG40              ANOP  ,                                              00072700
&ZTLC              SETC 'E'                                             00072800
                   AIF   ('&MF(1)' NE '&ZTLC').ZG48                     00072900
&XMF               SETC  'E'         SET KEYWORD                        00073000
                   AIF   (N'&MF LE 3).ZG40A     CK NUM                  00073100
&ZMS               SETC  '"MF='                                         00073200
&ZMS               SETC  '&ZMS.&MF"'                                    00073300
&ZMS               SETC  '&ZMS "MF"'                                    00073400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00073500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00073600
.ZG40A             ANOP  ,                                              00073700
.*-------------------------------------------------------------------   00073800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00073900
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00074000
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00074100
                   AIF   (N'&MF(2) GT 1).ZG42B  MULTI PARMS             00074200
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00074300
.ZG42B             AIF   (K'&MF(2) GT 0).ZG42C                          00074400
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00074500
&ZMS               SETC  'WHEN "E" IS SPECIFIED'                        00074600
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00074700
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00074800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00074900
.ZG42C             ANOP  ,                                              00075000
.*-------------------------------------------------------------------   00075100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00075200
                   AIF   (K'&ZXMFCTRL LE 0).ZG42R  NOT I/O              00075300
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG42R                 00075400
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00075500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                   00075600
                   AIF   (K'&ZCGPR GT 2).ZG42Q                          00075700
                   AIF   ('&ZCGPR' EQ '0').ZG42Q                        00075800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00075900
                   AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME      00076000
.ZG42P             ANOP  ,                                              00076100
                   AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC           00076200
                   AIF   ('&ZCGPR' LT '1').ZG42Q                        00076300
                   AIF   ('&ZCGPR' LE '12').ZG42R                       00076400
.ZG42Q             ANOP  ,                                              00076500
&ZMS               SETC  '"MF='                                         00076600
&ZMS               SETC  '&ZMS.&MF"'                                    00076700
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00076800
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00076900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00077000
.ZG42R             ANOP  ,                                              00077100
.*-------------------------------------------------------------------   00077200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00077300
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00077400
.ZG46A   AIF   ('&MF(3)' NE 'COMPLETE').ZG47A                           00077500
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00077600
.*-------------------------------------------------------------------   00077700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00077800
.ZG47A             AIF   (K'&XMFSCK GT 0).ZG47C  KEYWORD                00077900
                   AIF   (K'&MF(3) LE 0).ZG47B                          00078000
&ZMS               SETC  '"MF='                                         00078100
&ZMS               SETC  '&ZMS.&MF"'                                    00078200
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00078300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00078400
&ZMS               SETC  '&ZMS "COMPLETE".'                             00078500
                   MNOTE 8,' &ZMS '                                     00078600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00078700
.ZG47B             ANOP  ,                                              00078800
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00078900
.ZG47C             ANOP  ,                                              00079000
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00079100
.*------------------------------------------------------------------    00079200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079300
.ZG48              ANOP  ,                                              00079400
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00079500
                   AIF   (K'&XMF GT 0).ZG48E    VALID ARG               00079600
                   AIF   (T'&MF EQ 'O').ZG48D   OMITTED                 00079700
&ZASYSLNDX         SETA  0                                              00079800
.ZG48A             ANOP  ,           POSITIONAL MACRO KEY               00079900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00080000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG48C               00080100
&ZTLC              SETC 'MF'                                            00080200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG48A      00080300
.ZG48B             ANOP  ,                                              00080400
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00080500
&ZMS               SETC  'THE "MF" KEY'                                 00080600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00080700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00080800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00080900
                   AGO   .ZG48E                                         00081000
.ZG48C             ANOP  ,                                              00081100
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00081200
&ZMS               SETC  '"MF='                                         00081300
&ZMS               SETC  '&ZMS.&MF"'                                    00081400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00081500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00081600
&ZMS               SETC  '&ZMS "S",'                                    00081700
&ZMS               SETC  '&ZMS "L",'                                    00081800
&ZMS               SETC  '&ZMS OR "E".'                                 00081900
                   MNOTE 8,' &ZMS '                                     00082000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00082100
                   AGO   .ZG48E                                         00082200
.ZG48D             ANOP  ,                                              00082300
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00082400
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00082500
.ZG48E             ANOP  ,                                              00082600
.********************************************************************   00082700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00082800
.********************************************************************   00082900
                   ACTR  10000                                          00083000
.*-------------------------------------------------------------------   00083100
.***AG.MF03 MF=(SLE)                                                    00083200
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00083300
.*----------------------------------------------------------------***   00083400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00083500
                   AIF   (N'&RESOURCE_TKN LE 1).ZG2A  CK NUM            00083600
&ZMS               SETC  '"RESOURCE_TKN='                               00083700
&ZMS               SETC  '&ZMS.&RESOURCE_TKN"'                          00083800
&ZMS               SETC  '&ZMS "RESOURCE_TKN"'                          00083900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00084000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00084100
.ZG2A              ANOP  ,                                              00084200
.*-------------------------------------------------------------------   00084300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00084400
&ZXRESOURCE_TKN    SETC  'INPUT'     SET IN/OUTPUT                      00084500
&XRESOURCE_TKN     SETC  '&RESOURCE_TKN(1)'     SET XVARIABLE           00084600
                   AIF   (N'&RESOURCE_TKN GT 1).ZG2B  MULTI PARMS       00084700
&XRESOURCE_TKN     SETC  '&RESOURCE_TKN'        SET XVARIABLE           00084800
.ZG2B              AIF   (K'&RESOURCE_TKN(1) GT 0).ZG2C                 00084900
&ZXRESOURCE_TKN    SETC  ''          RESET IN/OUTPUT                    00085000
&ZMS               SETC  ' '                                            00085100
&ZMS               SETC  '&ZMS "RESOURCE_TKN" KEY AND ITS'              00085200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00085300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00085400
.ZG2C              ANOP  ,                                              00085500
.*-------------------------------------------------------------------   00085600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00085700
                   AIF   (K'&ZXRESOURCE_TKN LE 0).ZG2R  NOT I/O         00085800
                   AIF   ('&XRESOURCE_TKN'(1,1) NE '(').ZG2R            00085900
&ZCGPR             SETC  '&XRESOURCE_TKN'(2,K'&XRESOURCE_TKN-2)         00086000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                    00086100
                   AIF   (K'&ZCGPR GT 2).ZG2Q                           00086200
                   AIF   ('&ZCGPR' EQ '0').ZG2Q                         00086300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00086400
                   AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME       00086500
.ZG2P              ANOP  ,                                              00086600
                   AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC            00086700
                   AIF   ('&ZCGPR' LT '2').ZG2Q                         00086800
                   AIF   ('&ZCGPR' LE '12').ZG2R                        00086900
.ZG2Q              ANOP  ,                                              00087000
&ZMS               SETC  '"RESOURCE_TKN='                               00087100
&ZMS               SETC  '&ZMS.&RESOURCE_TKN"'                          00087200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00087300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00087400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00087500
.ZG2R              ANOP  ,                                              00087600
.*----------------------------------------------------------------***   00087700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00087800
                   AIF   (N'&RES_ADJ_EXIT@ LE 1).ZG5A  CK NUM           00087900
&ZMS               SETC  '"RES_ADJ_EXIT@='                              00088000
&ZMS               SETC  '&ZMS.&RES_ADJ_EXIT@"'                         00088100
&ZMS               SETC  '&ZMS "RES_ADJ_EXIT@"'                         00088200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00088300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00088400
.ZG5A              ANOP  ,                                              00088500
.*-------------------------------------------------------------------   00088600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00088700
&ZXRES_ADJ_EXIT@   SETC  'INPUT'     SET IN/OUTPUT                      00088800
&XRES_ADJ_EXIT@    SETC  '&RES_ADJ_EXIT@(1)'    SET XVARIABLE           00088900
                   AIF   (N'&RES_ADJ_EXIT@ GT 1).ZG5B  MULTI PARMS      00089000
&XRES_ADJ_EXIT@    SETC  '&RES_ADJ_EXIT@'       SET XVARIABLE           00089100
.ZG5B              AIF   (K'&RES_ADJ_EXIT@(1) GT 0).ZG5C                00089200
&ZXRES_ADJ_EXIT@   SETC  ''          RESET IN/OUTPUT                    00089300
&ZMS               SETC  ' '                                            00089400
&ZMS               SETC  '&ZMS "RES_ADJ_EXIT@" KEY AND ITS'             00089500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00089600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00089700
.ZG5C              ANOP  ,                                              00089800
.*-------------------------------------------------------------------   00089900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00090000
                   AIF   (K'&ZXRES_ADJ_EXIT@ LE 0).ZG5R  NOT I/O        00090100
                   AIF   ('&XRES_ADJ_EXIT@'(1,1) NE '(').ZG5R           00090200
&ZCGPR             SETC  '&XRES_ADJ_EXIT@'(2,K'&XRES_ADJ_EXIT@-2)       00090300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    00090400
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           00090500
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         00090600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00090700
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       00090800
.ZG5P              ANOP  ,                                              00090900
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            00091000
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         00091100
                   AIF   ('&ZCGPR' LE '12').ZG5R                        00091200
.ZG5Q              ANOP  ,                                              00091300
&ZMS               SETC  '"RES_ADJ_EXIT@='                              00091400
&ZMS               SETC  '&ZMS.&RES_ADJ_EXIT@"'                         00091500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00091600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00091700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00091800
.ZG5R              ANOP  ,                                              00091900
.*------------------------------------------------------------------    00092000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092100
&XRESOURCE_TYPE    SETC  ''          INITIALIZE XVARIABLE               00092200
.*-------------------------------------------------------------------   00092300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092400
.ZG9               ANOP  ,                                              00092500
                   AIF   (K'&RESOURCE_TYPE(1) LE 0).ZG9A                00092600
&ZTLC              SETC 'BUFFER_POOL'                                   00092700
                   AIF   ('&RESOURCE_TYPE(1)' NE '&ZTLC').ZG19          00092800
&XRESOURCE_TYPE    SETC  'BUFFER_POOL'          SET KEYWORD             00092900
                   AIF   (N'&RESOURCE_TYPE LE 1).ZG9A  CK NUM           00093000
&ZMS               SETC  '"RESOURCE_TYPE='                              00093100
&ZMS               SETC  '&ZMS.&RESOURCE_TYPE"'                         00093200
&ZMS               SETC  '&ZMS "RESOURCE_TYPE"'                         00093300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00093400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00093500
.ZG9A              ANOP  ,                                              00093600
.*----------------------------------------------------------------***   00093700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00093800
                   AIF   (N'&OWNER_TKN LE 1).ZG11A  CK NUM              00093900
&ZMS               SETC  '"OWNER_TKN='                                  00094000
&ZMS               SETC  '&ZMS.&OWNER_TKN"'                             00094100
&ZMS               SETC  '&ZMS "OWNER_TKN"'                             00094200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00094300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00094400
.ZG11A             ANOP  ,                                              00094500
.*-------------------------------------------------------------------   00094600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00094700
&ZXOWNER_TKN       SETC  'INPUT'     SET IN/OUTPUT                      00094800
&XOWNER_TKN        SETC  '&OWNER_TKN(1)'        SET XVARIABLE           00094900
                   AIF   (N'&OWNER_TKN GT 1).ZG11B  MULTI PARMS         00095000
&XOWNER_TKN        SETC  '&OWNER_TKN'           SET XVARIABLE           00095100
.ZG11B             AIF   (K'&OWNER_TKN(1) GT 0).ZG11C                   00095200
&ZXOWNER_TKN       SETC  ''          RESET IN/OUTPUT                    00095300
&ZMS               SETC  ' '                                            00095400
&ZMS               SETC  '&ZMS "OWNER_TKN" KEY AND ITS'                 00095500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00095600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00095700
.ZG11C             ANOP  ,                                              00095800
.*-------------------------------------------------------------------   00095900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00096000
                   AIF   (K'&ZXOWNER_TKN LE 0).ZG11R  NOT I/O           00096100
                   AIF   ('&XOWNER_TKN'(1,1) NE '(').ZG11R              00096200
&ZCGPR             SETC  '&XOWNER_TKN'(2,K'&XOWNER_TKN-2)               00096300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                   00096400
                   AIF   (K'&ZCGPR GT 2).ZG11Q                          00096500
                   AIF   ('&ZCGPR' EQ '0').ZG11Q                        00096600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00096700
                   AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME      00096800
.ZG11P             ANOP  ,                                              00096900
                   AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC           00097000
                   AIF   ('&ZCGPR' LT '2').ZG11Q                        00097100
                   AIF   ('&ZCGPR' LE '12').ZG11R                       00097200
.ZG11Q             ANOP  ,                                              00097300
&ZMS               SETC  '"OWNER_TKN='                                  00097400
&ZMS               SETC  '&ZMS.&OWNER_TKN"'                             00097500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00097600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00097700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00097800
.ZG11R             ANOP  ,                                              00097900
.*----------------------------------------------------------------***   00098000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00098100
                   AIF   (N'&RES_CUR_SIZE LE 1).ZG14A  CK NUM           00098200
&ZMS               SETC  '"RES_CUR_SIZE='                               00098300
&ZMS               SETC  '&ZMS.&RES_CUR_SIZE"'                          00098400
&ZMS               SETC  '&ZMS "RES_CUR_SIZE"'                          00098500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00098600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00098700
.ZG14A             ANOP  ,                                              00098800
.*-------------------------------------------------------------------   00098900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00099000
&ZXRES_CUR_SIZE    SETC  'INPUT'     SET IN/OUTPUT                      00099100
&XRES_CUR_SIZE     SETC  '&RES_CUR_SIZE(1)'     SET XVARIABLE           00099200
                   AIF   (N'&RES_CUR_SIZE GT 1).ZG14B  MULTI PARMS      00099300
&XRES_CUR_SIZE     SETC  '&RES_CUR_SIZE'        SET XVARIABLE           00099400
.ZG14B             AIF   (K'&RES_CUR_SIZE(1) GT 0).ZG14C                00099500
&ZXRES_CUR_SIZE    SETC  ''          RESET IN/OUTPUT                    00099600
&ZMS               SETC  ' '                                            00099700
&ZMS               SETC  '&ZMS "RES_CUR_SIZE" KEY AND ITS'              00099800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00099900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00100000
.ZG14C             ANOP  ,                                              00100100
.*-------------------------------------------------------------------   00100200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00100300
                   AIF   (K'&ZXRES_CUR_SIZE LE 0).ZG14R  NOT I/O        00100400
                   AIF   ('&XRES_CUR_SIZE'(1,1) NE '(').ZG14R           00100500
&ZCGPR             SETC  '&XRES_CUR_SIZE'(2,K'&XRES_CUR_SIZE-2)         00100600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                   00100700
                   AIF   (K'&ZCGPR GT 2).ZG14Q                          00100800
                   AIF   ('&ZCGPR' EQ '0').ZG14Q                        00100900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00101000
                   AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME      00101100
.ZG14P             ANOP  ,                                              00101200
                   AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC           00101300
                   AIF   ('&ZCGPR' LT '2').ZG14Q                        00101400
                   AIF   ('&ZCGPR' LE '12').ZG14R                       00101500
.ZG14Q             ANOP  ,                                              00101600
&ZMS               SETC  '"RES_CUR_SIZE='                               00101700
&ZMS               SETC  '&ZMS.&RES_CUR_SIZE"'                          00101800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00101900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00102000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00102100
.ZG14R             ANOP  ,                                              00102200
.*----------------------------------------------------------------***   00102300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00102400
                   AIF   (N'&RES_NEW_SIZE LE 1).ZG17A  CK NUM           00102500
&ZMS               SETC  '"RES_NEW_SIZE='                               00102600
&ZMS               SETC  '&ZMS.&RES_NEW_SIZE"'                          00102700
&ZMS               SETC  '&ZMS "RES_NEW_SIZE"'                          00102800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00102900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00103000
.ZG17A             ANOP  ,                                              00103100
.*-------------------------------------------------------------------   00103200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00103300
&ZXRES_NEW_SIZE    SETC  'INPUT'     SET IN/OUTPUT                      00103400
&XRES_NEW_SIZE     SETC  '&RES_NEW_SIZE(1)'     SET XVARIABLE           00103500
                   AIF   (N'&RES_NEW_SIZE GT 1).ZG17B  MULTI PARMS      00103600
&XRES_NEW_SIZE     SETC  '&RES_NEW_SIZE'        SET XVARIABLE           00103700
.ZG17B             AIF   (K'&RES_NEW_SIZE(1) GT 0).ZG17C                00103800
&ZXRES_NEW_SIZE    SETC  ''          RESET IN/OUTPUT                    00103900
&ZMS               SETC  ' '                                            00104000
&ZMS               SETC  '&ZMS "RES_NEW_SIZE" KEY AND ITS'              00104100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00104200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00104300
.ZG17C             ANOP  ,                                              00104400
.*-------------------------------------------------------------------   00104500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00104600
                   AIF   (K'&ZXRES_NEW_SIZE LE 0).ZG17R  NOT I/O        00104700
                   AIF   ('&XRES_NEW_SIZE'(1,1) NE '(').ZG17R           00104800
&ZCGPR             SETC  '&XRES_NEW_SIZE'(2,K'&XRES_NEW_SIZE-2)         00104900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                   00105000
                   AIF   (K'&ZCGPR GT 2).ZG17Q                          00105100
                   AIF   ('&ZCGPR' EQ '0').ZG17Q                        00105200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00105300
                   AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME      00105400
.ZG17P             ANOP  ,                                              00105500
                   AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC           00105600
                   AIF   ('&ZCGPR' LT '2').ZG17Q                        00105700
                   AIF   ('&ZCGPR' LE '12').ZG17R                       00105800
.ZG17Q             ANOP  ,                                              00105900
&ZMS               SETC  '"RES_NEW_SIZE='                               00106000
&ZMS               SETC  '&ZMS.&RES_NEW_SIZE"'                          00106100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00106200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00106300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00106400
.ZG17R             ANOP  ,                                              00106500
.*-------------------------------------------------------------------   00106600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00106700
.ZG19              ANOP  ,                                              00106800
&ZTLC              SETC 'NULL'                                          00106900
                   AIF   ('&RESOURCE_TYPE(1)' NE '&ZTLC').ZG20          00107000
&XRESOURCE_TYPE    SETC  'NULL'      SET KEYWORD                        00107100
                   AIF   (N'&RESOURCE_TYPE LE 1).ZG19A  CK NUM          00107200
&ZMS               SETC  '"RESOURCE_TYPE='                              00107300
&ZMS               SETC  '&ZMS.&RESOURCE_TYPE"'                         00107400
&ZMS               SETC  '&ZMS "RESOURCE_TYPE"'                         00107500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00107600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00107700
.ZG19A             ANOP  ,                                              00107800
.*------------------------------------------------------------------    00107900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00108000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00108100
.ZG19A0            AIF   (K'&OWNER_TKN LE 0).ZG19A1  OK                 00108200
&ZCVAL             SETC '&ZCVAL OWNER_TKN'      INCORRECT KEY USED      00108300
.ZG19A1            AIF   (K'&RES_CUR_SIZE LE 0).ZG19A2  OK              00108400
&ZCVAL             SETC '&ZCVAL RES_CUR_SIZE'   INCORRECT KEY USED      00108500
.ZG19A2            AIF   (K'&RES_NEW_SIZE LE 0).ZG19A3  OK              00108600
&ZCVAL             SETC '&ZCVAL RES_NEW_SIZE'   INCORRECT KEY USED      00108700
.ZG19A3            AIF   (K'&ZCVAL LE 0).ZG19A4  OK                     00108800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00108900
&ZMS               SETC  '"RESOURCE_TYPE'                               00109000
&ZMS               SETC  '&ZMS.=&RESOURCE_TYPE"'                        00109100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00109200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00109300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00109400
.ZG19A4            ANOP  ,                                              00109500
.*------------------------------------------------------------------    00109600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00109700
.ZG20              ANOP  ,                                              00109800
&ZXRESOURCE_TYPE   SETC  'INPUT'     SET IN/OUTPUT                      00109900
                   AIF   (K'&XRESOURCE_TYPE GT 0).ZG20E  VALID ARG      00110000
                   AIF   (T'&RESOURCE_TYPE EQ 'O').ZG20D  OMITTED       00110100
&ZASYSLNDX         SETA  0                                              00110200
.ZG20A             ANOP  ,           POSITIONAL MACRO KEY               00110300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00110400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG20C               00110500
&ZTLC              SETC 'RESOURCE_TYPE'                                 00110600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG20A      00110700
.ZG20B             ANOP  ,                                              00110800
&ZXRESOURCE_TYPE   SETC  ''          RESET IN/OUTPUT                    00110900
&ZMS               SETC  'THE "RESOURCE_TYPE" KEY'                      00111000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00111100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00111200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00111300
                   AGO   .ZG20E                                         00111400
.ZG20C             ANOP  ,                                              00111500
&ZXRESOURCE_TYPE   SETC  ''          RESET IN/OUTPUT                    00111600
&ZMS               SETC  '"RESOURCE_TYPE='                              00111700
&ZMS               SETC  '&ZMS.&RESOURCE_TYPE"'                         00111800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00111900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00112000
&ZMS               SETC  '&ZMS "BUFFER_POOL"'                           00112100
&ZMS               SETC  '&ZMS OR "NULL".'                              00112200
                   MNOTE 8,' &ZMS '                                     00112300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00112400
                   AGO   .ZG20E                                         00112500
.ZG20D             ANOP  ,                                              00112600
&XRESOURCE_TYPE    SETC  'BUFFER_POOL'          SET DEFAULT KEYWORD     00112700
.ZG20E             ANOP  ,                                              00112800
.*------------------------------------------------------------------    00112900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00113000
                   AIF   (K'&RESOURCE_TYPE(1) GT 0).ZG20F  PARM         00113100
&XRESOURCE_TYPE    SETC  ''          ENSURE NULL KEYWORD                00113200
&ZXRESOURCE_TYPE   SETC  ''          RESET IN/OUTPUT                    00113300
&ZMS               SETC  'THE'                                          00113400
&ZMS               SETC  '&ZMS "RESOURCE_TYPE" KEY AND ITS'             00113500
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00113600
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00113700
&ZMS               SETC  '&ZMS "BUFFER_POOL"'                           00113800
&ZMS               SETC  '&ZMS OR "NULL".'                              00113900
                   MNOTE 8,' &ZMS '                                     00114000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00114100
.ZG20F             ANOP  ,                                              00114200
.*----------------------------------------------------------------***   00114300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00114400
                   AIF   (N'&RETCODE LE 1).ZG22A  CK NUM                00114500
&ZMS               SETC  '"RETCODE='                                    00114600
&ZMS               SETC  '&ZMS.&RETCODE"'                               00114700
&ZMS               SETC  '&ZMS "RETCODE"'                               00114800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00114900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00115000
.ZG22A             ANOP  ,                                              00115100
.*-------------------------------------------------------------------   00115200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00115300
                   AIF   (K'&RETCODE(1) LE 0).ZG22C  NO PARM            00115400
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00115500
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00115600
                   AIF   (N'&RETCODE GT 1).ZG22C                        00115700
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00115800
.ZG22C             ANOP  ,                                              00115900
.*-------------------------------------------------------------------   00116000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00116100
                   AIF   (K'&ZXRETCODE LE 0).ZG22R  NOT I/O             00116200
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG22R                00116300
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00116400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                   00116500
                   AIF   (K'&ZCGPR GT 2).ZG22Q                          00116600
                   AIF   ('&ZCGPR' EQ '0').ZG22Q                        00116700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00116800
                   AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME      00116900
.ZG22P             ANOP  ,                                              00117000
                   AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC           00117100
                   AIF   ('&ZCGPR' LT '2').ZG22Q                        00117200
                   AIF   ('&ZCGPR' LE '12').ZG22R                       00117300
.ZG22Q             ANOP  ,                                              00117400
&ZMS               SETC  '"RETCODE='                                    00117500
&ZMS               SETC  '&ZMS.&RETCODE"'                               00117600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00117700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00117800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00117900
.ZG22R             ANOP  ,                                              00118000
.*----------------------------------------------------------------***   00118100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00118200
                   AIF   (N'&RSNCODE LE 1).ZG25A  CK NUM                00118300
&ZMS               SETC  '"RSNCODE='                                    00118400
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00118500
&ZMS               SETC  '&ZMS "RSNCODE"'                               00118600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00118700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00118800
.ZG25A             ANOP  ,                                              00118900
.*-------------------------------------------------------------------   00119000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00119100
                   AIF   (K'&RSNCODE(1) LE 0).ZG25C  NO PARM            00119200
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         00119300
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           00119400
                   AIF   (N'&RSNCODE GT 1).ZG25C                        00119500
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      00119600
.ZG25C             ANOP  ,                                              00119700
.*-------------------------------------------------------------------   00119800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00119900
                   AIF   (K'&ZXRSNCODE LE 0).ZG25R  NOT I/O             00120000
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG25R                00120100
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   00120200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                   00120300
                   AIF   (K'&ZCGPR GT 2).ZG25Q                          00120400
                   AIF   ('&ZCGPR' EQ '0').ZG25Q                        00120500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00120600
                   AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME      00120700
.ZG25P             ANOP  ,                                              00120800
                   AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC           00120900
                   AIF   ('&ZCGPR' LT '2').ZG25Q                        00121000
                   AIF   ('&ZCGPR' LE '12').ZG25R                       00121100
.ZG25Q             ANOP  ,                                              00121200
&ZMS               SETC  '"RSNCODE='                                    00121300
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00121400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00121500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00121600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00121700
.ZG25R             ANOP  ,                                              00121800
.******************************************************************     00121900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00122000
.******************************************************************     00122100
                   ACTR  10000                                          00122200
.*----------------------------------------------------------------***   00122300
.***AH.P02 EXTRA POSITIONALS                                            00122400
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00122500
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00122600
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00122700
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00122800
.ZGLISTX1          ANOP  ,                                              00122900
&ZCVAL             SETC  ''          ERROR FIELD                        00123000
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00123100
.ZGLIST2           ANOP  ,                                              00123200
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00123300
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00123400
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00123500
                   AGO   .ZGLIST2                                       00123600
.*                                                                      00123700
.ZGLIST3           ANOP  ,                                              00123800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00123900
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'                      00124000
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00124100
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00124200
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00124300
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00124400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00124500
.ZGLISTX           ANOP  ,                                              00124600
&ZASYSLNDX         SETA  0                                              00124700
.*-------------------------------------------------------------------   00124800
.***AG.MF04 MF=(SLE)                                                    00124900
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00125000
.*******************************************************************    00125100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00125200
.*******************************************************************    00125300
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00125400
.*******************************************************************    00125500
.***AE.01  START OF IWMMXRA MACRO CODE                                  00125600
.*******************************************************************    00125700
                   LCLC  &M0M0001                 NAME                  00125800
&M0M0001           SETC  '&XLABEL'                SET NAME              00125900
                   AIF   (K'&XLABEL NE 0).XLAB2                         00126000
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00126100
.*                                                                      00126200
.XLAB2             ANOP  ,                                              00126300
                   AIF   ('&XMF' EQ 'L').XLAB3                          00126400
&M0M0001 DS    0H                             IWMMXRA-0                 00126500
.XLAB3             ANOP  ,                                              00126600
.*******************************************************************    00126700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00126800
.*******************************************************************    00126900
              PUSH  PRINT                                               00127000
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00127100
                   PRINT OFF         ++ PR01                            00127200
                   AGO   .ZPRNTXX                                       00127300
.ZPRINTX           PRINT ON                                             00127400
.ZPRNTXX           ANOP  ,                                              00127500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00127600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00127700
.********************************************************************   00127800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00127900
.********************************************************************   00128000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00128100
                      LCLA  &ZOPN1         INVOCATION INDEX             00128200
                      LCLC  &ZOPL(4095)    LABEL                        00128300
                      LCLC  &ZOPO(4095)    OPERATION                    00128400
                      LCLC  &ZOPV(4095)    VALUE                        00128500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00128600
.*                                                                      00128700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00128800
.******************************************************************     00128900
.***AL.L10 IWMMXRA FMT=LIST MF=S!L PARAMETERS                           00129000
.******************************************************************     00129100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00129200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00129300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00129400
&XMFATTR              SETC  '0D'                                        00129500
.*                                                                      00129600
&ZOPN                 SETA  &ZOPN+1                                     00129700
&ZOPL(&ZOPN)          SETC  ' '                                         00129800
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00129900
&ZOPO(&ZOPN)          SETC  'B'                                         00130000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00130100
                      AGO   .ZALVL6B                                    00130200
.ZALVL6A              ANOP                                              00130300
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00130400
&ZOPV(&ZOPN)          SETC  '4,8'                                       00130500
&ZOPN                 SETA  &ZOPN+1                                     00130600
&ZOPL(&ZOPN)          SETC  ' '                                         00130700
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00130800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00130900
.ZALVL6B              ANOP                                              00131000
&ZOPD(&ZOPN)          SETC  '++ IWMMXRA ARG PARMS'                      00131100
.*                                                                      00131200
&ZOPN                 SETA  &ZOPN+1                                     00131300
&ZOPL(&ZOPN)          SETC  ' '                                         00131400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00131500
&ZOPV(&ZOPN)          SETC  '1'                                         00131600
&ZOPD(&ZOPN)          SETC  ' '                                         00131700
.*                                                                      00131800
.ZLMFSL2              ANOP  ,                                           00131900
.*-------------------------------------------------------------------   00132000
.***AM.L00  IWMMXRA FMT=LIST name                                       00132100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00132200
&ZOPN                 SETA &ZOPN+1                                      00132300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00132400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00132500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00132600
&ZOPD(&ZOPN)          SETC '++ IWMMXRA NAME'                            00132700
.ZLMFSL2M             ANOP  ,                                           00132800
.*-------------------------------------------------------------------   00132900
.***AM.L01  IWMMXRA FMT=LIST PARAMETERS                                 00133000
&ZOPN                 SETA &ZOPN+1                                      00133100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00133200
&ZOPO(&ZOPN)          SETC 'DS'                                         00133300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00133400
&ZOPD(&ZOPN)          SETC '++ IWMMXRA PARM LIST'                       00133500
.*-------------------------------------------------------------------   00133600
.***AM.L02 XVERSION XL1                                                 00133700
&ZOPN                 SETA &ZOPN+1                                      00133800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00133900
&ZOPO(&ZOPN)          SETC 'DS'                                         00134000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00134100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00134200
.*-------------------------------------------------------------------   00134300
.***AM.L09  XRSV0001 CL1                                                00134400
&ZOPN                 SETA &ZOPN+1                                      00134500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00134600
&ZOPO(&ZOPN)          SETC 'DS'                                         00134700
&ZOPV(&ZOPN)          SETC 'CL1'                                        00134800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00134900
.*-------------------------------------------------------------------   00135000
.***AM.L09  XPLISTLEN XL2                                               00135100
&ZOPN                 SETA &ZOPN+1                                      00135200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00135300
&ZOPO(&ZOPN)          SETC 'DS'                                         00135400
&ZOPV(&ZOPN)          SETC 'XL2'                                        00135500
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00135600
.*-------------------------------------------------------------------   00135700
.***AM.L03 XRESOURCE_TYPE BL.8                                          00135800
&ZOPN                 SETA &ZOPN+1                                      00135900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESOURCE_TYPE'                   00136000
&ZOPO(&ZOPN)          SETC 'DS'                                         00136100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00136200
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00136300
.*                                                                      00136400
&ZOPN                 SETA  &ZOPN+1                                     00136500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRESOURCE_TYPE_BUFFER_POOL'      00136600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00136700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00136800
&ZOPD(&ZOPN)          SETC  '++ XRESOURCE_TYPE.'                        00136900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER_POOL'                  00137000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00137100
.*-------------------------------------------------------------------   00137200
.***AM.L09  XRSV0005 CL3                                                00137300
&ZOPN                 SETA &ZOPN+1                                      00137400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0005'                         00137500
&ZOPO(&ZOPN)          SETC 'DS'                                         00137600
&ZOPV(&ZOPN)          SETC 'CL3'                                        00137700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00137800
.*-------------------------------------------------------------------   00137900
.***AM.L09  XRESOURCE_TKN CL8                                           00138000
&ZOPN                 SETA &ZOPN+1                                      00138100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESOURCE_TKN'                    00138200
&ZOPO(&ZOPN)          SETC 'DS'                                         00138300
&ZOPV(&ZOPN)          SETC 'CL8'                                        00138400
&ZOPD(&ZOPN)          SETC '++ &ZXRESOURCE_TKN '                        00138500
.*-------------------------------------------------------------------   00138600
.***AM.L09  XOWNER_TKN CL8                                              00138700
&ZOPN                 SETA &ZOPN+1                                      00138800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNER_TKN'                       00138900
&ZOPO(&ZOPN)          SETC 'DS'                                         00139000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00139100
&ZOPD(&ZOPN)          SETC '++ &ZXOWNER_TKN '                           00139200
.*-------------------------------------------------------------------   00139300
.***AM.L09  XRES_CUR_SIZE F                                             00139400
&ZOPN                 SETA &ZOPN+1                                      00139500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRES_CUR_SIZE'                    00139600
&ZOPO(&ZOPN)          SETC 'DS'                                         00139700
&ZOPV(&ZOPN)          SETC 'F'                                          00139800
&ZOPD(&ZOPN)          SETC '++ &ZXRES_CUR_SIZE '                        00139900
.*-------------------------------------------------------------------   00140000
.***AM.L09  XRES_NEW_SIZE F                                             00140100
&ZOPN                 SETA &ZOPN+1                                      00140200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRES_NEW_SIZE'                    00140300
&ZOPO(&ZOPN)          SETC 'DS'                                         00140400
&ZOPV(&ZOPN)          SETC 'F'                                          00140500
&ZOPD(&ZOPN)          SETC '++ &ZXRES_NEW_SIZE '                        00140600
.*-------------------------------------------------------------------   00140700
.***AM.L09  XRSV0020 CL4                                                00140800
&ZOPN                 SETA &ZOPN+1                                      00140900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0020'                         00141000
&ZOPO(&ZOPN)          SETC 'DS'                                         00141100
&ZOPV(&ZOPN)          SETC 'CL4'                                        00141200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00141300
.*-------------------------------------------------------------------   00141400
.***AM.L10 END OF IWMMXRA LIST PARAMETERS                               00141500
&ZOPN                 SETA &ZOPN+1                                      00141600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00141700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00141800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00141900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00142000
.*                                                                      00142100
&ZOPN                 SETA &ZOPN+1                                      00142200
&ZOPL(&ZOPN)          SETC ' '                                          00142300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00142400
&ZOPV(&ZOPN)          SETC '1'                                          00142500
&ZOPD(&ZOPN)          SETC ' '                                          00142600
.*-------------------------------------------------------------------   00142700
.***AL.L12 IWMMXRA FMT=LIST MF=S!L PARAMETERS                           00142800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00142900
.*                                                                      00143000
&ZOPN                 SETA  &ZOPN+1                                     00143100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00143200
&ZOPO(&ZOPN)          SETC  'DC'                                        00143300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00143400
&ZOPD(&ZOPN)          SETC  '++ IWMMXRA ARG PARMS'                      00143500
.*                                                                      00143600
.ZLMFSLX              ANOP  ,                                           00143700
.*-------------------------------------------------------------------   00143800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00143900
&ZPLLEN               SETA 36                                           00144000
.*                                                                      00144100
.******************************************************************     00144200
.***AI.L01 IWMMXRA FMT=LIST FILL IN PARAMETER AREA                      00144300
.******************************************************************     00144400
                      ACTR  10000                                       00144500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00144600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00144700
&ZCVAL                SETC  'LAE'          XAX MODE                     00144800
.ZIMFXA               ANOP ,                                            00144900
.*                                                                      00145000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00145100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00145200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00145300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00145400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00145500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00145600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00145700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00145800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00145900
&ZOPN                 SETA  &ZOPN+1                                     00146000
&ZOPL(&ZOPN)          SETC  ' '                                         00146100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00146200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00146300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00146400
                      AGO   .ZIMFNX                                     00146500
.*                                                                      00146600
.ZIMFN2               ANOP ,                                            00146700
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00146800
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00146900
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00147000
&ZOPN                 SETA  &ZOPN+1                                     00147100
&ZOPL(&ZOPN)          SETC  ' '                                         00147200
&ZOPO(&ZOPN)          SETC  'LAE'                                       00147300
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00147400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00147500
                      AGO   .ZIMFNX                                     00147600
.ZIMFNX1              ANOP ,                                            00147700
&ZOPN                 SETA  &ZOPN+1                                     00147800
&ZOPL(&ZOPN)          SETC  ' '                                         00147900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00148000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00148100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00148200
.ZIMFNX               ANOP ,                                            00148300
.********************************************************************   00148400
.***AI.L02 IWMMXRA FMT=LIST INITIALIZE PARAMETER AREA                   00148500
.********************************************************************   00148600
.***AI.L03 MF=(SLE)                                                     00148700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00148800
.*                                                                      00148900
&ZOPN                 SETA  &ZOPN+1                                     00149000
&ZOPL(&ZOPN)          SETC  ' '                                         00149100
&ZOPO(&ZOPN)          SETC  'XC'                                        00149200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00149300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00149400
.ZIMFLX               ANOP  ,                                           00149500
.*-------------------------------------------------------------------   00149600
.***AI.L04 XPLISTLEN XL2                                                00149700
&ZOPN                 SETA  &ZOPN+1                                     00149800
&ZOPL(&ZOPN)          SETC  ' '                                         00149900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00150000
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00150100
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00150200
.*-------------------------------------------------------------------   00150300
.***AI.L05 XRESOURCE_TYPE BL1                                           00150400
&ZW                   SETC  ''                                          00150500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00150600
.*-------------------------------------------------------------------   00150700
.***AI.L08 XRESOURCE_TYPE "BUFFER_POOL"                                 00150800
.***      BL1'1XXXXXXX'                                                 00150900
         AIF   ('&XRESOURCE_TYPE' NE 'BUFFER_POOL').ZI5A                00151000
&ZW                   SETC  '&ZW.10000000'                              00151100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00151200
                      AGO   .ZI5C                                       00151300
.*                                                                      00151400
.ZI5A                 ANOP  ,                                           00151500
&ZW                   SETC  '&ZW.00000000'                              00151600
.ZI5C                 ANOP  ,                                           00151700
.*-------------------------------------------------------------------   00151800
.***AI.L11 XRESOURCE_TYPE BL1                                           00151900
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00152000
&ZOPN                 SETA  &ZOPN+1                                     00152100
&ZOPL(&ZOPN)          SETC  ' '                                         00152200
&ZOPO(&ZOPN)          SETC  'OI'                                        00152300
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00152400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00152500
.ZI5E                 ANOP  ,                                           00152600
.*-------------------------------------------------------------------   00152700
.***AI.L25  XRESOURCE_TKN CL8                                           00152800
                      AIF   ('&ZXRESOURCE_TKN' EQ '').ZI7E              00152900
                      AIF   ('&ZXRESOURCE_TKN' EQ 'OUTPUT').ZI7E        00153000
&ZCGPR                SETC  '&XRESOURCE_TKN'                            00153100
.*                                                                      00153200
                      AIF   ('&XRESOURCE_TKN'(1,1) NE '(').ZI7B         00153300
&ZCGPR   SETC  '0('.'&XRESOURCE_TKN'(2,K'&XRESOURCE_TKN-2).')'          00153400
.ZI7B                 ANOP  ,                                           00153500
.*                                                                      00153600
&ZOPN                 SETA  &ZOPN+1                                     00153700
&ZOPL(&ZOPN)          SETC  ' '                                         00153800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00153900
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00154000
&ZOPD(&ZOPN)          SETC  '++ &ZXRESOURCE_TKN XRESOURCE_TKN'          00154100
.*                                                                      00154200
.ZI7E                 ANOP  ,                                           00154300
.*-------------------------------------------------------------------   00154400
.***AI.L25  XOWNER_TKN CL8                                              00154500
                      AIF   ('&ZXOWNER_TKN' EQ '').ZI8E                 00154600
                      AIF   ('&ZXOWNER_TKN' EQ 'OUTPUT').ZI8E           00154700
&ZCGPR                SETC  '&XOWNER_TKN'                               00154800
.*                                                                      00154900
                      AIF   ('&XOWNER_TKN'(1,1) NE '(').ZI8B            00155000
&ZCGPR   SETC  '0('.'&XOWNER_TKN'(2,K'&XOWNER_TKN-2).')'                00155100
.ZI8B                 ANOP  ,                                           00155200
.*                                                                      00155300
&ZOPN                 SETA  &ZOPN+1                                     00155400
&ZOPL(&ZOPN)          SETC  ' '                                         00155500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00155600
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00155700
&ZOPD(&ZOPN)          SETC  '++ &ZXOWNER_TKN XOWNER_TKN'                00155800
.*                                                                      00155900
.ZI8E                 ANOP  ,                                           00156000
.*-------------------------------------------------------------------   00156100
.***AI.L25  XRES_CUR_SIZE F                                             00156200
                      AIF   ('&ZXRES_CUR_SIZE' EQ '').ZI9E              00156300
                      AIF   ('&ZXRES_CUR_SIZE' EQ 'OUTPUT').ZI9E        00156400
&ZCGPR                SETC  '&XRES_CUR_SIZE'                            00156500
.*                                                                      00156600
                      AIF   ('&XRES_CUR_SIZE'(1,1) NE '(').ZI9B         00156700
&ZCGPR   SETC  '0('.'&XRES_CUR_SIZE'(2,K'&XRES_CUR_SIZE-2).')'          00156800
                      AGO   .ZI9D                                       00156900
.ZI9B                 ANOP  ,                                           00157000
.*                                                                      00157100
&ZC                   SETC  '&XRES_CUR_SIZE'(1,1)                       00157200
                      AIF   (T'&ZC NE 'N').ZI9D                         00157300
&ZC                   SETC  '&XRES_CUR_SIZE'                            00157400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00157500
&ZCGPR                SETC  '=AL4(&XRES_CUR_SIZE)'                      00157600
.*                                                                      00157700
.ZI9D                 ANOP  ,                                           00157800
.*                                                                      00157900
&ZOPN                 SETA  &ZOPN+1                                     00158000
&ZOPL(&ZOPN)          SETC  ' '                                         00158100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00158200
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00158300
&ZOPD(&ZOPN)          SETC  '++ &ZXRES_CUR_SIZE XRES_CUR_SIZE'          00158400
.*                                                                      00158500
.ZI9E                 ANOP  ,                                           00158600
.*-------------------------------------------------------------------   00158700
.***AI.L25  XRES_NEW_SIZE F                                             00158800
                      AIF   ('&ZXRES_NEW_SIZE' EQ '').ZI10E             00158900
                      AIF   ('&ZXRES_NEW_SIZE' EQ 'OUTPUT').ZI10E       00159000
&ZCGPR                SETC  '&XRES_NEW_SIZE'                            00159100
.*                                                                      00159200
                      AIF   ('&XRES_NEW_SIZE'(1,1) NE '(').ZI10B        00159300
&ZCGPR   SETC  '0('.'&XRES_NEW_SIZE'(2,K'&XRES_NEW_SIZE-2).')'          00159400
                      AGO   .ZI10D                                      00159500
.ZI10B                ANOP  ,                                           00159600
.*                                                                      00159700
&ZC                   SETC  '&XRES_NEW_SIZE'(1,1)                       00159800
                      AIF   (T'&ZC NE 'N').ZI10D                        00159900
&ZC                   SETC  '&XRES_NEW_SIZE'                            00160000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00160100
&ZCGPR                SETC  '=AL4(&XRES_NEW_SIZE)'                      00160200
.*                                                                      00160300
.ZI10D                ANOP  ,                                           00160400
.*                                                                      00160500
&ZOPN                 SETA  &ZOPN+1                                     00160600
&ZOPL(&ZOPN)          SETC  ' '                                         00160700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00160800
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00160900
&ZOPD(&ZOPN)          SETC  '++ &ZXRES_NEW_SIZE XRES_NEW_SIZE'          00161000
.*                                                                      00161100
.ZI10E                ANOP  ,                                           00161200
.*-------------------------------------------------------------------   00161300
&ZOPN1                SETA &ZOPN                                        00161400
.*******************************************************************    00161500
.***  PROCESS IWMMXRA OUTPUT PARAMETERS                                 00161600
.*******************************************************************    00161700
                      ACTR  10000                                       00161800
.*******************************************************************    00161900
.***AO.X02  RETURN CODE PROCESSING                                      00162000
.*******************************************************************    00162100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00162200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00162300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00162400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00162500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00162600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00162700
&ZOPN                 SETA  &ZOPN+1                                     00162800
&ZOPL(&ZOPN)          SETC  ' '                                         00162900
&ZOPO(&ZOPN)          SETC  'ST'                                        00163000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00163100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00163200
                      AGO   .ZMRETX                                     00163300
.*                                                                      00163400
.ZMRET2               ANOP  ,                                           00163500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00163600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00163700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00163800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00163900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00164000
&ZOPN                 SETA  &ZOPN+1                                     00164100
&ZOPL(&ZOPN)          SETC  ' '                                         00164200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00164300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00164400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00164500
.ZMRETX               ANOP  ,                                           00164600
.*******************************************************************    00164700
.***AO.X03  REASON CODE PROCESSING                                      00164800
.*******************************************************************    00164900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00165000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00165100
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00165200
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00165300
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00165400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00165500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00165600
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00165700
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00165800
&ZOPN                 SETA  &ZOPN+1                                     00165900
&ZOPL(&ZOPN)          SETC  ' '                                         00166000
&ZOPO(&ZOPN)          SETC  'ST'                                        00166100
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00166200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00166300
                      AGO   .ZMRSNX                                     00166400
.*                                                                      00166500
.ZMRSN2               ANOP  ,                                           00166600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00166700
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00166800
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00166900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00167000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00167100
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00167200
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00167300
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00167400
&ZOPN                 SETA  &ZOPN+1                                     00167500
&ZOPL(&ZOPN)          SETC  ' '                                         00167600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00167700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00167800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00167900
.ZMRSNX               ANOP  ,                                           00168000
.*******************************************************************    00168100
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00168200
.*******************************************************************    00168300
.ZMFLX                ANOP  ,              MF=L PROCESSING              00168400
.*******************************************************************    00168500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00168600
.*******************************************************************    00168700
                      ACTR  10000                                       00168800
.*                                                                      00168900
                      LCLA  &ZLC           COLUMN POSITION              00169000
                      LCLA  &ZOPX          LIST TABLE INDEX             00169100
                      LCLC  &ZLL           LABEL                        00169200
                      LCLC  &ZLOP          OPERATION                    00169300
                      LCLC  &ZLV           VALUE                        00169400
                      LCLC  &ZLD           DESCRIPTION                  00169500
.*                                                                      00169600
&ZOPX                 SETA  1                                           00169700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00169800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00169900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00170000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00170100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00170200
                      AIF   (K'&ZLD LE 0).ZL5                           00170300
&ZLC                  SETA  35             COMMENT COLUMN               00170400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00170500
&ZLC                  SETA  33             COMMMENT COLUMN              00170600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00170700
&ZLV                  SETC  '&ZLV'.' '                                  00170800
                      AGO   .ZL3                                        00170900
.*                                                                      00171000
.ZL4                  ANOP  ,                                           00171100
&ZLV                  SETC  '&ZLV'.' '                                  00171200
.ZL5                  ANOP  ,                                           00171300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00171400
.*                                                                      00171500
&ZLL     &ZLOP &ZLV                                                     00171600
.*                                                                      00171700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00171800
                      AGO   .ZL2           CONTINUE LOOPING             00171900
.*                                                                      00172000
.ZLX                  ANOP  ,                                           00172100
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00172200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00172300
         LCLC  &T1                                                      00172400
         AIF   ('&XRESOURCE_TYPE' EQ 'NULL').FINIS                      00172500
.*                                                                      00172600
&T1      SETC  '&XRES_ADJ_EXIT@'                                        00172700
         AIF   ('&XRES_ADJ_EXIT@'(1,1) NE '(').EXITRS                   00172800
&T1      SETC  '&XRES_ADJ_EXIT@'(2,K'&XRES_ADJ_EXIT@-2)                 00172900
&T1      SETC  '0(&T1.)'                                                00173000
.EXITRS    ANOP                                                         00173100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00173200
.*                                                                      00173300
         L     15,&T1                  FETCH RESOURCE ADJUSTMENT EXIT @ 00173400
         BALR  14,15                                                    00173500
.*                                                                      00173600
.FINIS   ANOP                                                           00173700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00173800
.ZLINKX               ANOP  ,                                           00173900
.*******************************************************************    00174000
.***AP.X01  FORMAT GENERATED CODE                                       00174100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00174200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00174300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00174400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00174500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00174600
                      AIF   (K'&ZLD LE 0).ZL51                          00174700
&ZLC                  SETA  35             COMMENT COLUMN               00174800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00174900
&ZLC                  SETA  33             COMMENT COLUMN               00175000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00175100
&ZLV                  SETC  '&ZLV'.' '                                  00175200
                      AGO   .ZL31                                       00175300
.*                                                                      00175400
.ZL41                 ANOP  ,                                           00175500
&ZLV                  SETC  '&ZLV'.' '                                  00175600
.ZL51                 ANOP  ,                                           00175700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00175800
.*                                                                      00175900
&ZLL     &ZLOP &ZLV                                                     00176000
.*                                                                      00176100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00176200
                      AGO   .ZL21          CONTINUE LOOPING             00176300
.*                                                                      00176400
.ZLX1                 ANOP  ,                                           00176500
.*******************************************************************    00176600
.***AP.X02  END OF IWMMXRA MACRO                                        00176700
&ZIWMMXRA             SETC  'YES'          SET IWMMXRA USED             00176800
         POP   PRINT                                                    00176900
*                                            IWMMXRA-0                  00177000
         SPACE 1                                                        00177100
.ZLX2                 ANOP  ,                                           00177200
         MEND                                                           00177300
**********************************************************************/ 00177400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00177500
*%IWMMXRA: MACRO KEYS(RESOURCE_TKN,RES_ADJ_EXIT@,RESOURCE_TYPE,         00177600
*                 OWNER_TKN,RES_CUR_SIZE,RES_NEW_SIZE,RETCODE,RSNCODE,  00177700
*                 PLISTVER,MF);                                         00177800
*  ANS('?'!!MACLABEL!!' '!!'IWMMXRAP '!!MACLIST!!                       00177900
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00178000
*%END IWMMXRA;                                                          00178100
