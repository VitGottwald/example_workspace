*%IWM4QTNT: MACRO KEYS(ANSAREA,ANSLEN,QUERYLEN,ANSTOKN,RETCODE,         00000100
*                 RSNCODE,PLISTVER,MF);                                 00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWM4QTNT                              -01/10/17-<0> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Query Tenant Resource Group Consumption       * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     5650-ZOS COPYRIGHT IBM CORP. 2017                               * 00001400
*                                                                     * 00001500
* STATUS= HBB77B0                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*      IWM4QTNT is the interface reporting products should use to     * 00002200
*      obtain CPU service consumption of tenant resource groups       * 00002300
*      defined in the WLM service definition. Long-term average       * 00002400
*      service on general purpose processors used by the tenant       * 00002500
*      resource groups is provided as well as the consumption on      * 00002600
*      specialty engines.                                             * 00002700
*                                                                     * 00002800
*      Reporting is initialized at IPL and during policy changes.  A  * 00002900
*      unique token is created each time reporting is initialized.    * 00003000
*      The ANSTOKN keyword retrieves this token and also is used on   * 00003100
*      subsequent invocations to ensure the reporting state is still  * 00003200
*      valid.                                                         * 00003300
*                                                                     * 00003400
*      The caller must provide an area of storage in the ANSAREA      * 00003500
*      parameter and the length of that area in the ANSLEN parameter  * 00003600
*      for IWM4QTNT to return the CPU consumption.  IWM4QTNT returns  * 00003700
*      the actual length of the information in the QUERYLEN           * 00003800
*      parameter. The answer area is mapped by the IWMWQTAA data      * 00003900
*      area.                                                          * 00004000
*                                                                     * 00004100
*      If the storage area provided is insufficient, no data is       * 00004200
*      returned by IWM4QTNT but an appropriate return and reason code * 00004300
*      is issued and the required amount of storage is returned in    * 00004400
*      the QUERYLEN parameter.                                        * 00004500
*                                                                     * 00004600
*      If a user does not know the size of the answer area required   * 00004700
*      by the service, he should issue IWM4QTNT with ANSLEN set to    * 00004800
*      zero. The length of the answer area will be placed in          * 00004900
*      QUERYLEN.                                                      * 00005000
*                                                                     * 00005100
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00005200
*                                                                     * 00005300
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00005400
*                                                                     * 00005500
*01* ENVIRONMENT:                                                     * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*      Minimum authorization: Supervisor state or program key mask    * 00005900
*                        (PKM) allowing keys 0-7.                     * 00006000
*                                                                     * 00006100
*      Dispatchable unit mode: Task mode.                             * 00006200
*                                                                     * 00006300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00006400
*                                                                     * 00006500
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00006600
*                        mode, code SYSSTATE AMODE64=YES before       * 00006700
*                        invoking this macro.                         * 00006800
*                                                                     * 00006900
*      ASC mode:         Primary or Access Register.                  * 00007000
*                                                                     * 00007100
*                        If in Access Register ASC mode, specify      * 00007200
*                        SYSSTATE ASCENV=AR before invoking this      * 00007300
*                        macro.                                       * 00007400
*                                                                     * 00007500
*      Interrupt status: Enabled for I/O and external interrupts.     * 00007600
*                                                                     * 00007700
*      Locks:            No locks held.  The caller cannot have an    * 00007800
*                        EUT FRR established.                         * 00007900
*                                                                     * 00008000
*      Control parameters:     The caller of IWM4QTNT must provide    * 00008100
*                        storage for an answer area mapped by         * 00008200
*                        IWMWQTAA. This answer area may reside in the * 00008300
*                        caller's primary address space, or in a      * 00008400
*                        dataspace accessible via the current unit of * 00008500
*                        work's dispatchable unit access list (DUal). * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*01* PROGRAMMING REQUIREMENTS:                                        * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*    1.  The macro CVT must be included to use this macro.            * 00009300
*                                                                     * 00009400
*    2.  The macro IWMYCON must be included to use this macro.        * 00009500
*                                                                     * 00009600
*    3.  The macro IWMPB must be in the library concatenation, since  * 00009700
*        it is included by IWMYCON.                                   * 00009800
*                                                                     * 00009900
*    4.  Note that the high order halfword of register 0, and the     * 00010000
*        reason code variable when specified, may be non-zero and     * 00010100
*        represents diagnostic data which is NOT part of the external * 00010200
*        interface.  The high order halfword should thus be excluded  * 00010300
*        from comparison with the reason code values described above. * 00010400
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00010500
*        be used for this purpose.                                    * 00010600
*                                                                     * 00010700
*    5.  All character data, unless otherwise specified, is assumed   * 00010800
*        to be left justified and padded with blanks on the right, as * 00010900
*        needed, to occupy the specified number of bytes.             * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*01* RESTRICTIONS:                                                    * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*    1.  This macro may not be used prior to the completion of WLM    * 00011700
*        address space initialization                                 * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*01* INPUT REGISTER INFORMATION:                                      * 00012200
*                                                                     * 00012300
*    Before issuing the IWM4QTNT macro, the caller does not have to   * 00012400
*    place any information into any register unless using it in       * 00012500
*    register notation for a particular parameter, using it as a base * 00012600
*    register, or using it to provide the ALET of the storage area.   * 00012700
*                                                                     * 00012800
*01* OUTPUT REGISTER INFORMATION:                                     * 00012900
*                                                                     * 00013000
*    When control returns to the caller, the GPRs contain:            * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*    REGISTER  CONTENTS                                               * 00013400
*                                                                     * 00013500
*    0         Reason code if GR15 return code is non-zero            * 00013600
*                                                                     * 00013700
*    1         Used as work register by the system                    * 00013800
*                                                                     * 00013900
*    2-13      Unchanged                                              * 00014000
*                                                                     * 00014100
*    14        Used as work register by the system                    * 00014200
*                                                                     * 00014300
*    15        Return code                                            * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*    When control returns to the caller, the ARs contain:             * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*    REGISTER  CONTENTS                                               * 00015100
*                                                                     * 00015200
*    0-1       Used as work registers by the system                   * 00015300
*                                                                     * 00015400
*    2-13      Unchanged                                              * 00015500
*                                                                     * 00015600
*    14-15     Used as work registers by the system                   * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*    Some callers depend on register contents remaining the same      * 00016100
*    before and after issuing a service.  If the system changes the   * 00016200
*    contents of registers on which the caller depends, the caller    * 00016300
*    must save them before issuing the service, and restore them      * 00016400
*    after the system returns control.                                * 00016500
*                                                                     * 00016600
*01* PERFORMANCE IMPLICATIONS:                                        * 00016700
*                                                                     * 00016800
*    None                                                             * 00016900
*                                                                     * 00017000
*01* SYNTAX:                                                          * 00017100
*                                                                     * 00017200
*Ýxlabel¨  IWM4QTNT     ANSAREA=xansarea                              * 00017300
*                      ,ANSLEN=xanslen                                * 00017400
*                      ,QUERYLEN=xquerylen                            * 00017500
*                      ,ANSTOKN=xanstokn                              * 00017600
*                     Ý,RETCODE=xretcode¨                             * 00017700
*                     Ý,RSNCODE=xrsncode¨                             * 00017800
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00017900
*                    ÐÝ,MF=S¨                                         * 00018000
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00018100
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*      Where:                                                         * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*      Ýxlabel¨                                                       * 00018800
*          is an optional symbol, starting in column 1, that is the   * 00018900
*          name on the IWM4QTNT macro invocation.  The name must      * 00019000
*          conform to the rules for an ordinary assembler language    * 00019100
*          symbol.                                                    * 00019200
*          DEFAULT: No name.                                          * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      ANSAREA(xansarea)                                              * 00019800
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00019900
*          only) of a required character output that contains the     * 00020000
*          address of a storage area to hold the information returned * 00020100
*          by IWM4QTNT. The area is mapped by the IWMWQTAA mapping    * 00020200
*          macro.                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*      ANSLEN(xanslen)                                                * 00020800
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00020900
*          only) of a required fullword input that contains the       * 00021000
*          length of the storage area (answer area) you are providing * 00021100
*          on ANSAREA.                                                * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*      QUERYLEN(xquerylen)                                            * 00021700
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00021800
*          only) of a required fullword output which contains the     * 00021900
*          length of the storage area required by the IWM4QTNT        * 00022000
*          service.  The length of the area may change between        * 00022100
*          invocations.                                               * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*      ANSTOKN(xanstokn)                                              * 00022700
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00022800
*          only) of a required 8 character input/output that contains * 00022900
*          a token value. On your first call to IWM4QTNT, you specify * 00023000
*          ANSTOKN as an output parameter. IWM4QTNT provides a token  * 00023100
*          value that is required for subsequent calls to IWM4QTNT.   * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*      ÝRETCODE(xretcode)¨                                            * 00023700
*          is the name (RS-type) of an optional fullword output       * 00023800
*          variable (or register (2)-(12) or (15) ASM only) into      * 00023900
*          which the return code is to be copied from GPR 15.  If you * 00024000
*          specify 15, GPR15, REG15, or R15 (within or without        * 00024100
*          parentheses), the value will be left in GPR 15.            * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*      ÝRSNCODE(xrsncode)¨                                            * 00024700
*          is the name (RS-type) of an optional fullword output       * 00024800
*          variable into which the reason code is to be copied from   * 00024900
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00025000
*          R0 (within or without parentheses), the value will be left * 00025100
*          in GPR 0.                                                  * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*      ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨                        * 00025700
*          is an optional byte input decimal value in the "0-0" range * 00025800
*          that specifies the macro version.  PLISTVER is the only    * 00025900
*          key allowed on the list form of MF and determines which    * 00026000
*          parameter list is generated.  Note that MAX may be         * 00026100
*          specified instead of a number, and the parameter list will * 00026200
*          be of the largest size currently supported. This size may  * 00026300
*          grow from release to release (thus possibly affecting the  * 00026400
*          amount of storage needed by your program).  If your        * 00026500
*          program can tolerate this, IBM recommends that you always  * 00026600
*          specify MAX when creating the list form parameter list as  * 00026700
*          that will ensure that the list form parameter list is      * 00026800
*          always long enough to hold whatever parameters might be    * 00026900
*          specified on the execute form.                             * 00027000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00027100
*          default is the lowest version which allows all of the      * 00027200
*          parameters specified on the invocation to be processed.    * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*      ÝMF(»S!L!Eº)¨                                                  * 00027800
*          is an optional keyword input which specifies the macro     * 00027900
*          form.                                                      * 00028000
*          DEFAULT: S                                                 * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*          ÝMF(S)¨                                                    * 00028400
*              specifies the standard form of the macro.  The "S"     * 00028500
*              form generates code to put the parameters into the     * 00028600
*              parameter list and invoke the desired service.  Full   * 00028700
*              checking for required macro keys is done along with    * 00028800
*              supplying defaults for omitted optional parameters.    * 00028900
*              The ?EPILOG macro must be invoked at the end of the    * 00029000
*              module.                                                * 00029100
*                                                                     * 00029200
*              For assembly language code modules, the "S" form       * 00029300
*              generates code to put the parameters into an in-line   * 00029400
*              parameter list and invoke the desired service.  Full   * 00029500
*              checking for required macro keys is done along with    * 00029600
*              supplying defaults for omitted optional parameters.    * 00029700
*                                                                     * 00029800
*          ÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨                       * 00029900
*              specifies the list form of the macro.  The "L" form    * 00030000
*              defines an area to be used for the parameter list.     * 00030100
*              Only the PLISTVER key may be specified on the          * 00030200
*              invocation.  All other macro parameters are flagged as * 00030300
*              errors.  If PLISTVER is not specified, the original    * 00030400
*              parameter list definition is used.                     * 00030500
*                                                                     * 00030600
*            ,xmfctrl                                                 * 00030700
*              is a required input.  It is the name of a storage area * 00030800
*              for the parameter list.                                * 00030900
*                                                                     * 00031000
*            »,xmfattr!BDY(DWORD)º                                    * 00031100
*              is an optional 60 character input string that varies   * 00031200
*              from 1 to 60 characters. Use it to force boundary      * 00031300
*              alignment of the parameter list. Use only 0F or 0D     * 00031400
*              (assembler-only).                                      * 00031500
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00031600
*              forces the parameter list to a doubleword boundary.    * 00031700
*                                                                     * 00031800
*          ÝMF(E,xmfctrl»,COMPLETEº)¨                                 * 00031900
*              specifies the execute form of the macro.  The "E" form * 00032000
*              generates code to put the parameters into the          * 00032100
*              parameter list specified by xmfctrl and provides full  * 00032200
*              syntax checking with default setting.                  * 00032300
*                                                                     * 00032400
*            ,xmfctrl                                                 * 00032500
*              is a required input.  It is the name (RS-type) (or     * 00032600
*              address in register (1)-(12) ASM only) of a storage    * 00032700
*              area for the parameter list.                           * 00032800
*                                                                     * 00032900
*            »,COMPLETEº                                              * 00033000
*              is an optional keyword input which specifies the       * 00033100
*              degree of macro parameter syntax checking.             * 00033200
*              DEFAULT: COMPLETE                                      * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*              COMPLETE                                               * 00033600
*                  Checking for required macro keys is done and       * 00033700
*                  defaults are supplied for omitted optional         * 00033800
*                  parameters.                                        * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*01* ABEND CODES:  None.                                              * 00034700
*                                                                     * 00034800
*01* RETURN CODES:                                                    * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*            0    Name: IwmRetCodeOk                                  * 00035200
*                                                                     * 00035300
*                 Meaning: Successful completion.                     * 00035400
*                                                                     * 00035500
*                 Action: None required.                              * 00035600
*                                                                     * 00035700
*            4    Name: IwmRetCodeWarning                             * 00035800
*                                                                     * 00035900
*                 Meaning: Successful completion, unusual conditions  * 00036000
*                 noted.                                              * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                 HEX REASON  MEANING/ACTION                          * 00036400
*                 CODE                                                * 00036500
*                                                                     * 00036600
*                 xxxx040A    Name: IwmRsnCodeOutputAreaTooSmall      * 00036700
*                                                                     * 00036800
*                             Meaning:  The output area supplied is   * 00036900
*                             too small to receive all the available  * 00037000
*                             information. The correct answer area    * 00037100
*                             length is returned in the QUERYLEN      * 00037200
*                             field.                                  * 00037300
*                                                                     * 00037400
*                             Action: None required.  If necessary,   * 00037500
*                             reinvoke the service with an output     * 00037600
*                             area of sufficient size to receive all  * 00037700
*                             information.                            * 00037800
*                                                                     * 00037900
*                 xxxx040F    Name: IwmRsnCodeStateInvDataRet         * 00038000
*                                                                     * 00038100
*                             Meaning:  The token value specified on  * 00038200
*                             the ANSTOKN keyword is associated with  * 00038300
*                             a WLM state that is no longer valid.    * 00038400
*                             The new system state is represented by  * 00038500
*                             the token returned in the ANSTOKN       * 00038600
*                             field.  The answer area provided is     * 00038700
*                             large enough to contain the available   * 00038800
*                             data. However, the new answer area      * 00038900
*                             lengths is returned in the QUERYLEN     * 00039000
*                             field.                                  * 00039100
*                                                                     * 00039200
*                             Action:  Reinvoke the service with the  * 00039300
*                             token passed with the ANSTOKN keyword.  * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*            8    Name: IwmRetCodeInvocError                          * 00039800
*                                                                     * 00039900
*                 Meaning: Invalid invocation environment or          * 00040000
*                 parameters.                                         * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*                 HEX REASON  MEANING/ACTION                          * 00040400
*                 CODE                                                * 00040500
*                                                                     * 00040600
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00040700
*                                                                     * 00040800
*                             Meaning: Caller is in SRB mode.         * 00040900
*                                                                     * 00041000
*                             Action: Avoid requesting this function  * 00041100
*                             while in SRB mode.                      * 00041200
*                                                                     * 00041300
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00041400
*                                                                     * 00041500
*                             Meaning: Caller is disabled.            * 00041600
*                                                                     * 00041700
*                             Action: Avoid requesting this function  * 00041800
*                             while disabled.                         * 00041900
*                                                                     * 00042000
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00042100
*                                                                     * 00042200
*                             Meaning: Caller is locked.              * 00042300
*                                                                     * 00042400
*                             Action: Avoid requesting this function  * 00042500
*                             while locked.                           * 00042600
*                                                                     * 00042700
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00042800
*                                                                     * 00042900
*                             Meaning:  Caller has an EUT FRR set.    * 00043000
*                                                                     * 00043100
*                             Action: Avoid requesting this function  * 00043200
*                             with an EUT FRR set.                    * 00043300
*                                                                     * 00043400
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00043500
*                                                                     * 00043600
*                             Meaning:  Error accessing parameter     * 00043700
*                             list.                                   * 00043800
*                                                                     * 00043900
*                             Action: Check for possible storage      * 00044000
*                             overlay.                                * 00044100
*                                                                     * 00044200
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00044300
*                                                                     * 00044400
*                             Meaning: Caller invoked service while   * 00044500
*                             DATOFF                                  * 00044600
*                                                                     * 00044700
*                             Action: Avoid requesting this function  * 00044800
*                             in this environment.                    * 00044900
*                                                                     * 00045000
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00045100
*                                                                     * 00045200
*                             Meaning: Caller invoked service but was * 00045300
*                             in 24 bit addressing mode.              * 00045400
*                                                                     * 00045500
*                             Action: Request this function only when * 00045600
*                             you are in 31 bit addressing mode.      * 00045700
*                                                                     * 00045800
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00045900
*                                                                     * 00046000
*                             Meaning: Reserved field in parameter    * 00046100
*                             list was non-zero.                      * 00046200
*                                                                     * 00046300
*                             Action: Check for possible storage      * 00046400
*                             overlay of the parameter list.          * 00046500
*                                                                     * 00046600
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00046700
*                                                                     * 00046800
*                             Meaning: Version number in parameter    * 00046900
*                             list or version length field is not     * 00047000
*                             valid. Or this service was called on a  * 00047100
*                             z/OS release not supported.             * 00047200
*                                                                     * 00047300
*                             Action: Check for possible storage      * 00047400
*                             overlay of the parameter list.          * 00047500
*                                                                     * 00047600
*                 xxxx0830    Name: IwmRsnCodeBadAlet                 * 00047700
*                                                                     * 00047800
*                             Meaning:  Caller specified an invalid   * 00047900
*                             alet for the storage pointed to by the  * 00048000
*                             ANSAREA keyword.                        * 00048100
*                                                                     * 00048200
*                             Action: Check for possible storage      * 00048300
*                             overlay of the parameter list or        * 00048400
*                             variable.                               * 00048500
*                                                                     * 00048600
*                 xxxx0832    Name: IwmRsnCodeStateInvNoDatRet        * 00048700
*                                                                     * 00048800
*                             Meaning:  The token value specified on  * 00048900
*                             the ANSTOKN keyword is associated with  * 00049000
*                             a WLM state that is no longer valid. A  * 00049100
*                             new token has been returned.  The       * 00049200
*                             storage provided is not large enough to * 00049300
*                             contain all of the data available       * 00049400
*                             because of the state change. No data    * 00049500
*                             was returned.  The length of the new    * 00049600
*                             answer area required is returned in the * 00049700
*                             QUERYLEN field.                         * 00049800
*                                                                     * 00049900
*                             Action: Reinvoke the service with an    * 00050000
*                             output area of sufficient size to       * 00050100
*                             receive all information and the token   * 00050200
*                             passed with the ANSTOKN keyword.        * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*            C    Name: IwmRetCodeEnvError                            * 00050700
*                                                                     * 00050800
*                 Meaning: Environmental error.                       * 00050900
*                                                                     * 00051000
*                                                                     * 00051100
*                 HEX REASON  MEANING/ACTION                          * 00051200
*                 CODE                                                * 00051300
*                                                                     * 00051400
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00051500
*                                                                     * 00051600
*                             Meaning:  Storage is not available for  * 00051700
*                             the request.                            * 00051800
*                                                                     * 00051900
*                             Action: There is a storage shortage.    * 00052000
*                             The function may work successfully at a * 00052100
*                             later time.                             * 00052200
*                                                                     * 00052300
*                 xxxx0C0A    Name: IwmRsnCodeSuspended               * 00052400
*                                                                     * 00052500
*                             Meaning:  Data collection is suspended  * 00052600
*                             as a result of a component error.  No   * 00052700
*                             data can be returned for this IWMRCOLL  * 00052800
*                             invocation, future invocations may be   * 00052900
*                             sucessful.                              * 00053000
*                                                                     * 00053100
*                             Action: Reinvoke this service as it may * 00053200
*                             be successful.                          * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                                                                     * 00053600
*            10   Name: IwmRetCodeCompError                           * 00053700
*                                                                     * 00053800
*                 Meaning: Component error.                           * 00053900
*                                                                     * 00054000
*                 Action: No action required.  The function may be    * 00054100
*                 successful if invoked again.                        * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*01* REASON CODES:                                                    * 00054600
*                                                                     * 00054700
*       A unique reason code will be returned whenever the return     * 00054800
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00054900
*       under their corresponding return code.  Reason code and       * 00055000
*       return code constants are defined within IWMYCON.  Note that  * 00055100
*       the high order halfword of register 0, and the reason code    * 00055200
*       variable when specified, may be non-zero and represents       * 00055300
*       diagnostic data which is NOT part of the external interface.  * 00055400
*       The high order halfword should thus be excluded from          * 00055500
*       comparison with the reason code values described above.  The  * 00055600
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00055700
*       used for this purpose.                                        * 00055800
*                                                                     * 00055900
*01* MODULE TYPE:  ASSEM-PL/X MACRO                                   * 00056000
*                                                                     * 00056100
*02*   PROCESSOR:  ASSEM-PL/X                                         * 00056200
*                                                                     * 00056300
*01* COMPONENT:  SCWLM                                                * 00056400
*                                                                     * 00056500
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00056600
*                                                                     * 00056700
*01* MACRO USAGE NOTES:                                               * 00056800
*                                                                     * 00056900
*                                                                     * 00057000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00057100
*        global macro variable.  Any value other than 'NO' will       * 00057200
*        result in the macro expansion being printed.  The default is * 00057300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00057400
*        variable should be set.                                      * 00057500
*                                                                     * 00057600
*                    GBLC &ZPRINT                                     * 00057700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*    2.  All   keys   currently   contained  in  the  IWM4QTNT  macro * 00058100
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00058200
*        value of 0 or MAX.                                           * 00058300
*                                                                     * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*01* CHANGE ACTIVITY:                                                 * 00058800
*                                                                     * 00058900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00059000
*                                                                     * 00059100
*    $L0=OA52312  HBB77B0 170110 3241MG:  Workload billing groups     * 00059200
*                                         @LWBGRP                     * 00059300
****** END OF SPECIFICATIONS *****************************************/ 00059400
*/********************************************************************* 00059500
         MACRO                                                          00059600
&XLABEL  IWM4QTNT &ANSAREA=,&ANSLEN=,&QUERYLEN=,&ANSTOKN=,&RETCODE=,   *00059700
               &RSNCODE=,&PLISTVER=,&MF=                                00059800
.*                                                                      00059900
*              MACDATE -01/10/17-<0>                                    00060000
.*                                                                      00060100
.*******************************************************************    00060200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00060300
.*******************************************************************    00060400
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00060500
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00060600
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00060700
.*                                                                      00060800
              GBLC  &ZIWM4QTNT  YES=MACRO USED AT LEAST ONCE            00060900
.*******************************************************************    00061000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00061100
.*******************************************************************    00061200
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00061300
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00061400
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00061500
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00061600
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00061700
              LCLA  &ZAWRK      USED AS A WORK AREA                     00061800
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00061900
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00062000
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00062100
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00062200
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00062300
              LCLC  &ZMAC_G     "G" or null                             00062400
&ZMAC_G       SETC  ''                                                  00062500
              LCLC  &ZMAC_LR                                            00062600
&ZMAC_LR      SETC  'LR'                                                00062700
              LCLC  &ZMAC_L                                             00062800
&ZMAC_L       SETC  'L'                                                 00062900
              LCLC  &ZMAC_ST                                            00063000
&ZMAC_ST      SETC  'ST'                                                00063100
              LCLC  &ZMAC_LLGT                                          00063200
&ZMAC_LLGT    SETC  'L'                                                 00063300
              LCLC  &ZMAC_LGR                                           00063400
&ZMAC_LGR     SETC  'LR'                                                00063500
              LCLC  &ZMAC_LG                                            00063600
&ZMAC_LG      SETC  'L'                                                 00063700
              LCLC  &ZMAC_STG                                           00063800
&ZMAC_STG     SETC  'ST'                                                00063900
              LCLA  &ZMACRET    MACRO RETURN CODE                       00064000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00064100
.*                                                                      00064200
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00064300
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00064400
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00064500
              LCLC  &ZENDBASEPL                 End of base PL          00064600
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00064700
.*******************************************************************    00064800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00064900
.*******************************************************************    00065000
              LCLA  &ZI         INDEX FOR ARRAY                         00065100
              LCLA  &ZJ         INDEX FOR PARMS                         00065200
              LCLA  &ZK         INDEX FOR PARSE                         00065300
              LCLA  &ZLO        LOW RANGE VALUE                         00065400
              LCLA  &ZHI        HIGH RANGE VALUE                        00065500
              LCLC  &ZW         WORK AREA FOR PARM                      00065600
.********************************************************************   00065700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00065800
.********************************************************************   00065900
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00066000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00066100
              GBLA  &SYSALVL    SYSSTATE ARCHLVL                        00066200
              GBLC  &SYSAM64    SYSSTATE AMODE64                        00066300
.*                                                                      00066400
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00066500
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00066600
              SPLEVEL  TEST                                             00066700
.ZSYS2        ANOP  ,                                                   00066800
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00066900
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00067000
              SYSSTATE TEST                                             00067100
              AGO   .ZSYS4                                              00067200
.ZSYS3        ANOP  ,                                                   00067300
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00067400
.ZSYS4        ANOP  ,                                                   00067500
              AIF   ('&SYSAM64' NE 'YES').ZSYSN64                       00067600
&ZMAC_LLGT    SETC 'LLGT'                                               00067700
&ZMAC_LGR     SETC 'LGR'                                                00067800
&ZMAC_LG      SETC 'LG'                                                 00067900
&ZMAC_STG     SETC 'STG'                                                00068000
.ZSYSN64      ANOP  ,                                                   00068100
              AIF   (&SYSALVL LE 1).ZSYS4A                              00068200
&ZMAC_G       SETC 'G'                                                  00068300
&ZMAC_LR      SETC 'LGR'                                                00068400
&ZMAC_L       SETC 'LG'                                                 00068500
&ZMAC_ST      SETC 'STG'                                                00068600
.ZSYS4A       ANOP  ,                                                   00068700
.*******************************************************************    00068800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00068900
.*******************************************************************    00069000
              LCLC  &XANSAREA   ++ NAME                                 00069100
              LCLC  &XANSLEN    ++ NAME                                 00069200
              LCLC  &XQUERYLEN  ++ NAME                                 00069300
              LCLC  &XANSTOKN   ++ NAME                                 00069400
              LCLC  &XRETCODE   ++ NAME                                 00069500
              LCLC  &XRSNCODE   ++ NAME                                 00069600
              LCLA  &XPLISTVER  ++ VALUE                                00069700
              LCLC  &XMF        ++ VALUE                                00069800
              LCLC  &XMFCTRL    ++ NAME                                 00069900
              LCLC  &XMFATTR    ++ VALUE                                00070000
              LCLC  &XMFSCK     ++ VALUE                                00070100
.*******************************************************************    00070200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00070300
.*******************************************************************    00070400
              LCLC  &ZXANSAREA  ++ OUTPUT NAME                          00070500
              LCLC  &ZXANSLEN   ++ INPUT NAME                           00070600
              LCLC  &ZXQUERYLEN                 ++ OUTPUT NAME          00070700
              LCLC  &ZXANSTOKN  ++ INOUT NAME                           00070800
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00070900
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00071000
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00071100
              LCLC  &ZXMF       ++ INPUT VALUE                          00071200
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00071300
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00071400
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00071500
.********************************************************************   00071600
.***AC.PLV01  PROCESS PLISTVER                                      *   00071700
.********************************************************************   00071800
&XPLISTVER      SETA  0                                                 00071900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00072000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00072100
&XPLISTVER      SETA  0                                                 00072200
.ZPLV0          ANOP  ,                                                 00072300
.*                                                                      00072400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00072500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00072600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00072700
.*-------------------------------------------------------------------   00072800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00072900
&ZMS            SETC  '"PLISTVER='                                      00073000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00073100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00073200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00073300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073400
                AGO   .ZPVCK2                                           00073500
.ZPVCK3         ANOP  ,                                                 00073600
.*-------------------------------------------------------------------   00073700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00073800
&ZMS            SETC  '"PLISTVER='                                      00073900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00074000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00074100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00074200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00074300
                AGO   .ZPVCKE                                           00074400
.ZPVCK2         ANOP  ,                                                 00074500
.*-------------------------------------------------------------------   00074600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00074700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00074800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00074900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00075000
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00075100
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00075200
.ZPVCK6         ANOP  ,                                                 00075300
&ZMS            SETC  '"PLISTVER='                                      00075400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00075500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00075600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00075700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00075800
&XPLISTVER      SETA  0                                                 00075900
                AGO   .ZPVCKE                                           00076000
.*-------------------------------------------------------------------   00076100
.ZPVCK4A        ANOP  ,                                                 00076200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00076300
&ZMS            SETC  'PLISTVER='                                       00076400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00076500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00076600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00076700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00076800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00076900
                AGO   .ZPVCK5                                           00077000
.ZPVCK4         ANOP  ,                                                 00077100
&XPLISTVER      SETA  &PLISTVER(1)                                      00077200
.ZPVCK5         ANOP  ,                                                 00077300
.ZPVCKE         ANOP  ,                                                 00077400
.********************************************************************   00077500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00077600
.********************************************************************   00077700
              ACTR  10000                                               00077800
.*------------------------------------------------------------------    00077900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078000
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00078100
.*-------------------------------------------------------------------   00078200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078300
.ZG24         ANOP  ,                                                   00078400
&ZTLC         SETC 'S'                                                  00078500
              AIF   ('&MF(1)' NE '&ZTLC').ZG25                          00078600
&XMF          SETC  'S'         SET KEYWORD                             00078700
              AIF   (N'&MF LE 1).ZG24A          CK NUM                  00078800
&ZMS          SETC  '"MF='                                              00078900
&ZMS          SETC  '&ZMS.&MF"'                                         00079000
&ZMS          SETC  '&ZMS "MF"'                                         00079100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00079200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079300
.ZG24A        ANOP  ,                                                   00079400
.*-------------------------------------------------------------------   00079500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079600
.ZG25         ANOP  ,                                                   00079700
&ZTLC         SETC 'L'                                                  00079800
              AIF   ('&MF(1)' NE '&ZTLC').ZG32                          00079900
&XMF          SETC  'L'         SET KEYWORD                             00080000
              AIF   (N'&MF LE 3).ZG25A          CK NUM                  00080100
&ZMS          SETC  '"MF='                                              00080200
&ZMS          SETC  '&ZMS.&MF"'                                         00080300
&ZMS          SETC  '&ZMS "MF"'                                         00080400
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00080500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00080600
.ZG25A        ANOP  ,                                                   00080700
.*-------------------------------------------------------------------   00080800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00080900
              AIF   (N'&SYSLIST NE 0).ZG25B     POSITIONALS?            00081000
              AIF   ('&ANSAREA' NE '').ZG25B    KEYS?                   00081100
              AIF   ('&ANSLEN' NE '').ZG25B     KEYS?                   00081200
              AIF   ('&QUERYLEN' NE '').ZG25B   KEYS?                   00081300
              AIF   ('&ANSTOKN' NE '').ZG25B    KEYS?                   00081400
              AIF   ('&RETCODE' NE '').ZG25B    KEYS?                   00081500
              AIF   ('&RSNCODE' NE '').ZG25B    KEYS?                   00081600
              AGO    .ZG25C     INVOCATION OKAY                         00081700
.ZG25B        ANOP  ,                                                   00081800
&ZMS          SETC  'THE "L" FORM OF "MF"'                              00081900
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00082000
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00082100
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00082200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082300
.ZG25C        ANOP  ,                                                   00082400
.*-------------------------------------------------------------------   00082500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00082600
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00082700
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00082800
              AIF   (N'&MF(2) GT 1).ZG27B       MULTI                   00082900
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00083000
.ZG27B        AIF   (K'&MF(2) GT 0).ZG27C                               00083100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00083200
&ZMS          SETC  'WHEN "L" IS SPECIFIED'                             00083300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00083400
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00083500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00083600
.ZG27C        ANOP  ,                                                   00083700
.*-------------------------------------------------------------------   00083800
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00083900
              AIF   (K'&ZXMFCTRL LE 0).ZG27P    NOT I/O                 00084000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG27P                      00084100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00084200
&ZMS          SETC  '"MF='                                              00084300
&ZMS          SETC  '&ZMS.&MF"'                                         00084400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00084500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00084600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00084700
.ZG27P        ANOP  ,                                                   00084800
.*-------------------------------------------------------------------   00084900
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00085000
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00085100
&XMFATTR      SETC  '0D'                                                00085200
              AIF   (K'&MF(3) LE 0).ZG30B       PARM                    00085300
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00085400
              AIF   (N'&MF(3) GT 1).ZG30B       MULTI                   00085500
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00085600
.ZG30B        ANOP  ,                                                   00085700
.*-------------------------------------------------------------------   00085800
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00085900
              AIF   (K'&ZXMFATTR LE 0).ZG30P    NOT I/O                 00086000
              AIF   ('&XMFATTR'(1,1) NE '(').ZG30P                      00086100
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00086200
&ZMS          SETC  '"MF='                                              00086300
&ZMS          SETC  '&ZMS.&MF"'                                         00086400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00086500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00086600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086700
.ZG30P        ANOP  ,                                                   00086800
.*-------------------------------------------------------------------   00086900
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00087000
              AIF   (K'&ZXMFATTR LE 0).ZG30S    NOT I/O                 00087100
              AIF   (K'&XMFATTR LE 60).ZG30S    LNG OK                  00087200
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00087300
&ZMS          SETC  '"MF='                                              00087400
&ZMS          SETC  '&ZMS.&MF"'                                         00087500
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00087600
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00087700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00087800
.ZG30S        ANOP  ,                                                   00087900
.*-------------------------------------------------------------------   00088000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088100
.ZG32         ANOP  ,                                                   00088200
&ZTLC         SETC 'E'                                                  00088300
              AIF   ('&MF(1)' NE '&ZTLC').ZG40                          00088400
&XMF          SETC  'E'         SET KEYWORD                             00088500
              AIF   (N'&MF LE 3).ZG32A          CK NUM                  00088600
&ZMS          SETC  '"MF='                                              00088700
&ZMS          SETC  '&ZMS.&MF"'                                         00088800
&ZMS          SETC  '&ZMS "MF"'                                         00088900
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00089000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089100
.ZG32A        ANOP  ,                                                   00089200
.*-------------------------------------------------------------------   00089300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00089400
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00089500
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00089600
              AIF   (N'&MF(2) GT 1).ZG34B       MULTI                   00089700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00089800
.ZG34B        AIF   (K'&MF(2) GT 0).ZG34C                               00089900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00090000
&ZMS          SETC  'WHEN "E" IS SPECIFIED'                             00090100
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00090200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00090300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00090400
.ZG34C        ANOP  ,                                                   00090500
.*-------------------------------------------------------------------   00090600
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00090700
              AIF   (K'&ZXMFCTRL LE 0).ZG34R    NOT I/O                 00090800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG34R                      00090900
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00091000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                        00091100
              AIF   (K'&ZCGPR GT 2).ZG34Q                               00091200
              AIF   ('&ZCGPR' EQ '0').ZG34Q                             00091300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00091400
              AIF   (T'&ZCGPR NE 'N').ZG34Q     INVALID REG NAME        00091500
.ZG34P        ANOP  ,                                                   00091600
              AIF   (T'&ZCGPR NE 'N').ZG34R     NON NUMERIC             00091700
              AIF   ('&ZCGPR' LT '1').ZG34Q                             00091800
              AIF   ('&ZCGPR' LE '12').ZG34R                            00091900
.ZG34Q        ANOP  ,                                                   00092000
&ZMS          SETC  '"MF='                                              00092100
&ZMS          SETC  '&ZMS.&MF"'                                         00092200
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00092300
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00092400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092500
.ZG34R        ANOP  ,                                                   00092600
.*-------------------------------------------------------------------   00092700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092800
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00092900
.ZG38A   AIF   ('&MF(3)' NE 'COMPLETE').ZG39A                           00093000
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00093100
.*-------------------------------------------------------------------   00093200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00093300
.ZG39A        AIF   (K'&XMFSCK GT 0).ZG39C      KEYWORD                 00093400
              AIF   (K'&MF(3) LE 0).ZG39B                               00093500
&ZMS          SETC  '"MF='                                              00093600
&ZMS          SETC  '&ZMS.&MF"'                                         00093700
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00093800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00093900
&ZMS          SETC  '&ZMS "COMPLETE".'                                  00094000
              MNOTE 8,' &ZMS '                                          00094100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00094200
.ZG39B        ANOP  ,                                                   00094300
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00094400
.ZG39C        ANOP  ,                                                   00094500
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00094600
.*------------------------------------------------------------------    00094700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094800
.ZG40         ANOP  ,                                                   00094900
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00095000
              AIF   (K'&XMF GT 0).ZG40E         VALID ARG               00095100
              AIF   (T'&MF EQ 'O').ZG40D        OMITTED                 00095200
&ZASYSLNDX    SETA  0                                                   00095300
.ZG40A        ANOP  ,           POSITIONAL MACRO KEY                    00095400
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00095500
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C                    00095600
&ZTLC         SETC 'MF'                                                 00095700
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A           00095800
.ZG40B        ANOP  ,                                                   00095900
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00096000
&ZMS          SETC  'THE "MF" KEY'                                      00096100
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00096200
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00096300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096400
              AGO   .ZG40E                                              00096500
.ZG40C        ANOP  ,                                                   00096600
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00096700
&ZMS          SETC  '"MF='                                              00096800
&ZMS          SETC  '&ZMS.&MF"'                                         00096900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00097000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00097100
&ZMS          SETC  '&ZMS "S",'                                         00097200
&ZMS          SETC  '&ZMS "L",'                                         00097300
&ZMS          SETC  '&ZMS OR "E".'                                      00097400
              MNOTE 8,' &ZMS '                                          00097500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00097600
              AGO   .ZG40E                                              00097700
.ZG40D        ANOP  ,                                                   00097800
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00097900
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00098000
.ZG40E        ANOP  ,                                                   00098100
.********************************************************************   00098200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00098300
.********************************************************************   00098400
              ACTR  10000                                               00098500
.*-------------------------------------------------------------------   00098600
.***AG.MF03 MF=(SLE)                                                    00098700
              AIF   ('&XMF' EQ 'L').ZGMFX                               00098800
.*----------------------------------------------------------------***   00098900
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00099000
              AIF   (N'&ANSAREA LE 1).ZG2A      CK NUM                  00099100
&ZMS          SETC  '"ANSAREA='                                         00099200
&ZMS          SETC  '&ZMS.&ANSAREA"'                                    00099300
&ZMS          SETC  '&ZMS "ANSAREA"'                                    00099400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00099500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00099600
.ZG2A         ANOP  ,                                                   00099700
.*-------------------------------------------------------------------   00099800
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00099900
&ZXANSAREA    SETC  'OUTPUT'    SET IN/OUTPUT                           00100000
&XANSAREA     SETC  '&ANSAREA(1)'               SET XVARIABLE           00100100
              AIF   (N'&ANSAREA GT 1).ZG2B      MULTI                   00100200
&XANSAREA     SETC  '&ANSAREA'  SET XVARIABLE                           00100300
.ZG2B         AIF   (K'&ANSAREA(1) GT 0).ZG2C                           00100400
&ZXANSAREA    SETC  ''          RESET IN/OUTPUT                         00100500
&ZMS          SETC  ' '                                                 00100600
&ZMS          SETC  '&ZMS "ANSAREA" KEY AND ITS'                        00100700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00100800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100900
.ZG2C         ANOP  ,                                                   00101000
.*-------------------------------------------------------------------   00101100
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00101200
              AIF   (K'&ZXANSAREA LE 0).ZG2R    NOT I/O                 00101300
              AIF   ('&XANSAREA'(1,1) NE '(').ZG2R                      00101400
&ZCGPR        SETC  '&XANSAREA'(2,K'&XANSAREA-2)                        00101500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00101600
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00101700
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00101800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00101900
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00102000
.ZG2P         ANOP  ,                                                   00102100
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00102200
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00102300
              AIF   ('&ZCGPR' LE '12').ZG2R                             00102400
.ZG2Q         ANOP  ,                                                   00102500
&ZMS          SETC  '"ANSAREA='                                         00102600
&ZMS          SETC  '&ZMS.&ANSAREA"'                                    00102700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00102800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00102900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00103000
.ZG2R         ANOP  ,                                                   00103100
.*----------------------------------------------------------------***   00103200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00103300
              AIF   (N'&ANSLEN LE 1).ZG5A       CK NUM                  00103400
&ZMS          SETC  '"ANSLEN='                                          00103500
&ZMS          SETC  '&ZMS.&ANSLEN"'                                     00103600
&ZMS          SETC  '&ZMS "ANSLEN"'                                     00103700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00103800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00103900
.ZG5A         ANOP  ,                                                   00104000
.*-------------------------------------------------------------------   00104100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00104200
&ZXANSLEN     SETC  'INPUT'     SET IN/OUTPUT                           00104300
&XANSLEN      SETC  '&ANSLEN(1)'                SET XVARIABLE           00104400
              AIF   (N'&ANSLEN GT 1).ZG5B       MULTI                   00104500
&XANSLEN      SETC  '&ANSLEN'   SET XVARIABLE                           00104600
.ZG5B         AIF   (K'&ANSLEN(1) GT 0).ZG5C                            00104700
&ZXANSLEN     SETC  ''          RESET IN/OUTPUT                         00104800
&ZMS          SETC  ' '                                                 00104900
&ZMS          SETC  '&ZMS "ANSLEN" KEY AND ITS'                         00105000
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00105100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00105200
.ZG5C         ANOP  ,                                                   00105300
.*-------------------------------------------------------------------   00105400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00105500
              AIF   (K'&ZXANSLEN LE 0).ZG5R     NOT I/O                 00105600
              AIF   ('&XANSLEN'(1,1) NE '(').ZG5R                       00105700
&ZCGPR        SETC  '&XANSLEN'(2,K'&XANSLEN-2)                          00105800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00105900
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00106000
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00106100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00106200
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00106300
.ZG5P         ANOP  ,                                                   00106400
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00106500
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00106600
              AIF   ('&ZCGPR' LE '12').ZG5R                             00106700
.ZG5Q         ANOP  ,                                                   00106800
&ZMS          SETC  '"ANSLEN='                                          00106900
&ZMS          SETC  '&ZMS.&ANSLEN"'                                     00107000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00107100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00107200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00107300
.ZG5R         ANOP  ,                                                   00107400
.*----------------------------------------------------------------***   00107500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00107600
              AIF   (N'&QUERYLEN LE 1).ZG8A     CK NUM                  00107700
&ZMS          SETC  '"QUERYLEN='                                        00107800
&ZMS          SETC  '&ZMS.&QUERYLEN"'                                   00107900
&ZMS          SETC  '&ZMS "QUERYLEN"'                                   00108000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00108100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00108200
.ZG8A         ANOP  ,                                                   00108300
.*-------------------------------------------------------------------   00108400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00108500
&ZXQUERYLEN   SETC  'OUTPUT'    SET IN/OUTPUT                           00108600
&XQUERYLEN    SETC  '&QUERYLEN(1)'              SET XVARIABLE           00108700
              AIF   (N'&QUERYLEN GT 1).ZG8B     MULTI                   00108800
&XQUERYLEN    SETC  '&QUERYLEN'                 SET XVARIABLE           00108900
.ZG8B         AIF   (K'&QUERYLEN(1) GT 0).ZG8C                          00109000
&ZXQUERYLEN   SETC  ''          RESET IN/OUTPUT                         00109100
&ZMS          SETC  ' '                                                 00109200
&ZMS          SETC  '&ZMS "QUERYLEN" KEY AND ITS'                       00109300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00109400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00109500
.ZG8C         ANOP  ,                                                   00109600
.*-------------------------------------------------------------------   00109700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00109800
              AIF   (K'&ZXQUERYLEN LE 0).ZG8R   NOT I/O                 00109900
              AIF   ('&XQUERYLEN'(1,1) NE '(').ZG8R                     00110000
&ZCGPR        SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                      00110100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00110200
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00110300
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00110400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00110500
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00110600
.ZG8P         ANOP  ,                                                   00110700
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00110800
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00110900
              AIF   ('&ZCGPR' LE '12').ZG8R                             00111000
.ZG8Q         ANOP  ,                                                   00111100
&ZMS          SETC  '"QUERYLEN='                                        00111200
&ZMS          SETC  '&ZMS.&QUERYLEN"'                                   00111300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00111400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00111500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00111600
.ZG8R         ANOP  ,                                                   00111700
.*----------------------------------------------------------------***   00111800
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00111900
              AIF   (N'&ANSTOKN LE 1).ZG11A     CK NUM                  00112000
&ZMS          SETC  '"ANSTOKN='                                         00112100
&ZMS          SETC  '&ZMS.&ANSTOKN"'                                    00112200
&ZMS          SETC  '&ZMS "ANSTOKN"'                                    00112300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00112400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00112500
.ZG11A        ANOP  ,                                                   00112600
.*-------------------------------------------------------------------   00112700
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00112800
&ZXANSTOKN    SETC  'INOUT'     SET IN/OUTPUT                           00112900
&XANSTOKN     SETC  '&ANSTOKN(1)'               SET XVARIABLE           00113000
              AIF   (N'&ANSTOKN GT 1).ZG11B     MULTI                   00113100
&XANSTOKN     SETC  '&ANSTOKN'  SET XVARIABLE                           00113200
.ZG11B        AIF   (K'&ANSTOKN(1) GT 0).ZG11C                          00113300
&ZXANSTOKN    SETC  ''          RESET IN/OUTPUT                         00113400
&ZMS          SETC  ' '                                                 00113500
&ZMS          SETC  '&ZMS "ANSTOKN" KEY AND ITS'                        00113600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00113700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00113800
.ZG11C        ANOP  ,                                                   00113900
.*-------------------------------------------------------------------   00114000
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00114100
              AIF   (K'&ZXANSTOKN LE 0).ZG11R   NOT I/O                 00114200
              AIF   ('&XANSTOKN'(1,1) NE '(').ZG11R                     00114300
&ZCGPR        SETC  '&XANSTOKN'(2,K'&XANSTOKN-2)                        00114400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00114500
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00114600
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00114700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00114800
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00114900
.ZG11P        ANOP  ,                                                   00115000
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00115100
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00115200
              AIF   ('&ZCGPR' LE '12').ZG11R                            00115300
.ZG11Q        ANOP  ,                                                   00115400
&ZMS          SETC  '"ANSTOKN='                                         00115500
&ZMS          SETC  '&ZMS.&ANSTOKN"'                                    00115600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00115700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00115800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00115900
.ZG11R        ANOP  ,                                                   00116000
.*----------------------------------------------------------------***   00116100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00116200
              AIF   (N'&RETCODE LE 1).ZG14A     CK NUM                  00116300
&ZMS          SETC  '"RETCODE='                                         00116400
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00116500
&ZMS          SETC  '&ZMS "RETCODE"'                                    00116600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00116700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00116800
.ZG14A        ANOP  ,                                                   00116900
.*-------------------------------------------------------------------   00117000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00117100
              AIF   (K'&RETCODE(1) LE 0).ZG14C  NO PARM                 00117200
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00117300
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00117400
              AIF   (N'&RETCODE GT 1).ZG14C                             00117500
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00117600
.ZG14C        ANOP  ,                                                   00117700
.*-------------------------------------------------------------------   00117800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00117900
              AIF   (K'&ZXRETCODE LE 0).ZG14R   NOT I/O                 00118000
              AIF   ('&XRETCODE'(1,1) NE '(').ZG14R                     00118100
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00118200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                        00118300
              AIF   (K'&ZCGPR GT 2).ZG14Q                               00118400
              AIF   ('&ZCGPR' EQ '0').ZG14Q                             00118500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00118600
              AIF   (T'&ZCGPR NE 'N').ZG14Q     INVALID REG NAME        00118700
.ZG14P        ANOP  ,                                                   00118800
              AIF   (T'&ZCGPR NE 'N').ZG14R     NON NUMERIC             00118900
              AIF   ('&ZCGPR' EQ '15').ZG14R                            00119000
              AIF   ('&ZCGPR' LT '2').ZG14Q                             00119100
              AIF   ('&ZCGPR' LE '12').ZG14R                            00119200
.ZG14Q        ANOP  ,                                                   00119300
&ZMS          SETC  '"RETCODE='                                         00119400
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00119500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00119600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'            00119700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00119800
.ZG14R        ANOP  ,                                                   00119900
.*----------------------------------------------------------------***   00120000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00120100
              AIF   (N'&RSNCODE LE 1).ZG17A     CK NUM                  00120200
&ZMS          SETC  '"RSNCODE='                                         00120300
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00120400
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00120500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00120600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00120700
.ZG17A        ANOP  ,                                                   00120800
.*-------------------------------------------------------------------   00120900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00121000
              AIF   (K'&RSNCODE(1) LE 0).ZG17C  NO PARM                 00121100
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00121200
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00121300
              AIF   (N'&RSNCODE GT 1).ZG17C                             00121400
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00121500
.ZG17C        ANOP  ,                                                   00121600
.*-------------------------------------------------------------------   00121700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00121800
              AIF   (K'&ZXRSNCODE LE 0).ZG17R   NOT I/O                 00121900
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG17R                     00122000
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00122100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                        00122200
              AIF   (K'&ZCGPR GT 2).ZG17Q                               00122300
              AIF   ('&ZCGPR' EQ '0').ZG17R                             00122400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00122500
              AIF   (T'&ZCGPR NE 'N').ZG17Q     INVALID REG NAME        00122600
.ZG17P        ANOP  ,                                                   00122700
              AIF   (T'&ZCGPR NE 'N').ZG17R     NON NUMERIC             00122800
              AIF   ('&ZCGPR' EQ '0').ZG17R                             00122900
              AIF   ('&ZCGPR' LT '2').ZG17Q                             00123000
              AIF   ('&ZCGPR' LE '12').ZG17R                            00123100
.ZG17Q        ANOP  ,                                                   00123200
&ZMS          SETC  '"RSNCODE='                                         00123300
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00123400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00123500
              MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'             00123600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00123700
.ZG17R        ANOP  ,                                                   00123800
.******************************************************************     00123900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00124000
.******************************************************************     00124100
              ACTR  10000                                               00124200
.*----------------------------------------------------------------***   00124300
.***AH.P02 EXTRA POSITIONALS                                            00124400
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00124500
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00124600
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00124700
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00124800
.ZGLISTX1     ANOP  ,                                                   00124900
&ZCVAL        SETC  ''          ERROR FIELD                             00125000
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00125100
.ZGLIST2      ANOP  ,                                                   00125200
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00125300
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00125400
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00125500
              AGO   .ZGLIST2                                            00125600
.*                                                                      00125700
.ZGLIST3      ANOP  ,                                                   00125800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00125900
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00126000
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00126100
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00126200
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00126300
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00126400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00126500
.ZGLISTX      ANOP  ,                                                   00126600
&ZASYSLNDX    SETA  0                                                   00126700
.*-------------------------------------------------------------------   00126800
.***AG.MF04 MF=(SLE)                                                    00126900
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00127000
.*******************************************************************    00127100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00127200
.*******************************************************************    00127300
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00127400
.*******************************************************************    00127500
.***AE.01  START OF IWM4QTNT MACRO CODE                                 00127600
.*******************************************************************    00127700
              LCLC  &M0M0001                 NAME                       00127800
&M0M0001      SETC  '&XLABEL'                SET NAME                   00127900
              AIF   (K'&XLABEL NE 0).XLAB2                              00128000
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00128100
.*                                                                      00128200
.XLAB2        ANOP  ,                                                   00128300
              AIF   ('&XMF' EQ 'L').XLAB3                               00128400
&M0M0001 DS    0H                             IWM4QTNT-0                00128500
.XLAB3        ANOP  ,                                                   00128600
.*******************************************************************    00128700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00128800
.*******************************************************************    00128900
              PUSH  PRINT                                               00129000
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00129100
              PRINT OFF         ++ PR01                                 00129200
              AGO   .ZPRNTXX                                            00129300
.ZPRINTX      PRINT ON                                                  00129400
.ZPRNTXX      ANOP  ,                                                   00129500
.********************************************************************   00129600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00129700
.********************************************************************   00129800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00129900
                      LCLA  &ZOPN1         INVOCATION INDEX             00130000
                      LCLC  &ZOPL(4095)    LABEL                        00130100
                      LCLC  &ZOPO(4095)    OPERATION                    00130200
                      LCLC  &ZOPV(4095)    VALUE                        00130300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00130400
.*                                                                      00130500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00130600
.******************************************************************     00130700
.***AL.L10 IWM4QTNT FMT=LIST MF=S!L PARAMETERS                          00130800
.******************************************************************     00130900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00131000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00131100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00131200
&XMFATTR              SETC  '0D'                                        00131300
.*                                                                      00131400
&ZOPN                 SETA  &ZOPN+1                                     00131500
&ZOPL(&ZOPN)          SETC  ' '                                         00131600
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00131700
&ZOPV(&ZOPN)          SETC  '4,8'                                       00131800
&ZOPN                 SETA  &ZOPN+1                                     00131900
&ZOPL(&ZOPN)          SETC  ' '                                         00132000
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00132100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00132200
&ZOPD(&ZOPN)          SETC  '++ IWM4QTNT ARG PARMS'                     00132300
.*                                                                      00132400
&ZOPN                 SETA  &ZOPN+1                                     00132500
&ZOPL(&ZOPN)          SETC  ' '                                         00132600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00132700
&ZOPV(&ZOPN)          SETC  '1'                                         00132800
&ZOPD(&ZOPN)          SETC  ' '                                         00132900
.*                                                                      00133000
.ZLMFSL2              ANOP  ,                                           00133100
.*-------------------------------------------------------------------   00133200
.***AM.L00  IWM4QTNT FMT=LIST name                                      00133300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00133400
&ZOPN                 SETA &ZOPN+1                                      00133500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00133600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00133700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00133800
&ZOPD(&ZOPN)          SETC '++ IWM4QTNT NAME'                           00133900
.ZLMFSL2M             ANOP  ,                                           00134000
.*-------------------------------------------------------------------   00134100
.***AM.L01  IWM4QTNT FMT=LIST PARAMETERS                                00134200
&ZOPN                 SETA &ZOPN+1                                      00134300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00134400
&ZOPO(&ZOPN)          SETC 'DS'                                         00134500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00134600
&ZOPD(&ZOPN)          SETC '++ IWM4QTNT PARM LIST'                      00134700
.*-------------------------------------------------------------------   00134800
.***AM.L02 XVERSION XL1                                                 00134900
&ZOPN                 SETA &ZOPN+1                                      00135000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00135100
&ZOPO(&ZOPN)          SETC 'DS'                                         00135200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00135300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00135400
.*-------------------------------------------------------------------   00135500
.***AM.L09  XRSV001 CL1                                                 00135600
&ZOPN                 SETA &ZOPN+1                                      00135700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00135800
&ZOPO(&ZOPN)          SETC 'DS'                                         00135900
&ZOPV(&ZOPN)          SETC 'CL1'                                        00136000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00136100
.*-------------------------------------------------------------------   00136200
.***AM.L09  XPLISTLEN XL2                                               00136300
&ZOPN                 SETA &ZOPN+1                                      00136400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00136500
&ZOPO(&ZOPN)          SETC 'DS'                                         00136600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00136700
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00136800
.*-------------------------------------------------------------------   00136900
.***AM.L09  XRSV002 CL4                                                 00137000
&ZOPN                 SETA &ZOPN+1                                      00137100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002'                          00137200
&ZOPO(&ZOPN)          SETC 'DS'                                         00137300
&ZOPV(&ZOPN)          SETC 'CL4'                                        00137400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00137500
.*-------------------------------------------------------------------   00137600
.***AM.L09 ADDR3164 XANSAREA AD                                         00137700
&ZOPN                 SETA &ZOPN+1                                      00137800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR3164'                00137900
&ZOPO(&ZOPN)          SETC 'DS'                                         00138000
&ZOPV(&ZOPN)          SETC 'AD'                                         00138100
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR3164'                     00138200
.*-------------------------------------------------------------------   00138300
.***AM.L09 ALET XANSAREA F                                              00138400
&ZOPN                 SETA &ZOPN+1                                      00138500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    00138600
&ZOPO(&ZOPN)          SETC 'DS'                                         00138700
&ZOPV(&ZOPN)          SETC 'F'                                          00138800
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         00138900
.*-------------------------------------------------------------------   00139000
.***AM.L09  XANSLEN F                                                   00139100
&ZOPN                 SETA &ZOPN+1                                      00139200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00139300
&ZOPO(&ZOPN)          SETC 'DS'                                         00139400
&ZOPV(&ZOPN)          SETC 'F'                                          00139500
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              00139600
.*-------------------------------------------------------------------   00139700
.***AM.L09  XQUERYLEN F                                                 00139800
&ZOPN                 SETA &ZOPN+1                                      00139900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQUERYLEN'                        00140000
&ZOPO(&ZOPN)          SETC 'DS'                                         00140100
&ZOPV(&ZOPN)          SETC 'F'                                          00140200
&ZOPD(&ZOPN)          SETC '++ &ZXQUERYLEN '                            00140300
.*-------------------------------------------------------------------   00140400
.***AM.L09  XANSTOKN CL8                                                00140500
&ZOPN                 SETA &ZOPN+1                                      00140600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSTOKN'                         00140700
&ZOPO(&ZOPN)          SETC 'DS'                                         00140800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00140900
&ZOPD(&ZOPN)          SETC '++ &ZXANSTOKN '                             00141000
.*-------------------------------------------------------------------   00141100
.***AM.L09  XRSV003 CL4                                                 00141200
&ZOPN                 SETA &ZOPN+1                                      00141300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV003'                          00141400
&ZOPO(&ZOPN)          SETC 'DS'                                         00141500
&ZOPV(&ZOPN)          SETC 'CL4'                                        00141600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00141700
.*-------------------------------------------------------------------   00141800
.***AM.L10 END OF IWM4QTNT LIST PARAMETERS                              00141900
&ZOPN                 SETA &ZOPN+1                                      00142000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00142100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00142200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00142300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00142400
.*                                                                      00142500
&ZOPN                 SETA &ZOPN+1                                      00142600
&ZOPL(&ZOPN)          SETC ' '                                          00142700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00142800
&ZOPV(&ZOPN)          SETC '1'                                          00142900
&ZOPD(&ZOPN)          SETC ' '                                          00143000
.*-------------------------------------------------------------------   00143100
.***AL.L12 IWM4QTNT FMT=LIST MF=S!L PARAMETERS                          00143200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00143300
.*                                                                      00143400
&ZOPN                 SETA  &ZOPN+1                                     00143500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00143600
&ZOPO(&ZOPN)          SETC  'DC'                                        00143700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00143800
&ZOPD(&ZOPN)          SETC  '++ IWM4QTNT ARG PARMS'                     00143900
.*                                                                      00144000
.ZLMFSLX              ANOP  ,                                           00144100
.*-------------------------------------------------------------------   00144200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00144300
&ZPLLEN               SETA 40                                           00144400
.*                                                                      00144500
.******************************************************************     00144600
.***AI.L01 IWM4QTNT FMT=LIST FILL IN PARAMETER AREA                     00144700
.******************************************************************     00144800
                      ACTR  10000                                       00144900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00145000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00145100
&ZCVAL                SETC  'LAE'          XAX MODE                     00145200
.ZIMFXA               ANOP ,                                            00145300
.*                                                                      00145400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00145500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00145600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00145700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00145800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00145900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00146000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00146100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00146200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00146300
&ZOPN                 SETA  &ZOPN+1                                     00146400
&ZOPL(&ZOPN)          SETC  ' '                                         00146500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00146600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00146700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00146800
                      AGO   .ZIMFNX                                     00146900
.*                                                                      00147000
.ZIMFN2               ANOP ,                                            00147100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00147200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00147300
&ZOPN                 SETA  &ZOPN+1                                     00147400
&ZOPL(&ZOPN)          SETC  ' '                                         00147500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00147600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00147700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00147800
                      AGO   .ZIMFNX                                     00147900
.ZIMFNX1              ANOP ,                                            00148000
&ZOPN                 SETA  &ZOPN+1                                     00148100
&ZOPL(&ZOPN)          SETC  ' '                                         00148200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00148300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00148400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00148500
.ZIMFNX               ANOP ,                                            00148600
.********************************************************************   00148700
.***AI.L02 IWM4QTNT FMT=LIST INITIALIZE PARAMETER AREA                  00148800
.********************************************************************   00148900
.***AI.L03 MF=(SLE)                                                     00149000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00149100
.*                                                                      00149200
&ZOPN                 SETA  &ZOPN+1                                     00149300
&ZOPL(&ZOPN)          SETC  ' '                                         00149400
&ZOPO(&ZOPN)          SETC  'XC'                                        00149500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00149600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00149700
.ZIMFLX               ANOP  ,                                           00149800
.*-------------------------------------------------------------------   00149900
.***AI.L04 XPLISTLEN XL2                                                00150000
&ZOPN                 SETA  &ZOPN+1                                     00150100
&ZOPL(&ZOPN)          SETC  ' '                                         00150200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00150300
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00150400
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00150500
.*-------------------------------------------------------------------   00150600
.***AI.L19 ADDR3164 XANSAREA AD                                         00150700
                      AIF   ('&ZXANSAREA' EQ '').ZI5H                   00150800
&ZCLNG                SETC  '&XANSAREA'                                 00150900
&ZCGPR                SETC  '14'                                        00151000
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI5F  IN GPR                   00151100
.*                                                                      00151200
&ZOPN                 SETA  &ZOPN+1                                     00151300
&ZOPL(&ZOPN)          SETC  ' '                                         00151400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00151500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00151600
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00151700
.*                                                                      00151800
                      AGO   .ZI5G                                       00151900
.*                                                                      00152000
.ZI5F                 ANOP  ,                                           00152100
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00152200
.*                                                                      00152300
.ZI5G                 ANOP  ,                                           00152400
                      AIF   ('&SYSAM64' EQ 'YES').ZI5H1A                00152500
.*                                                                      00152600
&ZOPN                 SETA  &ZOPN+1                                     00152700
&ZOPL(&ZOPN)          SETC  ' '                                         00152800
&ZOPO(&ZOPN)          SETC  'ST'                                        00152900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+8(,1)'                            00153000
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00153100
.*                                                                      00153200
                      AGO   .ZI5H                                       00153300
.ZI5H1A               ANOP  ,                                           00153400
.*                                                                      00153500
&ZOPN                 SETA  &ZOPN+1                                     00153600
&ZOPL(&ZOPN)          SETC  ' '                                         00153700
&ZOPO(&ZOPN)          SETC  'STG'                                       00153800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00153900
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00154000
.*                                                                      00154100
.ZI5H                 ANOP  ,                                           00154200
.*-------------------------------------------------------------------   00154300
.***AI.L23 ALET XANSAREA F                                              00154400
         AIF   ('&ZXANSAREA' EQ '').ZI6G                                00154500
         AIF   ('&SYSASCE' EQ 'P').ZI6G    SYSSTATE PRIMARY             00154600
&ZCLNG                SETC  '&XANSAREA'                                 00154700
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI6E  IN AR                    00154800
.*                                                                      00154900
&ZCGPR                SETC  '14'                                        00155000
                      AGO   .ZI6F                                       00155100
.*                                                                      00155200
.ZI6E                 ANOP  ,                                           00155300
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00155400
.*                                                                      00155500
.ZI6F                 ANOP  ,                                           00155600
.*                                                                      00155700
&ZOPN                 SETA  &ZOPN+1                                     00155800
&ZOPL(&ZOPN)          SETC  ' '                                         00155900
&ZOPO(&ZOPN)          SETC  'STAM'                                      00156000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,16(1)'                       00156100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00156200
.*                                                                      00156300
.ZI6G                 ANOP  ,                                           00156400
.*-------------------------------------------------------------------   00156500
.***AI.L25  XANSLEN F                                                   00156600
                      AIF   ('&ZXANSLEN' EQ '').ZI7E                    00156700
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI7E              00156800
&ZCGPR                SETC  '&XANSLEN'                                  00156900
.*                                                                      00157000
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI7B               00157100
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00157200
                      AGO   .ZI7D                                       00157300
.ZI7B                 ANOP  ,                                           00157400
.*                                                                      00157500
&ZC                   SETC  '&XANSLEN'(1,1)                             00157600
                      AIF   (T'&ZC NE 'N').ZI7D                         00157700
&ZC                   SETC  '&XANSLEN'                                  00157800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00157900
&ZCGPR                SETC  '=FL4''&XANSLEN'''                          00158000
.*                                                                      00158100
.ZI7D                 ANOP  ,                                           00158200
.*                                                                      00158300
&ZOPN                 SETA  &ZOPN+1                                     00158400
&ZOPL(&ZOPN)          SETC  ' '                                         00158500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00158600
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00158700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00158800
.*                                                                      00158900
.ZI7E                 ANOP  ,                                           00159000
.*-------------------------------------------------------------------   00159100
.***AI.L25  XANSTOKN CL8                                                00159200
                      AIF   ('&ZXANSTOKN' EQ '').ZI9E                   00159300
                      AIF   ('&ZXANSTOKN' EQ 'OUTPUT').ZI9E             00159400
&ZCGPR                SETC  '&XANSTOKN'                                 00159500
.*                                                                      00159600
                      AIF   ('&XANSTOKN'(1,1) NE '(').ZI9B              00159700
&ZCGPR   SETC  '0('.'&XANSTOKN'(2,K'&XANSTOKN-2).')'                    00159800
.ZI9B                 ANOP  ,                                           00159900
.*                                                                      00160000
&ZOPN                 SETA  &ZOPN+1                                     00160100
&ZOPL(&ZOPN)          SETC  ' '                                         00160200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00160300
&ZOPV(&ZOPN)          SETC  '28(8,1),&ZCGPR'                            00160400
&ZOPD(&ZOPN)          SETC  '++ &ZXANSTOKN XANSTOKN'                    00160500
.*                                                                      00160600
.ZI9E                 ANOP  ,                                           00160700
.*-------------------------------------------------------------------   00160800
&ZOPN1                SETA &ZOPN                                        00160900
.*******************************************************************    00161000
.***  PROCESS IWM4QTNT OUTPUT PARAMETERS                                00161100
.*******************************************************************    00161200
                      ACTR  10000                                       00161300
.*------------------------------------------------------------------    00161400
.***AO.L02 XQUERYLEN F                                                  00161500
         AIF   ('&ZXQUERYLEN' EQ 'OUTPUT').ZO8A  OUTPUT                 00161600
         AIF   ('&ZXQUERYLEN' NE 'INOUT').ZO8C  INOUT                   00161700
.ZO8A    AIF   ('&XQUERYLEN'(1,1) NE '(').ZO8B  ADDR IN GPR             00161800
&ZCGPR   SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                           00161900
&ZOPN                 SETA  &ZOPN+1                                     00162000
&ZOPL(&ZOPN)          SETC  ' '                                         00162100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00162200
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),24(1)'                         00162300
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00162400
                      AGO   .ZO8C                                       00162500
.*                                                                      00162600
.ZO8B                 ANOP  ,                                           00162700
&ZAWRK   SETA  K'&XQUERYLEN                                             00162800
         AIF   ('&XQUERYLEN'(&ZAWRK,1) NE ')').ZO8G                     00162900
&ZN      SETA  2                                                        00163000
.ZO8H    ANOP                                                           00163100
         AIF   (&ZN GE &ZAWRK).ZO8G                                     00163200
         AIF   ('&XQUERYLEN'(&ZN,1) NE '(').ZO8I                        00163300
&ZC      SETC  '&XQUERYLEN'(1,&ZN).'4'.','                              00163400
&ZC      SETC  '&ZC'.'&XQUERYLEN'(&ZN+1,&ZAWRK-&ZN).',24(1)'            00163500
         AGO   .ZO8J                                                    00163600
.ZO8I    ANOP                                                           00163700
&ZN      SETA  &ZN+1                                                    00163800
         AGO   .ZO8H                                                    00163900
.ZO8G    ANOP                                                           00164000
&ZC      SETC  '&XQUERYLEN.(4),24(1)'                                   00164100
.ZO8J    ANOP                                                           00164200
&ZOPN                 SETA  &ZOPN+1                                     00164300
&ZOPL(&ZOPN)          SETC  ' '                                         00164400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00164500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00164600
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00164700
.ZO8C                 ANOP  ,                                           00164800
.*------------------------------------------------------------------    00164900
.***AO.L02 XANSTOKN CL8                                                 00165000
         AIF   ('&ZXANSTOKN' EQ 'OUTPUT').ZO9A  OUTPUT                  00165100
         AIF   ('&ZXANSTOKN' NE 'INOUT').ZO9C  INOUT                    00165200
.ZO9A    AIF   ('&XANSTOKN'(1,1) NE '(').ZO9B  ADDR IN GPR              00165300
&ZCGPR   SETC  '&XANSTOKN'(2,K'&XANSTOKN-2)                             00165400
&ZOPN                 SETA  &ZOPN+1                                     00165500
&ZOPL(&ZOPN)          SETC  ' '                                         00165600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00165700
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),28(1)'                         00165800
&ZOPD(&ZOPN)          SETC  '++ XANSTOKN CL8'                           00165900
                      AGO   .ZO9C                                       00166000
.*                                                                      00166100
.ZO9B                 ANOP  ,                                           00166200
&ZAWRK   SETA  K'&XANSTOKN                                              00166300
         AIF   ('&XANSTOKN'(&ZAWRK,1) NE ')').ZO9G                      00166400
&ZN      SETA  2                                                        00166500
.ZO9H    ANOP                                                           00166600
         AIF   (&ZN GE &ZAWRK).ZO9G                                     00166700
         AIF   ('&XANSTOKN'(&ZN,1) NE '(').ZO9I                         00166800
&ZC      SETC  '&XANSTOKN'(1,&ZN).'8'.','                               00166900
&ZC      SETC  '&ZC'.'&XANSTOKN'(&ZN+1,&ZAWRK-&ZN).',28(1)'             00167000
         AGO   .ZO9J                                                    00167100
.ZO9I    ANOP                                                           00167200
&ZN      SETA  &ZN+1                                                    00167300
         AGO   .ZO9H                                                    00167400
.ZO9G    ANOP                                                           00167500
&ZC      SETC  '&XANSTOKN.(8),28(1)'                                    00167600
.ZO9J    ANOP                                                           00167700
&ZOPN                 SETA  &ZOPN+1                                     00167800
&ZOPL(&ZOPN)          SETC  ' '                                         00167900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00168000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00168100
&ZOPD(&ZOPN)          SETC  '++ XANSTOKN CL8'                           00168200
.ZO9C                 ANOP  ,                                           00168300
.*******************************************************************    00168400
.***AO.X02  RETURN CODE PROCESSING                                      00168500
.*******************************************************************    00168600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00168700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00168800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00168900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00169000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00169100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00169200
&ZOPN                 SETA  &ZOPN+1                                     00169300
&ZOPL(&ZOPN)          SETC  ' '                                         00169400
&ZOPO(&ZOPN)          SETC  'ST'                                        00169500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00169600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00169700
                      AGO   .ZMRETX                                     00169800
.*                                                                      00169900
.ZMRET2               ANOP  ,                                           00170000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00170100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00170200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00170300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00170400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00170500
&ZOPN                 SETA  &ZOPN+1                                     00170600
&ZOPL(&ZOPN)          SETC  ' '                                         00170700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00170800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00170900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00171000
.ZMRETX               ANOP  ,                                           00171100
.*******************************************************************    00171200
.***AO.X03  REASON CODE PROCESSING                                      00171300
.*******************************************************************    00171400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00171500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00171600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00171700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00171800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00171900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00172000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00172100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00172200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00172300
&ZOPN                 SETA  &ZOPN+1                                     00172400
&ZOPL(&ZOPN)          SETC  ' '                                         00172500
&ZOPO(&ZOPN)          SETC  'ST'                                        00172600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00172700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00172800
                      AGO   .ZMRSNX                                     00172900
.*                                                                      00173000
.ZMRSN2               ANOP  ,                                           00173100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00173200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00173300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00173400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00173500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00173600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00173700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00173800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00173900
&ZOPN                 SETA  &ZOPN+1                                     00174000
&ZOPL(&ZOPN)          SETC  ' '                                         00174100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00174200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00174300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00174400
.ZMRSNX               ANOP  ,                                           00174500
.*******************************************************************    00174600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00174700
.*******************************************************************    00174800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00174900
.*******************************************************************    00175000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00175100
.*******************************************************************    00175200
                      ACTR  10000                                       00175300
.*                                                                      00175400
                      LCLA  &ZLC           COLUMN POSITION              00175500
                      LCLA  &ZOPX          LIST TABLE INDEX             00175600
                      LCLC  &ZLL           LABEL                        00175700
                      LCLC  &ZLOP          OPERATION                    00175800
                      LCLC  &ZLV           VALUE                        00175900
                      LCLC  &ZLD           DESCRIPTION                  00176000
.*                                                                      00176100
&ZOPX                 SETA  1                                           00176200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00176300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00176400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00176500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00176600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00176700
                      AIF   (K'&ZLD LE 0).ZL5                           00176800
&ZLC                  SETA  35             COMMENT COLUMN               00176900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00177000
&ZLC                  SETA  33             COMMMENT COLUMN              00177100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00177200
&ZLV                  SETC  '&ZLV'.' '                                  00177300
                      AGO   .ZL3                                        00177400
.*                                                                      00177500
.ZL4                  ANOP  ,                                           00177600
&ZLV                  SETC  '&ZLV'.' '                                  00177700
.ZL5                  ANOP  ,                                           00177800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00177900
.*                                                                      00178000
&ZLL     &ZLOP &ZLV                                                     00178100
.*                                                                      00178200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00178300
                      AGO   .ZL2           CONTINUE LOOPING             00178400
.*                                                                      00178500
.ZLX                  ANOP  ,                                           00178600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00178700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00178800
     LLGT  14,16(0,0)              GET CVT ADDRESS                      00178900
     LLGT  14,772(14,0)            GET SFT ADDRESS                      00179000
     LLGT  14,380(14,0)            GET LX FOR SERVICE ROUTINE           00179100
     LA    15,130                  GET EX FOR SERVICE ROUTINE           00179200
     OR    14,15                   GET PC NUMBER                        00179300
     PC    0(14)                                                        00179400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00179500
.ZLINKX               ANOP  ,                                           00179600
.*******************************************************************    00179700
.***AP.X01  FORMAT GENERATED CODE                                       00179800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00179900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00180000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00180100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00180200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00180300
                      AIF   (K'&ZLD LE 0).ZL51                          00180400
&ZLC                  SETA  35             COMMENT COLUMN               00180500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00180600
&ZLC                  SETA  33             COMMENT COLUMN               00180700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00180800
&ZLV                  SETC  '&ZLV'.' '                                  00180900
                      AGO   .ZL31                                       00181000
.*                                                                      00181100
.ZL41                 ANOP  ,                                           00181200
&ZLV                  SETC  '&ZLV'.' '                                  00181300
.ZL51                 ANOP  ,                                           00181400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00181500
.*                                                                      00181600
&ZLL     &ZLOP &ZLV                                                     00181700
.*                                                                      00181800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00181900
                      AGO   .ZL21          CONTINUE LOOPING             00182000
.*                                                                      00182100
.ZLX1                 ANOP  ,                                           00182200
.*******************************************************************    00182300
.***AP.X02  END OF IWM4QTNT MACRO                                       00182400
&ZIWM4QTNT            SETC  'YES'          SET IWM4QTNT USED            00182500
         POP   PRINT                                                    00182600
*                                            IWM4QTNT-0                 00182700
         SPACE 1                                                        00182800
.ZLX2                 ANOP  ,                                           00182900
         MEND                                                           00183000
**********************************************************************/ 00183100
*/**** START OF SPECIFICATIONS **************************************** 00183200
*                                                                     * 00183300
*                                                                     * 00183400
*01* MACRO NAME:  IWM4QTNT                              -01/10/17-<0> * 00183500
*                                                                     * 00183600
*                                                                     * 00183700
*01* DESCRIPTIVE NAME:  Query Tenant Resource Group Consumption       * 00183800
*                                                                     * 00183900
*01* PROPRIETARY STATEMENT:                                           * 00184000
*                                                                     * 00184100
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00184200
*     5650-ZOS COPYRIGHT IBM CORP. 2017                               * 00184300
*                                                                     * 00184400
* STATUS= HBB77B0                                                     * 00184500
*                                                                     * 00184600
*                                                                     * 00184700
*                                                                     * 00184800
*01* FUNCTION:                                                        * 00184900
*       See the IWM4QTNT macro prologue for details.                  * 00185000
*                                                                     * 00185100
*01* INPUT:                                                           * 00185200
*                                                                     * 00185300
*            ?IWM4QTNT     ANSAREA(xansarea)                          * 00185400
*                          ANSLEN(xanslen)                            * 00185500
*                          QUERYLEN(xquerylen)                        * 00185600
*                          ANSTOKN(xanstokn)                          * 00185700
*                         ÝRETCODE(xretcode)¨                         * 00185800
*                         ÝRSNCODE(xrsncode)¨                         * 00185900
*                         ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨     * 00186000
*                        ÐÝMF(S)¨                                     * 00186100
*                        ÔÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨        * 00186200
*                        ¿ÝMF(E,xmfctrl»,COMPLETEº)¨                  * 00186300
*                                                                     * 00186400
****** END OF SPECIFICATIONS *****************************************/ 00186500
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00186600
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00186700
*  ANS('/* ? IWM4QTNT '!!MACLIST!!' ')                                  00186800
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00186900
*                                                                       00187000
*  DCL ZELO  FIXED;                                                     00187100
*  DCL ZECOL FIXED;                                                     00187200
*                                                                       00187300
*  ZELO=1;     /* STARTING COLUMN */                                    00187400
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00187500
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00187600
*    IF ZECOL>0                                                         00187700
*      THEN                                                             00187800
*        DO;   /* PARENTHESIS FOUND */                                  00187900
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)!!' ')                         00188000
*             NORESCAN COL(MACLMAR+5);                                  00188100
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00188200
*        END;                                                           00188300
*      ELSE                                                             00188400
*        DO;   /* REMAINING KEYS */                                     00188500
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00188600
*             NORESCAN COL(MACLMAR+5);                                  00188700
*          ZELO=LENGTH(MACKEYS)+1;                                      00188800
*        END;                                                           00188900
*  END;                                                                 00189000
*  ANS(' -01/10/17-0- */')                                              00189100
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00189200
*/********************************************************************/ 00189300
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00189400
*/********************************************************************/ 00189500
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00189600
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00189700
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00189800
*                                                                       00189900
*  DCL   ZIWM4QTNT CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00190000
*  DEACT ZIWM4QTNT;                                                     00190100
*                                                                       00190200
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00190300
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00190400
*                                                                       00190500
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00190600
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00190700
*                                                                       00190800
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00190900
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00191000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00191100
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00191200
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00191300
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00191400
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00191500
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00191600
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00191700
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00191800
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00191900
*                                                                       00192000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00192100
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00192200
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00192300
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00192400
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00192500
*  DCL EHAREGS64 CHARACTER EXTERNAL; /* REG DCLS                     */ 00192600
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00192700
*/*******************************************************************/  00192800
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00192900
*/*******************************************************************/  00193000
*  DCL XANSAREA;  DEACT XANSAREA;  /***PV.XVAR02 OUTPUT NAME */         00193100
*  DCL ZXANSAREA; DEACT ZXANSAREA;  /***INPUT/OUTPUT CONTROL */         00193200
*  DCL XANSLEN;  DEACT XANSLEN;    /***PV.XVAR02 INPUT NAME */          00193300
*  DCL ZXANSLEN; DEACT ZXANSLEN;   /***INPUT/OUTPUT CONTROL */          00193400
*  DCL XQUERYLEN;  DEACT XQUERYLEN;  /***PV.XVAR02 OUTPUT NAME */       00193500
*  DCL ZXQUERYLEN; DEACT ZXQUERYLEN;  /***INPUT/OUTPUT CONTROL */       00193600
*  DCL XANSTOKN;  DEACT XANSTOKN;  /***PV.XVAR02 INOUT NAME */          00193700
*  DCL ZXANSTOKN; DEACT ZXANSTOKN;  /***INPUT/OUTPUT CONTROL */         00193800
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00193900
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00194000
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00194100
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00194200
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00194300
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00194400
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00194500
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00194600
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00194700
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00194800
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00194900
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00195000
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00195100
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00195200
*/********************************************************************/ 00195300
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00195400
*/********************************************************************/ 00195500
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00195600
*    XPLISTVER=0;                                                       00195700
*  ELSE                                                                 00195800
*    XPLISTVER=0;                                                       00195900
*  IF PLISTVER^=''                                                      00196000
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00196100
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00196200
*    THEN                                                               00196300
*      DO;                                                              00196400
*                                                                       00196500
*        ZCVAL='';                           /* ERROR FLAG */           00196600
*        IF PLISTVER='PLISTVER' ! PLISTVER='()'  /*CHECK ENTRY*/        00196700
*          THEN                                                         00196800
*            DO;                                                        00196900
*              ZMS=' 8, THE "PLISTVER" KEY'!! /**KOPTP* MSG*/           00197000
*                  ' MUST CONTAIN ONE'!!                                00197100
*                  ' (OR MORE) ARGUMENT(S).';                           00197200
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00197300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00197400
*              ZMACRET=8;                    /* MACRO ERROR */          00197500
*              ZCVAL='NO_ARGUMENT';                                     00197600
*            END;                                                       00197700
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00197800
*          THEN                                                         00197900
*            DO;                                                        00198000
*              ZMS=' 8, "PLISTVER'!!         /**KPOSP* MSG*/            00198100
*                  PLISTVER!!                                           00198200
*                  '" "PLISTVER"'!!                                     00198300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00198400
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00198500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00198600
*              ZMACRET=8;                    /* MACRO ERROR */          00198700
*            END;                                                       00198800
*                                                                       00198900
*        ZC=PLISTVER(1);                                                00199000
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00199100
*          IF ZC(ZL:ZL)<'0' !                /* MUST BE NUMERIC */      00199200
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00199300
*            THEN                                                       00199400
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00199500
*        END;                                                           00199600
*        IF ZCVAL=''                                                    00199700
*          THEN                                                         00199800
*            DO;                             /* CHECK RANGE LIMITS */   00199900
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00200000
*              THEN                                                     00200100
*                XPLISTVER=FIXED(PLISTVER(1));                          00200200
*              ELSE                                                     00200300
*                DO;                                                    00200400
*              ZMS=' 8, PLISTVER='!!         /**KVALP* MSG*/            00200500
*                    PLISTVER(1)!!                                      00200600
*                  ', BUT PLISTVER OF '!!                               00200700
*                    CHAR(XPLISTVER)!!                                  00200800
*                  ' IS REQUIRED.';                                     00200900
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00201000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00201100
*              ZMACRET=8;                    /* MACRO ERROR */          00201200
*                END;                                                   00201300
*              IF XPLISTVER<0 !              /* LOW LIMIT */            00201400
*                 XPLISTVER>0                /* HIGH LIMIT */           00201500
*                THEN                                                   00201600
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00201700
*            END;                                                       00201800
*        IF ZCVAL^=''                                                   00201900
*          THEN                                                         00202000
*            DO;                             /* RANGE ERROR */          00202100
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00202200
*              ZMS=' 8, "PLISTVER '!!        /**KRNGP* MSG*/            00202300
*                  PLISTVER!!                                           00202400
*                  '" THE RANGE IS "0-0"'!!                             00202500
*                  ' FOR ARGUMENT 1.';                                  00202600
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00202700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00202800
*              ZMACRET=8;                    /* MACRO ERROR */          00202900
*            END;                                                       00203000
*      END;                                                             00203100
*                                                                       00203200
*/********************************************************************/ 00203300
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00203400
*/********************************************************************/ 00203500
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00203600
*  XMF='';                                                              00203700
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00203800
*  IF TRANSLATE(MF(1))                                                  00203900
*              = 'S'                         /* CHECK FOR KEYWORD */    00204000
*    THEN                                                               00204100
*      DO;                                                              00204200
*        XMF='S';                            /* SET XVARIABLE */        00204300
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00204400
*          THEN                                                         00204500
*            DO;                                                        00204600
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00204700
*                  MF!!                                                 00204800
*                  '" "MF"'!!                                           00204900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00205000
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00205100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00205200
*              ZMACRET=8;                    /* MACRO ERROR */          00205300
*            END;                                                       00205400
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00205500
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00205600
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00205700
*  IF TRANSLATE(MF(1))                                                  00205800
*              = 'L'                         /* CHECK FOR KEYWORD */    00205900
*    THEN                                                               00206000
*      DO;                                                              00206100
*        XMF='L';                            /* SET XVARIABLE */        00206200
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00206300
*          THEN                                                         00206400
*            DO;                                                        00206500
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00206600
*                  MF!!                                                 00206700
*                  '" "MF"'!!                                           00206800
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00206900
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00207000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00207100
*              ZMACRET=8;                    /* MACRO ERROR */          00207200
*            END;                                                       00207300
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00207400
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00207500
*        IF PLISTVER ^= ''                                              00207600
*          THEN                                                         00207700
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00207800
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN !                            00207900
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00208000
*          THEN                                                         00208100
*            DO;                                                        00208200
*              ZMS=' 8, THE "L" FORM OF "MF"'!! /**MFLP* MSG*/          00208300
*                  ' CAN ONLY HAVE'!!                                   00208400
*                  ' THE "PLISTVER" KEY'!!                              00208500
*                  ' SPECIFIED ON THE INVOCATION.';                     00208600
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00208700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00208800
*              ZMACRET=8;                    /* MACRO ERROR */          00208900
*            END;                                                       00209000
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00209100
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00209200
*  IF MF(2)=''                               /* CHECK FOR NULL */       00209300
*   THEN                                                                00209400
*    DO;                                     /* KEY IS REQUIRED */      00209500
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00209600
*        ZMS=' 8, WHEN "L" IS SPECIFIED'!!                              00209700
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          00209800
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00209900
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00210000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00210100
*        ZMACRET=8;                          /* MACRO ERROR */          00210200
*    END;                                                               00210300
*  ELSE                                                                 00210400
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00210500
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00210600
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00210700
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00210800
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00210900
*    THEN                                                               00211000
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00211100
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00211200
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00211300
*     LENGTH(XMFATTR)>60                                                00211400
*    THEN                                                               00211500
*      DO;                                                              00211600
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00211700
*        ZMS=' 8, "MF'!!                     /**KLNGP* MSG*/            00211800
*            MF!!                                                       00211900
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'!!                       00212000
*            ' LENGTH OF 60 CHARACTERS. ';                              00212100
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00212200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00212300
*        ZMACRET=8;                          /* MACRO ERROR */          00212400
*      END;                                                             00212500
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00212600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00212700
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00212800
*  IF TRANSLATE(MF(1))                                                  00212900
*              = 'E'                         /* CHECK FOR KEYWORD */    00213000
*    THEN                                                               00213100
*      DO;                                                              00213200
*        XMF='E';                            /* SET XVARIABLE */        00213300
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00213400
*          THEN                                                         00213500
*            DO;                                                        00213600
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00213700
*                  MF!!                                                 00213800
*                  '" "MF"'!!                                           00213900
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00214000
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00214100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00214200
*              ZMACRET=8;                    /* MACRO ERROR */          00214300
*            END;                                                       00214400
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00214500
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00214600
*  IF MF(2)=''                               /* CHECK FOR NULL */       00214700
*   THEN                                                                00214800
*    DO;                                     /* KEY IS REQUIRED */      00214900
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00215000
*        ZMS=' 8, WHEN "E" IS SPECIFIED'!!                              00215100
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          00215200
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00215300
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00215400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00215500
*        ZMACRET=8;                          /* MACRO ERROR */          00215600
*    END;                                                               00215700
*  ELSE                                                                 00215800
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00215900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00216000
*  XMFSCK='';                                /* RESET XVARIABLE */      00216100
*  IF TRANSLATE(MF(3))                                                  00216200
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00216300
*    THEN                                                               00216400
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00216500
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00216600
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00216700
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00216800
*    THEN                                                               00216900
*      DO;                                   /* KEYWORD NOT ENTERED */  00217000
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00217100
*        IF MF(3)^=''                                                   00217200
*          THEN                                                         00217300
*            DO;                                                        00217400
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00217500
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            00217600
*                  MF!!'"'!!                                            00217700
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '!!              00217800
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    00217900
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00218000
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00218100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00218200
*              ZMACRET=8;                    /* MACRO ERROR */          00218300
*            END;                                                       00218400
*      END;                                                             00218500
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00218600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00218700
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00218800
*  IF MF='MF'                                                           00218900
*    ! MF='()'                               /*CHECK ENTRY*/            00219000
*     THEN                                                              00219100
*       DO;                                                             00219200
*              ZMS=' 8, THE "MF" KEY'!!      /**KOPTP* MSG*/            00219300
*                  ' MUST CONTAIN ONE'!!                                00219400
*                  ' (OR MORE) ARGUMENT(S).';                           00219500
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00219600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00219700
*              ZMACRET=8;                    /* MACRO ERROR */          00219800
*       END;                                                            00219900
*  ELSE                                                                 00220000
*    DO;                                                                00220100
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00220200
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00220300
*        THEN                                                           00220400
*          DO;                               /* KEYWORD NOT ENTERED */  00220500
*            XMF='S';                        /* SET DEFAULT */          00220600
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00220700
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00220800
*              THEN                                                     00220900
*                DO;                                                    00221000
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00221100
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            00221200
*                  MF!!'"'!!                                            00221300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              00221400
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    00221500
*                  ' "S",'!!                 /* VALID KEYWORD */        00221600
*                  ' "L",'!!                 /* VALID KEYWORD */        00221700
*                  ' OR "E".';               /* VALID KEYWORD */        00221800
*              ANS MSG('?IWM4QTNT ---> '!!ZMS);                         00221900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00222000
*              ZMACRET=8;                    /* MACRO ERROR */          00222100
*                END;                                                   00222200
*          END;                                                         00222300
*    END;                                                               00222400
*/********************************************************************/ 00222500
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00222600
*/********************************************************************/ 00222700
*  IF PLISTVER=''                                                       00222800
*     ! PLISTVER(1)='IMPLIED_VERSION'                                   00222900
*    THEN                                                               00223000
*      ZC='ON';                              /* DEFAULT FLAG ON */      00223100
*    ELSE                                                               00223200
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00223300
*/********************************************************************/ 00223400
*/***PD.P02 DEFAULT ECHO                                             */ 00223500
*/********************************************************************/ 00223600
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00223700
*  IF XMF^='L'                                                          00223800
*    THEN                                                               00223900
*      DO;                                   /* FULL SYNTAX CHECK */    00224000
*        ANS('/*DEFAULT(S): */')                                        00224100
*           NORESCAN COL(MACLMAR+5);                                    00224200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00224300
*  IF PLISTVER=''                                                       00224400
*    THEN DO;                                                           00224500
*      ANS('/* PLISTVER('!!                                             00224600
*          CHAR(XPLISTVER)!!                                            00224700
*          ')*/')                                                       00224800
*          NORESCAN COL(MACLMAR+5);                                     00224900
*    END;                                                               00225000
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00225100
*    THEN                                                               00225200
*      ANS('/* NONE. */')                                               00225300
*         NORESCAN COL(MACLMAR+5);                                      00225400
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00225500
*      END;                                                             00225600
*/********************************************************************/ 00225700
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00225800
*/********************************************************************/ 00225900
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00226000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00226100
*  DCL SYSAM64 CHAR EXTERNAL; DEACT SYSAM64;                            00226200
*  DCL SYSALVL FIXED EXTERNAL; DEACT SYSALVL;                           00226300
*                                                                       00226400
*  IF SYSASCE=''                                                        00226500
*    THEN                                                               00226600
*      DO;                                                              00226700
*        IF SYSSPLV=''                                                  00226800
*          THEN                                                         00226900
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00227000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00227100
*          THEN                                                         00227200
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00227300
*          ELSE                                                         00227400
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00227500
*      END;                                                             00227600
*/********************************************************************/ 00227700
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00227800
*/********************************************************************/ 00227900
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00228000
*  IF XMF^='L'                                                          00228100
*    THEN                                                               00228200
*      DO;                                   /* FULL SYNTAX CHECK */    00228300
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00228400
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00228500
*    THEN                                                               00228600
*      DO;                                                              00228700
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'!! /**PPOSP* MSG*/            00228800
*            ' "'!!MACLIST!!'"'!!                                       00228900
*            ' CANNOT BE USED.'!!                                       00229000
*            ' NO POSITIONAL ARGUMENTS'!!                               00229100
*            ' ARE ALLOWED.';                                           00229200
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00229300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00229400
*        ZMACRET=8;                          /* MACRO ERROR */          00229500
*      END;                                                             00229600
*/*PG.KXVAR01 NAME, RQD OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00229700
*  IF NUMBER(ANSAREA)>1                      /* CHECK POSITIONALS */    00229800
*    THEN                                                               00229900
*      DO;                                                              00230000
*        ZMS=' 8, "ANSAREA'!!                /**KPOSP* MSG*/            00230100
*            ANSAREA!!                                                  00230200
*            '" "ANSAREA"'!!                                            00230300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00230400
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00230500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00230600
*        ZMACRET=8;                          /* MACRO ERROR */          00230700
*      END;                                                             00230800
*/*PG.KXVAR03 NAME, RQD OUTPUT, KEYS -XVARIABLE----------------------*/ 00230900
*  XANSAREA=ANSAREA(1);                      /* SET XVARIABLE */        00231000
*  IF ANSAREA(1)=''                          /* CHECK FOR NULL */       00231100
*   THEN                                                                00231200
*    DO;                                     /* KEY IS REQUIRED */      00231300
*        ZXANSAREA='';                       /* RESET IN/OUTPUT */      00231400
*        ZMS=' 8,  '!!                                                  00231500
*            ' "ANSAREA" KEY AND ITS'!!                                 00231600
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00231700
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00231800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00231900
*        ZMACRET=8;                          /* MACRO ERROR */          00232000
*    END;                                                               00232100
*  ELSE                                                                 00232200
*    ZXANSAREA='OUTPUT';                     /* SET IN/OUTPUT */        00232300
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00232400
*  IF NUMBER(ANSLEN)>1                       /* CHECK POSITIONALS */    00232500
*    THEN                                                               00232600
*      DO;                                                              00232700
*        ZMS=' 8, "ANSLEN'!!                 /**KPOSP* MSG*/            00232800
*            ANSLEN!!                                                   00232900
*            '" "ANSLEN"'!!                                             00233000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00233100
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00233200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00233300
*        ZMACRET=8;                          /* MACRO ERROR */          00233400
*      END;                                                             00233500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00233600
*  XANSLEN=ANSLEN(1);                        /* SET XVARIABLE */        00233700
*  IF ANSLEN(1)=''                           /* CHECK FOR NULL */       00233800
*   THEN                                                                00233900
*    DO;                                     /* KEY IS REQUIRED */      00234000
*        ZXANSLEN='';                        /* RESET IN/OUTPUT */      00234100
*        ZMS=' 8,  '!!                                                  00234200
*            ' "ANSLEN" KEY AND ITS'!!                                  00234300
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00234400
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00234500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00234600
*        ZMACRET=8;                          /* MACRO ERROR */          00234700
*    END;                                                               00234800
*  ELSE                                                                 00234900
*    ZXANSLEN='INPUT';                       /* SET IN/OUTPUT */        00235000
*/*PG.KXVAR01 NAME, RQD OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00235100
*  IF NUMBER(QUERYLEN)>1                     /* CHECK POSITIONALS */    00235200
*    THEN                                                               00235300
*      DO;                                                              00235400
*        ZMS=' 8, "QUERYLEN'!!               /**KPOSP* MSG*/            00235500
*            QUERYLEN!!                                                 00235600
*            '" "QUERYLEN"'!!                                           00235700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00235800
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00235900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00236000
*        ZMACRET=8;                          /* MACRO ERROR */          00236100
*      END;                                                             00236200
*/*PG.KXVAR03 NAME, RQD OUTPUT, KEYS -XVARIABLE----------------------*/ 00236300
*  XQUERYLEN=QUERYLEN(1);                    /* SET XVARIABLE */        00236400
*  IF QUERYLEN(1)=''                         /* CHECK FOR NULL */       00236500
*   THEN                                                                00236600
*    DO;                                     /* KEY IS REQUIRED */      00236700
*        ZXQUERYLEN='';                      /* RESET IN/OUTPUT */      00236800
*        ZMS=' 8,  '!!                                                  00236900
*            ' "QUERYLEN" KEY AND ITS'!!                                00237000
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00237100
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00237200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00237300
*        ZMACRET=8;                          /* MACRO ERROR */          00237400
*    END;                                                               00237500
*  ELSE                                                                 00237600
*    ZXQUERYLEN='OUTPUT';                    /* SET IN/OUTPUT */        00237700
*/*PG.KXVAR01 NAME, RQD INOUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00237800
*  IF NUMBER(ANSTOKN)>1                      /* CHECK POSITIONALS */    00237900
*    THEN                                                               00238000
*      DO;                                                              00238100
*        ZMS=' 8, "ANSTOKN'!!                /**KPOSP* MSG*/            00238200
*            ANSTOKN!!                                                  00238300
*            '" "ANSTOKN"'!!                                            00238400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00238500
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00238600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00238700
*        ZMACRET=8;                          /* MACRO ERROR */          00238800
*      END;                                                             00238900
*/*PG.KXVAR03 NAME, RQD INOUT, KEYS -XVARIABLE-----------------------*/ 00239000
*  XANSTOKN=ANSTOKN(1);                      /* SET XVARIABLE */        00239100
*  IF ANSTOKN(1)=''                          /* CHECK FOR NULL */       00239200
*   THEN                                                                00239300
*    DO;                                     /* KEY IS REQUIRED */      00239400
*        ZXANSTOKN='';                       /* RESET IN/OUTPUT */      00239500
*        ZMS=' 8,  '!!                                                  00239600
*            ' "ANSTOKN" KEY AND ITS'!!                                 00239700
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00239800
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00239900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00240000
*        ZMACRET=8;                          /* MACRO ERROR */          00240100
*    END;                                                               00240200
*  ELSE                                                                 00240300
*    ZXANSTOKN='INOUT';                      /* SET IN/OUTPUT */        00240400
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00240500
*  IF RETCODE='RETCODE' ! RETCODE='()'       /*CHECK ENTRY*/            00240600
*    THEN                                                               00240700
*      DO;                                                              00240800
*        ZMS=' 8, THE "RETCODE" KEY'!!       /**KOPTP* MSG*/            00240900
*            ' MUST CONTAIN ONE'!!                                      00241000
*            ' (OR MORE) ARGUMENT(S).';                                 00241100
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00241200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00241300
*        ZMACRET=8;                          /* MACRO ERROR */          00241400
*      END;                                                             00241500
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00241600
*    THEN                                                               00241700
*      DO;                                                              00241800
*        ZMS=' 8, "RETCODE'!!                /**KPOSP* MSG*/            00241900
*            RETCODE!!                                                  00242000
*            '" "RETCODE"'!!                                            00242100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00242200
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00242300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00242400
*        ZMACRET=8;                          /* MACRO ERROR */          00242500
*      END;                                                             00242600
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00242700
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00242800
*    THEN                                                               00242900
*      DO;                                                              00243000
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00243100
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00243200
*      END;                                                             00243300
*  ELSE                                                                 00243400
*    IF ZXRETCODE^=''                                                   00243500
*      THEN                                                             00243600
*        ZXRETCODE='';                       /* RESET OUTPUT */         00243700
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00243800
*  IF RSNCODE='RSNCODE' ! RSNCODE='()'       /*CHECK ENTRY*/            00243900
*    THEN                                                               00244000
*      DO;                                                              00244100
*        ZMS=' 8, THE "RSNCODE" KEY'!!       /**KOPTP* MSG*/            00244200
*            ' MUST CONTAIN ONE'!!                                      00244300
*            ' (OR MORE) ARGUMENT(S).';                                 00244400
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00244500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00244600
*        ZMACRET=8;                          /* MACRO ERROR */          00244700
*      END;                                                             00244800
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00244900
*    THEN                                                               00245000
*      DO;                                                              00245100
*        ZMS=' 8, "RSNCODE'!!                /**KPOSP* MSG*/            00245200
*            RSNCODE!!                                                  00245300
*            '" "RSNCODE"'!!                                            00245400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00245500
*        ANS MSG('?IWM4QTNT ---> '!!ZMS);                               00245600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00245700
*        ZMACRET=8;                          /* MACRO ERROR */          00245800
*      END;                                                             00245900
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00246000
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00246100
*    THEN                                                               00246200
*      DO;                                                              00246300
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00246400
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00246500
*      END;                                                             00246600
*  ELSE                                                                 00246700
*    IF ZXRSNCODE^=''                                                   00246800
*      THEN                                                             00246900
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00247000
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00247100
*      END;                                  /* END COMPLETE CHECKING*/ 00247200
*/********************************************************************/ 00247300
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00247400
*/********************************************************************/ 00247500
*  IF ZMACRET = 0                                                       00247600
*    THEN                                                               00247700
*      DO;                                                              00247800
*/********************************************************************/ 00247900
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00248000
*/********************************************************************/ 00248100
*  ANS(MACCONC!!'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00248200
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00248300
*    THEN                                                               00248400
*      ANS(MACCONC!!'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00248500
*    ELSE                                                               00248600
*      ANS(MACCONC!!'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00248700
*/********************************************************************/ 00248800
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00248900
*  IF XMF^='L'                                                          00249000
*    THEN                                                               00249100
*      ANS('DO; /* IWM4QTNT-PLISTVER */')                               00249200
*          NORESCAN COL(MACLMAR);                                       00249300
*/*PL.LL01 ?IWM4QTNT MF=L PARAMETER LIST-----------------------------*/ 00249400
*  IF XMF='L'                                                           00249500
*    THEN                                                               00249600
*      DO;                                                              00249700
*        ANS('DCL 1 '!!XMFCTRL!!' '!!XMFATTR!!', '!!                    00249800
*            '/* ?IWM4QTNT PARM LIST*/')                                00249900
*            NORESCAN COL(MACLMAR);                                     00250000
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00250100
*        ANS('2 '!!XMFCTRL!!                                            00250200
*            '_XVERSION FIXED(8), '!!                                   00250300
*            '/* INPUT XVERSION*/')                                     00250400
*            NORESCAN COL(MACLMAR+2);                                   00250500
*/*PL.LL13  XRSV001 CHAR(1) RESERVED---------------------------------*/ 00250600
*        ANS('2 '!!XMFCTRL                                              00250700
*         !! '_XRSV001 CHAR(1), '                                       00250800
*         !! '/* RESERVED */'                                           00250900
*            ) NORESCAN COL(MACLMAR+2);                                 00251000
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00251100
*        ANS('2 '!!XMFCTRL!!                                            00251200
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                       00251300
*            '/* INPUT XPLISTLEN*/')                                    00251400
*            NORESCAN COL(MACLMAR+2);                                   00251500
*/*PL.LL13  XRSV002 CHAR(4) RESERVED---------------------------------*/ 00251600
*        ANS('2 '!!XMFCTRL                                              00251700
*         !! '_XRSV002 CHAR(4), '                                       00251800
*         !! '/* RESERVED */'                                           00251900
*            ) NORESCAN COL(MACLMAR+2);                                 00252000
*/*PL.LL13 ADDR3164 XANSAREA PTR(64) OUTPUT ADDR3164-----------------*/ 00252100
*        ANS('2 '!!XMFCTRL                                              00252200
*         !! '_XANSAREA_ADDR3164 PTR(64), '                             00252300
*         !! '/* '!!ZXANSAREA_ADDR3164                                  00252400
*         !! ' XANSAREA_ADDR3164 */'                                    00252500
*         !!   '3 '!!XMFCTRL                                            00252600
*         !!   '_XANSAREA_ADDR64_H FIXED(32), '                         00252700
*         !!   '3 '!!XMFCTRL                                            00252800
*         !!   '_XANSAREA_ADDR31 PTR(31),'                              00252900
*            ) NORESCAN COL(MACLMAR+2);                                 00253000
*/*PL.LL13 ALET XANSAREA FIXED(32) OUTPUT ALET-----------------------*/ 00253100
*        ANS('2 '!!XMFCTRL                                              00253200
*         !! '_XANSAREA_ALET FIXED(32), '                               00253300
*         !! '/* '!!ZXANSAREA_ALET                                      00253400
*         !! ' XANSAREA_ALET */'                                        00253500
*            ) NORESCAN COL(MACLMAR+2);                                 00253600
*/*PL.LL13  XANSLEN FIXED(31) INPUT----------------------------------*/ 00253700
*        ANS('2 '!!XMFCTRL                                              00253800
*         !! '_XANSLEN FIXED(31), '                                     00253900
*         !! '/* '!!ZXANSLEN                                            00254000
*         !! ' XANSLEN */'                                              00254100
*            ) NORESCAN COL(MACLMAR+2);                                 00254200
*/*PL.LL13  XQUERYLEN FIXED(31) OUTPUT-------------------------------*/ 00254300
*        ANS('2 '!!XMFCTRL                                              00254400
*         !! '_XQUERYLEN FIXED(31), '                                   00254500
*         !! '/* '!!ZXQUERYLEN                                          00254600
*         !! ' XQUERYLEN */'                                            00254700
*            ) NORESCAN COL(MACLMAR+2);                                 00254800
*/*PL.LL13  XANSTOKN CHAR(8) INOUT-----------------------------------*/ 00254900
*        ANS('2 '!!XMFCTRL                                              00255000
*         !! '_XANSTOKN CHAR(8), '                                      00255100
*         !! '/* '!!ZXANSTOKN                                           00255200
*         !! ' XANSTOKN */'                                             00255300
*            ) NORESCAN COL(MACLMAR+2);                                 00255400
*/*PL.LL13  XRSV003 CHAR(4) RESERVED---------------------------------*/ 00255500
*        ANS('2 '!!XMFCTRL                                              00255600
*         !! '_XRSV003 CHAR(4), '                                       00255700
*         !! '/* RESERVED */'                                           00255800
*            ) NORESCAN COL(MACLMAR+2);                                 00255900
*/*PL.LL18 ----------------------------------------------------------*/ 00256000
*        ANS('2 * CHAR(0);')                                            00256100
*            NORESCAN COL(MACLMAR+2);                                   00256200
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00256300
*      END;                                                             00256400
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00256500
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00256600
*  DEACT ZPRMLINE;                                                      00256700
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00256800
*  DEACT ZNDX;                                                          00256900
*  ZNDX=MACINDEX;              /* MACINDEX                          */  00257000
*  DCL XVERSION CHAR;                                                   00257100
*  DEACT XVERSION;                                                      00257200
*/*PL.L02 ?IWM4QTNT PARAMETER LIST-----------------------------------*/ 00257300
*  IF XMF^='L'                                                          00257400
*    THEN                                                               00257500
*      DO;                                                              00257600
*/*PL.L03 ?IWM4QTNT PARAMETER LIST-----------------------------------*/ 00257700
*        IF XMF='S'                                                     00257800
*          THEN                                                         00257900
*            XMFCTRL='#ZPLIST';                                         00258000
*/*PL.L04 ?IWM4QTNT PARAMETER LIST-----------------------------------*/ 00258100
*        ZPRMLINE='DCL 1 #Z'!!ZNDX!!' DEF('!!                           00258200
*                 XMFCTRL!!'),'!!                                       00258300
*                 ' /* ?IWM4QTNT PARM LIST*/';                          00258400
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 00258500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00258600
*                 '_XVERSION FIXED(8), '!!                              00258700
*                 '/* INPUT XVERSION*/';                                00258800
*/*PL.L08  XRSV001 CHAR(1) RESERVED----------------------------------*/ 00258900
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00259000
*                 '_XRSV001 CHAR(1), '!!                                00259100
*                 '/* RESERVED */';                                     00259200
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00259300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00259400
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                  00259500
*                 '/* INPUT XPLISTLEN*/';                               00259600
*/*PL.L08  XRSV002 CHAR(4) RESERVED----------------------------------*/ 00259700
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00259800
*                 '_XRSV002 CHAR(4), '!!                                00259900
*                 '/* RESERVED */';                                     00260000
*/*PL.L08 ADDR3164 XANSAREA PTR(64) OUTPUT ADDR3164------------------*/ 00260100
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00260200
*                 '_XANSAREA_ADDR3164 PTR(64), '!!                      00260300
*                 '/* '!!ZXANSAREA_ADDR3164!!                           00260400
*                 ' XANSAREA_ADDR3164 */';                              00260500
*        ZPRMLINE=ZPRMLINE!!' 3 #Z'!!ZNDX!!                             00260600
*                 '_XANSAREA_ADDR64_H FIXED(32),';                      00260700
*        ZPRMLINE=ZPRMLINE!!' 3 #Z'!!ZNDX!!                             00260800
*                 '_XANSAREA_ADDR31 PTR(31),';                          00260900
*/*PL.L08 ALET XANSAREA FIXED(32) OUTPUT ALET------------------------*/ 00261000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00261100
*                 '_XANSAREA_ALET FIXED(32), '!!                        00261200
*                 '/* '!!ZXANSAREA_ALET!!                               00261300
*                 ' XANSAREA_ALET */';                                  00261400
*/*PL.L08  XANSLEN FIXED(31) INPUT-----------------------------------*/ 00261500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00261600
*                 '_XANSLEN FIXED(31), '!!                              00261700
*                 '/* '!!ZXANSLEN!!                                     00261800
*                 ' XANSLEN */';                                        00261900
*/*PL.L08  XQUERYLEN FIXED(31) OUTPUT--------------------------------*/ 00262000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00262100
*                 '_XQUERYLEN FIXED(31), '!!                            00262200
*                 '/* '!!ZXQUERYLEN!!                                   00262300
*                 ' XQUERYLEN */';                                      00262400
*/*PL.L08  XANSTOKN CHAR(8) INOUT------------------------------------*/ 00262500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00262600
*                 '_XANSTOKN CHAR(8), '!!                               00262700
*                 '/* '!!ZXANSTOKN!!                                    00262800
*                 ' XANSTOKN */';                                       00262900
*/*PL.L08  XRSV003 CHAR(4) RESERVED----------------------------------*/ 00263000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00263100
*                 '_XRSV003 CHAR(4), '!!                                00263200
*                 '/* RESERVED */';                                     00263300
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00263400
*        ZPRMNUM=ZPRMNUM+1;                                             00263500
*        ZPRM(ZPRMNUM)=ZPRMLINE!!' 2 * CHAR(0);';                       00263600
*        IF XPLISTVER^=0                                                00263700
*           & XMF^='S'                                                  00263800
*          THEN                                                         00263900
*            DO;                                                        00264000
*              ZPRMNUM=ZPRMNUM+1;                                       00264100
*              ZPRM(ZPRMNUM)=                                           00264200
*               'DCL #Z'!!ZNDX!!'_LENCHECK FIXED(32) CONSTANT('!!       00264300
*               'LENGTH('!!XMFCTRL!!')-LENGTH(#Z'!!ZNDX!!'));'!!        00264400
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'!!            00264500
*               ' IS LONG ENOUGH */';                                   00264600
*            END;                                                       00264700
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00264800
*        ZPLLEN=40;                                                     00264900
*        IF ZPRMMAX<ZPLLEN                                              00265000
*           & XMF^='E'                                                  00265100
*          THEN                                                         00265200
*            ZPRMMAX=ZPLLEN;                                            00265300
*/*PL.L13 -----------------------------------------------------------*/ 00265400
*      END;                                                             00265500
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00265600
*  IF XMF^='L'                                                          00265700
*    THEN                                                               00265800
*      DO;                                                              00265900
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00266000
*            ANS('#Z'!!ZNDX!!'=''''B;'!!                                00266100
*                '/* CLEAR PARAMETER AREA */')                          00266200
*                NORESCAN COL(MACLMAR);                                 00266300
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00266400
*        ANS('#Z'!!ZNDX!!'_XPLISTLEN=LENGTH(#Z'!!ZNDX!!');'!!           00266500
*            '/* XPLISTLEN FIXED(16) */')                               00266600
*            NORESCAN COL(MACLMAR);                                     00266700
*/*PI.L15 ADDR3164(XANSAREA) CHAR(256)-------------------------------*/ 00266800
*        IF ZXANSAREA^=''                                               00266900
*          THEN                                                         00267000
*            IF SYSAM64 = 'YES' THEN                                    00267100
*            DO;                                                        00267200
*              ANS('#Z'!!ZNDX!!'_XANSAREA_ADDR3164='!!                  00267300
*                  'ADDR('!!XANSAREA!!');'!!                            00267400
*                  '/* ADDR3164 XANSAREA CHAR(256) */')                 00267500
*                  NORESCAN COL(MACLMAR);                               00267600
*            END;                                                       00267700
*            ELSE DO;                                                   00267800
*              ANS('#Z'!!ZNDX!!'_XANSAREA_ADDR31='!!                    00267900
*                  'ADDR('!!XANSAREA!!');'!!                            00268000
*                  '/* ADDR31 XANSAREA CHAR(256) */')                   00268100
*                  NORESCAN COL(MACLMAR);                               00268200
*            END;                                                       00268300
*/*PI.L16 ALET(XANSAREA) CHAR(256)-----------------------------------*/ 00268400
*        IF ZXANSAREA^=''                                               00268500
*          THEN                                                         00268600
*            IF SYSASCE^='P'                                            00268700
*              THEN                                                     00268800
*                ANS('#Z'!!ZNDX!!'_XANSAREA_ALET='!!                    00268900
*                    'ALET('!!XANSAREA!!');'!!                          00269000
*                    '/* ALET XANSAREA CHAR(256) */')                   00269100
*                    NORESCAN COL(MACLMAR);                             00269200
*/*PI.L17 XANSLEN FIXED(31)------------------------------------------*/ 00269300
*        IF ZXANSLEN='INPUT' !                                          00269400
*           ZXANSLEN='INOUT'                                            00269500
*          THEN                                                         00269600
*            ANS('#Z'!!ZNDX!!'_XANSLEN='!!                              00269700
*                XANSLEN!!';'!!                                         00269800
*                '/* XANSLEN FIXED(31) */')                             00269900
*                NORESCAN COL(MACLMAR);                                 00270000
*/*PI.L21 XANSTOKN NAME CHAR(8)--------------------------------------*/ 00270100
*        IF ZXANSTOKN='INPUT' !                                         00270200
*           ZXANSTOKN='INOUT'                                           00270300
*          THEN                                                         00270400
*            ANS('#Z'!!ZNDX!!'_XANSTOKN='!!                             00270500
*                XANSTOKN!!';'!!                                        00270600
*                '/* XANSTOKN CHAR(8) */')                              00270700
*                NORESCAN COL(MACLMAR);                                 00270800
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00270900
*              IF NUMBER(RSNCODE)>0                                     00271000
*                THEN                                                   00271100
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00271200
*              IF NUMBER(RETCODE)>0                                     00271300
*                THEN                                                   00271400
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00271500
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00271600
*                    IF SYSAM64 = 'YES' THEN                            00271700
*              ANS('G64R01P=ADDR(#Z'!!ZNDX!!');'!!                      00271800
*                  '/* PARAMETER LIST */')                              00271900
*                  NORESCAN COL(MACLMAR);                               00272000
*                    ELSE                                               00272100
*              ANS('GPR01P=ADDR(#Z'!!ZNDX!!');'!!                       00272200
*                  '/* PARAMETER LIST */')                              00272300
*                  NORESCAN COL(MACLMAR);                               00272400
*              IF SYSASCE^='P'                                          00272500
*                THEN                                                   00272600
*                  ANS('SAR(GPR01P,ALET(#Z'!!ZNDX!!'));'!!              00272700
*                      '/* PARAMETER LIST AR */')                       00272800
*                      NORESCAN COL(MACLMAR);                           00272900
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00273000
     DCL EHAMAPS CHAR EXTERNAL;                                         00273100
     IF INDEX(EHAMAPS,'XM@')=0 THEN                                     00273200
        EHAMAPS=EHAMAPS!!'XM@,';                                        00273300
     ANS('PC(XM@(96)!130);') SKIP COL(5);                               00273400
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00273500
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00273600
*/*PO.L03 XQUERYLEN FIXED(31)----------------------------------------*/ 00273700
*              IF ZXQUERYLEN='OUTPUT' !                                 00273800
*                 ZXQUERYLEN='INOUT'                                    00273900
*                THEN                                                   00274000
*                  ANS(XQUERYLEN!!                                      00274100
*                      '=#Z'!!ZNDX!!'_XQUERYLEN;'!!                     00274200
*                      '/* XQUERYLEN FIXED(31) */')                     00274300
*                      NORESCAN COL(MACLMAR);                           00274400
*/*PO.L05 XANSTOKN CHAR(8)-------------------------------------------*/ 00274500
*              IF ZXANSTOKN='OUTPUT' !                                  00274600
*                 ZXANSTOKN='INOUT'                                     00274700
*                THEN                                                   00274800
*                  ANS(XANSTOKN!!                                       00274900
*                      '=#Z'!!ZNDX!!'_XANSTOKN;'!!                      00275000
*                      '/* XANSTOKN CHAR(8) */')                        00275100
*                      NORESCAN COL(MACLMAR);                           00275200
*/*PO.L08 XRETCODE RETURN CODE---------------------------------------*/ 00275300
*              IF NUMBER(RETCODE)>0                                     00275400
*                THEN                                                   00275500
*                    ANS(XRETCODE!!                                     00275600
*                     '=GPR15F; /* SET RETURN CODE */')                 00275700
*                      NORESCAN COL(MACLMAR);                           00275800
*/*PO.L09 XRSNCODE REASON CODE---------------------------------------*/ 00275900
*              IF NUMBER(RSNCODE)>0                                     00276000
*                THEN                                                   00276100
*                    ANS(XRSNCODE!!                                     00276200
*                     '=GPR00F; /* SET REASON CODE */')                 00276300
*                      NORESCAN COL(MACLMAR);                           00276400
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00276500
*              IF NUMBER(RSNCODE)>0                                     00276600
*                THEN                                                   00276700
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00276800
*              IF NUMBER(RETCODE)>0                                     00276900
*                THEN                                                   00277000
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00277100
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00277200
*      END;                                                             00277300
*/*PO.L13 IWM4QTNT USAGE INDICATOR-----------------------------------*/ 00277400
*  ZIWM4QTNT='YES';                          /* SET IWM4QTNT USED */    00277500
*/*PO.L15 END OF EXECUTABLE IWM4QTNT-PLISTVER MACRO------------------*/ 00277600
*  IF XMF^='L'                                                          00277700
*    THEN                                                               00277800
*      ANS('END; /* IWM4QTNT-PLISTVER */')                              00277900
*          NORESCAN COL(MACLMAR);                                       00278000
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00278100
*  ANS(MACCONC!!'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00278200
*/*PO.L17 END OF IWM4QTNT MACRO--------------------------------------*/ 00278300
*  ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                        00278400
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00278500
*/*******************************************************************/  00278600
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00278700
*/*******************************************************************/  00278800
*      END;                                                             00278900
*/*******************************************************************/  00279000
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00279100
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00279200
*/*******************************************************************/  00279300
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00279400
*    THEN                                                               00279500
*      DO;                                                              00279600
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00279700
*                                      DOUBLEWORD MULTIPLES        */   00279800
*/*******************************************************************/  00279900
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00280000
*/*******************************************************************/  00280100
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00280200
*          THEN                                                         00280300
*            DO;                                                        00280400
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00280500
*                THEN                                                   00280600
*                  DO;                                                  00280700
*                    ANS('?EPILOG                                       00280800
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00280900
*                    EHALIST=EHALIST!!',AMG,';                          00281000
*                  END;                                                 00281100
*            END;                                                       00281200
*/*******************************************************************/  00281300
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00281400
*/*******************************************************************/  00281500
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00281600
*          THEN                                                         00281700
*            DO;                                                        00281800
*              IF ZPRMMAX>EHAMAXLEN                                     00281900
*                THEN                                                   00282000
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00282100
*            END;                                                       00282200
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00282300
*          ANS('?EPILOG STRING('''!!ZPRM(ZI)!!''');')                   00282400
*              COL(MACLMAR);                                            00282500
*        END;                                                           00282600
*      END;                                                             00282700
*/*-----------------------------------------------------------------*/  00282800
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00282900
*/*        BY ?EPILOG                                               */  00283000
*/*-----------------------------------------------------------------*/  00283100
*        IF INDEX(EHAREGS,'01P')=0                                      00283200
*          THEN                                                         00283300
*            EHAREGS=EHAREGS!!'01P'; /* GPR01P                      */  00283400
*        IF INDEX(EHAREGS,'00F')=0                                      00283500
*          & NUMBER(RSNCODE)>0                                          00283600
*          THEN                                                         00283700
*            EHAREGS=EHAREGS!!'00F'; /* GPR00F                      */  00283800
*        IF INDEX(EHAREGS,'15F')=0                                      00283900
*          THEN                                                         00284000
*            EHAREGS=EHAREGS!!'15F'; /* GPR15F                      */  00284100
*        IF SYSALVL > 1 THEN                                            00284200
*        DO;                                                            00284300
*          IF INDEX(EHAREGS64,'00F')=0 THEN                             00284400
*            EHAREGS64 = EHAREGS64 !! '00F';                            00284500
*          IF INDEX(EHAREGS64,'01P')=0 THEN                             00284600
*            EHAREGS64 = EHAREGS64 !! '01P';                            00284700
*          IF INDEX(EHAREGS64,'15F')=0 THEN                             00284800
*            EHAREGS64 = EHAREGS64 !! '15F';                            00284900
*        END;                                                           00285000
*  RETURN CODE(ZMACRET);                                                00285100
*%END IWM4QTNT;                                                         00285200
