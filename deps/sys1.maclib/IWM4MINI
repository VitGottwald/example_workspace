*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4MINI                              -07/03/15-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitor environment initialization            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2004, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IWM4MINI allows the caller to supply MVS with some or all of   * 00002100
*      the work request attributes needed for the monitoring          * 00002200
*      environment.  The attributes include userid, transaction name, * 00002300
*      transaction class, source LU, and LU 6.2 token.                * 00002400
*                                                                     * 00002500
*      There are three types of monitoring environments available,    * 00002600
*      management monitoring environments, report-only monitoring     * 00002700
*      environments and buffer pool management only environments.     * 00002800
*      Management monitoring environments provide both performance    * 00002900
*      management and performance reporting.  Report-only monitoring  * 00003000
*      environments can be used for performance reporting only.       * 00003100
*      Buffer pool management only environments provide only buffer   * 00003200
*      pool performance management for enclaves.                      * 00003300
*                                                                     * 00003400
*      Use the REPORTONLY=YES parameter to specify the monitoring     * 00003500
*      environment will be used for reporting purposes only.          * 00003600
*                                                                     * 00003700
*      If you are invoking IWM4MINI with the REPORTONLY=YES           * 00003800
*      parameter, ASSOCIATE=ENCLAVE or ASSOCIATE=ADDRESS_SPACE must   * 00003900
*      be specified to associate the monitoring environment with an   * 00004000
*      enclave or an address space.                                   * 00004100
*                                                                     * 00004200
*      Use the BPMGMTONLY=YES parameter to specify the monitoring     * 00004300
*      environment will be used for buffer pool management for        * 00004400
*      enclaves only.                                                 * 00004500
*                                                                     * 00004600
*      If you are invoking IWM4MINI with the BPMGMTONLY=YES           * 00004700
*      parameter, ASSOCIATE=ENCLAVE must be specified to associate    * 00004800
*      the monitoring environment with an enclave.                    * 00004900
*                                                                     * 00005000
*      For management monitoring environments, where possible, you    * 00005100
*      should invoke IWM4MINI immediately following IWMCLSFY, and     * 00005200
*      pass the service class for the work request.  Without the      * 00005300
*      associated service class in the monitoring environment, delay  * 00005400
*      information cannot be accumulated and reported accurately.     * 00005500
*                                                                     * 00005600
*      IWM4MINI can be issued multiple times for the same work        * 00005700
*      request.  The first time you invoke IWM4MINI for a work        * 00005800
*      request, you must specify MODE=RESET, otherwise the previous   * 00005900
*      work request's attributes are associated with this work        * 00006000
*      request.  Any subsequent time you invoke IWM4MINI from the     * 00006100
*      same address space for the same monitoring token for the same  * 00006200
*      work request, specify MODE=RETAIN. If the caller subsystem     * 00006300
*      work manager consists of multiple address spaces (with         * 00006400
*      multiple monitoring tokens), the first time IWM4MINI is        * 00006500
*      invoked in each address space for a given work request must    * 00006600
*      specify MODE=RESET.  Any subsequent invocations for the same   * 00006700
*      work request should specify MODE=RETAIN.                       * 00006800
*                                                                     * 00006900
*      If you are invoking IWM4MINI for a management monitoring       * 00007000
*      environment, multiple times for the same work request, only    * 00007100
*      one of the invocations should specify EXSTARTTIME=exstarttime. * 00007200
*      It is up to you to decide at which point in the subsystem work * 00007300
*      manager's processing you consider the real execution start     * 00007400
*      time.                                                          * 00007500
*                                                                     * 00007600
*      Optionally with this macro, you can use the OWNER_TOKEN and    * 00007700
*      OWNER_DATA parameters to specify a token for the user/owner of * 00007800
*      the monitoring environment for your own use.                   * 00007900
*                                                                     * 00008000
*      Optionally with this macro, you can use the FROM_SUBSYSNM      * 00008100
*      parameter to specify the subsystem name from where a request   * 00008200
*      came in. This allows you to identify an address space as work  * 00008300
*      provider or consumer.                                          * 00008400
*                                                                     * 00008500
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00008600
*                                                                     * 00008700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00008800
*                                                                     * 00008900
*01* ENVIRONMENT:                                                     * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*      Dispatchable unit mode: Task or SRB mode.                      * 00009300
*                                                                     * 00009400
*      Cross Memory Mode: Any PASN, any HASN, any SASN.  If the key   * 00009500
*                        specified on IWM4MCRE was a user key (8-F),  * 00009600
*                        then primary addressability must be the same * 00009700
*                        as when IWM4MCRE was invoked.                * 00009800
*                                                                     * 00009900
*      Minimum authorization: Either problem state or supervisor      * 00010000
*                        state.  PSW key must either be 0 or match    * 00010100
*                        the value supplied on IWM4MCRE.              * 00010200
*                                                                     * 00010300
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00010400
*                        mode, code SYSSTATE AMODE64=YES before       * 00010500
*                        invoking this macro.                         * 00010600
*                                                                     * 00010700
*      ASC mode:         Primary.                                     * 00010800
*                                                                     * 00010900
*      Interrupt status: Enabled for I/O and external interrupts.     * 00011000
*                                                                     * 00011100
*      Locks:            Locked or unlocked                           * 00011200
*                                                                     * 00011300
*      Control parameters: Control parameters must be in the primary  * 00011400
*                        address space.                               * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*01* PROGRAMMING REQUIREMENTS:                                        * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*    1.  The macro IWMYCON must be included to use this macro.        * 00012200
*                                                                     * 00012300
*    2.  The macro IWMPB must be in the library concatenation, since  * 00012400
*        it is included by IWMYCON.                                   * 00012500
*                                                                     * 00012600
*    3.  Note that the high order halfword of 31-Bit register 0, and  * 00012700
*        the reason code variable when specified, may be non-zero and * 00012800
*        represents diagnostic data which is NOT part of the external * 00012900
*        interface.  The high order halfword should thus be excluded  * 00013000
*        from comparison with the reason code values described above. * 00013100
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00013200
*        be used for this purpose.                                    * 00013300
*                                                                     * 00013400
*    4.  For ASSEMBLER programmers an Assembler that supports the new * 00013500
*        z/Architecture instructions and the relative Branch (Jxx)    * 00013600
*        instructions (such as High-Level Assembler Release 4 or      * 00013700
*        higher) is required.                                         * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*01* RESTRICTIONS:                                                    * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*    1.  This macro may not be used prior to the completion of WLM    * 00014500
*        address space initialization.                                * 00014600
*                                                                     * 00014700
*    2.  This macro may only be used on z/Architecture machines.      * 00014800
*                                                                     * 00014900
*    3.  All parameter areas must reside in current primary, except   * 00015000
*        that the TCB (if specified) must reside in current home.     * 00015100
*                                                                     * 00015200
*    4.  Caller is responsible for error recovery.                    * 00015300
*                                                                     * 00015400
*    5.  Only limited checking is done against the input monitoring   * 00015500
*        token.                                                       * 00015600
*                                                                     * 00015700
*    6.  If the key specified on IWM4MCRE was a user key (8-F), then  * 00015800
*        the primary addressability must exist to the performance     * 00015900
*        block IWM4MCRE obtained.  This condition is satisfied by     * 00016000
*        ensuring that current primary matches primary at the time    * 00016100
*        that IWM4MCRE was invoked.  If this service is invoked in a  * 00016200
*        subspace, the condition may be satisfied by ensuring that    * 00016300
*        the performance block is shared with the base space.         * 00016400
*                                                                     * 00016500
*    7.  The caller must serialize to prevent any delay monitoring    * 00016600
*        services from being invoked concurrently for the environment * 00016700
*        represented by the monitoring token.                         * 00016800
*                                                                     * 00016900
*    8.  This macro may only be used on z/OS V1R13 or higher levels   * 00017000
*        for FROM_SUBSYSNM keyword.                                   * 00017100
*                                                                     * 00017200
*    9.  This macro may only be used on z/OS V2R1 or higher levels    * 00017300
*        for the MONTKN64 keyword.                                    * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*01* INPUT REGISTER INFORMATION:                                      * 00017800
*                                                                     * 00017900
*    Before issuing the IWM4MINI macro, the caller does not have to   * 00018000
*    place any information into any register unless using it in       * 00018100
*    register notation for a particular parameter, or using it as a   * 00018200
*    base register.                                                   * 00018300
*                                                                     * 00018400
*01* OUTPUT REGISTER INFORMATION:                                     * 00018500
*                                                                     * 00018600
*    When control returns to the caller, the GPRs contain:            * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*    REGISTER  CONTENTS                                               * 00019000
*                                                                     * 00019100
*    0         Reason code if GR15 return code is non-zero            * 00019200
*                                                                     * 00019300
*    1         Used as work registers by the system                   * 00019400
*                                                                     * 00019500
*    2-13      Unchanged                                              * 00019600
*                                                                     * 00019700
*    14        Used as work registers by the system                   * 00019800
*                                                                     * 00019900
*    15        Return code                                            * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*    When control returns to the caller, the ARs contain:             * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*    REGISTER  CONTENTS                                               * 00020700
*                                                                     * 00020800
*    0-1       Used as work registers by the system                   * 00020900
*                                                                     * 00021000
*    2-13      Unchanged                                              * 00021100
*                                                                     * 00021200
*    14-15     Used as work registers by the system                   * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*    Some callers depend on register contents remaining the same      * 00021700
*    before and after issuing a service.  If the system changes the   * 00021800
*    contents of registers on which the caller depends, the caller    * 00021900
*    must save them before issuing the service, and restore them      * 00022000
*    after the system returns control.                                * 00022100
*                                                                     * 00022200
*01* PERFORMANCE IMPLICATIONS:                                        * 00022300
*                                                                     * 00022400
*    None                                                             * 00022500
*                                                                     * 00022600
*01* SYNTAX:                                                          * 00022700
*                                                                     * 00022800
*Ýxlabel¨  IWM4MINI   Ý EWLM=»NOº¨                                    * 00022900
*                    Ð ,MONTKN=xmontkn                                * 00023000
*                    ¿ ,MONTKN64=xmontkn64                            * 00023100
*                    Ð ,MODE=RESET                                    * 00023200
*                    !   ÐÝ,DURATION=EXECUTION¨                       * 00023300
*                    !   ¿Ý,DURATION=BEGIN_TO_END¨                    * 00023400
*                    !   Ð ,DISPTYPE=TCB                              * 00023500
*                    !   !    Ý,TCB=»xtcb!NO_TCBº¨                    * 00023600
*                    !   ¿ ,DISPTYPE=SRB                              * 00023700
*                    !   Ð ,ARRIVALTIMEP=CURRENT                      * 00023800
*                    !   ¿ ,ARRIVALTIMEP=YES                          * 00023900
*                    !         ,ARRIVALTIME=xarrivaltime              * 00024000
*                    !    Ý,EWLM_PACORR                               * 00024100
*                    !                  =»xewlm_pacorr!NO_EWLM_PACORR * 00024200
*                    !                  º¨                            * 00024300
*                    !    Ý,EWLM_PACTKN                               * 00024400
*                    !                  =»xewlm_pactkn!NO_EWLM_PACTKN * 00024500
*                    !                  º¨                            * 00024600
*                    ¿ ,MODE=RETAIN                                   * 00024700
*                        ÐÝ,DURATION=PREV_VALUE¨                      * 00024800
*                        ÔÝ,DURATION=EXECUTION¨                       * 00024900
*                        ¿Ý,DURATION=BEGIN_TO_END¨                    * 00025000
*                        Ð ,DISPTYPE=SAVEDTYPE                        * 00025100
*                        Ô ,DISPTYPE=TCB                              * 00025200
*                        !    Ý,TCB=»xtcb!NO_TCBº¨                    * 00025300
*                        ¿ ,DISPTYPE=SRB                              * 00025400
*                    Ð ,CONTINUEP=YES                                 * 00025500
*                    !   Ð ,FROM=NONE                                 * 00025600
*                    !   Ô ,FROM=LOCALMVS                             * 00025700
*                    !   Ô ,FROM=SYSPLEX                              * 00025800
*                    !   ¿ ,FROM=NETWORK                              * 00025900
*                    ¿ ,CONTINUEP=NO                                  * 00026000
*                     Ý,OWNER_TOKEN=»xowner_token!NO_OWNER_TOKENº¨    * 00026100
*                     Ý,OWNER_DATA=»xowner_data!NO_OWNER_DATAº¨       * 00026200
*                     Ý,FROM_SUBSYSNM=»xfrom_subsysnm!NO_SUBSYSNMº¨   * 00026300
*                    ÐÝ,REPORTONLY=NO                                 * 00026400
*                    !   ÐÝ,BPMGMTONLY=NO                             * 00026500
*                    !   !   Ð ,EXSTARTTIMEP=NO                       * 00026600
*                    !   !   Ô ,EXSTARTTIMEP=CURRENT                  * 00026700
*                    !   !   ¿ ,EXSTARTTIMEP=YES                      * 00026800
*                    !   !         ,EXSTARTTIME                       * 00026900
*                    !   !                      =xexstarttime         * 00027000
*                    !   !    Ý,SERVCLS=»xservcls!NO_SERVCLSº¨¨       * 00027100
*                    !   ¿Ý,BPMGMTONLY=YES                            * 00027200
*                    !       Ô ,ASSOCIATE=ENCLAVE                     * 00027300
*                    !       !     ,ENCLAVETOKEN                      * 00027400
*                    !       !                   =xenclavetoken¨¨     * 00027500
*                    ¿Ý,REPORTONLY=YES                                * 00027600
*                        Ð ,ASSOCIATE=ENCLAVE                         * 00027700
*                        !     ,ENCLAVETOKEN=xenclavetoken            * 00027800
*                        ¿ ,ASSOCIATE=ADDRESS_SPACE                   * 00027900
*                              ,ASID=xasid¨                           * 00028000
*                    Ð ,SCOPE=SHARED                                  * 00028100
*                    ¿ ,SCOPE=SINGLE                                  * 00028200
*                     Ý,TRXNAME=»xtrxname!NO_TRXNAMEº¨                * 00028300
*                     Ý,USERID=»xuserid!NO_USERIDº¨                   * 00028400
*                     Ý,TRXCLASS=»xtrxclass!NO_TRXCLASSº¨             * 00028500
*                     Ý,TTRACETOKEN=»xttracetoken!NO_TTRACETOKENº¨    * 00028600
*                     Ý,SOURCELU=»xsourcelu!NO_SOURCELUº¨             * 00028700
*                     Ý,LU62TKN=»xlu62tkn!NO_LU62TKNº                 * 00028800
*                        Ð ,LU62TKN_FMT=LU_NO_CC_27                   * 00028900
*                        Ô ,LU62TKN_FMT=FULL_LU_NO_CC_27              * 00029000
*                        Ô ,LU62TKN_FMT=FULL_LU_0_CC_28               * 00029100
*                        Ô ,LU62TKN_FMT=FULL_LU_CC_36                 * 00029200
*                        ¿ ,LU62TKN_FMT=OTHER                         * 00029300
*                              ,LU62TKN_LEN=xlu62tkn_len¨             * 00029400
*                     Ý,RETCODE=xretcode¨                             * 00029500
*                     Ý,RSNCODE=xrsncode¨                             * 00029600
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*      Where:                                                         * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*      Ýxlabel¨                                                       * 00030300
*          is an optional symbol, starting in column 1, that is the   * 00030400
*          name on the IWM4MINI macro invocation.  The name must      * 00030500
*          conform to the rules for an ordinary assembler language    * 00030600
*          symbol.                                                    * 00030700
*          DEFAULT: No name.                                          * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*      ÝEWLM=»NOº¨                                                    * 00031300
*          is an optional keyword input which indicates if this work  * 00031400
*          manager intents to participate in cross platform           * 00031500
*          Enterprise Workload Management (eWLM).                     * 00031600
*          DEFAULT: NO                                                * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*          EWLM=NO                                                    * 00032000
*              The work manager interacts only with WLM and no        * 00032100
*              interaction with eWLM takes place.                     * 00032200
*              DEFAULT: NO                                            * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*      The following is a set of mutually exclusive keys.  This set   * 00033000
*      is required; only one key must be specified.                   * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*      MONTKN=xmontkn                                                 * 00033400
*          belongs to a set of mutually exclusive keys. It is the     * 00033500
*          name (RS-type), or address in register (2)-(12), of a 32   * 00033600
*          bit input which contains the delay monitoring token.       * 00033700
*                                                                     * 00033800
*      MONTKN64=xmontkn64                                             * 00033900
*          belongs to a set of mutually exclusive keys. It is the     * 00034000
*          name (RS-type), or address in register (2)-(12), of a 64   * 00034100
*          bit input which contains the long delay monitoring token.  * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*      End of a set of mutually exclusive required keys.              * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*      MODE=»RESET!RETAINº                                            * 00035000
*          is a required keyword input which indicates how previous   * 00035100
*          attributes established for a monitoring environment should * 00035200
*          be treated.  This does not refer to (or include)           * 00035300
*          attributes established in IWM4MCRE.                        * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*          MODE=RESET                                                 * 00035700
*              indicates that previous attributes should be           * 00035800
*              discarded.                                             * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*              ÝDURATION=»EXECUTION!BEGIN_TO_ENDº¨                    * 00036200
*                  is an optional keyword input which indicates the   * 00036300
*                  duration of the work request over which the delays * 00036400
*                  are to be represented.                             * 00036500
*                  DEFAULT: EXECUTION                                 * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                  ÝDURATION=EXECUTION¨                               * 00036900
*                      indicates that the monitoring environment will * 00037000
*                      reflect delays from the point where an         * 00037100
*                      application or transaction program is given    * 00037200
*                      control, i.e. the execution phase.  Typically  * 00037300
*                      a monitoring environment with this scope would * 00037400
*                      be passed to IWM4MNTF to pass the execution    * 00037500
*                      time for the work request.                     * 00037600
*                      DEFAULT: EXECUTION indicates that the          * 00037700
*                      monitoring environment will reflect delays     * 00037800
*                      from the point where an application or         * 00037900
*                      transaction program is given control, i.e. the * 00038000
*                      execution phase.                               * 00038100
*                                                                     * 00038200
*                  ÝDURATION=BEGIN_TO_END¨                            * 00038300
*                      indicates that the monitoring environment will * 00038400
*                      reflect delays from the arrival of the work    * 00038500
*                      request into the MVS sysplex until its         * 00038600
*                      completion. Ordinarily use of this option      * 00038700
*                      would be in close proximity to the time when   * 00038800
*                      the work request is classified.  Typically a   * 00038900
*                      monitoring environment with this duration      * 00039000
*                      would be passed to Iwmrpt to report the total  * 00039100
*                      elapsed time for the work request.             * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*              DISPTYPE=»TCB!SRBº                                     * 00039900
*                  is a required keyword input which describes the    * 00040000
*                  nature of the MVS dispatchable units which         * 00040100
*                  participate in processing work requests associated * 00040200
*                  with the delay monitoring environment established  * 00040300
*                  by this service.                                   * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*                  DISPTYPE=TCB                                       * 00040700
*                                                                     * 00040800
*                      indicates that work requests run in TCB mode   * 00040900
*                      under a TCB within the current home address    * 00041000
*                      space. Note that in cross-memory mode, this    * 00041100
*                      may be different from the current primary      * 00041200
*                      address space.                                 * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*                      ÝTCB=»xtcb!NO_TCBº¨                            * 00041600
*                          is the name (RS-type), or address in       * 00041700
*                          register (2)-(12), of an optional          * 00041800
*                          character input which defines the TCB      * 00041900
*                          within the current home address space      * 00042000
*                          which will serve the work request.  Note   * 00042100
*                          that this name is not the pointer to the   * 00042200
*                          TCB, but the name of the data area         * 00042300
*                          containing the TCB.  A typical invocation  * 00042400
*                          might replace xTCB with TCB.               * 00042500
*                                                                     * 00042600
*                          Ordinarily the input TCB specified should  * 00042700
*                          be the TCB under which the work request    * 00042800
*                          (e.g. transaction program) runs and under  * 00042900
*                          which the delay information is recorded    * 00043000
*                          (in spite of the fact that task switches   * 00043100
*                          may occur).                                * 00043200
*                          DEFAULT: NO_TCB indicates that no TCB is   * 00043300
*                          currently associated with the monitoring   * 00043400
*                          environment for this work request.         * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*                  DISPTYPE=SRB                                       * 00043900
*                                                                     * 00044000
*                      indicates that work requests run in SRB mode   * 00044100
*                      within the current home address space.         * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*              ARRIVALTIMEP=»CURRENT!YESº                             * 00044900
*                  is a required keyword input which indicates        * 00045000
*                  whether the work arrival time is passed.  This     * 00045100
*                  keyword is not applicable for report-only or       * 00045200
*                  bufferpool-only monitoring environments.           * 00045300
*                                                                     * 00045400
*                                                                     * 00045500
*                  ARRIVALTIMEP=CURRENT                               * 00045600
*                      indicates that the current time should be      * 00045700
*                      supplied by the service.                       * 00045800
*                                                                     * 00045900
*                  ARRIVALTIMEP=YES                                   * 00046000
*                      indicates that the work arrival time is        * 00046100
*                      passed.                                        * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*                      ARRIVALTIME=xarrivaltime                       * 00046500
*                          is the name (RS-type), or address in       * 00046600
*                          register (2)-(12), of a required 64 bit    * 00046700
*                          input which contains the work arrival time * 00046800
*                          in STCK format.                            * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*              ÝEWLM_PACORR=»xewlm_pacorr!NO_EWLM_PACORRº¨            * 00047800
*                  is the name (RS-type), or address in register      * 00047900
*                  (2)-(12), of an optional character input which     * 00048000
*                  contains the cross platform Enterprise Workload    * 00048100
*                  Management (EWLM) parent correlator associated     * 00048200
*                  with the work request.                             * 00048300
*                                                                     * 00048400
*                  NOTE:                                              * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                  o   If EWLM_PACORR is specified and the correlator * 00048800
*                      does not contain a valid ARM correlator,       * 00048900
*                      reason code IwmRsnCodeInvalidEWLMCorr is       * 00049000
*                      returned to the caller (see Return Codes       * 00049100
*                      section). If the corrrelator is a valid ARM    * 00049200
*                      correlator, but cannot be understood by EWLM   * 00049300
*                      (no EWLM format), it is silently ignored.      * 00049400
*                                                                     * 00049500
*                  o   Parameters EWLM_PACORR and EWLM_PACTKN are     * 00049600
*                      mutually exclusive.                            * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*                  DEFAULT: NO_EWLM_PACORR indicates that no EWLM     * 00050100
*                  parent correlator is passed.                       * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*              ÝEWLM_PACTKN=»xewlm_pactkn!NO_EWLM_PACTKNº¨            * 00050700
*                  is the name (RS-type), or address in register      * 00050800
*                  (2)-(12), of an optional character input which     * 00050900
*                  contains the cross platform Enterprise Workload    * 00051000
*                  Management (EWLM) parent correlator token          * 00051100
*                  associated with the work request.                  * 00051200
*                  If EWLM_PACTKN is specified and the correlator     * 00051300
*                  token does not contain a valid correlator token,   * 00051400
*                  reason code IwmRsnCodeInvalidEWLMCorr is returned  * 00051500
*                  to the caller (see Return Codes section).          * 00051600
*                  DEFAULT: NO_EWLM_PACTKN indicates that no EWLM     * 00051700
*                  correlator token is passed.                        * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*          MODE=RETAIN                                                * 00052200
*              indicates that previous attributes should be retained  * 00052300
*              unless explicitly specified.                           * 00052400
*                                                                     * 00052500
*                                                                     * 00052600
*              ÝDURATION=»PREV_VALUE!EXECUTION!BEGIN_TO_ENDº¨         * 00052700
*                  is an optional keyword input which indicates the   * 00052800
*                  duration of the work request over which the delays * 00052900
*                  are to be represented.                             * 00053000
*                  DEFAULT: PREV_VALUE                                * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*                  ÝDURATION=PREV_VALUE¨                              * 00053400
*                      indicates that the duration for delays has     * 00053500
*                      been specified on a previous invocation.       * 00053600
*                                                                     * 00053700
*                  ÝDURATION=EXECUTION¨                               * 00053800
*                      indicates that the monitoring environment will * 00053900
*                      reflect delays from the point where an         * 00054000
*                      application or transaction program is given    * 00054100
*                      control, i.e. the execution phase.  Typically  * 00054200
*                      a monitoring environment with this duration    * 00054300
*                      would be passed to IWM4MNTF to pass the        * 00054400
*                      execution time for the work request.           * 00054500
*                                                                     * 00054600
*                  ÝDURATION=BEGIN_TO_END¨                            * 00054700
*                      indicates that the monitoring environment will * 00054800
*                      reflect delays from the arrival of the work    * 00054900
*                      request into the MVS sysplex until its         * 00055000
*                      completion. Ordinarily use of this option      * 00055100
*                      would be in close proximity to the time when   * 00055200
*                      the work request is classified.  Typically a   * 00055300
*                      monitoring environment with this duration      * 00055400
*                      would be passed to Iwmrpt to report the total  * 00055500
*                      elapsed time for the work request.             * 00055600
*                                                                     * 00055700
*                                                                     * 00055800
*                                                                     * 00055900
*                                                                     * 00056000
*                                                                     * 00056100
*                                                                     * 00056200
*              DISPTYPE=»SAVEDTYPE!TCB!SRBº                           * 00056300
*                  is a required keyword input which describes the    * 00056400
*                  nature of the MVS dispatchable units which         * 00056500
*                  participate in processing work requests associated * 00056600
*                  with the delay monitoring environment established  * 00056700
*                  by this service.                                   * 00056800
*                                                                     * 00056900
*                                                                     * 00057000
*                  DISPTYPE=SAVEDTYPE                                 * 00057100
*                                                                     * 00057200
*                      indicates that the information saved when      * 00057300
*                      MODE(RESET) was used is still applicable.      * 00057400
*                                                                     * 00057500
*                  DISPTYPE=TCB                                       * 00057600
*                                                                     * 00057700
*                      indicates that work requests run in TCB mode   * 00057800
*                      under a TCB within the current home address    * 00057900
*                      space. Note that in cross-memory mode, this    * 00058000
*                      may be different from the current primary      * 00058100
*                      address space.                                 * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*                      ÝTCB=»xtcb!NO_TCBº¨                            * 00058500
*                          is the name (RS-type), or address in       * 00058600
*                          register (2)-(12), of an optional          * 00058700
*                          character input which defines the TCB      * 00058800
*                          within the current home address space      * 00058900
*                          which will serve the work request.  Note   * 00059000
*                          that this name is not the pointer to the   * 00059100
*                          TCB, but the name of the data area         * 00059200
*                          containing the TCB.  A typical invocation  * 00059300
*                          might replace xTCB with TCB.               * 00059400
*                                                                     * 00059500
*                          Ordinarily the input TCB specified should  * 00059600
*                          be the TCB under which the work request    * 00059700
*                          (e.g. transaction program) runs and under  * 00059800
*                          which the delay information is recorded    * 00059900
*                          (in spite of the fact that task switches   * 00060000
*                          may occur).                                * 00060100
*                          DEFAULT: NO_TCB indicates that no TCB is   * 00060200
*                          currently associated with the monitoring   * 00060300
*                          environment for this work request.         * 00060400
*                                                                     * 00060500
*                                                                     * 00060600
*                                                                     * 00060700
*                  DISPTYPE=SRB                                       * 00060800
*                                                                     * 00060900
*                      indicates that work requests run in SRB mode   * 00061000
*                      within the current home address space.         * 00061100
*                                                                     * 00061200
*                                                                     * 00061300
*                                                                     * 00061400
*                                                                     * 00061500
*                                                                     * 00061600
*                                                                     * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*      CONTINUEP=»YES!NOº                                             * 00062200
*          is a required keyword input which indicates whether it is  * 00062300
*          known (YES) or not (NO) that there exists another          * 00062400
*          monitoring environment for this same work request.         * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*          CONTINUEP=YES                                              * 00062800
*              indicates that the existence of a prior monitoring     * 00062900
*              environment for the work request is known.             * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*              FROM=»NONE!LOCALMVS!SYSPLEX!NETWORKº                   * 00063300
*                  is a required keyword input                        * 00063400
*                                                                     * 00063500
*                                                                     * 00063600
*                  FROM=NONE                                          * 00063700
*                      indicates that there is no other environment.  * 00063800
*                                                                     * 00063900
*                  FROM=LOCALMVS                                      * 00064000
*                      indicates that such an environment should      * 00064100
*                      exist on the current MVS.                      * 00064200
*                                                                     * 00064300
*                  FROM=SYSPLEX                                       * 00064400
*                      indicates that such an environment should      * 00064500
*                      exist in the current syplex, but is not        * 00064600
*                      expected to be on the current MVS image.       * 00064700
*                                                                     * 00064800
*                  FROM=NETWORK                                       * 00064900
*                      indicates that such an environment may exist,  * 00065000
*                      but is not expected to be in the current       * 00065100
*                      sysplex.                                       * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*                                                                     * 00065500
*                                                                     * 00065600
*                                                                     * 00065700
*          CONTINUEP=NO                                               * 00065800
*              indicates that it is not known whether there exists a  * 00065900
*              prior monitoring environment for the work request.  If * 00066000
*              MODE(RESET) is specified, no status is saved.  If      * 00066100
*              MODE(RETAIN) is specified, the existing status is      * 00066200
*              preserved.                                             * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*                                                                     * 00066600
*                                                                     * 00066700
*                                                                     * 00066800
*                                                                     * 00066900
*      ÝOWNER_TOKEN=»xowner_token!NO_OWNER_TOKENº¨                    * 00067000
*          is the name (RS-type), or address in register (2)-(12), of * 00067100
*          an optional 32 bit input which contains a token maintained * 00067200
*          by the user/owner of the monitoring environment.  The      * 00067300
*          format is undefined to MVS.                                * 00067400
*          DEFAULT: NO_OWNER_TOKEN indicates that no owner token is   * 00067500
*          provided.                                                  * 00067600
*                                                                     * 00067700
*          If MODE(RETAIN) is specified, NO_OWNER_TOKEN will preserve * 00067800
*          the existing owner token, if any.                          * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                                                                     * 00068300
*      ÝOWNER_DATA=»xowner_data!NO_OWNER_DATAº¨                       * 00068400
*          is the name (RS-type), or address in register (2)-(12), of * 00068500
*          an optional 32 bit input which contains data maintained by * 00068600
*          the user/owner of the monitoring environment.  The format  * 00068700
*          is undefined to MVS.                                       * 00068800
*          DEFAULT: NO_OWNER_DATA indicates that no owner data is     * 00068900
*          provided.                                                  * 00069000
*                                                                     * 00069100
*          If MODE(RETAIN) is specified, NO_OWNER_DATA will preserve  * 00069200
*          the existing owner data, if any.                           * 00069300
*                                                                     * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*                                                                     * 00069700
*      ÝFROM_SUBSYSNM=»xfrom_subsysnm!NO_SUBSYSNMº¨                   * 00069800
*          is the name (RS-type), or address in register (2)-(12), of * 00069900
*          an optional 8 character input which contains the subsystem * 00070000
*          name from where the request came in.                       * 00070100
*          DEFAULT: NO_SUBSYSNM indicates that no FROM_SUBSYSNM is    * 00070200
*          provided.                                                  * 00070300
*                                                                     * 00070400
*          If MODE(RETAIN) is specified, NO_SUBSYSNM will preserve    * 00070500
*          the existing FROM_SUBSYSNM, if any.                        * 00070600
*                                                                     * 00070700
*                                                                     * 00070800
*                                                                     * 00070900
*                                                                     * 00071000
*      ÝREPORTONLY=»NO!YESº                                           * 00071100
*          is an optional keyword input which indicates whether the   * 00071200
*          monitoring environment is for reporting purposes only      * 00071300
*          (YES) or not (NO).                                         * 00071400
*          DEFAULT: NO                                                * 00071500
*                                                                     * 00071600
*                                                                     * 00071700
*          ÝREPORTONLY=NO                                             * 00071800
*              indicates that the monitoring environment is not for   * 00071900
*              reporting purposes only.                               * 00072000
*                                                                     * 00072100
*                                                                     * 00072200
*              ÝBPMGMTONLY=»NO!YESº                                   * 00072300
*                  is an optional keyword input which indicates       * 00072400
*                  whether the monitoring environment is for          * 00072500
*                  bufferpool management purposes only (YES) or not   * 00072600
*                  (NO).                                              * 00072700
*                  DEFAULT: NO                                        * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*                  ÝBPMGMTONLY=NO                                     * 00073100
*                      indicates that the monitoring environment is   * 00073200
*                      not for bufferpool management purposes only.   * 00073300
*                                                                     * 00073400
*                                                                     * 00073500
*                      EXSTARTTIMEP=»NO!CURRENT!YESº                  * 00073600
*                          is a required keyword input which          * 00073700
*                          indicates whether the execution start time * 00073800
*                          value is passed.                           * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*                          EXSTARTTIMEP=NO                            * 00074200
*                              indicates that the execution start     * 00074300
*                              time value is not passed.              * 00074400
*                                                                     * 00074500
*                              If MODE(RETAIN) is specified,          * 00074600
*                              EXSTARTTIMEP(NO) will preserve the     * 00074700
*                              existing execution start time, if any. * 00074800
*                                                                     * 00074900
*                          EXSTARTTIMEP=CURRENT                       * 00075000
*                              indicates that the current time should * 00075100
*                              be supplied by the service.            * 00075200
*                                                                     * 00075300
*                          EXSTARTTIMEP=YES                           * 00075400
*                              indicates that the start execution     * 00075500
*                              time value is passed.                  * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*                              EXSTARTTIME=xexstarttime               * 00075900
*                                  is the name (RS-type), or address  * 00076000
*                                  in register (2)-(12), of a         * 00076100
*                                  required 64 bit input which        * 00076200
*                                  contains the start execution time  * 00076300
*                                  in STCK format.                    * 00076400
*                                                                     * 00076500
*                                                                     * 00076600
*                                                                     * 00076700
*                                                                     * 00076800
*                                                                     * 00076900
*                                                                     * 00077000
*                                                                     * 00077100
*                                                                     * 00077200
*                      ÝSERVCLS=»xservcls!NO_SERVCLSº¨¨               * 00077300
*                          is the name (RS-type), or address in       * 00077400
*                          register (2)-(12), of an optional 32 bit   * 00077500
*                          input which contains the service class     * 00077600
*                          token.                                     * 00077700
*                          DEFAULT: NO_SERVCLS indicates that no      * 00077800
*                          service class token was passed.            * 00077900
*                                                                     * 00078000
*                          If MODE(RETAIN) is specified, NO_SERVCLS   * 00078100
*                          will preserve the existing service class   * 00078200
*                          token, if any.                             * 00078300
*                                                                     * 00078400
*                                                                     * 00078500
*                                                                     * 00078600
*                  ÝBPMGMTONLY=YES                                    * 00078700
*                      indicates that the monitoring environment is   * 00078800
*                      for bufferpool management purposes only.       * 00078900
*                                                                     * 00079000
*                                                                     * 00079100
*                      ASSOCIATE=»ENCLAVE¨                            * 00079200
*                          is a required keyword input which          * 00079300
*                          indicates whether the monitoring           * 00079400
*                          environment should be associated only to   * 00079500
*                          an enclave                                 * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*                          ASSOCIATE=ENCLAVE                          * 00079900
*                              indicates that the monitoring          * 00080000
*                              environment should be associated to an * 00080100
*                              enclave.                               * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*                              ENCLAVETOKEN=xenclavetoken¨¨           * 00080500
*                                  is the name (RS-type), or address  * 00080600
*                                  in register (2)-(12), of a         * 00080700
*                                  required 64 bit input which        * 00080800
*                                  contains the enclave token.        * 00080900
*                                                                     * 00081000
*                                                                     * 00081100
*                                                                     * 00081200
*                                                                     * 00081300
*                                                                     * 00081400
*                                                                     * 00081500
*                                                                     * 00081600
*                                                                     * 00081700
*                                                                     * 00081800
*                                                                     * 00081900
*                                                                     * 00082000
*          ÝREPORTONLY=YES                                            * 00082100
*              indicates that the monitoring environment is for       * 00082200
*              reporting purposes only.                               * 00082300
*                                                                     * 00082400
*                                                                     * 00082500
*              ASSOCIATE=»ENCLAVE!ADDRESS_SPACEº¨                     * 00082600
*                  is a required keyword input which indicates        * 00082700
*                  whether the monitoring environment should be       * 00082800
*                  associated to an enclave or an address space.      * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*                  ASSOCIATE=ENCLAVE                                  * 00083200
*                      indicates that the monitoring environment      * 00083300
*                      should be associated to an enclave.            * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*                      ENCLAVETOKEN=xenclavetoken                     * 00083700
*                          is the name (RS-type), or address in       * 00083800
*                          register (2)-(12), of a required 64 bit    * 00083900
*                          input which contains the enclave token.    * 00084000
*                                                                     * 00084100
*                                                                     * 00084200
*                                                                     * 00084300
*                  ASSOCIATE=ADDRESS_SPACE                            * 00084400
*                      indicates that the monitoring environment      * 00084500
*                      should be associated to an address space.      * 00084600
*                                                                     * 00084700
*                                                                     * 00084800
*                      ASID=xasid¨                                    * 00084900
*                          is the name (RS-type), or address in       * 00085000
*                          register (2)-(12), of a required 16 bit    * 00085100
*                          input which contains the address space ID. * 00085200
*                                                                     * 00085300
*                                                                     * 00085400
*                                                                     * 00085500
*                                                                     * 00085600
*                                                                     * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*                                                                     * 00086000
*                                                                     * 00086100
*                                                                     * 00086200
*                                                                     * 00086300
*                                                                     * 00086400
*      SCOPE=»SHARED!SINGLEº                                          * 00086500
*          is a required keyword input which indicates the scope of   * 00086600
*          work passed.                                               * 00086700
*                                                                     * 00086800
*                                                                     * 00086900
*          SCOPE=SHARED                                               * 00087000
*              indicates that multiple work requests, possibly from   * 00087100
*              different service classes, could be described.         * 00087200
*                                                                     * 00087300
*          SCOPE=SINGLE                                               * 00087400
*              indicates that only a single work request is           * 00087500
*              described.                                             * 00087600
*                                                                     * 00087700
*                                                                     * 00087800
*                                                                     * 00087900
*                                                                     * 00088000
*                                                                     * 00088100
*                                                                     * 00088200
*      ÝTRXNAME=»xtrxname!NO_TRXNAMEº¨                                * 00088300
*          is the name (RS-type), or address in register (2)-(12), of * 00088400
*          an optional 8 character input which contains the           * 00088500
*          transaction name.  For environments where the transaction  * 00088600
*          name is available on some, but not all flows, provision of * 00088700
*          a data area initialized to all blanks is equivalent to     * 00088800
*          specification of NO_TRXNAME when MODE(RESET) is specified. * 00088900
*          Providing an area of all blanks when MODE(RETAIN) is       * 00089000
*          specified will cause that to be used.                      * 00089100
*          DEFAULT: NO_TRXNAME indicates that no transaction name was * 00089200
*          passed.                                                    * 00089300
*                                                                     * 00089400
*          If MODE(RETAIN) is specified, NO_TRXNAME will preserve the * 00089500
*          existing transaction name, if any.                         * 00089600
*                                                                     * 00089700
*                                                                     * 00089800
*                                                                     * 00089900
*                                                                     * 00090000
*      ÝUSERID=»xuserid!NO_USERIDº¨                                   * 00090100
*          is the name (RS-type), or address in register (2)-(12), of * 00090200
*          an optional 8 character input which contains the local     * 00090300
*          userid associated with the work request.  For environments * 00090400
*          where the user id is available on some, but not all flows, * 00090500
*          provision of a data area initialized to all blanks is      * 00090600
*          equivalent to specification of NO_USERID when MODE(RESET)  * 00090700
*          is specified.  Providing an area of all blanks when        * 00090800
*          MODE(RETAIN) is specified will cause that to be used.      * 00090900
*          DEFAULT: NO_USERID indicates that no userid was passed.    * 00091000
*                                                                     * 00091100
*          If MODE(RETAIN) is specified, NO_USERID will preserve the  * 00091200
*          existing user id, if any.                                  * 00091300
*                                                                     * 00091400
*                                                                     * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*      ÝTRXCLASS=»xtrxclass!NO_TRXCLASSº¨                             * 00091800
*          is the name (RS-type), or address in register (2)-(12), of * 00091900
*          an optional 8 character input which contains a class name  * 00092000
*          within a subsystem.  For environments where the            * 00092100
*          transaction class is available on some, but not all flows, * 00092200
*          provision of a data area initialized to all blanks is      * 00092300
*          equivalent to specification of NO_TRXCLASS when            * 00092400
*          MODE(RESET) is specified.  Providing an area of all blanks * 00092500
*          when MODE(RETAIN) is specified will cause that to be used. * 00092600
*          DEFAULT: NO_TRXCLASS indicates that no class name was      * 00092700
*          passed.                                                    * 00092800
*                                                                     * 00092900
*          If MODE(RETAIN) is specified, NO_TRXCLASS will preserve    * 00093000
*          the existing transaction class, if any.                    * 00093100
*                                                                     * 00093200
*                                                                     * 00093300
*                                                                     * 00093400
*                                                                     * 00093500
*      ÝTTRACETOKEN=»xttracetoken!NO_TTRACETOKENº¨                    * 00093600
*          is the name (RS-type), or address in register (2)-(12), of * 00093700
*          an optional 32 character input which contains the          * 00093800
*          transaction trace token.                                   * 00093900
*          DEFAULT: NO_TTRACETOKEN indicates that no transaction      * 00094000
*          trace token was passed.                                    * 00094100
*                                                                     * 00094200
*          If MODE(RETAIN) is specified, NO_TTRACETOKEN will preserve * 00094300
*          the existing transaction trace token, if any.              * 00094400
*                                                                     * 00094500
*                                                                     * 00094600
*                                                                     * 00094700
*                                                                     * 00094800
*      ÝSOURCELU=»xsourcelu!NO_SOURCELUº¨                             * 00094900
*          is the name (RS-type), or address in register (2)-(12), of * 00095000
*          an optional character input which contains the LU name     * 00095100
*          associated with the requestor. This may be the fully       * 00095200
*          qualified NETID.LUNAME, i.e.  network name (1-8 bytes),    * 00095300
*          followed by a period, followed by the LU name for the      * 00095400
*          requestor (1-8 bytes).  It may also be the 1-8 byte local  * 00095500
*          LU name, with no network qualifier.  The SOURCELU field    * 00095600
*          may be from 1-17 characters.  In the assembler form, the   * 00095700
*          macro will determine the length of the field as follows:   * 00095800
*                                                                     * 00095900
*                                                                     * 00096000
*          1.  if the field is specified by register notation, it     * 00096100
*              will be assumed to be 17 characters (padded with       * 00096200
*              blanks) and a full 17 characters will be copied.       * 00096300
*                                                                     * 00096400
*          2.  if the field is specified using an RS form name, then  * 00096500
*              the length will be determined using the L' assembler   * 00096600
*              function.  When the length is less than 17 characters, * 00096700
*              the macro will pad with blanks.  When the length is    * 00096800
*              greater than or equal to 17 characters, the macro will * 00096900
*              copy the first 17 bytes.                               * 00097000
*                                                                     * 00097100
*                                                                     * 00097200
*          In the PL/AS form, the rules for the PL/AS compiler will   * 00097300
*          determine when to pad with blanks, i.e. less than 17       * 00097400
*          characters implies padding, 17 or more implies a 17        * 00097500
*          character copy.                                            * 00097600
*                                                                     * 00097700
*          This is intended to be the same value as used in IWMCLSFY, * 00097800
*          and may be distinct from the LU name contained within the  * 00097900
*          LU 6.2 token.  For environments where the LU name may be   * 00098000
*          available on some, but not all flows, provision of a data  * 00098100
*          area initialized to all blanks is equivalent to            * 00098200
*          specification of NO_SOURCELU when MODE(RESET) is           * 00098300
*          specified.  Providing an area of all blanks when           * 00098400
*          MODE(RETAIN) is specified will cause that to be used.      * 00098500
*          DEFAULT: NO_SOURCELU indicates that no source LU name was  * 00098600
*          passed.                                                    * 00098700
*                                                                     * 00098800
*          If MODE(RETAIN) is specified, NO_SOURCELU will preserve    * 00098900
*          the existing source LU name, if any.                       * 00099000
*                                                                     * 00099100
*                                                                     * 00099200
*                                                                     * 00099300
*                                                                     * 00099400
*      ÝLU62TKN=»xlu62tkn!NO_LU62TKNº                                 * 00099500
*          is the name (RS-type), or address in register (2)-(12), of * 00099600
*          an optional character input which contains LU 6.2 token    * 00099700
*          for the work request.  This is not a SNA term, but it is   * 00099800
*          comprised of the following fields which are defined by SNA * 00099900
*          for the FMH5.                                              * 00100000
*                                                                     * 00100100
*                                                                     * 00100200
*          o   Logical Unit of Work Identifier length byte, in        * 00100300
*              binary, which may have the values 0 or 10-26 decimal   * 00100400
*              (inclusive)                                            * 00100500
*                                                                     * 00100600
*          o    Logical Unit of Work Identifier                       * 00100700
*                                                                     * 00100800
*                                                                     * 00100900
*              -   Length byte for the network qualified LU name, in  * 00101000
*                  binary, which may have the values 1-17 decimal     * 00101100
*                  (inclusive)                                        * 00101200
*                                                                     * 00101300
*              -   Network qualified LU network name (1-17 bytes)     * 00101400
*                                                                     * 00101500
*              -   Logical Unit of Work Instance Number, in binary (6 * 00101600
*                  bytes)                                             * 00101700
*                                                                     * 00101800
*              -   Logical Unit of Work Sequence Number, in binary (2 * 00101900
*                  bytes)                                             * 00102000
*                                                                     * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*          o   Conversation Correlator Field (0 to 9 bytes)           * 00102400
*                                                                     * 00102500
*                                                                     * 00102600
*              -   Length byte for the Conversation Correlator, in    * 00102700
*                  binary, which may have the values 0-8 decimal      * 00102800
*                  (inclusive)                                        * 00102900
*                                                                     * 00103000
*              -   Conversation Correlator of the sending transaction * 00103100
*                  (1-8 bytes)                                        * 00103200
*                                                                     * 00103300
*                                                                     * 00103400
*                                                                     * 00103500
*                                                                     * 00103600
*                                                                     * 00103700
*          The Conversation Correlator Field (which includes its      * 00103800
*          length byte) may be dropped when its length byte is 0.     * 00103900
*          DEFAULT: NO_LU62TKN indicates that no LU 6.2 token was     * 00104000
*          passed.                                                    * 00104100
*                                                                     * 00104200
*          If MODE(RETAIN) is specified, NO_LU62TKN will preserve the * 00104300
*          existing LU6.2 token, if any.                              * 00104400
*                                                                     * 00104500
*                                                                     * 00104600
*          LU62TKN_FMT=»LU_NO_CC_27!FULL_LU_NO_CC_27!FULL_LU_0_CC_28! * 00104700
*              FULL_LU_CC_36!OTHERº                                   * 00104800
*              is a required keyword input which indicates the        * 00104900
*              format/length of the LU 6.2 token.                     * 00105000
*                                                                     * 00105100
*                                                                     * 00105200
*              LU62TKN_FMT=LU_NO_CC_27                                * 00105300
*                  indicates that a fixed length token of 27 bytes is * 00105400
*                  provided, with no conversation correlator (not     * 00105500
*                  even its length byte).  The LU name may be 1-17    * 00105600
*                  bytes. Bytes at the end of the token are padded    * 00105700
*                  with hexadecimal zeros, if necessary, to form a    * 00105800
*                  full 27 bytes.                                     * 00105900
*                                                                     * 00106000
*              LU62TKN_FMT=FULL_LU_NO_CC_27                           * 00106100
*                  indicates that the fully qualified LU name (17     * 00106200
*                  bytes) is used, but no conversation correlator     * 00106300
*                  (not even its length byte) is provided.  This      * 00106400
*                  format is architected to be 27 bytes long.         * 00106500
*                                                                     * 00106600
*              LU62TKN_FMT=FULL_LU_0_CC_28                            * 00106700
*                  indicates that the fully qualified LU name (17     * 00106800
*                  bytes) is used, and the conversation correlator    * 00106900
*                  length byte is present and has the value 0.  This  * 00107000
*                  format is architected to be 28 bytes long.         * 00107100
*                                                                     * 00107200
*              LU62TKN_FMT=FULL_LU_CC_36                              * 00107300
*                  indicates that the fully qualified LU name (17     * 00107400
*                  bytes) is used, and the conversation correlator is * 00107500
*                  provided with a length of 8 (maximum allowed).     * 00107600
*                  This format is architected to be 36 bytes long.    * 00107700
*                                                                     * 00107800
*              LU62TKN_FMT=OTHER                                      * 00107900
*                  indicates that the format of the LU 6.2 token is   * 00108000
*                  different from those specified by the remaining    * 00108100
*                  keywords.                                          * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*                  LU62TKN_LEN=xlu62tkn_len¨                          * 00108500
*                      is the name (RS-type), or address in register  * 00108600
*                      (2)-(12), of a required byte input which       * 00108700
*                      contains the length of the LU62 token.  Valid  * 00108800
*                      values are in the range 1-36 decimal           * 00108900
*                      (inclusive).                                   * 00109000
*                                                                     * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                                                                     * 00109400
*                                                                     * 00109500
*                                                                     * 00109600
*                                                                     * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*                                                                     * 00110000
*      ÝRETCODE=xretcode¨                                             * 00110100
*          is the name (RS-type) of an optional fullword output       * 00110200
*          variable, or register (2)-(12) or (15), into which the     * 00110300
*          return code is to be copied from GPR 15.  If you specify   * 00110400
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00110500
*          the value will be left in GPR 15.                          * 00110600
*                                                                     * 00110700
*                                                                     * 00110800
*                                                                     * 00110900
*                                                                     * 00111000
*      ÝRSNCODE=xrsncode¨                                             * 00111100
*          is the name (RS-type) of an optional fullword output       * 00111200
*          variable into which the reason code is to be copied from   * 00111300
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00111400
*          R0 (within or without parentheses), the value will be left * 00111500
*          in GPR 0.                                                  * 00111600
*                                                                     * 00111700
*                                                                     * 00111800
*                                                                     * 00111900
*                                                                     * 00112000
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00112100
*          is an optional byte input decimal value in the "0-2" range * 00112200
*          that specifies the macro version.  PLISTVER determines     * 00112300
*          which parameter list is generated.  The macro keys         * 00112400
*          associated with each supported version of the macro are    * 00112500
*          listed in MACRO USAGE NOTE 2.  Note that MAX may be        * 00112600
*          specified instead of a number, and the parameter list will * 00112700
*          be of the largest size currently supported. This size may  * 00112800
*          grow from release to release (thus possibly affecting the  * 00112900
*          amount of storage needed by your program).                 * 00113000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00113100
*          default is the lowest version which allows all of the      * 00113200
*          parameters specified on the invocation to be processed.    * 00113300
*                                                                     * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*01* ABEND CODES:  None.                                              * 00113700
*                                                                     * 00113800
*01* RETURN CODES:                                                    * 00113900
*                                                                     * 00114000
*                                                                     * 00114100
*            0    IwmRetCodeOk: Successful completion.                * 00114200
*                                                                     * 00114300
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00114400
*                 conditions noted.                                   * 00114500
*                                                                     * 00114600
*                                                                     * 00114700
*                                                                     * 00114800
*                 HEX REASON  MEANING/ACTION                          * 00114900
*                 CODE                                                * 00115000
*                                                                     * 00115100
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 00115200
*                                                                     * 00115300
*                             Meaning:  Monitoring token indicates    * 00115400
*                             that no monitoring environment exists.  * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*                                                                     * 00115900
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00116000
*                 environment or parameters                           * 00116100
*                                                                     * 00116200
*                                                                     * 00116300
*                                                                     * 00116400
*                 HEX REASON  MEANING/ACTION                          * 00116500
*                 CODE                                                * 00116600
*                                                                     * 00116700
*                 xxxx081E    Name: IwmRsnCodeBadLU62TknLen           * 00116800
*                                                                     * 00116900
*                             Meaning:  The length byte of the LU62   * 00117000
*                             token has an invalid value. Only values * 00117100
*                             1-36 (decimal) are valid.               * 00117200
*                                                                     * 00117300
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv:              * 00117400
*                                                                     * 00117500
*                             Meaning:  Monitoring environment does   * 00117600
*                             not pass short form verification.       * 00117700
*                                                                     * 00117800
*                 xxxx0894    Name: IwmRsnCodeInvalidEWLMCorr         * 00117900
*                                                                     * 00118000
*                             Meaning: Passed correlator information  * 00118100
*                             (EWLM_PACORR or EWLM_PACTKN) does not   * 00118200
*                             pass validity checking, that means:     * 00118300
*                             the architected ARM correlator length   * 00118400
*                             field in the first two Bytes of the     * 00118500
*                             correlator (token) is either less than  * 00118600
*                             4 ('0004'x) or gretater than 512        * 00118700
*                             ('0200'x).                              * 00118800
*                                                                     * 00118900
*                             Action: Check the specification of the  * 00119000
*                             correlator information.                 * 00119100
*                                                                     * 00119200
*                 xxxx0895    Name: IwmRsnCodeEWLMServNotEnabled      * 00119300
*                                                                     * 00119400
*                             Meaning: Service is not enabled because * 00119500
*                             the Monitoring Environment was not      * 00119600
*                             created with EWLM=YES (either on        * 00119700
*                             IWM4CON or IWM4MCRE).                   * 00119800
*                                                                     * 00119900
*                             Action: Specify the parameter           * 00120000
*                             EWLM_PACORR or EWLM_PACTKN only when    * 00120100
*                             the Monitoring Environment was created  * 00120200
*                             with EWLM=YES (either on IWM4CON or     * 00120300
*                             IWM4MCRE).                              * 00120400
*                                                                     * 00120500
*                                                                     * 00120600
*                                                                     * 00120700
*                                                                     * 00120800
*            C    IwmRetCodeEnvError:  Environmental error            * 00120900
*                                                                     * 00121000
*                                                                     * 00121100
*                                                                     * 00121200
*                 HEX REASON  MEANING/ACTION                          * 00121300
*                 CODE                                                * 00121400
*                                                                     * 00121500
*                 xxxx0C07    Name: IwmRsnCodeNoArrTime:              * 00121600
*                                                                     * 00121700
*                             Meaning:  No arrival time was supplied  * 00121800
*                             to the service and STCK gave a non-zero * 00121900
*                             condition code.                         * 00122000
*                                                                     * 00122100
*                 xxxx0C08    Name: IwmRsnCodeNoExTime:               * 00122200
*                                                                     * 00122300
*                             Meaning:  No execution start time was   * 00122400
*                             supplied to the service and STCK gave a * 00122500
*                             non-zero condition code.                * 00122600
*                                                                     * 00122700
*                                                                     * 00122800
*                                                                     * 00122900
*                                                                     * 00123000
*                                                                     * 00123100
*                                                                     * 00123200
*                                                                     * 00123300
*01* REASON CODES:                                                    * 00123400
*                                                                     * 00123500
*       A unique reason code will be returned whenever the return     * 00123600
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00123700
*       under their corresponding return code.  Reason code and       * 00123800
*       return code constants are defined within IWMYCON.  Note that  * 00123900
*       the high order halfword of register 0, and the reason code    * 00124000
*       variable when specified, may be non-zero and represents       * 00124100
*       diagnostic data which is NOT part of the external interface.  * 00124200
*       The high order halfword should thus be excluded from          * 00124300
*       comparison with the reason code values described above.  The  * 00124400
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00124500
*       used for this purpose.                                        * 00124600
*                                                                     * 00124700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00124800
*                                                                     * 00124900
*02*   PROCESSOR:  ASSEM                                              * 00125000
*                                                                     * 00125100
*01* COMPONENT:  SCWLM                                                * 00125200
*                                                                     * 00125300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00125400
*                                                                     * 00125500
*01* EXAMPLES:                                                        * 00125600
*      IWM4MINI MONTKN=(R9),ARRIVALTIMEP=YES,                         * 00125700
*            ARRIVALTIME=(R3),EXSTARTTIMEP=YES,                       * 00125800
*            EXSTARTTIME=(R4),DISPTYPE=TCB,TCB=(R7),                  * 00125900
*            SCOPE=SINGLE,TRXNAME=WLTRXNAME,SOURCELU=SOURCELU,        * 00126000
*            CONTINUEP=YES,LU62TKN_FMT=OTHER,LU62TKN_LEN=LU62TKNLEN,  * 00126100
*            LU62TKN=LU62TKN1,MODE=RESET,FROM=NONE,                   * 00126200
*            REPORTONLY=NO,RETCODE=RCODE,RSNCODE=RSN                  * 00126300
*                                                                     * 00126400
*01* MACRO USAGE NOTES:                                               * 00126500
*                                                                     * 00126600
*                                                                     * 00126700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00126800
*        global macro variable.  Any value other than 'NO' will       * 00126900
*        result in the macro expansion being printed.  The default is * 00127000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00127100
*        variable should be set.                                      * 00127200
*                                                                     * 00127300
*                    GBLC &ZPRINT                                     * 00127400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00127500
*                                                                     * 00127600
*                                                                     * 00127700
*    2.  The IWM4MINI macro supports multiple versions. The macro key * 00127800
*        list  below  contains the version level in which the key was * 00127900
*        first  introduced.  Positionals  are  identified by the word * 00128000
*        'Positional'  followed by the numeric value of its position. * 00128100
*        Nested  positionals  are  preceded  by their outer key.  The * 00128200
*        lowest value represents the original version and the highest * 00128300
*        value  represents  the  most  recent version of the IWM4MINI * 00128400
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00128500
*        least  as high as the highest version number of all the keys * 00128600
*        being used.                                                  * 00128700
*                                                                     * 00128800
*        VERSION   KEY                                                * 00128900
*                                                                     * 00129000
*              0      ARRIVALTIME                                     * 00129100
*                     ARRIVALTIMEP                                    * 00129200
*                     ASID                                            * 00129300
*                     ASSOCIATE                                       * 00129400
*                     CONTINUEP                                       * 00129500
*                     DISPTYPE                                        * 00129600
*                     DURATION                                        * 00129700
*                     ENCLAVETOKEN                                    * 00129800
*                     EWLM                                            * 00129900
*                     EXSTARTTIME                                     * 00130000
*                     EXSTARTTIMEP                                    * 00130100
*                     FROM                                            * 00130200
*                     LU62TKN                                         * 00130300
*                     LU62TKN_FMT                                     * 00130400
*                     LU62TKN_LEN                                     * 00130500
*                     MODE                                            * 00130600
*                     MONTKN                                          * 00130700
*                     OWNER_DATA                                      * 00130800
*                     OWNER_TOKEN                                     * 00130900
*                     REPORTONLY                                      * 00131000
*                     SCOPE                                           * 00131100
*                     SERVCLS                                         * 00131200
*                     SOURCELU                                        * 00131300
*                     TCB                                             * 00131400
*                     TRXCLASS                                        * 00131500
*                     TRXNAME                                         * 00131600
*                     TTRACETOKEN                                     * 00131700
*                     USERID                                          * 00131800
*              1      BPMGMTONLY                                      * 00131900
*                     EWLM_PACORR                                     * 00132000
*                     EWLM_PACTKN                                     * 00132100
*              2      FROM_SUBSYSNM                                   * 00132200
*                     MONTKN64                                        * 00132300
*                                                                     * 00132400
*                                                                     * 00132500
*                                                                     * 00132600
*01* CHANGE ACTIVITY:                                                 * 00132700
*                                                                     * 00132800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00132900
*                                                                     * 00133000
*    $L0=WLMP64W  HBB7709 030325 3241DW:  WLM 64-bit support copied   * 00133100
*                                         from IWMMINIT with flag L5  * 00133200
*    $L1=PJK0688  HBB7709 030722 3241DW:  High order bit of MONTKN    * 00133300
*                                         removed in 64bit addressing * 00133400
*                                         mode                        * 00133500
*    $P1=ME01176  HBB7720 040713 3241DW:  Doc changes only.  Service  * 00133600
*                                         names changed to reflect    * 00133700
*                                         the 64bit name.             * 00133800
*    $P2=WLMPERS  HBB7730 041202 3241GB:  EWLM Support. Introduced    * 00133900
*                                         new parameters EWLM_PACORR  * 00134000
*                                         and EWLM_PACTKN             * 00134100
*    $P3=WLMPDBM  HBB7730 051117 3241AA:  Buffer Pool Management      * 00134200
*                                         support. Introduced new     * 00134300
*                                         parameter BPMGMTONLY        * 00134400
*                                         Recompiled for new          * 00134500
*                                         AMG-version                 * 00134600
*    $P4=LEWLTM   HBB7750 070315 3241GB:  Fix incorrect usage of R0   * 00134700
*                                         and R15 and PB_POINTER in   * 00134800
*                                         64BIT AMODE, removed        * 00134900
*                                         support for PB versions 1 & * 00135000
*                                         2, change ASSEMBLER code to * 00135100
*                                         relative branches.          * 00135200
*    $P5=OA38477  HBB7780 120126 3241IS:  WLM API for subsystems to   * 00135300
*                                         identify work provider and  * 00135400
*                                         consumer                    * 00135500
*    $L2=LPBABV   HBB7790 111021 3241AH:  PB above 2G                 * 00135600
*    $P6=ME24923  HBB7790 121016 3241AH:  Fix SYSAM64 logic           * 00135700
*    $P7=ME25540  HBB7790 130122 3241AH:  Assembler AMODE switch base * 00135800
*                                         register usage incorrect    * 00135900
*    $P8=OA45023  HBB7790 140422 3241AK:  MONTKN has the wrong        * 00136000
*                                         parameterlist version.      * 00136100
****** END OF SPECIFICATIONS *****************************************/ 00136200
*/********************************************************************* 00136300
         MACRO                                                          00136400
&XLABEL  IWM4MINI &EWLM=,&MONTKN=,&MONTKN64=,&MODE=,&DURATION=,        *00136500
               &DISPTYPE=,&TCB=,&ARRIVALTIMEP=,&ARRIVALTIME=,          *00136600
               &EWLM_PACORR=,&EWLM_PACTKN=,&CONTINUEP=,&FROM=,         *00136700
               &OWNER_TOKEN=,&OWNER_DATA=,&FROM_SUBSYSNM=,&REPORTONLY=,*00136800
               &BPMGMTONLY=,&EXSTARTTIMEP=,&EXSTARTTIME=,&SERVCLS=,    *00136900
               &ASSOCIATE=,&ENCLAVETOKEN=,&ASID=,&SCOPE=,&TRXNAME=,    *00137000
               &USERID=,&TRXCLASS=,&TTRACETOKEN=,&SOURCELU=,&LU62TKN=, *00137100
               &LU62TKN_FMT=,&LU62TKN_LEN=,&RETCODE=,&RSNCODE=,        *00137200
               &PLISTVER=                                               00137300
.*                                                                      00137400
*                      MACDATE -07/03/15-<2>                            00137500
.*                                                                      00137600
.*******************************************************************    00137700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00137800
.*******************************************************************    00137900
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00138000
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00138100
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00138200
.*                                                                      00138300
                      GBLC  &ZIWM4MINI  YES=MACRO USED AT LEAST ONCE    00138400
.*******************************************************************    00138500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00138600
.*******************************************************************    00138700
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00138800
                      LCLC  &ZCNDX      SYSNDX CHARACTERS               00138900
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00139000
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00139100
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00139200
                      LCLA  &ZAWRK      USED AS A WORK AREA             00139300
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00139400
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00139500
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00139600
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00139700
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00139800
                      LCLC  &ZMAC_G     "G" or null                     00139900
&ZMAC_G               SETC  ''                                          00140000
                      LCLC  &ZMAC_LR                                    00140100
&ZMAC_LR              SETC  'LR'                                        00140200
                      LCLC  &ZMAC_L                                     00140300
&ZMAC_L               SETC  'L'                                         00140400
                      LCLC  &ZMAC_ST                                    00140500
&ZMAC_ST              SETC  'ST'                                        00140600
                      LCLC  &ZMAC_LLGT                                  00140700
&ZMAC_LLGT            SETC  'L'                                         00140800
                      LCLC  &ZMAC_LGR                                   00140900
&ZMAC_LGR             SETC  'LR'                                        00141000
                      LCLC  &ZMAC_LG                                    00141100
&ZMAC_LG              SETC  'L'                                         00141200
                      LCLC  &ZMAC_STG                                   00141300
&ZMAC_STG             SETC  'ST'                                        00141400
                      LCLA  &ZMACRET    MACRO RETURN CODE               00141500
&ZMACRET              SETA  0           ASSUME NO ERRORS                00141600
.*                                                                      00141700
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00141800
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00141900
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00142000
                      LCLC  &ZENDBASEPL         End of base PL          00142100
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           00142200
.*******************************************************************    00142300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00142400
.*******************************************************************    00142500
                      LCLA  &ZI         INDEX FOR ARRAY                 00142600
                      LCLA  &ZJ         INDEX FOR PARMS                 00142700
                      LCLA  &ZK         INDEX FOR PARSE                 00142800
                      LCLA  &ZLO        LOW RANGE VALUE                 00142900
                      LCLA  &ZHI        HIGH RANGE VALUE                00143000
                      LCLC  &ZW         WORK AREA FOR PARM              00143100
.*******************************************************************    00143200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00143300
.*******************************************************************    00143400
                      LCLC  &XEWLM      ++ VALUE                        00143500
                      LCLC  &XUSEDMONTKNKEY     ++ NAME                 00143600
                      LCLC  &XMONTKN    ++ NAME                         00143700
                      LCLC  &XMONTKN64  ++ NAME                         00143800
                      LCLC  &XMODE      ++ VALUE                        00143900
                      LCLC  &XDURATION  ++ VALUE                        00144000
                      LCLC  &XDISPTYPE  ++ VALUE                        00144100
                      LCLC  &XTCB       ++ NAME                         00144200
                      LCLC  &XARRIVALTIMEP      ++ VALUE                00144300
                      LCLC  &XARRIVALTIME       ++ NAME                 00144400
                      LCLC  &XEWLM_PACORR       ++ NAME                 00144500
                      LCLC  &XEWLM_PACTKN       ++ NAME                 00144600
                      LCLC  &XCONTINUEP         ++ VALUE                00144700
                      LCLC  &XFROM      ++ VALUE                        00144800
                      LCLC  &XOWNER_TOKEN       ++ NAME                 00144900
                      LCLC  &XOWNER_DATA        ++ NAME                 00145000
                      LCLC  &XFROM_SUBSYSNM     ++ NAME                 00145100
                      LCLC  &XREPORTONLY        ++ VALUE                00145200
                      LCLC  &XBPMGMTONLY        ++ VALUE                00145300
                      LCLC  &XEXSTARTTIMEP      ++ VALUE                00145400
                      LCLC  &XEXSTARTTIME       ++ NAME                 00145500
                      LCLC  &XSERVCLS   ++ NAME                         00145600
                      LCLC  &XASSOCIATE         ++ VALUE                00145700
                      LCLC  &XENCLAVETOKEN      ++ NAME                 00145800
                      LCLC  &XASID      ++ NAME                         00145900
                      LCLC  &XSCOPE     ++ VALUE                        00146000
                      LCLC  &XTRXNAME   ++ NAME                         00146100
                      LCLC  &XUSERID    ++ NAME                         00146200
                      LCLC  &XTRXCLASS  ++ NAME                         00146300
                      LCLC  &XTTRACETOKEN       ++ NAME                 00146400
                      LCLC  &XSOURCELU  ++ NAME                         00146500
                      LCLC  &XLU62TKN   ++ NAME                         00146600
                      LCLC  &XLU62TKN_FMT       ++ VALUE                00146700
                      LCLC  &XLU62TKN_LEN       ++ NAME                 00146800
                      LCLC  &XRETCODE   ++ NAME                         00146900
                      LCLC  &XRSNCODE   ++ NAME                         00147000
                      LCLA  &XPLISTVER  ++ VALUE                        00147100
.*******************************************************************    00147200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00147300
.*******************************************************************    00147400
                      LCLC  &ZXEWLM     ++ INPUT VALUE                  00147500
                      LCLC  &ZXUSEDMONTKNKEY    ++ INPUT NAME           00147600
                      LCLC  &ZXMONTKN   ++ INPUT NAME                   00147700
                      LCLC  &ZXMONTKN64         ++ INPUT NAME           00147800
                      LCLC  &ZXMODE     ++ INPUT VALUE                  00147900
                      LCLC  &ZXDURATION         ++ INPUT VALUE          00148000
                      LCLC  &ZXDISPTYPE         ++ INPUT VALUE          00148100
                      LCLC  &ZXTCB      ++ INPUT NAME                   00148200
                      LCLC  &ZXARRIVALTIMEP     ++ INPUT VALUE          00148300
                      LCLC  &ZXARRIVALTIME      ++ INPUT NAME           00148400
                      LCLC  &ZXEWLM_PACORR      ++ INPUT NAME           00148500
                      LCLC  &ZXEWLM_PACTKN      ++ INPUT NAME           00148600
                      LCLC  &ZXCONTINUEP        ++ INPUT VALUE          00148700
                      LCLC  &ZXFROM     ++ INPUT VALUE                  00148800
                      LCLC  &ZXOWNER_TOKEN      ++ INPUT NAME           00148900
                      LCLC  &ZXOWNER_DATA       ++ INPUT NAME           00149000
                      LCLC  &ZXFROM_SUBSYSNM    ++ INPUT NAME           00149100
                      LCLC  &ZXREPORTONLY       ++ INPUT VALUE          00149200
                      LCLC  &ZXBPMGMTONLY       ++ INPUT VALUE          00149300
                      LCLC  &ZXEXSTARTTIMEP     ++ INPUT VALUE          00149400
                      LCLC  &ZXEXSTARTTIME      ++ INPUT NAME           00149500
                      LCLC  &ZXSERVCLS  ++ INPUT NAME                   00149600
                      LCLC  &ZXASSOCIATE        ++ INPUT VALUE          00149700
                      LCLC  &ZXENCLAVETOKEN     ++ INPUT NAME           00149800
                      LCLC  &ZXASID     ++ INPUT NAME                   00149900
                      LCLC  &ZXSCOPE    ++ INPUT VALUE                  00150000
                      LCLC  &ZXTRXNAME  ++ INPUT NAME                   00150100
                      LCLC  &ZXUSERID   ++ INPUT NAME                   00150200
                      LCLC  &ZXTRXCLASS         ++ INPUT NAME           00150300
                      LCLC  &ZXTTRACETOKEN      ++ INPUT NAME           00150400
                      LCLC  &ZXSOURCELU         ++ INPUT NAME           00150500
                      LCLC  &ZXLU62TKN  ++ INPUT NAME                   00150600
                      LCLC  &ZXLU62TKN_FMT      ++ INPUT VALUE          00150700
                      LCLC  &ZXLU62TKN_LEN      ++ INPUT NAME           00150800
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00150900
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  00151000
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          00151100
.********************************************************************   00151200
.***AC.PLV01  PROCESS PLISTVER                                      *   00151300
.********************************************************************   00151400
&XPLISTVER      SETA  0                                                 00151500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00151600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00151700
&XPLISTVER      SETA  2                                                 00151800
.ZPLV0          ANOP  ,                                                 00151900
.*                                                                      00152000
                AIF   ('&MONTKN64' EQ '').ZPLV1E                        00152100
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00152200
&XPLISTVER      SETA  2                                                 00152300
.ZPLV1E         ANOP  ,                                                 00152400
.*                                                                      00152500
                AIF   ('&EWLM_PACORR' EQ '').ZPLV2E                     00152600
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00152700
&XPLISTVER      SETA  1                                                 00152800
.ZPLV2E         ANOP  ,                                                 00152900
.*                                                                      00153000
                AIF   ('&EWLM_PACTKN' EQ '').ZPLV3E                     00153100
                AIF   (&XPLISTVER GE 1).ZPLV3E                          00153200
&XPLISTVER      SETA  1                                                 00153300
.ZPLV3E         ANOP  ,                                                 00153400
.*                                                                      00153500
                AIF   ('&FROM_SUBSYSNM' EQ '').ZPLV4E                   00153600
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00153700
&XPLISTVER      SETA  2                                                 00153800
.ZPLV4E         ANOP  ,                                                 00153900
.*                                                                      00154000
                AIF   ('&BPMGMTONLY' EQ '').ZPLV5E                      00154100
                AIF   (&XPLISTVER GE 1).ZPLV5E                          00154200
&XPLISTVER      SETA  1                                                 00154300
.ZPLV5E         ANOP  ,                                                 00154400
.*                                                                      00154500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00154600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00154700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00154800
.*-------------------------------------------------------------------   00154900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00155000
&ZMS            SETC  '"PLISTVER='                                      00155100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00155200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00155300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00155400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00155500
                AGO   .ZPVCK2                                           00155600
.ZPVCK3         ANOP  ,                                                 00155700
.*-------------------------------------------------------------------   00155800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00155900
&ZMS            SETC  '"PLISTVER='                                      00156000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00156100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00156200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00156300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00156400
                AGO   .ZPVCKE                                           00156500
.ZPVCK2         ANOP  ,                                                 00156600
.*-------------------------------------------------------------------   00156700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00156800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00156900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00157000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00157100
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00157200
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00157300
.ZPVCK6         ANOP  ,                                                 00157400
&ZMS            SETC  '"PLISTVER='                                      00157500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00157600
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00157700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00157800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00157900
&XPLISTVER      SETA  2                                                 00158000
                AGO   .ZPVCKE                                           00158100
.*-------------------------------------------------------------------   00158200
.ZPVCK4A        ANOP  ,                                                 00158300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00158400
&ZMS            SETC  'PLISTVER='                                       00158500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00158600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00158700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00158800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00158900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00159000
                AGO   .ZPVCK5                                           00159100
.ZPVCK4         ANOP  ,                                                 00159200
&XPLISTVER      SETA  &PLISTVER(1)                                      00159300
.ZPVCK5         ANOP  ,                                                 00159400
.ZPVCKE         ANOP  ,                                                 00159500
.********************************************************************   00159600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00159700
.********************************************************************   00159800
                      ACTR  10000                                       00159900
.*----------------------------------------------------------------***   00160000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00160100
                      AIF   (N'&EWLM LE 1).ZG2A  CK NUM                 00160200
&ZMS                  SETC  '"EWLM='                                    00160300
&ZMS                  SETC  '&ZMS.&EWLM"'                               00160400
&ZMS                  SETC  '&ZMS "EWLM"'                               00160500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00160600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00160700
.ZG2A                 ANOP  ,                                           00160800
.*-------------------------------------------------------------------   00160900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00161000
&XEWLM                SETC  ''          INITIALIZE XVARIABLE            00161100
.ZG3A   AIF   ('&EWLM(1)' NE 'NO').ZG4A                                 00161200
&XEWLM                SETC  'NO'        SET KEYWORD                     00161300
.*-------------------------------------------------------------------   00161400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00161500
.ZG4A                 AIF   (K'&XEWLM GT 0).ZG4C  KEYWORD               00161600
                      AIF   (K'&EWLM(1) LE 0).ZG4B                      00161700
&ZMS                  SETC  '"EWLM='                                    00161800
&ZMS                  SETC  '&ZMS.&EWLM"'                               00161900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00162000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00162100
&ZMS                  SETC  '&ZMS "NO".'                                00162200
                      MNOTE 8,' &ZMS '                                  00162300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00162400
.ZG4B                 ANOP  ,                                           00162500
&XEWLM                SETC  'NO'        SET DEFAULT KEYWORD             00162600
.ZG4C                 ANOP  ,                                           00162700
&ZXEWLM               SETC  'INPUT'     SET IN/OUTPUT                   00162800
.*----------------------------------------------------------------***   00162900
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00163000
&XUSEDMONTKNKEY       SETC  ''          INITIALIZE XVARIABLE            00163100
                      AIF   (K'&MONTKN LE 0).ZG6C                       00163200
&ZXUSEDMONTKNKEY      SETC  'INPUT'     SET IN/OUTPUT                   00163300
&XUSEDMONTKNKEY       SETC  'MONTKN'    SET XVARIABLE                   00163400
&ZXMONTKN             SETC  'INPUT'     SET IN/OUTPUT                   00163500
&XMONTKN              SETC  '&MONTKN(1)'        SET XVARIABLE PARM      00163600
                      AIF   (N'&MONTKN GT 1).ZG6A                       00163700
&XMONTKN              SETC  '&MONTKN'   SET XVARIABLE PARM              00163800
.ZG6A                 AIF   (N'&MONTKN LE 1).ZG6B  CK NUM               00163900
&ZMS                  SETC  '"MONTKN='                                  00164000
&ZMS                  SETC  '&ZMS.&MONTKN"'                             00164100
&ZMS                  SETC  '&ZMS "MONTKN"'                             00164200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00164300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00164400
.ZG6B                 AIF   (K'&XMONTKN GT 0).ZG6C  ONE PARM            00164500
&ZXUSEDMONTKNKEY      SETC  ''          RESET IN/OUTPUT                 00164600
&ZXMONTKN             SETC  ''          RESET IN/OUTPUT                 00164700
&ZMS                  SETC  ' '                                         00164800
&ZMS                  SETC  '&ZMS "MONTKN" KEY AND ITS'                 00164900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00165000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00165100
.ZG6C                 ANOP  ,                                           00165200
.*----------------------------------------------------------------***   00165300
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00165400
                      AIF   (K'&MONTKN64 LE 0).ZG7D  NO ME KEY          00165500
                      AIF   (N'&MONTKN64 LE 1).ZG7A  CK NUM             00165600
&ZMS                  SETC  '"MONTKN64='                                00165700
&ZMS                  SETC  '&ZMS.&MONTKN64"'                           00165800
&ZMS                  SETC  '&ZMS "MONTKN64"'                           00165900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00166000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00166100
.ZG7A                 AIF   (K'&XUSEDMONTKNKEY LE 0).ZG7B               00166200
&ZMS                  SETC  '"MONTKN64'                                 00166300
&ZMS                  SETC  '&ZMS.=&MONTKN64"'                          00166400
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00166500
&ZMS                  SETC  '&ZMS "&XUSEDMONTKNKEY"'                    00166600
                      MNOTE 8,' &ZMS KEY.'                              00166700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00166800
                      AGO   .ZG7D                                       00166900
.*                                                                      00167000
.ZG7B                 ANOP  ,                                           00167100
&ZXUSEDMONTKNKEY      SETC  'INPUT'     SET IN/OUTPUT                   00167200
&XUSEDMONTKNKEY       SETC  'MONTKN64'  SET XVARIABLE                   00167300
&ZXMONTKN64           SETC  'INPUT'     SET IN/OUTPUT                   00167400
&XMONTKN64            SETC  '&MONTKN64(1)'      SET XVARIABLE PARM      00167500
                      AIF   (N'&MONTKN64 GT 1).ZG7C                     00167600
&XMONTKN64            SETC  '&MONTKN64'         SET XVARIABLE PARM      00167700
.ZG7C                 AIF   (K'&XMONTKN64 GT 0).ZG7D  ONE PARM          00167800
&ZXUSEDMONTKNKEY      SETC  ''          RESET IN/OUTPUT                 00167900
&ZXMONTKN64           SETC  ''          RESET IN/OUTPUT                 00168000
&ZMS                  SETC  ' '                                         00168100
&ZMS                  SETC  '&ZMS "MONTKN64" KEY AND ITS'               00168200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00168300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00168400
.ZG7D                 ANOP  ,                                           00168500
.*------------------------------------------------------------------    00168600
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00168700
                      AIF   (K'&XUSEDMONTKNKEY GT 0).ZG8B               00168800
&ZXUSEDMONTKNKEY      SETC  ''          RESET IN/OUTPUT                 00168900
&ZXMONTKN             SETC  ''          RESET IN/OUTPUT                 00169000
&XUSEDMONTKNKEY       SETC  ''          ENSURE NULL                     00169100
&XMONTKN              SETC  ''          ENSURE NULL                     00169200
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      00169300
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         00169400
&ZMS                  SETC  '&ZMS REQUIRED:'                            00169500
&ZMS                  SETC  '&ZMS "MONTKN"'     VALID ME KEY            00169600
&ZMS                  SETC  '&ZMS OR "MONTKN64".'  VALID ME KEY         00169700
                      MNOTE 8,' &ZMS '                                  00169800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00169900
.ZG8B                 ANOP  ,                                           00170000
.*-------------------------------------------------------------------   00170100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00170200
.ZG6ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN').ZG7ZY                    00170300
.*-------------------------------------------------------------------   00170400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00170500
                      AIF   (K'&ZXMONTKN LE 0).ZG6R  NOT I/O            00170600
                      AIF   ('&XMONTKN'(1,1) NE '(').ZG6R               00170700
&ZCGPR                SETC  '&XMONTKN'(2,K'&XMONTKN-2)                  00170800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                 00170900
                      AIF   (K'&ZCGPR GT 2).ZG6Q                        00171000
                      AIF   ('&ZCGPR' EQ '0').ZG6Q                      00171100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00171200
                      AIF   (T'&ZCGPR NE 'N').ZG6Q  INVALID REG NAME    00171300
.ZG6P                 ANOP  ,                                           00171400
                      AIF   (T'&ZCGPR NE 'N').ZG6R  NON NUMERIC         00171500
                      AIF   ('&ZCGPR' LT '2').ZG6Q                      00171600
                      AIF   ('&ZCGPR' LE '12').ZG6R                     00171700
.ZG6Q                 ANOP  ,                                           00171800
&ZMS                  SETC  '"MONTKN='                                  00171900
&ZMS                  SETC  '&ZMS.&MONTKN"'                             00172000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00172100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00172200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00172300
.ZG6R                 ANOP  ,                                           00172400
.*-------------------------------------------------------------------   00172500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00172600
.ZG7ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN64').ZG8ZY                  00172700
.*-------------------------------------------------------------------   00172800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00172900
                      AIF   (K'&ZXMONTKN64 LE 0).ZG7R  NOT I/O          00173000
                      AIF   ('&XMONTKN64'(1,1) NE '(').ZG7R             00173100
&ZCGPR                SETC  '&XMONTKN64'(2,K'&XMONTKN64-2)              00173200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                 00173300
                      AIF   (K'&ZCGPR GT 2).ZG7Q                        00173400
                      AIF   ('&ZCGPR' EQ '0').ZG7Q                      00173500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00173600
                      AIF   (T'&ZCGPR NE 'N').ZG7Q  INVALID REG NAME    00173700
.ZG7P                 ANOP  ,                                           00173800
                      AIF   (T'&ZCGPR NE 'N').ZG7R  NON NUMERIC         00173900
                      AIF   ('&ZCGPR' LT '2').ZG7Q                      00174000
                      AIF   ('&ZCGPR' LE '12').ZG7R                     00174100
.ZG7Q                 ANOP  ,                                           00174200
&ZMS                  SETC  '"MONTKN64='                                00174300
&ZMS                  SETC  '&ZMS.&MONTKN64"'                           00174400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00174500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00174600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00174700
.ZG7R                 ANOP  ,                                           00174800
.*-------------------------------------------------------------------   00174900
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00175000
.ZG8ZY                ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00175100
.*------------------------------------------------------------------    00175200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00175300
&XMODE                SETC  ''          INITIALIZE XVARIABLE            00175400
.*-------------------------------------------------------------------   00175500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00175600
.ZG11                 ANOP  ,                                           00175700
                      AIF   (K'&MODE(1) LE 0).ZG11A                     00175800
&ZTLC                 SETC 'RESET'                                      00175900
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG39                00176000
&XMODE                SETC  'RESET'     SET KEYWORD                     00176100
                      AIF   (N'&MODE LE 1).ZG11A  CK NUM                00176200
&ZMS                  SETC  '"MODE='                                    00176300
&ZMS                  SETC  '&ZMS.&MODE"'                               00176400
&ZMS                  SETC  '&ZMS "MODE"'                               00176500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00176600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00176700
.ZG11A                ANOP  ,                                           00176800
.*------------------------------------------------------------------    00176900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00177000
&XDURATION            SETC  ''          INITIALIZE XVARIABLE            00177100
.*-------------------------------------------------------------------   00177200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00177300
.ZG14                 ANOP  ,                                           00177400
                      AIF   (K'&DURATION(1) LE 0).ZG14A                 00177500
&ZTLC                 SETC 'EXECUTION'                                  00177600
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG15            00177700
&XDURATION            SETC  'EXECUTION'         SET KEYWORD             00177800
                      AIF   (N'&DURATION LE 1).ZG14A  CK NUM            00177900
&ZMS                  SETC  '"DURATION='                                00178000
&ZMS                  SETC  '&ZMS.&DURATION"'                           00178100
&ZMS                  SETC  '&ZMS "DURATION"'                           00178200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00178300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00178400
.ZG14A                ANOP  ,                                           00178500
.*-------------------------------------------------------------------   00178600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00178700
.ZG15                 ANOP  ,                                           00178800
&ZTLC                 SETC 'BEGIN_TO_END'                               00178900
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG16            00179000
&XDURATION            SETC  'BEGIN_TO_END'      SET KEYWORD             00179100
                      AIF   (N'&DURATION LE 1).ZG15A  CK NUM            00179200
&ZMS                  SETC  '"DURATION='                                00179300
&ZMS                  SETC  '&ZMS.&DURATION"'                           00179400
&ZMS                  SETC  '&ZMS "DURATION"'                           00179500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00179600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00179700
.ZG15A                ANOP  ,                                           00179800
.*------------------------------------------------------------------    00179900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00180000
.ZG16                 ANOP  ,                                           00180100
&ZXDURATION           SETC  'INPUT'     SET IN/OUTPUT                   00180200
                      AIF   (K'&XDURATION GT 0).ZG16E  VALID ARG        00180300
                      AIF   (T'&DURATION EQ 'O').ZG16D  OMITTED         00180400
&ZASYSLNDX            SETA  0                                           00180500
.ZG16A                ANOP  ,           POSITIONAL MACRO KEY            00180600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00180700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG16C            00180800
&ZTLC                 SETC 'DURATION'                                   00180900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG16A   00181000
.ZG16B                ANOP  ,                                           00181100
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00181200
&ZMS                  SETC  'THE "DURATION" KEY'                        00181300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00181400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00181500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00181600
                      AGO   .ZG16E                                      00181700
.ZG16C                ANOP  ,                                           00181800
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00181900
&ZMS                  SETC  '"DURATION='                                00182000
&ZMS                  SETC  '&ZMS.&DURATION"'                           00182100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00182200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00182300
&ZMS                  SETC  '&ZMS "EXECUTION"'                          00182400
&ZMS                  SETC  '&ZMS OR "BEGIN_TO_END".'                   00182500
                      MNOTE 8,' &ZMS '                                  00182600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00182700
                      AGO   .ZG16E                                      00182800
.ZG16D                ANOP  ,                                           00182900
&XDURATION            SETC  'EXECUTION'         SET DEFAULT KEYWORD     00183000
.ZG16E                ANOP  ,                                           00183100
.*------------------------------------------------------------------    00183200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00183300
&XDISPTYPE            SETC  ''          INITIALIZE XVARIABLE            00183400
.*-------------------------------------------------------------------   00183500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00183600
.ZG19                 ANOP  ,                                           00183700
                      AIF   (K'&DISPTYPE(1) LE 0).ZG19A                 00183800
&ZTLC                 SETC 'TCB'                                        00183900
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG23            00184000
&XDISPTYPE            SETC  'TCB'       SET KEYWORD                     00184100
                      AIF   (N'&DISPTYPE LE 1).ZG19A  CK NUM            00184200
&ZMS                  SETC  '"DISPTYPE='                                00184300
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00184400
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00184500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00184600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00184700
.ZG19A                ANOP  ,                                           00184800
.*----------------------------------------------------------------***   00184900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00185000
                      AIF   (N'&TCB LE 1).ZG21A  CK NUM                 00185100
&ZMS                  SETC  '"TCB='                                     00185200
&ZMS                  SETC  '&ZMS.&TCB"'                                00185300
&ZMS                  SETC  '&ZMS "TCB"'                                00185400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00185500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00185600
.ZG21A                ANOP  ,                                           00185700
.*-------------------------------------------------------------------   00185800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00185900
&ZXTCB                SETC  'INPUT'     SET IN/OUTPUT                   00186000
&XTCB                 SETC  'NO_TCB'                                    00186100
                      AIF   (K'&TCB(1) LE 0).ZG21B  PARM                00186200
&XTCB                 SETC  '&TCB(1)'   SET XVARIABLE                   00186300
                      AIF   (N'&TCB GT 1).ZG21B  MULTI                  00186400
&XTCB                 SETC  '&TCB'      SET XVARIABLE                   00186500
.ZG21B                ANOP  ,                                           00186600
.*-------------------------------------------------------------------   00186700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00186800
                      AIF   (K'&ZXTCB LE 0).ZG21R  NOT I/O              00186900
         AIF   ('&XTCB' EQ 'NO_TCB').ZG21R                              00187000
                      AIF   ('&XTCB'(1,1) NE '(').ZG21R                 00187100
&ZCGPR                SETC  '&XTCB'(2,K'&XTCB-2)                        00187200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                00187300
                      AIF   (K'&ZCGPR GT 2).ZG21Q                       00187400
                      AIF   ('&ZCGPR' EQ '0').ZG21Q                     00187500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00187600
                      AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME   00187700
.ZG21P                ANOP  ,                                           00187800
                      AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC        00187900
                      AIF   ('&ZCGPR' LT '2').ZG21Q                     00188000
                      AIF   ('&ZCGPR' LE '12').ZG21R                    00188100
.ZG21Q                ANOP  ,                                           00188200
&ZMS                  SETC  '"TCB='                                     00188300
&ZMS                  SETC  '&ZMS.&TCB"'                                00188400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00188500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00188600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00188700
.ZG21R                ANOP  ,                                           00188800
.*-------------------------------------------------------------------   00188900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00189000
.ZG23                 ANOP  ,                                           00189100
&ZTLC                 SETC 'SRB'                                        00189200
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG24            00189300
&XDISPTYPE            SETC  'SRB'       SET KEYWORD                     00189400
                      AIF   (N'&DISPTYPE LE 1).ZG23A  CK NUM            00189500
&ZMS                  SETC  '"DISPTYPE='                                00189600
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00189700
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00189800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00189900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00190000
.ZG23A                ANOP  ,                                           00190100
.*------------------------------------------------------------------    00190200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00190300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00190400
.ZG23A0               AIF   (K'&TCB LE 0).ZG23A1  OK                    00190500
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00190600
.ZG23A1               AIF   (K'&ZCVAL LE 0).ZG23A2  OK                  00190700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00190800
&ZMS                  SETC  '"DISPTYPE'                                 00190900
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00191000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00191100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00191200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00191300
.ZG23A2               ANOP  ,                                           00191400
.*------------------------------------------------------------------    00191500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191600
.ZG24                 ANOP  ,                                           00191700
&ZXDISPTYPE           SETC  'INPUT'     SET IN/OUTPUT                   00191800
                      AIF   (K'&XDISPTYPE GT 0).ZG24E  VALID ARG        00191900
                      AIF   (T'&DISPTYPE EQ 'O').ZG24D  OMITTED         00192000
&ZASYSLNDX            SETA  0                                           00192100
.ZG24A                ANOP  ,           POSITIONAL MACRO KEY            00192200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00192300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG24C            00192400
&ZTLC                 SETC 'DISPTYPE'                                   00192500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG24A   00192600
.ZG24B                ANOP  ,                                           00192700
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00192800
&ZMS                  SETC  'THE "DISPTYPE" KEY'                        00192900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00193000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00193100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00193200
                      AGO   .ZG24E                                      00193300
.ZG24C                ANOP  ,                                           00193400
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00193500
&ZMS                  SETC  '"DISPTYPE='                                00193600
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00193700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00193800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00193900
&ZMS                  SETC  '&ZMS "TCB"'                                00194000
&ZMS                  SETC  '&ZMS OR "SRB".'                            00194100
                      MNOTE 8,' &ZMS '                                  00194200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00194300
                      AGO   .ZG24E                                      00194400
.ZG24D                ANOP  ,                                           00194500
&XDISPTYPE            SETC  'TCB'       SET DEFAULT KEYWORD             00194600
.ZG24E                ANOP  ,                                           00194700
.*------------------------------------------------------------------    00194800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00194900
                      AIF   (K'&DISPTYPE(1) GT 0).ZG24F  PARM           00195000
&XDISPTYPE            SETC  ''          ENSURE NULL KEYWORD             00195100
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00195200
&ZMS                  SETC  'THE'                                       00195300
&ZMS                  SETC  '&ZMS "DISPTYPE" KEY AND ITS'               00195400
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00195500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00195600
&ZMS                  SETC  '&ZMS "TCB"'                                00195700
&ZMS                  SETC  '&ZMS OR "SRB".'                            00195800
                      MNOTE 8,' &ZMS '                                  00195900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00196000
.ZG24F                ANOP  ,                                           00196100
.*------------------------------------------------------------------    00196200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00196300
&XARRIVALTIMEP        SETC  ''          INITIALIZE XVARIABLE            00196400
.*-------------------------------------------------------------------   00196500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00196600
.ZG27                 ANOP  ,                                           00196700
                      AIF   (K'&ARRIVALTIMEP(1) LE 0).ZG27A             00196800
&ZTLC                 SETC 'CURRENT'                                    00196900
                      AIF   ('&ARRIVALTIMEP(1)' NE '&ZTLC').ZG28        00197000
&XARRIVALTIMEP        SETC  'CURRENT'   SET KEYWORD                     00197100
                      AIF   (N'&ARRIVALTIMEP LE 1).ZG27A  CK NUM        00197200
&ZMS                  SETC  '"ARRIVALTIMEP='                            00197300
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00197400
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP"'                       00197500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00197600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00197700
.ZG27A                ANOP  ,                                           00197800
.*------------------------------------------------------------------    00197900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00198000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00198100
.ZG27A0               AIF   (K'&ARRIVALTIME LE 0).ZG27A1  OK            00198200
&ZCVAL                SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED     00198300
.ZG27A1               AIF   (K'&ZCVAL LE 0).ZG27A2  OK                  00198400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00198500
&ZMS                  SETC  '"ARRIVALTIMEP'                             00198600
&ZMS                  SETC  '&ZMS.=&ARRIVALTIMEP"'                      00198700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00198800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00198900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00199000
.ZG27A2               ANOP  ,                                           00199100
.*-------------------------------------------------------------------   00199200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199300
.ZG28                 ANOP  ,                                           00199400
&ZTLC                 SETC 'YES'                                        00199500
                      AIF   ('&ARRIVALTIMEP(1)' NE '&ZTLC').ZG32        00199600
&XARRIVALTIMEP        SETC  'YES'       SET KEYWORD                     00199700
                      AIF   (N'&ARRIVALTIMEP LE 1).ZG28A  CK NUM        00199800
&ZMS                  SETC  '"ARRIVALTIMEP='                            00199900
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00200000
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP"'                       00200100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00200200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00200300
.ZG28A                ANOP  ,                                           00200400
.*----------------------------------------------------------------***   00200500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00200600
                      AIF   (N'&ARRIVALTIME LE 1).ZG30A  CK NUM         00200700
&ZMS                  SETC  '"ARRIVALTIME='                             00200800
&ZMS                  SETC  '&ZMS.&ARRIVALTIME"'                        00200900
&ZMS                  SETC  '&ZMS "ARRIVALTIME"'                        00201000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00201100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00201200
.ZG30A                ANOP  ,                                           00201300
.*-------------------------------------------------------------------   00201400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00201500
&ZXARRIVALTIME        SETC  'INPUT'     SET IN/OUTPUT                   00201600
&XARRIVALTIME         SETC  '&ARRIVALTIME(1)'   SET XVARIABLE           00201700
                      AIF   (N'&ARRIVALTIME GT 1).ZG30B  MULTI          00201800
&XARRIVALTIME         SETC  '&ARRIVALTIME'      SET XVARIABLE           00201900
.ZG30B                AIF   (K'&ARRIVALTIME(1) GT 0).ZG30C              00202000
&ZXARRIVALTIME        SETC  ''          RESET IN/OUTPUT                 00202100
&ZMS                  SETC  ' '                                         00202200
&ZMS                  SETC  '&ZMS "ARRIVALTIME" KEY AND ITS'            00202300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00202400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00202500
.ZG30C                ANOP  ,                                           00202600
.*-------------------------------------------------------------------   00202700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00202800
                      AIF   (K'&ZXARRIVALTIME LE 0).ZG30R  NOT I/O      00202900
                      AIF   ('&XARRIVALTIME'(1,1) NE '(').ZG30R         00203000
&ZCGPR                SETC  '&XARRIVALTIME'(2,K'&XARRIVALTIME-2)        00203100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                00203200
                      AIF   (K'&ZCGPR GT 2).ZG30Q                       00203300
                      AIF   ('&ZCGPR' EQ '0').ZG30Q                     00203400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00203500
                      AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME   00203600
.ZG30P                ANOP  ,                                           00203700
                      AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC        00203800
                      AIF   ('&ZCGPR' LT '2').ZG30Q                     00203900
                      AIF   ('&ZCGPR' LE '12').ZG30R                    00204000
.ZG30Q                ANOP  ,                                           00204100
&ZMS                  SETC  '"ARRIVALTIME='                             00204200
&ZMS                  SETC  '&ZMS.&ARRIVALTIME"'                        00204300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00204400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00204500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00204600
.ZG30R                ANOP  ,                                           00204700
.*------------------------------------------------------------------    00204800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00204900
.ZG32                 ANOP  ,                                           00205000
&ZXARRIVALTIMEP       SETC  'INPUT'     SET IN/OUTPUT                   00205100
                      AIF   (K'&XARRIVALTIMEP GT 0).ZG32E  VALID ARG    00205200
                      AIF   (T'&ARRIVALTIMEP EQ 'O').ZG32D  OMITTED     00205300
&ZASYSLNDX            SETA  0                                           00205400
.ZG32A                ANOP  ,           POSITIONAL MACRO KEY            00205500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00205600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG32C            00205700
&ZTLC                 SETC 'ARRIVALTIMEP'                               00205800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG32A   00205900
.ZG32B                ANOP  ,                                           00206000
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00206100
&ZMS                  SETC  'THE "ARRIVALTIMEP" KEY'                    00206200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00206300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00206400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00206500
                      AGO   .ZG32E                                      00206600
.ZG32C                ANOP  ,                                           00206700
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00206800
&ZMS                  SETC  '"ARRIVALTIMEP='                            00206900
&ZMS                  SETC  '&ZMS.&ARRIVALTIMEP"'                       00207000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00207100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00207200
&ZMS                  SETC  '&ZMS "CURRENT"'                            00207300
&ZMS                  SETC  '&ZMS OR "YES".'                            00207400
                      MNOTE 8,' &ZMS '                                  00207500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00207600
                      AGO   .ZG32E                                      00207700
.ZG32D                ANOP  ,                                           00207800
&XARRIVALTIMEP        SETC  'CURRENT'   SET DEFAULT KEYWORD             00207900
.ZG32E                ANOP  ,                                           00208000
.*------------------------------------------------------------------    00208100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00208200
                      AIF   (K'&ARRIVALTIMEP(1) GT 0).ZG32F  PARM       00208300
&XARRIVALTIMEP        SETC  ''          ENSURE NULL KEYWORD             00208400
&ZXARRIVALTIMEP       SETC  ''          RESET IN/OUTPUT                 00208500
&ZMS                  SETC  'THE'                                       00208600
&ZMS                  SETC  '&ZMS "ARRIVALTIMEP" KEY AND ITS'           00208700
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00208800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00208900
&ZMS                  SETC  '&ZMS "CURRENT"'                            00209000
&ZMS                  SETC  '&ZMS OR "YES".'                            00209100
                      MNOTE 8,' &ZMS '                                  00209200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00209300
.ZG32F                ANOP  ,                                           00209400
.*----------------------------------------------------------------***   00209500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00209600
                      AIF   (N'&EWLM_PACORR LE 1).ZG34A  CK NUM         00209700
&ZMS                  SETC  '"EWLM_PACORR='                             00209800
&ZMS                  SETC  '&ZMS.&EWLM_PACORR"'                        00209900
&ZMS                  SETC  '&ZMS "EWLM_PACORR"'                        00210000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00210100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00210200
.ZG34A                ANOP  ,                                           00210300
.*-------------------------------------------------------------------   00210400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00210500
&ZXEWLM_PACORR        SETC  'INPUT'     SET IN/OUTPUT                   00210600
&XEWLM_PACORR         SETC  'NO_EWLM_PACORR'                            00210700
                      AIF   (K'&EWLM_PACORR(1) LE 0).ZG34B  PARM        00210800
&XEWLM_PACORR         SETC  '&EWLM_PACORR(1)'   SET XVARIABLE           00210900
                      AIF   (N'&EWLM_PACORR GT 1).ZG34B  MULTI          00211000
&XEWLM_PACORR         SETC  '&EWLM_PACORR'      SET XVARIABLE           00211100
.ZG34B                ANOP  ,                                           00211200
.*-------------------------------------------------------------------   00211300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00211400
                      AIF   (K'&ZXEWLM_PACORR LE 0).ZG34R  NOT I/O      00211500
         AIF   ('&XEWLM_PACORR' EQ 'NO_EWLM_PACORR').ZG34R              00211600
                      AIF   ('&XEWLM_PACORR'(1,1) NE '(').ZG34R         00211700
&ZCGPR                SETC  '&XEWLM_PACORR'(2,K'&XEWLM_PACORR-2)        00211800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                00211900
                      AIF   (K'&ZCGPR GT 2).ZG34Q                       00212000
                      AIF   ('&ZCGPR' EQ '0').ZG34Q                     00212100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00212200
                      AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME   00212300
.ZG34P                ANOP  ,                                           00212400
                      AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC        00212500
                      AIF   ('&ZCGPR' LT '2').ZG34Q                     00212600
                      AIF   ('&ZCGPR' LE '12').ZG34R                    00212700
.ZG34Q                ANOP  ,                                           00212800
&ZMS                  SETC  '"EWLM_PACORR='                             00212900
&ZMS                  SETC  '&ZMS.&EWLM_PACORR"'                        00213000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00213100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00213200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00213300
.ZG34R                ANOP  ,                                           00213400
.*----------------------------------------------------------------***   00213500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00213600
                      AIF   (N'&EWLM_PACTKN LE 1).ZG37A  CK NUM         00213700
&ZMS                  SETC  '"EWLM_PACTKN='                             00213800
&ZMS                  SETC  '&ZMS.&EWLM_PACTKN"'                        00213900
&ZMS                  SETC  '&ZMS "EWLM_PACTKN"'                        00214000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00214100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00214200
.ZG37A                ANOP  ,                                           00214300
.*-------------------------------------------------------------------   00214400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00214500
&ZXEWLM_PACTKN        SETC  'INPUT'     SET IN/OUTPUT                   00214600
&XEWLM_PACTKN         SETC  'NO_EWLM_PACTKN'                            00214700
                      AIF   (K'&EWLM_PACTKN(1) LE 0).ZG37B  PARM        00214800
&XEWLM_PACTKN         SETC  '&EWLM_PACTKN(1)'   SET XVARIABLE           00214900
                      AIF   (N'&EWLM_PACTKN GT 1).ZG37B  MULTI          00215000
&XEWLM_PACTKN         SETC  '&EWLM_PACTKN'      SET XVARIABLE           00215100
.ZG37B                ANOP  ,                                           00215200
.*-------------------------------------------------------------------   00215300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00215400
                      AIF   (K'&ZXEWLM_PACTKN LE 0).ZG37R  NOT I/O      00215500
         AIF   ('&XEWLM_PACTKN' EQ 'NO_EWLM_PACTKN').ZG37R              00215600
                      AIF   ('&XEWLM_PACTKN'(1,1) NE '(').ZG37R         00215700
&ZCGPR                SETC  '&XEWLM_PACTKN'(2,K'&XEWLM_PACTKN-2)        00215800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                00215900
                      AIF   (K'&ZCGPR GT 2).ZG37Q                       00216000
                      AIF   ('&ZCGPR' EQ '0').ZG37Q                     00216100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00216200
                      AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME   00216300
.ZG37P                ANOP  ,                                           00216400
                      AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC        00216500
                      AIF   ('&ZCGPR' LT '2').ZG37Q                     00216600
                      AIF   ('&ZCGPR' LE '12').ZG37R                    00216700
.ZG37Q                ANOP  ,                                           00216800
&ZMS                  SETC  '"EWLM_PACTKN='                             00216900
&ZMS                  SETC  '&ZMS.&EWLM_PACTKN"'                        00217000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00217100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00217200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00217300
.ZG37R                ANOP  ,                                           00217400
.*-------------------------------------------------------------------   00217500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00217600
.ZG39                 ANOP  ,                                           00217700
&ZTLC                 SETC 'RETAIN'                                     00217800
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG55                00217900
&XMODE                SETC  'RETAIN'    SET KEYWORD                     00218000
                      AIF   (N'&MODE LE 1).ZG39A  CK NUM                00218100
&ZMS                  SETC  '"MODE='                                    00218200
&ZMS                  SETC  '&ZMS.&MODE"'                               00218300
&ZMS                  SETC  '&ZMS "MODE"'                               00218400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00218500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00218600
.ZG39A                ANOP  ,                                           00218700
.*------------------------------------------------------------------    00218800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00219000
.ZG39A0               AIF   (K'&ARRIVALTIMEP LE 0).ZG39A1  OK           00219100
&ZCVAL                SETC '&ZCVAL ARRIVALTIMEP'  INCORRECT KEY USED    00219200
.ZG39A1               AIF   (K'&ARRIVALTIME LE 0).ZG39A2  OK            00219300
&ZCVAL                SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED     00219400
.ZG39A2               AIF   (K'&EWLM_PACORR LE 0).ZG39A3  OK            00219500
&ZCVAL                SETC '&ZCVAL EWLM_PACORR'  INCORRECT KEY USED     00219600
.ZG39A3               AIF   (K'&EWLM_PACTKN LE 0).ZG39A4  OK            00219700
&ZCVAL                SETC '&ZCVAL EWLM_PACTKN'  INCORRECT KEY USED     00219800
.ZG39A4               AIF   (K'&ZCVAL LE 0).ZG39A5  OK                  00219900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00220000
&ZMS                  SETC  '"MODE'                                     00220100
&ZMS                  SETC  '&ZMS.=&MODE"'                              00220200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00220300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00220400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00220500
.ZG39A5               ANOP  ,                                           00220600
.*------------------------------------------------------------------    00220700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220800
&XDURATION            SETC  ''          INITIALIZE XVARIABLE            00220900
.*-------------------------------------------------------------------   00221000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00221100
.ZG42                 ANOP  ,                                           00221200
                      AIF   (K'&DURATION(1) LE 0).ZG42A                 00221300
&ZTLC                 SETC 'PREV_VALUE'                                 00221400
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG43            00221500
&XDURATION            SETC  'PREV_VALUE'        SET KEYWORD             00221600
                      AIF   (N'&DURATION LE 1).ZG42A  CK NUM            00221700
&ZMS                  SETC  '"DURATION='                                00221800
&ZMS                  SETC  '&ZMS.&DURATION"'                           00221900
&ZMS                  SETC  '&ZMS "DURATION"'                           00222000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00222100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00222200
.ZG42A                ANOP  ,                                           00222300
.*-------------------------------------------------------------------   00222400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00222500
.ZG43                 ANOP  ,                                           00222600
&ZTLC                 SETC 'EXECUTION'                                  00222700
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG44            00222800
&XDURATION            SETC  'EXECUTION'         SET KEYWORD             00222900
                      AIF   (N'&DURATION LE 1).ZG43A  CK NUM            00223000
&ZMS                  SETC  '"DURATION='                                00223100
&ZMS                  SETC  '&ZMS.&DURATION"'                           00223200
&ZMS                  SETC  '&ZMS "DURATION"'                           00223300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00223400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00223500
.ZG43A                ANOP  ,                                           00223600
.*-------------------------------------------------------------------   00223700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00223800
.ZG44                 ANOP  ,                                           00223900
&ZTLC                 SETC 'BEGIN_TO_END'                               00224000
                      AIF   ('&DURATION(1)' NE '&ZTLC').ZG45            00224100
&XDURATION            SETC  'BEGIN_TO_END'      SET KEYWORD             00224200
                      AIF   (N'&DURATION LE 1).ZG44A  CK NUM            00224300
&ZMS                  SETC  '"DURATION='                                00224400
&ZMS                  SETC  '&ZMS.&DURATION"'                           00224500
&ZMS                  SETC  '&ZMS "DURATION"'                           00224600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00224700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00224800
.ZG44A                ANOP  ,                                           00224900
.*------------------------------------------------------------------    00225000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00225100
.ZG45                 ANOP  ,                                           00225200
&ZXDURATION           SETC  'INPUT'     SET IN/OUTPUT                   00225300
                      AIF   (K'&XDURATION GT 0).ZG45E  VALID ARG        00225400
                      AIF   (T'&DURATION EQ 'O').ZG45D  OMITTED         00225500
&ZASYSLNDX            SETA  0                                           00225600
.ZG45A                ANOP  ,           POSITIONAL MACRO KEY            00225700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00225800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG45C            00225900
&ZTLC                 SETC 'DURATION'                                   00226000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG45A   00226100
.ZG45B                ANOP  ,                                           00226200
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00226300
&ZMS                  SETC  'THE "DURATION" KEY'                        00226400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00226500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00226600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00226700
                      AGO   .ZG45E                                      00226800
.ZG45C                ANOP  ,                                           00226900
&ZXDURATION           SETC  ''          RESET IN/OUTPUT                 00227000
&ZMS                  SETC  '"DURATION='                                00227100
&ZMS                  SETC  '&ZMS.&DURATION"'                           00227200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00227300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00227400
&ZMS                  SETC  '&ZMS "PREV_VALUE",'                        00227500
&ZMS                  SETC  '&ZMS "EXECUTION",'                         00227600
&ZMS                  SETC  '&ZMS OR "BEGIN_TO_END".'                   00227700
                      MNOTE 8,' &ZMS '                                  00227800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00227900
                      AGO   .ZG45E                                      00228000
.ZG45D                ANOP  ,                                           00228100
&XDURATION            SETC  'PREV_VALUE'        SET DEFAULT KEYWORD     00228200
.ZG45E                ANOP  ,                                           00228300
.*------------------------------------------------------------------    00228400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00228500
&XDISPTYPE            SETC  ''          INITIALIZE XVARIABLE            00228600
.*-------------------------------------------------------------------   00228700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00228800
.ZG48                 ANOP  ,                                           00228900
                      AIF   (K'&DISPTYPE(1) LE 0).ZG48A                 00229000
&ZTLC                 SETC 'SAVEDTYPE'                                  00229100
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG49            00229200
&XDISPTYPE            SETC  'SAVEDTYPE'         SET KEYWORD             00229300
                      AIF   (N'&DISPTYPE LE 1).ZG48A  CK NUM            00229400
&ZMS                  SETC  '"DISPTYPE='                                00229500
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00229600
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00229700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00229800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00229900
.ZG48A                ANOP  ,                                           00230000
.*------------------------------------------------------------------    00230100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00230200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00230300
.ZG48A0               AIF   (K'&TCB LE 0).ZG48A1  OK                    00230400
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00230500
.ZG48A1               AIF   (K'&ZCVAL LE 0).ZG48A2  OK                  00230600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00230700
&ZMS                  SETC  '"DISPTYPE'                                 00230800
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00230900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00231000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00231100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00231200
.ZG48A2               ANOP  ,                                           00231300
.*-------------------------------------------------------------------   00231400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00231500
.ZG49                 ANOP  ,                                           00231600
&ZTLC                 SETC 'TCB'                                        00231700
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG53            00231800
&XDISPTYPE            SETC  'TCB'       SET KEYWORD                     00231900
                      AIF   (N'&DISPTYPE LE 1).ZG49A  CK NUM            00232000
&ZMS                  SETC  '"DISPTYPE='                                00232100
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00232200
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00232300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00232400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00232500
.ZG49A                ANOP  ,                                           00232600
.*----------------------------------------------------------------***   00232700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00232800
                      AIF   (N'&TCB LE 1).ZG51A  CK NUM                 00232900
&ZMS                  SETC  '"TCB='                                     00233000
&ZMS                  SETC  '&ZMS.&TCB"'                                00233100
&ZMS                  SETC  '&ZMS "TCB"'                                00233200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00233300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00233400
.ZG51A                ANOP  ,                                           00233500
.*-------------------------------------------------------------------   00233600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00233700
&ZXTCB                SETC  'INPUT'     SET IN/OUTPUT                   00233800
&XTCB                 SETC  'NO_TCB'                                    00233900
                      AIF   (K'&TCB(1) LE 0).ZG51B  PARM                00234000
&XTCB                 SETC  '&TCB(1)'   SET XVARIABLE                   00234100
                      AIF   (N'&TCB GT 1).ZG51B  MULTI                  00234200
&XTCB                 SETC  '&TCB'      SET XVARIABLE                   00234300
.ZG51B                ANOP  ,                                           00234400
.*-------------------------------------------------------------------   00234500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00234600
                      AIF   (K'&ZXTCB LE 0).ZG51R  NOT I/O              00234700
         AIF   ('&XTCB' EQ 'NO_TCB').ZG51R                              00234800
                      AIF   ('&XTCB'(1,1) NE '(').ZG51R                 00234900
&ZCGPR                SETC  '&XTCB'(2,K'&XTCB-2)                        00235000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG51P                00235100
                      AIF   (K'&ZCGPR GT 2).ZG51Q                       00235200
                      AIF   ('&ZCGPR' EQ '0').ZG51Q                     00235300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00235400
                      AIF   (T'&ZCGPR NE 'N').ZG51Q  INVALID REG NAME   00235500
.ZG51P                ANOP  ,                                           00235600
                      AIF   (T'&ZCGPR NE 'N').ZG51R  NON NUMERIC        00235700
                      AIF   ('&ZCGPR' LT '2').ZG51Q                     00235800
                      AIF   ('&ZCGPR' LE '12').ZG51R                    00235900
.ZG51Q                ANOP  ,                                           00236000
&ZMS                  SETC  '"TCB='                                     00236100
&ZMS                  SETC  '&ZMS.&TCB"'                                00236200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00236300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00236400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00236500
.ZG51R                ANOP  ,                                           00236600
.*-------------------------------------------------------------------   00236700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00236800
.ZG53                 ANOP  ,                                           00236900
&ZTLC                 SETC 'SRB'                                        00237000
                      AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG54            00237100
&XDISPTYPE            SETC  'SRB'       SET KEYWORD                     00237200
                      AIF   (N'&DISPTYPE LE 1).ZG53A  CK NUM            00237300
&ZMS                  SETC  '"DISPTYPE='                                00237400
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00237500
&ZMS                  SETC  '&ZMS "DISPTYPE"'                           00237600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00237700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00237800
.ZG53A                ANOP  ,                                           00237900
.*------------------------------------------------------------------    00238000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00238100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00238200
.ZG53A0               AIF   (K'&TCB LE 0).ZG53A1  OK                    00238300
&ZCVAL                SETC '&ZCVAL TCB'         INCORRECT KEY USED      00238400
.ZG53A1               AIF   (K'&ZCVAL LE 0).ZG53A2  OK                  00238500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00238600
&ZMS                  SETC  '"DISPTYPE'                                 00238700
&ZMS                  SETC  '&ZMS.=&DISPTYPE"'                          00238800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00238900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00239000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00239100
.ZG53A2               ANOP  ,                                           00239200
.*------------------------------------------------------------------    00239300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00239400
.ZG54                 ANOP  ,                                           00239500
&ZXDISPTYPE           SETC  'INPUT'     SET IN/OUTPUT                   00239600
                      AIF   (K'&XDISPTYPE GT 0).ZG54E  VALID ARG        00239700
                      AIF   (T'&DISPTYPE EQ 'O').ZG54D  OMITTED         00239800
&ZASYSLNDX            SETA  0                                           00239900
.ZG54A                ANOP  ,           POSITIONAL MACRO KEY            00240000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00240100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG54C            00240200
&ZTLC                 SETC 'DISPTYPE'                                   00240300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG54A   00240400
.ZG54B                ANOP  ,                                           00240500
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00240600
&ZMS                  SETC  'THE "DISPTYPE" KEY'                        00240700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00240800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00240900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00241000
                      AGO   .ZG54E                                      00241100
.ZG54C                ANOP  ,                                           00241200
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00241300
&ZMS                  SETC  '"DISPTYPE='                                00241400
&ZMS                  SETC  '&ZMS.&DISPTYPE"'                           00241500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00241600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00241700
&ZMS                  SETC  '&ZMS "SAVEDTYPE",'                         00241800
&ZMS                  SETC  '&ZMS "TCB",'                               00241900
&ZMS                  SETC  '&ZMS OR "SRB".'                            00242000
                      MNOTE 8,' &ZMS '                                  00242100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00242200
                      AGO   .ZG54E                                      00242300
.ZG54D                ANOP  ,                                           00242400
&XDISPTYPE            SETC  'SAVEDTYPE'         SET DEFAULT KEYWORD     00242500
.ZG54E                ANOP  ,                                           00242600
.*------------------------------------------------------------------    00242700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00242800
                      AIF   (K'&DISPTYPE(1) GT 0).ZG54F  PARM           00242900
&XDISPTYPE            SETC  ''          ENSURE NULL KEYWORD             00243000
&ZXDISPTYPE           SETC  ''          RESET IN/OUTPUT                 00243100
&ZMS                  SETC  'THE'                                       00243200
&ZMS                  SETC  '&ZMS "DISPTYPE" KEY AND ITS'               00243300
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00243400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00243500
&ZMS                  SETC  '&ZMS "SAVEDTYPE",'                         00243600
&ZMS                  SETC  '&ZMS "TCB",'                               00243700
&ZMS                  SETC  '&ZMS OR "SRB".'                            00243800
                      MNOTE 8,' &ZMS '                                  00243900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00244000
.ZG54F                ANOP  ,                                           00244100
.*------------------------------------------------------------------    00244200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00244300
.ZG55                 ANOP  ,                                           00244400
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   00244500
                      AIF   (K'&XMODE GT 0).ZG55E  VALID ARG            00244600
                      AIF   (T'&MODE EQ 'O').ZG55D  OMITTED             00244700
&ZASYSLNDX            SETA  0                                           00244800
.ZG55A                ANOP  ,           POSITIONAL MACRO KEY            00244900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00245000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG55C            00245100
&ZTLC                 SETC 'MODE'                                       00245200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG55A   00245300
.ZG55B                ANOP  ,                                           00245400
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00245500
&ZMS                  SETC  'THE "MODE" KEY'                            00245600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00245700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00245800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00245900
                      AGO   .ZG55E                                      00246000
.ZG55C                ANOP  ,                                           00246100
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00246200
&ZMS                  SETC  '"MODE='                                    00246300
&ZMS                  SETC  '&ZMS.&MODE"'                               00246400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00246500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00246600
&ZMS                  SETC  '&ZMS "RESET"'                              00246700
&ZMS                  SETC  '&ZMS OR "RETAIN".'                         00246800
                      MNOTE 8,' &ZMS '                                  00246900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00247000
                      AGO   .ZG55E                                      00247100
.ZG55D                ANOP  ,                                           00247200
&XMODE                SETC  'RESET'     SET DEFAULT KEYWORD             00247300
.ZG55E                ANOP  ,                                           00247400
.*------------------------------------------------------------------    00247500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00247600
                      AIF   (K'&MODE(1) GT 0).ZG55F  PARM               00247700
&XMODE                SETC  ''          ENSURE NULL KEYWORD             00247800
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 00247900
&ZMS                  SETC  'THE'                                       00248000
&ZMS                  SETC  '&ZMS "MODE" KEY AND ITS'                   00248100
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00248200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00248300
&ZMS                  SETC  '&ZMS "RESET"'                              00248400
&ZMS                  SETC  '&ZMS OR "RETAIN".'                         00248500
                      MNOTE 8,' &ZMS '                                  00248600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00248700
.ZG55F                ANOP  ,                                           00248800
.*------------------------------------------------------------------    00248900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249000
&XCONTINUEP           SETC  ''          INITIALIZE XVARIABLE            00249100
.*-------------------------------------------------------------------   00249200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249300
.ZG58                 ANOP  ,                                           00249400
                      AIF   (K'&CONTINUEP(1) LE 0).ZG58A                00249500
&ZTLC                 SETC 'YES'                                        00249600
                      AIF   ('&CONTINUEP(1)' NE '&ZTLC').ZG66           00249700
&XCONTINUEP           SETC  'YES'       SET KEYWORD                     00249800
                      AIF   (N'&CONTINUEP LE 1).ZG58A  CK NUM           00249900
&ZMS                  SETC  '"CONTINUEP='                               00250000
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00250100
&ZMS                  SETC  '&ZMS "CONTINUEP"'                          00250200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00250300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00250400
.ZG58A                ANOP  ,                                           00250500
.*------------------------------------------------------------------    00250600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00250700
&XFROM                SETC  ''          INITIALIZE XVARIABLE            00250800
.*-------------------------------------------------------------------   00250900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00251000
.ZG61                 ANOP  ,                                           00251100
                      AIF   (K'&FROM(1) LE 0).ZG61A                     00251200
&ZTLC                 SETC 'NONE'                                       00251300
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG62                00251400
&XFROM                SETC  'NONE'      SET KEYWORD                     00251500
                      AIF   (N'&FROM LE 1).ZG61A  CK NUM                00251600
&ZMS                  SETC  '"FROM='                                    00251700
&ZMS                  SETC  '&ZMS.&FROM"'                               00251800
&ZMS                  SETC  '&ZMS "FROM"'                               00251900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00252000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00252100
.ZG61A                ANOP  ,                                           00252200
.*-------------------------------------------------------------------   00252300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00252400
.ZG62                 ANOP  ,                                           00252500
&ZTLC                 SETC 'LOCALMVS'                                   00252600
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG63                00252700
&XFROM                SETC  'LOCALMVS'  SET KEYWORD                     00252800
                      AIF   (N'&FROM LE 1).ZG62A  CK NUM                00252900
&ZMS                  SETC  '"FROM='                                    00253000
&ZMS                  SETC  '&ZMS.&FROM"'                               00253100
&ZMS                  SETC  '&ZMS "FROM"'                               00253200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00253300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00253400
.ZG62A                ANOP  ,                                           00253500
.*-------------------------------------------------------------------   00253600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00253700
.ZG63                 ANOP  ,                                           00253800
&ZTLC                 SETC 'SYSPLEX'                                    00253900
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG64                00254000
&XFROM                SETC  'SYSPLEX'   SET KEYWORD                     00254100
                      AIF   (N'&FROM LE 1).ZG63A  CK NUM                00254200
&ZMS                  SETC  '"FROM='                                    00254300
&ZMS                  SETC  '&ZMS.&FROM"'                               00254400
&ZMS                  SETC  '&ZMS "FROM"'                               00254500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00254600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00254700
.ZG63A                ANOP  ,                                           00254800
.*-------------------------------------------------------------------   00254900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00255000
.ZG64                 ANOP  ,                                           00255100
&ZTLC                 SETC 'NETWORK'                                    00255200
                      AIF   ('&FROM(1)' NE '&ZTLC').ZG65                00255300
&XFROM                SETC  'NETWORK'   SET KEYWORD                     00255400
                      AIF   (N'&FROM LE 1).ZG64A  CK NUM                00255500
&ZMS                  SETC  '"FROM='                                    00255600
&ZMS                  SETC  '&ZMS.&FROM"'                               00255700
&ZMS                  SETC  '&ZMS "FROM"'                               00255800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00255900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00256000
.ZG64A                ANOP  ,                                           00256100
.*------------------------------------------------------------------    00256200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00256300
.ZG65                 ANOP  ,                                           00256400
&ZXFROM               SETC  'INPUT'     SET IN/OUTPUT                   00256500
                      AIF   (K'&XFROM GT 0).ZG65E  VALID ARG            00256600
                      AIF   (T'&FROM EQ 'O').ZG65D  OMITTED             00256700
&ZASYSLNDX            SETA  0                                           00256800
.ZG65A                ANOP  ,           POSITIONAL MACRO KEY            00256900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00257000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG65C            00257100
&ZTLC                 SETC 'FROM'                                       00257200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG65A   00257300
.ZG65B                ANOP  ,                                           00257400
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00257500
&ZMS                  SETC  'THE "FROM" KEY'                            00257600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00257700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00257800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00257900
                      AGO   .ZG65E                                      00258000
.ZG65C                ANOP  ,                                           00258100
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00258200
&ZMS                  SETC  '"FROM='                                    00258300
&ZMS                  SETC  '&ZMS.&FROM"'                               00258400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00258500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00258600
&ZMS                  SETC  '&ZMS "NONE",'                              00258700
&ZMS                  SETC  '&ZMS "LOCALMVS",'                          00258800
&ZMS                  SETC  '&ZMS "SYSPLEX",'                           00258900
&ZMS                  SETC  '&ZMS OR "NETWORK".'                        00259000
                      MNOTE 8,' &ZMS '                                  00259100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00259200
                      AGO   .ZG65E                                      00259300
.ZG65D                ANOP  ,                                           00259400
&XFROM                SETC  'NONE'      SET DEFAULT KEYWORD             00259500
.ZG65E                ANOP  ,                                           00259600
.*------------------------------------------------------------------    00259700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00259800
                      AIF   (K'&FROM(1) GT 0).ZG65F  PARM               00259900
&XFROM                SETC  ''          ENSURE NULL KEYWORD             00260000
&ZXFROM               SETC  ''          RESET IN/OUTPUT                 00260100
&ZMS                  SETC  'THE'                                       00260200
&ZMS                  SETC  '&ZMS "FROM" KEY AND ITS'                   00260300
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00260400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00260500
&ZMS                  SETC  '&ZMS "NONE",'                              00260600
&ZMS                  SETC  '&ZMS "LOCALMVS",'                          00260700
&ZMS                  SETC  '&ZMS "SYSPLEX",'                           00260800
&ZMS                  SETC  '&ZMS OR "NETWORK".'                        00260900
                      MNOTE 8,' &ZMS '                                  00261000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00261100
.ZG65F                ANOP  ,                                           00261200
.*-------------------------------------------------------------------   00261300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00261400
.ZG66                 ANOP  ,                                           00261500
&ZTLC                 SETC 'NO'                                         00261600
                      AIF   ('&CONTINUEP(1)' NE '&ZTLC').ZG67           00261700
&XCONTINUEP           SETC  'NO'        SET KEYWORD                     00261800
                      AIF   (N'&CONTINUEP LE 1).ZG66A  CK NUM           00261900
&ZMS                  SETC  '"CONTINUEP='                               00262000
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00262100
&ZMS                  SETC  '&ZMS "CONTINUEP"'                          00262200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00262300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00262400
.ZG66A                ANOP  ,                                           00262500
.*------------------------------------------------------------------    00262600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00262700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00262800
.ZG66A0               AIF   (K'&FROM LE 0).ZG66A1  OK                   00262900
&ZCVAL                SETC '&ZCVAL FROM'        INCORRECT KEY USED      00263000
.ZG66A1               AIF   (K'&ZCVAL LE 0).ZG66A2  OK                  00263100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00263200
&ZMS                  SETC  '"CONTINUEP'                                00263300
&ZMS                  SETC  '&ZMS.=&CONTINUEP"'                         00263400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00263500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00263600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00263700
.ZG66A2               ANOP  ,                                           00263800
.*------------------------------------------------------------------    00263900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00264000
.ZG67                 ANOP  ,                                           00264100
&ZXCONTINUEP          SETC  'INPUT'     SET IN/OUTPUT                   00264200
                      AIF   (K'&XCONTINUEP GT 0).ZG67E  VALID ARG       00264300
                      AIF   (T'&CONTINUEP EQ 'O').ZG67D  OMITTED        00264400
&ZASYSLNDX            SETA  0                                           00264500
.ZG67A                ANOP  ,           POSITIONAL MACRO KEY            00264600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00264700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG67C            00264800
&ZTLC                 SETC 'CONTINUEP'                                  00264900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG67A   00265000
.ZG67B                ANOP  ,                                           00265100
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00265200
&ZMS                  SETC  'THE "CONTINUEP" KEY'                       00265300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00265400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00265500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00265600
                      AGO   .ZG67E                                      00265700
.ZG67C                ANOP  ,                                           00265800
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00265900
&ZMS                  SETC  '"CONTINUEP='                               00266000
&ZMS                  SETC  '&ZMS.&CONTINUEP"'                          00266100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00266200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00266300
&ZMS                  SETC  '&ZMS "YES"'                                00266400
&ZMS                  SETC  '&ZMS OR "NO".'                             00266500
                      MNOTE 8,' &ZMS '                                  00266600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00266700
                      AGO   .ZG67E                                      00266800
.ZG67D                ANOP  ,                                           00266900
&XCONTINUEP           SETC  'YES'       SET DEFAULT KEYWORD             00267000
.ZG67E                ANOP  ,                                           00267100
.*------------------------------------------------------------------    00267200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00267300
                      AIF   (K'&CONTINUEP(1) GT 0).ZG67F  PARM          00267400
&XCONTINUEP           SETC  ''          ENSURE NULL KEYWORD             00267500
&ZXCONTINUEP          SETC  ''          RESET IN/OUTPUT                 00267600
&ZMS                  SETC  'THE'                                       00267700
&ZMS                  SETC  '&ZMS "CONTINUEP" KEY AND ITS'              00267800
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00267900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00268000
&ZMS                  SETC  '&ZMS "YES"'                                00268100
&ZMS                  SETC  '&ZMS OR "NO".'                             00268200
                      MNOTE 8,' &ZMS '                                  00268300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00268400
.ZG67F                ANOP  ,                                           00268500
.*----------------------------------------------------------------***   00268600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00268700
                      AIF   (N'&OWNER_TOKEN LE 1).ZG69A  CK NUM         00268800
&ZMS                  SETC  '"OWNER_TOKEN='                             00268900
&ZMS                  SETC  '&ZMS.&OWNER_TOKEN"'                        00269000
&ZMS                  SETC  '&ZMS "OWNER_TOKEN"'                        00269100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00269200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00269300
.ZG69A                ANOP  ,                                           00269400
.*-------------------------------------------------------------------   00269500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00269600
&ZXOWNER_TOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00269700
&XOWNER_TOKEN         SETC  'NO_OWNER_TOKEN'                            00269800
                      AIF   (K'&OWNER_TOKEN(1) LE 0).ZG69B  PARM        00269900
&XOWNER_TOKEN         SETC  '&OWNER_TOKEN(1)'   SET XVARIABLE           00270000
                      AIF   (N'&OWNER_TOKEN GT 1).ZG69B  MULTI          00270100
&XOWNER_TOKEN         SETC  '&OWNER_TOKEN'      SET XVARIABLE           00270200
.ZG69B                ANOP  ,                                           00270300
.*-------------------------------------------------------------------   00270400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00270500
                      AIF   (K'&ZXOWNER_TOKEN LE 0).ZG69R  NOT I/O      00270600
         AIF   ('&XOWNER_TOKEN' EQ 'NO_OWNER_TOKEN').ZG69R              00270700
                      AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZG69R         00270800
&ZCGPR                SETC  '&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2)        00270900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                00271000
                      AIF   (K'&ZCGPR GT 2).ZG69Q                       00271100
                      AIF   ('&ZCGPR' EQ '0').ZG69Q                     00271200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00271300
                      AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME   00271400
.ZG69P                ANOP  ,                                           00271500
                      AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC        00271600
                      AIF   ('&ZCGPR' LT '2').ZG69Q                     00271700
                      AIF   ('&ZCGPR' LE '12').ZG69R                    00271800
.ZG69Q                ANOP  ,                                           00271900
&ZMS                  SETC  '"OWNER_TOKEN='                             00272000
&ZMS                  SETC  '&ZMS.&OWNER_TOKEN"'                        00272100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00272200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00272300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00272400
.ZG69R                ANOP  ,                                           00272500
.*----------------------------------------------------------------***   00272600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00272700
                      AIF   (N'&OWNER_DATA LE 1).ZG72A  CK NUM          00272800
&ZMS                  SETC  '"OWNER_DATA='                              00272900
&ZMS                  SETC  '&ZMS.&OWNER_DATA"'                         00273000
&ZMS                  SETC  '&ZMS "OWNER_DATA"'                         00273100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00273200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00273300
.ZG72A                ANOP  ,                                           00273400
.*-------------------------------------------------------------------   00273500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00273600
&ZXOWNER_DATA         SETC  'INPUT'     SET IN/OUTPUT                   00273700
&XOWNER_DATA          SETC  'NO_OWNER_DATA'                             00273800
                      AIF   (K'&OWNER_DATA(1) LE 0).ZG72B  PARM         00273900
&XOWNER_DATA          SETC  '&OWNER_DATA(1)'    SET XVARIABLE           00274000
                      AIF   (N'&OWNER_DATA GT 1).ZG72B  MULTI           00274100
&XOWNER_DATA          SETC  '&OWNER_DATA'       SET XVARIABLE           00274200
.ZG72B                ANOP  ,                                           00274300
.*-------------------------------------------------------------------   00274400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00274500
                      AIF   (K'&ZXOWNER_DATA LE 0).ZG72R  NOT I/O       00274600
         AIF   ('&XOWNER_DATA' EQ 'NO_OWNER_DATA').ZG72R                00274700
                      AIF   ('&XOWNER_DATA'(1,1) NE '(').ZG72R          00274800
&ZCGPR                SETC  '&XOWNER_DATA'(2,K'&XOWNER_DATA-2)          00274900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                00275000
                      AIF   (K'&ZCGPR GT 2).ZG72Q                       00275100
                      AIF   ('&ZCGPR' EQ '0').ZG72Q                     00275200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00275300
                      AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME   00275400
.ZG72P                ANOP  ,                                           00275500
                      AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC        00275600
                      AIF   ('&ZCGPR' LT '2').ZG72Q                     00275700
                      AIF   ('&ZCGPR' LE '12').ZG72R                    00275800
.ZG72Q                ANOP  ,                                           00275900
&ZMS                  SETC  '"OWNER_DATA='                              00276000
&ZMS                  SETC  '&ZMS.&OWNER_DATA"'                         00276100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00276200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00276300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00276400
.ZG72R                ANOP  ,                                           00276500
.*----------------------------------------------------------------***   00276600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00276700
                      AIF   (N'&FROM_SUBSYSNM LE 1).ZG75A  CK NUM       00276800
&ZMS                  SETC  '"FROM_SUBSYSNM='                           00276900
&ZMS                  SETC  '&ZMS.&FROM_SUBSYSNM"'                      00277000
&ZMS                  SETC  '&ZMS "FROM_SUBSYSNM"'                      00277100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00277200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00277300
.ZG75A                ANOP  ,                                           00277400
.*-------------------------------------------------------------------   00277500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00277600
&ZXFROM_SUBSYSNM      SETC  'INPUT'     SET IN/OUTPUT                   00277700
&XFROM_SUBSYSNM       SETC  'NO_SUBSYSNM'                               00277800
                      AIF   (K'&FROM_SUBSYSNM(1) LE 0).ZG75B  PARM      00277900
&XFROM_SUBSYSNM       SETC  '&FROM_SUBSYSNM(1)'  SET XVARIABLE          00278000
                      AIF   (N'&FROM_SUBSYSNM GT 1).ZG75B  MULTI        00278100
&XFROM_SUBSYSNM       SETC  '&FROM_SUBSYSNM'    SET XVARIABLE           00278200
.ZG75B                ANOP  ,                                           00278300
.*-------------------------------------------------------------------   00278400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00278500
                      AIF   (K'&ZXFROM_SUBSYSNM LE 0).ZG75R  NOT I/O    00278600
         AIF   ('&XFROM_SUBSYSNM' EQ 'NO_SUBSYSNM').ZG75R               00278700
                      AIF   ('&XFROM_SUBSYSNM'(1,1) NE '(').ZG75R       00278800
&ZCGPR                SETC  '&XFROM_SUBSYSNM'(2,K'&XFROM_SUBSYSNM-2)    00278900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG75P                00279000
                      AIF   (K'&ZCGPR GT 2).ZG75Q                       00279100
                      AIF   ('&ZCGPR' EQ '0').ZG75Q                     00279200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00279300
                      AIF   (T'&ZCGPR NE 'N').ZG75Q  INVALID REG NAME   00279400
.ZG75P                ANOP  ,                                           00279500
                      AIF   (T'&ZCGPR NE 'N').ZG75R  NON NUMERIC        00279600
                      AIF   ('&ZCGPR' LT '2').ZG75Q                     00279700
                      AIF   ('&ZCGPR' LE '12').ZG75R                    00279800
.ZG75Q                ANOP  ,                                           00279900
&ZMS                  SETC  '"FROM_SUBSYSNM='                           00280000
&ZMS                  SETC  '&ZMS.&FROM_SUBSYSNM"'                      00280100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00280200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00280300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00280400
.ZG75R                ANOP  ,                                           00280500
.*------------------------------------------------------------------    00280600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00280700
&XREPORTONLY          SETC  ''          INITIALIZE XVARIABLE            00280800
.*-------------------------------------------------------------------   00280900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00281000
.ZG79                 ANOP  ,                                           00281100
                      AIF   (K'&REPORTONLY(1) LE 0).ZG79A               00281200
&ZTLC                 SETC 'NO'                                         00281300
                      AIF   ('&REPORTONLY(1)' NE '&ZTLC').ZG104         00281400
&XREPORTONLY          SETC  'NO'        SET KEYWORD                     00281500
                      AIF   (N'&REPORTONLY LE 1).ZG79A  CK NUM          00281600
&ZMS                  SETC  '"REPORTONLY='                              00281700
&ZMS                  SETC  '&ZMS.&REPORTONLY"'                         00281800
&ZMS                  SETC  '&ZMS "REPORTONLY"'                         00281900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00282000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00282100
.ZG79A                ANOP  ,                                           00282200
.*------------------------------------------------------------------    00282300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00282500
.ZG79A0               AIF   (K'&ASID LE 0).ZG79A1  OK                   00282600
&ZCVAL                SETC '&ZCVAL ASID'        INCORRECT KEY USED      00282700
.ZG79A1               AIF   (K'&ZCVAL LE 0).ZG79A2  OK                  00282800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00282900
&ZMS                  SETC  '"REPORTONLY'                               00283000
&ZMS                  SETC  '&ZMS.=&REPORTONLY"'                        00283100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00283200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00283300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00283400
.ZG79A2               ANOP  ,                                           00283500
.*------------------------------------------------------------------    00283600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00283700
&XBPMGMTONLY          SETC  ''          INITIALIZE XVARIABLE            00283800
.*-------------------------------------------------------------------   00283900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00284000
.ZG82                 ANOP  ,                                           00284100
                      AIF   (K'&BPMGMTONLY(1) LE 0).ZG82A               00284200
&ZTLC                 SETC 'NO'                                         00284300
                      AIF   ('&BPMGMTONLY(1)' NE '&ZTLC').ZG95          00284400
&XBPMGMTONLY          SETC  'NO'        SET KEYWORD                     00284500
                      AIF   (N'&BPMGMTONLY LE 1).ZG82A  CK NUM          00284600
&ZMS                  SETC  '"BPMGMTONLY='                              00284700
&ZMS                  SETC  '&ZMS.&BPMGMTONLY"'                         00284800
&ZMS                  SETC  '&ZMS "BPMGMTONLY"'                         00284900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00285000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00285100
.ZG82A                ANOP  ,                                           00285200
.*------------------------------------------------------------------    00285300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00285400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00285500
.ZG82A0               AIF   (K'&ASSOCIATE LE 0).ZG82A1  OK              00285600
&ZCVAL                SETC '&ZCVAL ASSOCIATE'   INCORRECT KEY USED      00285700
.ZG82A1               AIF   (K'&ENCLAVETOKEN LE 0).ZG82A2  OK           00285800
&ZCVAL                SETC '&ZCVAL ENCLAVETOKEN'  INCORRECT KEY USED    00285900
.ZG82A2               AIF   (K'&ZCVAL LE 0).ZG82A3  OK                  00286000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00286100
&ZMS                  SETC  '"BPMGMTONLY'                               00286200
&ZMS                  SETC  '&ZMS.=&BPMGMTONLY"'                        00286300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00286400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00286500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00286600
.ZG82A3               ANOP  ,                                           00286700
.*------------------------------------------------------------------    00286800
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00286900
&XEXSTARTTIMEP        SETC  ''          INITIALIZE XVARIABLE            00287000
.*-------------------------------------------------------------------   00287100
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00287200
.ZG85                 ANOP  ,                                           00287300
                      AIF   (K'&EXSTARTTIMEP(1) LE 0).ZG85A             00287400
&ZTLC                 SETC 'NO'                                         00287500
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG86        00287600
&XEXSTARTTIMEP        SETC  'NO'        SET KEYWORD                     00287700
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG85A  CK NUM        00287800
&ZMS                  SETC  '"EXSTARTTIMEP='                            00287900
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00288000
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00288100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00288200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00288300
.ZG85A                ANOP  ,                                           00288400
.*------------------------------------------------------------------    00288500
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00288600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00288700
.ZG85A0               AIF   (K'&EXSTARTTIME LE 0).ZG85A1  OK            00288800
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00288900
.ZG85A1               AIF   (K'&ZCVAL LE 0).ZG85A2  OK                  00289000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00289100
&ZMS                  SETC  '"EXSTARTTIMEP'                             00289200
&ZMS                  SETC  '&ZMS.=&EXSTARTTIMEP"'                      00289300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00289400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00289500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00289600
.ZG85A2               ANOP  ,                                           00289700
.*-------------------------------------------------------------------   00289800
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00289900
.ZG86                 ANOP  ,                                           00290000
&ZTLC                 SETC 'CURRENT'                                    00290100
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG87        00290200
&XEXSTARTTIMEP        SETC  'CURRENT'   SET KEYWORD                     00290300
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG86A  CK NUM        00290400
&ZMS                  SETC  '"EXSTARTTIMEP='                            00290500
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00290600
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00290700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00290800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00290900
.ZG86A                ANOP  ,                                           00291000
.*------------------------------------------------------------------    00291100
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00291200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00291300
.ZG86A0               AIF   (K'&EXSTARTTIME LE 0).ZG86A1  OK            00291400
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00291500
.ZG86A1               AIF   (K'&ZCVAL LE 0).ZG86A2  OK                  00291600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00291700
&ZMS                  SETC  '"EXSTARTTIMEP'                             00291800
&ZMS                  SETC  '&ZMS.=&EXSTARTTIMEP"'                      00291900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00292000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00292100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00292200
.ZG86A2               ANOP  ,                                           00292300
.*-------------------------------------------------------------------   00292400
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00292500
.ZG87                 ANOP  ,                                           00292600
&ZTLC                 SETC 'YES'                                        00292700
                      AIF   ('&EXSTARTTIMEP(1)' NE '&ZTLC').ZG91        00292800
&XEXSTARTTIMEP        SETC  'YES'       SET KEYWORD                     00292900
                      AIF   (N'&EXSTARTTIMEP LE 1).ZG87A  CK NUM        00293000
&ZMS                  SETC  '"EXSTARTTIMEP='                            00293100
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00293200
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP"'                       00293300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00293400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00293500
.ZG87A                ANOP  ,                                           00293600
.*----------------------------------------------------------------***   00293700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00293800
                      AIF   (N'&EXSTARTTIME LE 1).ZG89A  CK NUM         00293900
&ZMS                  SETC  '"EXSTARTTIME='                             00294000
&ZMS                  SETC  '&ZMS.&EXSTARTTIME"'                        00294100
&ZMS                  SETC  '&ZMS "EXSTARTTIME"'                        00294200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00294300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00294400
.ZG89A                ANOP  ,                                           00294500
.*-------------------------------------------------------------------   00294600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00294700
&ZXEXSTARTTIME        SETC  'INPUT'     SET IN/OUTPUT                   00294800
&XEXSTARTTIME         SETC  '&EXSTARTTIME(1)'   SET XVARIABLE           00294900
                      AIF   (N'&EXSTARTTIME GT 1).ZG89B  MULTI          00295000
&XEXSTARTTIME         SETC  '&EXSTARTTIME'      SET XVARIABLE           00295100
.ZG89B                AIF   (K'&EXSTARTTIME(1) GT 0).ZG89C              00295200
&ZXEXSTARTTIME        SETC  ''          RESET IN/OUTPUT                 00295300
&ZMS                  SETC  ' '                                         00295400
&ZMS                  SETC  '&ZMS "EXSTARTTIME" KEY AND ITS'            00295500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00295600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00295700
.ZG89C                ANOP  ,                                           00295800
.*-------------------------------------------------------------------   00295900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00296000
                      AIF   (K'&ZXEXSTARTTIME LE 0).ZG89R  NOT I/O      00296100
                      AIF   ('&XEXSTARTTIME'(1,1) NE '(').ZG89R         00296200
&ZCGPR                SETC  '&XEXSTARTTIME'(2,K'&XEXSTARTTIME-2)        00296300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                00296400
                      AIF   (K'&ZCGPR GT 2).ZG89Q                       00296500
                      AIF   ('&ZCGPR' EQ '0').ZG89Q                     00296600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00296700
                      AIF   (T'&ZCGPR NE 'N').ZG89Q  INVALID REG NAME   00296800
.ZG89P                ANOP  ,                                           00296900
                      AIF   (T'&ZCGPR NE 'N').ZG89R  NON NUMERIC        00297000
                      AIF   ('&ZCGPR' LT '2').ZG89Q                     00297100
                      AIF   ('&ZCGPR' LE '12').ZG89R                    00297200
.ZG89Q                ANOP  ,                                           00297300
&ZMS                  SETC  '"EXSTARTTIME='                             00297400
&ZMS                  SETC  '&ZMS.&EXSTARTTIME"'                        00297500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00297600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00297700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00297800
.ZG89R                ANOP  ,                                           00297900
.*------------------------------------------------------------------    00298000
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00298100
.ZG91                 ANOP  ,                                           00298200
&ZXEXSTARTTIMEP       SETC  'INPUT'     SET IN/OUTPUT                   00298300
                      AIF   (K'&XEXSTARTTIMEP GT 0).ZG91E  VALID ARG    00298400
                      AIF   (T'&EXSTARTTIMEP EQ 'O').ZG91D  OMITTED     00298500
&ZASYSLNDX            SETA  0                                           00298600
.ZG91A                ANOP  ,           POSITIONAL MACRO KEY            00298700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00298800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG91C            00298900
&ZTLC                 SETC 'EXSTARTTIMEP'                               00299000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG91A   00299100
.ZG91B                ANOP  ,                                           00299200
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00299300
&ZMS                  SETC  'THE "EXSTARTTIMEP" KEY'                    00299400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00299500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00299600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00299700
                      AGO   .ZG91E                                      00299800
.ZG91C                ANOP  ,                                           00299900
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00300000
&ZMS                  SETC  '"EXSTARTTIMEP='                            00300100
&ZMS                  SETC  '&ZMS.&EXSTARTTIMEP"'                       00300200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00300300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00300400
&ZMS                  SETC  '&ZMS "NO",'                                00300500
&ZMS                  SETC  '&ZMS "CURRENT",'                           00300600
&ZMS                  SETC  '&ZMS OR "YES".'                            00300700
                      MNOTE 8,' &ZMS '                                  00300800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00300900
                      AGO   .ZG91E                                      00301000
.ZG91D                ANOP  ,                                           00301100
&XEXSTARTTIMEP        SETC  'NO'        SET DEFAULT KEYWORD             00301200
.ZG91E                ANOP  ,                                           00301300
.*------------------------------------------------------------------    00301400
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00301500
                      AIF   (K'&EXSTARTTIMEP(1) GT 0).ZG91F  PARM       00301600
&XEXSTARTTIMEP        SETC  ''          ENSURE NULL KEYWORD             00301700
&ZXEXSTARTTIMEP       SETC  ''          RESET IN/OUTPUT                 00301800
&ZMS                  SETC  'THE'                                       00301900
&ZMS                  SETC  '&ZMS "EXSTARTTIMEP" KEY AND ITS'           00302000
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00302100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00302200
&ZMS                  SETC  '&ZMS "NO",'                                00302300
&ZMS                  SETC  '&ZMS "CURRENT",'                           00302400
&ZMS                  SETC  '&ZMS OR "YES".'                            00302500
                      MNOTE 8,' &ZMS '                                  00302600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00302700
.ZG91F                ANOP  ,                                           00302800
.*----------------------------------------------------------------***   00302900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00303000
                      AIF   (N'&SERVCLS LE 1).ZG93A  CK NUM             00303100
&ZMS                  SETC  '"SERVCLS='                                 00303200
&ZMS                  SETC  '&ZMS.&SERVCLS"'                            00303300
&ZMS                  SETC  '&ZMS "SERVCLS"'                            00303400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00303500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00303600
.ZG93A                ANOP  ,                                           00303700
.*-------------------------------------------------------------------   00303800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00303900
&ZXSERVCLS            SETC  'INPUT'     SET IN/OUTPUT                   00304000
&XSERVCLS             SETC  'NO_SERVCLS'                                00304100
                      AIF   (K'&SERVCLS(1) LE 0).ZG93B  PARM            00304200
&XSERVCLS             SETC  '&SERVCLS(1)'       SET XVARIABLE           00304300
                      AIF   (N'&SERVCLS GT 1).ZG93B  MULTI              00304400
&XSERVCLS             SETC  '&SERVCLS'  SET XVARIABLE                   00304500
.ZG93B                ANOP  ,                                           00304600
.*-------------------------------------------------------------------   00304700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00304800
                      AIF   (K'&ZXSERVCLS LE 0).ZG93R  NOT I/O          00304900
         AIF   ('&XSERVCLS' EQ 'NO_SERVCLS').ZG93R                      00305000
                      AIF   ('&XSERVCLS'(1,1) NE '(').ZG93R             00305100
&ZCGPR                SETC  '&XSERVCLS'(2,K'&XSERVCLS-2)                00305200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG93P                00305300
                      AIF   (K'&ZCGPR GT 2).ZG93Q                       00305400
                      AIF   ('&ZCGPR' EQ '0').ZG93Q                     00305500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00305600
                      AIF   (T'&ZCGPR NE 'N').ZG93Q  INVALID REG NAME   00305700
.ZG93P                ANOP  ,                                           00305800
                      AIF   (T'&ZCGPR NE 'N').ZG93R  NON NUMERIC        00305900
                      AIF   ('&ZCGPR' LT '2').ZG93Q                     00306000
                      AIF   ('&ZCGPR' LE '12').ZG93R                    00306100
.ZG93Q                ANOP  ,                                           00306200
&ZMS                  SETC  '"SERVCLS='                                 00306300
&ZMS                  SETC  '&ZMS.&SERVCLS"'                            00306400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00306500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00306600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00306700
.ZG93R                ANOP  ,                                           00306800
.*-------------------------------------------------------------------   00306900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00307000
.ZG95                 ANOP  ,                                           00307100
&ZTLC                 SETC 'YES'                                        00307200
                      AIF   ('&BPMGMTONLY(1)' NE '&ZTLC').ZG103         00307300
&XBPMGMTONLY          SETC  'YES'       SET KEYWORD                     00307400
                      AIF   (N'&BPMGMTONLY LE 1).ZG95A  CK NUM          00307500
&ZMS                  SETC  '"BPMGMTONLY='                              00307600
&ZMS                  SETC  '&ZMS.&BPMGMTONLY"'                         00307700
&ZMS                  SETC  '&ZMS "BPMGMTONLY"'                         00307800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00307900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00308000
.ZG95A                ANOP  ,                                           00308100
.*------------------------------------------------------------------    00308200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00308300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00308400
.ZG95A0               AIF   (K'&EXSTARTTIMEP LE 0).ZG95A1  OK           00308500
&ZCVAL                SETC '&ZCVAL EXSTARTTIMEP'  INCORRECT KEY USED    00308600
.ZG95A1               AIF   (K'&EXSTARTTIME LE 0).ZG95A2  OK            00308700
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00308800
.ZG95A2               AIF   (K'&SERVCLS LE 0).ZG95A3  OK                00308900
&ZCVAL                SETC '&ZCVAL SERVCLS'     INCORRECT KEY USED      00309000
.ZG95A3               AIF   (K'&ZCVAL LE 0).ZG95A4  OK                  00309100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00309200
&ZMS                  SETC  '"BPMGMTONLY'                               00309300
&ZMS                  SETC  '&ZMS.=&BPMGMTONLY"'                        00309400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00309500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00309600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00309700
.ZG95A4               ANOP  ,                                           00309800
.*------------------------------------------------------------------    00309900
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00310000
&XASSOCIATE           SETC  ''          INITIALIZE XVARIABLE            00310100
.*-------------------------------------------------------------------   00310200
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00310300
.ZG98                 ANOP  ,                                           00310400
                      AIF   (K'&ASSOCIATE(1) LE 0).ZG98A                00310500
&ZTLC                 SETC 'ENCLAVE'                                    00310600
                      AIF   ('&ASSOCIATE(1)' NE '&ZTLC').ZG102          00310700
&XASSOCIATE           SETC  'ENCLAVE'   SET KEYWORD                     00310800
                      AIF   (N'&ASSOCIATE LE 1).ZG98A  CK NUM           00310900
&ZMS                  SETC  '"ASSOCIATE='                               00311000
&ZMS                  SETC  '&ZMS.&ASSOCIATE"'                          00311100
&ZMS                  SETC  '&ZMS "ASSOCIATE"'                          00311200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00311300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00311400
.ZG98A                ANOP  ,                                           00311500
.*----------------------------------------------------------------***   00311600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00311700
                      AIF   (N'&ENCLAVETOKEN LE 1).ZG100A  CK NUM       00311800
&ZMS                  SETC  '"ENCLAVETOKEN='                            00311900
&ZMS                  SETC  '&ZMS.&ENCLAVETOKEN"'                       00312000
&ZMS                  SETC  '&ZMS "ENCLAVETOKEN"'                       00312100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00312200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00312300
.ZG100A               ANOP  ,                                           00312400
.*-------------------------------------------------------------------   00312500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00312600
&ZXENCLAVETOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00312700
&XENCLAVETOKEN        SETC  '&ENCLAVETOKEN(1)'  SET XVARIABLE           00312800
                      AIF   (N'&ENCLAVETOKEN GT 1).ZG100B  MULTI        00312900
&XENCLAVETOKEN        SETC  '&ENCLAVETOKEN'     SET XVARIABLE           00313000
.ZG100B               AIF   (K'&ENCLAVETOKEN(1) GT 0).ZG100C            00313100
&ZXENCLAVETOKEN       SETC  ''          RESET IN/OUTPUT                 00313200
&ZMS                  SETC  ' '                                         00313300
&ZMS                  SETC  '&ZMS "ENCLAVETOKEN" KEY AND ITS'           00313400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00313500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00313600
.ZG100C               ANOP  ,                                           00313700
.*-------------------------------------------------------------------   00313800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00313900
                      AIF   (K'&ZXENCLAVETOKEN LE 0).ZG100R  NOT I/O    00314000
                      AIF   ('&XENCLAVETOKEN'(1,1) NE '(').ZG100R       00314100
&ZCGPR                SETC  '&XENCLAVETOKEN'(2,K'&XENCLAVETOKEN-2)      00314200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG100P               00314300
                      AIF   (K'&ZCGPR GT 2).ZG100Q                      00314400
                      AIF   ('&ZCGPR' EQ '0').ZG100Q                    00314500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00314600
                      AIF   (T'&ZCGPR NE 'N').ZG100Q  INVALID REG NAME  00314700
.ZG100P               ANOP  ,                                           00314800
                      AIF   (T'&ZCGPR NE 'N').ZG100R  NON NUMERIC       00314900
                      AIF   ('&ZCGPR' LT '2').ZG100Q                    00315000
                      AIF   ('&ZCGPR' LE '12').ZG100R                   00315100
.ZG100Q               ANOP  ,                                           00315200
&ZMS                  SETC  '"ENCLAVETOKEN='                            00315300
&ZMS                  SETC  '&ZMS.&ENCLAVETOKEN"'                       00315400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00315500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00315600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00315700
.ZG100R               ANOP  ,                                           00315800
.*------------------------------------------------------------------    00315900
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00316000
.ZG102                ANOP  ,                                           00316100
&ZXASSOCIATE          SETC  'INPUT'     SET IN/OUTPUT                   00316200
                      AIF   (K'&XASSOCIATE GT 0).ZG102E  VALID ARG      00316300
                      AIF   (T'&ASSOCIATE EQ 'O').ZG102D  OMITTED       00316400
&ZASYSLNDX            SETA  0                                           00316500
.ZG102A               ANOP  ,           POSITIONAL MACRO KEY            00316600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00316700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG102C           00316800
&ZTLC                 SETC 'ASSOCIATE'                                  00316900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG102A  00317000
.ZG102B               ANOP  ,                                           00317100
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00317200
&ZMS                  SETC  'THE "ASSOCIATE" KEY'                       00317300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00317400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00317500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00317600
                      AGO   .ZG102E                                     00317700
.ZG102C               ANOP  ,                                           00317800
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00317900
&ZMS                  SETC  '"ASSOCIATE='                               00318000
&ZMS                  SETC  '&ZMS.&ASSOCIATE"'                          00318100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00318200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00318300
&ZMS                  SETC  '&ZMS "ENCLAVE".'                           00318400
                      MNOTE 8,' &ZMS '                                  00318500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00318600
                      AGO   .ZG102E                                     00318700
.ZG102D               ANOP  ,                                           00318800
&XASSOCIATE           SETC  'ENCLAVE'   SET DEFAULT KEYWORD             00318900
.ZG102E               ANOP  ,                                           00319000
.*------------------------------------------------------------------    00319100
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00319200
                      AIF   (K'&ASSOCIATE(1) GT 0).ZG102F  PARM         00319300
&XASSOCIATE           SETC  ''          ENSURE NULL KEYWORD             00319400
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00319500
&ZMS                  SETC  'THE'                                       00319600
&ZMS                  SETC  '&ZMS "ASSOCIATE" KEY AND ITS'              00319700
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00319800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00319900
&ZMS                  SETC  '&ZMS "ENCLAVE".'                           00320000
                      MNOTE 8,' &ZMS '                                  00320100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00320200
.ZG102F               ANOP  ,                                           00320300
.*------------------------------------------------------------------    00320400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00320500
.ZG103                ANOP  ,                                           00320600
&ZXBPMGMTONLY         SETC  'INPUT'     SET IN/OUTPUT                   00320700
                      AIF   (K'&XBPMGMTONLY GT 0).ZG103E  VALID ARG     00320800
                      AIF   (T'&BPMGMTONLY EQ 'O').ZG103D  OMITTED      00320900
&ZASYSLNDX            SETA  0                                           00321000
.ZG103A               ANOP  ,           POSITIONAL MACRO KEY            00321100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00321200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG103C           00321300
&ZTLC                 SETC 'BPMGMTONLY'                                 00321400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG103A  00321500
.ZG103B               ANOP  ,                                           00321600
&ZXBPMGMTONLY         SETC  ''          RESET IN/OUTPUT                 00321700
&ZMS                  SETC  'THE "BPMGMTONLY" KEY'                      00321800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00321900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00322000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00322100
                      AGO   .ZG103E                                     00322200
.ZG103C               ANOP  ,                                           00322300
&ZXBPMGMTONLY         SETC  ''          RESET IN/OUTPUT                 00322400
&ZMS                  SETC  '"BPMGMTONLY='                              00322500
&ZMS                  SETC  '&ZMS.&BPMGMTONLY"'                         00322600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00322700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00322800
&ZMS                  SETC  '&ZMS "NO"'                                 00322900
&ZMS                  SETC  '&ZMS OR "YES".'                            00323000
                      MNOTE 8,' &ZMS '                                  00323100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00323200
                      AGO   .ZG103E                                     00323300
.ZG103D               ANOP  ,                                           00323400
&XBPMGMTONLY          SETC  'NO'        SET DEFAULT KEYWORD             00323500
.ZG103E               ANOP  ,                                           00323600
.*-------------------------------------------------------------------   00323700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00323800
.ZG104                ANOP  ,                                           00323900
&ZTLC                 SETC 'YES'                                        00324000
                      AIF   ('&REPORTONLY(1)' NE '&ZTLC').ZG116         00324100
&XREPORTONLY          SETC  'YES'       SET KEYWORD                     00324200
                      AIF   (N'&REPORTONLY LE 1).ZG104A  CK NUM         00324300
&ZMS                  SETC  '"REPORTONLY='                              00324400
&ZMS                  SETC  '&ZMS.&REPORTONLY"'                         00324500
&ZMS                  SETC  '&ZMS "REPORTONLY"'                         00324600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00324700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00324800
.ZG104A               ANOP  ,                                           00324900
.*------------------------------------------------------------------    00325000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00325100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00325200
.ZG104A0              AIF   (K'&BPMGMTONLY LE 0).ZG104A1  OK            00325300
&ZCVAL                SETC '&ZCVAL BPMGMTONLY'  INCORRECT KEY USED      00325400
.ZG104A1              AIF   (K'&EXSTARTTIMEP LE 0).ZG104A2  OK          00325500
&ZCVAL                SETC '&ZCVAL EXSTARTTIMEP'  INCORRECT KEY USED    00325600
.ZG104A2              AIF   (K'&EXSTARTTIME LE 0).ZG104A3  OK           00325700
&ZCVAL                SETC '&ZCVAL EXSTARTTIME'  INCORRECT KEY USED     00325800
.ZG104A3              AIF   (K'&SERVCLS LE 0).ZG104A4  OK               00325900
&ZCVAL                SETC '&ZCVAL SERVCLS'     INCORRECT KEY USED      00326000
.ZG104A4              AIF   (K'&ZCVAL LE 0).ZG104A5  OK                 00326100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00326200
&ZMS                  SETC  '"REPORTONLY'                               00326300
&ZMS                  SETC  '&ZMS.=&REPORTONLY"'                        00326400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00326500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00326600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00326700
.ZG104A5              ANOP  ,                                           00326800
.*------------------------------------------------------------------    00326900
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00327000
&XASSOCIATE           SETC  ''          INITIALIZE XVARIABLE            00327100
.*-------------------------------------------------------------------   00327200
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00327300
.ZG107                ANOP  ,                                           00327400
                      AIF   (K'&ASSOCIATE(1) LE 0).ZG107A               00327500
&ZTLC                 SETC 'ENCLAVE'                                    00327600
                      AIF   ('&ASSOCIATE(1)' NE '&ZTLC').ZG111          00327700
&XASSOCIATE           SETC  'ENCLAVE'   SET KEYWORD                     00327800
                      AIF   (N'&ASSOCIATE LE 1).ZG107A  CK NUM          00327900
&ZMS                  SETC  '"ASSOCIATE='                               00328000
&ZMS                  SETC  '&ZMS.&ASSOCIATE"'                          00328100
&ZMS                  SETC  '&ZMS "ASSOCIATE"'                          00328200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00328300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00328400
.ZG107A               ANOP  ,                                           00328500
.*------------------------------------------------------------------    00328600
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00328700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00328800
.ZG107A0              AIF   (K'&ASID LE 0).ZG107A1  OK                  00328900
&ZCVAL                SETC '&ZCVAL ASID'        INCORRECT KEY USED      00329000
.ZG107A1              AIF   (K'&ZCVAL LE 0).ZG107A2  OK                 00329100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00329200
&ZMS                  SETC  '"ASSOCIATE'                                00329300
&ZMS                  SETC  '&ZMS.=&ASSOCIATE"'                         00329400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00329500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00329600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00329700
.ZG107A2              ANOP  ,                                           00329800
.*----------------------------------------------------------------***   00329900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00330000
                      AIF   (N'&ENCLAVETOKEN LE 1).ZG109A  CK NUM       00330100
&ZMS                  SETC  '"ENCLAVETOKEN='                            00330200
&ZMS                  SETC  '&ZMS.&ENCLAVETOKEN"'                       00330300
&ZMS                  SETC  '&ZMS "ENCLAVETOKEN"'                       00330400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00330500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00330600
.ZG109A               ANOP  ,                                           00330700
.*-------------------------------------------------------------------   00330800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00330900
&ZXENCLAVETOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00331000
&XENCLAVETOKEN        SETC  '&ENCLAVETOKEN(1)'  SET XVARIABLE           00331100
                      AIF   (N'&ENCLAVETOKEN GT 1).ZG109B  MULTI        00331200
&XENCLAVETOKEN        SETC  '&ENCLAVETOKEN'     SET XVARIABLE           00331300
.ZG109B               AIF   (K'&ENCLAVETOKEN(1) GT 0).ZG109C            00331400
&ZXENCLAVETOKEN       SETC  ''          RESET IN/OUTPUT                 00331500
&ZMS                  SETC  'WHEN "ENCLAVE" IS SPECIFIED'               00331600
&ZMS                  SETC  '&ZMS , "ENCLAVETOKEN" KEY AND ITS'         00331700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00331800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00331900
.ZG109C               ANOP  ,                                           00332000
.*-------------------------------------------------------------------   00332100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00332200
                      AIF   (K'&ZXENCLAVETOKEN LE 0).ZG109R  NOT I/O    00332300
                      AIF   ('&XENCLAVETOKEN'(1,1) NE '(').ZG109R       00332400
&ZCGPR                SETC  '&XENCLAVETOKEN'(2,K'&XENCLAVETOKEN-2)      00332500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG109P               00332600
                      AIF   (K'&ZCGPR GT 2).ZG109Q                      00332700
                      AIF   ('&ZCGPR' EQ '0').ZG109Q                    00332800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00332900
                      AIF   (T'&ZCGPR NE 'N').ZG109Q  INVALID REG NAME  00333000
.ZG109P               ANOP  ,                                           00333100
                      AIF   (T'&ZCGPR NE 'N').ZG109R  NON NUMERIC       00333200
                      AIF   ('&ZCGPR' LT '2').ZG109Q                    00333300
                      AIF   ('&ZCGPR' LE '12').ZG109R                   00333400
.ZG109Q               ANOP  ,                                           00333500
&ZMS                  SETC  '"ENCLAVETOKEN='                            00333600
&ZMS                  SETC  '&ZMS.&ENCLAVETOKEN"'                       00333700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00333800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00333900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00334000
.ZG109R               ANOP  ,                                           00334100
.*-------------------------------------------------------------------   00334200
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00334300
.ZG111                ANOP  ,                                           00334400
&ZTLC                 SETC 'ADDRESS_SPACE'                              00334500
                      AIF   ('&ASSOCIATE(1)' NE '&ZTLC').ZG115          00334600
&XASSOCIATE           SETC  'ADDRESS_SPACE'     SET KEYWORD             00334700
                      AIF   (N'&ASSOCIATE LE 1).ZG111A  CK NUM          00334800
&ZMS                  SETC  '"ASSOCIATE='                               00334900
&ZMS                  SETC  '&ZMS.&ASSOCIATE"'                          00335000
&ZMS                  SETC  '&ZMS "ASSOCIATE"'                          00335100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00335200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00335300
.ZG111A               ANOP  ,                                           00335400
.*------------------------------------------------------------------    00335500
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00335600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00335700
.ZG111A0              AIF   (K'&ENCLAVETOKEN LE 0).ZG111A1  OK          00335800
&ZCVAL                SETC '&ZCVAL ENCLAVETOKEN'  INCORRECT KEY USED    00335900
.ZG111A1              AIF   (K'&ZCVAL LE 0).ZG111A2  OK                 00336000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00336100
&ZMS                  SETC  '"ASSOCIATE'                                00336200
&ZMS                  SETC  '&ZMS.=&ASSOCIATE"'                         00336300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00336400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00336500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00336600
.ZG111A2              ANOP  ,                                           00336700
.*----------------------------------------------------------------***   00336800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00336900
                      AIF   (N'&ASID LE 1).ZG113A  CK NUM               00337000
&ZMS                  SETC  '"ASID='                                    00337100
&ZMS                  SETC  '&ZMS.&ASID"'                               00337200
&ZMS                  SETC  '&ZMS "ASID"'                               00337300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00337400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00337500
.ZG113A               ANOP  ,                                           00337600
.*-------------------------------------------------------------------   00337700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00337800
&ZXASID               SETC  'INPUT'     SET IN/OUTPUT                   00337900
&XASID                SETC  '&ASID(1)'  SET XVARIABLE                   00338000
                      AIF   (N'&ASID GT 1).ZG113B  MULTI                00338100
&XASID                SETC  '&ASID'     SET XVARIABLE                   00338200
.ZG113B               AIF   (K'&ASID(1) GT 0).ZG113C                    00338300
&ZXASID               SETC  ''          RESET IN/OUTPUT                 00338400
&ZMS                  SETC  'WHEN "ADDRESS_SPACE" IS SPECIFIED'         00338500
&ZMS                  SETC  '&ZMS , "ASID" KEY AND ITS'                 00338600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00338700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00338800
.ZG113C               ANOP  ,                                           00338900
.*-------------------------------------------------------------------   00339000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00339100
                      AIF   (K'&ZXASID LE 0).ZG113R  NOT I/O            00339200
                      AIF   ('&XASID'(1,1) NE '(').ZG113R               00339300
&ZCGPR                SETC  '&XASID'(2,K'&XASID-2)                      00339400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG113P               00339500
                      AIF   (K'&ZCGPR GT 2).ZG113Q                      00339600
                      AIF   ('&ZCGPR' EQ '0').ZG113Q                    00339700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00339800
                      AIF   (T'&ZCGPR NE 'N').ZG113Q  INVALID REG NAME  00339900
.ZG113P               ANOP  ,                                           00340000
                      AIF   (T'&ZCGPR NE 'N').ZG113R  NON NUMERIC       00340100
                      AIF   ('&ZCGPR' LT '2').ZG113Q                    00340200
                      AIF   ('&ZCGPR' LE '12').ZG113R                   00340300
.ZG113Q               ANOP  ,                                           00340400
&ZMS                  SETC  '"ASID='                                    00340500
&ZMS                  SETC  '&ZMS.&ASID"'                               00340600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00340700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00340800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00340900
.ZG113R               ANOP  ,                                           00341000
.*------------------------------------------------------------------    00341100
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00341200
.ZG115                ANOP  ,                                           00341300
&ZXASSOCIATE          SETC  'INPUT'     SET IN/OUTPUT                   00341400
                      AIF   (K'&XASSOCIATE GT 0).ZG115E  VALID ARG      00341500
                      AIF   (T'&ASSOCIATE EQ 'O').ZG115D  OMITTED       00341600
&ZASYSLNDX            SETA  0                                           00341700
.ZG115A               ANOP  ,           POSITIONAL MACRO KEY            00341800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00341900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG115C           00342000
&ZTLC                 SETC 'ASSOCIATE'                                  00342100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG115A  00342200
.ZG115B               ANOP  ,                                           00342300
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00342400
&ZMS                  SETC  'THE "ASSOCIATE" KEY'                       00342500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00342600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00342700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00342800
                      AGO   .ZG115E                                     00342900
.ZG115C               ANOP  ,                                           00343000
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00343100
&ZMS                  SETC  '"ASSOCIATE='                               00343200
&ZMS                  SETC  '&ZMS.&ASSOCIATE"'                          00343300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00343400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00343500
&ZMS                  SETC  '&ZMS "ENCLAVE"'                            00343600
&ZMS                  SETC  '&ZMS OR "ADDRESS_SPACE".'                  00343700
                      MNOTE 8,' &ZMS '                                  00343800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00343900
                      AGO   .ZG115E                                     00344000
.ZG115D               ANOP  ,                                           00344100
&XASSOCIATE           SETC  'ENCLAVE'   SET DEFAULT KEYWORD             00344200
.ZG115E               ANOP  ,                                           00344300
.*------------------------------------------------------------------    00344400
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00344500
                      AIF   (K'&ASSOCIATE(1) GT 0).ZG115F  PARM         00344600
&XASSOCIATE           SETC  ''          ENSURE NULL KEYWORD             00344700
&ZXASSOCIATE          SETC  ''          RESET IN/OUTPUT                 00344800
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED, THE'              00344900
&ZMS                  SETC  '&ZMS "ASSOCIATE" KEY AND ITS'              00345000
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00345100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00345200
&ZMS                  SETC  '&ZMS "ENCLAVE"'                            00345300
&ZMS                  SETC  '&ZMS OR "ADDRESS_SPACE".'                  00345400
                      MNOTE 8,' &ZMS '                                  00345500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00345600
.ZG115F               ANOP  ,                                           00345700
.*------------------------------------------------------------------    00345800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00345900
.ZG116                ANOP  ,                                           00346000
&ZXREPORTONLY         SETC  'INPUT'     SET IN/OUTPUT                   00346100
                      AIF   (K'&XREPORTONLY GT 0).ZG116E  VALID ARG     00346200
                      AIF   (T'&REPORTONLY EQ 'O').ZG116D  OMITTED      00346300
&ZASYSLNDX            SETA  0                                           00346400
.ZG116A               ANOP  ,           POSITIONAL MACRO KEY            00346500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00346600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG116C           00346700
&ZTLC                 SETC 'REPORTONLY'                                 00346800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG116A  00346900
.ZG116B               ANOP  ,                                           00347000
&ZXREPORTONLY         SETC  ''          RESET IN/OUTPUT                 00347100
&ZMS                  SETC  'THE "REPORTONLY" KEY'                      00347200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00347300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00347400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00347500
                      AGO   .ZG116E                                     00347600
.ZG116C               ANOP  ,                                           00347700
&ZXREPORTONLY         SETC  ''          RESET IN/OUTPUT                 00347800
&ZMS                  SETC  '"REPORTONLY='                              00347900
&ZMS                  SETC  '&ZMS.&REPORTONLY"'                         00348000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00348100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00348200
&ZMS                  SETC  '&ZMS "NO"'                                 00348300
&ZMS                  SETC  '&ZMS OR "YES".'                            00348400
                      MNOTE 8,' &ZMS '                                  00348500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00348600
                      AGO   .ZG116E                                     00348700
.ZG116D               ANOP  ,                                           00348800
&XREPORTONLY          SETC  'NO'        SET DEFAULT KEYWORD             00348900
.ZG116E               ANOP  ,                                           00349000
.*------------------------------------------------------------------    00349100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00349200
&XSCOPE               SETC  ''          INITIALIZE XVARIABLE            00349300
.*-------------------------------------------------------------------   00349400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00349500
.ZG119                ANOP  ,                                           00349600
                      AIF   (K'&SCOPE(1) LE 0).ZG119A                   00349700
&ZTLC                 SETC 'SHARED'                                     00349800
                      AIF   ('&SCOPE(1)' NE '&ZTLC').ZG120              00349900
&XSCOPE               SETC  'SHARED'    SET KEYWORD                     00350000
                      AIF   (N'&SCOPE LE 1).ZG119A  CK NUM              00350100
&ZMS                  SETC  '"SCOPE='                                   00350200
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00350300
&ZMS                  SETC  '&ZMS "SCOPE"'                              00350400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00350500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00350600
.ZG119A               ANOP  ,                                           00350700
.*-------------------------------------------------------------------   00350800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00350900
.ZG120                ANOP  ,                                           00351000
&ZTLC                 SETC 'SINGLE'                                     00351100
                      AIF   ('&SCOPE(1)' NE '&ZTLC').ZG121              00351200
&XSCOPE               SETC  'SINGLE'    SET KEYWORD                     00351300
                      AIF   (N'&SCOPE LE 1).ZG120A  CK NUM              00351400
&ZMS                  SETC  '"SCOPE='                                   00351500
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00351600
&ZMS                  SETC  '&ZMS "SCOPE"'                              00351700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00351800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00351900
.ZG120A               ANOP  ,                                           00352000
.*------------------------------------------------------------------    00352100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00352200
.ZG121                ANOP  ,                                           00352300
&ZXSCOPE              SETC  'INPUT'     SET IN/OUTPUT                   00352400
                      AIF   (K'&XSCOPE GT 0).ZG121E  VALID ARG          00352500
                      AIF   (T'&SCOPE EQ 'O').ZG121D  OMITTED           00352600
&ZASYSLNDX            SETA  0                                           00352700
.ZG121A               ANOP  ,           POSITIONAL MACRO KEY            00352800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00352900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG121C           00353000
&ZTLC                 SETC 'SCOPE'                                      00353100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG121A  00353200
.ZG121B               ANOP  ,                                           00353300
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00353400
&ZMS                  SETC  'THE "SCOPE" KEY'                           00353500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00353600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00353700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00353800
                      AGO   .ZG121E                                     00353900
.ZG121C               ANOP  ,                                           00354000
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00354100
&ZMS                  SETC  '"SCOPE='                                   00354200
&ZMS                  SETC  '&ZMS.&SCOPE"'                              00354300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00354400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00354500
&ZMS                  SETC  '&ZMS "SHARED"'                             00354600
&ZMS                  SETC  '&ZMS OR "SINGLE".'                         00354700
                      MNOTE 8,' &ZMS '                                  00354800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00354900
                      AGO   .ZG121E                                     00355000
.ZG121D               ANOP  ,                                           00355100
&XSCOPE               SETC  'SHARED'    SET DEFAULT KEYWORD             00355200
.ZG121E               ANOP  ,                                           00355300
.*------------------------------------------------------------------    00355400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00355500
                      AIF   (K'&SCOPE(1) GT 0).ZG121F  PARM             00355600
&XSCOPE               SETC  ''          ENSURE NULL KEYWORD             00355700
&ZXSCOPE              SETC  ''          RESET IN/OUTPUT                 00355800
&ZMS                  SETC  'THE'                                       00355900
&ZMS                  SETC  '&ZMS "SCOPE" KEY AND ITS'                  00356000
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00356100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00356200
&ZMS                  SETC  '&ZMS "SHARED"'                             00356300
&ZMS                  SETC  '&ZMS OR "SINGLE".'                         00356400
                      MNOTE 8,' &ZMS '                                  00356500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00356600
.ZG121F               ANOP  ,                                           00356700
.*----------------------------------------------------------------***   00356800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00356900
                      AIF   (N'&TRXNAME LE 1).ZG123A  CK NUM            00357000
&ZMS                  SETC  '"TRXNAME='                                 00357100
&ZMS                  SETC  '&ZMS.&TRXNAME"'                            00357200
&ZMS                  SETC  '&ZMS "TRXNAME"'                            00357300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00357400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00357500
.ZG123A               ANOP  ,                                           00357600
.*-------------------------------------------------------------------   00357700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00357800
&ZXTRXNAME            SETC  'INPUT'     SET IN/OUTPUT                   00357900
&XTRXNAME             SETC  'NO_TRXNAME'                                00358000
                      AIF   (K'&TRXNAME(1) LE 0).ZG123B  PARM           00358100
&XTRXNAME             SETC  '&TRXNAME(1)'       SET XVARIABLE           00358200
                      AIF   (N'&TRXNAME GT 1).ZG123B  MULTI             00358300
&XTRXNAME             SETC  '&TRXNAME'  SET XVARIABLE                   00358400
.ZG123B               ANOP  ,                                           00358500
.*-------------------------------------------------------------------   00358600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00358700
                      AIF   (K'&ZXTRXNAME LE 0).ZG123R  NOT I/O         00358800
         AIF   ('&XTRXNAME' EQ 'NO_TRXNAME').ZG123R                     00358900
                      AIF   ('&XTRXNAME'(1,1) NE '(').ZG123R            00359000
&ZCGPR                SETC  '&XTRXNAME'(2,K'&XTRXNAME-2)                00359100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG123P               00359200
                      AIF   (K'&ZCGPR GT 2).ZG123Q                      00359300
                      AIF   ('&ZCGPR' EQ '0').ZG123Q                    00359400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00359500
                      AIF   (T'&ZCGPR NE 'N').ZG123Q  INVALID REG NAME  00359600
.ZG123P               ANOP  ,                                           00359700
                      AIF   (T'&ZCGPR NE 'N').ZG123R  NON NUMERIC       00359800
                      AIF   ('&ZCGPR' LT '2').ZG123Q                    00359900
                      AIF   ('&ZCGPR' LE '12').ZG123R                   00360000
.ZG123Q               ANOP  ,                                           00360100
&ZMS                  SETC  '"TRXNAME='                                 00360200
&ZMS                  SETC  '&ZMS.&TRXNAME"'                            00360300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00360400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00360500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00360600
.ZG123R               ANOP  ,                                           00360700
.*----------------------------------------------------------------***   00360800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00360900
                      AIF   (N'&USERID LE 1).ZG126A  CK NUM             00361000
&ZMS                  SETC  '"USERID='                                  00361100
&ZMS                  SETC  '&ZMS.&USERID"'                             00361200
&ZMS                  SETC  '&ZMS "USERID"'                             00361300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00361400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00361500
.ZG126A               ANOP  ,                                           00361600
.*-------------------------------------------------------------------   00361700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00361800
&ZXUSERID             SETC  'INPUT'     SET IN/OUTPUT                   00361900
&XUSERID              SETC  'NO_USERID'                                 00362000
                      AIF   (K'&USERID(1) LE 0).ZG126B  PARM            00362100
&XUSERID              SETC  '&USERID(1)'        SET XVARIABLE           00362200
                      AIF   (N'&USERID GT 1).ZG126B  MULTI              00362300
&XUSERID              SETC  '&USERID'   SET XVARIABLE                   00362400
.ZG126B               ANOP  ,                                           00362500
.*-------------------------------------------------------------------   00362600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00362700
                      AIF   (K'&ZXUSERID LE 0).ZG126R  NOT I/O          00362800
         AIF   ('&XUSERID' EQ 'NO_USERID').ZG126R                       00362900
                      AIF   ('&XUSERID'(1,1) NE '(').ZG126R             00363000
&ZCGPR                SETC  '&XUSERID'(2,K'&XUSERID-2)                  00363100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG126P               00363200
                      AIF   (K'&ZCGPR GT 2).ZG126Q                      00363300
                      AIF   ('&ZCGPR' EQ '0').ZG126Q                    00363400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00363500
                      AIF   (T'&ZCGPR NE 'N').ZG126Q  INVALID REG NAME  00363600
.ZG126P               ANOP  ,                                           00363700
                      AIF   (T'&ZCGPR NE 'N').ZG126R  NON NUMERIC       00363800
                      AIF   ('&ZCGPR' LT '2').ZG126Q                    00363900
                      AIF   ('&ZCGPR' LE '12').ZG126R                   00364000
.ZG126Q               ANOP  ,                                           00364100
&ZMS                  SETC  '"USERID='                                  00364200
&ZMS                  SETC  '&ZMS.&USERID"'                             00364300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00364400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00364500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00364600
.ZG126R               ANOP  ,                                           00364700
.*----------------------------------------------------------------***   00364800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00364900
                      AIF   (N'&TRXCLASS LE 1).ZG129A  CK NUM           00365000
&ZMS                  SETC  '"TRXCLASS='                                00365100
&ZMS                  SETC  '&ZMS.&TRXCLASS"'                           00365200
&ZMS                  SETC  '&ZMS "TRXCLASS"'                           00365300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00365400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00365500
.ZG129A               ANOP  ,                                           00365600
.*-------------------------------------------------------------------   00365700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00365800
&ZXTRXCLASS           SETC  'INPUT'     SET IN/OUTPUT                   00365900
&XTRXCLASS            SETC  'NO_TRXCLASS'                               00366000
                      AIF   (K'&TRXCLASS(1) LE 0).ZG129B  PARM          00366100
&XTRXCLASS            SETC  '&TRXCLASS(1)'      SET XVARIABLE           00366200
                      AIF   (N'&TRXCLASS GT 1).ZG129B  MULTI            00366300
&XTRXCLASS            SETC  '&TRXCLASS'         SET XVARIABLE           00366400
.ZG129B               ANOP  ,                                           00366500
.*-------------------------------------------------------------------   00366600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00366700
                      AIF   (K'&ZXTRXCLASS LE 0).ZG129R  NOT I/O        00366800
         AIF   ('&XTRXCLASS' EQ 'NO_TRXCLASS').ZG129R                   00366900
                      AIF   ('&XTRXCLASS'(1,1) NE '(').ZG129R           00367000
&ZCGPR                SETC  '&XTRXCLASS'(2,K'&XTRXCLASS-2)              00367100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG129P               00367200
                      AIF   (K'&ZCGPR GT 2).ZG129Q                      00367300
                      AIF   ('&ZCGPR' EQ '0').ZG129Q                    00367400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00367500
                      AIF   (T'&ZCGPR NE 'N').ZG129Q  INVALID REG NAME  00367600
.ZG129P               ANOP  ,                                           00367700
                      AIF   (T'&ZCGPR NE 'N').ZG129R  NON NUMERIC       00367800
                      AIF   ('&ZCGPR' LT '2').ZG129Q                    00367900
                      AIF   ('&ZCGPR' LE '12').ZG129R                   00368000
.ZG129Q               ANOP  ,                                           00368100
&ZMS                  SETC  '"TRXCLASS='                                00368200
&ZMS                  SETC  '&ZMS.&TRXCLASS"'                           00368300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00368400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00368500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00368600
.ZG129R               ANOP  ,                                           00368700
.*----------------------------------------------------------------***   00368800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00368900
                      AIF   (N'&TTRACETOKEN LE 1).ZG132A  CK NUM        00369000
&ZMS                  SETC  '"TTRACETOKEN='                             00369100
&ZMS                  SETC  '&ZMS.&TTRACETOKEN"'                        00369200
&ZMS                  SETC  '&ZMS "TTRACETOKEN"'                        00369300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00369400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00369500
.ZG132A               ANOP  ,                                           00369600
.*-------------------------------------------------------------------   00369700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00369800
&ZXTTRACETOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00369900
&XTTRACETOKEN         SETC  'NO_TTRACETOKEN'                            00370000
                      AIF   (K'&TTRACETOKEN(1) LE 0).ZG132B  PARM       00370100
&XTTRACETOKEN         SETC  '&TTRACETOKEN(1)'   SET XVARIABLE           00370200
                      AIF   (N'&TTRACETOKEN GT 1).ZG132B  MULTI         00370300
&XTTRACETOKEN         SETC  '&TTRACETOKEN'      SET XVARIABLE           00370400
.ZG132B               ANOP  ,                                           00370500
.*-------------------------------------------------------------------   00370600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00370700
                      AIF   (K'&ZXTTRACETOKEN LE 0).ZG132R  NOT I/O     00370800
         AIF   ('&XTTRACETOKEN' EQ 'NO_TTRACETOKEN').ZG132R             00370900
                      AIF   ('&XTTRACETOKEN'(1,1) NE '(').ZG132R        00371000
&ZCGPR                SETC  '&XTTRACETOKEN'(2,K'&XTTRACETOKEN-2)        00371100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG132P               00371200
                      AIF   (K'&ZCGPR GT 2).ZG132Q                      00371300
                      AIF   ('&ZCGPR' EQ '0').ZG132Q                    00371400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00371500
                      AIF   (T'&ZCGPR NE 'N').ZG132Q  INVALID REG NAME  00371600
.ZG132P               ANOP  ,                                           00371700
                      AIF   (T'&ZCGPR NE 'N').ZG132R  NON NUMERIC       00371800
                      AIF   ('&ZCGPR' LT '2').ZG132Q                    00371900
                      AIF   ('&ZCGPR' LE '12').ZG132R                   00372000
.ZG132Q               ANOP  ,                                           00372100
&ZMS                  SETC  '"TTRACETOKEN='                             00372200
&ZMS                  SETC  '&ZMS.&TTRACETOKEN"'                        00372300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00372400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00372500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00372600
.ZG132R               ANOP  ,                                           00372700
.*----------------------------------------------------------------***   00372800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00372900
                      AIF   (N'&SOURCELU LE 1).ZG135A  CK NUM           00373000
&ZMS                  SETC  '"SOURCELU='                                00373100
&ZMS                  SETC  '&ZMS.&SOURCELU"'                           00373200
&ZMS                  SETC  '&ZMS "SOURCELU"'                           00373300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00373400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00373500
.ZG135A               ANOP  ,                                           00373600
.*-------------------------------------------------------------------   00373700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00373800
&ZXSOURCELU           SETC  'INPUT'     SET IN/OUTPUT                   00373900
&XSOURCELU            SETC  'NO_SOURCELU'                               00374000
                      AIF   (K'&SOURCELU(1) LE 0).ZG135B  PARM          00374100
&XSOURCELU            SETC  '&SOURCELU(1)'      SET XVARIABLE           00374200
                      AIF   (N'&SOURCELU GT 1).ZG135B  MULTI            00374300
&XSOURCELU            SETC  '&SOURCELU'         SET XVARIABLE           00374400
.ZG135B               ANOP  ,                                           00374500
.*-------------------------------------------------------------------   00374600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00374700
                      AIF   (K'&ZXSOURCELU LE 0).ZG135R  NOT I/O        00374800
         AIF   ('&XSOURCELU' EQ 'NO_SOURCELU').ZG135R                   00374900
                      AIF   ('&XSOURCELU'(1,1) NE '(').ZG135R           00375000
&ZCGPR                SETC  '&XSOURCELU'(2,K'&XSOURCELU-2)              00375100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG135P               00375200
                      AIF   (K'&ZCGPR GT 2).ZG135Q                      00375300
                      AIF   ('&ZCGPR' EQ '0').ZG135Q                    00375400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00375500
                      AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME  00375600
.ZG135P               ANOP  ,                                           00375700
                      AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC       00375800
                      AIF   ('&ZCGPR' LT '2').ZG135Q                    00375900
                      AIF   ('&ZCGPR' LE '12').ZG135R                   00376000
.ZG135Q               ANOP  ,                                           00376100
&ZMS                  SETC  '"SOURCELU='                                00376200
&ZMS                  SETC  '&ZMS.&SOURCELU"'                           00376300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00376400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00376500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00376600
.ZG135R               ANOP  ,                                           00376700
.*----------------------------------------------------------------***   00376800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00376900
                      AIF   (N'&LU62TKN LE 1).ZG138A  CK NUM            00377000
&ZMS                  SETC  '"LU62TKN='                                 00377100
&ZMS                  SETC  '&ZMS.&LU62TKN"'                            00377200
&ZMS                  SETC  '&ZMS "LU62TKN"'                            00377300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00377400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00377500
.ZG138A               ANOP  ,                                           00377600
.*-------------------------------------------------------------------   00377700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00377800
&ZXLU62TKN            SETC  'INPUT'     SET IN/OUTPUT                   00377900
&XLU62TKN             SETC  'NO_LU62TKN'                                00378000
                      AIF   (K'&LU62TKN(1) LE 0).ZG138B  PARM           00378100
&XLU62TKN             SETC  '&LU62TKN(1)'       SET XVARIABLE           00378200
                      AIF   (N'&LU62TKN GT 1).ZG138B  MULTI             00378300
&XLU62TKN             SETC  '&LU62TKN'  SET XVARIABLE                   00378400
.ZG138B               ANOP  ,                                           00378500
.*-------------------------------------------------------------------   00378600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00378700
                      AIF   (K'&ZXLU62TKN LE 0).ZG138R  NOT I/O         00378800
         AIF   ('&XLU62TKN' EQ 'NO_LU62TKN').ZG138R                     00378900
                      AIF   ('&XLU62TKN'(1,1) NE '(').ZG138R            00379000
&ZCGPR                SETC  '&XLU62TKN'(2,K'&XLU62TKN-2)                00379100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG138P               00379200
                      AIF   (K'&ZCGPR GT 2).ZG138Q                      00379300
                      AIF   ('&ZCGPR' EQ '0').ZG138Q                    00379400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00379500
                      AIF   (T'&ZCGPR NE 'N').ZG138Q  INVALID REG NAME  00379600
.ZG138P               ANOP  ,                                           00379700
                      AIF   (T'&ZCGPR NE 'N').ZG138R  NON NUMERIC       00379800
                      AIF   ('&ZCGPR' LT '2').ZG138Q                    00379900
                      AIF   ('&ZCGPR' LE '12').ZG138R                   00380000
.ZG138Q               ANOP  ,                                           00380100
&ZMS                  SETC  '"LU62TKN='                                 00380200
&ZMS                  SETC  '&ZMS.&LU62TKN"'                            00380300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00380400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00380500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00380600
.ZG138R               ANOP  ,                                           00380700
.*------------------------------------------------------------------    00380800
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00380900
&XLU62TKN_FMT         SETC  ''          INITIALIZE XVARIABLE            00381000
.*-------------------------------------------------------------------   00381100
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00381200
.ZG141                ANOP  ,                                           00381300
                      AIF   (K'&LU62TKN_FMT(1) LE 0).ZG141A             00381400
&ZTLC                 SETC 'LU_NO_CC_27'                                00381500
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG142        00381600
&XLU62TKN_FMT         SETC  'LU_NO_CC_27'       SET KEYWORD             00381700
                      AIF   (N'&LU62TKN_FMT LE 1).ZG141A  CK NUM        00381800
&ZMS                  SETC  '"LU62TKN_FMT='                             00381900
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00382000
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00382100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00382200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00382300
.ZG141A               ANOP  ,                                           00382400
.*------------------------------------------------------------------    00382500
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00382600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00382700
.ZG141A0              AIF   (K'&LU62TKN_LEN LE 0).ZG141A1  OK           00382800
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00382900
.ZG141A1              AIF   (K'&ZCVAL LE 0).ZG141A2  OK                 00383000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00383100
&ZMS                  SETC  '"LU62TKN_FMT'                              00383200
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00383300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00383400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00383500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00383600
.ZG141A2              ANOP  ,                                           00383700
.*-------------------------------------------------------------------   00383800
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00383900
.ZG142                ANOP  ,                                           00384000
&ZTLC                 SETC 'FULL_LU_NO_CC_27'                           00384100
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG143        00384200
&XLU62TKN_FMT         SETC  'FULL_LU_NO_CC_27'  SET KEYWORD             00384300
                      AIF   (N'&LU62TKN_FMT LE 1).ZG142A  CK NUM        00384400
&ZMS                  SETC  '"LU62TKN_FMT='                             00384500
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00384600
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00384700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00384800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00384900
.ZG142A               ANOP  ,                                           00385000
.*------------------------------------------------------------------    00385100
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00385200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00385300
.ZG142A0              AIF   (K'&LU62TKN_LEN LE 0).ZG142A1  OK           00385400
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00385500
.ZG142A1              AIF   (K'&ZCVAL LE 0).ZG142A2  OK                 00385600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00385700
&ZMS                  SETC  '"LU62TKN_FMT'                              00385800
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00385900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00386000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00386100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00386200
.ZG142A2              ANOP  ,                                           00386300
.*-------------------------------------------------------------------   00386400
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00386500
.ZG143                ANOP  ,                                           00386600
&ZTLC                 SETC 'FULL_LU_0_CC_28'                            00386700
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG144        00386800
&XLU62TKN_FMT         SETC  'FULL_LU_0_CC_28'   SET KEYWORD             00386900
                      AIF   (N'&LU62TKN_FMT LE 1).ZG143A  CK NUM        00387000
&ZMS                  SETC  '"LU62TKN_FMT='                             00387100
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00387200
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00387300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00387400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00387500
.ZG143A               ANOP  ,                                           00387600
.*------------------------------------------------------------------    00387700
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00387800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00387900
.ZG143A0              AIF   (K'&LU62TKN_LEN LE 0).ZG143A1  OK           00388000
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00388100
.ZG143A1              AIF   (K'&ZCVAL LE 0).ZG143A2  OK                 00388200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00388300
&ZMS                  SETC  '"LU62TKN_FMT'                              00388400
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00388500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00388600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00388700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00388800
.ZG143A2              ANOP  ,                                           00388900
.*-------------------------------------------------------------------   00389000
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00389100
.ZG144                ANOP  ,                                           00389200
&ZTLC                 SETC 'FULL_LU_CC_36'                              00389300
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG145        00389400
&XLU62TKN_FMT         SETC  'FULL_LU_CC_36'     SET KEYWORD             00389500
                      AIF   (N'&LU62TKN_FMT LE 1).ZG144A  CK NUM        00389600
&ZMS                  SETC  '"LU62TKN_FMT='                             00389700
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00389800
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00389900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00390000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00390100
.ZG144A               ANOP  ,                                           00390200
.*------------------------------------------------------------------    00390300
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00390400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00390500
.ZG144A0              AIF   (K'&LU62TKN_LEN LE 0).ZG144A1  OK           00390600
&ZCVAL                SETC '&ZCVAL LU62TKN_LEN'  INCORRECT KEY USED     00390700
.ZG144A1              AIF   (K'&ZCVAL LE 0).ZG144A2  OK                 00390800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00390900
&ZMS                  SETC  '"LU62TKN_FMT'                              00391000
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00391100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00391200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00391300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00391400
.ZG144A2              ANOP  ,                                           00391500
.*-------------------------------------------------------------------   00391600
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00391700
.ZG145                ANOP  ,                                           00391800
&ZTLC                 SETC 'OTHER'                                      00391900
                      AIF   ('&LU62TKN_FMT(1)' NE '&ZTLC').ZG149        00392000
&XLU62TKN_FMT         SETC  'OTHER'     SET KEYWORD                     00392100
                      AIF   (N'&LU62TKN_FMT LE 1).ZG145A  CK NUM        00392200
&ZMS                  SETC  '"LU62TKN_FMT='                             00392300
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00392400
&ZMS                  SETC  '&ZMS "LU62TKN_FMT"'                        00392500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00392600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00392700
.ZG145A               ANOP  ,                                           00392800
.*----------------------------------------------------------------***   00392900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00393000
                      AIF   (N'&LU62TKN_LEN LE 1).ZG147A  CK NUM        00393100
&ZMS                  SETC  '"LU62TKN_LEN='                             00393200
&ZMS                  SETC  '&ZMS.&LU62TKN_LEN"'                        00393300
&ZMS                  SETC  '&ZMS "LU62TKN_LEN"'                        00393400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00393500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00393600
.ZG147A               ANOP  ,                                           00393700
.*-------------------------------------------------------------------   00393800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00393900
&ZXLU62TKN_LEN        SETC  'INPUT'     SET IN/OUTPUT                   00394000
&XLU62TKN_LEN         SETC  '&LU62TKN_LEN(1)'   SET XVARIABLE           00394100
                      AIF   (N'&LU62TKN_LEN GT 1).ZG147B  MULTI         00394200
&XLU62TKN_LEN         SETC  '&LU62TKN_LEN'      SET XVARIABLE           00394300
.ZG147B               AIF   (K'&LU62TKN_LEN(1) GT 0).ZG147C             00394400
&ZXLU62TKN_LEN        SETC  ''          RESET IN/OUTPUT                 00394500
&ZMS                  SETC  'WHEN "OTHER" IS SPECIFIED'                 00394600
&ZMS                  SETC  '&ZMS , "LU62TKN_LEN" KEY AND ITS'          00394700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00394800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00394900
.ZG147C               ANOP  ,                                           00395000
.*-------------------------------------------------------------------   00395100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00395200
                      AIF   (K'&ZXLU62TKN_LEN LE 0).ZG147R  NOT I/O     00395300
                      AIF   ('&XLU62TKN_LEN'(1,1) NE '(').ZG147R        00395400
&ZCGPR                SETC  '&XLU62TKN_LEN'(2,K'&XLU62TKN_LEN-2)        00395500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG147P               00395600
                      AIF   (K'&ZCGPR GT 2).ZG147Q                      00395700
                      AIF   ('&ZCGPR' EQ '0').ZG147Q                    00395800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00395900
                      AIF   (T'&ZCGPR NE 'N').ZG147Q  INVALID REG NAME  00396000
.ZG147P               ANOP  ,                                           00396100
                      AIF   (T'&ZCGPR NE 'N').ZG147R  NON NUMERIC       00396200
                      AIF   ('&ZCGPR' LT '2').ZG147Q                    00396300
                      AIF   ('&ZCGPR' LE '12').ZG147R                   00396400
.ZG147Q               ANOP  ,                                           00396500
&ZMS                  SETC  '"LU62TKN_LEN='                             00396600
&ZMS                  SETC  '&ZMS.&LU62TKN_LEN"'                        00396700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00396800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00396900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00397000
.ZG147R               ANOP  ,                                           00397100
.*------------------------------------------------------------------    00397200
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00397300
.ZG149                ANOP  ,                                           00397400
&ZXLU62TKN_FMT        SETC  'INPUT'     SET IN/OUTPUT                   00397500
                      AIF   (K'&XLU62TKN_FMT GT 0).ZG149E  VALID ARG    00397600
                      AIF   (T'&LU62TKN_FMT EQ 'O').ZG149D  OMITTED     00397700
&ZASYSLNDX            SETA  0                                           00397800
.ZG149A               ANOP  ,           POSITIONAL MACRO KEY            00397900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00398000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG149C           00398100
&ZTLC                 SETC 'LU62TKN_FMT'                                00398200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG149A  00398300
.ZG149B               ANOP  ,                                           00398400
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00398500
&ZMS                  SETC  'THE "LU62TKN_FMT" KEY'                     00398600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00398700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00398800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00398900
                      AGO   .ZG149E                                     00399000
.ZG149C               ANOP  ,                                           00399100
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00399200
&ZMS                  SETC  '"LU62TKN_FMT='                             00399300
&ZMS                  SETC  '&ZMS.&LU62TKN_FMT"'                        00399400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00399500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00399600
&ZMS                  SETC  '&ZMS "LU_NO_CC_27",'                       00399700
&ZMS                  SETC  '&ZMS "FULL_LU_NO_CC_27",'                  00399800
&ZMS                  SETC  '&ZMS "FULL_LU_0_CC_28",'                   00399900
&ZMS                  SETC  '&ZMS "FULL_LU_CC_36",'                     00400000
&ZMS                  SETC  '&ZMS OR "OTHER".'                          00400100
                      MNOTE 8,' &ZMS '                                  00400200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00400300
                      AGO   .ZG149E                                     00400400
.ZG149D               ANOP  ,                                           00400500
&XLU62TKN_FMT         SETC  'LU_NO_CC_27'       SET DEFAULT KEYWORD     00400600
.ZG149E               ANOP  ,                                           00400700
.*------------------------------------------------------------------    00400800
.***AG.KKCTL06 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00400900
                      AIF   (K'&LU62TKN(1) GT 0).ZG149F  KEY            00401000
                      AIF   (K'&LU62TKN_FMT(1) LE 0).ZG149G  PARM       00401100
&ZMS                  SETC  '"LU62TKN_FMT'                              00401200
&ZMS                  SETC  '&ZMS.=&LU62TKN_FMT"'                       00401300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00401400
&ZMS                  SETC  '&ZMS '                                     00401500
&ZMS                  SETC  '&ZMS "LU62TKN"'                            00401600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00401700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00401800
                      AGO   .ZG149G                                     00401900
.*                                                                      00402000
.ZG149F               ANOP  ,                                           00402100
                      AIF   (K'&LU62TKN_FMT(1) GT 0).ZG149G  PARM       00402200
&ZXLU62TKN_FMT        SETC  ''          RESET IN/OUTPUT                 00402300
&XLU62TKN_FMT         SETC  ''          ENSURE NULL KEYWORD             00402400
&ZMS                  SETC  'WHEN "LU62TKN" IS SPECIFIED, THE'          00402500
&ZMS                  SETC  '&ZMS "LU62TKN_FMT" KEY AND ITS'            00402600
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00402700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00402800
&ZMS                  SETC  '&ZMS "LU_NO_CC_27",'                       00402900
&ZMS                  SETC  '&ZMS "FULL_LU_NO_CC_27",'                  00403000
&ZMS                  SETC  '&ZMS "FULL_LU_0_CC_28",'                   00403100
&ZMS                  SETC  '&ZMS "FULL_LU_CC_36",'                     00403200
&ZMS                  SETC  '&ZMS OR "OTHER".'                          00403300
                      MNOTE 8,' &ZMS '                                  00403400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00403500
.ZG149G               ANOP  ,                                           00403600
.*----------------------------------------------------------------***   00403700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00403800
                      AIF   (N'&RETCODE LE 1).ZG152A  CK NUM            00403900
&ZMS                  SETC  '"RETCODE='                                 00404000
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00404100
&ZMS                  SETC  '&ZMS "RETCODE"'                            00404200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00404300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00404400
.ZG152A               ANOP  ,                                           00404500
.*-------------------------------------------------------------------   00404600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00404700
                      AIF   (K'&RETCODE(1) LE 0).ZG152C  NO PARM        00404800
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      00404900
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           00405000
                      AIF   (N'&RETCODE GT 1).ZG152C                    00405100
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   00405200
.ZG152C               ANOP  ,                                           00405300
.*-------------------------------------------------------------------   00405400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00405500
                      AIF   (K'&ZXRETCODE LE 0).ZG152R  NOT I/O         00405600
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG152R            00405700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00405800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG152P               00405900
                      AIF   (K'&ZCGPR GT 2).ZG152Q                      00406000
                      AIF   ('&ZCGPR' EQ '0').ZG152Q                    00406100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00406200
                      AIF   (T'&ZCGPR NE 'N').ZG152Q  INVALID REG NAME  00406300
.ZG152P               ANOP  ,                                           00406400
                      AIF   (T'&ZCGPR NE 'N').ZG152R  NON NUMERIC       00406500
                      AIF   ('&ZCGPR' EQ '15').ZG152R                   00406600
                      AIF   ('&ZCGPR' LT '2').ZG152Q                    00406700
                      AIF   ('&ZCGPR' LE '12').ZG152R                   00406800
.ZG152Q               ANOP  ,                                           00406900
&ZMS                  SETC  '"RETCODE='                                 00407000
&ZMS                  SETC  '&ZMS.&RETCODE"'                            00407100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00407200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'    00407300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00407400
.ZG152R               ANOP  ,                                           00407500
.*----------------------------------------------------------------***   00407600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00407700
                      AIF   (N'&RSNCODE LE 1).ZG155A  CK NUM            00407800
&ZMS                  SETC  '"RSNCODE='                                 00407900
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            00408000
&ZMS                  SETC  '&ZMS "RSNCODE"'                            00408100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00408200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00408300
.ZG155A               ANOP  ,                                           00408400
.*-------------------------------------------------------------------   00408500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00408600
                      AIF   (K'&RSNCODE(1) LE 0).ZG155C  NO PARM        00408700
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      00408800
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           00408900
                      AIF   (N'&RSNCODE GT 1).ZG155C                    00409000
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   00409100
.ZG155C               ANOP  ,                                           00409200
.*-------------------------------------------------------------------   00409300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00409400
                      AIF   (K'&ZXRSNCODE LE 0).ZG155R  NOT I/O         00409500
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG155R            00409600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00409700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG155P               00409800
                      AIF   (K'&ZCGPR GT 2).ZG155Q                      00409900
                      AIF   ('&ZCGPR' EQ '0').ZG155R                    00410000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00410100
                      AIF   (T'&ZCGPR NE 'N').ZG155Q  INVALID REG NAME  00410200
.ZG155P               ANOP  ,                                           00410300
                      AIF   (T'&ZCGPR NE 'N').ZG155R  NON NUMERIC       00410400
                      AIF   ('&ZCGPR' EQ '0').ZG155R                    00410500
                      AIF   ('&ZCGPR' LT '2').ZG155Q                    00410600
                      AIF   ('&ZCGPR' LE '12').ZG155R                   00410700
.ZG155Q               ANOP  ,                                           00410800
&ZMS                  SETC  '"RSNCODE='                                 00410900
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            00411000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00411100
                      MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'     00411200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00411300
.ZG155R               ANOP  ,                                           00411400
.******************************************************************     00411500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00411600
.******************************************************************     00411700
                      ACTR  10000                                       00411800
.*----------------------------------------------------------------***   00411900
.***AH.P02 EXTRA POSITIONALS                                            00412000
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        00412100
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        00412200
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    00412300
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     00412400
.ZGLISTX1             ANOP  ,                                           00412500
&ZCVAL                SETC  ''          ERROR FIELD                     00412600
&ZAWRK                SETA  0           POSITIONAL NUMBER               00412700
.ZGLIST2              ANOP  ,                                           00412800
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 00412900
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        00413000
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             00413100
                      AGO   .ZGLIST2                                    00413200
.*                                                                      00413300
.ZGLIST3              ANOP  ,                                           00413400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          00413500
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'                   00413600
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             00413700
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      00413800
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              00413900
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      00414000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00414100
.ZGLISTX              ANOP  ,                                           00414200
&ZASYSLNDX            SETA  0                                           00414300
.*******************************************************************    00414400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00414500
.*******************************************************************    00414600
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        00414700
.*******************************************************************    00414800
.***AE.01  START OF IWM4MINI MACRO CODE                                 00414900
.*******************************************************************    00415000
                      LCLC  &M0M0001                 NAME               00415100
&M0M0001              SETC  '&XLABEL'                SET NAME           00415200
                      AIF   (K'&XLABEL NE 0).XLAB2                      00415300
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       00415400
.*                                                                      00415500
.XLAB2                ANOP  ,                                           00415600
&M0M0001 DS    0H                             IWM4MINI-2                00415700
.*******************************************************************    00415800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00415900
.*******************************************************************    00416000
              PUSH  PRINT                                               00416100
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  00416200
                      PRINT OFF         ++ PR01                         00416300
                      AGO   .ZPRNTXX                                    00416400
.ZPRINTX              PRINT ON                                          00416500
.ZPRNTXX              ANOP  ,                                           00416600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00416700
         LCLC  &T1,&T2                                                  00416800
         GBLC  &SYSAM64                                             @P2 00416900
         GBLA  &SYSALVL                                             @P2 00417000
         AIF   ('&XEWLM_PACORR' EQ '').P2_01                        @P2 00417100
         AIF   ('&XEWLM_PACORR' EQ 'NO_EWLM_PACORR').P2_01          @P2 00417200
         AIF   ('&XEWLM_PACTKN' EQ '').P2_01                        @P2 00417300
         AIF   ('&XEWLM_PACTKN' EQ 'NO_EWLM_PACTKN').P2_01          @P2 00417400
&T1      SETC  'EWLM_PACORR AND EWLM_PACTKN ARE MUTUALLY EXCLUSIVE' @P2 00417500
         MNOTE 8,'&T1'                                              @P2 00417600
         MEXIT                                                      @P2 00417700
.P2_01   ANOP                                                       @P2 00417800
.*--------------------------------------------------------------------- 00417900
.* Fetch Monitoring Token                                               00418000
.*--------------------------------------------------------------------- 00418100
         AIF ('&MONTKN' EQ '').MONTKNR2                                 00418200
&T1      SETC  '&MONTKN'                                                00418300
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNR1                     @L2 00418400
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00418500
&T1      SETC  '0(&T1.)'                                                00418600
.MONTKNR1  ANOP                                                     @L2 00418700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00418800
         LLGT  14,&T1                  FETCH 31BIT MONITORING TOKEN @L2 00418900
         LTGR  14,14                   MONITORING TOKEN PROVIDED?   @L2 00419000
         AGO .MONTKNR4                                              @L2 00419100
.MONTKNR2  ANOP                                                     @L2 00419200
&T1      SETC  '&MONTKN64'                                          @L2 00419300
         AIF   ('&MONTKN64'(1,1) NE '(').MONTKNR3                   @L2 00419400
&T1      SETC  '&MONTKN64'(2,K'&MONTKN64-2)                         @L2 00419500
&T1      SETC  '0(&T1.)'                                            @L2 00419600
.MONTKNR3  ANOP                                                     @L2 00419700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00419800
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').SWAM64    @L2 00419900
         SAM64                                                      @L2 00420000
.SWAM64  ANOP                                                       @L2 00420100
         LTG   14,&T1                  FETCH 64BIT MONITORING TOKEN @L2 00420200
.MONTKNR4  ANOP                                                     @L2 00420300
* Check Monitoring token is not 0                                 @P4A  00420400
         JNZ   IWM4MINI_MONTKN_&SYSNDX BRANCH WHEN MONENV PRESENT @P4C  00420500
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00420600
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00420700
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').SWAM310   @L2 00420800
         SAM31                         SWITCH TO AMODE 31           @L2 00420900
.SWAM310 ANOP                                                       @L2 00421000
         J     IWM4MINI_END_&SYSNDX    BRANCH TO END LABEL         @P4C 00421100
IWM4MINI_MONTKN_&SYSNDX DS 0H          LABEL MONENV PRESENT        @P4C 00421200
* Check for valid PB eye catcher                                   @P4A 00421300
         LLILF 1,PB_ID_CONST                                       @P7A 00421400
         CL    1,PB_ID-PB(,14)                                     @P7C 00421500
         JE    IWM4MINI_MONOK_&SYSNDX  BRANCH WHEN MON ENV PASSES @P4C  00421600
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00421700
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00421800
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').SWAM311   @L2 00421900
         SAM31                         SWITCH TO AMODE 31           @L2 00422000
.SWAM311 ANOP                                                       @L2 00422100
         J     IWM4MINI_END_&SYSNDX    BRANCH TO END LABEL         @P4C 00422200
IWM4MINI_MONOK_&SYSNDX DS 0H           BRANCH LABEL FOR MONENV OK  @P4C 00422300
         USING PB,14                   Addressability of PB        @P4C 00422400
         AIF   ('&MODE' NE 'RESET').ENDRESE                        @P4C 00422500
* Clear PB_CLEAR area (for RESET processing)                       @P4A 00422600
         LH    1,PB_NEW_LENGTH        Get length field             @P4C 00422700
         LTR   1,1                    Test for zero                @P4C 00422800
         JNZ   IWM4MINI_LENGTHOK_&SYSNDX Length OK, continue       @P4C 00422900
         LA    0,0                                                 @P4A 00423000
         LA    15,IWMRETCODECOMPERROR  Indicate a severe error     @P4A 00423100
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').SWAM312   @L2 00423200
         SAM31                         SWITCH TO AMODE 31           @L2 00423300
.SWAM312 ANOP                                                       @L2 00423400
         J     IWM4MINI_END_&SYSNDX    Branch to end label         @P4A 00423500
IWM4MINI_XC_&SYSNDX XC PB_CLEAR_FLD(0),PB_CLEAR_FLD                @P4C 00423600
IWM4MINI_LENGTHOK_&SYSNDX DS 0H                                    @P4C 00423700
         AHI   1,-1                    Decrement length for EX     @P4C 00423800
         LARL  15,IWM4MINI_XC_&SYSNDX  Load address of EX instr    @P4A 00423900
         EX    1,0(15)                 And do the EXECUTE          @P4C 00424000
* Clear all work attributes                                        @P4A 00424100
         MVI   PB_WORK_ATTRIBUTES,C' '                                  00424200
         MVC   PB_WORK_ATTRIBUTES+1(51),PB_WORK_ATTRIBUTES              00424300
.ENDRESE ANOP                                                      @P4C 00424400
.*                                                                      00424500
.*                                                                      00424600
.*       OWNER_TOKEN PROCESSING                                         00424700
.*                                                                      00424800
         AIF   ('&XOWNER_TOKEN' NE 'NO_OWNER_TOKEN').OWNER_TOKEN        00424900
         AGO   .ENDOWNER_TOKEN                                          00425000
.*                                                                      00425100
.OWNER_TOKEN ANOP                                                       00425200
&T1      SETC  '&OWNER_TOKEN'                                           00425300
         AIF   ('&OWNER_TOKEN'(1,1) NE '(').OWNER_TOKENRS               00425400
&T1      SETC  '&OWNER_TOKEN'(2,K'&OWNER_TOKEN-2)                       00425500
&T1      SETC  '0(&T1.)'                                                00425600
.OWNER_TOKENRS ANOP                                                     00425700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00425800
* Process OWNER_TOKEN                                             @P4A  00425900
         L     1,&T1                   COPY OWNER_TOKEN VIA L,ST        00426000
         ST    1,PB_OWNER_TKN                                           00426100
.ENDOWNER_TOKEN ANOP                                                    00426200
.*                                                                      00426300
.*                                                                      00426400
.*       OWNER_DATA PROCESSING                                          00426500
.*                                                                      00426600
         AIF   ('&XOWNER_DATA' NE 'NO_OWNER_DATA').OWNER_DATA           00426700
         AGO   .ENDOWNER_DATA                                           00426800
.*                                                                      00426900
.OWNER_DATA ANOP                                                        00427000
&T1      SETC  '&OWNER_DATA'                                            00427100
         AIF   ('&OWNER_DATA'(1,1) NE '(').OWNER_DATARS                 00427200
&T1      SETC  '&OWNER_DATA'(2,K'&OWNER_DATA-2)                         00427300
&T1      SETC  '0(&T1.)'                                                00427400
.OWNER_DATARS ANOP                                                      00427500
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00427600
* Process OWNER_DATA                                              @P4A  00427700
         L     1,&T1                   COPY OWNER_DATA VIA L,ST         00427800
         ST    1,PB_OWNER_DATA                                          00427900
.ENDOWNER_DATA ANOP                                                     00428000
.*                                                                      00428100
.*                                                                      00428200
.*       FROM_SUBSYSNM PROCESSING                             @OA38477  00428300
.*                                                                      00428400
         AIF   ('&XFROM_SUBSYSNM' NE 'NO_SUBSYSNM').FROM_SUBSYSNM       00428500
         AGO   .ENDFROM_SUBSYSNM                                        00428600
.*                                                                      00428700
.FROM_SUBSYSNM ANOP                                                     00428800
&T1      SETC  '&FROM_SUBSYSNM'                                         00428900
         AIF   ('&FROM_SUBSYSNM'(1,1) NE '(').FROM_SUBSYSNMRS           00429000
&T1      SETC  '&FROM_SUBSYSNM'(2,K'&FROM_SUBSYSNM-2)                   00429100
&T1      SETC  '0(&T1.)'                                                00429200
.FROM_SUBSYSNMRS ANOP                                                   00429300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00429400
* Process FROM_SUBSYSNM                                       @OA38477  00429500
         MVC   PB_FROM_SUBSYSNM(8),&T1 COPY FROM_SUBSYSNM               00429600
.ENDFROM_SUBSYSNM ANOP                                                  00429700
.*                                                                      00429800
.*       DURATION PROCESSING                                            00429900
.*                                                                      00430000
         AIF   ('&XDURATION' EQ 'PREV_VALUE').ENDDURINFO                00430100
* Process DURATION                                                @P4A  00430200
         AIF   ('&MODE' EQ 'RESET').ENDDURRETAIN                        00430300
         NI    PB_MONENV_INFO,X'FF'-PB_DURATION        RESET PREV DUR   00430400
.ENDDURRETAIN ANOP                                                      00430500
         OI    PB_MONENV_INFO,PB_DURATION_&XDURATION   RECORD DURATION  00430600
.ENDDURINFO   ANOP                                                      00430700
.*                                                                      00430800
         AIF   ('&XDISPTYPE' EQ 'SAVEDTYPE').ENDDISPINFO                00430900
* Process DISPTYPE                                                @P4A  00431000
         AIF   ('&XDISPTYPE' NE 'TCB').ENDTCB                           00431100
         AIF   ('&XTCB' EQ 'NO_TCB').NOTCB                              00431200
&T1      SETC  '&TCB'                                                   00431300
         AIF   ('&TCB'(1,1) NE '(').TCBRS                               00431400
&T1      SETC  '&TCB'(2,K'&TCB-2)                                       00431500
         ST    &T1,PB_DU                                                00431600
         AGO   .ENDDISPTYPE                                             00431700
.TCBRS ANOP                                                             00431800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00431900
         LA    0,&T1                   COPY TCB ADDRESS VIA LA,ST       00432000
         ST    0,PB_DU                                                  00432100
         AGO   .ENDDISPTYPE                                             00432200
.NOTCB     ANOP                                                         00432300
         AIF   ('&MODE' EQ 'RESET').ENDDISPTYPE                         00432400
         LA    0,0                                                      00432500
         ST    0,PB_DU                                                  00432600
         AGO   .ENDDISPTYPE                                             00432700
.ENDTCB    ANOP                                                         00432800
         LA    0,PB_DU_SRB             INDICATE SRB                     00432900
         ST    0,PB_DU                                                  00433000
.ENDDISPTYPE   ANOP                                                     00433100
.*                                                                      00433200
         L     1,X'224'(0,0)              COPY PSAAOLD VIA L,ST         00433300
         ST    1,PB_DU_ASCB                                             00433400
.ENDDISPINFO   ANOP                                                     00433500
.*                                                     @WLMPPBS         00433600
         AIF   ('&XREPORTONLY' NE 'NO').ENDSERVCLS                      00433700
.*                                                     @WLMPDBM         00433800
         AIF   ('&XBPMGMTONLY' NE 'NO').ENDSERVCLS                      00433900
         AIF   ('&XSERVCLS' NE 'NO_SERVCLS').SERVCLS                    00434000
         AGO   .ENDSERVCLS                                              00434100
.*                                                                      00434200
.SERVCLS    ANOP                                                        00434300
&T1      SETC  '&SERVCLS'                                               00434400
         AIF   ('&SERVCLS'(1,1) NE '(').SERVCLSRS                       00434500
&T1      SETC  '&SERVCLS'(2,K'&SERVCLS-2)                               00434600
&T1      SETC  '0(&T1.)'                                                00434700
.SERVCLSRS ANOP                                                         00434800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00434900
* Process SERVCLS                                                 @P4A  00435000
         L     1,&T1                   COPY SERVCLS VIA L,ST            00435100
         ST    1,PB_SC_TKN                                              00435200
.ENDSERVCLS    ANOP                                                     00435300
.*                                                                      00435400
         AIF   ('&XTTRACETOKEN' NE 'NO_TTRACETOKEN').TTRACETOKEN        00435500
         AGO   .ENDTTRACETOKEN                                          00435600
.*                                                                      00435700
.TTRACETOKEN ANOP                                                       00435800
&T1      SETC  '&TTRACETOKEN'                                           00435900
         AIF   ('&TTRACETOKEN'(1,1) NE '(').TTRACETOKENRS               00436000
&T1      SETC  '&TTRACETOKEN'(2,K'&TTRACETOKEN-2)                       00436100
&T1      SETC  '0(&T1.)'                                                00436200
.TTRACETOKENRS ANOP                                                     00436300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00436400
* Process TTRACETOKEN                                             @P4A  00436500
         MVC   PB_TRANS_TTOKEN(32),&T1    COPY TTRACETOKEN              00436600
.ENDTTRACETOKEN ANOP                                                    00436700
.*                                                                      00436800
         AIF   ('&XTRXNAME' NE 'NO_TRXNAME').TRXNAME                    00436900
         AGO   .ENDTRXNAME                                              00437000
.*                                                                      00437100
.TRXNAME    ANOP                                                        00437200
&T1      SETC  '&TRXNAME'                                               00437300
         AIF   ('&TRXNAME'(1,1) NE '(').TRXNAMERS                       00437400
&T1      SETC  '&TRXNAME'(2,K'&TRXNAME-2)                               00437500
&T1      SETC  '0(&T1.)'                                                00437600
.TRXNAMERS ANOP                                                         00437700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00437800
* Process TRXNAME                                                 @P4A  00437900
         MVC   PB_TRXNAME(8),&T1          COPY TRXNAME                  00438000
.ENDTRXNAME    ANOP                                                     00438100
.*                                                                      00438200
         AIF   ('&XUSERID' NE 'NO_USERID').USERID                       00438300
         AGO   .ENDUSERID                                               00438400
.*                                                                      00438500
.USERID     ANOP                                                        00438600
&T1      SETC  '&USERID'                                                00438700
         AIF   ('&USERID'(1,1) NE '(').USERIDRS                         00438800
&T1      SETC  '&USERID'(2,K'&USERID-2)                                 00438900
&T1      SETC  '0(&T1.)'                                                00439000
.USERIDRS ANOP                                                          00439100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00439200
* Process USERID                                                  @P4A  00439300
         MVC   PB_USERID(8),&T1           COPY USERID                   00439400
.ENDUSERID     ANOP                                                     00439500
.*                                                                      00439600
         AIF   ('&XTRXCLASS' NE 'NO_TRXCLASS').TRXCLASS                 00439700
         AGO   .ENDTRXCLASS                                             00439800
.*                                                                      00439900
.TRXCLASS   ANOP                                                        00440000
&T1      SETC  '&TRXCLASS'                                              00440100
         AIF   ('&TRXCLASS'(1,1) NE '(').TRXCLASSRS                     00440200
&T1      SETC  '&TRXCLASS'(2,K'&TRXCLASS-2)                             00440300
&T1      SETC  '0(&T1.)'                                                00440400
.TRXCLASSRS ANOP                                                        00440500
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00440600
* Process TRXCLASS                                               @P4A   00440700
         MVC   PB_TRXCLASS(8),&T1         COPY TRXCLASS                 00440800
.ENDTRXCLASS   ANOP                                                     00440900
.*                                                                      00441000
         AIF   ('&XSOURCELU' NE 'NO_SOURCELU').SOURCELU                 00441100
         AGO   .ENDSOURCELU                                             00441200
.*                                                                      00441300
.SOURCELU   ANOP                                                        00441400
.*                                                                      00441500
* Process SOURCELU                                               @P4A   00441600
&T1      SETC  '&SOURCELU'                                              00441700
         AIF   ('&SOURCELU'(1,1) NE '(').SOURCELURS                     00441800
&T1      SETC  '&SOURCELU'(2,K'&SOURCELU-2)                             00441900
&T1      SETC  '0(&T1.)'                                                00442000
         MVC   PB_SOURCELU(17),&T1         COPY SOURCELU                00442100
         AGO   .ENDSOURCELU                                             00442200
.SOURCELURS ANOP                                                        00442300
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00442400
.****************************************                               00442500
         LA    1,L'&T1      LOAD LENGTH OF SOURCELU NAME INTO GPR 1     00442600
         LA    0,17         LOAD MAXIMUM LENGTH OF LU NAME INTO GPR 0   00442700
         CR    1,0                                                      00442800
         JNL   IWM4MINI_LU17_&SYSNDX    SOURCELU NAME >= 17 BYTES @P4C  00442900
.*                                                                      00443000
         AIF   ('&MODE' EQ 'RESET').ENDBLANKLU                          00443100
.* MODE(RETAIN) REQUIRES BLANKING OUT SOURCELU AREA                     00443200
         MVI   PB_SOURCELU,C' '         BLANK OUT THE FIELD             00443300
         MVC   PB_SOURCELU+1(16),PB_SOURCELU                            00443400
.ENDBLANKLU    ANOP                                                     00443500
.*                                                                      00443600
.* MODE(RETAIN!RESET) CODE GENERATION                                   00443700
.*                                                                      00443800
         MVC   PB_SOURCELU(L'&T1),&T1         COPY SOURCELU             00443900
         J     IWM4MINI_ENDSOURCELU_&SYSNDX                       @P4C  00444000
IWM4MINI_LU17_&SYSNDX DS 0H                                             00444100
         MVC   PB_SOURCELU(17),&T1         COPY 17 BYTES FROM SOURCELU  00444200
IWM4MINI_ENDSOURCELU_&SYSNDX DS 0H                                      00444300
.****************************************                               00444400
.*                                                                      00444500
.ENDSOURCELU   ANOP                                                     00444600
.*                                                                      00444700
         AIF   ('&XLU62TKN' NE 'NO_LU62TKN').LU62TKN                    00444800
         AGO   .ENDLU62TKN                                              00444900
.*                                                                      00445000
.LU62TKN    ANOP                                                        00445100
* Process LU62TKN                                                 @P4A  00445200
&T1      SETC  '&LU62TKN'                                               00445300
         AIF   ('&LU62TKN'(1,1) NE '(').LU62TKNRS                       00445400
&T1      SETC  '&LU62TKN'(2,K'&LU62TKN-2)                               00445500
&T1      SETC  '0(&T1.)'                                                00445600
.LU62TKNRS ANOP                                                         00445700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00445800
         AIF   ('&XLU62TKN_FMT' EQ 'OTHER').OTHER_LU62TKN               00445900
&T2      SETC  '&LU62TKN_FMT'(K'&LU62TKN_FMT-1,2)                       00446000
.* &T2 IS THE LAST 2 CHARACTERS OF LU62TKN_FMT = LENGTH OF LU62TKN      00446100
         MVC   PB_LU62TKN(&T2),&T1          COPY LU62TKN                00446200
         MVI   PB_LU62TKN_FMT,PB_LU62FMT_&LU62TKN_FMT                   00446300
         AGO   .ENDLU62TKN                                              00446400
.*                                                                      00446500
.OTHER_LU62TKN    ANOP                                                  00446600
&T2      SETC  '&LU62TKN_LEN'                                           00446700
         AIF   ('&LU62TKN_LEN'(1,1) NE '(').LU62TKNLENRS                00446800
&T2      SETC  '&LU62TKN_LEN'(2,K'&LU62TKN_LEN-2)                       00446900
&T2      SETC  '0(&T2.)'                                                00447000
.LU62TKNLENRS ANOP                                                      00447100
.* &T2 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00447200
         SLR   1,1    CLEAR GPR 1                                       00447300
         ICM   1,1,&T2 INSERT LENGTH FROM LU62TKN_LEN (1-36 DECIMAL OK) 00447400
         JNZ   IWM4MINI_TEST_HIGH&SYSNDX                          @P4C  00447500
         LA    0,IWMRSNCODEBADLU62TKNLEN SET RSNCODE = BAD LU62 TKN LEN 00447600
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RC          00447700
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').SWAM313   @L2 00447800
         SAM31                         SWITCH TO AMODE 31           @L2 00447900
.SWAM313 ANOP                                                       @L2 00448000
         J     IWM4MINI_END_&SYSNDX    BRANCH TO END LABEL        @P4C  00448100
IWM4MINI_TEST_HIGH&SYSNDX   DS  0H                                      00448200
         LA    0,PB_MAX_LU62TKN_LEN                                     00448300
         CR    1,0                                                      00448400
         JNH   IWM4MINI_COPY_LU62TKN&SYSNDX                       @P4C  00448500
         LA    0,IWMRSNCODEBADLU62TKNLEN SET RSNCODE = BAD LU62 TKN LEN 00448600
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RC          00448700
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').SWAM314   @L2 00448800
         SAM31                         SWITCH TO AMODE 31           @L2 00448900
.SWAM314 ANOP                                                       @L2 00449000
         J     IWM4MINI_END_&SYSNDX    BRANCH TO END LABEL        @P4C  00449100
IWM4MINI_MVC&SYSNDX MVC PB_LU62TKN(0),&LU62TKN     COPY LU62TKN         00449200
IWM4MINI_COPY_LU62TKN&SYSNDX   AHI 1,-1                           @P4C  00449300
         LARL  15,IWM4MINI_MVC&SYSNDX Addr of instruction for EX  @P4A  00449400
         EX    1,0(15)                And do the EXECUTE          @P4C  00449500
.ENDLU62TKN    ANOP                                                     00449600
.*                                                                      00449700
         AIF   ('&ARRIVALTIMEP' EQ 'CURRENT').STCKLOGIC                 00449800
         AIF   ('&ARRIVALTIMEP' NE 'YES').ENDARRIVALTIMEP               00449900
&T1      SETC  '&ARRIVALTIME'                                           00450000
         AIF   ('&ARRIVALTIME'(1,1) NE '(').ARRIVALTIMERS               00450100
&T1      SETC  '&ARRIVALTIME'(2,K'&ARRIVALTIME-2)                       00450200
&T1      SETC  '0(&T1.)'                                                00450300
.ARRIVALTIMERS ANOP                                                     00450400
* Process ARRIVALTIME                                             @P4A  00450500
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00450600
         MVC   PB_ARRTIME(8),&T1                                        00450700
         AGO   .ENDARRIVALTIMEP                                         00450800
.STCKLOGIC       ANOP                                                   00450900
         STCK  PB_ARRTIME              SAVE TOD                         00451000
         JZ    IWM4MINI_ARRTIMEOK&SYSNDX BRANCH WHEN STCK CC=0    @P4C  00451100
         LA    0,IWMRSNCODENOARRTIME   SET REASONCODE                   00451200
         LA    15,IWMRETCODEENVERROR   SET RC = IWMRETCODEENVERROR      00451300
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').SWAM315   @L2 00451400
         SAM31                         SWITCH TO AMODE 31           @L2 00451500
.SWAM315 ANOP                                                       @L2 00451600
         J     IWM4MINI_FINIS&SYSNDX   BRANCH TO THE END          @P4C  00451700
IWM4MINI_ARRTIMEOK&SYSNDX DS 0H           BRANCH LABEL FOR STCK CC=0    00451800
.ENDARRIVALTIMEP ANOP                                                   00451900
.*                                                        @WLMPPBS      00452000
         AIF   ('&XREPORTONLY' NE 'NO').ENDEXSTARTTIMEP                 00452100
.*                                                        @WLMPDBM      00452200
         AIF   ('&XBPMGMTONLY' NE 'NO').ENDEXSTARTTIMEP                 00452300
         AIF   ('&EXSTARTTIMEP' EQ 'NO').ENDEXSTARTTIMEP                00452400
         AIF   ('&EXSTARTTIMEP' EQ 'CURRENT').STCKLOGIC2                00452500
&T1      SETC  '&EXSTARTTIME'                                           00452600
         AIF   ('&EXSTARTTIME'(1,1) NE '(').EXSTARTTIMERS               00452700
&T1      SETC  '&EXSTARTTIME'(2,K'&EXSTARTTIME-2)                       00452800
&T1      SETC  '0(&T1.)'                                                00452900
.EXSTARTTIMERS ANOP                                                     00453000
* Process EXSTARTTIME                                             @P4A  00453100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00453200
         MVC   PB_EXSTARTTIME(8),&T1                                    00453300
         AGO   .ENDEXSTARTTIMEP                                         00453400
.STCKLOGIC2      ANOP                                                   00453500
         STCK  PB_EXSTARTTIME          SAVE TOD                         00453600
         JZ    IWM4MINI_EXTIMEOK&SYSNDX BRANCH WHEN STCK CC=0     @P4C  00453700
         LA    0,IWMRSNCODENOEXTIME    SET REASONCODE                   00453800
         LA    15,IWMRETCODEENVERROR   SET RC = IWMRETCODEENVERROR      00453900
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').SWAM316   @L2 00454000
         SAM31                         SWITCH TO AMODE 31           @L2 00454100
.SWAM316 ANOP                                                       @L2 00454200
         J     IWM4MINI_FINIS&SYSNDX   BRANCH TO THE END          @P4C  00454300
IWM4MINI_EXTIMEOK&SYSNDX DS 0H           BRANCH LABEL FOR STCK CC=0     00454400
.ENDEXSTARTTIMEP ANOP                                                   00454500
.*******************************************************************    00454600
.***        REPORT_ONLY MODE PB               @OW54806      @WLMPAPC    00454700
.*******************************************************************    00454800
         AIF   ('&XREPORTONLY' EQ 'NO').ENDREPORTONLY                   00454900
* Process REPORT_ONLY                                              @P4A 00455000
         OI    PB_FLAGS,PB_REPORT_ONLY   INDICATE REPORT_ONLY PB        00455100
         OI    PB_FLAGS,PB_ASSOCIATE     SET ASSOCIATE FLAG             00455200
         AIF   ('&ASSOCIATE' EQ 'ADDRESS_SPACE').ASSOCIATE_AS           00455300
&T1      SETC  '&ENCLAVETOKEN'           ASSOCIATION WITH ENCLAVE       00455400
         AIF   ('&ENCLAVETOKEN'(1,1) NE '(').ENCLAVETOKENRS             00455500
&T1      SETC  '&ENCLAVETOKEN'(2,K'&ENCLAVETOKEN-2)                     00455600
&T1      SETC  '0(&T1.)'                                                00455700
.ENCLAVETOKENRS ANOP                                                    00455800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00455900
         MVC   PB_ETOKEN(8),&T1          COPY ENCLAVETOKEN              00456000
         AGO   .ENDREPORTONLY                                           00456100
.*                                                                      00456200
.ASSOCIATE_AS  ANOP                                                     00456300
&T1      SETC  '&ASID'                   ASSOCIATION WITH ADDRESS SPACE 00456400
         AIF   ('&ASID'(1,1) NE '(').ASIDRS                             00456500
&T1      SETC  '&ASID'(2,K'&ASID-2)                                     00456600
&T1      SETC  '0(&T1.)'                                                00456700
.ASIDRS ANOP                                                            00456800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00456900
         MVC   PB_AS_ID(2),&T1           COPY ASID                      00457000
.*                                                                      00457100
.ENDREPORTONLY ANOP                                       @WLMPAPC      00457200
.*******************************************************************    00457300
.***        BUFFERPOOL_MANAGEMENT_ONLY MODE PB              @WLMPDBM    00457400
.*******************************************************************    00457500
         AIF   ('&XBPMGMTONLY' EQ 'NO').ENDBPMGMTONLY                   00457600
         OI    PB_FLAGS,PB_BPMGMT_ONLY   INDICATE BP_MGMT_ONLY PB       00457700
         OI    PB_FLAGS,PB_ASSOCIATE     SET ASSOCIATE FLAG             00457800
&T1      SETC  '&ENCLAVETOKEN'           ASSOCIATION WITH ENCLAVE       00457900
         AIF   ('&ENCLAVETOKEN'(1,1) NE '(').BPENCLAVETOKENRS           00458000
&T1      SETC  '&ENCLAVETOKEN'(2,K'&ENCLAVETOKEN-2)                     00458100
&T1      SETC  '0(&T1.)'                                                00458200
.BPENCLAVETOKENRS ANOP                                                  00458300
* Process BPMGMTONLY                                               @P4A 00458400
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00458500
         MVC   PB_ETOKEN(8),&T1          COPY ENCLAVETOKEN              00458600
.*                                                                      00458700
.ENDBPMGMTONLY ANOP                                         @WLMPDBM    00458800
         AIF   ('&XEWLM' NE 'YES').Mini_NoEwlm                      @L2 00458900
.****************************************************************** @P2 00459000
.***     PROCESS EWLM_PACORR, EWLM_PACTKN  (START)                  @P2 00459100
.****************************************************************** @P2 00459200
         LCLA  &F1                                                  @P2 00459300
&T2      SETC  ''                                                   @P2 00459400
         AIF   ('&XEWLM_PACORR' EQ '').P2_11                        @P2 00459500
         AIF   ('&XEWLM_PACORR' EQ 'NO_EWLM_PACORR').P2_11          @P2 00459600
&T2      SETC  '&XEWLM_PACORR'                                      @P2 00459700
&F1      SETA  0                     INDICATE TYPE=CORRELATOR       @P2 00459800
.P2_11   ANOP                                                       @P2 00459900
         AIF   ('&XEWLM_PACTKN' EQ '').P2_12                        @P2 00460000
         AIF   ('&XEWLM_PACTKN' EQ 'NO_EWLM_PACTKN').P2_12          @P2 00460100
&T2      SETC  '&XEWLM_PACTKN'                                      @P2 00460200
&F1      SETA  1                     INDICATE TYPE=CORR.TOKEN       @P2 00460300
.P2_12   ANOP                                                       @P2 00460400
         AIF   ('&T2' EQ '').P2_END                                 @P2 00460500
.*                                                                  @P2 00460600
* Process EWLM_PACORR, EWLM_PACTKN                                 @P4A 00460700
         CLI   PB_VERSION,PB_VERSION6  IF PB_VERSION < 6 THEN       @P2 00460800
         JL    IWM4MINI_P2EX&SYSNDX    SKIP                        @P4C 00460900
.*                                                                  @P2 00461000
&T1      SETC  '&T2'                                                @P2 00461100
         AIF   ('&T2'(1,1) NE '(').P2_21                            @P2 00461200
&T1      SETC  '&T2'(2,K'&T2-2)                                     @P2 00461300
&T1      SETC  '0(&T1.)'                                            @P2 00461400
.P2_21   ANOP                                                       @P2 00461500
         MVC   PB_EWLM_PARENTCORRELATOR,&T1 COPY EWLM PARAM TO PB   @P2 00461600
.* If EWLM_PACORR is specified then Reg.0 = 0                       @P2 00461700
         MVI   PB_EWLM_REQUEST,PB_EWLM_REQUEST_INIT_RESET_PACORR    @P2 00461800
         AIF   (&F1 NE 1).P2_31                                     @P2 00461900
.* If EWLM_PACTKN is specified then Reg.0 = -1                      @P2 00462000
         MVI   PB_EWLM_REQUEST,PB_EWLM_REQUEST_INIT_RESET_PACTKN    @P2 00462100
.P2_31   ANOP                                                       @P2 00462200
* Invoke the monitor init routine (IWMXDINI)                        @P2 00462300
.*--------------------------------------------------------------------- 00462400
         LGR   1,14                    LOAD ADDR OF PB INTO R01     @L2 00462500
         AIF   ('&SYSAM64' NE 'YES').P2_51                              00462600
         LLGT  15,X'10'                ADDRESS THE CVT              @L2 00462700
         LLGT  15,X'8C'(15,0)          ADDRESS THE ECVT             @L2 00462800
         LLGT  15,X'C4'(15,0)          ADDRESS THE WMVT             @L2 00462900
         LLGT  15,X'16C'(15,0)         GET SERVICE ROUTINE ADDR     @L2 00463000
         BASR  14,15                   INVOKE IWMXDIN4              @L2 00463100
         AGO   .P2_61                                               @L2 00463200
.P2_51   ANOP                                                           00463300
         SAM31                         SET AM=31                        00463400
         L     15,X'10'                ADDRESS THE CVT                  00463500
         L     15,X'8C'(15,0)          ADDRESS THE ECVT                 00463600
         L     15,X'C4'(15,0)          ADDRESS THE WMVT                 00463700
         L     15,X'168'(15,0)         GET SERVICE ROUTRINE ADDR    @L2 00463800
         BASR  14,15                   INVOKE IWMXDIN1              @L2 00463900
.P2_61   ANOP                                                           00464000
         LGR   14,1                    RESTORE ADDRESS OF PB        @L2 00464100
         LLGTR 15,15                   CHECK RETURN CODE            @L2 00464200
         JNZ   IWM4MINI_FINIS&SYSNDX   BAD RC RETURNED (Rc>0)      @P4C 00464300
.*                                                                  @P2 00464400
IWM4MINI_P2EX&SYSNDX DS 0H             BRANCH LABEL FOR EWLM PROC.  @P2 00464500
.*                                                                  @P2 00464600
.P2_END  ANOP                                                       @P2 00464700
.Mini_NoEwlm ANOP                                                   @L2 00464800
.****************************************************************** @P2 00464900
.***     PROCESS EWLM_PACORR, EWLM_PACTKN  (END)                    @P2 00465000
.****************************************************************** @P2 00465100
         LA    15,IWMRETCODEOK           SET RETURN CODE = OK           00465200
.*                                                                      00465300
&T1      SETC  'PB_INIT'                                                00465400
         AIF   ('&SCOPE' EQ 'SINGLE').ENDSHARED                         00465500
.*     SCOPE(SHARED)                                                    00465600
&T1      SETC  '&T1.+PB_SCOPE_SHARED'                                   00465700
         AGO   .ENDSCOPE                                                00465800
.ENDSHARED     ANOP                                                     00465900
.*     SCOPE(SINGLE)                                                    00466000
         AIF   ('&MODE' EQ 'RESET').ENDSCOPE                            00466100
         NI    PB_WORKDEF,X'FF'-PB_SCOPE_SHARED                         00466200
.ENDSCOPE      ANOP                                                     00466300
         AIF   ('&CONTINUEP' EQ 'NO').ENDCONT                           00466400
&T1      SETC  '&T1.+PB_FROM_&XFROM'                                    00466500
.ENDCONT       ANOP                                                     00466600
         OI    PB_WORKDEF,&T1          RECORD STATUS                    00466700
         AIF   ('&MODE' NE 'RESET').ENDRES2                       @P4C  00466800
         MVI   PB_STATE,PB_STATE_ACTIVE    INDICATE STATE IS NOW ACTIVE 00466900
.ENDRES2 ANOP                                                     @P4C  00467000
IWM4MINI_FINIS&SYSNDX DS 0H            BRANCH LABEL FOR STCK NON-0 CC   00467100
         DROP  14                                                       00467200
IWM4MINI_END_&SYSNDX DS 0H             END LABEL                        00467300
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').AMODE31       00467400
         SAM31                         SET AMODE 31                     00467500
.AMODE31 ANOP                                                           00467600
.*******************************************************************    00467700
.***        RETURN CODE PROCESSING                                      00467800
.*******************************************************************    00467900
         AIF   (N'&RETCODE LE 0).IWM4MINI_ENDRC_EXP                     00468000
         AIF   ('&XRETCODE'(1,1) EQ '(').IWM4MINI_RC_REG                00468100
         AIF   ('&XRETCODE' EQ 'GPR15').IWM4MINI_ENDRC_EXP              00468200
         AIF   ('&XRETCODE' EQ 'REG15').IWM4MINI_ENDRC_EXP              00468300
         AIF   ('&XRETCODE' EQ 'R15').IWM4MINI_ENDRC_EXP                00468400
         AIF   ('&XRETCODE' EQ '15').IWM4MINI_ENDRC_EXP                 00468500
         ST    15,&XRETCODE                                             00468600
            AGO  .IWM4MINI_ENDRC_EXP                                    00468700
.*                                                                      00468800
.IWM4MINI_RC_REG      ANOP  ,                                           00468900
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00469000
         AIF   ('&T1' EQ 'GPR15').IWM4MINI_ENDRC_EXP                    00469100
         AIF   ('&T1' EQ 'REG15').IWM4MINI_ENDRC_EXP                    00469200
         AIF   ('&T1' EQ 'R15').IWM4MINI_ENDRC_EXP                      00469300
         AIF   ('&T1' EQ '15').IWM4MINI_ENDRC_EXP                       00469400
         LR    &T1,15                                                   00469500
.IWM4MINI_ENDRC_EXP   ANOP  ,                                           00469600
.*******************************************************************    00469700
.***        REASON CODE PROCESSING                                      00469800
.*******************************************************************    00469900
         AIF   (N'&RSNCODE LE 0).IWM4MINI_ENDRSN_EXP                    00470000
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWM4MINI_RSN_REG               00470100
         AIF   ('&XRSNCODE' EQ 'GPR0').IWM4MINI_ENDRSN_EXP              00470200
         AIF   ('&XRSNCODE' EQ 'GPR00').IWM4MINI_ENDRSN_EXP             00470300
         AIF   ('&XRSNCODE' EQ 'REG0').IWM4MINI_ENDRSN_EXP              00470400
         AIF   ('&XRSNCODE' EQ 'REG00').IWM4MINI_ENDRSN_EXP             00470500
         AIF   ('&XRSNCODE' EQ 'R0').IWM4MINI_ENDRSN_EXP                00470600
         AIF   ('&XRSNCODE' EQ '0').IWM4MINI_ENDRSN_EXP                 00470700
         AIF   ('&XRSNCODE' EQ '00').IWM4MINI_ENDRSN_EXP                00470800
         ST    0,&XRSNCODE                                              00470900
         AGO   .IWM4MINI_ENDRSN_EXP                                     00471000
.*                                                                      00471100
.IWM4MINI_RSN_REG     ANOP  ,                                           00471200
&T1      SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                             00471300
         AIF   ('&ZCGPR' EQ 'GPR0').IWM4MINI_ENDRSN_EXP                 00471400
         AIF   ('&ZCGPR' EQ 'GPR00').IWM4MINI_ENDRSN_EXP                00471500
         AIF   ('&ZCGPR' EQ 'REG0').IWM4MINI_ENDRSN_EXP                 00471600
         AIF   ('&ZCGPR' EQ 'REG00').IWM4MINI_ENDRSN_EXP                00471700
         AIF   ('&ZCGPR' EQ 'R0').IWM4MINI_ENDRSN_EXP                   00471800
         AIF   ('&ZCGPR' EQ '0').IWM4MINI_ENDRSN_EXP                    00471900
         AIF   ('&ZCGPR' EQ '00').IWM4MINI_ENDRSN_EXP                   00472000
         LR    &T1,0                                                    00472100
.IWM4MINI_ENDRSN_EXP  ANOP  ,                                           00472200
.*******************************************************************    00472300
&ZIWM4MINI            SETC  'YES'          SET IWM4MINI USED            00472400
         POP   PRINT                                                    00472500
*                                          IWM4MINI END                 00472600
         SPACE 1                                                        00472700
         MEXIT                                                          00472800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00472900
.********************************************************************   00473000
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00473100
.********************************************************************   00473200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00473300
                      LCLA  &ZOPN1         INVOCATION INDEX             00473400
                      LCLC  &ZOPL(4095)    LABEL                        00473500
                      LCLC  &ZOPO(4095)    OPERATION                    00473600
                      LCLC  &ZOPV(4095)    VALUE                        00473700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00473800
.*                                                                      00473900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00474000
.*******************************************************************    00474100
.***AO.X02  RETURN CODE PROCESSING                                      00474200
.*******************************************************************    00474300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00474400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00474500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00474600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00474700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00474800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00474900
&ZOPN                 SETA  &ZOPN+1                                     00475000
&ZOPL(&ZOPN)          SETC  ' '                                         00475100
&ZOPO(&ZOPN)          SETC  'ST'                                        00475200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00475300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00475400
                      AGO   .ZMRETX                                     00475500
.*                                                                      00475600
.ZMRET2               ANOP  ,                                           00475700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00475800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00475900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00476000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00476100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00476200
&ZOPN                 SETA  &ZOPN+1                                     00476300
&ZOPL(&ZOPN)          SETC  ' '                                         00476400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00476500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00476600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00476700
.ZMRETX               ANOP  ,                                           00476800
.*******************************************************************    00476900
.***AO.X03  REASON CODE PROCESSING                                      00477000
.*******************************************************************    00477100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00477200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00477300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00477400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00477500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00477600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00477700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00477800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00477900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00478000
&ZOPN                 SETA  &ZOPN+1                                     00478100
&ZOPL(&ZOPN)          SETC  ' '                                         00478200
&ZOPO(&ZOPN)          SETC  'ST'                                        00478300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00478400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00478500
                      AGO   .ZMRSNX                                     00478600
.*                                                                      00478700
.ZMRSN2               ANOP  ,                                           00478800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00478900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00479000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00479100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00479200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00479300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00479400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00479500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00479600
&ZOPN                 SETA  &ZOPN+1                                     00479700
&ZOPL(&ZOPN)          SETC  ' '                                         00479800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00479900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00480000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00480100
.ZMRSNX               ANOP  ,                                           00480200
.*******************************************************************    00480300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00480400
.*******************************************************************    00480500
                      ACTR  10000                                       00480600
.*                                                                      00480700
                      LCLA  &ZLC           COLUMN POSITION              00480800
                      LCLA  &ZOPX          LIST TABLE INDEX             00480900
                      LCLC  &ZLL           LABEL                        00481000
                      LCLC  &ZLOP          OPERATION                    00481100
                      LCLC  &ZLV           VALUE                        00481200
                      LCLC  &ZLD           DESCRIPTION                  00481300
.*                                                                      00481400
&ZOPX                 SETA  1                                           00481500
.*******************************************************************    00481600
.***AP.X01  FORMAT GENERATED CODE                                       00481700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00481800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00481900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00482000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00482100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00482200
                      AIF   (K'&ZLD LE 0).ZL51                          00482300
&ZLC                  SETA  35             COMMENT COLUMN               00482400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00482500
&ZLC                  SETA  33             COMMENT COLUMN               00482600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00482700
&ZLV                  SETC  '&ZLV'.' '                                  00482800
                      AGO   .ZL31                                       00482900
.*                                                                      00483000
.ZL41                 ANOP  ,                                           00483100
&ZLV                  SETC  '&ZLV'.' '                                  00483200
.ZL51                 ANOP  ,                                           00483300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00483400
.*                                                                      00483500
&ZLL     &ZLOP &ZLV                                                     00483600
.*                                                                      00483700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00483800
                      AGO   .ZL21          CONTINUE LOOPING             00483900
.*                                                                      00484000
.ZLX1                 ANOP  ,                                           00484100
.*******************************************************************    00484200
.***AP.X02  END OF IWM4MINI MACRO                                       00484300
&ZIWM4MINI            SETC  'YES'          SET IWM4MINI USED            00484400
         POP   PRINT                                                    00484500
*                                            IWM4MINI-2                 00484600
         SPACE 1                                                        00484700
.ZLX2                 ANOP  ,                                           00484800
         MEND                                                           00484900
**********************************************************************/ 00485000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00485100
*%IWM4MINI: MACRO KEYS(EWLM,MONTKN,MONTKN64,MODE,DURATION,DISPTYPE,     00485200
*                 TCB,ARRIVALTIMEP,ARRIVALTIME,EWLM_PACORR,             00485300
*                 EWLM_PACTKN,CONTINUEP,FROM,OWNER_TOKEN,OWNER_DATA,    00485400
*                 FROM_SUBSYSNM,REPORTONLY,BPMGMTONLY,EXSTARTTIMEP,     00485500
*                 EXSTARTTIME,SERVCLS,ASSOCIATE,ENCLAVETOKEN,ASID,      00485600
*                 SCOPE,TRXNAME,USERID,TRXCLASS,TTRACETOKEN,SOURCELU,   00485700
*                 LU62TKN,LU62TKN_FMT,LU62TKN_LEN,RETCODE,RSNCODE,      00485800
*                 PLISTVER);                                            00485900
*  ANS('?'!!MACLABEL!!' '!!'IWM4MINP '!!MACLIST!!                       00486000
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00486100
*%END IWM4MINI;                                                         00486200
