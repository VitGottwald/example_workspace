*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLLSTM                               -01/13/18-<4> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES List Structure Multiple Entry Services    * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 2000, 2001                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7705                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLLSTM macro provides operations to read, move or delete  * 00002100
*      multiple list entries.                                         * 00002200
*                                                                     * 00002300
*      The list structure is accessed as a set of linked lists where  * 00002400
*      each list is comprised of some number of list entries.  The    * 00002500
*      number of lists is determined via programming interface when   * 00002600
*      the structure is allocated, and is static for the duration of  * 00002700
*      the structure.  IXLLSTM facilitates designating the head or    * 00002800
*      tail of any particular list as the starting point for various  * 00002900
*      list operations.                                               * 00003000
*                                                                     * 00003100
*      List entries are comprised of list entry data and/or list      * 00003200
*      adjunct data.  When a non-zero ELEMENTRATIO is specified on    * 00003300
*      IXLCONN then list entries may contain entry data.  The         * 00003400
*      presence or absence of entry data for a given list entry is    * 00003500
*      determined when the entry is created or written.  The          * 00003600
*      existence of adjunct data for all entries in a structure is    * 00003700
*      determined when the structure is allocated.  The areas         * 00003800
*      containing the entry data and adjunct data are referred to as  * 00003900
*      the data area and adjunct area, respectively.                  * 00004000
*                                                                     * 00004100
*      Refer to the IXLCONN service description for additional        * 00004200
*      information regarding the allocation of and connection to a    * 00004300
*      list structure.                                                * 00004400
*                                                                     * 00004500
*      List entry data, when present, is comprised of 1 to 255        * 00004600
*      elements.  The size of an element and the maximum number of    * 00004700
*      elements in an entry is specified when the structure is        * 00004800
*      allocated.  The number of elements in an entry is established  * 00004900
*      when the entry is initially written and may be changed on      * 00005000
*      subsequent writes.  List adjunct data is always 64 bytes in    * 00005100
*      length.  Note: For list entries allocated with secondary keys, * 00005200
*      the first 32 bytes of the adjunct area will contain the        * 00005300
*      secondary key of the entry.                                    * 00005400
*                                                                     * 00005500
*      Users allocate list entries by invoking IXLLSTE to "create" an * 00005600
*      entry.  Individual entries must reside on one linked list, and * 00005700
*      cannot reside on more than one list at a time.  An allocated   * 00005800
*      list entry has a system assigned entry identifier, or a user   * 00005900
*      assigned entry identifier which is unique within the structure * 00006000
*      and can be used for subsequent reference or access to that     * 00006100
*      entry.  Structure allocation allows an option to support user  * 00006200
*      defined entry identifiers or user defined entry names, which   * 00006300
*      the structure will enforce as unique within the structure on   * 00006400
*      create requests.  Entry names or identifiers may also be used  * 00006500
*      for subsequent entry reference and access.  Structure          * 00006600
*      allocation also allows optional entry key support (either      * 00006700
*      entry key or entry key and secondary keys), which functions as * 00006800
*      a mechanism for designating relative positions within a        * 00006900
*      specified list other than the list head or tail.  Entry name   * 00007000
*      and entry key support are mutually exclusive options.  A       * 00007100
*      non-optional entry characteristic is the entry version number. * 00007200
*      Users determine the version number to be assigned to each      * 00007300
*      entry, and all IXLLSTM list entry operations permit the        * 00007400
*      testing of the version number.  A list operation can read from * 00007500
*      or write to either or both of the entry data area and adjunct  * 00007600
*      area.                                                          * 00007700
*                                                                     * 00007800
*      A list structure may also be allocated to include a lock table * 00007900
*      as part of the structure.  The lock table is comprised of a    * 00008000
*      set of exclusive locks which can be manipulated either         * 00008100
*      independently of or in conjunction with list entry and adjunct * 00008200
*      data.  Locking operations for IXLLSTM permit the testing of a  * 00008300
*      specified lock.  List entry and adjunct data operations can be * 00008400
*      affected by the state of a specified lock.  The purpose and    * 00008500
*      scope of each lock is entirely user defined.                   * 00008600
*                                                                     * 00008700
*      A connection may optionally have a list notification vector    * 00008800
*      allocated on the attached host CPC.  The notification vector   * 00008900
*      may be used to monitor list state changes from the empty to    * 00009000
*      non-empty state, and vice-versa, for any list in the           * 00009100
*      structure.                                                     * 00009200
*                                                                     * 00009300
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00009400
*                                                                     * 00009500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00009600
*                                                                     * 00009700
*01* ENVIRONMENT:                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00010100
*                                                                     * 00010200
*      Dispatchable unit mode: Task or SRB mode.                      * 00010300
*                                                                     * 00010400
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00010500
*                                                                     * 00010600
*                        The current primary address space must be    * 00010700
*                        the same as the primary address space at the * 00010800
*                        time the connection service, IXLCONN, was    * 00010900
*                        issued for the structure.                    * 00011000
*                                                                     * 00011100
*      AMODE:            31-bit.                                      * 00011200
*                                                                     * 00011300
*      ASC mode:         Primary or Access Register.                  * 00011400
*                                                                     * 00011500
*      Interrupt status: Enabled or disabled for I/O and external     * 00011600
*                        interrupts.                                  * 00011700
*                                                                     * 00011800
*      Locks:            Disabled callers must be legally disabled by * 00011900
*                        holding the CPU lock and cannot hold other   * 00012000
*                        disabled locks (invocation by DIE routines   * 00012100
*                        is not supported).  Enabled callers must not * 00012200
*                        hold any locks.  When MODE=SYNCSUSPEND is    * 00012300
*                        specified the caller must be enabled.        * 00012400
*                                                                     * 00012500
*      Control parameters:                                            * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                        1.  The caller's parameter list must be      * 00012900
*                            addressable in the caller's primary      * 00013000
*                            address space.                           * 00013100
*                                                                     * 00013200
*                        2.  If the caller is running in Access       * 00013300
*                            Register ASC mode and specifies a macro  * 00013400
*                            parameter using explicit register        * 00013500
*                            notation the access register             * 00013600
*                            corresponding to the general register    * 00013700
*                            must appropriately qualify the general   * 00013800
*                            register.                                * 00013900
*                                                                     * 00014000
*                        3.  The virtual storage areas specified by   * 00014100
*                            the ADJAREA, ANSAREA, and LISTKEYAREA    * 00014200
*                            keywords must be addressable in the      * 00014300
*                            caller's primary address space or from   * 00014400
*                            the caller's PASN access list.           * 00014500
*                                                                     * 00014600
*                        4.  All other virtual storage areas          * 00014700
*                            specified on the invocation may be       * 00014800
*                            addressable in the caller's primary,     * 00014900
*                            secondary, or home address spaces, from  * 00015000
*                            the PASN access list, or from the DU     * 00015100
*                            access list.                             * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*01* PROGRAMMING REQUIREMENTS:                                        * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*    1.  Access Register mode invokers must specify SYSSTATE          * 00016100
*        ASCENV=AR prior to invoking this macro.                      * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*01* RESTRICTIONS:                                                    * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*    1.  If the caller is disabled then the parameter list and all    * 00016900
*        storage areas addressed by macro parameters must reside in   * 00017000
*        either non-pageable or disabled reference storage.           * 00017100
*                                                                     * 00017200
*    2.  The caller may not be running as a Disabled Interrupt Exit   * 00017300
*        (DIE).                                                       * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*01* INPUT REGISTER INFORMATION:                                      * 00017800
*                                                                     * 00017900
*    Before issuing the IXLLSTM macro, the caller does not have to    * 00018000
*    place any information into any register or AR unless using it in * 00018100
*    register notation for a particular parameter, or using it as a   * 00018200
*    base register.                                                   * 00018300
*                                                                     * 00018400
*01* OUTPUT REGISTER INFORMATION:                                     * 00018500
*                                                                     * 00018600
*    When control returns to the caller, the GPRs contain:            * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*    REGISTER  CONTENTS                                               * 00019000
*                                                                     * 00019100
*    0         Reason code                                            * 00019200
*                                                                     * 00019300
*    1         Used as work registers by the system                   * 00019400
*                                                                     * 00019500
*    2-13      Unchanged                                              * 00019600
*                                                                     * 00019700
*    14        Used as work registers by the system.                  * 00019800
*                                                                     * 00019900
*    15        Return code                                            * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*    When control returns to the caller, the ARs contain:             * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*    REGISTER  CONTENTS                                               * 00020700
*                                                                     * 00020800
*    0-1       Used as work registers by the system                   * 00020900
*                                                                     * 00021000
*    2-13      Unchanged                                              * 00021100
*                                                                     * 00021200
*    14-15     Used as work registers by the system.                  * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*01* PERFORMANCE IMPLICATIONS:                                        * 00021700
*                                                                     * 00021800
*    None.                                                            * 00021900
*                                                                     * 00022000
*01* SYNTAX:                                                          * 00022100
*                                                                     * 00022200
*Ýxlabel¨  IXLLSTM     CONTOKEN=xcontoken                             * 00022300
*                    Ý,REQID=»xreqid!NO_REQIDº¨                       * 00022400
*                   Ð ,REQUEST=READ_LIST                              * 00022500
*                   !     ,TYPE=ENTDATA!ADJDATA!ECONTROLS             * 00022600
*                   !    Ý,ADJAREA=»xadjarea!NO_ADJAREAº¨             * 00022700
*                   !    Ý,DIRECTION=»HEADTOTAIL!TAILTOHEADº¨         * 00022800
*                   !   Ð ,LOCATOR=CURSOR                             * 00022900
*                   !   !     ,LISTNUM=xlistnum                       * 00023000
*                   !   !    Ý,KEYSCANTYPE=»ENTRY!SECONDARYº¨         * 00023100
*                   !   !   ÐÝ,AUTHCOMPARE=NO¨                        * 00023200
*                   !   !   ¿Ý,AUTHCOMPARE=YES                        * 00023300
*                   !   !         ,AUTHCOMP=xauthcomp                 * 00023400
*                   !   !            Ý,AUTHCOMPTYPE=»EQUAL!           * 00023500
*                   !   !                            LESSOREQUALº¨¨   * 00023600
*                   !   !   ÐÝ,KEYCOMPARE=NO¨                         * 00023700
*                   !   !   ¿Ý,KEYCOMPARE=YES                         * 00023800
*                   !   !         ,ENTRYKEY=xentrykey                 * 00023900
*                   !   !       ÐÝ,KEYREQTYPE=EQUAL¨                  * 00024000
*                   !   !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨            * 00024100
*                   !   !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨         * 00024200
*                   !   !       ¿Ý,KEYREQTYPE=RANGE                   * 00024300
*                   !   !             ,KEYRANGEEND                    * 00024400
*                   !   !                          =xkeyrangeend¨¨    * 00024500
*                   !   !   ÐÝ,SKEYCOMPARE=NO¨                        * 00024600
*                   !   !   ¿Ý,SKEYCOMPARE=YES                        * 00024700
*                   !   !         ,SECONDARYKEY                       * 00024800
*                   !   !                       =xsecondarykey        * 00024900
*                   !   !       ÐÝ,SKEYREQTYPE=EQUAL¨                 * 00025000
*                   !   !       ÔÝ,SKEYREQTYPE=LESSOREQUAL¨           * 00025100
*                   !   !       ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨        * 00025200
*                   !   !       ¿Ý,SKEYREQTYPE=RANGE                  * 00025300
*                   !   !             ,SKEYRANGEEND                   * 00025400
*                   !   !                           =xskeyrangeend¨¨  * 00025500
*                   !   Ô ,LOCATOR=ENTRYID                            * 00025600
*                   !   !     ,ENTRYID=xentryid                       * 00025700
*                   !   !    Ý,KEYSCANTYPE=»ENTRY!SECONDARYº¨         * 00025800
*                   !   !   ÐÝ,LISTCOMPARE=NO¨                        * 00025900
*                   !   !   ¿Ý,LISTCOMPARE=YES                        * 00026000
*                   !   !         ,LISTNUM=xlistnum                   * 00026100
*                   !   !       ÐÝ,AUTHCOMPARE=NO¨                    * 00026200
*                   !   !       ¿Ý,AUTHCOMPARE=YES                    * 00026300
*                   !   !             ,AUTHCOMP=xauthcomp             * 00026400
*                   !   !                Ý,AUTHCOMPTYPE=»EQUAL!       * 00026500
*                   !   !                                LESSOREQUALº * 00026600
*                   !   !                                ¨¨¨          * 00026700
*                   !   !   ÐÝ,KEYCOMPARE=NO¨                         * 00026800
*                   !   !   ¿Ý,KEYCOMPARE=YES                         * 00026900
*                   !   !         ,ENTRYKEY=xentrykey                 * 00027000
*                   !   !       ÐÝ,KEYREQTYPE=EQUAL¨                  * 00027100
*                   !   !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨            * 00027200
*                   !   !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨         * 00027300
*                   !   !       ¿Ý,KEYREQTYPE=RANGE                   * 00027400
*                   !   !             ,KEYRANGEEND                    * 00027500
*                   !   !                          =xkeyrangeend¨¨    * 00027600
*                   !   !   ÐÝ,SKEYCOMPARE=NO¨                        * 00027700
*                   !   !   ¿Ý,SKEYCOMPARE=YES                        * 00027800
*                   !   !         ,SECONDARYKEY                       * 00027900
*                   !   !                       =xsecondarykey        * 00028000
*                   !   !       ÐÝ,SKEYREQTYPE=EQUAL¨                 * 00028100
*                   !   !       ÔÝ,SKEYREQTYPE=LESSOREQUAL¨           * 00028200
*                   !   !       ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨        * 00028300
*                   !   !       ¿Ý,SKEYREQTYPE=RANGE                  * 00028400
*                   !   !             ,SKEYRANGEEND                   * 00028500
*                   !   !                           =xskeyrangeend¨¨  * 00028600
*                   !   Ô ,LOCATOR=ENTRYNAME                          * 00028700
*                   !   !     ,ENTRYNAME=xentryname                   * 00028800
*                   !   !   ÐÝ,LISTCOMPARE=NO¨                        * 00028900
*                   !   !   ¿Ý,LISTCOMPARE=YES                        * 00029000
*                   !   !         ,LISTNUM=xlistnum                   * 00029100
*                   !   !       ÐÝ,AUTHCOMPARE=NO¨                    * 00029200
*                   !   !       ¿Ý,AUTHCOMPARE=YES                    * 00029300
*                   !   !             ,AUTHCOMP=xauthcomp             * 00029400
*                   !   !                Ý,AUTHCOMPTYPE=»EQUAL!       * 00029500
*                   !   !                                LESSOREQUALº * 00029600
*                   !   !                                ¨¨¨          * 00029700
*                   !   Ô ,LOCATOR=UNKEYPOS                           * 00029800
*                   !   !     ,LISTNUM=xlistnum                       * 00029900
*                   !   !    Ý,KEYSCANTYPE=»ENTRY!SECONDARYº¨         * 00030000
*                   !   !   ÐÝ,AUTHCOMPARE=NO¨                        * 00030100
*                   !   !   ¿Ý,AUTHCOMPARE=YES                        * 00030200
*                   !   !         ,AUTHCOMP=xauthcomp                 * 00030300
*                   !   !            Ý,AUTHCOMPTYPE=»EQUAL!           * 00030400
*                   !   !                            LESSOREQUALº¨¨   * 00030500
*                   !   !   ÐÝ,KEYCOMPARE=NO¨                         * 00030600
*                   !   !   ¿Ý,KEYCOMPARE=YES                         * 00030700
*                   !   !         ,ENTRYKEY=xentrykey                 * 00030800
*                   !   !       ÐÝ,KEYREQTYPE=EQUAL¨                  * 00030900
*                   !   !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨            * 00031000
*                   !   !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨         * 00031100
*                   !   !       ¿Ý,KEYREQTYPE=RANGE                   * 00031200
*                   !   !             ,KEYRANGEEND                    * 00031300
*                   !   !                          =xkeyrangeend¨¨    * 00031400
*                   !   !   ÐÝ,SKEYCOMPARE=NO¨                        * 00031500
*                   !   !   ¿Ý,SKEYCOMPARE=YES                        * 00031600
*                   !   !         ,SECONDARYKEY                       * 00031700
*                   !   !                       =xsecondarykey        * 00031800
*                   !   !       ÐÝ,SKEYREQTYPE=EQUAL¨                 * 00031900
*                   !   !       ÔÝ,SKEYREQTYPE=LESSOREQUAL¨           * 00032000
*                   !   !       ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨        * 00032100
*                   !   !       ¿Ý,SKEYREQTYPE=RANGE                  * 00032200
*                   !   !             ,SKEYRANGEEND                   * 00032300
*                   !   !                           =xskeyrangeend¨¨  * 00032400
*                   !   ¿ ,LOCATOR=KEYPOS                             * 00032500
*                   !         ,LISTNUM=xlistnum                       * 00032600
*                   !        Ý,KEYSCANTYPE=»ENTRY!SECONDARYº¨         * 00032700
*                   !       ÐÝ,AUTHCOMPARE=NO¨                        * 00032800
*                   !       ¿Ý,AUTHCOMPARE=YES                        * 00032900
*                   !             ,AUTHCOMP=xauthcomp                 * 00033000
*                   !                Ý,AUTHCOMPTYPE=»EQUAL!           * 00033100
*                   !                                LESSOREQUALº¨¨   * 00033200
*                   !       ÐÝ,KEYTYPE=ENTRY                          * 00033300
*                   !       !     ,ENTRYKEY=xentrykey                 * 00033400
*                   !       !       ÐÝ,KEYREQTYPE=EQUAL¨              * 00033500
*                   !       !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨        * 00033600
*                   !       !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨     * 00033700
*                   !       !       ¿Ý,KEYREQTYPE=RANGE               * 00033800
*                   !       !             ,KEYRANGEEND                * 00033900
*                   !       !                          =xkeyrangeend¨ * 00034000
*                   !       !       ÐÝ,KEYCOMPARE=NO¨                 * 00034100
*                   !       !       ¿Ý,KEYCOMPARE=YES¨                * 00034200
*                   !       !       ÐÝ,SKEYCOMPARE=NO¨                * 00034300
*                   !       !       ¿Ý,SKEYCOMPARE=YES                * 00034400
*                   !       !             ,SECONDARYKEY               * 00034500
*                   !       !                           =xsecondaryke * 00034600
*                   !       !                           y             * 00034700
*                   !       !               ÐÝ,SKEYREQTYPE=EQUAL¨     * 00034800
*                   !       !               ÔÝ,SKEYREQTYPE=           * 00034900
*                   !       !               !              LESSOREQUA * 00035000
*                   !       !               !              L¨         * 00035100
*                   !       !               ÔÝ,SKEYREQTYPE=           * 00035200
*                   !       !               !              GREATERORE * 00035300
*                   !       !               !              QUAL¨      * 00035400
*                   !       !               ¿Ý,SKEYREQTYPE=RANGE      * 00035500
*                   !       !                     ,SKEYRANGEEND       * 00035600
*                   !       !                                   =xske * 00035700
*                   !       !                                   yrang * 00035800
*                   !       !                                   eend¨ * 00035900
*                   !       !                                   ¨¨    * 00036000
*                   !       ¿Ý,KEYTYPE=SECONDARY                      * 00036100
*                   !             ,SECONDARYKEY                       * 00036200
*                   !                           =xsecondarykey        * 00036300
*                   !               ÐÝ,SKEYREQTYPE=EQUAL¨             * 00036400
*                   !               ÔÝ,SKEYREQTYPE=LESSOREQUAL¨       * 00036500
*                   !               ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨    * 00036600
*                   !               ¿Ý,SKEYREQTYPE=RANGE              * 00036700
*                   !                     ,SKEYRANGEEND               * 00036800
*                   !                                   =xskeyrangeen * 00036900
*                   !                                   d¨            * 00037000
*                   !               ÐÝ,SKEYCOMPARE=NO¨                * 00037100
*                   !               ¿Ý,SKEYCOMPARE=YES¨               * 00037200
*                   !               ÐÝ,KEYCOMPARE=NO¨                 * 00037300
*                   !               ¿Ý,KEYCOMPARE=YES                 * 00037400
*                   !                     ,ENTRYKEY                   * 00037500
*                   !                               =xentrykey        * 00037600
*                   !                       ÐÝ,KEYREQTYPE=EQUAL¨      * 00037700
*                   !                       ÔÝ,KEYREQTYPE=            * 00037800
*                   !                       !             LESSOREQUAL * 00037900
*                   !                       !             ¨           * 00038000
*                   !                       ÔÝ,KEYREQTYPE=            * 00038100
*                   !                       !             GREATEROREQ * 00038200
*                   !                       !             UAL¨        * 00038300
*                   !                       ¿Ý,KEYREQTYPE=RANGE       * 00038400
*                   !                             ,KEYRANGEEND        * 00038500
*                   !                                          =xkeyr * 00038600
*                   !                                          angeen * 00038700
*                   !                                          d¨¨¨   * 00038800
*                   !   ÐÝ,VERSCOMPARE=NO¨                            * 00038900
*                   !   ¿Ý,VERSCOMPARE=YES                            * 00039000
*                   !         ,VERSCOMP=xverscomp                     * 00039100
*                   !            Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨ * 00039200
*                   !   Ð ,BUFLIST=Ýxbuflist¨                         * 00039300
*                   !   !   ÐÝ,BUFADDRTYPE=VIRTUAL                    * 00039400
*                   !   !   !   ÐÝ,PAGEABLE=YES                       * 00039500
*                   !   !   !   !    Ý,BUFSTGKEY                      * 00039600
*                   !   !   !   !                =»xbufstgkey!CALLERS * 00039700
*                   !   !   !   !                _KEYº¨¨              * 00039800
*                   !   !   !   ¿Ý,PAGEABLE=NO¨                       * 00039900
*                   !   !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨     * 00040000
*                   !   !   !   ÐÝ,BUFADDRSIZE=31¨                    * 00040100
*                   !   !   !   ¿Ý,BUFADDRSIZE=64¨¨                   * 00040200
*                   !   !   ¿Ý,BUFADDRTYPE=REAL                       * 00040300
*                   !   !       ÐÝ,BUFADDRSIZE=31¨                    * 00040400
*                   !   !       ¿Ý,BUFADDRSIZE=64¨¨                   * 00040500
*                   !   !     ,BUFNUM=xbufnum                         * 00040600
*                   !   ¿ ,BUFFER=Ýxbuffer¨                           * 00040700
*                   !       ÐÝ,PAGEABLE=YES                           * 00040800
*                   !       !    Ý,BUFSTGKEY                          * 00040900
*                   !       !                =»xbufstgkey!CALLERS_KEY * 00041000
*                   !       !                º¨¨                      * 00041100
*                   !       ¿Ý,PAGEABLE=NO¨                           * 00041200
*                   !         ,BUFSIZE=xbufsize                       * 00041300
*                   Ô ,REQUEST=DELETE_LIST                            * 00041400
*                   !    Ý,DIRECTION=»HEADTOTAIL!TAILTOHEADº¨         * 00041500
*                   !   Ð ,LOCATOR=CURSOR                             * 00041600
*                   !   !     ,LISTNUM=xlistnum                       * 00041700
*                   !   !    Ý,KEYSCANTYPE=»ENTRY!SECONDARYº¨         * 00041800
*                   !   !   ÐÝ,AUTHCOMPARE=NO¨                        * 00041900
*                   !   !   ¿Ý,AUTHCOMPARE=YES                        * 00042000
*                   !   !         ,AUTHCOMP=xauthcomp                 * 00042100
*                   !   !            Ý,AUTHCOMPTYPE=»EQUAL!           * 00042200
*                   !   !                            LESSOREQUALº¨¨   * 00042300
*                   !   !   ÐÝ,KEYCOMPARE=NO¨                         * 00042400
*                   !   !   ¿Ý,KEYCOMPARE=YES                         * 00042500
*                   !   !         ,ENTRYKEY=xentrykey                 * 00042600
*                   !   !       ÐÝ,KEYREQTYPE=EQUAL¨                  * 00042700
*                   !   !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨            * 00042800
*                   !   !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨         * 00042900
*                   !   !       ¿Ý,KEYREQTYPE=RANGE                   * 00043000
*                   !   !             ,KEYRANGEEND                    * 00043100
*                   !   !                          =xkeyrangeend¨¨    * 00043200
*                   !   !   ÐÝ,SKEYCOMPARE=NO¨                        * 00043300
*                   !   !   ¿Ý,SKEYCOMPARE=YES                        * 00043400
*                   !   !         ,SECONDARYKEY                       * 00043500
*                   !   !                       =xsecondarykey        * 00043600
*                   !   !       ÐÝ,SKEYREQTYPE=EQUAL¨                 * 00043700
*                   !   !       ÔÝ,SKEYREQTYPE=LESSOREQUAL¨           * 00043800
*                   !   !       ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨        * 00043900
*                   !   !       ¿Ý,SKEYREQTYPE=RANGE                  * 00044000
*                   !   !             ,SKEYRANGEEND                   * 00044100
*                   !   !                           =xskeyrangeend¨¨  * 00044200
*                   !   Ô ,LOCATOR=ENTRYID                            * 00044300
*                   !   !     ,ENTRYID=xentryid                       * 00044400
*                   !   !    Ý,KEYSCANTYPE=»ENTRY!SECONDARYº¨         * 00044500
*                   !   !   ÐÝ,LISTCOMPARE=NO¨                        * 00044600
*                   !   !   ¿Ý,LISTCOMPARE=YES                        * 00044700
*                   !   !         ,LISTNUM=xlistnum                   * 00044800
*                   !   !       ÐÝ,AUTHCOMPARE=NO¨                    * 00044900
*                   !   !       ¿Ý,AUTHCOMPARE=YES                    * 00045000
*                   !   !             ,AUTHCOMP=xauthcomp             * 00045100
*                   !   !                Ý,AUTHCOMPTYPE=»EQUAL!       * 00045200
*                   !   !                                LESSOREQUALº * 00045300
*                   !   !                                ¨¨¨          * 00045400
*                   !   !   ÐÝ,KEYCOMPARE=NO¨                         * 00045500
*                   !   !   ¿Ý,KEYCOMPARE=YES                         * 00045600
*                   !   !         ,ENTRYKEY=xentrykey                 * 00045700
*                   !   !       ÐÝ,KEYREQTYPE=EQUAL¨                  * 00045800
*                   !   !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨            * 00045900
*                   !   !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨         * 00046000
*                   !   !       ¿Ý,KEYREQTYPE=RANGE                   * 00046100
*                   !   !             ,KEYRANGEEND                    * 00046200
*                   !   !                          =xkeyrangeend¨¨    * 00046300
*                   !   !   ÐÝ,SKEYCOMPARE=NO¨                        * 00046400
*                   !   !   ¿Ý,SKEYCOMPARE=YES                        * 00046500
*                   !   !         ,SECONDARYKEY                       * 00046600
*                   !   !                       =xsecondarykey        * 00046700
*                   !   !       ÐÝ,SKEYREQTYPE=EQUAL¨                 * 00046800
*                   !   !       ÔÝ,SKEYREQTYPE=LESSOREQUAL¨           * 00046900
*                   !   !       ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨        * 00047000
*                   !   !       ¿Ý,SKEYREQTYPE=RANGE                  * 00047100
*                   !   !             ,SKEYRANGEEND                   * 00047200
*                   !   !                           =xskeyrangeend¨¨  * 00047300
*                   !   Ô ,LOCATOR=ENTRYNAME                          * 00047400
*                   !   !     ,ENTRYNAME=xentryname                   * 00047500
*                   !   !   ÐÝ,LISTCOMPARE=NO¨                        * 00047600
*                   !   !   ¿Ý,LISTCOMPARE=YES                        * 00047700
*                   !   !         ,LISTNUM=xlistnum                   * 00047800
*                   !   !       ÐÝ,AUTHCOMPARE=NO¨                    * 00047900
*                   !   !       ¿Ý,AUTHCOMPARE=YES                    * 00048000
*                   !   !             ,AUTHCOMP=xauthcomp             * 00048100
*                   !   !                Ý,AUTHCOMPTYPE=»EQUAL!       * 00048200
*                   !   !                                LESSOREQUALº * 00048300
*                   !   !                                ¨¨¨          * 00048400
*                   !   Ô ,LOCATOR=UNKEYPOS                           * 00048500
*                   !   !     ,LISTNUM=xlistnum                       * 00048600
*                   !   !    Ý,KEYSCANTYPE=»ENTRY!SECONDARYº¨         * 00048700
*                   !   !   ÐÝ,AUTHCOMPARE=NO¨                        * 00048800
*                   !   !   ¿Ý,AUTHCOMPARE=YES                        * 00048900
*                   !   !         ,AUTHCOMP=xauthcomp                 * 00049000
*                   !   !            Ý,AUTHCOMPTYPE=»EQUAL!           * 00049100
*                   !   !                            LESSOREQUALº¨¨   * 00049200
*                   !   !   ÐÝ,KEYCOMPARE=NO¨                         * 00049300
*                   !   !   ¿Ý,KEYCOMPARE=YES                         * 00049400
*                   !   !         ,ENTRYKEY=xentrykey                 * 00049500
*                   !   !       ÐÝ,KEYREQTYPE=EQUAL¨                  * 00049600
*                   !   !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨            * 00049700
*                   !   !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨         * 00049800
*                   !   !       ¿Ý,KEYREQTYPE=RANGE                   * 00049900
*                   !   !             ,KEYRANGEEND                    * 00050000
*                   !   !                          =xkeyrangeend¨¨    * 00050100
*                   !   !   ÐÝ,SKEYCOMPARE=NO¨                        * 00050200
*                   !   !   ¿Ý,SKEYCOMPARE=YES                        * 00050300
*                   !   !         ,SECONDARYKEY                       * 00050400
*                   !   !                       =xsecondarykey        * 00050500
*                   !   !       ÐÝ,SKEYREQTYPE=EQUAL¨                 * 00050600
*                   !   !       ÔÝ,SKEYREQTYPE=LESSOREQUAL¨           * 00050700
*                   !   !       ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨        * 00050800
*                   !   !       ¿Ý,SKEYREQTYPE=RANGE                  * 00050900
*                   !   !             ,SKEYRANGEEND                   * 00051000
*                   !   !                           =xskeyrangeend¨¨  * 00051100
*                   !   ¿ ,LOCATOR=KEYPOS                             * 00051200
*                   !         ,LISTNUM=xlistnum                       * 00051300
*                   !        Ý,KEYSCANTYPE=»ENTRY!SECONDARYº¨         * 00051400
*                   !       ÐÝ,AUTHCOMPARE=NO¨                        * 00051500
*                   !       ¿Ý,AUTHCOMPARE=YES                        * 00051600
*                   !             ,AUTHCOMP=xauthcomp                 * 00051700
*                   !                Ý,AUTHCOMPTYPE=»EQUAL!           * 00051800
*                   !                                LESSOREQUALº¨¨   * 00051900
*                   !       ÐÝ,KEYTYPE=ENTRY                          * 00052000
*                   !       !     ,ENTRYKEY=xentrykey                 * 00052100
*                   !       !       ÐÝ,KEYREQTYPE=EQUAL¨              * 00052200
*                   !       !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨        * 00052300
*                   !       !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨     * 00052400
*                   !       !       ¿Ý,KEYREQTYPE=RANGE               * 00052500
*                   !       !             ,KEYRANGEEND                * 00052600
*                   !       !                          =xkeyrangeend¨ * 00052700
*                   !       !       ÐÝ,KEYCOMPARE=NO¨                 * 00052800
*                   !       !       ¿Ý,KEYCOMPARE=YES¨                * 00052900
*                   !       !       ÐÝ,SKEYCOMPARE=NO¨                * 00053000
*                   !       !       ¿Ý,SKEYCOMPARE=YES                * 00053100
*                   !       !             ,SECONDARYKEY               * 00053200
*                   !       !                           =xsecondaryke * 00053300
*                   !       !                           y             * 00053400
*                   !       !               ÐÝ,SKEYREQTYPE=EQUAL¨     * 00053500
*                   !       !               ÔÝ,SKEYREQTYPE=           * 00053600
*                   !       !               !              LESSOREQUA * 00053700
*                   !       !               !              L¨         * 00053800
*                   !       !               ÔÝ,SKEYREQTYPE=           * 00053900
*                   !       !               !              GREATERORE * 00054000
*                   !       !               !              QUAL¨      * 00054100
*                   !       !               ¿Ý,SKEYREQTYPE=RANGE      * 00054200
*                   !       !                     ,SKEYRANGEEND       * 00054300
*                   !       !                                   =xske * 00054400
*                   !       !                                   yrang * 00054500
*                   !       !                                   eend¨ * 00054600
*                   !       !                                   ¨¨    * 00054700
*                   !       ¿Ý,KEYTYPE=SECONDARY                      * 00054800
*                   !             ,SECONDARYKEY                       * 00054900
*                   !                           =xsecondarykey        * 00055000
*                   !               ÐÝ,SKEYREQTYPE=EQUAL¨             * 00055100
*                   !               ÔÝ,SKEYREQTYPE=LESSOREQUAL¨       * 00055200
*                   !               ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨    * 00055300
*                   !               ¿Ý,SKEYREQTYPE=RANGE              * 00055400
*                   !                     ,SKEYRANGEEND               * 00055500
*                   !                                   =xskeyrangeen * 00055600
*                   !                                   d¨            * 00055700
*                   !               ÐÝ,SKEYCOMPARE=NO¨                * 00055800
*                   !               ¿Ý,SKEYCOMPARE=YES¨               * 00055900
*                   !               ÐÝ,KEYCOMPARE=NO¨                 * 00056000
*                   !               ¿Ý,KEYCOMPARE=YES                 * 00056100
*                   !                     ,ENTRYKEY                   * 00056200
*                   !                               =xentrykey        * 00056300
*                   !                       ÐÝ,KEYREQTYPE=EQUAL¨      * 00056400
*                   !                       ÔÝ,KEYREQTYPE=            * 00056500
*                   !                       !             LESSOREQUAL * 00056600
*                   !                       !             ¨           * 00056700
*                   !                       ÔÝ,KEYREQTYPE=            * 00056800
*                   !                       !             GREATEROREQ * 00056900
*                   !                       !             UAL¨        * 00057000
*                   !                       ¿Ý,KEYREQTYPE=RANGE       * 00057100
*                   !                             ,KEYRANGEEND        * 00057200
*                   !                                          =xkeyr * 00057300
*                   !                                          angeen * 00057400
*                   !                                          d¨¨¨   * 00057500
*                   !   ÐÝ,VERSCOMPARE=NO¨                            * 00057600
*                   !   ¿Ý,VERSCOMPARE=YES                            * 00057700
*                   !         ,VERSCOMP=xverscomp                     * 00057800
*                   !            Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨ * 00057900
*                   Ô ,REQUEST=READ_MULT                              * 00058000
*                   !     ,TYPE=ENTDATA!ADJDATA!ECONTROLS             * 00058100
*                   !    Ý,ADJAREA=»xadjarea!NO_ADJAREAº¨             * 00058200
*                   !   ÐÝ,RESTOKEN                                   * 00058300
*                   !   !           =»xrestoken!NO_RESTOKENº          * 00058400
*                   !   ¿ ,EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨ * 00058500
*                   !   ÐÝ,LISTCOMPARE=NO¨                            * 00058600
*                   !   ¿Ý,LISTCOMPARE=YES                            * 00058700
*                   !         ,LISTNUM=xlistnum                       * 00058800
*                   !       ÐÝ,AUTHCOMPARE=NO¨                        * 00058900
*                   !       ¿Ý,AUTHCOMPARE=YES                        * 00059000
*                   !             ,AUTHCOMP=xauthcomp                 * 00059100
*                   !                Ý,AUTHCOMPTYPE=»EQUAL!           * 00059200
*                   !                                LESSOREQUALº¨¨¨  * 00059300
*                   !   ÐÝ,KEYCOMPARE=NO¨                             * 00059400
*                   !   ¿Ý,KEYCOMPARE=YES                             * 00059500
*                   !         ,ENTRYKEY=xentrykey                     * 00059600
*                   !       ÐÝ,KEYREQTYPE=EQUAL¨                      * 00059700
*                   !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨                * 00059800
*                   !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨             * 00059900
*                   !       ¿Ý,KEYREQTYPE=RANGE                       * 00060000
*                   !             ,KEYRANGEEND                        * 00060100
*                   !                          =xkeyrangeend¨¨        * 00060200
*                   !   ÐÝ,SKEYCOMPARE=NO¨                            * 00060300
*                   !   ¿Ý,SKEYCOMPARE=YES                            * 00060400
*                   !         ,SECONDARYKEY=xsecondarykey             * 00060500
*                   !       ÐÝ,SKEYREQTYPE=EQUAL¨                     * 00060600
*                   !       ÔÝ,SKEYREQTYPE=LESSOREQUAL¨               * 00060700
*                   !       ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨            * 00060800
*                   !       ¿Ý,SKEYREQTYPE=RANGE                      * 00060900
*                   !             ,SKEYRANGEEND                       * 00061000
*                   !                           =xskeyrangeend¨¨      * 00061100
*                   !   ÐÝ,VERSCOMPARE=NO¨                            * 00061200
*                   !   ¿Ý,VERSCOMPARE=YES                            * 00061300
*                   !         ,VERSCOMP=xverscomp                     * 00061400
*                   !            Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨ * 00061500
*                   !   Ð ,BUFLIST=Ýxbuflist¨                         * 00061600
*                   !   !   ÐÝ,BUFADDRTYPE=VIRTUAL                    * 00061700
*                   !   !   !   ÐÝ,PAGEABLE=YES                       * 00061800
*                   !   !   !   !    Ý,BUFSTGKEY                      * 00061900
*                   !   !   !   !                =»xbufstgkey!CALLERS * 00062000
*                   !   !   !   !                _KEYº¨¨              * 00062100
*                   !   !   !   ¿Ý,PAGEABLE=NO¨                       * 00062200
*                   !   !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨     * 00062300
*                   !   !   !   ÐÝ,BUFADDRSIZE=31¨                    * 00062400
*                   !   !   !   ¿Ý,BUFADDRSIZE=64¨¨                   * 00062500
*                   !   !   ¿Ý,BUFADDRTYPE=REAL                       * 00062600
*                   !   !       ÐÝ,BUFADDRSIZE=31¨                    * 00062700
*                   !   !       ¿Ý,BUFADDRSIZE=64¨¨                   * 00062800
*                   !   !     ,BUFNUM=xbufnum                         * 00062900
*                   !   ¿ ,BUFFER=Ýxbuffer¨                           * 00063000
*                   !       ÐÝ,PAGEABLE=YES                           * 00063100
*                   !       !    Ý,BUFSTGKEY                          * 00063200
*                   !       !                =»xbufstgkey!CALLERS_KEY * 00063300
*                   !       !                º¨¨                      * 00063400
*                   !       ¿Ý,PAGEABLE=NO¨                           * 00063500
*                   !         ,BUFSIZE=xbufsize                       * 00063600
*                   Ô ,REQUEST=DELETE_MULT                            * 00063700
*                   !   ÐÝ,RESTOKEN                                   * 00063800
*                   !   !           =»xrestoken!NO_RESTOKENº          * 00063900
*                   !   ¿ ,EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨ * 00064000
*                   !   ÐÝ,LISTCOMPARE=NO¨                            * 00064100
*                   !   ¿Ý,LISTCOMPARE=YES                            * 00064200
*                   !         ,LISTNUM=xlistnum                       * 00064300
*                   !       ÐÝ,AUTHCOMPARE=NO¨                        * 00064400
*                   !       ¿Ý,AUTHCOMPARE=YES                        * 00064500
*                   !             ,AUTHCOMP=xauthcomp                 * 00064600
*                   !                Ý,AUTHCOMPTYPE=»EQUAL!           * 00064700
*                   !                                LESSOREQUALº¨¨¨  * 00064800
*                   !   ÐÝ,KEYCOMPARE=NO¨                             * 00064900
*                   !   ¿Ý,KEYCOMPARE=YES                             * 00065000
*                   !         ,ENTRYKEY=xentrykey                     * 00065100
*                   !       ÐÝ,KEYREQTYPE=EQUAL¨                      * 00065200
*                   !       ÔÝ,KEYREQTYPE=LESSOREQUAL¨                * 00065300
*                   !       ÔÝ,KEYREQTYPE=GREATEROREQUAL¨             * 00065400
*                   !       ¿Ý,KEYREQTYPE=RANGE                       * 00065500
*                   !             ,KEYRANGEEND                        * 00065600
*                   !                          =xkeyrangeend¨¨        * 00065700
*                   !   ÐÝ,SKEYCOMPARE=NO¨                            * 00065800
*                   !   ¿Ý,SKEYCOMPARE=YES                            * 00065900
*                   !         ,SECONDARYKEY=xsecondarykey             * 00066000
*                   !       ÐÝ,SKEYREQTYPE=EQUAL¨                     * 00066100
*                   !       ÔÝ,SKEYREQTYPE=LESSOREQUAL¨               * 00066200
*                   !       ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨            * 00066300
*                   !       ¿Ý,SKEYREQTYPE=RANGE                      * 00066400
*                   !             ,SKEYRANGEEND                       * 00066500
*                   !                           =xskeyrangeend¨¨      * 00066600
*                   !   ÐÝ,VERSCOMPARE=NO¨                            * 00066700
*                   !   ¿Ý,VERSCOMPARE=YES                            * 00066800
*                   !         ,VERSCOMP=xverscomp                     * 00066900
*                   !            Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨ * 00067000
*                   Ô ,REQUEST=MOVE_ENTRYLIST                         * 00067100
*                   !    Ý,FIRSTELEM=»xfirstelem!1º¨                  * 00067200
*                   !     ,LASTELEM=xlastelem                         * 00067300
*                   !    Ý,MISCOMPARE=»CONTINUE!HALTº¨                * 00067400
*                   !   Ð ,LISTTYPE=NAMELIST                          * 00067500
*                   !   ¿ ,LISTTYPE=IDLIST                            * 00067600
*                   !       ÐÝ,KEYCOMPARE=NO¨                         * 00067700
*                   !       ¿Ý,KEYCOMPARE=YES                         * 00067800
*                   !             ,ENTRYKEY=xentrykey                 * 00067900
*                   !           ÐÝ,KEYREQTYPE=EQUAL¨                  * 00068000
*                   !           ÔÝ,KEYREQTYPE=LESSOREQUAL¨            * 00068100
*                   !           ÔÝ,KEYREQTYPE=GREATEROREQUAL¨         * 00068200
*                   !           ¿Ý,KEYREQTYPE=RANGE                   * 00068300
*                   !                 ,KEYRANGEEND                    * 00068400
*                   !                              =xkeyrangeend¨¨    * 00068500
*                   !       ÐÝ,SKEYCOMPARE=NO¨                        * 00068600
*                   !       ¿Ý,SKEYCOMPARE=YES                        * 00068700
*                   !             ,SECONDARYKEY                       * 00068800
*                   !                           =xsecondarykey        * 00068900
*                   !           ÐÝ,SKEYREQTYPE=EQUAL¨                 * 00069000
*                   !           ÔÝ,SKEYREQTYPE=LESSOREQUAL¨           * 00069100
*                   !           ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨        * 00069200
*                   !           ¿Ý,SKEYREQTYPE=RANGE                  * 00069300
*                   !                 ,SKEYRANGEEND                   * 00069400
*                   !                               =xskeyrangeend¨¨  * 00069500
*                   !       ÐÝ,MOVETOKEY=UNCHANGED¨                   * 00069600
*                   !       ÔÝ,MOVETOKEY=TARGETKEY¨                   * 00069700
*                   !       ¿Ý,MOVETOKEY=LISTKEY                      * 00069800
*                   !            Ý,LISTKEYINC=»xlistkeyinc!NOº¨       * 00069900
*                   !            Ý,LISTKEYAREA=»xlistkeyarea!NOº¨¨    * 00070000
*                   !       ÐÝ,MOVETOSKEY=UNCHANGED¨                  * 00070100
*                   !       ¿Ý,MOVETOSKEY=TARGETKEY¨                  * 00070200
*                   !   ÐÝ,LISTCOMPARE=NO¨                            * 00070300
*                   !   ¿Ý,LISTCOMPARE=YES                            * 00070400
*                   !         ,LISTNUM=xlistnum                       * 00070500
*                   !           ÐÝ,AUTHCOMPARE=NO¨                    * 00070600
*                   !           ¿Ý,AUTHCOMPARE=YES                    * 00070700
*                   !                 ,AUTHCOMP=xauthcomp             * 00070800
*                   !                    Ý,AUTHCOMPTYPE=»EQUAL!       * 00070900
*                   !                                    LESSOREQUALº * 00071000
*                   !                                    ¨¨¨          * 00071100
*                   !   ÐÝ,VERSCOMPARE=NO¨                            * 00071200
*                   !   ÔÝ,VERSCOMPARE=BYENTRY¨                       * 00071300
*                   !   ¿Ý,VERSCOMPARE=YES                            * 00071400
*                   !         ,VERSCOMP=xverscomp                     * 00071500
*                   !            Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨ * 00071600
*                   !   Ð ,BUFLIST=xbuflist                           * 00071700
*                   !   !   ÐÝ,BUFADDRTYPE=VIRTUAL                    * 00071800
*                   !   !   !   ÐÝ,PAGEABLE=YES                       * 00071900
*                   !   !   !   !    Ý,BUFSTGKEY                      * 00072000
*                   !   !   !   !                =»xbufstgkey!CALLERS * 00072100
*                   !   !   !   !                _KEYº¨¨              * 00072200
*                   !   !   !   ¿Ý,PAGEABLE=NO¨                       * 00072300
*                   !   !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨     * 00072400
*                   !   !   !   ÐÝ,BUFADDRSIZE=31¨                    * 00072500
*                   !   !   !   ¿Ý,BUFADDRSIZE=64¨¨                   * 00072600
*                   !   !   ¿Ý,BUFADDRTYPE=REAL                       * 00072700
*                   !   !       ÐÝ,BUFADDRSIZE=31¨                    * 00072800
*                   !   !       ¿Ý,BUFADDRSIZE=64¨¨                   * 00072900
*                   !   !     ,BUFNUM=xbufnum                         * 00073000
*                   !   !    Ý,BUFINCRNUM=»xbufincrnum!16º¨           * 00073100
*                   !   ¿ ,BUFFER=xbuffer                             * 00073200
*                   !       ÐÝ,PAGEABLE=YES                           * 00073300
*                   !       !    Ý,BUFSTGKEY                          * 00073400
*                   !       !                =»xbufstgkey!CALLERS_KEY * 00073500
*                   !       !                º¨¨                      * 00073600
*                   !       ¿Ý,PAGEABLE=NO¨                           * 00073700
*                   !         ,BUFSIZE=xbufsize                       * 00073800
*                   ¿ ,REQUEST=DELETE_ENTRYLIST                       * 00073900
*                        Ý,FIRSTELEM=»xfirstelem!1º¨                  * 00074000
*                         ,LASTELEM=xlastelem                         * 00074100
*                        Ý,MISCOMPARE=»CONTINUE!HALTº¨                * 00074200
*                       Ð ,LISTTYPE=NAMELIST                          * 00074300
*                       ¿ ,LISTTYPE=IDLIST                            * 00074400
*                           ÐÝ,KEYCOMPARE=NO¨                         * 00074500
*                           ¿Ý,KEYCOMPARE=YES                         * 00074600
*                                 ,ENTRYKEY=xentrykey                 * 00074700
*                               ÐÝ,KEYREQTYPE=EQUAL¨                  * 00074800
*                               ÔÝ,KEYREQTYPE=LESSOREQUAL¨            * 00074900
*                               ÔÝ,KEYREQTYPE=GREATEROREQUAL¨         * 00075000
*                               ¿Ý,KEYREQTYPE=RANGE                   * 00075100
*                                     ,KEYRANGEEND                    * 00075200
*                                                  =xkeyrangeend¨¨    * 00075300
*                           ÐÝ,SKEYCOMPARE=NO¨                        * 00075400
*                           ¿Ý,SKEYCOMPARE=YES                        * 00075500
*                                 ,SECONDARYKEY                       * 00075600
*                                               =xsecondarykey        * 00075700
*                               ÐÝ,SKEYREQTYPE=EQUAL¨                 * 00075800
*                               ÔÝ,SKEYREQTYPE=LESSOREQUAL¨           * 00075900
*                               ÔÝ,SKEYREQTYPE=GREATEROREQUAL¨        * 00076000
*                               ¿Ý,SKEYREQTYPE=RANGE                  * 00076100
*                                     ,SKEYRANGEEND                   * 00076200
*                                                   =xskeyrangeend¨¨  * 00076300
*                       ÐÝ,LISTCOMPARE=NO¨                            * 00076400
*                       ¿Ý,LISTCOMPARE=YES                            * 00076500
*                             ,LISTNUM=xlistnum                       * 00076600
*                               ÐÝ,AUTHCOMPARE=NO¨                    * 00076700
*                               ¿Ý,AUTHCOMPARE=YES                    * 00076800
*                                     ,AUTHCOMP=xauthcomp             * 00076900
*                                        Ý,AUTHCOMPTYPE=»EQUAL!       * 00077000
*                                                        LESSOREQUALº * 00077100
*                                                        ¨¨¨          * 00077200
*                       ÐÝ,VERSCOMPARE=NO¨                            * 00077300
*                       ÔÝ,VERSCOMPARE=BYENTRY¨                       * 00077400
*                       ¿Ý,VERSCOMPARE=YES                            * 00077500
*                             ,VERSCOMP=xverscomp                     * 00077600
*                                Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨ * 00077700
*                       Ð ,BUFLIST=xbuflist                           * 00077800
*                       !   ÐÝ,BUFADDRTYPE=VIRTUAL                    * 00077900
*                       !   !   ÐÝ,PAGEABLE=YES                       * 00078000
*                       !   !   !    Ý,BUFSTGKEY                      * 00078100
*                       !   !   !                =»xbufstgkey!CALLERS * 00078200
*                       !   !   !                _KEYº¨¨              * 00078300
*                       !   !   ¿Ý,PAGEABLE=NO¨                       * 00078400
*                       !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨     * 00078500
*                       !   !   ÐÝ,BUFADDRSIZE=31¨                    * 00078600
*                       !   !   ¿Ý,BUFADDRSIZE=64¨¨                   * 00078700
*                       !   ¿Ý,BUFADDRTYPE=REAL                       * 00078800
*                       !       ÐÝ,BUFADDRSIZE=31¨                    * 00078900
*                       !       ¿Ý,BUFADDRSIZE=64¨¨                   * 00079000
*                       !     ,BUFNUM=xbufnum                         * 00079100
*                       !    Ý,BUFINCRNUM=»xbufincrnum!16º¨           * 00079200
*                       ¿ ,BUFFER=xbuffer                             * 00079300
*                           ÐÝ,PAGEABLE=YES                           * 00079400
*                           !    Ý,BUFSTGKEY                          * 00079500
*                           !                =»xbufstgkey!CALLERS_KEY * 00079600
*                           !                º¨¨                      * 00079700
*                           ¿Ý,PAGEABLE=NO¨                           * 00079800
*                             ,BUFSIZE=xbufsize                       * 00079900
*                    Ý,LOCKINDEX=»xlockindex!NO_LOCKINDEXº            * 00080000
*                       Ð ,LOCKOPER=NOTHELD                           * 00080100
*                       ¿ ,LOCKOPER=HELDBY                            * 00080200
*                            Ý,LOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨¨     * 00080300
*                   ÐÝ,MODE=SYNCSUSPEND                               * 00080400
*                   !     ,ANSAREA=xansarea                           * 00080500
*                   !         ,ANSLEN=xanslen¨                        * 00080600
*                   ÔÝ,MODE=SYNCECB                                   * 00080700
*                   !     ,ANSAREA=xansarea                           * 00080800
*                   !         ,ANSLEN=xanslen                         * 00080900
*                   !     ,REQECB=xreqecb¨                            * 00081000
*                   ÔÝ,MODE=SYNCEXIT                                  * 00081100
*                   !     ,ANSAREA=xansarea                           * 00081200
*                   !         ,ANSLEN=xanslen                         * 00081300
*                   !    Ý,REQDATA=»xreqdata!NO_REQDATAº¨¨            * 00081400
*                   ÔÝ,MODE=SYNCTOKEN                                 * 00081500
*                   !     ,ANSAREA=xansarea                           * 00081600
*                   !         ,ANSLEN=xanslen                         * 00081700
*                   !     ,REQTOKEN=xreqtoken¨                        * 00081800
*                   ÔÝ,MODE=ASYNCECB                                  * 00081900
*                   !     ,ANSAREA=xansarea                           * 00082000
*                   !         ,ANSLEN=xanslen                         * 00082100
*                   !     ,REQECB=xreqecb¨                            * 00082200
*                   ÔÝ,MODE=ASYNCEXIT                                 * 00082300
*                   !     ,ANSAREA=xansarea                           * 00082400
*                   !         ,ANSLEN=xanslen                         * 00082500
*                   !    Ý,REQDATA=»xreqdata!NO_REQDATAº¨¨            * 00082600
*                   ÔÝ,MODE=ASYNCTOKEN                                * 00082700
*                   !     ,ANSAREA=xansarea                           * 00082800
*                   !         ,ANSLEN=xanslen                         * 00082900
*                   !     ,REQTOKEN=xreqtoken¨                        * 00083000
*                   ¿Ý,MODE=ASYNCNORESPONSE¨                          * 00083100
*                    Ý,RETCODE=xretcode¨                              * 00083200
*                    Ý,RSNCODE=xrsncode¨                              * 00083300
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00083400
*                   ÐÝ,MF=S¨                                          * 00083500
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00083600
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00083700
*                                                                     * 00083800
*                                                                     * 00083900
*      Where:                                                         * 00084000
*                                                                     * 00084100
*                                                                     * 00084200
*      Ýxlabel¨                                                       * 00084300
*          is an optional symbol, starting in column 1, that is the   * 00084400
*          name on the IXLLSTM macro invocation.  The name must       * 00084500
*          conform to the rules for an ordinary assembler language    * 00084600
*          symbol.                                                    * 00084700
*          DEFAULT: No name.                                          * 00084800
*                                                                     * 00084900
*                                                                     * 00085000
*                                                                     * 00085100
*                                                                     * 00085200
*      CONTOKEN=xcontoken                                             * 00085300
*          is the name (RS-type), or address in register (2)-(12), of * 00085400
*          a required 16 character input field that contains the      * 00085500
*          connect token returned by the IXLCONN service.  The        * 00085600
*          CONTOKEN uniquely identifies the user's connection to the  * 00085700
*          list structure.                                            * 00085800
*                                                                     * 00085900
*                                                                     * 00086000
*                                                                     * 00086100
*                                                                     * 00086200
*      ÝREQID=»xreqid!NO_REQIDº¨                                      * 00086300
*          is the name (RS-type), or address in register (2)-(12), of * 00086400
*          an optional 8 character input that contains a user-defined * 00086500
*          request identifier to be associated with the request.      * 00086600
*                                                                     * 00086700
*          Requests that have not been processed may be cancelled     * 00086800
*          with this request identifier using the IXLPURGE service.   * 00086900
*          Refer to the IXLPURGE service description for additional   * 00087000
*          information regarding the purging of outstanding requests. * 00087100
*                                                                     * 00087200
*          DEFAULT: NO_REQID                                          * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*                                                                     * 00087700
*      REQUEST=»READ_LIST!DELETE_LIST!READ_MULT!DELETE_MULT!MOVE_ENTR * 00087800
*          YLIST!DELETE_ENTRYLISTº                                    * 00087900
*          is a required keyword input that specifies the type of     * 00088000
*          operation to be performed on the structure.                * 00088100
*                                                                     * 00088200
*                                                                     * 00088300
*          REQUEST=READ_LIST                                          * 00088400
*              Requests that a list scan process be performed such    * 00088500
*              that entries meeting a specified set of criteria will  * 00088600
*              be read.  The entry data, adjunct data, list entry     * 00088700
*              controls, or any combination of these for the selected * 00088800
*              entries on the list may be read into the storage area  * 00088900
*              specified by BUFFER or the buffers specified by        * 00089000
*              BUFLIST.                                               * 00089100
*                                                                     * 00089200
*              When adjunct data is requested, the adjunct data for   * 00089300
*              the first entry processed is returned in the storage   * 00089400
*              area specified by ADJAREA.  The adjunct data for all   * 00089500
*              other entries is returned in the BUFFER area or the    * 00089600
*              BUFLIST buffers.                                       * 00089700
*                                                                     * 00089800
*              When list entry controls are requested, the entry      * 00089900
*              controls for the first entry processed is returned in  * 00090000
*              the answer area specified by ANSAREA.  The entry       * 00090100
*              controls for all other entries are returned in the     * 00090200
*              BUFFER area or the BUFLIST buffers.                    * 00090300
*                                                                     * 00090400
*              Processing begins with the entry designated by the     * 00090500
*              LOCATOR keyword and proceeds sequentially along the    * 00090600
*              list in the direction specified by DIRECTION until the * 00090700
*              head or tail of the list is reached, or if entry key   * 00090800
*              comparison or secondary key comparison is requested,   * 00090900
*              until the scan has progressed past all entries for     * 00091000
*              which those key comparisons could be successful.       * 00091100
*                                                                     * 00091200
*              Specifying AUTHCOMPARE=YES in conjunction with         * 00091300
*              AUTHCOMP causes list authority comparison for the      * 00091400
*              designated list to precede processing of any list      * 00091500
*              entries.  If the list authority verification fails,    * 00091600
*              the list authority, the list control information and   * 00091700
*              appropriate return and reason codes are provided in    * 00091800
*              the ANSAREA.                                           * 00091900
*                                                                     * 00092000
*              Specifying LOCKINDEX in conjunction with LOCKOPER      * 00092100
*              causes lock comparison to precede processing of any    * 00092200
*              list entries.  LOCKINDEX may optionally be specified   * 00092300
*              to indicate the index of the serialized list lock to   * 00092400
*              be compared within the lock table for the list         * 00092500
*              structure.  If the lock comparison fails, the lock     * 00092600
*              table entry and appropriate return and reason codes    * 00092700
*              are provided in the ANSAREA.  Note that the use of     * 00092800
*              serialized list functions may be useful to serialize   * 00092900
*              the list against other concurrent operations that      * 00093000
*              could otherwise execute in parallel with the READ_LIST * 00093100
*              scan, since these concurrent operations can cause      * 00093200
*              entries on the list to be skipped or scanned more than * 00093300
*              once during READ_LIST processing (see below).          * 00093400
*                                                                     * 00093500
*              Specifying LISTCOMPARE=YES in conjunction with LISTNUM * 00093600
*              causes list number comparison for the designated       * 00093700
*              starting list entry to precede processing of any list  * 00093800
*              entries.  If the designated list entry exists, but the * 00093900
*              list number verification fails, the list entry         * 00094000
*              controls and appropriate return and reason codes are   * 00094100
*              provided in the ANSAREA.                               * 00094200
*                                                                     * 00094300
*              Specifying VERSCOMPARE=YES in conjunction with         * 00094400
*              VERSCOMP may optionally be used as a filter to         * 00094500
*              restrict processing to those entries with a version    * 00094600
*              number as specified by VERSCOMPTYPE.                   * 00094700
*                                                                     * 00094800
*              Specifying KEYCOMPARE=YES in conjunction with ENTRYKEY * 00094900
*              causes key comparison to be performed as a filter, as  * 00095000
*              specified by KEYREQTYPE.                               * 00095100
*                                                                     * 00095200
*              Specifying SKEYCOMPARE=YES in conjunction with         * 00095300
*              SECONDARYKEY causes secondary key comparison to be     * 00095400
*              performed as a filter, as specified by SKEYREQTYPE.    * 00095500
*                                                                     * 00095600
*              DIRECTION may optionally be specified to indicate      * 00095700
*              direction of processing for traversing the list.       * 00095800
*                                                                     * 00095900
*              The absence of AUTHCOMPARE or LISTCOMPARE or           * 00096000
*              specifying AUTHCOMPARE=NO or LISTCOMPARE=NO indicates  * 00096100
*              no list authority or list number comparisons are to be * 00096200
*              performed before processing any list entries.  The     * 00096300
*              absence of LOCKINDEX indicates that no lock comparison * 00096400
*              is to be performed before processing any list entries. * 00096500
*                                                                     * 00096600
*              The absence of VERSCOMPARE, KEYCOMPARE, or SKEYCOMPARE * 00096700
*              or specifying VERSCOMPARE=NO, KEYCOMPARE=NO, or        * 00096800
*              SKEYCOMPARE=NO indicates no version number, entry key  * 00096900
*              value, or secondary key value comparisons are to be    * 00097000
*              performed as a filter when selecting entries to be     * 00097100
*              processed.                                             * 00097200
*                                                                     * 00097300
*              In order for any list entries to be processed, the     * 00097400
*              list number comparison, the list authority comparison  * 00097500
*              and the lock operation, if requested, must succeed.    * 00097600
*                                                                     * 00097700
*              In order for a particular list entry to be read, the   * 00097800
*              version number comparison, the entry key comparison,   * 00097900
*              and the secondary key comparison, if requested, must   * 00098000
*              succeed. Otherwise, no processing is performed for the * 00098100
*              current entry and processing continues with the next   * 00098200
*              entry to be considered.                                * 00098300
*                                                                     * 00098400
*              When the request completes successfully the number of  * 00098500
*              entries for which entry data, adjunct data, and/or     * 00098600
*              list entry controls was read is returned in the answer * 00098700
*              area specified by ANSAREA.                             * 00098800
*                                                                     * 00098900
*              A READ_LIST request may complete prematurely due to    * 00099000
*              exhaustion of the storage specified by BUFFER or       * 00099100
*              BUFLIST, or if coupling facility model dependent       * 00099200
*              timeout criteria is exceeded.  In this event           * 00099300
*              appropriate return and reason codes are provided, and  * 00099400
*              the number of entries for which data has been returned * 00099500
*              on the current request is provided in ANSAREA.  The    * 00099600
*              list entry controls for the next appropriate entry in  * 00099700
*              the list sequence to be processed is returned in       * 00099800
*              ANSAREA.  These list entry controls may be used to     * 00099900
*              designate the entry with which to resume processing on * 00100000
*              a subsequent, resuming READ_LIST request, so as to     * 00100100
*              continue the overall scan process for the list.  Note, * 00100200
*              however, that the disposition of this list entry may   * 00100300
*              change as a result of another operation (for example,  * 00100400
*              the entry may be deleted or moved to another position  * 00100500
*              on the same list or a different list) after the        * 00100600
*              completion of the first READ_LIST request and before   * 00100700
*              the invocation of the resuming READ_LIST request.      * 00100800
*              This may cause the resuming READ_LIST request to fail, * 00100900
*              skip entries, or reprocess some entries that have      * 00101000
*              already been processed (see below). If a resuming      * 00101100
*              READ_LIST request fails with an "entry not found"      * 00101200
*              condition, the list may not yet have been completely   * 00101300
*              scanned and the scan should be restarted from the      * 00101400
*              beginning.                                             * 00101500
*                                                                     * 00101600
*              If other concurrent operations, such as other commands * 00101700
*              which can create entries, delete entries, or move      * 00101800
*              entries to a different position on the same list or a  * 00101900
*              different list, are permitted to execute while         * 00102000
*              READ_LIST processing is ongoing, this can result in    * 00102100
*              anomalous behavior for the overall READ_LIST scan      * 00102200
*              process. Entries on the list may be skipped or         * 00102300
*              reprocessed more than once, and this may result in     * 00102400
*              entries that should have been read being "missed" by   * 00102500
*              the scan, or may result in the same entry being read   * 00102600
*              multiple times.  For example:                          * 00102700
*                                                                     * 00102800
*                                                                     * 00102900
*              o   The list is being scanned in a left-to-right       * 00103000
*                  direction by a READ_LIST command, and a            * 00103100
*                  concurrently-executing command moves an entry on   * 00103200
*                  the list to the right.  If the moved entry was     * 00103300
*                  being processed by the READ_LIST command at the    * 00103400
*                  time it was moved, the intervening entries between * 00103500
*                  the moved entry's old position and its new         * 00103600
*                  position on the list may be skipped by the scan    * 00103700
*                  process.                                           * 00103800
*                                                                     * 00103900
*              o   The list is being scanned in a left-to-right       * 00104000
*                  direction by a READ_LIST command, and a            * 00104100
*                  concurrently executing command moves an entry on   * 00104200
*                  the list to the left.  If the moved entry was      * 00104300
*                  being processed by the READ_LIST command at the    * 00104400
*                  time it was moved, the intervening entries between * 00104500
*                  the moved entry's old position and its new         * 00104600
*                  position on the list may be reprocessed by the     * 00104700
*                  scan process, and if the entries pass the          * 00104800
*                  requested filtering criteria, may be read in       * 00104900
*                  again.                                             * 00105000
*                                                                     * 00105100
*              o   An entry that matches the READ_LIST request's      * 00105200
*                  filtering criteria is created on, or moved into,   * 00105300
*                  the list that is being scanned.  Depending on      * 00105400
*                  whether the entry is placed onto the list "ahead   * 00105500
*                  of" or "behind" the ongoing scan process, the      * 00105600
*                  entry may or may not be read.                      * 00105700
*                                                                     * 00105800
*              o   Other examples are also possible.                  * 00105900
*                                                                     * 00106000
*                                                                     * 00106100
*              Also note that such anomalies can occur both within    * 00106200
*              the processing of a single READ_LIST request, and in   * 00106300
*              the gap between the completion of one READ_LIST        * 00106400
*              request and the initiation of a subsequent, resuming   * 00106500
*              one.                                                   * 00106600
*                                                                     * 00106700
*              In order to avoid such anomalies, consider making use  * 00106800
*              of serialized list functions (LOCKINDEX and LOCKOPER)  * 00106900
*              to lock out concurrent operations for the duration of  * 00107000
*              the entire READ_LIST scan process, from before         * 00107100
*              initiating the first request, through any premature    * 00107200
*              completion and redrive processing that may occur,      * 00107300
*              until the scan process indicates that the list has     * 00107400
*              been processed to completion.                          * 00107500
*                                                                     * 00107600
*              Resumed requests are processed identically to          * 00107700
*              non-resumed requests and must meet the same interface  * 00107800
*              requirements as non-resumed requests.  For example,    * 00107900
*              BUFFER area and BUFLIST buffer boundary and length     * 00108000
*              requirements are unchanged.  Resumed requests may in   * 00108100
*              turn experience premature completion.                  * 00108200
*                                                                     * 00108300
*              When TYPE=ADJDATA is specified, ADJAREA is also        * 00108400
*              required.                                              * 00108500
*                                                                     * 00108600
*                                                                     * 00108700
*                                                                     * 00108800
*              TYPE=ENTDATA!ADJDATA!ECONTROLS                         * 00108900
*                  is a required group of keyword input(s) that       * 00109000
*                  specifies the type of information to be read.  Any * 00109100
*                  combination of the three values may be specified.  * 00109200
*                                                                     * 00109300
*                                                                     * 00109400
*                                                                     * 00109500
*                  TYPE=ENTDATA                                       * 00109600
*                      Indicates that the entry data is to be read.   * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*                  TYPE=ADJDATA                                       * 00110000
*                      Indicates that the adjunct data is to be read. * 00110100
*                      ADJDATA is only functional for structures that * 00110200
*                      support adjunct data.                          * 00110300
*                                                                     * 00110400
*                      For structures that are allocated with         * 00110500
*                      secondary keys, the first 32 bytes of the      * 00110600
*                      adjunct data will contain the secondary key of * 00110700
*                      the entry.                                     * 00110800
*                                                                     * 00110900
*                  TYPE=ECONTROLS                                     * 00111000
*                      Indicates that list entry control information  * 00111100
*                      is to be read.                                 * 00111200
*                                                                     * 00111300
*                      For structures allocated with secondary keys,  * 00111400
*                      the secondary key is not read by               * 00111500
*                      TYPE(ECONTROLS). The secondary key is read by  * 00111600
*                      TYPE(ADJDATA).                                 * 00111700
*                                                                     * 00111800
*                                                                     * 00111900
*                                                                     * 00112000
*                                                                     * 00112100
*                                                                     * 00112200
*                                                                     * 00112300
*              ÝADJAREA=»xadjarea!NO_ADJAREAº¨                        * 00112400
*                  is an optional input.  It is the name (RS-type),   * 00112500
*                  or address in register (2)-(12), of a 64-byte area * 00112600
*                  in virtual storage where entry adjunct data for    * 00112700
*                  the first entry is to be read.                     * 00112800
*                                                                     * 00112900
*                  If the structure was allocated to use secondary    * 00113000
*                  keys, the first 32 bytes of ADJDATA will contain   * 00113100
*                  the secondary key of the entry.                    * 00113200
*                  DEFAULT: NO_ADJAREA                                * 00113300
*                                                                     * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*                                                                     * 00113700
*              ÝDIRECTION=»HEADTOTAIL!TAILTOHEADº¨                    * 00113800
*                  is an optional keyword input that indicates the    * 00113900
*                  direction of processing for traversing the given   * 00114000
*                  list.                                              * 00114100
*                  DEFAULT: HEADTOTAIL                                * 00114200
*                                                                     * 00114300
*                                                                     * 00114400
*                  DIRECTION=HEADTOTAIL                               * 00114500
*                      Indicates that processing is to begin at the   * 00114600
*                      designated entry and proceed toward the tail   * 00114700
*                      of the list.                                   * 00114800
*                                                                     * 00114900
*                  DIRECTION=TAILTOHEAD                               * 00115000
*                      Indicates that processing is to begin at the   * 00115100
*                      designated entry and proceed toward the head   * 00115200
*                      of the list.                                   * 00115300
*                      DEFAULT: HEADTOTAIL                            * 00115400
*                                                                     * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*                                                                     * 00115900
*                                                                     * 00116000
*              LOCATOR=»CURSOR!ENTRYID!ENTRYNAME!UNKEYPOS!KEYPOSº     * 00116100
*                  is a required keyword input that specifies the     * 00116200
*                  location mechanism to be used to locate the first  * 00116300
*                  list entry to be processed.                        * 00116400
*                                                                     * 00116500
*                                                                     * 00116600
*                  LOCATOR=CURSOR                                     * 00116700
*                      Indicates that the list cursor is to be used   * 00116800
*                      to designate the starting list entry for the   * 00116900
*                      request.                                       * 00117000
*                                                                     * 00117100
*                                                                     * 00117200
*                      LISTNUM=xlistnum                               * 00117300
*                          is the name (RS-type), or address in       * 00117400
*                          register (2)-(12), of a required fullword  * 00117500
*                          input that designates the number of the    * 00117600
*                          list on which the starting list entry      * 00117700
*                          resides.                                   * 00117800
*                                                                     * 00117900
*                                                                     * 00118000
*                                                                     * 00118100
*                                                                     * 00118200
*                      ÝKEYSCANTYPE=»ENTRY!SECONDARYº¨                * 00118300
*                          is an optional keyword input that          * 00118400
*                          indicates which key ordering               * 00118500
*                          (Entry/secondary) is to be used to scan    * 00118600
*                          for entries on the list.                   * 00118700
*                          DEFAULT: ENTRY                             * 00118800
*                                                                     * 00118900
*                                                                     * 00119000
*                          KEYSCANTYPE=ENTRY                          * 00119100
*                              indicates that entry key ordering will * 00119200
*                              be used for scanning the list.         * 00119300
*                                                                     * 00119400
*                          KEYSCANTYPE=SECONDARY                      * 00119500
*                              indicates that secondary key ordering  * 00119600
*                              will be used for scanning the list.    * 00119700
*                                                                     * 00119800
*                              KEYSCANTYPE=SECONDARY is only valid    * 00119900
*                              when the structure is allocated in a   * 00120000
*                              CFLEVEL=9 or higher CF.                * 00120100
*                                                                     * 00120200
*                                                                     * 00120300
*                                                                     * 00120400
*                                                                     * 00120500
*                                                                     * 00120600
*                                                                     * 00120700
*                      ÝAUTHCOMPARE=»NO!YESº                          * 00120800
*                          is an optional keyword input which         * 00120900
*                          determines whether the list authority      * 00121000
*                          comparison is to be used to determine if   * 00121100
*                          entries on the list should be processed.   * 00121200
*                                                                     * 00121300
*                          AUTHCOMPARE is only meaningful for list    * 00121400
*                          structures allocated on CFLEVEL=1 or       * 00121500
*                          higher CF.                                 * 00121600
*                          DEFAULT: NO                                * 00121700
*                                                                     * 00121800
*                                                                     * 00121900
*                          ÝAUTHCOMPARE=NO¨                           * 00122000
*                              indicates no list authority comparison * 00122100
*                              is to be performed before processing   * 00122200
*                              any entries on the list.               * 00122300
*                                                                     * 00122400
*                          ÝAUTHCOMPARE=YES                           * 00122500
*                              indicates that list authority          * 00122600
*                              comparison should precede processing   * 00122700
*                              of any entries on the list.            * 00122800
*                                                                     * 00122900
*                                                                     * 00123000
*                              AUTHCOMP=xauthcomp                     * 00123100
*                                  is the name (RS-type), or address  * 00123200
*                                  in register (2)-(12), of a         * 00123300
*                                  required 16 character input which  * 00123400
*                                  specifies a value to be compared   * 00123500
*                                  to the list authority value for    * 00123600
*                                  the designated list.  If the       * 00123700
*                                  condition specified by             * 00123800
*                                  AUTHCOMPTYPE is not met then the   * 00123900
*                                  IXLLSTM operation is terminated,   * 00124000
*                                  and appropriate return and reason  * 00124100
*                                  codes are provided.                * 00124200
*                                                                     * 00124300
*                                                                     * 00124400
*                                  ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨ * 00124500
*                                      ¨                              * 00124600
*                                      is an optional keyword input   * 00124700
*                                      which specifies how the list   * 00124800
*                                      authority comparison is to be  * 00124900
*                                      performed.                     * 00125000
*                                                                     * 00125100
*                                      DEFAULT: EQUAL                 * 00125200
*                                                                     * 00125300
*                                                                     * 00125400
*                                      AUTHCOMPTYPE=EQUAL             * 00125500
*                                          The list authority for the * 00125600
*                                          list specified by LISTNUM  * 00125700
*                                          must be equal to the value * 00125800
*                                          specified for AUTHCOMP.    * 00125900
*                                                                     * 00126000
*                                                                     * 00126100
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00126200
*                                          The list authority for the * 00126300
*                                          list specified by LISTNUM  * 00126400
*                                          must be less than or equal * 00126500
*                                          to the value specified for * 00126600
*                                          AUTHCOMP.                  * 00126700
*                                                                     * 00126800
*                                                                     * 00126900
*                                                                     * 00127000
*                                                                     * 00127100
*                                                                     * 00127200
*                                                                     * 00127300
*                                                                     * 00127400
*                                                                     * 00127500
*                                                                     * 00127600
*                                                                     * 00127700
*                                                                     * 00127800
*                                                                     * 00127900
*                      ÝKEYCOMPARE=»NO!YESº                           * 00128000
*                          is an optional keyword input that          * 00128100
*                          determines whether the key value of an     * 00128200
*                          existing keyed list entry is to be         * 00128300
*                          compared to determine if this entry should * 00128400
*                          be selected for processing.  KEYCOMPARE is * 00128500
*                          only meaningful for list structures        * 00128600
*                          allocated on CFLEVEL=1 or higher CF.       * 00128700
*                          DEFAULT: NO                                * 00128800
*                                                                     * 00128900
*                                                                     * 00129000
*                          ÝKEYCOMPARE=NO¨                            * 00129100
*                              Indicates that no entry key comparison * 00129200
*                              will be performed to determine if this * 00129300
*                              entry should be processed.             * 00129400
*                                                                     * 00129500
*                          ÝKEYCOMPARE=YES                            * 00129600
*                              Indicates that entry key comparison    * 00129700
*                              will be performed based on the         * 00129800
*                              KEYREQTYPE specified to determine if   * 00129900
*                              this entry is selectable for           * 00130000
*                              processing.                            * 00130100
*                                                                     * 00130200
*                              KEYCOMPARE=YES is ignored if the       * 00130300
*                              target structure does not support      * 00130400
*                              keyed entries.                         * 00130500
*                                                                     * 00130600
*                                                                     * 00130700
*                              ENTRYKEY=xentrykey                     * 00130800
*                                  is the name (RS-type), or address  * 00130900
*                                  in register (2)-(12), of a         * 00131000
*                                  required 16 character input that   * 00131100
*                                  specifies the key to be used to    * 00131200
*                                  compare to the entry key of the    * 00131300
*                                  list entry.  If the condition      * 00131400
*                                  specified by KEYREQTYPE is not met * 00131500
*                                  for the current list entry then no * 00131600
*                                  processing is performed for the    * 00131700
*                                  current entry, and processing      * 00131800
*                                  continues with the next entry to   * 00131900
*                                  be considered.                     * 00132000
*                                                                     * 00132100
*                                                                     * 00132200
*                                                                     * 00132300
*                                                                     * 00132400
*                              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATER * 00132500
*                                  OREQUAL!RANGEº¨¨                   * 00132600
*                                  is an optional keyword input which * 00132700
*                                  specifies how entry key comparison * 00132800
*                                  is to be performed on an existing  * 00132900
*                                  keyed list entry to determine if   * 00133000
*                                  the entry is selectable for        * 00133100
*                                  processing.                        * 00133200
*                                  DEFAULT: EQUAL                     * 00133300
*                                                                     * 00133400
*                                                                     * 00133500
*                                  ÝKEYREQTYPE=EQUAL¨                 * 00133600
*                                      a list entry must have an      * 00133700
*                                      entry key equal to the value   * 00133800
*                                      specified by ENTRYKEY.         * 00133900
*                                                                     * 00134000
*                                  ÝKEYREQTYPE=LESSOREQUAL¨           * 00134100
*                                      a list entry must have an      * 00134200
*                                      entry key less than or equal   * 00134300
*                                      to the value specified by      * 00134400
*                                      ENTRYKEY.                      * 00134500
*                                                                     * 00134600
*                                  ÝKEYREQTYPE=GREATEROREQUAL¨        * 00134700
*                                      a list entry must have an      * 00134800
*                                      entry key greater than or      * 00134900
*                                      equal to the value specified   * 00135000
*                                      by ENTRYKEY.                   * 00135100
*                                                                     * 00135200
*                                  ÝKEYREQTYPE=RANGE                  * 00135300
*                                      a list entry must have an      * 00135400
*                                      entry key within a specified   * 00135500
*                                      range of values. The ENTRYKEY  * 00135600
*                                      specified will be used as the  * 00135700
*                                      beginning of the range of key  * 00135800
*                                      values that will be compared   * 00135900
*                                      with the existing entry key.   * 00136000
*                                      KEYRANGEEND will be used as    * 00136100
*                                      the ending value.  A list      * 00136200
*                                      entry must have an entry key   * 00136300
*                                      value within the specified     * 00136400
*                                      entry key range, inclusive,    * 00136500
*                                      for it to be selectable.       * 00136600
*                                                                     * 00136700
*                                      KEYREQTYPE=RANGE is only valid * 00136800
*                                      when the structure is          * 00136900
*                                      allocated in a CFLEVEL=9 or    * 00137000
*                                      higher CF.                     * 00137100
*                                                                     * 00137200
*                                                                     * 00137300
*                                      KEYRANGEEND=xkeyrangeend¨¨     * 00137400
*                                          is the name (RS-type), or  * 00137500
*                                          address in register        * 00137600
*                                          (2)-(12), of a required 16 * 00137700
*                                          character input which      * 00137800
*                                          specifies the ending value * 00137900
*                                          for the range of keys to   * 00138000
*                                          be compared to the entry   * 00138100
*                                          key of the list entry.     * 00138200
*                                                                     * 00138300
*                                                                     * 00138400
*                                                                     * 00138500
*                                                                     * 00138600
*                                                                     * 00138700
*                                                                     * 00138800
*                                                                     * 00138900
*                                                                     * 00139000
*                                                                     * 00139100
*                                                                     * 00139200
*                                                                     * 00139300
*                                                                     * 00139400
*                      ÝSKEYCOMPARE=»NO!YESº                          * 00139500
*                          is an optional keyword input that          * 00139600
*                          determines whether the secondary key value * 00139700
*                          of an existing list entry is to be         * 00139800
*                          compared to determine if this entry should * 00139900
*                          be selected for processing.                * 00140000
*                          DEFAULT: NO                                * 00140100
*                                                                     * 00140200
*                                                                     * 00140300
*                          ÝSKEYCOMPARE=NO¨                           * 00140400
*                              Indicates that no secondary key        * 00140500
*                              comparison will be performed to        * 00140600
*                              determine if this entry should be      * 00140700
*                              processed.                             * 00140800
*                                                                     * 00140900
*                          ÝSKEYCOMPARE=YES                           * 00141000
*                              Indicates that secondary key           * 00141100
*                              comparison will be performed based on  * 00141200
*                              the SKEYREQTYPE specified to determine * 00141300
*                              if this entry is selectable for        * 00141400
*                              processing.                            * 00141500
*                                                                     * 00141600
*                              SKEYCOMPARE=YES is ignored if the      * 00141700
*                              target structure was not allocated     * 00141800
*                              with secondary keys.                   * 00141900
*                                                                     * 00142000
*                                                                     * 00142100
*                              SECONDARYKEY=xsecondarykey             * 00142200
*                                  is the name (RS-type), or address  * 00142300
*                                  in register (2)-(12), of a         * 00142400
*                                  required 32 character input that   * 00142500
*                                  specifies the secondary key value  * 00142600
*                                  to be used to compare to the       * 00142700
*                                  secondary key of the list entry.   * 00142800
*                                  If the condition specified by      * 00142900
*                                  SKEYREQTYPE is not met for the     * 00143000
*                                  current list entry then no         * 00143100
*                                  processing is performed for the    * 00143200
*                                  current entry, and processing      * 00143300
*                                  continues with the next entry to   * 00143400
*                                  be considered.                     * 00143500
*                                                                     * 00143600
*                                                                     * 00143700
*                                                                     * 00143800
*                                                                     * 00143900
*                              ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATE * 00144000
*                                  ROREQUAL!RANGEº¨¨                  * 00144100
*                                  is an optional keyword input which * 00144200
*                                  specifies how secondary key        * 00144300
*                                  comparison is to be performed on   * 00144400
*                                  an existing keyed list entry to    * 00144500
*                                  determine if the entry is          * 00144600
*                                  selectable for processing.         * 00144700
*                                  DEFAULT: EQUAL                     * 00144800
*                                                                     * 00144900
*                                                                     * 00145000
*                                  ÝSKEYREQTYPE=EQUAL¨                * 00145100
*                                      a list entry must have a       * 00145200
*                                      secondary key equal to the     * 00145300
*                                      value specified by             * 00145400
*                                      SECONDARYKEY.                  * 00145500
*                                                                     * 00145600
*                                  ÝSKEYREQTYPE=LESSOREQUAL¨          * 00145700
*                                      a list entry must have a       * 00145800
*                                      secondary key less than or     * 00145900
*                                      equal to the value specified   * 00146000
*                                      by SECONDARYKEY.               * 00146100
*                                                                     * 00146200
*                                  ÝSKEYREQTYPE=GREATEROREQUAL¨       * 00146300
*                                      a list entry must have a       * 00146400
*                                      secondary key greater than or  * 00146500
*                                      equal to the value specified   * 00146600
*                                      by SECONDARYKEY.               * 00146700
*                                                                     * 00146800
*                                  ÝSKEYREQTYPE=RANGE                 * 00146900
*                                      a list entry must have a       * 00147000
*                                      secondary key within a         * 00147100
*                                      specified range of values. The * 00147200
*                                      SECONDARYKEY specified will be * 00147300
*                                      used as the beginning of the   * 00147400
*                                      range of secondary key values  * 00147500
*                                      that will be compared with the * 00147600
*                                      existing secondary key.        * 00147700
*                                      SKEYRANGEEND will be used as   * 00147800
*                                      the ending value.  A list      * 00147900
*                                      entry must have a secondary    * 00148000
*                                      key value within the specified * 00148100
*                                      secondary key range,           * 00148200
*                                      inclusive, for it to be        * 00148300
*                                      selectable.                    * 00148400
*                                                                     * 00148500
*                                                                     * 00148600
*                                      SKEYRANGEEND=xskeyrangeend¨¨   * 00148700
*                                                                     * 00148800
*                                          is the name (RS-type), or  * 00148900
*                                          address in register        * 00149000
*                                          (2)-(12), of a required 32 * 00149100
*                                          character input which      * 00149200
*                                          specifies the ending value * 00149300
*                                          for the range of secondary * 00149400
*                                          keys to be compared to the * 00149500
*                                          secondary key of the list  * 00149600
*                                          entry.                     * 00149700
*                                                                     * 00149800
*                                                                     * 00149900
*                                                                     * 00150000
*                                                                     * 00150100
*                                                                     * 00150200
*                                                                     * 00150300
*                                                                     * 00150400
*                                                                     * 00150500
*                                                                     * 00150600
*                                                                     * 00150700
*                                                                     * 00150800
*                  LOCATOR=ENTRYID                                    * 00150900
*                      Indicates that the EntryID should be used to   * 00151000
*                      designate the entry to be used as the starting * 00151100
*                      entry for the request.  EntryIDs may be either * 00151200
*                      assigned or provided by the user.  User        * 00151300
*                      provided EntryIDs must be specified if         * 00151400
*                      ENTRYIDTYPE=USER was specified on the IXLCONN  * 00151500
*                      request.                                       * 00151600
*                                                                     * 00151700
*                                                                     * 00151800
*                      ENTRYID=xentryid                               * 00151900
*                          is the name (RS-type), or address in       * 00152000
*                          register (2)-(12), of a required 12        * 00152100
*                          character input specifying the list entry  * 00152200
*                          id of the entry to be used as the starting * 00152300
*                          point of the request.                      * 00152400
*                                                                     * 00152500
*                                                                     * 00152600
*                                                                     * 00152700
*                                                                     * 00152800
*                      ÝKEYSCANTYPE=»ENTRY!SECONDARYº¨                * 00152900
*                          is an optional keyword input that          * 00153000
*                          designates which key ordering              * 00153100
*                          (Entry/Secondary) is to be used to scan    * 00153200
*                          entries on the list.  This can only        * 00153300
*                          specified for structures that support      * 00153400
*                          keyed entries.                             * 00153500
*                          DEFAULT: ENTRY                             * 00153600
*                                                                     * 00153700
*                                                                     * 00153800
*                          KEYSCANTYPE=ENTRY                          * 00153900
*                              indicates that entry key ordering will * 00154000
*                              be used for scanning the list.         * 00154100
*                                                                     * 00154200
*                          KEYSCANTYPE=SECONDARY                      * 00154300
*                              indicates that secondary key ordering  * 00154400
*                              will be used for scanning the list.    * 00154500
*                                                                     * 00154600
*                              KEYSCANTYPE=SECONDARY is only valid    * 00154700
*                              when the structure is allocated in a   * 00154800
*                              CFLEVEL=9 or higher CF.                * 00154900
*                                                                     * 00155000
*                                                                     * 00155100
*                                                                     * 00155200
*                                                                     * 00155300
*                                                                     * 00155400
*                                                                     * 00155500
*                      ÝLISTCOMPARE=»NO!YESº                          * 00155600
*                          is an optional keyword input which         * 00155700
*                          determines whether the list number         * 00155800
*                          comparison is to be performed to determine * 00155900
*                          if entries should be processed.            * 00156000
*                          DEFAULT: NO                                * 00156100
*                                                                     * 00156200
*                                                                     * 00156300
*                          ÝLISTCOMPARE=NO¨                           * 00156400
*                              indicates no list number comparison    * 00156500
*                              should precede processing of any list  * 00156600
*                              entries.                               * 00156700
*                                                                     * 00156800
*                          ÝLISTCOMPARE=YES                           * 00156900
*                              indicates that list number comparison  * 00157000
*                              should precede processing of any list  * 00157100
*                              entries.                               * 00157200
*                                                                     * 00157300
*                                                                     * 00157400
*                              LISTNUM=xlistnum                       * 00157500
*                                  is the name (RS-type), or address  * 00157600
*                                  in register (2)-(12), of a         * 00157700
*                                  required fullword input that       * 00157800
*                                  designates the number of the list  * 00157900
*                                  on which the entries to be         * 00158000
*                                  processed reside. If the list      * 00158100
*                                  comparison fails then the IXLLSTM  * 00158200
*                                  operation is terminated, and the   * 00158300
*                                  list entry controls along with the * 00158400
*                                  appropriate return and reason      * 00158500
*                                  codes are provided.                * 00158600
*                                                                     * 00158700
*                                                                     * 00158800
*                                                                     * 00158900
*                                                                     * 00159000
*                              ÝAUTHCOMPARE=»NO!YESº                  * 00159100
*                                  is an optional keyword input which * 00159200
*                                  determines whether the list        * 00159300
*                                  authority comparison is to be used * 00159400
*                                  to determine if entries on the     * 00159500
*                                  list should be processed.          * 00159600
*                                                                     * 00159700
*                                  AUTHCOMPARE is only meaningful for * 00159800
*                                  list structures allocated on       * 00159900
*                                  CFLEVEL=1 or higher CF.            * 00160000
*                                  DEFAULT: NO                        * 00160100
*                                                                     * 00160200
*                                                                     * 00160300
*                                  ÝAUTHCOMPARE=NO¨                   * 00160400
*                                      indicates no list authority    * 00160500
*                                      comparison is to be performed  * 00160600
*                                      before processing any entries  * 00160700
*                                      on the list.                   * 00160800
*                                                                     * 00160900
*                                  ÝAUTHCOMPARE=YES                   * 00161000
*                                      indicates that list authority  * 00161100
*                                      comparison should precede      * 00161200
*                                      processing of any entries on   * 00161300
*                                      the list.                      * 00161400
*                                                                     * 00161500
*                                                                     * 00161600
*                                      AUTHCOMP=xauthcomp             * 00161700
*                                          is the name (RS-type), or  * 00161800
*                                          address in register        * 00161900
*                                          (2)-(12), of a required 16 * 00162000
*                                          character input which      * 00162100
*                                          specifies a value to be    * 00162200
*                                          compared to the list       * 00162300
*                                          authority value for the    * 00162400
*                                          designated list.  If the   * 00162500
*                                          condition specified by     * 00162600
*                                          AUTHCOMPTYPE is not met    * 00162700
*                                          then the IXLLSTM operation * 00162800
*                                          is terminated, and         * 00162900
*                                          appropriate return and     * 00163000
*                                          reason codes are provided  * 00163100
*                                          to the invoker.            * 00163200
*                                                                     * 00163300
*                                                                     * 00163400
*                                          ÝAUTHCOMPTYPE=»EQUAL!LESSO * 00163500
*                                              REQUALº¨¨¨             * 00163600
*                                              is an optional keyword * 00163700
*                                              input which specifies  * 00163800
*                                              how the list authority * 00163900
*                                              comparison is to be    * 00164000
*                                              performed.             * 00164100
*                                                                     * 00164200
*                                              DEFAULT: EQUAL         * 00164300
*                                                                     * 00164400
*                                                                     * 00164500
*                                              AUTHCOMPTYPE=EQUAL     * 00164600
*                                                  The list authority * 00164700
*                                                  for the list       * 00164800
*                                                  specified by       * 00164900
*                                                  LISTNUM must be    * 00165000
*                                                  equal to the value * 00165100
*                                                  specified for      * 00165200
*                                                  AUTHCOMP.          * 00165300
*                                                                     * 00165400
*                                                                     * 00165500
*                                              AUTHCOMPTYPE=LESSOREQU * 00165600
*                                                  AL                 * 00165700
*                                                  The list authority * 00165800
*                                                  for the list       * 00165900
*                                                  specified by       * 00166000
*                                                  LISTNUM must be    * 00166100
*                                                  less than or equal * 00166200
*                                                  to the value       * 00166300
*                                                  specified for      * 00166400
*                                                  AUTHCOMP.          * 00166500
*                                                                     * 00166600
*                                                                     * 00166700
*                                                                     * 00166800
*                                                                     * 00166900
*                                                                     * 00167000
*                                                                     * 00167100
*                                                                     * 00167200
*                                                                     * 00167300
*                                                                     * 00167400
*                                                                     * 00167500
*                                                                     * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*                                                                     * 00167900
*                                                                     * 00168000
*                                                                     * 00168100
*                      ÝKEYCOMPARE=»NO!YESº                           * 00168200
*                          is an optional keyword input that          * 00168300
*                          determines whether the key value of an     * 00168400
*                          existing keyed list entry is to be         * 00168500
*                          compared to determine if this entry should * 00168600
*                          be selected for processing.  KEYCOMPARE is * 00168700
*                          only meaningful for list structures        * 00168800
*                          allocated on CFLEVEL=1 or higher CF.       * 00168900
*                          DEFAULT: NO                                * 00169000
*                                                                     * 00169100
*                                                                     * 00169200
*                          ÝKEYCOMPARE=NO¨                            * 00169300
*                              Indicates that no entry key comparison * 00169400
*                              will be performed to determine if this * 00169500
*                              entry should be processed.             * 00169600
*                                                                     * 00169700
*                          ÝKEYCOMPARE=YES                            * 00169800
*                              Indicates that entry key comparison    * 00169900
*                              will be performed based on the         * 00170000
*                              KEYREQTYPE specified to determine if   * 00170100
*                              this entry is selectable for           * 00170200
*                              processing.                            * 00170300
*                                                                     * 00170400
*                              KEYCOMPARE=YES is ignored if the       * 00170500
*                              target structure does not support      * 00170600
*                              keyed entries.                         * 00170700
*                                                                     * 00170800
*                                                                     * 00170900
*                              ENTRYKEY=xentrykey                     * 00171000
*                                  is the name (RS-type), or address  * 00171100
*                                  in register (2)-(12), of a         * 00171200
*                                  required 16 character input that   * 00171300
*                                  specifies the key to be used to    * 00171400
*                                  compare to the entry key of the    * 00171500
*                                  list entry.  If the condition      * 00171600
*                                  specified by KEYREQTYPE is not met * 00171700
*                                  for the current list entry then no * 00171800
*                                  processing is performed for the    * 00171900
*                                  current entry, and processing      * 00172000
*                                  continues with the next entry to   * 00172100
*                                  be considered.                     * 00172200
*                                                                     * 00172300
*                                                                     * 00172400
*                                                                     * 00172500
*                                                                     * 00172600
*                              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATER * 00172700
*                                  OREQUAL!RANGEº¨¨                   * 00172800
*                                  is an optional keyword input which * 00172900
*                                  specifies how entry key comparison * 00173000
*                                  is to be performed on an existing  * 00173100
*                                  keyed list entry to determine if   * 00173200
*                                  the entry is selectable for        * 00173300
*                                  processing.                        * 00173400
*                                  DEFAULT: EQUAL                     * 00173500
*                                                                     * 00173600
*                                                                     * 00173700
*                                  ÝKEYREQTYPE=EQUAL¨                 * 00173800
*                                      a list entry must have an      * 00173900
*                                      entry key equal to the value   * 00174000
*                                      specified by ENTRYKEY.         * 00174100
*                                                                     * 00174200
*                                  ÝKEYREQTYPE=LESSOREQUAL¨           * 00174300
*                                      a list entry must have an      * 00174400
*                                      entry key less than or equal   * 00174500
*                                      to the value specified by      * 00174600
*                                      ENTRYKEY.                      * 00174700
*                                                                     * 00174800
*                                  ÝKEYREQTYPE=GREATEROREQUAL¨        * 00174900
*                                      a list entry must have an      * 00175000
*                                      entry key greater than or      * 00175100
*                                      equal to the value specified   * 00175200
*                                      by ENTRYKEY.                   * 00175300
*                                                                     * 00175400
*                                  ÝKEYREQTYPE=RANGE                  * 00175500
*                                      a list entry must have an      * 00175600
*                                      entry key within a specified   * 00175700
*                                      range of values. The ENTRYKEY  * 00175800
*                                      specified will be used as the  * 00175900
*                                      beginning of the range of key  * 00176000
*                                      values that will be compared   * 00176100
*                                      with the existing entry key.   * 00176200
*                                      KEYRANGEEND will be used as    * 00176300
*                                      the ending value.  A list      * 00176400
*                                      entry must have an entry key   * 00176500
*                                      value within the specified     * 00176600
*                                      entry key range, inclusive,    * 00176700
*                                      for it to be selectable.       * 00176800
*                                                                     * 00176900
*                                      KEYREQTYPE=RANGE is only valid * 00177000
*                                      when the structure is          * 00177100
*                                      allocated in a CFLEVEL=9 or    * 00177200
*                                      higher CF.                     * 00177300
*                                                                     * 00177400
*                                                                     * 00177500
*                                      KEYRANGEEND=xkeyrangeend¨¨     * 00177600
*                                          is the name (RS-type), or  * 00177700
*                                          address in register        * 00177800
*                                          (2)-(12), of a required 16 * 00177900
*                                          character input specifies  * 00178000
*                                          the ending value for the   * 00178100
*                                          range of keys to be        * 00178200
*                                          compared to the entry key  * 00178300
*                                          of the list entry.         * 00178400
*                                                                     * 00178500
*                                                                     * 00178600
*                                                                     * 00178700
*                                                                     * 00178800
*                                                                     * 00178900
*                                                                     * 00179000
*                                                                     * 00179100
*                                                                     * 00179200
*                                                                     * 00179300
*                                                                     * 00179400
*                                                                     * 00179500
*                                                                     * 00179600
*                      ÝSKEYCOMPARE=»NO!YESº                          * 00179700
*                          is an optional keyword input that          * 00179800
*                          determines whether the secondary key value * 00179900
*                          of an existing keyed list entry is to be   * 00180000
*                          compared to determine if this entry should * 00180100
*                          be selected for processing.                * 00180200
*                          DEFAULT: NO                                * 00180300
*                                                                     * 00180400
*                                                                     * 00180500
*                          ÝSKEYCOMPARE=NO¨                           * 00180600
*                              Indicates that no secondary key        * 00180700
*                              comparison will be preformed to        * 00180800
*                              determine if this entry should be      * 00180900
*                              processed.                             * 00181000
*                                                                     * 00181100
*                          ÝSKEYCOMPARE=YES                           * 00181200
*                              Indicates that secondary key           * 00181300
*                              comparison will be performed based on  * 00181400
*                              the SKEYREQTYPE specified to determine * 00181500
*                              if this entry is selectable for        * 00181600
*                              processing.                            * 00181700
*                                                                     * 00181800
*                              SKEYCOMPARE=YES is ignored if the      * 00181900
*                              target structure was not allocated     * 00182000
*                              with secondary keys.                   * 00182100
*                                                                     * 00182200
*                                                                     * 00182300
*                              SECONDARYKEY=xsecondarykey             * 00182400
*                                  is the name (RS-type), or address  * 00182500
*                                  in register (2)-(12), of a         * 00182600
*                                  required 32 character input that   * 00182700
*                                  specifies the secondary key to be  * 00182800
*                                  used to compare to the secondary   * 00182900
*                                  key of the list entry.  If the     * 00183000
*                                  condition specified by SKEYREQTYPE * 00183100
*                                  is not met for the current list    * 00183200
*                                  entry then no processing is        * 00183300
*                                  performed for the current entry,   * 00183400
*                                  and processing continues with the  * 00183500
*                                  next entry to be considered.       * 00183600
*                                                                     * 00183700
*                                                                     * 00183800
*                                                                     * 00183900
*                                                                     * 00184000
*                              ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATE * 00184100
*                                  ROREQUAL!RANGEº¨¨                  * 00184200
*                                  is an optional keyword input which * 00184300
*                                  specifies how secondary key        * 00184400
*                                  comparison is to be performed on   * 00184500
*                                  an existing keyed list entry to    * 00184600
*                                  determine if the entry is          * 00184700
*                                  selectable for processing.         * 00184800
*                                  DEFAULT: EQUAL                     * 00184900
*                                                                     * 00185000
*                                                                     * 00185100
*                                  ÝSKEYREQTYPE=EQUAL¨                * 00185200
*                                      a list entry must have a       * 00185300
*                                      secondary key equal to the     * 00185400
*                                      value specified by             * 00185500
*                                      SECONDARYKEY.                  * 00185600
*                                                                     * 00185700
*                                  ÝSKEYREQTYPE=LESSOREQUAL¨          * 00185800
*                                      a list entry must have a       * 00185900
*                                      secondary key less than or     * 00186000
*                                      equal to the value specified   * 00186100
*                                      by SECONDARYKEY.               * 00186200
*                                                                     * 00186300
*                                  ÝSKEYREQTYPE=GREATEROREQUAL¨       * 00186400
*                                      a list entry must have a       * 00186500
*                                      secondary key greater than or  * 00186600
*                                      equal to the value specified   * 00186700
*                                      by SECONDARYKEY.               * 00186800
*                                                                     * 00186900
*                                  ÝSKEYREQTYPE=RANGE                 * 00187000
*                                      a list entry must have a       * 00187100
*                                      secondary key within a         * 00187200
*                                      specified range of values. The * 00187300
*                                      SECONDARYKEY specified will be * 00187400
*                                      used as the beginning of the   * 00187500
*                                      range of secondary key values  * 00187600
*                                      that will be compared with the * 00187700
*                                      existing secondary key.        * 00187800
*                                      SKEYRANGEEND will be used as   * 00187900
*                                      the ending value.  A list      * 00188000
*                                      entry must have a secondary    * 00188100
*                                      key value within the specified * 00188200
*                                      secondary key range,           * 00188300
*                                      inclusive, for it to be        * 00188400
*                                      selectable.                    * 00188500
*                                                                     * 00188600
*                                                                     * 00188700
*                                      SKEYRANGEEND=xskeyrangeend¨¨   * 00188800
*                                                                     * 00188900
*                                          is the name (RS-type), or  * 00189000
*                                          address in register        * 00189100
*                                          (2)-(12), of a required 32 * 00189200
*                                          character input which      * 00189300
*                                          specifies the ending value * 00189400
*                                          for the range of secondary * 00189500
*                                          keys to be compared to the * 00189600
*                                          secondary key of the list  * 00189700
*                                          entry.                     * 00189800
*                                                                     * 00189900
*                                                                     * 00190000
*                                                                     * 00190100
*                                                                     * 00190200
*                                                                     * 00190300
*                                                                     * 00190400
*                                                                     * 00190500
*                                                                     * 00190600
*                                                                     * 00190700
*                                                                     * 00190800
*                                                                     * 00190900
*                  LOCATOR=ENTRYNAME                                  * 00191000
*                      Indicates that the entry name should be used   * 00191100
*                      to designate the entry to be used as the       * 00191200
*                      starting entry for the request.  ENTRYNAME may * 00191300
*                      only be specified for structures that support  * 00191400
*                      named entries.                                 * 00191500
*                                                                     * 00191600
*                                                                     * 00191700
*                      ENTRYNAME=xentryname                           * 00191800
*                          is the name (RS-type), or address in       * 00191900
*                          register (2)-(12), of a required 16        * 00192000
*                          character input specifying the list entry  * 00192100
*                          name of the entry to be used as the        * 00192200
*                          starting point of the request.             * 00192300
*                                                                     * 00192400
*                                                                     * 00192500
*                                                                     * 00192600
*                                                                     * 00192700
*                      ÝLISTCOMPARE=»NO!YESº                          * 00192800
*                          is an optional keyword input which         * 00192900
*                          determines if the list number is to be     * 00193000
*                          compared to determine if entries should be * 00193100
*                          processed.                                 * 00193200
*                          DEFAULT: NO                                * 00193300
*                                                                     * 00193400
*                                                                     * 00193500
*                          ÝLISTCOMPARE=NO¨                           * 00193600
*                              indicates no list number comparison    * 00193700
*                              should precede processing of any list  * 00193800
*                              entries.                               * 00193900
*                                                                     * 00194000
*                          ÝLISTCOMPARE=YES                           * 00194100
*                              indicates that list number comparison  * 00194200
*                              should precede processing of any list  * 00194300
*                              entries.                               * 00194400
*                                                                     * 00194500
*                                                                     * 00194600
*                              LISTNUM=xlistnum                       * 00194700
*                                  is the name (RS-type), or address  * 00194800
*                                  in register (2)-(12), of a         * 00194900
*                                  required fullword input that       * 00195000
*                                  designates the number of the list  * 00195100
*                                  on which the entries to be         * 00195200
*                                  processed reside. If the list      * 00195300
*                                  comparison fails then the IXLLSTM  * 00195400
*                                  operation is terminated, and the   * 00195500
*                                  list entry controls along with the * 00195600
*                                  appropriate return and reason      * 00195700
*                                  codes are provided to the invoker. * 00195800
*                                                                     * 00195900
*                                                                     * 00196000
*                                                                     * 00196100
*                                                                     * 00196200
*                              ÝAUTHCOMPARE=»NO!YESº                  * 00196300
*                                  is an optional keyword input which * 00196400
*                                  determines whether the list        * 00196500
*                                  authority comparison is to be used * 00196600
*                                  to determine if entries on the     * 00196700
*                                  list should be processed.          * 00196800
*                                                                     * 00196900
*                                  AUTHCOMPARE is only meaningful for * 00197000
*                                  list structures allocated on       * 00197100
*                                  CFLEVEL=1 or higher CF.            * 00197200
*                                  DEFAULT: NO                        * 00197300
*                                                                     * 00197400
*                                                                     * 00197500
*                                  ÝAUTHCOMPARE=NO¨                   * 00197600
*                                      indicates no list authority    * 00197700
*                                      comparison is to be performed  * 00197800
*                                      before processing any entries  * 00197900
*                                      on the list.                   * 00198000
*                                                                     * 00198100
*                                  ÝAUTHCOMPARE=YES                   * 00198200
*                                      indicates that list authority  * 00198300
*                                      comparison should precede      * 00198400
*                                      processing of any entries on   * 00198500
*                                      the list.                      * 00198600
*                                                                     * 00198700
*                                                                     * 00198800
*                                      AUTHCOMP=xauthcomp             * 00198900
*                                          is the name (RS-type), or  * 00199000
*                                          address in register        * 00199100
*                                          (2)-(12), of a required 16 * 00199200
*                                          character input which      * 00199300
*                                          specifies a value to be    * 00199400
*                                          compared to the list       * 00199500
*                                          authority value for the    * 00199600
*                                          designated list.  If the   * 00199700
*                                          condition specified by     * 00199800
*                                          AUTHCOMPTYPE is not met    * 00199900
*                                          then the IXLLSTM operation * 00200000
*                                          is terminated, and         * 00200100
*                                          appropriate return and     * 00200200
*                                          reason codes are provided  * 00200300
*                                          to the invoker.            * 00200400
*                                                                     * 00200500
*                                                                     * 00200600
*                                          ÝAUTHCOMPTYPE=»EQUAL!LESSO * 00200700
*                                              REQUALº¨¨¨             * 00200800
*                                              is an optional keyword * 00200900
*                                              input which specifies  * 00201000
*                                              how the list authority * 00201100
*                                              comparison is to be    * 00201200
*                                              performed.             * 00201300
*                                                                     * 00201400
*                                              DEFAULT: EQUAL         * 00201500
*                                                                     * 00201600
*                                                                     * 00201700
*                                              AUTHCOMPTYPE=EQUAL     * 00201800
*                                                  The list authority * 00201900
*                                                  for the list       * 00202000
*                                                  specified by       * 00202100
*                                                  LISTNUM must be    * 00202200
*                                                  equal to the value * 00202300
*                                                  specified for      * 00202400
*                                                  AUTHCOMP.          * 00202500
*                                                                     * 00202600
*                                                                     * 00202700
*                                              AUTHCOMPTYPE=LESSOREQU * 00202800
*                                                  AL                 * 00202900
*                                                  The list authority * 00203000
*                                                  for the list       * 00203100
*                                                  specified by       * 00203200
*                                                  LISTNUM must be    * 00203300
*                                                  less than or equal * 00203400
*                                                  to the value       * 00203500
*                                                  specified for      * 00203600
*                                                  AUTHCOMP.          * 00203700
*                                                                     * 00203800
*                                                                     * 00203900
*                                                                     * 00204000
*                                                                     * 00204100
*                                                                     * 00204200
*                                                                     * 00204300
*                                                                     * 00204400
*                                                                     * 00204500
*                                                                     * 00204600
*                                                                     * 00204700
*                                                                     * 00204800
*                                                                     * 00204900
*                                                                     * 00205000
*                                                                     * 00205100
*                                                                     * 00205200
*                  LOCATOR=UNKEYPOS                                   * 00205300
*                      Indicates that LISTNUM and DIRECTION are to be * 00205400
*                      used to designate the entry to be used as the  * 00205500
*                      starting entry for the request.                * 00205600
*                                                                     * 00205700
*                                                                     * 00205800
*                      LISTNUM=xlistnum                               * 00205900
*                          is the name (RS-type), or address in       * 00206000
*                          register (2)-(12), of a required fullword  * 00206100
*                          input that designates the number of the    * 00206200
*                          list on which the entries to be processed  * 00206300
*                          reside.  If DIRECTION=HEADTOTAIL was       * 00206400
*                          specified, the designated starting list    * 00206500
*                          entry is the head of the list.  If         * 00206600
*                          DIRECTION=TAILTOHEAD was specified, the    * 00206700
*                          designated starting list entry is the tail * 00206800
*                          of the list.                               * 00206900
*                                                                     * 00207000
*                                                                     * 00207100
*                                                                     * 00207200
*                                                                     * 00207300
*                      ÝKEYSCANTYPE=»ENTRY!SECONDARYº¨                * 00207400
*                          is an optional keyword input that          * 00207500
*                          indicates which key ordering               * 00207600
*                          (Entry/Secondary) is to be used to scan    * 00207700
*                          for entries on the list.                   * 00207800
*                          DEFAULT: ENTRY                             * 00207900
*                                                                     * 00208000
*                                                                     * 00208100
*                          KEYSCANTYPE=ENTRY                          * 00208200
*                              indicates that entry key ordering will * 00208300
*                              be used for scanning the list.         * 00208400
*                                                                     * 00208500
*                          KEYSCANTYPE=SECONDARY                      * 00208600
*                              indicates that secondary key ordering  * 00208700
*                              will be used for scanning the list.    * 00208800
*                                                                     * 00208900
*                              KEYSCANTYPE=SECONDARY is only valid    * 00209000
*                              when the structure is allocated in a   * 00209100
*                              CFLEVEL=9 or higher CF.                * 00209200
*                                                                     * 00209300
*                                                                     * 00209400
*                                                                     * 00209500
*                                                                     * 00209600
*                                                                     * 00209700
*                                                                     * 00209800
*                      ÝAUTHCOMPARE=»NO!YESº                          * 00209900
*                          is an optional keyword input which         * 00210000
*                          determines whether the list authority      * 00210100
*                          comparison is to be used to determine if   * 00210200
*                          entries on the list should be processed.   * 00210300
*                                                                     * 00210400
*                          AUTHCOMPARE is only meaningful for list    * 00210500
*                          structures allocated on CFLEVEL=1 or       * 00210600
*                          higher CF.                                 * 00210700
*                          DEFAULT: NO                                * 00210800
*                                                                     * 00210900
*                                                                     * 00211000
*                          ÝAUTHCOMPARE=NO¨                           * 00211100
*                              indicates no list authority comparison * 00211200
*                              is to be performed before processing   * 00211300
*                              any entries on the list.               * 00211400
*                                                                     * 00211500
*                          ÝAUTHCOMPARE=YES                           * 00211600
*                              indicates that list authority          * 00211700
*                              comparison should precede processing   * 00211800
*                              of any entries on the list.            * 00211900
*                                                                     * 00212000
*                                                                     * 00212100
*                              AUTHCOMP=xauthcomp                     * 00212200
*                                  is the name (RS-type), or address  * 00212300
*                                  in register (2)-(12), of a         * 00212400
*                                  required 16 character input which  * 00212500
*                                  specifies a value to be compared   * 00212600
*                                  to the list authority value for    * 00212700
*                                  the designated list.  If the       * 00212800
*                                  condition specified by             * 00212900
*                                  AUTHCOMPTYPE is not met then the   * 00213000
*                                  IXLLSTM operation is terminated    * 00213100
*                                  with no resultant change to the    * 00213200
*                                  structure, and appropriate return  * 00213300
*                                  and reason codes are provided to   * 00213400
*                                  the invoker.                       * 00213500
*                                                                     * 00213600
*                                                                     * 00213700
*                                  ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨ * 00213800
*                                      ¨                              * 00213900
*                                      is an optional keyword input   * 00214000
*                                      which specifies how the list   * 00214100
*                                      authority comparison is to be  * 00214200
*                                      performed.                     * 00214300
*                                                                     * 00214400
*                                      DEFAULT: EQUAL                 * 00214500
*                                                                     * 00214600
*                                                                     * 00214700
*                                      AUTHCOMPTYPE=EQUAL             * 00214800
*                                          The list authority for the * 00214900
*                                          list specified by LISTNUM  * 00215000
*                                          must be equal to the value * 00215100
*                                          specified for AUTHCOMP.    * 00215200
*                                                                     * 00215300
*                                                                     * 00215400
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00215500
*                                          The list authority for the * 00215600
*                                          list specified by LISTNUM  * 00215700
*                                          must be less than or equal * 00215800
*                                          to the value specified for * 00215900
*                                          AUTHCOMP.                  * 00216000
*                                                                     * 00216100
*                                                                     * 00216200
*                                                                     * 00216300
*                                                                     * 00216400
*                                                                     * 00216500
*                                                                     * 00216600
*                                                                     * 00216700
*                                                                     * 00216800
*                                                                     * 00216900
*                                                                     * 00217000
*                                                                     * 00217100
*                                                                     * 00217200
*                      ÝKEYCOMPARE=»NO!YESº                           * 00217300
*                          is an optional keyword input that          * 00217400
*                          determines whether the key value of an     * 00217500
*                          existing keyed list entry is to be         * 00217600
*                          compared to determine if this entry should * 00217700
*                          be selected for processing.  KEYCOMPARE is * 00217800
*                          only meaningful for list structures        * 00217900
*                          allocated on CFLEVEL=1 or higher CF.       * 00218000
*                          DEFAULT: NO                                * 00218100
*                                                                     * 00218200
*                                                                     * 00218300
*                          ÝKEYCOMPARE=NO¨                            * 00218400
*                              Indicates that no entry key comparison * 00218500
*                              will be performed to determine if this * 00218600
*                              entry should be processed.             * 00218700
*                                                                     * 00218800
*                          ÝKEYCOMPARE=YES                            * 00218900
*                              Indicates that entry key comparison    * 00219000
*                              will be performed based on the         * 00219100
*                              KEYREQTYPE specified to determine if   * 00219200
*                              this entry is selectable for           * 00219300
*                              processing.                            * 00219400
*                                                                     * 00219500
*                              KEYCOMPARE=YES is ignored if the       * 00219600
*                              target structure does not support      * 00219700
*                              keyed entries.                         * 00219800
*                                                                     * 00219900
*                                                                     * 00220000
*                              ENTRYKEY=xentrykey                     * 00220100
*                                  is the name (RS-type), or address  * 00220200
*                                  in register (2)-(12), of a         * 00220300
*                                  required 16 character input that   * 00220400
*                                  specifies the key to be used to    * 00220500
*                                  compare to the entry key of the    * 00220600
*                                  list entry.  If the condition      * 00220700
*                                  specified by KEYREQTYPE is not met * 00220800
*                                  for the current list entry then no * 00220900
*                                  processing is performed for the    * 00221000
*                                  current entry, and processing      * 00221100
*                                  continues with the next entry to   * 00221200
*                                  be considered.                     * 00221300
*                                                                     * 00221400
*                                                                     * 00221500
*                                                                     * 00221600
*                                                                     * 00221700
*                              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATER * 00221800
*                                  OREQUAL!RANGEº¨¨                   * 00221900
*                                  is an optional keyword input which * 00222000
*                                  specifies how entry key comparison * 00222100
*                                  is to be performed on an existing  * 00222200
*                                  keyed list entry to determine if   * 00222300
*                                  the entry is selectable for        * 00222400
*                                  processing.                        * 00222500
*                                  DEFAULT: EQUAL                     * 00222600
*                                                                     * 00222700
*                                                                     * 00222800
*                                  ÝKEYREQTYPE=EQUAL¨                 * 00222900
*                                      a list entry must have an      * 00223000
*                                      entry key equal to the value   * 00223100
*                                      specified by ENTRYKEY.         * 00223200
*                                                                     * 00223300
*                                  ÝKEYREQTYPE=LESSOREQUAL¨           * 00223400
*                                      a list entry must have an      * 00223500
*                                      entry key less than or equal   * 00223600
*                                      to the value specified by      * 00223700
*                                      ENTRYKEY.                      * 00223800
*                                                                     * 00223900
*                                  ÝKEYREQTYPE=GREATEROREQUAL¨        * 00224000
*                                      a list entry must have an      * 00224100
*                                      entry key greater than or      * 00224200
*                                      equal to the value specified   * 00224300
*                                      by ENTRYKEY.                   * 00224400
*                                                                     * 00224500
*                                  ÝKEYREQTYPE=RANGE                  * 00224600
*                                      a list entry must have an      * 00224700
*                                      entry key within a specified   * 00224800
*                                      range of values. The ENTRYKEY  * 00224900
*                                      specified will be used as the  * 00225000
*                                      beginning of the range of key  * 00225100
*                                      values that will be compared   * 00225200
*                                      with the existing entry key.   * 00225300
*                                      KEYRANGEEND will be used as    * 00225400
*                                      the ending value.  A list      * 00225500
*                                      entry must have an entry key   * 00225600
*                                      value within the specified     * 00225700
*                                      entry key range, inclusive,    * 00225800
*                                      for it to be selectable.       * 00225900
*                                                                     * 00226000
*                                      KEYREQTYPE=RANGE is only valid * 00226100
*                                      when the structure is          * 00226200
*                                      allocated in a CFLEVEL=9 or    * 00226300
*                                      higher CF.                     * 00226400
*                                                                     * 00226500
*                                                                     * 00226600
*                                      KEYRANGEEND=xkeyrangeend¨¨     * 00226700
*                                          is the name (RS-type), or  * 00226800
*                                          address in register        * 00226900
*                                          (2)-(12), of a required 16 * 00227000
*                                          character input specifies  * 00227100
*                                          the ending value for the   * 00227200
*                                          range of keys to be        * 00227300
*                                          compared to the entry key  * 00227400
*                                          of the list entry.         * 00227500
*                                                                     * 00227600
*                                                                     * 00227700
*                                                                     * 00227800
*                                                                     * 00227900
*                                                                     * 00228000
*                                                                     * 00228100
*                                                                     * 00228200
*                                                                     * 00228300
*                                                                     * 00228400
*                                                                     * 00228500
*                                                                     * 00228600
*                                                                     * 00228700
*                      ÝSKEYCOMPARE=»NO!YESº                          * 00228800
*                          is an optional keyword input that          * 00228900
*                          determines whether the secondary key value * 00229000
*                          of an existing keyed list entry is to be   * 00229100
*                          compared to determine if this entry should * 00229200
*                          be selected for processing.                * 00229300
*                          DEFAULT: NO                                * 00229400
*                                                                     * 00229500
*                                                                     * 00229600
*                          ÝSKEYCOMPARE=NO¨                           * 00229700
*                              Indicates that no secondary key        * 00229800
*                              comparison will be performed to        * 00229900
*                              determine if this entry should be      * 00230000
*                              processed.                             * 00230100
*                                                                     * 00230200
*                          ÝSKEYCOMPARE=YES                           * 00230300
*                              Indicates that secondary key           * 00230400
*                              comparison will be performed based on  * 00230500
*                              the SKEYREQTYPE specified to determine * 00230600
*                              if this entry is selectable for        * 00230700
*                              processing.                            * 00230800
*                                                                     * 00230900
*                              SKEYCOMPARE=YES is ignored if the      * 00231000
*                              target structure was not allocated     * 00231100
*                              with secondary keys.                   * 00231200
*                                                                     * 00231300
*                                                                     * 00231400
*                              SECONDARYKEY=xsecondarykey             * 00231500
*                                  is the name (RS-type), or address  * 00231600
*                                  in register (2)-(12), of a         * 00231700
*                                  required 32 character input that   * 00231800
*                                  specifies the secondary key value  * 00231900
*                                  to be used to compare to the       * 00232000
*                                  secondary key of the list entry.   * 00232100
*                                  If the condition specified by      * 00232200
*                                  SKEYREQTYPE is not met for the     * 00232300
*                                  current list entry then no         * 00232400
*                                  processing is performed for the    * 00232500
*                                  current entry, and processing      * 00232600
*                                  continues with the next entry to   * 00232700
*                                  be considered.                     * 00232800
*                                                                     * 00232900
*                                                                     * 00233000
*                                                                     * 00233100
*                                                                     * 00233200
*                              ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATE * 00233300
*                                  ROREQUAL!RANGEº¨¨                  * 00233400
*                                  is an optional keyword input which * 00233500
*                                  specifies how secondary key        * 00233600
*                                  comparison is to be performed on   * 00233700
*                                  an existing keyed list entry to    * 00233800
*                                  determine if the entry is          * 00233900
*                                  selectable for processing.         * 00234000
*                                  DEFAULT: EQUAL                     * 00234100
*                                                                     * 00234200
*                                                                     * 00234300
*                                  ÝSKEYREQTYPE=EQUAL¨                * 00234400
*                                      a list entry must have a       * 00234500
*                                      secondary key equal to the     * 00234600
*                                      value specified by             * 00234700
*                                      SECONDARYKEY.                  * 00234800
*                                                                     * 00234900
*                                  ÝSKEYREQTYPE=LESSOREQUAL¨          * 00235000
*                                      a list entry must have a       * 00235100
*                                      secondary key less than or     * 00235200
*                                      equal to the value specified   * 00235300
*                                      by SECONDARYKEY.               * 00235400
*                                                                     * 00235500
*                                  ÝSKEYREQTYPE=GREATEROREQUAL¨       * 00235600
*                                      a list entry must have a       * 00235700
*                                      secondary key greater than or  * 00235800
*                                      equal to the value specified   * 00235900
*                                      by SECONDARYKEY.               * 00236000
*                                                                     * 00236100
*                                  ÝSKEYREQTYPE=RANGE                 * 00236200
*                                      a list entry must have a       * 00236300
*                                      secondary key within a         * 00236400
*                                      specified range of values. The * 00236500
*                                      SECONDARYKEY specified will be * 00236600
*                                      used as the beginning of the   * 00236700
*                                      range of secondary key values  * 00236800
*                                      that will be compared with the * 00236900
*                                      existing secondary key.        * 00237000
*                                      SKEYRANGEEND will be used as   * 00237100
*                                      the ending value.  A list      * 00237200
*                                      entry must have a secondary    * 00237300
*                                      key value within the specified * 00237400
*                                      secondary key range,           * 00237500
*                                      inclusive, for it to be        * 00237600
*                                      selectable.                    * 00237700
*                                                                     * 00237800
*                                                                     * 00237900
*                                      SKEYRANGEEND=xskeyrangeend¨¨   * 00238000
*                                                                     * 00238100
*                                          is the name (RS-type), or  * 00238200
*                                          address in register        * 00238300
*                                          (2)-(12), of a required 32 * 00238400
*                                          character input which      * 00238500
*                                          specifies the ending value * 00238600
*                                          for the range of secondary * 00238700
*                                          keys to be compared to the * 00238800
*                                          secondary key of the list  * 00238900
*                                          entry.                     * 00239000
*                                                                     * 00239100
*                                                                     * 00239200
*                                                                     * 00239300
*                                                                     * 00239400
*                                                                     * 00239500
*                                                                     * 00239600
*                                                                     * 00239700
*                                                                     * 00239800
*                                                                     * 00239900
*                                                                     * 00240000
*                                                                     * 00240100
*                  LOCATOR=KEYPOS                                     * 00240200
*                      Indicates that LISTNUM, DIRECTION, and the key * 00240300
*                      specified by KEYTYPE are to be used to         * 00240400
*                      designate the entry to be used as the starting * 00240500
*                      list entry for the request.                    * 00240600
*                                                                     * 00240700
*                                                                     * 00240800
*                      LISTNUM=xlistnum                               * 00240900
*                          is the name (RS-type), or address in       * 00241000
*                          register (2)-(12), of a required fullword  * 00241100
*                          input that designates the number of the    * 00241200
*                          list on which the starting list entry      * 00241300
*                          resides.                                   * 00241400
*                                                                     * 00241500
*                                                                     * 00241600
*                                                                     * 00241700
*                                                                     * 00241800
*                      ÝKEYSCANTYPE=»ENTRY!SECONDARYº¨                * 00241900
*                          is an optional keyword input that          * 00242000
*                          indicates which key ordering               * 00242100
*                          (Entry/Secondary) is to be used to scan    * 00242200
*                          for entries on the list.                   * 00242300
*                          DEFAULT: ENTRY                             * 00242400
*                                                                     * 00242500
*                                                                     * 00242600
*                          KEYSCANTYPE=ENTRY                          * 00242700
*                              indicates that entry key ordering will * 00242800
*                              be used for scanning the list.         * 00242900
*                                                                     * 00243000
*                          KEYSCANTYPE=SECONDARY                      * 00243100
*                              indicates that secondary key ordering  * 00243200
*                              will be used for scanning the list.    * 00243300
*                                                                     * 00243400
*                              KEYSCANTYPE=SECONDARY is only valid    * 00243500
*                              when the structure is allocated in a   * 00243600
*                              CFLEVEL=9 or higher CF.                * 00243700
*                                                                     * 00243800
*                                                                     * 00243900
*                                                                     * 00244000
*                                                                     * 00244100
*                                                                     * 00244200
*                                                                     * 00244300
*                      ÝAUTHCOMPARE=»NO!YESº                          * 00244400
*                          is an optional keyword input which         * 00244500
*                          determines whether the list authority      * 00244600
*                          comparison is to be used to determine if   * 00244700
*                          entries on the list should be processed.   * 00244800
*                                                                     * 00244900
*                          AUTHCOMPARE is only meaningful for list    * 00245000
*                          structures allocated on CFLEVEL=1 or       * 00245100
*                          higher CF.                                 * 00245200
*                          DEFAULT: NO                                * 00245300
*                                                                     * 00245400
*                                                                     * 00245500
*                          ÝAUTHCOMPARE=NO¨                           * 00245600
*                              indicates no list authority comparison * 00245700
*                              is to be performed before processing   * 00245800
*                              any entries on the list.               * 00245900
*                                                                     * 00246000
*                          ÝAUTHCOMPARE=YES                           * 00246100
*                              indicates that list authority          * 00246200
*                              comparison should precede processing   * 00246300
*                              of any entries on the list.            * 00246400
*                                                                     * 00246500
*                                                                     * 00246600
*                              AUTHCOMP=xauthcomp                     * 00246700
*                                  is the name (RS-type), or address  * 00246800
*                                  in register (2)-(12), of a         * 00246900
*                                  required 16 character input which  * 00247000
*                                  specifies a value to be compared   * 00247100
*                                  to the list authority value for    * 00247200
*                                  the designated list.  If the       * 00247300
*                                  condition specified by             * 00247400
*                                  AUTHCOMPTYPE is not met then the   * 00247500
*                                  IXLLSTM operation is terminated,   * 00247600
*                                  and appropriate return and reason  * 00247700
*                                  codes are provided to the invoker. * 00247800
*                                                                     * 00247900
*                                                                     * 00248000
*                                  ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨ * 00248100
*                                      ¨                              * 00248200
*                                      is an optional keyword input   * 00248300
*                                      which specifies how the list   * 00248400
*                                      authority comparison is to be  * 00248500
*                                      performed.                     * 00248600
*                                                                     * 00248700
*                                      DEFAULT: EQUAL                 * 00248800
*                                                                     * 00248900
*                                                                     * 00249000
*                                      AUTHCOMPTYPE=EQUAL             * 00249100
*                                          The list authority for the * 00249200
*                                          list specified by LISTNUM  * 00249300
*                                          must be equal to the value * 00249400
*                                          specified for AUTHCOMP.    * 00249500
*                                                                     * 00249600
*                                                                     * 00249700
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00249800
*                                          The list authority for the * 00249900
*                                          list specified by LISTNUM  * 00250000
*                                          must be less than or equal * 00250100
*                                          to the value specified for * 00250200
*                                          AUTHCOMP.                  * 00250300
*                                                                     * 00250400
*                                                                     * 00250500
*                                                                     * 00250600
*                                                                     * 00250700
*                                                                     * 00250800
*                                                                     * 00250900
*                                                                     * 00251000
*                                                                     * 00251100
*                                                                     * 00251200
*                                                                     * 00251300
*                                                                     * 00251400
*                                                                     * 00251500
*                      ÝKEYTYPE=»ENTRY!SECONDARYº                     * 00251600
*                          is an optional keyword input that          * 00251700
*                          specifies whether to locate the starting   * 00251800
*                          list entry using the entry key or the      * 00251900
*                          secondary key.                             * 00252000
*                          DEFAULT: ENTRY                             * 00252100
*                                                                     * 00252200
*                                                                     * 00252300
*                          ÝKEYTYPE=ENTRY                             * 00252400
*                              Indicates the entry key will be used   * 00252500
*                              to locate the starting list entry.     * 00252600
*                                                                     * 00252700
*                                                                     * 00252800
*                              ENTRYKEY=xentrykey                     * 00252900
*                                  is the name (RS-type), or address  * 00253000
*                                  in register (2)-(12), of a         * 00253100
*                                  required 16 character input that   * 00253200
*                                  specifies the key to be used to    * 00253300
*                                  partially indicate the starting    * 00253400
*                                  list entry for the request.  If    * 00253500
*                                  DIRECTION=HEADTOTAIL was           * 00253600
*                                  specified, the designated starting * 00253700
*                                  list entry is the head of the      * 00253800
*                                  sublist.  If DIRECTION=TAILTOHEAD  * 00253900
*                                  was specified, the designated      * 00254000
*                                  starting list entry is the tail of * 00254100
*                                  the sublist.                       * 00254200
*                                                                     * 00254300
*                                                                     * 00254400
*                                  ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GRE * 00254500
*                                      ATEROREQUAL!RANGEº¨            * 00254600
*                                      is an optional keyword input   * 00254700
*                                      which specifies how an         * 00254800
*                                      existing keyed list entry is   * 00254900
*                                      located and/or how key         * 00255000
*                                      comparison is to be performed  * 00255100
*                                      on an existing keyed list      * 00255200
*                                      entry to determine if the      * 00255300
*                                      entry is selectable for        * 00255400
*                                      processing when KEYCOMPARE=YES * 00255500
*                                      is specified.                  * 00255600
*                                      DEFAULT: EQUAL                 * 00255700
*                                                                     * 00255800
*                                                                     * 00255900
*                                      ÝKEYREQTYPE=EQUAL¨             * 00256000
*                                          a list entry must have an  * 00256100
*                                          entry key equal to the     * 00256200
*                                          value specified by         * 00256300
*                                          ENTRYKEY.                  * 00256400
*                                                                     * 00256500
*                                          If no such keyed entry     * 00256600
*                                          exists on the list then    * 00256700
*                                          the request will be        * 00256800
*                                          failed.                    * 00256900
*                                                                     * 00257000
*                                      ÝKEYREQTYPE=LESSOREQUAL¨       * 00257100
*                                          a list entry must have an  * 00257200
*                                          entry key less than or     * 00257300
*                                          equal to the value         * 00257400
*                                          specified by ENTRYKEY.     * 00257500
*                                                                     * 00257600
*                                          If no entries on the list  * 00257700
*                                          have an entry key value    * 00257800
*                                          less than or equal to the  * 00257900
*                                          specified value the        * 00258000
*                                          request will be failed     * 00258100
*                                                                     * 00258200
*                                          If no entries on the list  * 00258300
*                                          have an entry key value    * 00258400
*                                          equal to the value         * 00258500
*                                          specified by ENTRYKEY, but * 00258600
*                                          entries exists with an     * 00258700
*                                          entry key value less than  * 00258800
*                                          the specified value then   * 00258900
*                                          the entry with the largest * 00259000
*                                          entry key value less than  * 00259100
*                                          the specified value is     * 00259200
*                                          selected.  When multiple   * 00259300
*                                          entries have the same      * 00259400
*                                          entry key value DIRECTION  * 00259500
*                                          is used to resolve whether * 00259600
*                                          the first or last entry    * 00259700
*                                          with the entry key value   * 00259800
*                                          is selected.               * 00259900
*                                                                     * 00260000
*                                                                     * 00260100
*                                      ÝKEYREQTYPE=GREATEROREQUAL¨    * 00260200
*                                          a list entry must have an  * 00260300
*                                          entry key greater than or  * 00260400
*                                          equal to the value         * 00260500
*                                          specified by ENTRYKEY.     * 00260600
*                                                                     * 00260700
*                                          If no entries on the list  * 00260800
*                                          have an entry key value    * 00260900
*                                          greater than or equal to   * 00261000
*                                          the specified value the    * 00261100
*                                          request will be failed.    * 00261200
*                                                                     * 00261300
*                                          If no entries on the list  * 00261400
*                                          have an entry key value    * 00261500
*                                          equal to the value         * 00261600
*                                          specified by ENTRYKEY, but * 00261700
*                                          entries exists with an     * 00261800
*                                          entry key value greater    * 00261900
*                                          than the specified value   * 00262000
*                                          then the entry with the    * 00262100
*                                          smallest entry key value   * 00262200
*                                          greater than the specified * 00262300
*                                          value is selected.  When   * 00262400
*                                          multiple entries have the  * 00262500
*                                          same entry key value       * 00262600
*                                          DIRECTION is used to       * 00262700
*                                          resolve whether the first  * 00262800
*                                          or last entry with the     * 00262900
*                                          entry key value is         * 00263000
*                                          selected.                  * 00263100
*                                                                     * 00263200
*                                      ÝKEYREQTYPE=RANGE              * 00263300
*                                          a list entry must have an  * 00263400
*                                          entry key within a         * 00263500
*                                          specified range of values. * 00263600
*                                          The ENTRYKEY specified     * 00263700
*                                          will be used as the        * 00263800
*                                          beginning of the range of  * 00263900
*                                          key values that will be    * 00264000
*                                          compared with the existing * 00264100
*                                          entry key. KEYRANGEEND     * 00264200
*                                          will be used as the ending * 00264300
*                                          value.  A list entry must  * 00264400
*                                          have an entry key value    * 00264500
*                                          within the specified entry * 00264600
*                                          key range, inclusive, for  * 00264700
*                                          it to be selectable.       * 00264800
*                                                                     * 00264900
*                                          KEYREQTYPE=RANGE is only   * 00265000
*                                          valid when the structure   * 00265100
*                                          is allocated in a          * 00265200
*                                          CFLEVEL=9 or higher CF.    * 00265300
*                                                                     * 00265400
*                                          If no entries on the list  * 00265500
*                                          have an entry key value    * 00265600
*                                          within the specified       * 00265700
*                                          range, the request will be * 00265800
*                                          failed.                    * 00265900
*                                                                     * 00266000
*                                          When multiple entries have * 00266100
*                                          an entry key value within  * 00266200
*                                          the specified range,       * 00266300
*                                          DIRECTION is used to       * 00266400
*                                          resolve whether the first  * 00266500
*                                          or last entry with the     * 00266600
*                                          entry key range is         * 00266700
*                                          selected.                  * 00266800
*                                                                     * 00266900
*                                          NOTE:  When                * 00267000
*                                          KEYREQTYPE=RANGE is        * 00267100
*                                          specifed, KEYCOMPARE=YES   * 00267200
*                                          is required.               * 00267300
*                                                                     * 00267400
*                                                                     * 00267500
*                                          KEYRANGEEND=xkeyrangeend¨  * 00267600
*                                                                     * 00267700
*                                              is the name (RS-type), * 00267800
*                                              or address in register * 00267900
*                                              (2)-(12), of a         * 00268000
*                                              required 16 character  * 00268100
*                                              input specifies the    * 00268200
*                                              ending value for the   * 00268300
*                                              range of keys to be    * 00268400
*                                              compared to the entry  * 00268500
*                                              key of the designated  * 00268600
*                                              list entry.            * 00268700
*                                                                     * 00268800
*                                                                     * 00268900
*                                                                     * 00269000
*                                                                     * 00269100
*                                                                     * 00269200
*                                                                     * 00269300
*                                                                     * 00269400
*                                                                     * 00269500
*                                  ÝKEYCOMPARE=»NO!YESº¨              * 00269600
*                                      is an optional keyword input   * 00269700
*                                      that determines whether the    * 00269800
*                                      key value of an existing keyed * 00269900
*                                      list entry is to be compared   * 00270000
*                                      to determine if this entry     * 00270100
*                                      should be selected for         * 00270200
*                                      processing.  KEYCOMPARE is     * 00270300
*                                      only meaningful for list       * 00270400
*                                      structures allocated on        * 00270500
*                                      CFLEVEL=1 or higher CF.        * 00270600
*                                      DEFAULT: NO                    * 00270700
*                                                                     * 00270800
*                                                                     * 00270900
*                                      ÝKEYCOMPARE=NO¨                * 00271000
*                                          Indicates that no entry    * 00271100
*                                          key comparison will be     * 00271200
*                                          performed to determine if  * 00271300
*                                          this entry should be       * 00271400
*                                          processed.                 * 00271500
*                                                                     * 00271600
*                                          NOTE:  When                * 00271700
*                                          KEYREQTYPE=RANGE is        * 00271800
*                                          specifed, KEYCOMPARE=YES   * 00271900
*                                          is required.               * 00272000
*                                                                     * 00272100
*                                      ÝKEYCOMPARE=YES¨               * 00272200
*                                          Indicates that entry key   * 00272300
*                                          comparison will be         * 00272400
*                                          performed based on the     * 00272500
*                                          KEYREQTYPE specified to    * 00272600
*                                          determine if this entry is * 00272700
*                                          selectable for processing. * 00272800
*                                                                     * 00272900
*                                          KEYCOMPARE=YES is ignored  * 00273000
*                                          if the target structure    * 00273100
*                                          does not support keyed     * 00273200
*                                          entries.                   * 00273300
*                                                                     * 00273400
*                                                                     * 00273500
*                                                                     * 00273600
*                                                                     * 00273700
*                                                                     * 00273800
*                                                                     * 00273900
*                                  ÝSKEYCOMPARE=»NO!YESº              * 00274000
*                                      is an optional keyword input   * 00274100
*                                      that determines whether the    * 00274200
*                                      secondary key value of an      * 00274300
*                                      existing keyed list entry is   * 00274400
*                                      to be compared to determine if * 00274500
*                                      this entry should be selected  * 00274600
*                                      for processing.                * 00274700
*                                      DEFAULT: NO                    * 00274800
*                                                                     * 00274900
*                                                                     * 00275000
*                                      ÝSKEYCOMPARE=NO¨               * 00275100
*                                          Indicates that no          * 00275200
*                                          secondary key comparison   * 00275300
*                                          will be performed to       * 00275400
*                                          determine if this entry    * 00275500
*                                          should be processed.       * 00275600
*                                                                     * 00275700
*                                      ÝSKEYCOMPARE=YES               * 00275800
*                                          Indicates that secondary   * 00275900
*                                          key comparison will be     * 00276000
*                                          performed based on the     * 00276100
*                                          SKEYREQTYPE specified to   * 00276200
*                                          determine if this entry is * 00276300
*                                          selectable for processing. * 00276400
*                                                                     * 00276500
*                                          SKEYCOMPARE=YES is ignored * 00276600
*                                          if the target structure    * 00276700
*                                          was not allocated with     * 00276800
*                                          secondary keys.            * 00276900
*                                                                     * 00277000
*                                                                     * 00277100
*                                          SECONDARYKEY=xsecondarykey * 00277200
*                                                                     * 00277300
*                                              is the name (RS-type), * 00277400
*                                              or address in register * 00277500
*                                              (2)-(12), of a         * 00277600
*                                              required 32 character  * 00277700
*                                              input that specifies   * 00277800
*                                              the secondary key      * 00277900
*                                              value be compared to   * 00278000
*                                              the secondary key of   * 00278100
*                                              the list entry.  If    * 00278200
*                                              the condition          * 00278300
*                                              specified by           * 00278400
*                                              SKEYREQTYPE is not met * 00278500
*                                              then the IXLLSTM       * 00278600
*                                              operation is           * 00278700
*                                              terminated, and        * 00278800
*                                              appropriate return and * 00278900
*                                              reason codes are       * 00279000
*                                              provided to the        * 00279100
*                                              invoker.               * 00279200
*                                                                     * 00279300
*                                                                     * 00279400
*                                              ÝSKEYREQTYPE=»EQUAL!LE * 00279500
*                                                  SSOREQUAL!GREATERO * 00279600
*                                                  REQUAL!RANGEº¨¨    * 00279700
*                                                  is an optional     * 00279800
*                                                  keyword input      * 00279900
*                                                  which specifies    * 00280000
*                                                  how key comparison * 00280100
*                                                  is to be performed * 00280200
*                                                  on an existing     * 00280300
*                                                  keyed list entry   * 00280400
*                                                  to determine if    * 00280500
*                                                  the entry is       * 00280600
*                                                  selectable for     * 00280700
*                                                  processing.        * 00280800
*                                                  DEFAULT: EQUAL     * 00280900
*                                                                     * 00281000
*                                                                     * 00281100
*                                                  ÝSKEYREQTYPE=EQUAL * 00281200
*                                                      ¨              * 00281300
*                                                      a list entry   * 00281400
*                                                      must have a    * 00281500
*                                                      secondary key  * 00281600
*                                                      equal to the   * 00281700
*                                                      value          * 00281800
*                                                      specified by   * 00281900
*                                                      SECONDARYKEY.  * 00282000
*                                                                     * 00282100
*                                                  ÝSKEYREQTYPE=LESSO * 00282200
*                                                      REQUAL¨        * 00282300
*                                                      a list entry   * 00282400
*                                                      must have a    * 00282500
*                                                      secondary key  * 00282600
*                                                      less than or   * 00282700
*                                                      equal to the   * 00282800
*                                                      value          * 00282900
*                                                      specified by   * 00283000
*                                                      SECONDARYKEY.  * 00283100
*                                                                     * 00283200
*                                                  ÝSKEYREQTYPE=GREAT * 00283300
*                                                      EROREQUAL¨     * 00283400
*                                                      a list entry   * 00283500
*                                                      must have a    * 00283600
*                                                      secondary key  * 00283700
*                                                      greater than   * 00283800
*                                                      or equal to    * 00283900
*                                                      the value      * 00284000
*                                                      specified by   * 00284100
*                                                      SECONDARYKEY.  * 00284200
*                                                                     * 00284300
*                                                  ÝSKEYREQTYPE=RANGE * 00284400
*                                                                     * 00284500
*                                                      a list entry   * 00284600
*                                                      must have a    * 00284700
*                                                      secondary key  * 00284800
*                                                      within a       * 00284900
*                                                      specified      * 00285000
*                                                      range of       * 00285100
*                                                      values. The    * 00285200
*                                                      SECONDARYKEY   * 00285300
*                                                      specified will * 00285400
*                                                      be used as the * 00285500
*                                                      beginning of   * 00285600
*                                                      the range of   * 00285700
*                                                      secondary key  * 00285800
*                                                      values that    * 00285900
*                                                      will be        * 00286000
*                                                      compared with  * 00286100
*                                                      the existing   * 00286200
*                                                      key.           * 00286300
*                                                      SKEYRANGEEND   * 00286400
*                                                      will be used   * 00286500
*                                                      as the ending  * 00286600
*                                                      value.  A list * 00286700
*                                                      entry must     * 00286800
*                                                      have a         * 00286900
*                                                      secondary key  * 00287000
*                                                      value within   * 00287100
*                                                      the specified  * 00287200
*                                                      secondary key  * 00287300
*                                                      range,         * 00287400
*                                                      inclusive, for * 00287500
*                                                      it to be       * 00287600
*                                                      selectable.    * 00287700
*                                                                     * 00287800
*                                                                     * 00287900
*                                                      SKEYRANGEEND=x * 00288000
*                                                          skeyrangee * 00288100
*                                                          nd¨¨¨      * 00288200
*                                                          is the     * 00288300
*                                                          name       * 00288400
*                                                          (RS-type), * 00288500
*                                                          or address * 00288600
*                                                          in         * 00288700
*                                                          register   * 00288800
*                                                          (2)-(12),  * 00288900
*                                                          of a       * 00289000
*                                                          required   * 00289100
*                                                          32         * 00289200
*                                                          character  * 00289300
*                                                          input      * 00289400
*                                                          specifies  * 00289500
*                                                          the ending * 00289600
*                                                          value for  * 00289700
*                                                          the range  * 00289800
*                                                          of keys to * 00289900
*                                                          be         * 00290000
*                                                          compared   * 00290100
*                                                          to the     * 00290200
*                                                          secondary  * 00290300
*                                                          key of the * 00290400
*                                                          designated * 00290500
*                                                          list       * 00290600
*                                                          entry.     * 00290700
*                                                                     * 00290800
*                                                                     * 00290900
*                                                                     * 00291000
*                                                                     * 00291100
*                                                                     * 00291200
*                                                                     * 00291300
*                                                                     * 00291400
*                                                                     * 00291500
*                                                                     * 00291600
*                                                                     * 00291700
*                                                                     * 00291800
*                                                                     * 00291900
*                                                                     * 00292000
*                                                                     * 00292100
*                                                                     * 00292200
*                          ÝKEYTYPE=SECONDARY                         * 00292300
*                              Indicates the secondary key should be  * 00292400
*                              used to locate the starting list       * 00292500
*                              entry.                                 * 00292600
*                                                                     * 00292700
*                              KEYTYPE=SECONDARY is only valid when   * 00292800
*                              the structure is allocated in a        * 00292900
*                              CFLEVEL=9 or higher CF.                * 00293000
*                                                                     * 00293100
*                                                                     * 00293200
*                              SECONDARYKEY=xsecondarykey             * 00293300
*                                  is the name (RS-type), or address  * 00293400
*                                  in register (2)-(12), of a         * 00293500
*                                  required 32 character input that   * 00293600
*                                  specifies the secondary key to be  * 00293700
*                                  used to partially indicate the     * 00293800
*                                  starting list entry for the        * 00293900
*                                  request.  If DIRECTION=HEADTOTAIL  * 00294000
*                                  was specified, the designated      * 00294100
*                                  starting list entry is the head of * 00294200
*                                  the sublist.  If                   * 00294300
*                                  DIRECTION=TAILTOHEAD was           * 00294400
*                                  specified, the designated starting * 00294500
*                                  list entry is the tail of the      * 00294600
*                                  sublist.                           * 00294700
*                                                                     * 00294800
*                                                                     * 00294900
*                                  ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GR * 00295000
*                                      EATEROREQUAL!RANGEº¨           * 00295100
*                                      is an optional keyword input   * 00295200
*                                      which specifies how an         * 00295300
*                                      existing keyed list entry is   * 00295400
*                                      located and/or how key         * 00295500
*                                      comparison is to be performed  * 00295600
*                                      on an existing keyed list      * 00295700
*                                      entry to determine if the      * 00295800
*                                      entry is selectable for        * 00295900
*                                      processing when                * 00296000
*                                      SKEYCOMPARE=YES is specified.  * 00296100
*                                      DEFAULT: EQUAL                 * 00296200
*                                                                     * 00296300
*                                                                     * 00296400
*                                      ÝSKEYREQTYPE=EQUAL¨            * 00296500
*                                          a list entry must have a   * 00296600
*                                          secondary key equal to the * 00296700
*                                          value specified by         * 00296800
*                                          SECONDARYKEY.              * 00296900
*                                                                     * 00297000
*                                          If no such keyed entry     * 00297100
*                                          exists on the list then    * 00297200
*                                          the request will be        * 00297300
*                                          failed.                    * 00297400
*                                                                     * 00297500
*                                      ÝSKEYREQTYPE=LESSOREQUAL¨      * 00297600
*                                          a list entry must have a   * 00297700
*                                          secondary key less than or * 00297800
*                                          equal to the value         * 00297900
*                                          specified by SECONDARYKEY. * 00298000
*                                                                     * 00298100
*                                          If no entries on the list  * 00298200
*                                          have a secondary key value * 00298300
*                                          less than or equal to the  * 00298400
*                                          specified value the        * 00298500
*                                          request will be failed     * 00298600
*                                                                     * 00298700
*                                          If no entries on the list  * 00298800
*                                          have a secondary key value * 00298900
*                                          equal to the value         * 00299000
*                                          specified by SECONDARYKEY, * 00299100
*                                          but entries exists with a  * 00299200
*                                          secondary key value less   * 00299300
*                                          than the specified value   * 00299400
*                                          then the entry with the    * 00299500
*                                          largest secondary key      * 00299600
*                                          value less than the        * 00299700
*                                          specified value is         * 00299800
*                                          selected.  When multiple   * 00299900
*                                          entries have the same      * 00300000
*                                          secondary key value        * 00300100
*                                          DIRECTION is used to       * 00300200
*                                          resolve whether the first  * 00300300
*                                          or last entry with the     * 00300400
*                                          secondary key value is     * 00300500
*                                          selected.                  * 00300600
*                                                                     * 00300700
*                                                                     * 00300800
*                                      ÝSKEYREQTYPE=GREATEROREQUAL¨   * 00300900
*                                                                     * 00301000
*                                          a list entry must have a   * 00301100
*                                          secondary key greater than * 00301200
*                                          or equal to the value      * 00301300
*                                          specified by SECONDARYKEY. * 00301400
*                                                                     * 00301500
*                                          If no entries on the list  * 00301600
*                                          have a secondary key value * 00301700
*                                          greater than or equal to   * 00301800
*                                          the specified value the    * 00301900
*                                          request will be failed.    * 00302000
*                                                                     * 00302100
*                                          If no entries on the list  * 00302200
*                                          have a secondary key value * 00302300
*                                          equal to the value         * 00302400
*                                          specified by SECONDARYKEY, * 00302500
*                                          but entries exists with a  * 00302600
*                                          secondary key value        * 00302700
*                                          greater than the specified * 00302800
*                                          value then the entry with  * 00302900
*                                          the smallest secondary key * 00303000
*                                          value greater than the     * 00303100
*                                          specified value is         * 00303200
*                                          selected.  When multiple   * 00303300
*                                          entries have the same      * 00303400
*                                          secondary key value        * 00303500
*                                          DIRECTION is used to       * 00303600
*                                          resolve whether the first  * 00303700
*                                          or last entry with the     * 00303800
*                                          secondary key value is     * 00303900
*                                          selected.                  * 00304000
*                                                                     * 00304100
*                                      ÝSKEYREQTYPE=RANGE             * 00304200
*                                          a list entry must have a   * 00304300
*                                          secondary key within a     * 00304400
*                                          specified range of values. * 00304500
*                                          The SECONDARYKEY specified * 00304600
*                                          will be used as the        * 00304700
*                                          beginning of the range of  * 00304800
*                                          key values that will be    * 00304900
*                                          compared with the existing * 00305000
*                                          secondary key.             * 00305100
*                                          SKEYRANGEEND will be used  * 00305200
*                                          as the ending value.  A    * 00305300
*                                          list entry must have a     * 00305400
*                                          secondary key value within * 00305500
*                                          the specified secondary    * 00305600
*                                          key range, inclusive, for  * 00305700
*                                          it to be selectable.       * 00305800
*                                                                     * 00305900
*                                          If no entries on the list  * 00306000
*                                          have a secondary key value * 00306100
*                                          within the specified       * 00306200
*                                          range, the request will be * 00306300
*                                          failed.                    * 00306400
*                                                                     * 00306500
*                                          When multiple entries have * 00306600
*                                          a secondary key value      * 00306700
*                                          within the specified       * 00306800
*                                          range, DIRECTION is used   * 00306900
*                                          to resolve whether the     * 00307000
*                                          first or last entry with   * 00307100
*                                          the secondary key range is * 00307200
*                                          selected.                  * 00307300
*                                                                     * 00307400
*                                                                     * 00307500
*                                          SKEYRANGEEND=xskeyrangeend * 00307600
*                                              ¨                      * 00307700
*                                              is the name (RS-type), * 00307800
*                                              or address in register * 00307900
*                                              (2)-(12), of a         * 00308000
*                                              required 32 character  * 00308100
*                                              input specifies the    * 00308200
*                                              ending value for the   * 00308300
*                                              range of keys to be    * 00308400
*                                              compared to the        * 00308500
*                                              secondary key of the   * 00308600
*                                              designated list entry. * 00308700
*                                                                     * 00308800
*                                                                     * 00308900
*                                                                     * 00309000
*                                                                     * 00309100
*                                                                     * 00309200
*                                                                     * 00309300
*                                                                     * 00309400
*                                                                     * 00309500
*                                  ÝSKEYCOMPARE=»NO!YESº¨             * 00309600
*                                      is an optional keyword input   * 00309700
*                                      that determines whether the    * 00309800
*                                      secondary key value of an      * 00309900
*                                      existing keyed list entry is   * 00310000
*                                      to be compared to determine if * 00310100
*                                      this entry should be selected  * 00310200
*                                      for processing.                * 00310300
*                                      DEFAULT: NO                    * 00310400
*                                                                     * 00310500
*                                                                     * 00310600
*                                      ÝSKEYCOMPARE=NO¨               * 00310700
*                                          Indicates that no          * 00310800
*                                          secondary key comparison   * 00310900
*                                          will be performed to       * 00311000
*                                          determine if this entry    * 00311100
*                                          should be processed.       * 00311200
*                                                                     * 00311300
*                                          NOTE:  When                * 00311400
*                                          SKEYREQTYPE=RANGE is       * 00311500
*                                          specifed, SKEYCOMPARE=YES  * 00311600
*                                          is required.               * 00311700
*                                                                     * 00311800
*                                      ÝSKEYCOMPARE=YES¨              * 00311900
*                                          Indicates that secondary   * 00312000
*                                          key comparison will be     * 00312100
*                                          performed based on the     * 00312200
*                                          SKEYREQTYPE specified to   * 00312300
*                                          determine if this entry is * 00312400
*                                          selectable for processing. * 00312500
*                                                                     * 00312600
*                                                                     * 00312700
*                                                                     * 00312800
*                                                                     * 00312900
*                                                                     * 00313000
*                                                                     * 00313100
*                                  ÝKEYCOMPARE=»NO!YESº               * 00313200
*                                      is an optional keyword input   * 00313300
*                                      that determines whether the    * 00313400
*                                      key value of an existing keyed * 00313500
*                                      list entry is to be compared   * 00313600
*                                      to determine if this entry     * 00313700
*                                      should be selected for         * 00313800
*                                      processing.  KEYCOMPARE is     * 00313900
*                                      only meaningful for list       * 00314000
*                                      structures allocated on        * 00314100
*                                      CFLEVEL=1 or higher CF.        * 00314200
*                                      DEFAULT: NO                    * 00314300
*                                                                     * 00314400
*                                                                     * 00314500
*                                      ÝKEYCOMPARE=NO¨                * 00314600
*                                          Indicates that no entry    * 00314700
*                                          key comparison will be     * 00314800
*                                          performed to determine if  * 00314900
*                                          this entry should be       * 00315000
*                                          processed.                 * 00315100
*                                                                     * 00315200
*                                      ÝKEYCOMPARE=YES                * 00315300
*                                          Indicates that entry key   * 00315400
*                                          comparison will be         * 00315500
*                                          performed based on the     * 00315600
*                                          KEYREQTYPE specified to    * 00315700
*                                          determine if this entry is * 00315800
*                                          selectable for processing. * 00315900
*                                                                     * 00316000
*                                          KEYCOMPARE=YES is ignored  * 00316100
*                                          if the target structure    * 00316200
*                                          does not support keyed     * 00316300
*                                          entries.                   * 00316400
*                                                                     * 00316500
*                                                                     * 00316600
*                                          ENTRYKEY=xentrykey         * 00316700
*                                              is the name (RS-type), * 00316800
*                                              or address in register * 00316900
*                                              (2)-(12), of a         * 00317000
*                                              required 16 character  * 00317100
*                                              input that specifies   * 00317200
*                                              the key to be compared * 00317300
*                                              to the entry key value * 00317400
*                                              of the list entry.  If * 00317500
*                                              the condition          * 00317600
*                                              specified by           * 00317700
*                                              KEYREQTYPE is not met  * 00317800
*                                              then the IXLLSTM       * 00317900
*                                              operation is           * 00318000
*                                              terminated, and        * 00318100
*                                              appropriate return and * 00318200
*                                              reason codes are       * 00318300
*                                              provided to the        * 00318400
*                                              invoker.               * 00318500
*                                                                     * 00318600
*                                                                     * 00318700
*                                              ÝKEYREQTYPE=»EQUAL!LES * 00318800
*                                                  SOREQUAL!GREATEROR * 00318900
*                                                  EQUAL!RANGEº¨¨¨    * 00319000
*                                                  is an optional     * 00319100
*                                                  keyword input      * 00319200
*                                                  which specifies    * 00319300
*                                                  how key comparison * 00319400
*                                                  is to be performed * 00319500
*                                                  on an existing     * 00319600
*                                                  keyed list entry   * 00319700
*                                                  to determine if    * 00319800
*                                                  the entry is       * 00319900
*                                                  selectable for     * 00320000
*                                                  processing.        * 00320100
*                                                  DEFAULT: EQUAL     * 00320200
*                                                                     * 00320300
*                                                                     * 00320400
*                                                  ÝKEYREQTYPE=EQUAL¨ * 00320500
*                                                                     * 00320600
*                                                      a list entry   * 00320700
*                                                      must have an   * 00320800
*                                                      entry key      * 00320900
*                                                      equal to the   * 00321000
*                                                      value          * 00321100
*                                                      specified by   * 00321200
*                                                      ENTRYKEY.      * 00321300
*                                                                     * 00321400
*                                                  ÝKEYREQTYPE=LESSOR * 00321500
*                                                      EQUAL¨         * 00321600
*                                                      a list entry   * 00321700
*                                                      must have an   * 00321800
*                                                      entry key less * 00321900
*                                                      than or equal  * 00322000
*                                                      to the value   * 00322100
*                                                      specified by   * 00322200
*                                                      ENTRYKEY.      * 00322300
*                                                                     * 00322400
*                                                  ÝKEYREQTYPE=GREATE * 00322500
*                                                      ROREQUAL¨      * 00322600
*                                                      a list entry   * 00322700
*                                                      must have an   * 00322800
*                                                      entry key      * 00322900
*                                                      greater than   * 00323000
*                                                      or equal to    * 00323100
*                                                      the value      * 00323200
*                                                      specified by   * 00323300
*                                                      ENTRYKEY.      * 00323400
*                                                                     * 00323500
*                                                  ÝKEYREQTYPE=RANGE  * 00323600
*                                                                     * 00323700
*                                                      a list entry   * 00323800
*                                                      must have an   * 00323900
*                                                      entry key      * 00324000
*                                                      within a       * 00324100
*                                                      specified      * 00324200
*                                                      range of       * 00324300
*                                                      values. The    * 00324400
*                                                      ENTRYKEY       * 00324500
*                                                      specified will * 00324600
*                                                      be used as the * 00324700
*                                                      beginning of   * 00324800
*                                                      the range of   * 00324900
*                                                      key values     * 00325000
*                                                      that will be   * 00325100
*                                                      compared with  * 00325200
*                                                      the existing   * 00325300
*                                                      entry key.     * 00325400
*                                                      KEYRANGEEND    * 00325500
*                                                      will be used   * 00325600
*                                                      as the ending  * 00325700
*                                                      value.  A list * 00325800
*                                                      entry must     * 00325900
*                                                      have an entry  * 00326000
*                                                      key value      * 00326100
*                                                      within the     * 00326200
*                                                      specified      * 00326300
*                                                      entry key      * 00326400
*                                                      range,         * 00326500
*                                                      inclusive, for * 00326600
*                                                      it to be       * 00326700
*                                                      selectable.    * 00326800
*                                                                     * 00326900
*                                                                     * 00327000
*                                                      KEYRANGEEND=xk * 00327100
*                                                          eyrangeend * 00327200
*                                                          ¨¨¨        * 00327300
*                                                          is the     * 00327400
*                                                          name       * 00327500
*                                                          (RS-type), * 00327600
*                                                          or address * 00327700
*                                                          in         * 00327800
*                                                          register   * 00327900
*                                                          (2)-(12),  * 00328000
*                                                          of a       * 00328100
*                                                          required   * 00328200
*                                                          16         * 00328300
*                                                          character  * 00328400
*                                                          input      * 00328500
*                                                          specifies  * 00328600
*                                                          the ending * 00328700
*                                                          value for  * 00328800
*                                                          the range  * 00328900
*                                                          of keys to * 00329000
*                                                          be         * 00329100
*                                                          compared   * 00329200
*                                                          to the     * 00329300
*                                                          entry key  * 00329400
*                                                          of the     * 00329500
*                                                          designated * 00329600
*                                                          list       * 00329700
*                                                          entry.     * 00329800
*                                                                     * 00329900
*                                                                     * 00330000
*                                                                     * 00330100
*                                                                     * 00330200
*                                                                     * 00330300
*                                                                     * 00330400
*                                                                     * 00330500
*                                                                     * 00330600
*                                                                     * 00330700
*                                                                     * 00330800
*                                                                     * 00330900
*                                                                     * 00331000
*                                                                     * 00331100
*                                                                     * 00331200
*                                                                     * 00331300
*                                                                     * 00331400
*                                                                     * 00331500
*                                                                     * 00331600
*                                                                     * 00331700
*                                                                     * 00331800
*                                                                     * 00331900
*                                                                     * 00332000
*                                                                     * 00332100
*                                                                     * 00332200
*              ÝVERSCOMPARE=»NO!YESº                                  * 00332300
*                  is an optional keyword input that indicates the    * 00332400
*                  version comparison be done for each list entry.    * 00332500
*                  The version number specified by VERSCOMP will be   * 00332600
*                  used to compare each list entry version number.    * 00332700
*                  DEFAULT: NO                                        * 00332800
*                                                                     * 00332900
*                                                                     * 00333000
*                  ÝVERSCOMPARE=NO¨                                   * 00333100
*                      indicates no version comparison should precede * 00333200
*                      processing of any list entries.                * 00333300
*                                                                     * 00333400
*                  ÝVERSCOMPARE=YES                                   * 00333500
*                      indicates that version number comparison       * 00333600
*                      should precede processing of each list entry.  * 00333700
*                                                                     * 00333800
*                                                                     * 00333900
*                      VERSCOMP=xverscomp                             * 00334000
*                          is the name (RS-type), or address in       * 00334100
*                          register (2)-(12), of a required 8         * 00334200
*                          character input which specifies a value to * 00334300
*                          be compared to the version number of the   * 00334400
*                          list entry.  If the condition specified by * 00334500
*                          VERSCOMPTYPE is not met for the current    * 00334600
*                          list entry then no processing is performed * 00334700
*                          for the current entry and processing       * 00334800
*                          continues with the next entry to be        * 00334900
*                          considered.                                * 00335000
*                                                                     * 00335100
*                                                                     * 00335200
*                          ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨        * 00335300
*                              is an optional keyword input that      * 00335400
*                              specifies how the list entry version   * 00335500
*                              number comparison is to be performed.  * 00335600
*                                                                     * 00335700
*                              VERSCOMPTYPE=LESSOREQUAL is only       * 00335800
*                              meaningful for list structures         * 00335900
*                              allocated on CFLEVEL=1 or higher CF.   * 00336000
*                                                                     * 00336100
*                              DEFAULT: EQUAL                         * 00336200
*                                                                     * 00336300
*                                                                     * 00336400
*                              VERSCOMPTYPE=EQUAL                     * 00336500
*                                  The version number for the list    * 00336600
*                                  entry must be equal to the value   * 00336700
*                                  specified for VERSCOMP.            * 00336800
*                                                                     * 00336900
*                                                                     * 00337000
*                              VERSCOMPTYPE=LESSOREQUAL               * 00337100
*                                  The version number for the list    * 00337200
*                                  entry must be less than or equal   * 00337300
*                                  to the value specified for         * 00337400
*                                  VERSCOMP.                          * 00337500
*                                  DEFAULT: Equal                     * 00337600
*                                                                     * 00337700
*                                                                     * 00337800
*                                                                     * 00337900
*                                                                     * 00338000
*                                                                     * 00338100
*                                                                     * 00338200
*                                                                     * 00338300
*                                                                     * 00338400
*                                                                     * 00338500
*                                                                     * 00338600
*                                                                     * 00338700
*                                                                     * 00338800
*              The following is a set of mutually exclusive keys.     * 00338900
*              This set is required; only one key must be specified.  * 00339000
*                                                                     * 00339100
*                                                                     * 00339200
*              BUFLIST=Ýxbuflist¨                                     * 00339300
*                  belongs to a set of mutually exclusive keys. It is * 00339400
*                  an output.  It is the name (RS-type), or address   * 00339500
*                  in register (2)-(12), of a 128-byte virtual        * 00339600
*                  storage area containing a list of addresses of     * 00339700
*                  buffers.  The set of buffers is used as if it were * 00339800
*                  a single contiguous area for purposes of output.   * 00339900
*                                                                     * 00340000
*                  The format of the list is a set of 8-byte          * 00340100
*                  elements.  The BUFADDRSIZE keyword denotes whether * 00340200
*                  four or eight bytes of the element are used.  If   * 00340300
*                  BUFADDRSIZE=31 is specified then the first four    * 00340400
*                  bytes of each element are reserved space and the   * 00340500
*                  last four bytes contain the address of the buffer. * 00340600
*                  If BUFADDRSIZE=64 is specified then the full eight * 00340700
*                  bytes specify the address of the buffer.  The      * 00340800
*                  buffers may not reside in large pages.  The        * 00340900
*                  buffers may not reside in high shared virtual      * 00341000
*                  storage areas or in pageable high virtual common   * 00341100
*                  storage (above 2GB).                               * 00341200
*                                                                     * 00341300
*                  There may be 1 to 16 buffers passed in the list.   * 00341400
*                  Each buffer in the list must be the same size and  * 00341500
*                  must reside in the same address space or data      * 00341600
*                  space.  Data is fetched from or stored into the    * 00341700
*                  buffers in the order specified.  For READ_LIST     * 00341800
*                  requests each buffer must be 4096 bytes in length  * 00341900
*                  and must start on a 4096-byte (page) boundary.     * 00342000
*                                                                     * 00342100
*                  One of BUFFER or BUFLIST is required for READ_LIST * 00342200
*                  requests.                                          * 00342300
*                                                                     * 00342400
*                  Upon successful completion of a READ_LIST request  * 00342500
*                  the BUFLIST buffers contain, starting at offset    * 00342600
*                  zero in the first buffer, an array of elements     * 00342700
*                  each of which is constructed as follows (dependent * 00342800
*                  on request options):                               * 00342900
*                                                                     * 00343000
*                  When adjunct data is requested on a READ_LIST      * 00343100
*                  request the adjunct data for the first entry       * 00343200
*                  processed is returned in the storage area          * 00343300
*                  specified by ADJAREA.  The adjunct data for all    * 00343400
*                  other entries is returned in the BUFLIST buffers.  * 00343500
*                  When list entry controls are requested the entry   * 00343600
*                  controls for the first entry processed is returned * 00343700
*                  in the answer area specified by ANSAREA.  The      * 00343800
*                  entry controls for all other entries is returned   * 00343900
*                  in the BUFLIST buffers.                            * 00344000
*                                                                     * 00344100
*                                                                     * 00344200
*                  o   When TYPE=ENTDATA was specified:               * 00344300
*                                                                     * 00344400
*                      Entry data.                                    * 00344500
*                                                                     * 00344600
*                  o   When TYPE=ADJDATA was specified:               * 00344700
*                                                                     * 00344800
*                      Adunct data.                                   * 00344900
*                                                                     * 00345000
*                  o   When TYPE=ECONTROLS was specified:             * 00345100
*                                                                     * 00345200
*                      List entry controls.                           * 00345300
*                                                                     * 00345400
*                  o   When TYPE=(ENTDATA,ADJDATA) was specified:     * 00345500
*                                                                     * 00345600
*                      Entry data, followed by adjunct data.          * 00345700
*                                                                     * 00345800
*                  o   When TYPE=(ENTDATA,ECONTROLS) was specified:   * 00345900
*                                                                     * 00346000
*                      List entry controls, followed by entry data.   * 00346100
*                                                                     * 00346200
*                  o   When TYPE=(ADJDATA,ECONTROLS) was specified:   * 00346300
*                                                                     * 00346400
*                      List entry controls, followed by adjunct data. * 00346500
*                                                                     * 00346600
*                  o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was      * 00346700
*                      specified:                                     * 00346800
*                                                                     * 00346900
*                      List entry controls, followed by entry data,   * 00347000
*                      followed by adjunct data.                      * 00347100
*                                                                     * 00347200
*                                                                     * 00347300
*                                                                     * 00347400
*                  One array element is returned for each processed   * 00347500
*                  entry.  The number of elements returned in the     * 00347600
*                  BUFLIST buffers is indicated in the answer area    * 00347700
*                  specified by ANSAREA.  An element length may be    * 00347800
*                  determined by considering the element make-up, the * 00347900
*                  structure element size, the number of elements in  * 00348000
*                  the entry, an adjunct data size of 64 bytes, and   * 00348100
*                  the length of list entry controls.  The length and * 00348200
*                  contents of list entry controls is defined by      * 00348300
*                  mapping macro IXLYLCTL.                            * 00348400
*                                                                     * 00348500
*                  BUFLIST is mutually exclusive with BUFFER.         * 00348600
*                                                                     * 00348700
*                                                                     * 00348800
*                  ÝBUFADDRTYPE=»VIRTUAL!REALº                        * 00348900
*                      is an optional keyword input that specifies    * 00349000
*                      whether the buffer addresses specified in the  * 00349100
*                      BUFLIST list are virtual storage addresses or  * 00349200
*                      real storage addresses.                        * 00349300
*                                                                     * 00349400
*                      DEFAULT: VIRTUAL                               * 00349500
*                                                                     * 00349600
*                                                                     * 00349700
*                      ÝBUFADDRTYPE=VIRTUAL                           * 00349800
*                          Indicates that the buffer addresses        * 00349900
*                          specified in the BUFLIST list are virtual  * 00350000
*                          storage addresses.                         * 00350100
*                                                                     * 00350200
*                                                                     * 00350300
*                                                                     * 00350400
*                          ÝPAGEABLE=»YES!NOº¨                        * 00350500
*                              is an optional keyword input that      * 00350600
*                              specifies whether or not the buffers   * 00350700
*                              specified by BUFLIST resides in        * 00350800
*                              pageable storage.                      * 00350900
*                                                                     * 00351000
*                              DEFAULT: YES                           * 00351100
*                                                                     * 00351200
*                                                                     * 00351300
*                              ÝPAGEABLE=YES                          * 00351400
*                                  Indicates that the BUFLIST buffers * 00351500
*                                  reside in pageable virtual         * 00351600
*                                  storage.                           * 00351700
*                                                                     * 00351800
*                                  This includes disabled reference   * 00351900
*                                  storage, and may include storage   * 00352000
*                                  that has the potential to become   * 00352100
*                                  pageable (such as address space    * 00352200
*                                  storage for which a PGSER FIX has  * 00352300
*                                  been successfully processed).  It  * 00352400
*                                  does not include implicitly        * 00352500
*                                  non-pageable storage (such as is   * 00352600
*                                  obtained from non-pageable         * 00352700
*                                  subpools).                         * 00352800
*                                                                     * 00352900
*                                                                     * 00353000
*                                                                     * 00353100
*                                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEY * 00353200
*                                      º¨¨                            * 00353300
*                                      is the name (RS-type), or      * 00353400
*                                      address in register (2)-(12),  * 00353500
*                                      of an optional 8 bit input     * 00353600
*                                      containing the storage key to  * 00353700
*                                      be used when referencing the   * 00353800
*                                      buffers in the list specified  * 00353900
*                                      by BUFLIST.                    * 00354000
*                                                                     * 00354100
*                                      The high order nibble contains * 00354200
*                                      the storage key, the low order * 00354300
*                                      nibble is ignored.  For        * 00354400
*                                      example, set 'kkkk' in the     * 00354500
*                                      binary bit string 'kkkkxxxx'B  * 00354600
*                                      to correspond to the desired   * 00354700
*                                      storage key.                   * 00354800
*                                                                     * 00354900
*                                      If BUFSTGKEY is not specified, * 00355000
*                                      then all references to the     * 00355100
*                                      BUFLIST buffers are performed  * 00355200
*                                      using the caller's PSW key.    * 00355300
*                                                                     * 00355400
*                                      DEFAULT: CALLERS_KEY           * 00355500
*                                                                     * 00355600
*                                                                     * 00355700
*                                                                     * 00355800
*                              ÝPAGEABLE=NO¨                          * 00355900
*                                  Indicates that the BUFLIST buffers * 00356000
*                                  reside in non-pageable virtual     * 00356100
*                                  storage.                           * 00356200
*                                                                     * 00356300
*                                  This includes implicitly           * 00356400
*                                  non-pageable storage areas.  If    * 00356500
*                                  the virtual storage may            * 00356600
*                                  potentially become pageable, then  * 00356700
*                                  the invoker is responsible for     * 00356800
*                                  ensuring the virtual storage       * 00356900
*                                  remains non-pageable for the       * 00357000
*                                  duration of the request.           * 00357100
*                                                                     * 00357200
*                                  If MODE=ASYNCTOKEN is specified or * 00357300
*                                  MODE=SYNCTOKEN is specified and    * 00357400
*                                  the request does not complete      * 00357500
*                                  synchronously, then the storage    * 00357600
*                                  must remain non-pageable until     * 00357700
*                                  completion of the corresponding    * 00357800
*                                  IXLFCOMP request.  If              * 00357900
*                                  MODE=ASYNCEXIT is specified or     * 00358000
*                                  MODE=SYNCEXIT is specified and the * 00358100
*                                  request does not complete          * 00358200
*                                  synchronously, then the storage    * 00358300
*                                  must remain non-pageable until the * 00358400
*                                  completion exit is driven for the  * 00358500
*                                  request.  If MODE=ASYNCECB is      * 00358600
*                                  specified or MODE=SYNCECB is       * 00358700
*                                  specified and the request does not * 00358800
*                                  complete synchronously, then the   * 00358900
*                                  storage must remain non-pageable   * 00359000
*                                  until the specified ECB is posted  * 00359100
*                                  for the request.                   * 00359200
*                                                                     * 00359300
*                                                                     * 00359400
*                                                                     * 00359500
*                                                                     * 00359600
*                                                                     * 00359700
*                                                                     * 00359800
*                          ÝBUFALET=»xbufalet!NO_BUFALETº¨            * 00359900
*                              is the name (RS-type), or address in   * 00360000
*                              register (2)-(12), of an optional      * 00360100
*                              fullword input specifying the ALET     * 00360200
*                              value to be used in referencing all of * 00360300
*                              the buffers specified for BUFLIST      * 00360400
*                                                                     * 00360500
*                              DEFAULT: NO_BUFALET                    * 00360600
*                                                                     * 00360700
*                                                                     * 00360800
*                                                                     * 00360900
*                                                                     * 00361000
*                          ÝBUFADDRSIZE=»31!64º¨                      * 00361100
*                              is an optional keyword input that      * 00361200
*                              specifies whether a 31 or a 64 bit     * 00361300
*                              address is specified by a BUFLIST      * 00361400
*                              entry.                                 * 00361500
*                                                                     * 00361600
*                              DEFAULT: 31                            * 00361700
*                                                                     * 00361800
*                                                                     * 00361900
*                              ÝBUFADDRSIZE=31¨                       * 00362000
*                                  Indicates that the BUFLIST entry   * 00362100
*                                  is 31 bits in size.                * 00362200
*                                                                     * 00362300
*                              ÝBUFADDRSIZE=64¨¨                      * 00362400
*                                  Indicates that the BUFLIST entry   * 00362500
*                                  is 64 bits in size.                * 00362600
*                                                                     * 00362700
*                                                                     * 00362800
*                                                                     * 00362900
*                                                                     * 00363000
*                                                                     * 00363100
*                      ÝBUFADDRTYPE=REAL                              * 00363200
*                          Indicates that the buffer addresses        * 00363300
*                          specified in the BUFLIST list are real     * 00363400
*                          storage addresses.                         * 00363500
*                                                                     * 00363600
*                                                                     * 00363700
*                          ÝBUFADDRSIZE=»31!64º¨¨                     * 00363800
*                              is an optional keyword input that      * 00363900
*                              specifies whether a 31 or a 64 bit     * 00364000
*                              address is specified by a BUFLIST      * 00364100
*                              entry.                                 * 00364200
*                                                                     * 00364300
*                              DEFAULT: 31                            * 00364400
*                                                                     * 00364500
*                                                                     * 00364600
*                              ÝBUFADDRSIZE=31¨                       * 00364700
*                                  Indicates that the BUFLIST entry   * 00364800
*                                  is 31 bits in size.                * 00364900
*                                                                     * 00365000
*                              ÝBUFADDRSIZE=64¨¨                      * 00365100
*                                  Indicates that the BUFLIST entry   * 00365200
*                                  is 64 bits in size.                * 00365300
*                                                                     * 00365400
*                                                                     * 00365500
*                                                                     * 00365600
*                                                                     * 00365700
*                                                                     * 00365800
*                                                                     * 00365900
*                                                                     * 00366000
*                                                                     * 00366100
*                                                                     * 00366200
*                                                                     * 00366300
*                  BUFNUM=xbufnum                                     * 00366400
*                      is the name (RS-type), or address in register  * 00366500
*                      (2)-(12), of a required byte input specifying  * 00366600
*                      the number of buffers defined in the BUFLIST   * 00366700
*                      list.                                          * 00366800
*                                                                     * 00366900
*                      BUFNUM values must be in the range of 1 to 16. * 00367000
*                                                                     * 00367100
*                                                                     * 00367200
*                                                                     * 00367300
*                                                                     * 00367400
*              BUFFER=Ýxbuffer¨                                       * 00367500
*                  belongs to a set of mutually exclusive keys. It is * 00367600
*                  an output.  It is the name (RS-type), or address   * 00367700
*                  in register (2)-(12), of a virtual storage area to * 00367800
*                  receive output data from the request.  The BUFSIZE * 00367900
*                  keyword specifies the size of the buffer.  The     * 00368000
*                  BUFFER keyword supports 4 byte addresses only.     * 00368100
*                  The BUFFER keyword is mutually exclusive with the  * 00368200
*                  BUFADDRSIZE keyword.                               * 00368300
*                                                                     * 00368400
*                  For READ_LIST requests the length of the buffer    * 00368500
*                  must be a multiple of 4096 bytes between 4096 and  * 00368600
*                  65536 and the buffer must start on a 4096-byte     * 00368700
*                  (page) boundary.  The buffer may not reside in     * 00368800
*                  large pages.                                       * 00368900
*                                                                     * 00369000
*                  Upon successful completion of a READ_LIST request  * 00369100
*                  the BUFFER area contains, starting at offset zero  * 00369200
*                  in the first buffer, an array of elements each of  * 00369300
*                  which is constructed as follows (dependent on      * 00369400
*                  request options):                                  * 00369500
*                                                                     * 00369600
*                  When adjunct data is requested on a READ_LIST      * 00369700
*                  request the adjunct data for the first entry       * 00369800
*                  processed is returned in the storage area          * 00369900
*                  specified by ADJAREA.  The adjunct data for all    * 00370000
*                  other entries is returned in the BUFFER area.      * 00370100
*                  When list entry controls are requested the entry   * 00370200
*                  controls for the first entry processed is returned * 00370300
*                  in the answer area specified by ANSAREA.  The      * 00370400
*                  entry controls for all other entries is returned   * 00370500
*                  in the BUFFER area.                                * 00370600
*                                                                     * 00370700
*                                                                     * 00370800
*                  o   When TYPE=ENTDATA was specified:               * 00370900
*                                                                     * 00371000
*                      Entry data.                                    * 00371100
*                                                                     * 00371200
*                  o   When TYPE=ADJDATA was specified:               * 00371300
*                                                                     * 00371400
*                      Adunct data.                                   * 00371500
*                                                                     * 00371600
*                  o   When TYPE=ECONTROLS was specified:             * 00371700
*                                                                     * 00371800
*                      List entry controls.                           * 00371900
*                                                                     * 00372000
*                  o   When TYPE=(ENTDATA,ADJDATA) was specified:     * 00372100
*                                                                     * 00372200
*                      Entry data, followed by adjunct data.          * 00372300
*                                                                     * 00372400
*                  o   When TYPE=(ENTDATA,ECONTROLS) was specified:   * 00372500
*                                                                     * 00372600
*                      List entry controls, followed by entry data.   * 00372700
*                                                                     * 00372800
*                  o   When TYPE=(ADJDATA,ECONTROLS) was specified:   * 00372900
*                                                                     * 00373000
*                      List entry controls, followed by adjunct data. * 00373100
*                                                                     * 00373200
*                  o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was      * 00373300
*                      specified:                                     * 00373400
*                                                                     * 00373500
*                      List entry controls, followed by entry data,   * 00373600
*                      followed by adjunct data.                      * 00373700
*                                                                     * 00373800
*                                                                     * 00373900
*                                                                     * 00374000
*                  One array element is returned for each processed   * 00374100
*                  entry.  The number of elements returned in the     * 00374200
*                  BUFFER area is indicated in the answer area        * 00374300
*                  specified by ANSAREA.  An element length may be    * 00374400
*                  determined by considering the element make-up, the * 00374500
*                  structure element size, the number of elements in  * 00374600
*                  the entry, an adjunct data size of 64 bytes, and   * 00374700
*                  the length of list entry controls.  The length and * 00374800
*                  contents of list entry controls is defined by      * 00374900
*                  mapping macro IXLYLCTL.                            * 00375000
*                                                                     * 00375100
*                  BUFFER is mutually exclusive with BUFLIST.         * 00375200
*                                                                     * 00375300
*                                                                     * 00375400
*                  ÝPAGEABLE=»YES!NOº¨                                * 00375500
*                      is an optional keyword input that specifies    * 00375600
*                      whether or not the storage area specified by   * 00375700
*                      BUFFER resides in pageable storage.            * 00375800
*                                                                     * 00375900
*                      DEFAULT: YES                                   * 00376000
*                                                                     * 00376100
*                                                                     * 00376200
*                      ÝPAGEABLE=YES                                  * 00376300
*                          Indicates that the BUFFER area resides in  * 00376400
*                          pageable virtual storage.                  * 00376500
*                                                                     * 00376600
*                          This includes disabled reference storage,  * 00376700
*                          and may include storage that has the       * 00376800
*                          potential to become pageable It does not   * 00376900
*                          include implicitly non-pageable storage    * 00377000
*                          (such as is obtained from non-pageable     * 00377100
*                          subpools).                                 * 00377200
*                                                                     * 00377300
*                                                                     * 00377400
*                                                                     * 00377500
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00377600
*                              is the name (RS-type), or address in   * 00377700
*                              register (2)-(12), of an optional 8    * 00377800
*                              bit input containing the storage key   * 00377900
*                              to be used when referencing the        * 00378000
*                              storage area specified by BUFFER.      * 00378100
*                                                                     * 00378200
*                              The high order nibble contains the     * 00378300
*                              storage key, the low order nibble is   * 00378400
*                              ignored.  For example, set 'kkkk' in   * 00378500
*                              the binary bit string 'kkkkxxxx'B to   * 00378600
*                              correspond to the desired storage key. * 00378700
*                                                                     * 00378800
*                              If BUFSTGKEY is not specified, then    * 00378900
*                              all references to the BUFFER buffer    * 00379000
*                              storage are performed using the        * 00379100
*                              caller's PSW key.                      * 00379200
*                                                                     * 00379300
*                              DEFAULT: CALLERS_KEY                   * 00379400
*                                                                     * 00379500
*                                                                     * 00379600
*                                                                     * 00379700
*                      ÝPAGEABLE=NO¨                                  * 00379800
*                          Indicates that the BUFFER area resides in  * 00379900
*                          non-pageable virtual storage.              * 00380000
*                                                                     * 00380100
*                          This includes implicitly non-pageable      * 00380200
*                          storage areas.  If the virtual storage may * 00380300
*                          potentially become pageable, then the      * 00380400
*                          invoker is responsible for ensuring the    * 00380500
*                          virtual storage remains non-pageable for   * 00380600
*                          the duration of the request.               * 00380700
*                                                                     * 00380800
*                          If MODE=ASYNCTOKEN is specified or         * 00380900
*                          MODE=SYNCTOKEN is specified and the        * 00381000
*                          request does not complete synchronously,   * 00381100
*                          then the storage must remain non-pageable  * 00381200
*                          until completion of the corresponding      * 00381300
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00381400
*                          specified or MODE=SYNCEXIT is specified    * 00381500
*                          and the request does not complete          * 00381600
*                          synchronously, then the storage must       * 00381700
*                          remain non-pageable until the completion   * 00381800
*                          exit is driven for the request.  If        * 00381900
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00382000
*                          is specified and the request does not      * 00382100
*                          complete synchronously, then the storage   * 00382200
*                          must remain non-pageable until the         * 00382300
*                          specified ECB is posted for the request.   * 00382400
*                                                                     * 00382500
*                                                                     * 00382600
*                                                                     * 00382700
*                                                                     * 00382800
*                                                                     * 00382900
*                                                                     * 00383000
*                  BUFSIZE=xbufsize                                   * 00383100
*                      is the name (RS-type), or address in register  * 00383200
*                      (2)-(12), of a required fullword input         * 00383300
*                      specifying the length of the virtual storage   * 00383400
*                      area specified for BUFFER in bytes.            * 00383500
*                                                                     * 00383600
*                                                                     * 00383700
*                                                                     * 00383800
*                                                                     * 00383900
*                                                                     * 00384000
*                                                                     * 00384100
*              End of a set of mutually exclusive required keys.      * 00384200
*                                                                     * 00384300
*                                                                     * 00384400
*          REQUEST=DELETE_LIST                                        * 00384500
*              Requests that a list scan process be performed such    * 00384600
*              that entries meeting a specified set of criteria will  * 00384700
*              be removed from the list on which they reside and      * 00384800
*              returned to the pool of free entries for reuse.        * 00384900
*                                                                     * 00385000
*              Processing begins with the entry located by the        * 00385100
*              LOCATOR keyword and proceeds sequentially along the    * 00385200
*              list in the direction specified by DIRECTION until the * 00385300
*              head or tail of the list is reached, or if entry key   * 00385400
*              comparison or secondary key comparison is requested,   * 00385500
*              until the scan has progressed past all entries for     * 00385600
*              which those key comparisons could be successful.       * 00385700
*                                                                     * 00385800
*              Specifying AUTHCOMPARE=YES in conjunction with         * 00385900
*              AUTHCOMP causes list authority comparison for the      * 00386000
*              designated list to precede processing of any list      * 00386100
*              entries.  If the list authority verification fails,    * 00386200
*              the list authority, the list control information and   * 00386300
*              appropriate return and reason codes are provided.      * 00386400
*                                                                     * 00386500
*              Specifying LOCKINDEX in conjunction with LOCKOPER      * 00386600
*              causes lock comparison to precede processing of any    * 00386700
*              list entries.  LOCKINDEX may optionally be specified   * 00386800
*              to indicate the index of the serialized list lock to   * 00386900
*              be compared within the lock table for the list         * 00387000
*              structure.  If the lock comparison fails, the lock     * 00387100
*              table entry and appropriate return and reason codes    * 00387200
*              are provided.  Note that the use of serialized list    * 00387300
*              functions may be useful to serialize the list against  * 00387400
*              other concurrent operations that could otherwise       * 00387500
*              execute in parallel with the DELETE_LIST scan, since   * 00387600
*              these concurrent operations can cause entries on the   * 00387700
*              list to be skipped or scanned more than once during    * 00387800
*              DELETE_LIST processing (see below).                    * 00387900
*                                                                     * 00388000
*              Specifying LISTCOMPARE=YES in conjunction with LISTNUM * 00388100
*              causes list number comparison for the designated       * 00388200
*              starting list entry to precede processing of any list  * 00388300
*              entries.  If the designated list entry exists, but the * 00388400
*              list number verification fails, the list entry         * 00388500
*              controls and appropriate return and reason codes are   * 00388600
*              provided.                                              * 00388700
*                                                                     * 00388800
*              Specifying VERSCOMPARE=YES in conjunction with         * 00388900
*              VERSCOMP may optionally be used as a filter to         * 00389000
*              restrict processing to those entries with a version    * 00389100
*              number matching that specified by VERSCOMPTYPE.        * 00389200
*                                                                     * 00389300
*              Specifying KEYCOMPARE=YES in conjunction with ENTRYKEY * 00389400
*              causes entry key comparison to be performed as a       * 00389500
*              filter, as specified by KEYREQTYPE.                    * 00389600
*                                                                     * 00389700
*              Specifying SKEYCOMPARE=YES in conjunction with         * 00389800
*              SECONDARYKEY causes secondary key comparison to be     * 00389900
*              performed as a filter, as specified by SKEYREQTYPE.    * 00390000
*                                                                     * 00390100
*              DIRECTION may optionally be specified to indicate      * 00390200
*              direction of processing for traversing the list.       * 00390300
*                                                                     * 00390400
*              The absence of AUTHCOMPARE or LISTCOMPARE or           * 00390500
*              specifying AUTHCOMPARE=NO or LISTCOMPARE=NO indicates  * 00390600
*              no list authority or list number comparisons are to be * 00390700
*              performed before processing any list entries.  The     * 00390800
*              absence of LOCKINDEX indicates that no lock comparison * 00390900
*              is to be performed before processing any list entries. * 00391000
*                                                                     * 00391100
*              The absence of VERSCOMPARE, KEYCOMPARE, or             * 00391200
*              SKEYCOMPARE, or specifying VERSCOMPARE=NO,             * 00391300
*              KEYCOMPARE=NO or SKEYCOMPARE=NO indicates no version   * 00391400
*              number, entry key value, or secondary key value        * 00391500
*              comparisons are performed as a filter when selecting   * 00391600
*              entries to be processed.                               * 00391700
*                                                                     * 00391800
*              In order for any list entries to be processed, the     * 00391900
*              list number comparison, the list authority comparison, * 00392000
*              and the lock operation, if requested, must succeed.    * 00392100
*                                                                     * 00392200
*              In order for a particular list entry to be deleted,    * 00392300
*              the version number comparison, the entry key           * 00392400
*              comparison, and the secondary key comparison, if       * 00392500
*              requested, must succeed. Otherwise, no processing is   * 00392600
*              performed for the current entry and processing         * 00392700
*              continues with the next entry to be considered.        * 00392800
*                                                                     * 00392900
*              When the request completes successfully the number of  * 00393000
*              entries deleted for this request is returned in the    * 00393100
*              answer area specified by ANSAREA.  A DELETE_LIST       * 00393200
*              request may complete prematurely if the coupling       * 00393300
*              facility model dependent timeout criteria is exceeded. * 00393400
*              In this event appropriate return and reason codes, and * 00393500
*              the number of entries which have been deleted by the   * 00393600
*              current request are provided.  The list entry controls * 00393700
*              for the next appropriate entry in the list sequence to * 00393800
*              be processed is returned in ANSAREA.  These list entry * 00393900
*              controls may be used to designate the entry with which * 00394000
*              to resume processing on a subsequent, resuming         * 00394100
*              DELETE_LIST request, so as to continue the overall     * 00394200
*              scan process for the list.  Note, however, that the    * 00394300
*              disposition of this list entry may change as a result  * 00394400
*              of another operation (for example, the entry may be    * 00394500
*              deleted or moved to another position on the same list  * 00394600
*              or a different list) after the completion of the first * 00394700
*              DELETE_LIST request and before the invocation of the   * 00394800
*              resuming DELETE_LIST request. This may cause the       * 00394900
*              resuming DELETE_LIST request to fail, skip entries, or * 00395000
*              reprocess some entries that have already been          * 00395100
*              processed (see below). If a resuming DELETE_LIST       * 00395200
*              request fails with an "entry not found" condition, the * 00395300
*              list may not yet have been completely scanned and the  * 00395400
*              scan should be restarted from the beginning.           * 00395500
*                                                                     * 00395600
*              If other concurrent operations, such as other commands * 00395700
*              which can create entries, delete entries, or move      * 00395800
*              entries to a different position on the same list or a  * 00395900
*              different list, are permitted to execute while         * 00396000
*              DELETE_LIST processing is ongoing, this can result in  * 00396100
*              anomalous behavior for the overall DELETE_LIST scan    * 00396200
*              process. Entries on the list may be skipped or         * 00396300
*              reprocessed more than once, and this may result in     * 00396400
*              entries that should have been deleted being "missed"   * 00396500
*              by the scan.  For example:                             * 00396600
*                                                                     * 00396700
*                                                                     * 00396800
*              o   The list is being scanned in a left-to-right       * 00396900
*                  direction by a DELETE_LIST command, and a          * 00397000
*                  concurrently-executing command moves an entry on   * 00397100
*                  the list to the right.  If the moved entry was     * 00397200
*                  being processed by the DELETE_LIST command at the  * 00397300
*                  time it was moved, the intervening entries between * 00397400
*                  the moved entry's old position and its new         * 00397500
*                  position on the list may be skipped by the scan    * 00397600
*                  process.                                           * 00397700
*                                                                     * 00397800
*              o   The list is being scanned in a left-to-right       * 00397900
*                  direction by a DELETE_LIST command, and a          * 00398000
*                  concurrently executing command moves an entry on   * 00398100
*                  the list to the left.  If the moved entry was      * 00398200
*                  being processed by the DELETE_LIST command at the  * 00398300
*                  time it was moved, the intervening entries between * 00398400
*                  the moved entry's old position and its new         * 00398500
*                  position on the list may be reprocessed by the     * 00398600
*                  scan process.                                      * 00398700
*                                                                     * 00398800
*              o   An entry that matches the DELETE_LIST request's    * 00398900
*                  filtering criteria is created on, or moved into,   * 00399000
*                  the list that is being scanned.  Depending on      * 00399100
*                  whether the entry is placed onto the list "ahead   * 00399200
*                  of" or "behind" the ongoing scan process, the      * 00399300
*                  entry may or may not be deleted.                   * 00399400
*                                                                     * 00399500
*              o   Other examples are also possible.                  * 00399600
*                                                                     * 00399700
*                                                                     * 00399800
*              Also note that such anomalies can occur both within    * 00399900
*              the processing of a single DELETE_LIST request, and in * 00400000
*              the gap between the completion of one DELETE_LIST      * 00400100
*              request and the initiation of a subsequent, resuming   * 00400200
*              one.                                                   * 00400300
*                                                                     * 00400400
*              In order to avoid such anomalies, consider making use  * 00400500
*              of serialized list functions (LOCKINDEX and LOCKOPER)  * 00400600
*              to lock out concurrent operations for the duration of  * 00400700
*              the entire DELETE_LIST scan process, from before       * 00400800
*              initiating the first request, through any premature    * 00400900
*              completion and redrive processing that may occur,      * 00401000
*              until the scan process indicates that the list has     * 00401100
*              been processed to completion.                          * 00401200
*                                                                     * 00401300
*              Resumed requests are processed identically to          * 00401400
*              non-resumed requests, and must meet the same interface * 00401500
*              requirements as non-resumed requests.  Resumed         * 00401600
*              requests may in turn experience premature completion.  * 00401700
*                                                                     * 00401800
*              DELETE_LIST is only valid when the structure is        * 00401900
*              allocated in a CFLEVEL=9 or higher CF.                 * 00402000
*                                                                     * 00402100
*                                                                     * 00402200
*              ÝDIRECTION=»HEADTOTAIL!TAILTOHEADº¨                    * 00402300
*                  is an optional keyword input that indicates the    * 00402400
*                  direction of processing for traversing the given   * 00402500
*                  list.                                              * 00402600
*                  DEFAULT: HEADTOTAIL                                * 00402700
*                                                                     * 00402800
*                                                                     * 00402900
*                  DIRECTION=HEADTOTAIL                               * 00403000
*                      Indicates that processing should begin at the  * 00403100
*                      designated entry and proceed toward the tail   * 00403200
*                      of the list.                                   * 00403300
*                                                                     * 00403400
*                  DIRECTION=TAILTOHEAD                               * 00403500
*                      Indicates that processing should begin at the  * 00403600
*                      designated entry and proceed toward the head   * 00403700
*                      of the list.                                   * 00403800
*                      DEFAULT: HeadToTail                            * 00403900
*                                                                     * 00404000
*                                                                     * 00404100
*                                                                     * 00404200
*                                                                     * 00404300
*                                                                     * 00404400
*                                                                     * 00404500
*              LOCATOR=»CURSOR!ENTRYID!ENTRYNAME!UNKEYPOS!KEYPOSº     * 00404600
*                  is a required keyword input that specifies the     * 00404700
*                  location mechanism to be used to locate the first  * 00404800
*                  list entry to be processed.                        * 00404900
*                                                                     * 00405000
*                                                                     * 00405100
*                  LOCATOR=CURSOR                                     * 00405200
*                      Indicates that the list cursor should be used  * 00405300
*                      to locate the first list entry for the         * 00405400
*                      request.                                       * 00405500
*                                                                     * 00405600
*                                                                     * 00405700
*                      LISTNUM=xlistnum                               * 00405800
*                          is the name (RS-type), or address in       * 00405900
*                          register (2)-(12), of a required fullword  * 00406000
*                          input designates the number of the list on * 00406100
*                          which the starting list entry resides.     * 00406200
*                                                                     * 00406300
*                                                                     * 00406400
*                                                                     * 00406500
*                                                                     * 00406600
*                      ÝKEYSCANTYPE=»ENTRY!SECONDARYº¨                * 00406700
*                          is an optional keyword input that          * 00406800
*                          indicates which key ordering               * 00406900
*                          (Entry/Secondary) is to be used to scan    * 00407000
*                          for entries on the list.                   * 00407100
*                          DEFAULT: ENTRY                             * 00407200
*                                                                     * 00407300
*                                                                     * 00407400
*                          KEYSCANTYPE=ENTRY                          * 00407500
*                              indicates that entry key ordering will * 00407600
*                              be used for scanning the list.         * 00407700
*                                                                     * 00407800
*                          KEYSCANTYPE=SECONDARY                      * 00407900
*                              indicates that secondary key ordering  * 00408000
*                              will be used for scanning the list.    * 00408100
*                                                                     * 00408200
*                                                                     * 00408300
*                                                                     * 00408400
*                                                                     * 00408500
*                                                                     * 00408600
*                                                                     * 00408700
*                      ÝAUTHCOMPARE=»NO!YESº                          * 00408800
*                          is an optional keyword input which         * 00408900
*                          determines whether the list authority      * 00409000
*                          comparison is to be used to determine if   * 00409100
*                          entries on the list should be processed.   * 00409200
*                          DEFAULT: NO                                * 00409300
*                                                                     * 00409400
*                                                                     * 00409500
*                          ÝAUTHCOMPARE=NO¨                           * 00409600
*                              indicates no list authority comparison * 00409700
*                              is to be performed before processing   * 00409800
*                              any entries on the list.               * 00409900
*                                                                     * 00410000
*                          ÝAUTHCOMPARE=YES                           * 00410100
*                              indicates that list authority          * 00410200
*                              comparison should precede processing   * 00410300
*                              of any entries on the list.            * 00410400
*                                                                     * 00410500
*                                                                     * 00410600
*                              AUTHCOMP=xauthcomp                     * 00410700
*                                  is the name (RS-type), or address  * 00410800
*                                  in register (2)-(12), of a         * 00410900
*                                  required 16 character input which  * 00411000
*                                  specifies a value to be compared   * 00411100
*                                  to the list authority value for    * 00411200
*                                  the designated list.  If the       * 00411300
*                                  condition specified by             * 00411400
*                                  AUTHCOMPTYPE is not met then the   * 00411500
*                                  IXLLSTM operation is terminated,   * 00411600
*                                  and appropriate return and reason  * 00411700
*                                  codes are provided to the invoker. * 00411800
*                                                                     * 00411900
*                                                                     * 00412000
*                                  ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨ * 00412100
*                                      ¨                              * 00412200
*                                      is an optional keyword input   * 00412300
*                                      which specifies how the list   * 00412400
*                                      authority comparison is to be  * 00412500
*                                      performed.                     * 00412600
*                                                                     * 00412700
*                                      DEFAULT: EQUAL                 * 00412800
*                                                                     * 00412900
*                                                                     * 00413000
*                                      AUTHCOMPTYPE=EQUAL             * 00413100
*                                          The list authority for the * 00413200
*                                          list specified by LISTNUM  * 00413300
*                                          must be equal to the value * 00413400
*                                          specified for AUTHCOMP.    * 00413500
*                                                                     * 00413600
*                                                                     * 00413700
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00413800
*                                          The list authority for the * 00413900
*                                          list specified by LISTNUM  * 00414000
*                                          must be less than or equal * 00414100
*                                          to the value specified for * 00414200
*                                          AUTHCOMP.                  * 00414300
*                                                                     * 00414400
*                                                                     * 00414500
*                                                                     * 00414600
*                                                                     * 00414700
*                                                                     * 00414800
*                                                                     * 00414900
*                                                                     * 00415000
*                                                                     * 00415100
*                                                                     * 00415200
*                                                                     * 00415300
*                                                                     * 00415400
*                                                                     * 00415500
*                      ÝKEYCOMPARE=»NO!YESº                           * 00415600
*                          is an optional keyword input that          * 00415700
*                          determines whether the key value of an     * 00415800
*                          existing keyed list entry is to be         * 00415900
*                          compared to determine if this entry should * 00416000
*                          be selected for processing.                * 00416100
*                          DEFAULT: NO                                * 00416200
*                                                                     * 00416300
*                                                                     * 00416400
*                          ÝKEYCOMPARE=NO¨                            * 00416500
*                              Indicates that no entry key comparison * 00416600
*                              will be performed to determine if this * 00416700
*                              entry should be processed.             * 00416800
*                                                                     * 00416900
*                          ÝKEYCOMPARE=YES                            * 00417000
*                              Indicates that entry key comparison    * 00417100
*                              will be performed based on the         * 00417200
*                              KEYREQTYPE specified to determine if   * 00417300
*                              this entry is selectable for           * 00417400
*                              processing.                            * 00417500
*                                                                     * 00417600
*                              KEYCOMPARE=YES is ignored if the       * 00417700
*                              target structure does not support      * 00417800
*                              keyed entries.                         * 00417900
*                                                                     * 00418000
*                                                                     * 00418100
*                              ENTRYKEY=xentrykey                     * 00418200
*                                  is the name (RS-type), or address  * 00418300
*                                  in register (2)-(12), of a         * 00418400
*                                  required 16 character input that   * 00418500
*                                  specifies the key to be used to    * 00418600
*                                  compare to the entry key of the    * 00418700
*                                  list entry.  If the condition      * 00418800
*                                  specified by KEYREQTYPE is not met * 00418900
*                                  for the current list entry then no * 00419000
*                                  processing is performed for the    * 00419100
*                                  current entry, and processing      * 00419200
*                                  continues with the next entry to   * 00419300
*                                  be considered.                     * 00419400
*                                                                     * 00419500
*                                                                     * 00419600
*                                                                     * 00419700
*                                                                     * 00419800
*                              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATER * 00419900
*                                  OREQUAL!RANGEº¨¨                   * 00420000
*                                  is an optional keyword input which * 00420100
*                                  specifies how entry key comparison * 00420200
*                                  is to be performed on an existing  * 00420300
*                                  keyed list entry to determine if   * 00420400
*                                  the entry is selectable for        * 00420500
*                                  processing.                        * 00420600
*                                  DEFAULT: EQUAL                     * 00420700
*                                                                     * 00420800
*                                                                     * 00420900
*                                  ÝKEYREQTYPE=EQUAL¨                 * 00421000
*                                      a list entry must have an      * 00421100
*                                      entry key equal to the value   * 00421200
*                                      specified by ENTRYKEY.         * 00421300
*                                                                     * 00421400
*                                  ÝKEYREQTYPE=LESSOREQUAL¨           * 00421500
*                                      a list entry must have an      * 00421600
*                                      entry key less than or equal   * 00421700
*                                      to the value specified by      * 00421800
*                                      ENTRYKEY.                      * 00421900
*                                                                     * 00422000
*                                  ÝKEYREQTYPE=GREATEROREQUAL¨        * 00422100
*                                      a list entry must have an      * 00422200
*                                      entry key greater than or      * 00422300
*                                      equal to the value specified   * 00422400
*                                      by ENTRYKEY.                   * 00422500
*                                                                     * 00422600
*                                  ÝKEYREQTYPE=RANGE                  * 00422700
*                                      a list entry must have an      * 00422800
*                                      entry key within a specified   * 00422900
*                                      range of values. The ENTRYKEY  * 00423000
*                                      specified will be used as the  * 00423100
*                                      beginning of the range of key  * 00423200
*                                      values that will be compared   * 00423300
*                                      with the existing entry key.   * 00423400
*                                      KEYRANGEEND will be used as    * 00423500
*                                      the ending value.  A list      * 00423600
*                                      entry must have an entry key   * 00423700
*                                      value within the specified     * 00423800
*                                      entry key range, inclusive,    * 00423900
*                                      for it to be selectable.       * 00424000
*                                                                     * 00424100
*                                                                     * 00424200
*                                      KEYRANGEEND=xkeyrangeend¨¨     * 00424300
*                                          is the name (RS-type), or  * 00424400
*                                          address in register        * 00424500
*                                          (2)-(12), of a required 16 * 00424600
*                                          character input specifies  * 00424700
*                                          the ending value for the   * 00424800
*                                          range of keys to be        * 00424900
*                                          compared to the entry key  * 00425000
*                                          of the designated list     * 00425100
*                                          entry.                     * 00425200
*                                                                     * 00425300
*                                                                     * 00425400
*                                                                     * 00425500
*                                                                     * 00425600
*                                                                     * 00425700
*                                                                     * 00425800
*                                                                     * 00425900
*                                                                     * 00426000
*                                                                     * 00426100
*                                                                     * 00426200
*                                                                     * 00426300
*                                                                     * 00426400
*                      ÝSKEYCOMPARE=»NO!YESº                          * 00426500
*                          is an optional keyword input that          * 00426600
*                          determines whether the secondary key value * 00426700
*                          of an existing list entry is to be         * 00426800
*                          compared to determine if this entry should * 00426900
*                          be selected for processing.                * 00427000
*                          DEFAULT: NO                                * 00427100
*                                                                     * 00427200
*                                                                     * 00427300
*                          ÝSKEYCOMPARE=NO¨                           * 00427400
*                              Indicates that no secondary key        * 00427500
*                              comparison will be performed to        * 00427600
*                              determine if this entry should be      * 00427700
*                              processed.                             * 00427800
*                                                                     * 00427900
*                          ÝSKEYCOMPARE=YES                           * 00428000
*                              Indicates that secondary key           * 00428100
*                              comparison will be performed based on  * 00428200
*                              the SKEYREQTYPE specified to determine * 00428300
*                              if this entry is selectable for        * 00428400
*                              processing.                            * 00428500
*                                                                     * 00428600
*                              SKEYCOMPARE=YES is ignored if the      * 00428700
*                              target structure was not allocated     * 00428800
*                              with secondary keys.                   * 00428900
*                                                                     * 00429000
*                                                                     * 00429100
*                              SECONDARYKEY=xsecondarykey             * 00429200
*                                  is the name (RS-type), or address  * 00429300
*                                  in register (2)-(12), of a         * 00429400
*                                  required 32 character input that   * 00429500
*                                  specifies the secondary key value  * 00429600
*                                  to be used to compare to the       * 00429700
*                                  secondary key of the list entry.   * 00429800
*                                  If the condition specified by      * 00429900
*                                  SKEYREQTYPE is not met for the     * 00430000
*                                  current list entry then no         * 00430100
*                                  processing is performed for the    * 00430200
*                                  current entry, and processing      * 00430300
*                                  continues with the next entry to   * 00430400
*                                  be considered.                     * 00430500
*                                                                     * 00430600
*                                                                     * 00430700
*                                                                     * 00430800
*                                                                     * 00430900
*                              ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATE * 00431000
*                                  ROREQUAL!RANGEº¨¨                  * 00431100
*                                  is an optional keyword input which * 00431200
*                                  specifies how an existing keyed    * 00431300
*                                  list entry with secondary keys is  * 00431400
*                                  located and/or how secondary key   * 00431500
*                                  comparison is to be performed on   * 00431600
*                                  an existing keyed list entry to    * 00431700
*                                  determine if the entry is          * 00431800
*                                  selectable for processing.         * 00431900
*                                  DEFAULT: EQUAL                     * 00432000
*                                                                     * 00432100
*                                                                     * 00432200
*                                  ÝSKEYREQTYPE=EQUAL¨                * 00432300
*                                      a list entry must have a       * 00432400
*                                      secondary key equal to the     * 00432500
*                                      value specified by             * 00432600
*                                      SECONDARYKEY.                  * 00432700
*                                                                     * 00432800
*                                  ÝSKEYREQTYPE=LESSOREQUAL¨          * 00432900
*                                      a list entry must have a       * 00433000
*                                      secondary key less than or     * 00433100
*                                      equal to the value specified   * 00433200
*                                      by SECONDARYKEY.               * 00433300
*                                                                     * 00433400
*                                  ÝSKEYREQTYPE=GREATEROREQUAL¨       * 00433500
*                                      a list entry must have a       * 00433600
*                                      secondary key greater than or  * 00433700
*                                      equal to the value specified   * 00433800
*                                      by SECONDARYKEY.               * 00433900
*                                                                     * 00434000
*                                  ÝSKEYREQTYPE=RANGE                 * 00434100
*                                      a list entry must have a       * 00434200
*                                      secondary key within a         * 00434300
*                                      specified range of values. The * 00434400
*                                      SECONDARYKEY specified will be * 00434500
*                                      used as the beginning of the   * 00434600
*                                      range of secondary key values  * 00434700
*                                      that will be compared with the * 00434800
*                                      existing secondary key.        * 00434900
*                                      SKEYRANGEEND will be used as   * 00435000
*                                      the ending value.  A list      * 00435100
*                                      entry must have a secondary    * 00435200
*                                      key value within the specified * 00435300
*                                      secondary key range,           * 00435400
*                                      inclusive, for it to be        * 00435500
*                                      selectable.                    * 00435600
*                                                                     * 00435700
*                                                                     * 00435800
*                                      SKEYRANGEEND=xskeyrangeend¨¨   * 00435900
*                                                                     * 00436000
*                                          is the name (RS-type), or  * 00436100
*                                          address in register        * 00436200
*                                          (2)-(12), of a required 32 * 00436300
*                                          character input which      * 00436400
*                                          specifies the ending value * 00436500
*                                          for the range of secondary * 00436600
*                                          keys to be compared to the * 00436700
*                                          secondary key of the list  * 00436800
*                                          entry.                     * 00436900
*                                                                     * 00437000
*                                                                     * 00437100
*                                                                     * 00437200
*                                                                     * 00437300
*                                                                     * 00437400
*                                                                     * 00437500
*                                                                     * 00437600
*                                                                     * 00437700
*                                                                     * 00437800
*                                                                     * 00437900
*                                                                     * 00438000
*                  LOCATOR=ENTRYID                                    * 00438100
*                      Indicates that the EntryID should be used to   * 00438200
*                      locate the entry to be used as the starting    * 00438300
*                      entry for the request.  EntryIDs may be either * 00438400
*                      assigned or provided by the user.  User        * 00438500
*                      provided EntryIDs must be specified if         * 00438600
*                      ENTRYIDTYPE=USER was specified on the IXLCONN  * 00438700
*                      request.                                       * 00438800
*                                                                     * 00438900
*                                                                     * 00439000
*                      ENTRYID=xentryid                               * 00439100
*                          is the name (RS-type), or address in       * 00439200
*                          register (2)-(12), of a required 12        * 00439300
*                          character input specifying the list entry  * 00439400
*                          id of the entry to be used as the starting * 00439500
*                          point of the request.  If the list         * 00439600
*                          comparison fails then the IXLLSTM          * 00439700
*                          operation is terminated, and the list      * 00439800
*                          entry controls along with the appropriate  * 00439900
*                          return and reason codes are provided to    * 00440000
*                          the invoker.                               * 00440100
*                                                                     * 00440200
*                                                                     * 00440300
*                                                                     * 00440400
*                                                                     * 00440500
*                      ÝKEYSCANTYPE=»ENTRY!SECONDARYº¨                * 00440600
*                          is an optional keyword input that          * 00440700
*                          indicates which key ordering               * 00440800
*                          (Entry/Secondary) is to be used to scan    * 00440900
*                          for entries on the list.                   * 00441000
*                          DEFAULT: ENTRY                             * 00441100
*                                                                     * 00441200
*                                                                     * 00441300
*                          KEYSCANTYPE=ENTRY                          * 00441400
*                              indicates that entry key ordering will * 00441500
*                              be used for scanning the list.         * 00441600
*                                                                     * 00441700
*                          KEYSCANTYPE=SECONDARY                      * 00441800
*                              indicates that secondary key ordering  * 00441900
*                              will be used for scanning the list.    * 00442000
*                                                                     * 00442100
*                                                                     * 00442200
*                                                                     * 00442300
*                                                                     * 00442400
*                                                                     * 00442500
*                                                                     * 00442600
*                      ÝLISTCOMPARE=»NO!YESº                          * 00442700
*                          is an optional keyword input which         * 00442800
*                          determines if the list number is to be     * 00442900
*                          compared to determine if entries should be * 00443000
*                          processed.                                 * 00443100
*                          DEFAULT: NO                                * 00443200
*                                                                     * 00443300
*                                                                     * 00443400
*                          ÝLISTCOMPARE=NO¨                           * 00443500
*                              indicates no list number comparison    * 00443600
*                              should precede processing of any list  * 00443700
*                              entries.                               * 00443800
*                                                                     * 00443900
*                          ÝLISTCOMPARE=YES                           * 00444000
*                              indicates that list number comparison  * 00444100
*                              should precede processing of any list  * 00444200
*                              entries.                               * 00444300
*                                                                     * 00444400
*                                                                     * 00444500
*                              LISTNUM=xlistnum                       * 00444600
*                                  is the name (RS-type), or address  * 00444700
*                                  in register (2)-(12), of a         * 00444800
*                                  required fullword input designates * 00444900
*                                  the number of the list on which    * 00445000
*                                  the entries to be processed        * 00445100
*                                  reside. If the list comparison     * 00445200
*                                  fails then the IXLLSTM operation   * 00445300
*                                  is terminated, and the list entry  * 00445400
*                                  controls along with the            * 00445500
*                                  appropriate return and reason      * 00445600
*                                  codes are provided to the invoker. * 00445700
*                                                                     * 00445800
*                                                                     * 00445900
*                                                                     * 00446000
*                                                                     * 00446100
*                              ÝAUTHCOMPARE=»NO!YESº                  * 00446200
*                                  is an optional keyword input which * 00446300
*                                  determines whether the list        * 00446400
*                                  authority comparison is to be used * 00446500
*                                  to determine if entries on the     * 00446600
*                                  list should be processed.          * 00446700
*                                  DEFAULT: NO                        * 00446800
*                                                                     * 00446900
*                                                                     * 00447000
*                                  ÝAUTHCOMPARE=NO¨                   * 00447100
*                                      indicates no list authority    * 00447200
*                                      comparison is to be performed  * 00447300
*                                      before processing any entries  * 00447400
*                                      on the list.                   * 00447500
*                                                                     * 00447600
*                                  ÝAUTHCOMPARE=YES                   * 00447700
*                                      indicates that list authority  * 00447800
*                                      comparison should precede      * 00447900
*                                      processing of any entries on   * 00448000
*                                      the list.                      * 00448100
*                                                                     * 00448200
*                                                                     * 00448300
*                                      AUTHCOMP=xauthcomp             * 00448400
*                                          is the name (RS-type), or  * 00448500
*                                          address in register        * 00448600
*                                          (2)-(12), of a required 16 * 00448700
*                                          character input which      * 00448800
*                                          specifies a value to be    * 00448900
*                                          compared to the list       * 00449000
*                                          authority value for the    * 00449100
*                                          designated list.  If the   * 00449200
*                                          condition specified by     * 00449300
*                                          AUTHCOMPTYPE is not met    * 00449400
*                                          then the IXLLSTM operation * 00449500
*                                          is terminated with no      * 00449600
*                                          resultant change to the    * 00449700
*                                          structure, and appropriate * 00449800
*                                          return and reason codes    * 00449900
*                                          are provided to the        * 00450000
*                                          invoker.                   * 00450100
*                                                                     * 00450200
*                                                                     * 00450300
*                                          ÝAUTHCOMPTYPE=»EQUAL!LESSO * 00450400
*                                              REQUALº¨¨¨             * 00450500
*                                              is an optional keyword * 00450600
*                                              input which specifies  * 00450700
*                                              how the list authority * 00450800
*                                              comparison is to be    * 00450900
*                                              performed.             * 00451000
*                                                                     * 00451100
*                                              DEFAULT: EQUAL         * 00451200
*                                                                     * 00451300
*                                                                     * 00451400
*                                              AUTHCOMPTYPE=EQUAL     * 00451500
*                                                  The list authority * 00451600
*                                                  for the list       * 00451700
*                                                  specified by       * 00451800
*                                                  LISTNUM must be    * 00451900
*                                                  equal to the value * 00452000
*                                                  specified for      * 00452100
*                                                  AUTHCOMP.          * 00452200
*                                                                     * 00452300
*                                                                     * 00452400
*                                              AUTHCOMPTYPE=LESSOREQU * 00452500
*                                                  AL                 * 00452600
*                                                  The list authority * 00452700
*                                                  for the list       * 00452800
*                                                  specified by       * 00452900
*                                                  LISTNUM must be    * 00453000
*                                                  less than or equal * 00453100
*                                                  to the value       * 00453200
*                                                  specified for      * 00453300
*                                                  AUTHCOMP.          * 00453400
*                                                                     * 00453500
*                                                                     * 00453600
*                                                                     * 00453700
*                                                                     * 00453800
*                                                                     * 00453900
*                                                                     * 00454000
*                                                                     * 00454100
*                                                                     * 00454200
*                                                                     * 00454300
*                                                                     * 00454400
*                                                                     * 00454500
*                                                                     * 00454600
*                                                                     * 00454700
*                                                                     * 00454800
*                                                                     * 00454900
*                                                                     * 00455000
*                      ÝKEYCOMPARE=»NO!YESº                           * 00455100
*                          is an optional keyword input that          * 00455200
*                          determines whether the key value of an     * 00455300
*                          existing keyed list entry is to be         * 00455400
*                          compared to determine if this entry should * 00455500
*                          be selected for processing.                * 00455600
*                          DEFAULT: NO                                * 00455700
*                                                                     * 00455800
*                                                                     * 00455900
*                          ÝKEYCOMPARE=NO¨                            * 00456000
*                              Indicates that no entry key comparison * 00456100
*                              will be performed to determine if this * 00456200
*                              entry should be processed.             * 00456300
*                                                                     * 00456400
*                          ÝKEYCOMPARE=YES                            * 00456500
*                              Indicates that entry key comparison    * 00456600
*                              will be performed based on the         * 00456700
*                              KEYREQTYPE specified to determine if   * 00456800
*                              this entry is selectable for           * 00456900
*                              processing.                            * 00457000
*                                                                     * 00457100
*                              KEYCOMPARE=YES is ignored if the       * 00457200
*                              target structure does not support      * 00457300
*                              keyed entries.                         * 00457400
*                                                                     * 00457500
*                                                                     * 00457600
*                              ENTRYKEY=xentrykey                     * 00457700
*                                  is the name (RS-type), or address  * 00457800
*                                  in register (2)-(12), of a         * 00457900
*                                  required 16 character input that   * 00458000
*                                  specifies the key to be used to    * 00458100
*                                  compare to the entry key of the    * 00458200
*                                  list entry.  If the condition      * 00458300
*                                  specified by KEYREQTYPE is not met * 00458400
*                                  for the current list entry then no * 00458500
*                                  processing is performed for the    * 00458600
*                                  current entry, and processing      * 00458700
*                                  continues with the next entry to   * 00458800
*                                  be considered.                     * 00458900
*                                                                     * 00459000
*                                                                     * 00459100
*                                                                     * 00459200
*                                                                     * 00459300
*                              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATER * 00459400
*                                  OREQUAL!RANGEº¨¨                   * 00459500
*                                  is an optional keyword input which * 00459600
*                                  specifies how entry key comparison * 00459700
*                                  is to be performed on an existing  * 00459800
*                                  keyed list entry to determine if   * 00459900
*                                  the entry is selectable for        * 00460000
*                                  processing.                        * 00460100
*                                  DEFAULT: EQUAL                     * 00460200
*                                                                     * 00460300
*                                                                     * 00460400
*                                  ÝKEYREQTYPE=EQUAL¨                 * 00460500
*                                      a list entry must have an      * 00460600
*                                      entry key equal to the value   * 00460700
*                                      specified by ENTRYKEY.         * 00460800
*                                                                     * 00460900
*                                  ÝKEYREQTYPE=LESSOREQUAL¨           * 00461000
*                                      a list entry must have an      * 00461100
*                                      entry key less than or equal   * 00461200
*                                      to the value specified by      * 00461300
*                                      ENTRYKEY.                      * 00461400
*                                                                     * 00461500
*                                  ÝKEYREQTYPE=GREATEROREQUAL¨        * 00461600
*                                      a list entry must have an      * 00461700
*                                      entry key greater than or      * 00461800
*                                      equal to the value specified   * 00461900
*                                      by ENTRYKEY.                   * 00462000
*                                                                     * 00462100
*                                  ÝKEYREQTYPE=RANGE                  * 00462200
*                                      a list entry must have an      * 00462300
*                                      entry key within a specified   * 00462400
*                                      range of values. The ENTRYKEY  * 00462500
*                                      specified will be used as the  * 00462600
*                                      beginning of the range of key  * 00462700
*                                      values that will be compared   * 00462800
*                                      with the existing entry key.   * 00462900
*                                      KEYRANGEEND will be used as    * 00463000
*                                      the ending value.  A list      * 00463100
*                                      entry must have an entry key   * 00463200
*                                      value within the specified     * 00463300
*                                      entry key range, inclusive,    * 00463400
*                                      for it to be selectable.       * 00463500
*                                                                     * 00463600
*                                                                     * 00463700
*                                      KEYRANGEEND=xkeyrangeend¨¨     * 00463800
*                                          is the name (RS-type), or  * 00463900
*                                          address in register        * 00464000
*                                          (2)-(12), of a required 16 * 00464100
*                                          character input specifies  * 00464200
*                                          the ending value for the   * 00464300
*                                          range of keys to be        * 00464400
*                                          compared to the entry key  * 00464500
*                                          of the list entry.         * 00464600
*                                                                     * 00464700
*                                                                     * 00464800
*                                                                     * 00464900
*                                                                     * 00465000
*                                                                     * 00465100
*                                                                     * 00465200
*                                                                     * 00465300
*                                                                     * 00465400
*                                                                     * 00465500
*                                                                     * 00465600
*                                                                     * 00465700
*                                                                     * 00465800
*                      ÝSKEYCOMPARE=»NO!YESº                          * 00465900
*                          is an optional keyword input that          * 00466000
*                          determines whether the secondary key value * 00466100
*                          of an existing keyed list entry is to be   * 00466200
*                          compared to determine if this entry should * 00466300
*                          be selected for processing.                * 00466400
*                          DEFAULT: NO                                * 00466500
*                                                                     * 00466600
*                                                                     * 00466700
*                          ÝSKEYCOMPARE=NO¨                           * 00466800
*                              Indicates that no secondary key        * 00466900
*                              comparison will be performed to        * 00467000
*                              determine if this entry should be      * 00467100
*                              processed.                             * 00467200
*                                                                     * 00467300
*                          ÝSKEYCOMPARE=YES                           * 00467400
*                              Indicates that secondary key           * 00467500
*                              comparison will be performed based on  * 00467600
*                              the SKEYREQTYPE specified to determine * 00467700
*                              if this entry is selectable for        * 00467800
*                              processing.                            * 00467900
*                                                                     * 00468000
*                              SKEYCOMPARE=YES is ignored if the      * 00468100
*                              target structure was not allocated     * 00468200
*                              with secondary keys.                   * 00468300
*                                                                     * 00468400
*                                                                     * 00468500
*                              SECONDARYKEY=xsecondarykey             * 00468600
*                                  is the name (RS-type), or address  * 00468700
*                                  in register (2)-(12), of a         * 00468800
*                                  required 32 character input that   * 00468900
*                                  specifies the secondary key to be  * 00469000
*                                  used to compare to the secondary   * 00469100
*                                  key.  If the condition specified   * 00469200
*                                  by SKEYREQTYPE is not met for the  * 00469300
*                                  current list entry then no         * 00469400
*                                  processing is performed for the    * 00469500
*                                  current entry, and processing      * 00469600
*                                  continues with the next entry to   * 00469700
*                                  be considered.                     * 00469800
*                                                                     * 00469900
*                                                                     * 00470000
*                                                                     * 00470100
*                                                                     * 00470200
*                              ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATE * 00470300
*                                  ROREQUAL!RANGEº¨¨                  * 00470400
*                                  is an optional keyword input which * 00470500
*                                  specifies how secondary key        * 00470600
*                                  comparison is to be performed on   * 00470700
*                                  an existing keyed list entry to    * 00470800
*                                  determine if the entry is          * 00470900
*                                  selectable for processing.         * 00471000
*                                  DEFAULT: EQUAL                     * 00471100
*                                                                     * 00471200
*                                                                     * 00471300
*                                  ÝSKEYREQTYPE=EQUAL¨                * 00471400
*                                      a list entry must have a       * 00471500
*                                      secondary key equal to the     * 00471600
*                                      value specified by             * 00471700
*                                      SECONDARYKEY.                  * 00471800
*                                                                     * 00471900
*                                  ÝSKEYREQTYPE=LESSOREQUAL¨          * 00472000
*                                      a list entry must have a       * 00472100
*                                      secondary key less than or     * 00472200
*                                      equal to the value specified   * 00472300
*                                      by SECONDARYKEY.               * 00472400
*                                                                     * 00472500
*                                  ÝSKEYREQTYPE=GREATEROREQUAL¨       * 00472600
*                                      a list entry must have a       * 00472700
*                                      secondary key greater than or  * 00472800
*                                      equal to the value specified   * 00472900
*                                      by SECONDARYKEY.               * 00473000
*                                                                     * 00473100
*                                  ÝSKEYREQTYPE=RANGE                 * 00473200
*                                      a list entry must have a       * 00473300
*                                      secondary key within a         * 00473400
*                                      specified range of values. The * 00473500
*                                      SECONDARYKEY specified will be * 00473600
*                                      used as the beginning of the   * 00473700
*                                      range of secondary key values  * 00473800
*                                      that will be compared with the * 00473900
*                                      existing secondary key.        * 00474000
*                                      SKEYRANGEEND will be used as   * 00474100
*                                      the ending value.  A list      * 00474200
*                                      entry must have a secondary    * 00474300
*                                      key value within the specified * 00474400
*                                      secondary key range,           * 00474500
*                                      inclusive, for it to be        * 00474600
*                                      selectable.                    * 00474700
*                                                                     * 00474800
*                                                                     * 00474900
*                                      SKEYRANGEEND=xskeyrangeend¨¨   * 00475000
*                                                                     * 00475100
*                                          is the name (RS-type), or  * 00475200
*                                          address in register        * 00475300
*                                          (2)-(12), of a required 32 * 00475400
*                                          character input which      * 00475500
*                                          specifies the ending value * 00475600
*                                          for the range of secondary * 00475700
*                                          keys to be compared to the * 00475800
*                                          secondary key of the list  * 00475900
*                                          entry.                     * 00476000
*                                                                     * 00476100
*                                                                     * 00476200
*                                                                     * 00476300
*                                                                     * 00476400
*                                                                     * 00476500
*                                                                     * 00476600
*                                                                     * 00476700
*                                                                     * 00476800
*                                                                     * 00476900
*                                                                     * 00477000
*                                                                     * 00477100
*                  LOCATOR=ENTRYNAME                                  * 00477200
*                      Indicates that the entry name should be used   * 00477300
*                      to designate the entry yo be used as the       * 00477400
*                      starting point of the request.  ENTRYNAME may  * 00477500
*                      only be specified for structures that support  * 00477600
*                      named entries.                                 * 00477700
*                                                                     * 00477800
*                                                                     * 00477900
*                      ENTRYNAME=xentryname                           * 00478000
*                          is the name (RS-type), or address in       * 00478100
*                          register (2)-(12), of a required 16        * 00478200
*                          character input specifying the list entry  * 00478300
*                          name of the entry to be used as the        * 00478400
*                          starting entry for the request.            * 00478500
*                                                                     * 00478600
*                                                                     * 00478700
*                                                                     * 00478800
*                                                                     * 00478900
*                      ÝLISTCOMPARE=»NO!YESº                          * 00479000
*                          is an optional keyword input which         * 00479100
*                          determines if the list number is to be     * 00479200
*                          compared to determine if entries should be * 00479300
*                          processed.                                 * 00479400
*                          DEFAULT: NO                                * 00479500
*                                                                     * 00479600
*                                                                     * 00479700
*                          ÝLISTCOMPARE=NO¨                           * 00479800
*                              indicates no list number criteria is   * 00479900
*                              to be applied when selecting entries   * 00480000
*                              to be processed.                       * 00480100
*                                                                     * 00480200
*                          ÝLISTCOMPARE=YES                           * 00480300
*                              indicates that list number comparison  * 00480400
*                              should precede processing of any list  * 00480500
*                              entries.                               * 00480600
*                                                                     * 00480700
*                                                                     * 00480800
*                              LISTNUM=xlistnum                       * 00480900
*                                  is the name (RS-type), or address  * 00481000
*                                  in register (2)-(12), of a         * 00481100
*                                  required fullword input that       * 00481200
*                                  designates the number of the list  * 00481300
*                                  on which the entries to be         * 00481400
*                                  processed reside.  If the list     * 00481500
*                                  comparison fails then the IXLLSTM  * 00481600
*                                  operation is terminated, and the   * 00481700
*                                  list entry controls along with the * 00481800
*                                  appropriate return and reason      * 00481900
*                                  codes are provided to the invoker. * 00482000
*                                                                     * 00482100
*                                                                     * 00482200
*                                                                     * 00482300
*                                                                     * 00482400
*                              ÝAUTHCOMPARE=»NO!YESº                  * 00482500
*                                  is an optional keyword input which * 00482600
*                                  determines whether the list        * 00482700
*                                  authority comparison is to be used * 00482800
*                                  to determine if entries on the     * 00482900
*                                  list should be processed.          * 00483000
*                                  DEFAULT: NO                        * 00483100
*                                                                     * 00483200
*                                                                     * 00483300
*                                  ÝAUTHCOMPARE=NO¨                   * 00483400
*                                      indicates no list authority    * 00483500
*                                      comparison is to be performed  * 00483600
*                                      before processing any entries  * 00483700
*                                      on the list.                   * 00483800
*                                                                     * 00483900
*                                  ÝAUTHCOMPARE=YES                   * 00484000
*                                      indicates that list authority  * 00484100
*                                      comparison should precede      * 00484200
*                                      processing of any entries on   * 00484300
*                                      the list.                      * 00484400
*                                                                     * 00484500
*                                                                     * 00484600
*                                      AUTHCOMP=xauthcomp             * 00484700
*                                          is the name (RS-type), or  * 00484800
*                                          address in register        * 00484900
*                                          (2)-(12), of a required 16 * 00485000
*                                          character input which      * 00485100
*                                          specifies a value to be    * 00485200
*                                          compared to the list       * 00485300
*                                          authority value for the    * 00485400
*                                          designated list.  If the   * 00485500
*                                          condition specified by     * 00485600
*                                          AUTHCOMPTYPE is not met    * 00485700
*                                          then the IXLLSTM operation * 00485800
*                                          is terminated with no      * 00485900
*                                          resultant change to the    * 00486000
*                                          structure, and appropriate * 00486100
*                                          return and reason codes    * 00486200
*                                          are provided to the        * 00486300
*                                          invoker.                   * 00486400
*                                                                     * 00486500
*                                                                     * 00486600
*                                          ÝAUTHCOMPTYPE=»EQUAL!LESSO * 00486700
*                                              REQUALº¨¨¨             * 00486800
*                                              is an optional keyword * 00486900
*                                              input which specifies  * 00487000
*                                              how the list authority * 00487100
*                                              comparison is to be    * 00487200
*                                              performed.             * 00487300
*                                                                     * 00487400
*                                              DEFAULT: EQUAL         * 00487500
*                                                                     * 00487600
*                                                                     * 00487700
*                                              AUTHCOMPTYPE=EQUAL     * 00487800
*                                                  The list authority * 00487900
*                                                  for the list       * 00488000
*                                                  specified by       * 00488100
*                                                  LISTNUM must be    * 00488200
*                                                  equal to the value * 00488300
*                                                  specified for      * 00488400
*                                                  AUTHCOMP.          * 00488500
*                                                                     * 00488600
*                                                                     * 00488700
*                                              AUTHCOMPTYPE=LESSOREQU * 00488800
*                                                  AL                 * 00488900
*                                                  The list authority * 00489000
*                                                  for the list       * 00489100
*                                                  specified by       * 00489200
*                                                  LISTNUM must be    * 00489300
*                                                  less than or equal * 00489400
*                                                  to the value       * 00489500
*                                                  specified for      * 00489600
*                                                  AUTHCOMP.          * 00489700
*                                                                     * 00489800
*                                                                     * 00489900
*                                                                     * 00490000
*                                                                     * 00490100
*                                                                     * 00490200
*                                                                     * 00490300
*                                                                     * 00490400
*                                                                     * 00490500
*                                                                     * 00490600
*                                                                     * 00490700
*                                                                     * 00490800
*                                                                     * 00490900
*                                                                     * 00491000
*                                                                     * 00491100
*                                                                     * 00491200
*                  LOCATOR=UNKEYPOS                                   * 00491300
*                      Indicates that LISTNUM and DIRECTION as to be  * 00491400
*                      used to designate the entry to be used as the  * 00491500
*                      starting entry for the request.                * 00491600
*                                                                     * 00491700
*                                                                     * 00491800
*                      LISTNUM=xlistnum                               * 00491900
*                          is the name (RS-type), or address in       * 00492000
*                          register (2)-(12), of a required fullword  * 00492100
*                          input that designates the number of the    * 00492200
*                          list on which the entries to be processed  * 00492300
*                          reside.  If DIRECTION=HEADTOTAIL was       * 00492400
*                          specified, then the designated starting    * 00492500
*                          list entry is the head of the list.  If    * 00492600
*                          DIRECTION=TAILTOHEAD was specified, then   * 00492700
*                          the designated starting list entry is the  * 00492800
*                          tail of the list.                          * 00492900
*                                                                     * 00493000
*                                                                     * 00493100
*                                                                     * 00493200
*                                                                     * 00493300
*                      ÝKEYSCANTYPE=»ENTRY!SECONDARYº¨                * 00493400
*                          is an optional keyword input that          * 00493500
*                          indicates which key ordering               * 00493600
*                          (Entry/Secondary) is to be used to scan    * 00493700
*                          for entries on the list.                   * 00493800
*                          DEFAULT: ENTRY                             * 00493900
*                                                                     * 00494000
*                                                                     * 00494100
*                          KEYSCANTYPE=ENTRY                          * 00494200
*                              indicates that entry key ordering will * 00494300
*                              be used for scanning the list.         * 00494400
*                                                                     * 00494500
*                          KEYSCANTYPE=SECONDARY                      * 00494600
*                              indicates that secondary key ordering  * 00494700
*                              will be used for scanning the list.    * 00494800
*                                                                     * 00494900
*                                                                     * 00495000
*                                                                     * 00495100
*                                                                     * 00495200
*                                                                     * 00495300
*                                                                     * 00495400
*                      ÝAUTHCOMPARE=»NO!YESº                          * 00495500
*                          is an optional keyword input which         * 00495600
*                          determines whether the list authority      * 00495700
*                          comparison is to be used to determine if   * 00495800
*                          entries on the list should be processed.   * 00495900
*                          DEFAULT: NO                                * 00496000
*                                                                     * 00496100
*                                                                     * 00496200
*                          ÝAUTHCOMPARE=NO¨                           * 00496300
*                              indicates no list authority comparison * 00496400
*                              is to be performed before processing   * 00496500
*                              any entries on the list.               * 00496600
*                                                                     * 00496700
*                          ÝAUTHCOMPARE=YES                           * 00496800
*                              indicates that list authority          * 00496900
*                              comparison should precede processing   * 00497000
*                              of any entries on the list.            * 00497100
*                                                                     * 00497200
*                                                                     * 00497300
*                              AUTHCOMP=xauthcomp                     * 00497400
*                                  is the name (RS-type), or address  * 00497500
*                                  in register (2)-(12), of a         * 00497600
*                                  required 16 character input which  * 00497700
*                                  specifies a value to be compared   * 00497800
*                                  to the list authority value for    * 00497900
*                                  the designated list.  If the       * 00498000
*                                  condition specified by             * 00498100
*                                  AUTHCOMPTYPE is not met then the   * 00498200
*                                  IXLLSTM operation is terminated    * 00498300
*                                  with no resultant change to the    * 00498400
*                                  structure, and appropriate return  * 00498500
*                                  and reason codes are provided to   * 00498600
*                                  the invoker.                       * 00498700
*                                                                     * 00498800
*                                                                     * 00498900
*                                  ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨ * 00499000
*                                      ¨                              * 00499100
*                                      is an optional keyword input   * 00499200
*                                      which specifies how the list   * 00499300
*                                      authority comparison is to be  * 00499400
*                                      performed.                     * 00499500
*                                                                     * 00499600
*                                      DEFAULT: EQUAL                 * 00499700
*                                                                     * 00499800
*                                                                     * 00499900
*                                      AUTHCOMPTYPE=EQUAL             * 00500000
*                                          The list authority for the * 00500100
*                                          list specified by LISTNUM  * 00500200
*                                          must be equal to the value * 00500300
*                                          specified for AUTHCOMP.    * 00500400
*                                                                     * 00500500
*                                                                     * 00500600
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00500700
*                                          The list authority for the * 00500800
*                                          list specified by LISTNUM  * 00500900
*                                          must be less than or equal * 00501000
*                                          to the value specified for * 00501100
*                                          AUTHCOMP.                  * 00501200
*                                                                     * 00501300
*                                                                     * 00501400
*                                                                     * 00501500
*                                                                     * 00501600
*                                                                     * 00501700
*                                                                     * 00501800
*                                                                     * 00501900
*                                                                     * 00502000
*                                                                     * 00502100
*                                                                     * 00502200
*                                                                     * 00502300
*                                                                     * 00502400
*                      ÝKEYCOMPARE=»NO!YESº                           * 00502500
*                          is an optional keyword input that          * 00502600
*                          determines whether the key value of an     * 00502700
*                          existing keyed list entry is to be         * 00502800
*                          compared to determine if this entry should * 00502900
*                          be selected for processing.                * 00503000
*                          DEFAULT: NO                                * 00503100
*                                                                     * 00503200
*                                                                     * 00503300
*                          ÝKEYCOMPARE=NO¨                            * 00503400
*                              Indicates that no entry key comparison * 00503500
*                              will be performed to determine if this * 00503600
*                              entry should be processed.             * 00503700
*                                                                     * 00503800
*                          ÝKEYCOMPARE=YES                            * 00503900
*                              Indicates that entry key comparison    * 00504000
*                              will be performed based on the         * 00504100
*                              KEYREQTYPE specified to determine if   * 00504200
*                              this entry is selectable for           * 00504300
*                              processing.                            * 00504400
*                                                                     * 00504500
*                              KEYCOMPARE=YES is ignored if the       * 00504600
*                              target structure does not support      * 00504700
*                              keyed entries.                         * 00504800
*                                                                     * 00504900
*                                                                     * 00505000
*                              ENTRYKEY=xentrykey                     * 00505100
*                                  is the name (RS-type), or address  * 00505200
*                                  in register (2)-(12), of a         * 00505300
*                                  required 16 character input that   * 00505400
*                                  specifies the key to be used to    * 00505500
*                                  compare to the entry key of the    * 00505600
*                                  list entry.  If the condition      * 00505700
*                                  specified by KEYREQTYPE is not met * 00505800
*                                  for the current list entry then no * 00505900
*                                  processing is performed for the    * 00506000
*                                  current entry, and processing      * 00506100
*                                  continues with the next entry to   * 00506200
*                                  be considered.                     * 00506300
*                                                                     * 00506400
*                                                                     * 00506500
*                                                                     * 00506600
*                                                                     * 00506700
*                              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATER * 00506800
*                                  OREQUAL!RANGEº¨¨                   * 00506900
*                                  is an optional keyword input which * 00507000
*                                  specifies how entry key comparison * 00507100
*                                  is to be performed on an existing  * 00507200
*                                  keyed list entry to determine if   * 00507300
*                                  the entry is selectable for        * 00507400
*                                  processing.                        * 00507500
*                                  DEFAULT: EQUAL                     * 00507600
*                                                                     * 00507700
*                                                                     * 00507800
*                                  ÝKEYREQTYPE=EQUAL¨                 * 00507900
*                                      a list entry must have an      * 00508000
*                                      entry key equal to the value   * 00508100
*                                      specified by ENTRYKEY.         * 00508200
*                                                                     * 00508300
*                                  ÝKEYREQTYPE=LESSOREQUAL¨           * 00508400
*                                      a list entry must have an      * 00508500
*                                      entry key less than or equal   * 00508600
*                                      to the value specified by      * 00508700
*                                      ENTRYKEY.                      * 00508800
*                                                                     * 00508900
*                                  ÝKEYREQTYPE=GREATEROREQUAL¨        * 00509000
*                                      a list entry must have an      * 00509100
*                                      entry key greater than or      * 00509200
*                                      equal to the value specified   * 00509300
*                                      by ENTRYKEY.                   * 00509400
*                                                                     * 00509500
*                                  ÝKEYREQTYPE=RANGE                  * 00509600
*                                      a list entry must have an      * 00509700
*                                      entry key within a specified   * 00509800
*                                      range of values. The ENTRYKEY  * 00509900
*                                      specified will be used as the  * 00510000
*                                      beginning of the range of key  * 00510100
*                                      values that will be compared   * 00510200
*                                      with the existing entry key.   * 00510300
*                                      KEYRANGEEND will be used as    * 00510400
*                                      the ending value.  A list      * 00510500
*                                      entry must have an entry key   * 00510600
*                                      value within the specified     * 00510700
*                                      entry key range, inclusive,    * 00510800
*                                      for it to be selectable.       * 00510900
*                                                                     * 00511000
*                                                                     * 00511100
*                                      KEYRANGEEND=xkeyrangeend¨¨     * 00511200
*                                          is the name (RS-type), or  * 00511300
*                                          address in register        * 00511400
*                                          (2)-(12), of a required 16 * 00511500
*                                          character input specifies  * 00511600
*                                          the ending value for the   * 00511700
*                                          range of keys to be        * 00511800
*                                          compared to the entry key  * 00511900
*                                          of the list entry.         * 00512000
*                                                                     * 00512100
*                                                                     * 00512200
*                                                                     * 00512300
*                                                                     * 00512400
*                                                                     * 00512500
*                                                                     * 00512600
*                                                                     * 00512700
*                                                                     * 00512800
*                                                                     * 00512900
*                                                                     * 00513000
*                                                                     * 00513100
*                                                                     * 00513200
*                      ÝSKEYCOMPARE=»NO!YESº                          * 00513300
*                          is an optional keyword input that          * 00513400
*                          determines whether the secondary key value * 00513500
*                          of an existing keyed list entry is to be   * 00513600
*                          compared to determine if this entry should * 00513700
*                          be selected for processing.                * 00513800
*                          DEFAULT: NO                                * 00513900
*                                                                     * 00514000
*                                                                     * 00514100
*                          ÝSKEYCOMPARE=NO¨                           * 00514200
*                              Indicates that no secondary key        * 00514300
*                              comparison will be performed to        * 00514400
*                              determine if this entry should be      * 00514500
*                              processed.                             * 00514600
*                                                                     * 00514700
*                          ÝSKEYCOMPARE=YES                           * 00514800
*                              Indicates that secondary key           * 00514900
*                              comparison will be performed based on  * 00515000
*                              the SKEYREQTYPE specified to determine * 00515100
*                              if this entry is selectable for        * 00515200
*                              processing.                            * 00515300
*                                                                     * 00515400
*                              SKEYCOMPARE=YES is ignored if the      * 00515500
*                              target structure was not allocated     * 00515600
*                              with secondary keys.                   * 00515700
*                                                                     * 00515800
*                                                                     * 00515900
*                              SECONDARYKEY=xsecondarykey             * 00516000
*                                  is the name (RS-type), or address  * 00516100
*                                  in register (2)-(12), of a         * 00516200
*                                  required 32 character input that   * 00516300
*                                  specifies the secondary key value  * 00516400
*                                  to be used to compare to the       * 00516500
*                                  secondary key of the list entry.   * 00516600
*                                  If the condition specified by      * 00516700
*                                  SKEYREQTYPE is not met for the     * 00516800
*                                  current list entry then no         * 00516900
*                                  processing is performed for the    * 00517000
*                                  current entry, and processing      * 00517100
*                                  continues with the next entry to   * 00517200
*                                  be considered.                     * 00517300
*                                                                     * 00517400
*                                                                     * 00517500
*                                                                     * 00517600
*                                                                     * 00517700
*                              ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATE * 00517800
*                                  ROREQUAL!RANGEº¨¨                  * 00517900
*                                  is an optional keyword input which * 00518000
*                                  specifies how secondary key        * 00518100
*                                  comparison is to be performed on   * 00518200
*                                  an existing keyed list entry to    * 00518300
*                                  determine if the entry is          * 00518400
*                                  selectable for processing.         * 00518500
*                                  DEFAULT: EQUAL                     * 00518600
*                                                                     * 00518700
*                                                                     * 00518800
*                                  ÝSKEYREQTYPE=EQUAL¨                * 00518900
*                                      a list entry must have a       * 00519000
*                                      secondary key equal to the     * 00519100
*                                      value specified by             * 00519200
*                                      SECONDARYKEY.                  * 00519300
*                                                                     * 00519400
*                                  ÝSKEYREQTYPE=LESSOREQUAL¨          * 00519500
*                                      a list entry must have a       * 00519600
*                                      secondary key less than or     * 00519700
*                                      equal to the value specified   * 00519800
*                                      by SECONDARYKEY.               * 00519900
*                                                                     * 00520000
*                                  ÝSKEYREQTYPE=GREATEROREQUAL¨       * 00520100
*                                      a list entry must have a       * 00520200
*                                      secondary key greater than or  * 00520300
*                                      equal to the value specified   * 00520400
*                                      by SECONDARYKEY.               * 00520500
*                                                                     * 00520600
*                                  ÝSKEYREQTYPE=RANGE                 * 00520700
*                                      a list entry must have a       * 00520800
*                                      secondary key within a         * 00520900
*                                      specified range of values. The * 00521000
*                                      SECONDARYKEY specified will be * 00521100
*                                      used as the beginning of the   * 00521200
*                                      range of secondary key values  * 00521300
*                                      that will be compared with the * 00521400
*                                      existing secondary key.        * 00521500
*                                      SKEYRANGEEND will be used as   * 00521600
*                                      the ending value.  A list      * 00521700
*                                      entry must have a secondary    * 00521800
*                                      key value within the specified * 00521900
*                                      secondary key range,           * 00522000
*                                      inclusive, for it to be        * 00522100
*                                      selectable.                    * 00522200
*                                                                     * 00522300
*                                                                     * 00522400
*                                      SKEYRANGEEND=xskeyrangeend¨¨   * 00522500
*                                                                     * 00522600
*                                          is the name (RS-type), or  * 00522700
*                                          address in register        * 00522800
*                                          (2)-(12), of a required 32 * 00522900
*                                          character input which      * 00523000
*                                          specifies the ending value * 00523100
*                                          for the range of secondary * 00523200
*                                          keys to be compared to the * 00523300
*                                          secondary key of the list  * 00523400
*                                          entry.                     * 00523500
*                                                                     * 00523600
*                                                                     * 00523700
*                                                                     * 00523800
*                                                                     * 00523900
*                                                                     * 00524000
*                                                                     * 00524100
*                                                                     * 00524200
*                                                                     * 00524300
*                                                                     * 00524400
*                                                                     * 00524500
*                                                                     * 00524600
*                  LOCATOR=KEYPOS                                     * 00524700
*                      Indicates that LISTNUM, DIRECTION, and the key * 00524800
*                      specified by KEYTYPE are to be used to         * 00524900
*                      designate the entry to be used as the starting * 00525000
*                      list entry for the request.                    * 00525100
*                                                                     * 00525200
*                                                                     * 00525300
*                      LISTNUM=xlistnum                               * 00525400
*                          is the name (RS-type), or address in       * 00525500
*                          register (2)-(12), of a required fullword  * 00525600
*                          input designates the number of the list on * 00525700
*                          which the entries to be processed reside.  * 00525800
*                          LISTNUM is used to restrict processing to  * 00525900
*                          those entries residing on the list         * 00526000
*                          specified.                                 * 00526100
*                                                                     * 00526200
*                                                                     * 00526300
*                                                                     * 00526400
*                                                                     * 00526500
*                      ÝKEYSCANTYPE=»ENTRY!SECONDARYº¨                * 00526600
*                          is an optional keyword input that          * 00526700
*                          indicates which key ordering               * 00526800
*                          (Entry/Secondary) is to be used to scan    * 00526900
*                          for entries on the list.                   * 00527000
*                          DEFAULT: ENTRY                             * 00527100
*                                                                     * 00527200
*                                                                     * 00527300
*                          KEYSCANTYPE=ENTRY                          * 00527400
*                              indicates that entry key ordering will * 00527500
*                              be used for scanning the list.         * 00527600
*                                                                     * 00527700
*                          KEYSCANTYPE=SECONDARY                      * 00527800
*                              indicates that secondary key ordering  * 00527900
*                              will be used for scanning the list.    * 00528000
*                                                                     * 00528100
*                                                                     * 00528200
*                                                                     * 00528300
*                                                                     * 00528400
*                                                                     * 00528500
*                                                                     * 00528600
*                      ÝAUTHCOMPARE=»NO!YESº                          * 00528700
*                          is an optional keyword input which         * 00528800
*                          determines whether the list authority      * 00528900
*                          comparison is to be used to determine if   * 00529000
*                          entries on the list should be processed.   * 00529100
*                          DEFAULT: NO                                * 00529200
*                                                                     * 00529300
*                                                                     * 00529400
*                          ÝAUTHCOMPARE=NO¨                           * 00529500
*                              indicates no list authority comparison * 00529600
*                              is to be performed before processing   * 00529700
*                              any entries on the list.               * 00529800
*                                                                     * 00529900
*                          ÝAUTHCOMPARE=YES                           * 00530000
*                              indicates that list authority          * 00530100
*                              comparison should precede processing   * 00530200
*                              of any entries on the list.            * 00530300
*                                                                     * 00530400
*                                                                     * 00530500
*                              AUTHCOMP=xauthcomp                     * 00530600
*                                  is the name (RS-type), or address  * 00530700
*                                  in register (2)-(12), of a         * 00530800
*                                  required 16 character input which  * 00530900
*                                  specifies a value to be compared   * 00531000
*                                  to the list authority value for    * 00531100
*                                  the designated list.  If the       * 00531200
*                                  condition specified by             * 00531300
*                                  AUTHCOMPTYPE is not met then the   * 00531400
*                                  IXLLSTM operation is terminated    * 00531500
*                                  with no resultant change to the    * 00531600
*                                  structure, and appropriate return  * 00531700
*                                  and reason codes are provided to   * 00531800
*                                  the invoker.                       * 00531900
*                                                                     * 00532000
*                                                                     * 00532100
*                                  ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨ * 00532200
*                                      ¨                              * 00532300
*                                      is an optional keyword input   * 00532400
*                                      which specifies how the list   * 00532500
*                                      authority comparison is to be  * 00532600
*                                      performed.                     * 00532700
*                                                                     * 00532800
*                                      DEFAULT: EQUAL                 * 00532900
*                                                                     * 00533000
*                                                                     * 00533100
*                                      AUTHCOMPTYPE=EQUAL             * 00533200
*                                          The list authority for the * 00533300
*                                          list specified by LISTNUM  * 00533400
*                                          must be equal to the value * 00533500
*                                          specified for AUTHCOMP.    * 00533600
*                                                                     * 00533700
*                                                                     * 00533800
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00533900
*                                          The list authority for the * 00534000
*                                          list specified by LISTNUM  * 00534100
*                                          must be less than or equal * 00534200
*                                          to the value specified for * 00534300
*                                          AUTHCOMP.                  * 00534400
*                                                                     * 00534500
*                                                                     * 00534600
*                                                                     * 00534700
*                                                                     * 00534800
*                                                                     * 00534900
*                                                                     * 00535000
*                                                                     * 00535100
*                                                                     * 00535200
*                                                                     * 00535300
*                                                                     * 00535400
*                                                                     * 00535500
*                                                                     * 00535600
*                      ÝKEYTYPE=»ENTRY!SECONDARYº                     * 00535700
*                          is an optional keyword input that          * 00535800
*                          specifies whether to locate the starting   * 00535900
*                          list entry using the entry key or the      * 00536000
*                          secondary key.                             * 00536100
*                          DEFAULT: ENTRY                             * 00536200
*                                                                     * 00536300
*                                                                     * 00536400
*                          ÝKEYTYPE=ENTRY                             * 00536500
*                              Indicates the entry key will be used   * 00536600
*                              to locate the starting list entry.     * 00536700
*                                                                     * 00536800
*                                                                     * 00536900
*                              ENTRYKEY=xentrykey                     * 00537000
*                                  is the name (RS-type), or address  * 00537100
*                                  in register (2)-(12), of a         * 00537200
*                                  required 16 character input that   * 00537300
*                                  specifies the key to be used to    * 00537400
*                                  partially indicate the starting    * 00537500
*                                  list entry for the request.  If    * 00537600
*                                  DIRECTION=HEADTOTAIL was           * 00537700
*                                  specified, the designated starting * 00537800
*                                  list entry is the head of the      * 00537900
*                                  sublist.  If DIRECTION=TAILTOHEAD  * 00538000
*                                  was specified, the designated      * 00538100
*                                  starting list entry is the tail of * 00538200
*                                  the sublist.                       * 00538300
*                                                                     * 00538400
*                                                                     * 00538500
*                                  ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GRE * 00538600
*                                      ATEROREQUAL!RANGEº¨            * 00538700
*                                      is an optional keyword input   * 00538800
*                                      which specifies how an         * 00538900
*                                      existing keyed list entry is   * 00539000
*                                      located and/or how key         * 00539100
*                                      comparison is to be performed  * 00539200
*                                      on an existing keyed list      * 00539300
*                                      entry to determine if the      * 00539400
*                                      entry is selectable for        * 00539500
*                                      processing KEYCOMPARE=YES is   * 00539600
*                                      specified.                     * 00539700
*                                      DEFAULT: EQUAL                 * 00539800
*                                                                     * 00539900
*                                                                     * 00540000
*                                      ÝKEYREQTYPE=EQUAL¨             * 00540100
*                                          a list entry must have an  * 00540200
*                                          entry key equal to the     * 00540300
*                                          value specified by         * 00540400
*                                          ENTRYKEY.                  * 00540500
*                                                                     * 00540600
*                                          If no such keyed entry     * 00540700
*                                          exists on the list then    * 00540800
*                                          the request will be        * 00540900
*                                          failed.                    * 00541000
*                                                                     * 00541100
*                                      ÝKEYREQTYPE=LESSOREQUAL¨       * 00541200
*                                          a list entry must have an  * 00541300
*                                          entry key less than or     * 00541400
*                                          equal to the value         * 00541500
*                                          specified by ENTRYKEY.     * 00541600
*                                                                     * 00541700
*                                          If no entries on the list  * 00541800
*                                          have an entry key value    * 00541900
*                                          less than or equal to the  * 00542000
*                                          specified value the        * 00542100
*                                          request will be failed     * 00542200
*                                                                     * 00542300
*                                          If no entries on the list  * 00542400
*                                          have an entry key value    * 00542500
*                                          equal to the value         * 00542600
*                                          specified by ENTRYKEY, but * 00542700
*                                          entries exists with an     * 00542800
*                                          entry key value less than  * 00542900
*                                          the specified value then   * 00543000
*                                          the entry with the largest * 00543100
*                                          entry key value less than  * 00543200
*                                          the specified value is     * 00543300
*                                          selected.  When multiple   * 00543400
*                                          entries have the same      * 00543500
*                                          entry key value DIRECTION  * 00543600
*                                          is used to resolve whether * 00543700
*                                          the first or last entry    * 00543800
*                                          with the entry key value   * 00543900
*                                          is selected.               * 00544000
*                                                                     * 00544100
*                                                                     * 00544200
*                                      ÝKEYREQTYPE=GREATEROREQUAL¨    * 00544300
*                                          a list entry must have an  * 00544400
*                                          entry key greater than or  * 00544500
*                                          equal to the value         * 00544600
*                                          specified by ENTRYKEY.     * 00544700
*                                                                     * 00544800
*                                          If no entries on the list  * 00544900
*                                          have an entry key value    * 00545000
*                                          greater than or equal to   * 00545100
*                                          the specified value the    * 00545200
*                                          request will be failed.    * 00545300
*                                                                     * 00545400
*                                          If no entries on the list  * 00545500
*                                          have an entry key value    * 00545600
*                                          equal to the value         * 00545700
*                                          specified by ENTRYKEY, but * 00545800
*                                          entries exists with an     * 00545900
*                                          entry key value greater    * 00546000
*                                          than the specified value   * 00546100
*                                          then the entry with the    * 00546200
*                                          smallest entry key value   * 00546300
*                                          greater than the specified * 00546400
*                                          value is selected.  When   * 00546500
*                                          multiple entries have the  * 00546600
*                                          same entry key value       * 00546700
*                                          DIRECTION is used to       * 00546800
*                                          resolve whether the first  * 00546900
*                                          or last entry with the     * 00547000
*                                          entry key value is         * 00547100
*                                          selected.                  * 00547200
*                                                                     * 00547300
*                                      ÝKEYREQTYPE=RANGE              * 00547400
*                                          a list entry must have an  * 00547500
*                                          entry key within a         * 00547600
*                                          specified range of values. * 00547700
*                                          The ENTRYKEY specified     * 00547800
*                                          will be used as the        * 00547900
*                                          beginning of the range of  * 00548000
*                                          key values that will be    * 00548100
*                                          compared with the existing * 00548200
*                                          entry key. KEYRANGEEND     * 00548300
*                                          will be used as the ending * 00548400
*                                          value.  A list entry must  * 00548500
*                                          have an entry key value    * 00548600
*                                          within the specified entry * 00548700
*                                          key range, inclusive, for  * 00548800
*                                          it to be selectable.       * 00548900
*                                                                     * 00549000
*                                          If no entries on the list  * 00549100
*                                          have an entry key value    * 00549200
*                                          within the specified       * 00549300
*                                          range, the request will be * 00549400
*                                          failed.                    * 00549500
*                                                                     * 00549600
*                                          When multiple entries have * 00549700
*                                          an entry key value within  * 00549800
*                                          the specified range,       * 00549900
*                                          DIRECTION is used to       * 00550000
*                                          resolve whether the first  * 00550100
*                                          or last entry with the     * 00550200
*                                          entry key range is         * 00550300
*                                          selected.                  * 00550400
*                                                                     * 00550500
*                                          NOTE:  When                * 00550600
*                                          KEYREQTYPE=RANGE is        * 00550700
*                                          specifed, KEYCOMPARE=YES   * 00550800
*                                          is required.               * 00550900
*                                                                     * 00551000
*                                                                     * 00551100
*                                          KEYRANGEEND=xkeyrangeend¨  * 00551200
*                                                                     * 00551300
*                                              is the name (RS-type), * 00551400
*                                              or address in register * 00551500
*                                              (2)-(12), of a         * 00551600
*                                              required 16 character  * 00551700
*                                              input specifies the    * 00551800
*                                              ending value for the   * 00551900
*                                              range of keys to be    * 00552000
*                                              compared to the entry  * 00552100
*                                              key of the designated  * 00552200
*                                              list entry.            * 00552300
*                                                                     * 00552400
*                                                                     * 00552500
*                                                                     * 00552600
*                                                                     * 00552700
*                                                                     * 00552800
*                                                                     * 00552900
*                                                                     * 00553000
*                                                                     * 00553100
*                                  ÝKEYCOMPARE=»NO!YESº¨              * 00553200
*                                      is an optional keyword input   * 00553300
*                                      that determines whether the    * 00553400
*                                      key value of an existing keyed * 00553500
*                                      list entry is to be compared   * 00553600
*                                      to determine if this entry     * 00553700
*                                      should be selected for         * 00553800
*                                      processing.                    * 00553900
*                                      DEFAULT: NO                    * 00554000
*                                                                     * 00554100
*                                                                     * 00554200
*                                      ÝKEYCOMPARE=NO¨                * 00554300
*                                          Indicates that no entry    * 00554400
*                                          key comparison will be     * 00554500
*                                          performed to determine if  * 00554600
*                                          this entry should be       * 00554700
*                                          processed.                 * 00554800
*                                                                     * 00554900
*                                          NOTE:  When                * 00555000
*                                          KEYREQTYPE=RANGE is        * 00555100
*                                          specifed, KEYCOMPARE=YES   * 00555200
*                                          is required.               * 00555300
*                                                                     * 00555400
*                                      ÝKEYCOMPARE=YES¨               * 00555500
*                                          Indicates that entry key   * 00555600
*                                          comparison will be         * 00555700
*                                          performed based on the     * 00555800
*                                          KEYREQTYPE specified to    * 00555900
*                                          determine if this entry is * 00556000
*                                          selectable for processing. * 00556100
*                                                                     * 00556200
*                                                                     * 00556300
*                                                                     * 00556400
*                                                                     * 00556500
*                                                                     * 00556600
*                                                                     * 00556700
*                                  ÝSKEYCOMPARE=»NO!YESº              * 00556800
*                                      is an optional keyword input   * 00556900
*                                      that determines whether the    * 00557000
*                                      secondary key value of an      * 00557100
*                                      existing keyed list entry is   * 00557200
*                                      to be compared to determine if * 00557300
*                                      this entry should be selected  * 00557400
*                                      for processing.                * 00557500
*                                      DEFAULT: NO                    * 00557600
*                                                                     * 00557700
*                                                                     * 00557800
*                                      ÝSKEYCOMPARE=NO¨               * 00557900
*                                          Indicates that no          * 00558000
*                                          secondary key comparison   * 00558100
*                                          will be performed to       * 00558200
*                                          determine if this entry    * 00558300
*                                          should be processed.       * 00558400
*                                                                     * 00558500
*                                      ÝSKEYCOMPARE=YES               * 00558600
*                                          Indicates that secondary   * 00558700
*                                          key comparison will be     * 00558800
*                                          performed based on the     * 00558900
*                                          SKEYREQTYPE specified to   * 00559000
*                                          determine if this entry is * 00559100
*                                          selectable for processing. * 00559200
*                                                                     * 00559300
*                                          SKEYCOMPARE=YES is ignored * 00559400
*                                          if the target structure    * 00559500
*                                          was not allocated with     * 00559600
*                                          secondary keys.            * 00559700
*                                                                     * 00559800
*                                                                     * 00559900
*                                          SECONDARYKEY=xsecondarykey * 00560000
*                                                                     * 00560100
*                                              is the name (RS-type), * 00560200
*                                              or address in register * 00560300
*                                              (2)-(12), of a         * 00560400
*                                              required 32 character  * 00560500
*                                              input that specifies   * 00560600
*                                              the secondary key      * 00560700
*                                              value to be compared   * 00560800
*                                              to the secondary key   * 00560900
*                                              of the list entry.     * 00561000
*                                                                     * 00561100
*                                                                     * 00561200
*                                              ÝSKEYREQTYPE=»EQUAL!LE * 00561300
*                                                  SSOREQUAL!GREATERO * 00561400
*                                                  REQUAL!RANGEº¨¨    * 00561500
*                                                  is an optional     * 00561600
*                                                  keyword input      * 00561700
*                                                  which specifies    * 00561800
*                                                  how key comparison * 00561900
*                                                  is to be performed * 00562000
*                                                  on an existing     * 00562100
*                                                  keyed list entry   * 00562200
*                                                  to determine if    * 00562300
*                                                  the entry is       * 00562400
*                                                  selectable for     * 00562500
*                                                  processing.        * 00562600
*                                                  DEFAULT: EQUAL     * 00562700
*                                                                     * 00562800
*                                                                     * 00562900
*                                                  ÝSKEYREQTYPE=EQUAL * 00563000
*                                                      ¨              * 00563100
*                                                      a list entry   * 00563200
*                                                      must have a    * 00563300
*                                                      secondary key  * 00563400
*                                                      equal to the   * 00563500
*                                                      value          * 00563600
*                                                      specified by   * 00563700
*                                                      SECONDARYKEY.  * 00563800
*                                                                     * 00563900
*                                                  ÝSKEYREQTYPE=LESSO * 00564000
*                                                      REQUAL¨        * 00564100
*                                                      a list entry   * 00564200
*                                                      must have a    * 00564300
*                                                      secondary key  * 00564400
*                                                      less than or   * 00564500
*                                                      equal to the   * 00564600
*                                                      value          * 00564700
*                                                      specified by   * 00564800
*                                                      SECONDARYKEY.  * 00564900
*                                                                     * 00565000
*                                                  ÝSKEYREQTYPE=GREAT * 00565100
*                                                      EROREQUAL¨     * 00565200
*                                                      a list entry   * 00565300
*                                                      must have a    * 00565400
*                                                      secondary key  * 00565500
*                                                      greater than   * 00565600
*                                                      or equal to    * 00565700
*                                                      the value      * 00565800
*                                                      specified by   * 00565900
*                                                      SECONDARYKEY.  * 00566000
*                                                                     * 00566100
*                                                  ÝSKEYREQTYPE=RANGE * 00566200
*                                                                     * 00566300
*                                                      a list entry   * 00566400
*                                                      must have a    * 00566500
*                                                      secondary key  * 00566600
*                                                      within a       * 00566700
*                                                      specified      * 00566800
*                                                      range of       * 00566900
*                                                      values. The    * 00567000
*                                                      SECONDARYKEY   * 00567100
*                                                      specified will * 00567200
*                                                      be used as the * 00567300
*                                                      beginning of   * 00567400
*                                                      the range of   * 00567500
*                                                      key values     * 00567600
*                                                      that will be   * 00567700
*                                                      compared with  * 00567800
*                                                      the existing   * 00567900
*                                                      secondary key. * 00568000
*                                                      SKEYRANGEEND   * 00568100
*                                                      will be used   * 00568200
*                                                      as the ending  * 00568300
*                                                      value.  A list * 00568400
*                                                      entry must     * 00568500
*                                                      have a         * 00568600
*                                                      secondary key  * 00568700
*                                                      value within   * 00568800
*                                                      the specified  * 00568900
*                                                      secondary key  * 00569000
*                                                      range,         * 00569100
*                                                      inclusive, for * 00569200
*                                                      it to be       * 00569300
*                                                      selectable.    * 00569400
*                                                                     * 00569500
*                                                                     * 00569600
*                                                      SKEYRANGEEND=x * 00569700
*                                                          skeyrangee * 00569800
*                                                          nd¨¨¨      * 00569900
*                                                          is the     * 00570000
*                                                          name       * 00570100
*                                                          (RS-type), * 00570200
*                                                          or address * 00570300
*                                                          in         * 00570400
*                                                          register   * 00570500
*                                                          (2)-(12),  * 00570600
*                                                          of a       * 00570700
*                                                          required   * 00570800
*                                                          32         * 00570900
*                                                          character  * 00571000
*                                                          input      * 00571100
*                                                          specifies  * 00571200
*                                                          the ending * 00571300
*                                                          value for  * 00571400
*                                                          the range  * 00571500
*                                                          of keys to * 00571600
*                                                          be         * 00571700
*                                                          compared   * 00571800
*                                                          to the     * 00571900
*                                                          secondary  * 00572000
*                                                          key of the * 00572100
*                                                          designated * 00572200
*                                                          list       * 00572300
*                                                          entry.     * 00572400
*                                                                     * 00572500
*                                                                     * 00572600
*                                                                     * 00572700
*                                                                     * 00572800
*                                                                     * 00572900
*                                                                     * 00573000
*                                                                     * 00573100
*                                                                     * 00573200
*                                                                     * 00573300
*                                                                     * 00573400
*                                                                     * 00573500
*                                                                     * 00573600
*                                                                     * 00573700
*                                                                     * 00573800
*                                                                     * 00573900
*                          ÝKEYTYPE=SECONDARY                         * 00574000
*                              Indicates the secondary key should be  * 00574100
*                              used to locate the starting list       * 00574200
*                              entry.                                 * 00574300
*                                                                     * 00574400
*                                                                     * 00574500
*                              SECONDARYKEY=xsecondarykey             * 00574600
*                                  is the name (RS-type), or address  * 00574700
*                                  in register (2)-(12), of a         * 00574800
*                                  required 32 character input that   * 00574900
*                                  specifies the secondary key to be  * 00575000
*                                  used to partially indicate the     * 00575100
*                                  starting list entry for the        * 00575200
*                                  request.  If DIRECTION=HEADTOTAIL  * 00575300
*                                  was specified, the designated      * 00575400
*                                  starting list entry is the head of * 00575500
*                                  the sublist.  If                   * 00575600
*                                  DIRECTION=TAILTOHEAD was           * 00575700
*                                  specified, the designated starting * 00575800
*                                  list entry is the tail of the      * 00575900
*                                  sublist.                           * 00576000
*                                                                     * 00576100
*                                                                     * 00576200
*                                  ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GR * 00576300
*                                      EATEROREQUAL!RANGEº¨           * 00576400
*                                      is an optional keyword input   * 00576500
*                                      which specifies how an         * 00576600
*                                      existing keyed list entry is   * 00576700
*                                      located and/or how key         * 00576800
*                                      comparison is to be performed  * 00576900
*                                      on an existing keyed list      * 00577000
*                                      entry to determine if the      * 00577100
*                                      entry is selectable for        * 00577200
*                                      processing when                * 00577300
*                                      SKEYCOMPARE=YES is specified.  * 00577400
*                                      DEFAULT: EQUAL                 * 00577500
*                                                                     * 00577600
*                                                                     * 00577700
*                                      ÝSKEYREQTYPE=EQUAL¨            * 00577800
*                                          a list entry must have a   * 00577900
*                                          secondary key equal to the * 00578000
*                                          value specified by         * 00578100
*                                          SECONDARYKEY.              * 00578200
*                                                                     * 00578300
*                                          If no such keyed entry     * 00578400
*                                          exists on the list then    * 00578500
*                                          the request will be        * 00578600
*                                          failed.                    * 00578700
*                                                                     * 00578800
*                                      ÝSKEYREQTYPE=LESSOREQUAL¨      * 00578900
*                                          a list entry must have a   * 00579000
*                                          secondary key less than or * 00579100
*                                          equal to the value         * 00579200
*                                          specified by SECONDARYKEY. * 00579300
*                                                                     * 00579400
*                                          If no entries on the list  * 00579500
*                                          have a secondary key value * 00579600
*                                          less than or equal to the  * 00579700
*                                          specified value the        * 00579800
*                                          request will be failed     * 00579900
*                                                                     * 00580000
*                                          If no entries on the list  * 00580100
*                                          have a secondary key value * 00580200
*                                          equal to the value         * 00580300
*                                          specified by SECONDARYKEY, * 00580400
*                                          but entries exists with a  * 00580500
*                                          secondary key value less   * 00580600
*                                          than the specified value   * 00580700
*                                          then the entry with the    * 00580800
*                                          largest secondary key      * 00580900
*                                          value less than the        * 00581000
*                                          specified value is         * 00581100
*                                          selected.  When multiple   * 00581200
*                                          entries have the same      * 00581300
*                                          secondary key value        * 00581400
*                                          DIRECTION is used to       * 00581500
*                                          resolve whether the first  * 00581600
*                                          or last entry with the     * 00581700
*                                          secondary key value is     * 00581800
*                                          selected.                  * 00581900
*                                                                     * 00582000
*                                                                     * 00582100
*                                      ÝSKEYREQTYPE=GREATEROREQUAL¨   * 00582200
*                                                                     * 00582300
*                                          a list entry must have a   * 00582400
*                                          secondary key greater than * 00582500
*                                          or equal to the value      * 00582600
*                                          specified by SECONDARYKEY. * 00582700
*                                                                     * 00582800
*                                          If no entries on the list  * 00582900
*                                          have a secondary key value * 00583000
*                                          greater than or equal to   * 00583100
*                                          the specified value the    * 00583200
*                                          request will be failed.    * 00583300
*                                                                     * 00583400
*                                          If no entries on the list  * 00583500
*                                          have a secondary key value * 00583600
*                                          equal to the value         * 00583700
*                                          specified by SECONDARYKEY, * 00583800
*                                          but entries exists with a  * 00583900
*                                          secondary key value        * 00584000
*                                          greater than the specified * 00584100
*                                          value then the entry with  * 00584200
*                                          the smallest secondary key * 00584300
*                                          value greater than the     * 00584400
*                                          specified value is         * 00584500
*                                          selected.  When multiple   * 00584600
*                                          entries have the same      * 00584700
*                                          secondary key value        * 00584800
*                                          DIRECTION is used to       * 00584900
*                                          resolve whether the first  * 00585000
*                                          or last entry with the     * 00585100
*                                          secondary key value is     * 00585200
*                                          selected.                  * 00585300
*                                                                     * 00585400
*                                      ÝSKEYREQTYPE=RANGE             * 00585500
*                                          a list entry must have a   * 00585600
*                                          secondary key within a     * 00585700
*                                          specified range of values. * 00585800
*                                          The SECONDARYKEY specified * 00585900
*                                          will be used as the        * 00586000
*                                          beginning of the range of  * 00586100
*                                          key values that will be    * 00586200
*                                          compared with the existing * 00586300
*                                          secondary key.             * 00586400
*                                          SKEYRANGEEND will be used  * 00586500
*                                          as the ending value.  A    * 00586600
*                                          list entry must have a     * 00586700
*                                          secondary key value within * 00586800
*                                          the specified secondary    * 00586900
*                                          key range, inclusive, for  * 00587000
*                                          it to be selectable.       * 00587100
*                                                                     * 00587200
*                                          If no entries on the list  * 00587300
*                                          have a secondary key value * 00587400
*                                          within the specified       * 00587500
*                                          range, the request will be * 00587600
*                                          failed.                    * 00587700
*                                                                     * 00587800
*                                          When multiple entries have * 00587900
*                                          a secondary key value      * 00588000
*                                          within the specified       * 00588100
*                                          range, DIRECTION is used   * 00588200
*                                          to resolve whether the     * 00588300
*                                          first or last entry with   * 00588400
*                                          the secondary key range is * 00588500
*                                          selected.                  * 00588600
*                                                                     * 00588700
*                                          NOTE:  When                * 00588800
*                                          SKEYREQTYPE=RANGE is       * 00588900
*                                          specifed, SKEYCOMPARE=YES  * 00589000
*                                          is required.               * 00589100
*                                                                     * 00589200
*                                                                     * 00589300
*                                          SKEYRANGEEND=xskeyrangeend * 00589400
*                                              ¨                      * 00589500
*                                              is the name (RS-type), * 00589600
*                                              or address in register * 00589700
*                                              (2)-(12), of a         * 00589800
*                                              required 32 character  * 00589900
*                                              input specifies the    * 00590000
*                                              ending value for the   * 00590100
*                                              range of keys to be    * 00590200
*                                              compared to the        * 00590300
*                                              secondary key of the   * 00590400
*                                              designated list entry. * 00590500
*                                                                     * 00590600
*                                                                     * 00590700
*                                                                     * 00590800
*                                                                     * 00590900
*                                                                     * 00591000
*                                                                     * 00591100
*                                                                     * 00591200
*                                                                     * 00591300
*                                  ÝSKEYCOMPARE=»NO!YESº¨             * 00591400
*                                      is an optional keyword input   * 00591500
*                                      that determines whether the    * 00591600
*                                      key value of an existing keyed * 00591700
*                                      list entry is to be compared   * 00591800
*                                      to determine if this entry     * 00591900
*                                      should be selected for         * 00592000
*                                      processing.                    * 00592100
*                                      DEFAULT: NO                    * 00592200
*                                                                     * 00592300
*                                                                     * 00592400
*                                      ÝSKEYCOMPARE=NO¨               * 00592500
*                                          Indicates that no          * 00592600
*                                          secondary key comparison   * 00592700
*                                          will be performed to       * 00592800
*                                          determine if this entry    * 00592900
*                                          should be processed.       * 00593000
*                                                                     * 00593100
*                                          NOTE:  When                * 00593200
*                                          SKEYREQTYPE=RANGE is       * 00593300
*                                          specifed, SKEYCOMPARE=YES  * 00593400
*                                          is required.               * 00593500
*                                                                     * 00593600
*                                      ÝSKEYCOMPARE=YES¨              * 00593700
*                                          Indicates that secondary   * 00593800
*                                          key comparison will be     * 00593900
*                                          performed based on the     * 00594000
*                                          SKEYREQTYPE specified to   * 00594100
*                                          determine if this entry is * 00594200
*                                          selectable for processing. * 00594300
*                                                                     * 00594400
*                                                                     * 00594500
*                                                                     * 00594600
*                                                                     * 00594700
*                                                                     * 00594800
*                                                                     * 00594900
*                                  ÝKEYCOMPARE=»NO!YESº               * 00595000
*                                      is an optional keyword input   * 00595100
*                                      that determines whether the    * 00595200
*                                      key value of an existing keyed * 00595300
*                                      list entry is to be compared   * 00595400
*                                      to determine if this entry     * 00595500
*                                      should be selected for         * 00595600
*                                      processing.                    * 00595700
*                                      DEFAULT: NO                    * 00595800
*                                                                     * 00595900
*                                                                     * 00596000
*                                      ÝKEYCOMPARE=NO¨                * 00596100
*                                          Indicates that no entry    * 00596200
*                                          key comparison will be     * 00596300
*                                          performed to determine if  * 00596400
*                                          this entry should be       * 00596500
*                                          processed.                 * 00596600
*                                                                     * 00596700
*                                      ÝKEYCOMPARE=YES                * 00596800
*                                          Indicates that entry key   * 00596900
*                                          comparison will be         * 00597000
*                                          performed based on the     * 00597100
*                                          KEYREQTYPE specified to    * 00597200
*                                          determine if this entry is * 00597300
*                                          selectable for processing. * 00597400
*                                                                     * 00597500
*                                          KEYCOMPARE=YES is ignored  * 00597600
*                                          if the target structure    * 00597700
*                                          does not support keyed     * 00597800
*                                          entries.                   * 00597900
*                                                                     * 00598000
*                                                                     * 00598100
*                                          ENTRYKEY=xentrykey         * 00598200
*                                              is the name (RS-type), * 00598300
*                                              or address in register * 00598400
*                                              (2)-(12), of a         * 00598500
*                                              required 16 character  * 00598600
*                                              input that specifies   * 00598700
*                                              the key to be compared * 00598800
*                                              to the entry key value * 00598900
*                                              of the list entry.  If * 00599000
*                                              the condition          * 00599100
*                                              specified by           * 00599200
*                                              SKEYREQTYPE is not met * 00599300
*                                              then the IXLLSTM       * 00599400
*                                              operation is           * 00599500
*                                              terminated with no     * 00599600
*                                              resultant change to    * 00599700
*                                              the structure, and     * 00599800
*                                              appropriate return and * 00599900
*                                              reason codes are       * 00600000
*                                              provided to the        * 00600100
*                                              invoker.               * 00600200
*                                                                     * 00600300
*                                                                     * 00600400
*                                              ÝKEYREQTYPE=»EQUAL!LES * 00600500
*                                                  SOREQUAL!GREATEROR * 00600600
*                                                  EQUAL!RANGEº¨¨¨    * 00600700
*                                                  is an optional     * 00600800
*                                                  keyword input      * 00600900
*                                                  which specifies    * 00601000
*                                                  how entry key      * 00601100
*                                                  comparison is to   * 00601200
*                                                  be performed on an * 00601300
*                                                  existing keyed     * 00601400
*                                                  list entry to      * 00601500
*                                                  determine if the   * 00601600
*                                                  entry is           * 00601700
*                                                  selectable for     * 00601800
*                                                  processing.        * 00601900
*                                                  DEFAULT: EQUAL     * 00602000
*                                                                     * 00602100
*                                                                     * 00602200
*                                                  ÝKEYREQTYPE=EQUAL¨ * 00602300
*                                                                     * 00602400
*                                                      a list entry   * 00602500
*                                                      must have an   * 00602600
*                                                      entry key      * 00602700
*                                                      equal to the   * 00602800
*                                                      value          * 00602900
*                                                      specified by   * 00603000
*                                                      ENTRYKEY.      * 00603100
*                                                                     * 00603200
*                                                  ÝKEYREQTYPE=LESSOR * 00603300
*                                                      EQUAL¨         * 00603400
*                                                      a list entry   * 00603500
*                                                      must have an   * 00603600
*                                                      entry key less * 00603700
*                                                      than or equal  * 00603800
*                                                      to the value   * 00603900
*                                                      specified by   * 00604000
*                                                      ENTRYKEY.      * 00604100
*                                                                     * 00604200
*                                                  ÝKEYREQTYPE=GREATE * 00604300
*                                                      ROREQUAL¨      * 00604400
*                                                      a list entry   * 00604500
*                                                      must have an   * 00604600
*                                                      entry key      * 00604700
*                                                      greater than   * 00604800
*                                                      or equal to    * 00604900
*                                                      the value      * 00605000
*                                                      specified by   * 00605100
*                                                      ENTRYKEY.      * 00605200
*                                                                     * 00605300
*                                                  ÝKEYREQTYPE=RANGE  * 00605400
*                                                                     * 00605500
*                                                      a list entry   * 00605600
*                                                      must have an   * 00605700
*                                                      entry key      * 00605800
*                                                      within a       * 00605900
*                                                      specified      * 00606000
*                                                      range of       * 00606100
*                                                      values. The    * 00606200
*                                                      ENTRYKEY       * 00606300
*                                                      specified will * 00606400
*                                                      be used as the * 00606500
*                                                      beginning of   * 00606600
*                                                      the range of   * 00606700
*                                                      key values     * 00606800
*                                                      that will be   * 00606900
*                                                      compared with  * 00607000
*                                                      the existing   * 00607100
*                                                      entry key.     * 00607200
*                                                      KEYRANGEEND    * 00607300
*                                                      will be used   * 00607400
*                                                      as the ending  * 00607500
*                                                      value.  A list * 00607600
*                                                      entry must     * 00607700
*                                                      have an entry  * 00607800
*                                                      key value      * 00607900
*                                                      within the     * 00608000
*                                                      specified      * 00608100
*                                                      entry key      * 00608200
*                                                      range,         * 00608300
*                                                      inclusive, for * 00608400
*                                                      it to be       * 00608500
*                                                      selectable.    * 00608600
*                                                                     * 00608700
*                                                                     * 00608800
*                                                      KEYRANGEEND=xk * 00608900
*                                                          eyrangeend * 00609000
*                                                          ¨¨¨        * 00609100
*                                                          is the     * 00609200
*                                                          name       * 00609300
*                                                          (RS-type), * 00609400
*                                                          or address * 00609500
*                                                          in         * 00609600
*                                                          register   * 00609700
*                                                          (2)-(12),  * 00609800
*                                                          of a       * 00609900
*                                                          required   * 00610000
*                                                          16         * 00610100
*                                                          character  * 00610200
*                                                          input      * 00610300
*                                                          specifies  * 00610400
*                                                          the ending * 00610500
*                                                          value for  * 00610600
*                                                          the range  * 00610700
*                                                          of keys to * 00610800
*                                                          be         * 00610900
*                                                          compared   * 00611000
*                                                          to the     * 00611100
*                                                          entry key  * 00611200
*                                                          of the     * 00611300
*                                                          list       * 00611400
*                                                          entry.     * 00611500
*                                                                     * 00611600
*                                                                     * 00611700
*                                                                     * 00611800
*                                                                     * 00611900
*                                                                     * 00612000
*                                                                     * 00612100
*                                                                     * 00612200
*                                                                     * 00612300
*                                                                     * 00612400
*                                                                     * 00612500
*                                                                     * 00612600
*                                                                     * 00612700
*                                                                     * 00612800
*                                                                     * 00612900
*                                                                     * 00613000
*                                                                     * 00613100
*                                                                     * 00613200
*                                                                     * 00613300
*                                                                     * 00613400
*                                                                     * 00613500
*                                                                     * 00613600
*                                                                     * 00613700
*                                                                     * 00613800
*                                                                     * 00613900
*              ÝVERSCOMPARE=»NO!YESº                                  * 00614000
*                  is an optional keyword input indicates the version * 00614100
*                  comparison be done for each list entry. The        * 00614200
*                  version number specified by VERSCOMP will be used  * 00614300
*                  to compare each list entry version number.         * 00614400
*                  DEFAULT: NO                                        * 00614500
*                                                                     * 00614600
*                                                                     * 00614700
*                  ÝVERSCOMPARE=NO¨                                   * 00614800
*                      indicates that no version number comparison    * 00614900
*                      should precede processing of any list entries. * 00615000
*                                                                     * 00615100
*                  ÝVERSCOMPARE=YES                                   * 00615200
*                      indicates that version number comparison       * 00615300
*                      should precede processing of any list entries. * 00615400
*                                                                     * 00615500
*                                                                     * 00615600
*                      VERSCOMP=xverscomp                             * 00615700
*                          is the name (RS-type), or address in       * 00615800
*                          register (2)-(12), of a required 8         * 00615900
*                          character input which specifies a value to * 00616000
*                          be compared to the version number of the   * 00616100
*                          designated list entry.  If the condition   * 00616200
*                          specified by VERSCOMPTYPE is not met for   * 00616300
*                          the current list entry then no processing  * 00616400
*                          is performed for the current entry and     * 00616500
*                          processing continues with the next entry   * 00616600
*                          to be considered.                          * 00616700
*                                                                     * 00616800
*                                                                     * 00616900
*                          ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨        * 00617000
*                              is an optional keyword input which     * 00617100
*                              specifies how the list entry version   * 00617200
*                              number comparison is to be performed.  * 00617300
*                                                                     * 00617400
*                              DEFAULT: EQUAL                         * 00617500
*                                                                     * 00617600
*                                                                     * 00617700
*                              VERSCOMPTYPE=EQUAL                     * 00617800
*                                  The version number for the list    * 00617900
*                                  entry must be equal to the value   * 00618000
*                                  specified for VERSCOMP.            * 00618100
*                                                                     * 00618200
*                                                                     * 00618300
*                              VERSCOMPTYPE=LESSOREQUAL               * 00618400
*                                  The version number for the list    * 00618500
*                                  entry must be less than or equal   * 00618600
*                                  to the value specified for         * 00618700
*                                  VERSCOMP.                          * 00618800
*                                  DEFAULT: Equal                     * 00618900
*                                                                     * 00619000
*                                                                     * 00619100
*                                                                     * 00619200
*                                                                     * 00619300
*                                                                     * 00619400
*                                                                     * 00619500
*                                                                     * 00619600
*                                                                     * 00619700
*                                                                     * 00619800
*                                                                     * 00619900
*                                                                     * 00620000
*          REQUEST=READ_MULT                                          * 00620100
*              Read multiple entries.  Requests that the entry data,  * 00620200
*              the associated adjunct data, or the list entry         * 00620300
*              controls for all allocated entries that meet the       * 00620400
*              criteria specified be read into the storage area       * 00620500
*              specified by BUFFER or the buffers specified by        * 00620600
*              BUFLIST.                                               * 00620700
*                                                                     * 00620800
*              Specifying AUTHCOMPARE=YES in conjunction with         * 00620900
*              AUTHCOMP causes list authority comparison for the      * 00621000
*              designated list to precede processing of any list      * 00621100
*              entries.  If the list authority comparison fails, the  * 00621200
*              list authority, the list control information and       * 00621300
*              appropriate return and reason codes are provided in    * 00621400
*              the ANSAREA.                                           * 00621500
*                                                                     * 00621600
*              LOCKINDEX may optionally be specified in conjunction   * 00621700
*              with LOCKOPER to indicate the index of the serialized  * 00621800
*              list lock to be operated on within the lock table for  * 00621900
*              the list structure. If the lock comparison fails, the  * 00622000
*              lock table entry, and  appropriate return and reason   * 00622100
*              codes are provided in the ANSAREA.                     * 00622200
*                                                                     * 00622300
*              The absence of AUTHCOMPARE or specifying               * 00622400
*              AUTHCOMPARE=NO and the absence of LOCKINDEX indicates  * 00622500
*              no list authority or lock comparisons are to be        * 00622600
*              performed before processing any entries on the list.   * 00622700
*                                                                     * 00622800
*              Specifying LISTNUM in conjunction with LISTCOMPARE=YES * 00622900
*              may optionally be specified to restrict processing to  * 00623000
*              those entries residing on a specific list.  The        * 00623100
*              absence of LISTCOMPARE or specifying LISTCOMPARE=NO    * 00623200
*              indicates no list number comparisons are to be         * 00623300
*              performed when selecting entries to be processed.      * 00623400
*                                                                     * 00623500
*              Specifying VERSCOMPARE=YES in conjunction with         * 00623600
*              VERSCOMP may optionally be used to restrict processing * 00623700
*              to those entries with a version number matching that   * 00623800
*              specified.  The order of entry processing is           * 00623900
*              unpredictable.  The absence of VERSCOMPARE or          * 00624000
*              specifying VERSCOMPARE=NO indicates no version         * 00624100
*              comparisons are to be performed when selecting entries * 00624200
*              to be processed.                                       * 00624300
*                                                                     * 00624400
*              Specifying ENTRYKEY in conjunction with                * 00624500
*              KEYCOMPARE=YES, causes key comparison to be performed  * 00624600
*              as specified by KEYREQTYPE. The absence of KEYCOMPARE, * 00624700
*              or specifying KEYCOMPARE=NO indicates no key value     * 00624800
*              comparisons are performed when selecting entries to be * 00624900
*              processed.                                             * 00625000
*                                                                     * 00625100
*              Specifying SECONDARYKEY in conjunction with            * 00625200
*              SKEYCOMPARE=YES, causes secondary key comparison to be * 00625300
*              performed as specified by SKEYREQTYPE. The absence of  * 00625400
*              SKEYCOMPARE, or specifying SKEYCOMPARE=NO indicates no * 00625500
*              secondary key value comparisons are performed when     * 00625600
*              selecting entries to be processed.                     * 00625700
*                                                                     * 00625800
*              In order for any list entries to be processed the list * 00625900
*              authority verification and the lock operation if       * 00626000
*              requested, must succeed.                               * 00626100
*                                                                     * 00626200
*              In order for a particular list entry to be read, the   * 00626300
*              version number comparison, list number comparison and  * 00626400
*              the key comparison, when requested, must succeed       * 00626500
*              otherwise no processing is performed for the current   * 00626600
*              entry and processing continues with the next entry to  * 00626700
*              be considered.                                         * 00626800
*                                                                     * 00626900
*              When adjunct data is requested the adjunct data for    * 00627000
*              the first entry processed is returned in the storage   * 00627100
*              area specified by ADJAREA.  The adjunct data for all   * 00627200
*              other entries is returned in the BUFFER area or the    * 00627300
*              BUFLIST buffers.  When list entry controls are         * 00627400
*              requested the entry controls for the first entry       * 00627500
*              processed is returned in the answer area specified by  * 00627600
*              ANSAREA.  The entry controls for all other entries is  * 00627700
*              returned in the BUFFER area or the BUFLIST buffers.    * 00627800
*                                                                     * 00627900
*              When the request completes successfully the number of  * 00628000
*              entries for which entry data, adjunct data, or list    * 00628100
*              entry controls was read is returned in the answer area * 00628200
*              specified by ANSAREA.                                  * 00628300
*                                                                     * 00628400
*              A READ_MULT request may complete prematurely due to    * 00628500
*              exhaustion of the storage specified by BUFFER or       * 00628600
*              BUFLIST, or if coupling facility model dependent       * 00628700
*              timeout criteria is exceeded.  In this event           * 00628800
*              appropriate return and reason codes are provided, and  * 00628900
*              the number of entries for which data has been returned * 00629000
*              and a restart token or an extended restart token is    * 00629100
*              provided in ANSAREA.  The restart token or an extended * 00629200
*              restart token may be specified as input on a           * 00629300
*              subsequent READ_MULT request to resume processing with * 00629400
*              the appropriate list entry.                            * 00629500
*                                                                     * 00629600
*              Except for designation of the starting point, resumed  * 00629700
*              requests are processed identically to and must meet    * 00629800
*              the same interface requirements as non-resumed         * 00629900
*              requests.  For example, BUFFER area and BUFLIST buffer * 00630000
*              boundary and length requirements are unchanged, and a  * 00630100
*              resumed request may in turn experience premature       * 00630200
*              completion.                                            * 00630300
*                                                                     * 00630400
*              When TYPE=ADJDATA is specified ADJAREA is also         * 00630500
*              required.                                              * 00630600
*                                                                     * 00630700
*                                                                     * 00630800
*                                                                     * 00630900
*              TYPE=ENTDATA!ADJDATA!ECONTROLS                         * 00631000
*                  is a required group of keyword input(s) that       * 00631100
*                  specifies the type of information to be read.  Any * 00631200
*                  combination of the three values may be specified.  * 00631300
*                                                                     * 00631400
*                                                                     * 00631500
*                                                                     * 00631600
*                  TYPE=ENTDATA                                       * 00631700
*                      Indicates that the entry data is to be read.   * 00631800
*                                                                     * 00631900
*                                                                     * 00632000
*                  TYPE=ADJDATA                                       * 00632100
*                      Indicates that the adjunct data is to be read. * 00632200
*                      ADJDATA is only functional for structures that * 00632300
*                      support adjunct data.                          * 00632400
*                                                                     * 00632500
*                      For structures that are allocated with         * 00632600
*                      secondary keys, the first 32 bytes of the      * 00632700
*                      adjunct data will contain the secondary key of * 00632800
*                      the entry.                                     * 00632900
*                                                                     * 00633000
*                  TYPE=ECONTROLS                                     * 00633100
*                      Indicates that list entry control information  * 00633200
*                      is to be read.                                 * 00633300
*                                                                     * 00633400
*                      For structures allocated with secondary keys,  * 00633500
*                      the secondary key is not read by               * 00633600
*                      TYPE(ECONTROLS). The secondary key is read by  * 00633700
*                      TYPE(ADJDATA).                                 * 00633800
*                                                                     * 00633900
*                                                                     * 00634000
*                                                                     * 00634100
*                                                                     * 00634200
*                                                                     * 00634300
*                                                                     * 00634400
*              ÝADJAREA=»xadjarea!NO_ADJAREAº¨                        * 00634500
*                  is an optional input.  It is the name (RS-type),   * 00634600
*                  or address in register (2)-(12), of a 64-byte area * 00634700
*                  in virtual storage where entry adjunct data for    * 00634800
*                  the first entry is to be read.                     * 00634900
*                                                                     * 00635000
*                  If the structure was allocated to use secondary    * 00635100
*                  keys, the first 32 bytes of ADJDATA will contain   * 00635200
*                  the secondary key of the entry.                    * 00635300
*                  DEFAULT: NO_ADJAREA                                * 00635400
*                                                                     * 00635500
*                                                                     * 00635600
*                                                                     * 00635700
*                                                                     * 00635800
*              The following is a set of mutually exclusive keys.     * 00635900
*              This set is optional; only one key may be specified.   * 00636000
*                                                                     * 00636100
*                                                                     * 00636200
*                  The RESTOKEN and EXTRESTOKEN keywords are input    * 00636300
*                  fields that name a restart token specifying an     * 00636400
*                  appropriate coupling facility indicator for        * 00636500
*                  resuming requests that complete prematurely.       * 00636600
*                                                                     * 00636700
*                  Specifying an input restart token initialized to   * 00636800
*                  all zeros causes the request to consider all       * 00636900
*                  entries as unprocessed.  Specifying an input       * 00637000
*                  restart token other than one returned from a       * 00637100
*                  previous invocation of the request and not fully   * 00637200
*                  initialized to all zeros will produce              * 00637300
*                  unpredictable request results.                     * 00637400
*                                                                     * 00637500
*                  A restart token is returned in the answer area     * 00637600
*                  specified by ANSAREA when the request completes    * 00637700
*                  prematurely, and may be specified on a subsequent  * 00637800
*                  READ_MULT request to resume the request at an      * 00637900
*                  appropriate point.                                 * 00638000
*                                                                     * 00638100
*                  Requestors who specify IXLCONN ALLOWAUTO=YES must  * 00638200
*                  use the 16-byte extended restart token             * 00638300
*                  (EXTRESTOKEN).  Users who specify IXLCONN          * 00638400
*                  ALLOWAUTO=NO must use the standard 8-byte restart  * 00638500
*                  tokens (RESTOKEN).                                 * 00638600
*                                                                     * 00638700
*              ÝRESTOKEN=»xrestoken!NO_RESTOKENº                      * 00638800
*                  belongs to a set of mutually exclusive keys. It is * 00638900
*                  the name (RS-type), or address in register         * 00639000
*                  (2)-(12), of an optional 8 character input field   * 00639100
*                  that contains a restart token specifying an        * 00639200
*                  appropriate coupling facility indicator for        * 00639300
*                  resuming requests that complete prematurely.       * 00639400
*                                                                     * 00639500
*                  A restart token is returned in the LAARESTOKEN     * 00639600
*                  field of the answer area specified by ANSAREA when * 00639700
*                  the request completes prematurely.                 * 00639800
*                                                                     * 00639900
*                  DEFAULT: NO_RESTOKEN                               * 00640000
*                                                                     * 00640100
*              EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨             * 00640200
*                  belongs to a set of mutually exclusive keys. It is * 00640300
*                  the name (RS-type), or address in register         * 00640400
*                  (2)-(12), of an optional 16 character input field  * 00640500
*                  that contains an extended restart token specifying * 00640600
*                  an appropriate coupling facility indicator for     * 00640700
*                  resuming requests that complete prematurely.       * 00640800
*                                                                     * 00640900
*                  A restart token is returned in the LAAEXTRESTOKEN  * 00641000
*                  field of the answer area specified by ANSAREA when * 00641100
*                  the request completes prematurely.                 * 00641200
*                                                                     * 00641300
*                  DEFAULT: NO_EXTRESTOKEN                            * 00641400
*                                                                     * 00641500
*                                                                     * 00641600
*                                                                     * 00641700
*              End of a set of mutually exclusive optional keys.      * 00641800
*              DEFAULT: RESTOKEN                                      * 00641900
*                                                                     * 00642000
*                                                                     * 00642100
*                                                                     * 00642200
*              ÝLISTCOMPARE=»NO!YESº                                  * 00642300
*                  is an optional keyword input which determines if   * 00642400
*                  list number comparison should be performed to      * 00642500
*                  determine if list entries should be processed.     * 00642600
*                  DEFAULT: NO                                        * 00642700
*                                                                     * 00642800
*                                                                     * 00642900
*                  ÝLISTCOMPARE=NO¨                                   * 00643000
*                      indicates no list number criteria is to be     * 00643100
*                      applied when selecting entries to be           * 00643200
*                      processed.                                     * 00643300
*                                                                     * 00643400
*                  ÝLISTCOMPARE=YES                                   * 00643500
*                      indicates that list number comparison should   * 00643600
*                      precede processing of list entries.            * 00643700
*                                                                     * 00643800
*                                                                     * 00643900
*                      LISTNUM=xlistnum                               * 00644000
*                          is the name (RS-type), or address in       * 00644100
*                          register (2)-(12), of a required fullword  * 00644200
*                          input that designates the number of the    * 00644300
*                          list on which the entries to be processed  * 00644400
*                          reside. LISTNUM is used to restrict        * 00644500
*                          processing to those entries residing on    * 00644600
*                          the list specified.                        * 00644700
*                                                                     * 00644800
*                                                                     * 00644900
*                                                                     * 00645000
*                                                                     * 00645100
*                      ÝAUTHCOMPARE=»NO!YESº                          * 00645200
*                          is an optional keyword input which         * 00645300
*                          determines whether the list authority      * 00645400
*                          comparison is to be used to determine if   * 00645500
*                          entries on the list should be processed.   * 00645600
*                                                                     * 00645700
*                          AUTHCOMPARE is only meaningful for list    * 00645800
*                          structures allocated on CFLEVEL=1 or       * 00645900
*                          higher CF.                                 * 00646000
*                          DEFAULT: NO                                * 00646100
*                                                                     * 00646200
*                                                                     * 00646300
*                          ÝAUTHCOMPARE=NO¨                           * 00646400
*                              indicates no list authority comparison * 00646500
*                              is to be performed before processing   * 00646600
*                              any entries on the list.               * 00646700
*                                                                     * 00646800
*                          ÝAUTHCOMPARE=YES                           * 00646900
*                              indicates that list authority          * 00647000
*                              comparison should precede processing   * 00647100
*                              of any entries on the list.            * 00647200
*                                                                     * 00647300
*                                                                     * 00647400
*                              AUTHCOMP=xauthcomp                     * 00647500
*                                  is the name (RS-type), or address  * 00647600
*                                  in register (2)-(12), of a         * 00647700
*                                  required 16 character input that   * 00647800
*                                  specifies a value to be compared   * 00647900
*                                  to the list authority value for    * 00648000
*                                  the designated list.  If the       * 00648100
*                                  condition specified by             * 00648200
*                                  AUTHCOMPTYPE is not met then the   * 00648300
*                                  IXLLSTM operation is terminated,   * 00648400
*                                  and appropriate return and reason  * 00648500
*                                  codes are provided to the invoker. * 00648600
*                                                                     * 00648700
*                                                                     * 00648800
*                                  ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨ * 00648900
*                                      ¨¨                             * 00649000
*                                      is an optional keyword input   * 00649100
*                                      which specifies how the list   * 00649200
*                                      authority comparison is to be  * 00649300
*                                      performed.                     * 00649400
*                                                                     * 00649500
*                                      DEFAULT: EQUAL                 * 00649600
*                                                                     * 00649700
*                                                                     * 00649800
*                                      AUTHCOMPTYPE=EQUAL             * 00649900
*                                          The list authority for the * 00650000
*                                          list specified by LISTNUM  * 00650100
*                                          must be equal to the value * 00650200
*                                          specified for AUTHCOMP.    * 00650300
*                                                                     * 00650400
*                                                                     * 00650500
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00650600
*                                          The list authority for the * 00650700
*                                          list specified by LISTNUM  * 00650800
*                                          must be less than or equal * 00650900
*                                          to the value specified for * 00651000
*                                          AUTHCOMP.                  * 00651100
*                                                                     * 00651200
*                                                                     * 00651300
*                                                                     * 00651400
*                                                                     * 00651500
*                                                                     * 00651600
*                                                                     * 00651700
*                                                                     * 00651800
*                                                                     * 00651900
*                                                                     * 00652000
*                                                                     * 00652100
*                                                                     * 00652200
*                                                                     * 00652300
*                                                                     * 00652400
*                                                                     * 00652500
*                                                                     * 00652600
*                                                                     * 00652700
*              ÝKEYCOMPARE=»NO!YESº                                   * 00652800
*                  is an optional keyword input that determines       * 00652900
*                  whether the key value of an existing keyed list    * 00653000
*                  entry is to be compared to determine if this entry * 00653100
*                  should be selected for processing.  KEYCOMPARE is  * 00653200
*                  only meaningful for list structures allocated on   * 00653300
*                  CFLEVEL=1 or higher CF.                            * 00653400
*                  DEFAULT: NO                                        * 00653500
*                                                                     * 00653600
*                                                                     * 00653700
*                  ÝKEYCOMPARE=NO¨                                    * 00653800
*                      Indicates that no entry key comparison will be * 00653900
*                      performed to determine if this entry should be * 00654000
*                      processed.                                     * 00654100
*                                                                     * 00654200
*                  ÝKEYCOMPARE=YES                                    * 00654300
*                      Indicates that entry key comparison will be    * 00654400
*                      performed based on the KEYREQTYPE specified to * 00654500
*                      determine if this entry is selectable for      * 00654600
*                      processing.                                    * 00654700
*                                                                     * 00654800
*                      KEYCOMPARE=YES is ignored if the target        * 00654900
*                      structure does not support keyed entries.      * 00655000
*                                                                     * 00655100
*                                                                     * 00655200
*                      ENTRYKEY=xentrykey                             * 00655300
*                          is the name (RS-type), or address in       * 00655400
*                          register (2)-(12), of a required 16        * 00655500
*                          character input that specifies the key to  * 00655600
*                          be used to compare to the entry key of the * 00655700
*                          list entry.  If the condition specified by * 00655800
*                          KEYREQTYPE is not met for the current list * 00655900
*                          entry then no processing is performed for  * 00656000
*                          the current entry, and processing          * 00656100
*                          continues with the next entry to be        * 00656200
*                          considered.                                * 00656300
*                                                                     * 00656400
*                                                                     * 00656500
*                                                                     * 00656600
*                                                                     * 00656700
*                      ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATEROREQUAL! * 00656800
*                          RANGEº¨¨                                   * 00656900
*                          is an optional keyword input which         * 00657000
*                          specifies how entry key comparison is to   * 00657100
*                          be performed on an existing keyed list     * 00657200
*                          entry to determine if the entry is         * 00657300
*                          selectable for processing.                 * 00657400
*                          DEFAULT: EQUAL                             * 00657500
*                                                                     * 00657600
*                                                                     * 00657700
*                          ÝKEYREQTYPE=EQUAL¨                         * 00657800
*                              a list entry must have an entry key    * 00657900
*                              equal to the value specified by        * 00658000
*                              ENTRYKEY.                              * 00658100
*                                                                     * 00658200
*                          ÝKEYREQTYPE=LESSOREQUAL¨                   * 00658300
*                              a list entry must have an entry key    * 00658400
*                              less than or equal to the value        * 00658500
*                              specified by ENTRYKEY.                 * 00658600
*                                                                     * 00658700
*                              KEYREQTYPE=LESSOREQUAL is only valid   * 00658800
*                              when the structure is allocated in a   * 00658900
*                              CFLEVEL=9 or higher CF.                * 00659000
*                                                                     * 00659100
*                          ÝKEYREQTYPE=GREATEROREQUAL¨                * 00659200
*                              a list entry must have an entry key    * 00659300
*                              greater than or equal to the value     * 00659400
*                              specified by ENTRYKEY.                 * 00659500
*                                                                     * 00659600
*                              KEYREQTYPE=GREATEROREQUAL is only      * 00659700
*                              valid when the structure is allocated  * 00659800
*                              in a CFLEVEL=9 or higher CF.           * 00659900
*                                                                     * 00660000
*                          ÝKEYREQTYPE=RANGE                          * 00660100
*                              a list entry must have an entry key    * 00660200
*                              within a specified range of values.    * 00660300
*                              The ENTRYKEY specified will be used as * 00660400
*                              the beginning of the range of key      * 00660500
*                              values that will be compared with the  * 00660600
*                              existing entry key. KEYRANGEEND will   * 00660700
*                              be used as the ending value.  A list   * 00660800
*                              entry must have an entry key value     * 00660900
*                              within the specified entry key range,  * 00661000
*                              inclusive, for it to be selectable.    * 00661100
*                                                                     * 00661200
*                              KEYREQTYPE=RANGE is only valid when    * 00661300
*                              the structure is allocated in a        * 00661400
*                              CFLEVEL=9 or higher CF.                * 00661500
*                                                                     * 00661600
*                                                                     * 00661700
*                              KEYRANGEEND=xkeyrangeend¨¨             * 00661800
*                                  is the name (RS-type), or address  * 00661900
*                                  in register (2)-(12), of a         * 00662000
*                                  required 16 character input        * 00662100
*                                  specifies the ending value for the * 00662200
*                                  range of keys to be compared to    * 00662300
*                                  the entry key of the list entry.   * 00662400
*                                                                     * 00662500
*                                                                     * 00662600
*                                                                     * 00662700
*                                                                     * 00662800
*                                                                     * 00662900
*                                                                     * 00663000
*                                                                     * 00663100
*                                                                     * 00663200
*                                                                     * 00663300
*                                                                     * 00663400
*                                                                     * 00663500
*                                                                     * 00663600
*              ÝSKEYCOMPARE=»NO!YESº                                  * 00663700
*                  is an optional keyword input that determines       * 00663800
*                  whether the secondary key value of an existing     * 00663900
*                  keyed list entry is to be compared to determine if * 00664000
*                  this entry should be selected for processing.      * 00664100
*                  DEFAULT: NO                                        * 00664200
*                                                                     * 00664300
*                                                                     * 00664400
*                  ÝSKEYCOMPARE=NO¨                                   * 00664500
*                      Indicates that no secondary key comparison     * 00664600
*                      will be performed to determine if this entry   * 00664700
*                      should be processed.                           * 00664800
*                                                                     * 00664900
*                  ÝSKEYCOMPARE=YES                                   * 00665000
*                      Indicates that secondary key comparison will   * 00665100
*                      be performed based on the SKEYREQTYPE          * 00665200
*                      specified to determine if this entry is        * 00665300
*                      selectable for processing.                     * 00665400
*                                                                     * 00665500
*                      SKEYCOMPARE=YES is ignored if the target       * 00665600
*                      structure was not allocated with secondary     * 00665700
*                      keys.                                          * 00665800
*                                                                     * 00665900
*                                                                     * 00666000
*                      SECONDARYKEY=xsecondarykey                     * 00666100
*                          is the name (RS-type), or address in       * 00666200
*                          register (2)-(12), of a required 32        * 00666300
*                          character input that specifies the         * 00666400
*                          secondary key to be used to compare to the * 00666500
*                          secondary key of the list entry.  If the   * 00666600
*                          condition specified by SKEYREQTYPE is not  * 00666700
*                          met for the current list entry then no     * 00666800
*                          processing is performed for the current    * 00666900
*                          entry, and processing continues with the   * 00667000
*                          next entry to be considered.               * 00667100
*                                                                     * 00667200
*                                                                     * 00667300
*                                                                     * 00667400
*                                                                     * 00667500
*                      ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATEROREQUAL * 00667600
*                          !RANGEº¨¨                                  * 00667700
*                          is an optional keyword input which         * 00667800
*                          specifies how secondary key comparison is  * 00667900
*                          to be performed on an existing keyed list  * 00668000
*                          entry to determine if the entry is         * 00668100
*                          selectable for processing.                 * 00668200
*                          DEFAULT: EQUAL                             * 00668300
*                                                                     * 00668400
*                                                                     * 00668500
*                          ÝSKEYREQTYPE=EQUAL¨                        * 00668600
*                              a list entry must have a secondary key * 00668700
*                              equal to the value specified by        * 00668800
*                              SECONDARYKEY.                          * 00668900
*                                                                     * 00669000
*                          ÝSKEYREQTYPE=LESSOREQUAL¨                  * 00669100
*                              a list entry must have a secondary     * 00669200
*                              less than or equal to the value        * 00669300
*                              specified by SECONDARYKEY.             * 00669400
*                                                                     * 00669500
*                          ÝSKEYREQTYPE=GREATEROREQUAL¨               * 00669600
*                              a list entry must have a secondary key * 00669700
*                              greater than or equal to the value     * 00669800
*                              specified by SECONDARYKEY.             * 00669900
*                                                                     * 00670000
*                          ÝSKEYREQTYPE=RANGE                         * 00670100
*                              a list entry must have a secondary key * 00670200
*                              within a specified range of values.    * 00670300
*                              The SECONDARYKEY specified will be     * 00670400
*                              used as the beginning of the range of  * 00670500
*                              secondary key values that will be      * 00670600
*                              compared with the secondary key of the * 00670700
*                              designated list entry.  SKEYRANGEEND   * 00670800
*                              will be used as the ending value.  A   * 00670900
*                              list entry must have a secondary key   * 00671000
*                              value within the specified secondary   * 00671100
*                              key range, inclusive, for it to be     * 00671200
*                              selectable.                            * 00671300
*                                                                     * 00671400
*                                                                     * 00671500
*                              SKEYRANGEEND=xskeyrangeend¨¨           * 00671600
*                                  is the name (RS-type), or address  * 00671700
*                                  in register (2)-(12), of a         * 00671800
*                                  required 32 character input which  * 00671900
*                                  specifies the ending value for the * 00672000
*                                  range of secondary keys to be      * 00672100
*                                  compared to the secondary key of   * 00672200
*                                  the list entry.                    * 00672300
*                                                                     * 00672400
*                                                                     * 00672500
*                                                                     * 00672600
*                                                                     * 00672700
*                                                                     * 00672800
*                                                                     * 00672900
*                                                                     * 00673000
*                                                                     * 00673100
*                                                                     * 00673200
*                                                                     * 00673300
*                                                                     * 00673400
*                                                                     * 00673500
*              ÝVERSCOMPARE=»NO!YESº                                  * 00673600
*                  is an optional keyword input that specifies if the * 00673700
*                  version number is to be compared to determine if   * 00673800
*                  entries are to be processed.                       * 00673900
*                  DEFAULT: NO                                        * 00674000
*                                                                     * 00674100
*                                                                     * 00674200
*                  ÝVERSCOMPARE=NO¨                                   * 00674300
*                      indicates no version comparison should be      * 00674400
*                      performed to determine if each list entry      * 00674500
*                      should be processed.                           * 00674600
*                                                                     * 00674700
*                  ÝVERSCOMPARE=YES                                   * 00674800
*                      indicates that version number comparison       * 00674900
*                      should precede processing of each list entry.  * 00675000
*                                                                     * 00675100
*                                                                     * 00675200
*                      VERSCOMP=xverscomp                             * 00675300
*                          is the name (RS-type), or address in       * 00675400
*                          register (2)-(12), of a required 8         * 00675500
*                          character input which specifies a value to * 00675600
*                          be compared to the version number of the   * 00675700
*                          list entry.  If the condition specified by * 00675800
*                          VERSCOMPTYPE is not met for the current    * 00675900
*                          list entry then no processing is performed * 00676000
*                          for the current entry and processing       * 00676100
*                          continues with the next entry to be        * 00676200
*                          considered.                                * 00676300
*                                                                     * 00676400
*                                                                     * 00676500
*                          ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨        * 00676600
*                              is an optional keyword input which     * 00676700
*                              specifies how the list entry version   * 00676800
*                              number comparison is to be performed.  * 00676900
*                                                                     * 00677000
*                              VERSCOMPTYPE=LESSOREQUAL is only       * 00677100
*                              meaningful for list structures         * 00677200
*                              allocated on CFLEVEL=1 or higher CF.   * 00677300
*                                                                     * 00677400
*                              DEFAULT: EQUAL                         * 00677500
*                                                                     * 00677600
*                                                                     * 00677700
*                              VERSCOMPTYPE=EQUAL                     * 00677800
*                                  The version number for the list    * 00677900
*                                  entry must be equal to the value   * 00678000
*                                  specified for VERSCOMP.            * 00678100
*                                                                     * 00678200
*                                                                     * 00678300
*                              VERSCOMPTYPE=LESSOREQUAL               * 00678400
*                                  The version number for the list    * 00678500
*                                  entry must be less than or equal   * 00678600
*                                  to the value specified for         * 00678700
*                                  VERSCOMP.                          * 00678800
*                                  DEFAULT: Equal                     * 00678900
*                                                                     * 00679000
*                                                                     * 00679100
*                                                                     * 00679200
*                                                                     * 00679300
*                                                                     * 00679400
*                                                                     * 00679500
*                                                                     * 00679600
*                                                                     * 00679700
*                                                                     * 00679800
*                                                                     * 00679900
*                                                                     * 00680000
*                                                                     * 00680100
*              The following is a set of mutually exclusive keys.     * 00680200
*              This set is required; only one key must be specified.  * 00680300
*                                                                     * 00680400
*                                                                     * 00680500
*              BUFLIST=Ýxbuflist¨                                     * 00680600
*                  belongs to a set of mutually exclusive keys. It is * 00680700
*                  an output.  It is the name (RS-type), or address   * 00680800
*                  in register (2)-(12), of a 128-byte virtual        * 00680900
*                  storage area containing a list of addresses of     * 00681000
*                  buffers.  These buffers receive output data from   * 00681100
*                  the request, depending on the request specified.   * 00681200
*                  The set of buffers is used as if it were a single  * 00681300
*                  contiguous area for purposes of output.            * 00681400
*                                                                     * 00681500
*                  The format of the list is a set of 8-byte          * 00681600
*                  elements.  The BUFADDRSIZE keyword denotes whether * 00681700
*                  four or eight bytes of the element are used.  If   * 00681800
*                  BUFADDRSIZE=31 is specified then the first four    * 00681900
*                  bytes of each element are reserved space and the   * 00682000
*                  last four bytes contain the address of the buffer. * 00682100
*                  If BUFADDRSIZE=64 is specified then the full eight * 00682200
*                  bytes specify the address of the buffer.  The      * 00682300
*                  buffers may not reside in large pages.  The        * 00682400
*                  buffers may not reside in high shared virtual      * 00682500
*                  storage areas or in pageable high virtual common   * 00682600
*                  storage (above 2GB).                               * 00682700
*                                                                     * 00682800
*                  There may be 1 to 16 buffers passed in the list.   * 00682900
*                  Each buffer in the list must be the same size and  * 00683000
*                  must reside in the same address space or data      * 00683100
*                  space.  Data is stored into the buffers in the     * 00683200
*                  order specified.  For READ_MULT requests each      * 00683300
*                  buffer must be 4096 bytes in length and must start * 00683400
*                  on a 4096-byte boundary.                           * 00683500
*                                                                     * 00683600
*                  Upon successful completion of a READ_MULT request  * 00683700
*                  the BUFLIST buffers contain, starting at offset    * 00683800
*                  zero in the first buffer, an array of elements     * 00683900
*                  each of which is constructed as follows (dependent * 00684000
*                  on request options):                               * 00684100
*                                                                     * 00684200
*                  When adjunct data is requested on a READ_MULT      * 00684300
*                  request the adjunct data for the first entry       * 00684400
*                  processed is returned in the storage area          * 00684500
*                  specified by ADJAREA.  The adjunct data for all    * 00684600
*                  other entries is returned in the BUFLIST buffers.  * 00684700
*                  When list entry controls are requested the entry   * 00684800
*                  controls for the first entry processed is returned * 00684900
*                  in the answer area specified by ANSAREA.  The      * 00685000
*                  entry controls for all other entries is returned   * 00685100
*                  in the BUFLIST buffers.                            * 00685200
*                                                                     * 00685300
*                                                                     * 00685400
*                  o   When TYPE=ENTDATA was specified:               * 00685500
*                                                                     * 00685600
*                      Entry data.                                    * 00685700
*                                                                     * 00685800
*                  o   When TYPE=ADJDATA was specified:               * 00685900
*                                                                     * 00686000
*                      Adunct data.                                   * 00686100
*                                                                     * 00686200
*                  o   When TYPE=ECONTROLS was specified:             * 00686300
*                                                                     * 00686400
*                      List entry controls.                           * 00686500
*                                                                     * 00686600
*                  o   When TYPE=(ENTDATA,ADJDATA) was specified:     * 00686700
*                                                                     * 00686800
*                      Entry data, followed by adjunct data.          * 00686900
*                                                                     * 00687000
*                  o   When TYPE=(ENTDATA,ECONTROLS) was specified:   * 00687100
*                                                                     * 00687200
*                      List entry controls, followed by entry data.   * 00687300
*                                                                     * 00687400
*                  o   When TYPE=(ADJDATA,ECONTROLS) was specified:   * 00687500
*                                                                     * 00687600
*                      List entry controls, followed by adjunct data. * 00687700
*                                                                     * 00687800
*                  o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was      * 00687900
*                      specified:                                     * 00688000
*                                                                     * 00688100
*                      List entry controls, followed by entry data,   * 00688200
*                      followed by adjunct data.                      * 00688300
*                                                                     * 00688400
*                                                                     * 00688500
*                                                                     * 00688600
*                  One array element is returned for each processed   * 00688700
*                  entry.  The number of elements returned in the     * 00688800
*                  BUFLIST buffers is indicated in the answer area    * 00688900
*                  specified by ANSAREA.  An element length may be    * 00689000
*                  determined by considering the element make-up, the * 00689100
*                  structure element size, the number of elements in  * 00689200
*                  the entry, an adjunct data size of 64 bytes, and   * 00689300
*                  the length of list entry controls.  The length and * 00689400
*                  contents of list entry controls is defined by      * 00689500
*                  mapping macro IXLYLCTL.                            * 00689600
*                                                                     * 00689700
*                  BUFLIST is mutually exclusive with BUFFER.         * 00689800
*                                                                     * 00689900
*                                                                     * 00690000
*                  ÝBUFADDRTYPE=»VIRTUAL!REALº                        * 00690100
*                      is an optional keyword input that specifies    * 00690200
*                      whether the buffer addresses specified in the  * 00690300
*                      BUFLIST list are virtual storage addresses or  * 00690400
*                      real storage addresses.                        * 00690500
*                                                                     * 00690600
*                      DEFAULT: VIRTUAL                               * 00690700
*                                                                     * 00690800
*                                                                     * 00690900
*                      ÝBUFADDRTYPE=VIRTUAL                           * 00691000
*                          Indicates that the buffer addresses        * 00691100
*                          specified in the BUFLIST list are virtual  * 00691200
*                          storage addresses.                         * 00691300
*                                                                     * 00691400
*                                                                     * 00691500
*                                                                     * 00691600
*                          ÝPAGEABLE=»YES!NOº¨                        * 00691700
*                              is an optional keyword input that      * 00691800
*                              specifies whether or not the buffers   * 00691900
*                              specified by BUFLIST resides in        * 00692000
*                              pageable storage.                      * 00692100
*                                                                     * 00692200
*                              DEFAULT: YES                           * 00692300
*                                                                     * 00692400
*                                                                     * 00692500
*                              ÝPAGEABLE=YES                          * 00692600
*                                  Indicates that the BUFLIST buffers * 00692700
*                                  reside in pageable virtual         * 00692800
*                                  storage.                           * 00692900
*                                                                     * 00693000
*                                  This includes disabled reference   * 00693100
*                                  storage, and may include storage   * 00693200
*                                  that has the potential to become   * 00693300
*                                  pageable (such as address space    * 00693400
*                                  storage for which a PGSER FIX has  * 00693500
*                                  been successfully processed).  It  * 00693600
*                                  does not include implicitly        * 00693700
*                                  non-pageable storage (such as is   * 00693800
*                                  obtained from non-pageable         * 00693900
*                                  subpools).                         * 00694000
*                                                                     * 00694100
*                                                                     * 00694200
*                                                                     * 00694300
*                                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEY * 00694400
*                                      º¨¨                            * 00694500
*                                      is the name (RS-type), or      * 00694600
*                                      address in register (2)-(12),  * 00694700
*                                      of an optional 8 bit input     * 00694800
*                                      containing the storage key to  * 00694900
*                                      be used when referencing the   * 00695000
*                                      buffers in the list specified  * 00695100
*                                      by BUFLIST.                    * 00695200
*                                                                     * 00695300
*                                      The high order nibble contains * 00695400
*                                      the storage key, the low order * 00695500
*                                      nibble is ignored.  For        * 00695600
*                                      example, set 'kkkk' in the     * 00695700
*                                      binary bit string 'kkkkxxxx'B  * 00695800
*                                      to correspond to the desired   * 00695900
*                                      storage key.                   * 00696000
*                                                                     * 00696100
*                                      If BUFSTGKEY is not specified, * 00696200
*                                      then all references to the     * 00696300
*                                      BUFLIST buffers are performed  * 00696400
*                                      using the caller's PSW key.    * 00696500
*                                                                     * 00696600
*                                      DEFAULT: CALLERS_KEY           * 00696700
*                                                                     * 00696800
*                                                                     * 00696900
*                                                                     * 00697000
*                              ÝPAGEABLE=NO¨                          * 00697100
*                                  Indicates that the BUFLIST buffers * 00697200
*                                  reside in non-pageable virtual     * 00697300
*                                  storage.                           * 00697400
*                                                                     * 00697500
*                                  This includes implicitly           * 00697600
*                                  non-pageable storage areas.  If    * 00697700
*                                  the virtual storage may            * 00697800
*                                  potentially become pageable, then  * 00697900
*                                  the invoker is responsible for     * 00698000
*                                  ensuring the virtual storage       * 00698100
*                                  remains non-pageable for the       * 00698200
*                                  duration of the request.           * 00698300
*                                                                     * 00698400
*                                  If MODE=ASYNCTOKEN is specified or * 00698500
*                                  MODE=SYNCTOKEN is specified and    * 00698600
*                                  the request does not complete      * 00698700
*                                  synchronously, then the storage    * 00698800
*                                  must remain non-pageable until     * 00698900
*                                  completion of the corresponding    * 00699000
*                                  IXLFCOMP request.  If              * 00699100
*                                  MODE=ASYNCEXIT is specified or     * 00699200
*                                  MODE=SYNCEXIT is specified and the * 00699300
*                                  request does not complete          * 00699400
*                                  synchronously, then the storage    * 00699500
*                                  must remain non-pageable until the * 00699600
*                                  completion exit is driven for the  * 00699700
*                                  request.  If MODE=ASYNCECB is      * 00699800
*                                  specified or MODE=SYNCECB is       * 00699900
*                                  specified and the request does not * 00700000
*                                  complete synchronously, then the   * 00700100
*                                  storage must remain non-pageable   * 00700200
*                                  until the specified ECB is posted  * 00700300
*                                  for the request.                   * 00700400
*                                                                     * 00700500
*                                                                     * 00700600
*                                                                     * 00700700
*                                                                     * 00700800
*                                                                     * 00700900
*                                                                     * 00701000
*                          ÝBUFALET=»xbufalet!NO_BUFALETº¨            * 00701100
*                              is the name (RS-type), or address in   * 00701200
*                              register (2)-(12), of an optional      * 00701300
*                              fullword input specifying the ALET     * 00701400
*                              value to be used in referencing all of * 00701500
*                              the buffers specified for BUFLIST      * 00701600
*                                                                     * 00701700
*                              DEFAULT: NO_BUFALET                    * 00701800
*                                                                     * 00701900
*                                                                     * 00702000
*                                                                     * 00702100
*                                                                     * 00702200
*                          ÝBUFADDRSIZE=»31!64º¨                      * 00702300
*                              is an optional keyword input that      * 00702400
*                              specifies whether a 31 or a 64 bit     * 00702500
*                              address is specified by a BUFLIST      * 00702600
*                              entry.                                 * 00702700
*                                                                     * 00702800
*                              DEFAULT: 31                            * 00702900
*                                                                     * 00703000
*                                                                     * 00703100
*                              ÝBUFADDRSIZE=31¨                       * 00703200
*                                  Indicates that the BUFLIST entry   * 00703300
*                                  is 31 bits in size.                * 00703400
*                                                                     * 00703500
*                              ÝBUFADDRSIZE=64¨¨                      * 00703600
*                                  Indicates that the BUFLIST entry   * 00703700
*                                  is 64 bits in size.                * 00703800
*                                                                     * 00703900
*                                                                     * 00704000
*                                                                     * 00704100
*                                                                     * 00704200
*                                                                     * 00704300
*                      ÝBUFADDRTYPE=REAL                              * 00704400
*                          Indicates that the buffer addresses        * 00704500
*                          specified in the BUFLIST list are real     * 00704600
*                          storage addresses.                         * 00704700
*                                                                     * 00704800
*                                                                     * 00704900
*                          ÝBUFADDRSIZE=»31!64º¨¨                     * 00705000
*                              is an optional keyword input that      * 00705100
*                              specifies whether a 31 or a 64 bit     * 00705200
*                              address is specified by a BUFLIST      * 00705300
*                              entry.                                 * 00705400
*                                                                     * 00705500
*                              DEFAULT: 31                            * 00705600
*                                                                     * 00705700
*                                                                     * 00705800
*                              ÝBUFADDRSIZE=31¨                       * 00705900
*                                  Indicates that the BUFLIST entry   * 00706000
*                                  is 31 bits in size.                * 00706100
*                                                                     * 00706200
*                              ÝBUFADDRSIZE=64¨¨                      * 00706300
*                                  Indicates that the BUFLIST entry   * 00706400
*                                  is 64 bits in size.                * 00706500
*                                                                     * 00706600
*                                                                     * 00706700
*                                                                     * 00706800
*                                                                     * 00706900
*                                                                     * 00707000
*                                                                     * 00707100
*                                                                     * 00707200
*                                                                     * 00707300
*                                                                     * 00707400
*                                                                     * 00707500
*                  BUFNUM=xbufnum                                     * 00707600
*                      is the name (RS-type), or address in register  * 00707700
*                      (2)-(12), of a required byte input specifying  * 00707800
*                      the number of buffers defined in the BUFLIST   * 00707900
*                      list.                                          * 00708000
*                                                                     * 00708100
*                      BUFNUM values must be in the range of 1 to 16. * 00708200
*                                                                     * 00708300
*                                                                     * 00708400
*                                                                     * 00708500
*                                                                     * 00708600
*              BUFFER=Ýxbuffer¨                                       * 00708700
*                  belongs to a set of mutually exclusive keys. It is * 00708800
*                  an output.  It is the name (RS-type), or address   * 00708900
*                  in register (2)-(12), of a virtual storage area to * 00709000
*                  receive output data from the request.  The BUFSIZE * 00709100
*                  keyword specifies the size of the buffer.  The     * 00709200
*                  BUFFER keyword supports 4 byte addresses only.     * 00709300
*                  The BUFFER keyword is mutually exclusive with the  * 00709400
*                  BUFADDRSIZE keyword.                               * 00709500
*                                                                     * 00709600
*                  For READ_MULT requests the length of the buffer    * 00709700
*                  must be a multiple of 4096 bytes between 4096 and  * 00709800
*                  65536 and the buffer must start on a 4096-byte     * 00709900
*                  boundary.  The buffer may not reside in large      * 00710000
*                  pages.                                             * 00710100
*                                                                     * 00710200
*                  Upon successful completion of a READ_MULT request  * 00710300
*                  the BUFFER area contains, starting at offset zero  * 00710400
*                  in the first buffer, an array of elements each of  * 00710500
*                  which is constructed as follows (dependent on      * 00710600
*                  request options):                                  * 00710700
*                                                                     * 00710800
*                  When adjunct data is requested on a READ_MULT      * 00710900
*                  request the adjunct data for the first entry       * 00711000
*                  processed is returned in the storage area          * 00711100
*                  specified by ADJAREA.  The adjunct data for all    * 00711200
*                  other entries is returned in the BUFFER area.      * 00711300
*                  When list entry controls are requested the entry   * 00711400
*                  controls for the first entry processed is returned * 00711500
*                  in the answer area specified by ANSAREA.  The      * 00711600
*                  entry controls for all other entries is returned   * 00711700
*                  in the BUFFER area.                                * 00711800
*                                                                     * 00711900
*                                                                     * 00712000
*                  o   When TYPE=ENTDATA was specified:               * 00712100
*                                                                     * 00712200
*                      Entry data.                                    * 00712300
*                                                                     * 00712400
*                  o   When TYPE=ADJDATA was specified:               * 00712500
*                                                                     * 00712600
*                      Adunct data.                                   * 00712700
*                                                                     * 00712800
*                  o   When TYPE=ECONTROLS was specified:             * 00712900
*                                                                     * 00713000
*                      List entry controls.                           * 00713100
*                                                                     * 00713200
*                  o   When TYPE=(ENTDATA,ADJDATA) was specified:     * 00713300
*                                                                     * 00713400
*                      Entry data, followed by adjunct data.          * 00713500
*                                                                     * 00713600
*                  o   When TYPE=(ENTDATA,ECONTROLS) was specified:   * 00713700
*                                                                     * 00713800
*                      List entry controls, followed by entry data.   * 00713900
*                                                                     * 00714000
*                  o   When TYPE=(ADJDATA,ECONTROLS) was specified:   * 00714100
*                                                                     * 00714200
*                      List entry controls, followed by adjunct data. * 00714300
*                                                                     * 00714400
*                  o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was      * 00714500
*                      specified:                                     * 00714600
*                                                                     * 00714700
*                      List entry controls, followed by entry data,   * 00714800
*                      followed by adjunct data.                      * 00714900
*                                                                     * 00715000
*                                                                     * 00715100
*                                                                     * 00715200
*                  One array element is returned for each processed   * 00715300
*                  entry.  The number of elements returned in the     * 00715400
*                  BUFFER area is indicated in the answer area        * 00715500
*                  specified by ANSAREA.  An element length may be    * 00715600
*                  determined by considering the element make-up, the * 00715700
*                  structure element size, the number of elements in  * 00715800
*                  the entry, an adjunct data size of 64 bytes, and   * 00715900
*                  the length of list entry controls.  The length and * 00716000
*                  contents of list entry controls is defined by      * 00716100
*                  mapping macro IXLYLCTL.                            * 00716200
*                                                                     * 00716300
*                                                                     * 00716400
*                  ÝPAGEABLE=»YES!NOº¨                                * 00716500
*                      is an optional keyword input that specifies    * 00716600
*                      whether or not the storage area specified by   * 00716700
*                      BUFFER resides in pageable storage.            * 00716800
*                                                                     * 00716900
*                      DEFAULT: YES                                   * 00717000
*                                                                     * 00717100
*                                                                     * 00717200
*                      ÝPAGEABLE=YES                                  * 00717300
*                          Indicates that the BUFFER area resides in  * 00717400
*                          pageable virtual storage.                  * 00717500
*                                                                     * 00717600
*                          This includes disabled reference storage,  * 00717700
*                          and may include storage that has the       * 00717800
*                          potential to become pageable It does not   * 00717900
*                          include implicitly non-pageable storage    * 00718000
*                          (such as is obtained from non-pageable     * 00718100
*                          subpools).                                 * 00718200
*                                                                     * 00718300
*                                                                     * 00718400
*                                                                     * 00718500
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00718600
*                              is the name (RS-type), or address in   * 00718700
*                              register (2)-(12), of an optional 8    * 00718800
*                              bit input containing the storage key   * 00718900
*                              to be used when referencing the        * 00719000
*                              storage area specified by BUFFER.      * 00719100
*                                                                     * 00719200
*                              The high order nibble contains the     * 00719300
*                              storage key, the low order nibble is   * 00719400
*                              ignored.  For example, set 'kkkk' in   * 00719500
*                              the binary bit string 'kkkkxxxx'B to   * 00719600
*                              correspond to the desired storage key. * 00719700
*                                                                     * 00719800
*                              If BUFSTGKEY is not specified, then    * 00719900
*                              all references to the BUFFER buffer    * 00720000
*                              storage are performed using the        * 00720100
*                              caller's PSW key.                      * 00720200
*                                                                     * 00720300
*                              DEFAULT: CALLERS_KEY                   * 00720400
*                                                                     * 00720500
*                                                                     * 00720600
*                                                                     * 00720700
*                      ÝPAGEABLE=NO¨                                  * 00720800
*                          Indicates that the BUFFER area resides in  * 00720900
*                          non-pageable virtual storage.              * 00721000
*                                                                     * 00721100
*                          This includes implicitly non-pageable      * 00721200
*                          storage areas.  If the virtual storage may * 00721300
*                          potentially become pageable, then the      * 00721400
*                          invoker is responsible for ensuring the    * 00721500
*                          virtual storage remains non-pageable for   * 00721600
*                          the duration of the request.               * 00721700
*                                                                     * 00721800
*                          If MODE=ASYNCTOKEN is specified or         * 00721900
*                          MODE=SYNCTOKEN is specified and the        * 00722000
*                          request does not complete synchronously,   * 00722100
*                          then the storage must remain non-pageable  * 00722200
*                          until completion of the corresponding      * 00722300
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00722400
*                          specified or MODE=SYNCEXIT is specified    * 00722500
*                          and the request does not complete          * 00722600
*                          synchronously, then the storage must       * 00722700
*                          remain non-pageable until the completion   * 00722800
*                          exit is driven for the request.  If        * 00722900
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00723000
*                          is specified and the request does not      * 00723100
*                          complete synchronously, then the storage   * 00723200
*                          must remain non-pageable until the         * 00723300
*                          specified ECB is posted for the request.   * 00723400
*                                                                     * 00723500
*                                                                     * 00723600
*                                                                     * 00723700
*                                                                     * 00723800
*                                                                     * 00723900
*                                                                     * 00724000
*                  BUFSIZE=xbufsize                                   * 00724100
*                      is the name (RS-type), or address in register  * 00724200
*                      (2)-(12), of a required fullword input         * 00724300
*                      specifying the length of the virtual storage   * 00724400
*                      area specified for BUFFER in bytes.            * 00724500
*                                                                     * 00724600
*                                                                     * 00724700
*                                                                     * 00724800
*                                                                     * 00724900
*                                                                     * 00725000
*                                                                     * 00725100
*              End of a set of mutually exclusive required keys.      * 00725200
*                                                                     * 00725300
*                                                                     * 00725400
*          REQUEST=DELETE_MULT                                        * 00725500
*              Delete multiple entries.  Requests that all entries    * 00725600
*              meeting specified criteria be removed from whatever    * 00725700
*              list they reside on and returned to the pool of free   * 00725800
*              entries for reuse.                                     * 00725900
*                                                                     * 00726000
*              Specifying AUTHCOMPARE=YES and AUTHCOMP causes list    * 00726100
*              authority comparison for the designated list to        * 00726200
*              precede processing of any list entries.  If the list   * 00726300
*              authority comparison fails, the list authority, the    * 00726400
*              list control information and appropriate return and    * 00726500
*              reason codes are provided in the ANSAREA.              * 00726600
*                                                                     * 00726700
*              LOCKINDEX may optionally be specified in conjunction   * 00726800
*              with LOCKOPER to indicate the index of the serialized  * 00726900
*              list lock to be operated on within the lock table for  * 00727000
*              the list structure. If the lock comparison fails, the  * 00727100
*              lock table entry, and appropriate return and reason    * 00727200
*              codes are provided in the ANSAREA.                     * 00727300
*                                                                     * 00727400
*              The absence of AUTHCOMPARE or specifying               * 00727500
*              AUTHCOMPARE=NO and the absence of LOCKINDEX indicates  * 00727600
*              no list authority or lock comparisons before           * 00727700
*              processing any entries on the list.                    * 00727800
*                                                                     * 00727900
*              Specifying LISTNUM in conjunction with LISTCOMPARE may * 00728000
*              optionally be specified to restrict processing to      * 00728100
*              those entries residing on a specific list.  The        * 00728200
*              absence of LISTCOMPARE or specifying LISTCOMPARE=NO    * 00728300
*              indicates no list number comparisons are to be         * 00728400
*              performed when selecting entries to be processed.      * 00728500
*                                                                     * 00728600
*              Specifying VERSCOMPARE=YES in conjunction with         * 00728700
*              VERSCOMP may optionally be used to restrict processing * 00728800
*              to those entries with a version number matching that   * 00728900
*              specified by VERSCOMPTYPE.  The order of entry         * 00729000
*              processing is unpredictable.  The absence of           * 00729100
*              VERSCOMPARE or specifying VERSCOMPARE=NO indicates no  * 00729200
*              version comparisons are to be performed when selecting * 00729300
*              entries to be processed.                               * 00729400
*                                                                     * 00729500
*              Specifying ENTRYKEY in conjunction with                * 00729600
*              KEYCOMPARE=YES, causes key comparison to be performed  * 00729700
*              as specified by KEYREQTYPE. The absence of KEYCOMPARE, * 00729800
*              or specifying KEYCOMPARE=NO indicates no key value     * 00729900
*              comparisons are performed when selecting entries to be * 00730000
*              processed.                                             * 00730100
*                                                                     * 00730200
*              Specifying SECONDARYKEY in conjunction with            * 00730300
*              SKEYCOMPARE=YES, causes secondary key comparison to be * 00730400
*              performed as specified by SKEYREQTYPE. The absence of  * 00730500
*              SKEYCOMPARE, or specifying SKEYCOMPARE=NO indicates no * 00730600
*              secondary key value comparisons are performed when     * 00730700
*              selecting entries to be processed.                     * 00730800
*                                                                     * 00730900
*              In order for a list entry to be processed, the list    * 00731000
*              number comparison, the list authority verification and * 00731100
*              the lock operation if requested, must succeed.  In     * 00731200
*              order for a particular list entry to be deleted, the   * 00731300
*              version number verification, and the key comparison,   * 00731400
*              when requested, must succeed otherwise no processing   * 00731500
*              is performed for the current entry and processing      * 00731600
*              continues with the next entry to be considered.        * 00731700
*                                                                     * 00731800
*              When the request completes successfully the number of  * 00731900
*              entries deleted as a result of this request is         * 00732000
*              returned in the answer area specified by ANSAREA.      * 00732100
*                                                                     * 00732200
*              A DELETE_MULT request may complete prematurely if      * 00732300
*              coupling facility model dependent timeout criteria is  * 00732400
*              exceeded.  In this event appropriate return and reason * 00732500
*              codes are provided, and the number of entries deleted  * 00732600
*              and a restart token or an extended restart token is    * 00732700
*              provided in ANSAREA.  This restart token or an         * 00732800
*              extended restart token may be specified as input on a  * 00732900
*              subsequent DELETE_MULT request to resume processing    * 00733000
*              with the appropriate list entry.                       * 00733100
*                                                                     * 00733200
*              Except for designation of the starting point, resumed  * 00733300
*              requests are processed identically to and must meet    * 00733400
*              the same interface requirements as non-resumed         * 00733500
*              requests.  A resumed request may in turn experience    * 00733600
*              premature completion.                                  * 00733700
*                                                                     * 00733800
*                                                                     * 00733900
*              The following is a set of mutually exclusive keys.     * 00734000
*              This set is optional; only one key may be specified.   * 00734100
*                                                                     * 00734200
*                                                                     * 00734300
*                  The RESTOKEN and EXTRESTOKEN keywords are input    * 00734400
*                  fields that name a restart token specifying an     * 00734500
*                  appropriate coupling facility indicator for        * 00734600
*                  resuming requests that complete prematurely.       * 00734700
*                                                                     * 00734800
*                  Specifying an input restart token initialized to   * 00734900
*                  all zeros causes the request to consider all       * 00735000
*                  entries as unprocessed.  Specifying an input       * 00735100
*                  restart token other than one returned from a       * 00735200
*                  previous invocation of the request and not fully   * 00735300
*                  initialized to all zeros will produce              * 00735400
*                  unpredictable request results.                     * 00735500
*                                                                     * 00735600
*                  A restart token is returned in the answer area     * 00735700
*                  specified by ANSAREA when the request completes    * 00735800
*                  prematurely, and may be specified on a subsequent  * 00735900
*                  DELETE_MULT request to resume the request at an    * 00736000
*                  appropriate point.                                 * 00736100
*                                                                     * 00736200
*                  Requestors who specify IXLCONN ALLOWAUTO=YES must  * 00736300
*                  use the 16-byte extended restart token             * 00736400
*                  (EXTRESTOKEN).  Users who specify IXLCONN          * 00736500
*                  ALLOWAUTO=NO must use the standard 8-byte restart  * 00736600
*                  tokens (RESTOKEN).                                 * 00736700
*                                                                     * 00736800
*              ÝRESTOKEN=»xrestoken!NO_RESTOKENº                      * 00736900
*                  belongs to a set of mutually exclusive keys. It is * 00737000
*                  the name (RS-type), or address in register         * 00737100
*                  (2)-(12), of an optional 8 character input field   * 00737200
*                  that contains a restart token specifying an        * 00737300
*                  appropriate coupling facility indicator for        * 00737400
*                  resuming requests that complete prematurely.       * 00737500
*                                                                     * 00737600
*                  A restart token is returned in the LAARESTOKEN     * 00737700
*                  field of the answer area specified by ANSAREA when * 00737800
*                  the request completes prematurely.                 * 00737900
*                                                                     * 00738000
*                  DEFAULT: NO_RESTOKEN                               * 00738100
*                                                                     * 00738200
*              EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨             * 00738300
*                  belongs to a set of mutually exclusive keys. It is * 00738400
*                  the name (RS-type), or address in register         * 00738500
*                  (2)-(12), of an optional 16 character input field  * 00738600
*                  that contains an extended restart token specifying * 00738700
*                  an appropriate coupling facility indicator for     * 00738800
*                  resuming requests that complete prematurely.       * 00738900
*                                                                     * 00739000
*                  A restart token is returned in the LAAEXTRESTOKEN  * 00739100
*                  field of the answer area specified by ANSAREA when * 00739200
*                  the request completes prematurely.                 * 00739300
*                                                                     * 00739400
*                  DEFAULT: NO_EXTRESTOKEN                            * 00739500
*                                                                     * 00739600
*                                                                     * 00739700
*                                                                     * 00739800
*              End of a set of mutually exclusive optional keys.      * 00739900
*              DEFAULT: RESTOKEN                                      * 00740000
*                                                                     * 00740100
*                                                                     * 00740200
*                                                                     * 00740300
*              ÝLISTCOMPARE=»NO!YESº                                  * 00740400
*                  is an optional keyword input which determines if   * 00740500
*                  the list number is to be compared to determine if  * 00740600
*                  entries should be processed.                       * 00740700
*                  DEFAULT: NO                                        * 00740800
*                                                                     * 00740900
*                                                                     * 00741000
*                  ÝLISTCOMPARE=NO¨                                   * 00741100
*                      indicates no list number criteria is to be     * 00741200
*                      applied when selecting entries to be           * 00741300
*                      processed.                                     * 00741400
*                                                                     * 00741500
*                  ÝLISTCOMPARE=YES                                   * 00741600
*                      indicates that list number comparison should   * 00741700
*                      precede processing of any list entries.        * 00741800
*                                                                     * 00741900
*                                                                     * 00742000
*                      LISTNUM=xlistnum                               * 00742100
*                          is the name (RS-type), or address in       * 00742200
*                          register (2)-(12), of a required fullword  * 00742300
*                          input designates the number of the list on * 00742400
*                          which the entries to be processed reside.  * 00742500
*                          LISTNUM is used to restrict processing to  * 00742600
*                          those entries residing on the list         * 00742700
*                          specified.                                 * 00742800
*                                                                     * 00742900
*                                                                     * 00743000
*                                                                     * 00743100
*                                                                     * 00743200
*                      ÝAUTHCOMPARE=»NO!YESº                          * 00743300
*                          is an optional keyword input which         * 00743400
*                          determines whether the list authority      * 00743500
*                          comparison is to be used to determine if   * 00743600
*                          entries on the list should be processed.   * 00743700
*                                                                     * 00743800
*                          AUTHCOMPARE is only meaningful for list    * 00743900
*                          structures allocated on CFLEVEL=1 or       * 00744000
*                          higher CF.                                 * 00744100
*                          DEFAULT: NO                                * 00744200
*                                                                     * 00744300
*                                                                     * 00744400
*                          ÝAUTHCOMPARE=NO¨                           * 00744500
*                              indicates no list authority comparison * 00744600
*                              is to be performed before processing   * 00744700
*                              any entries on the list.               * 00744800
*                                                                     * 00744900
*                          ÝAUTHCOMPARE=YES                           * 00745000
*                              indicates that list authority          * 00745100
*                              comparison should precede processing   * 00745200
*                              of any entries on the list.            * 00745300
*                                                                     * 00745400
*                                                                     * 00745500
*                              AUTHCOMP=xauthcomp                     * 00745600
*                                  is the name (RS-type), or address  * 00745700
*                                  in register (2)-(12), of a         * 00745800
*                                  required 16 character input which  * 00745900
*                                  specifies a value to be compared   * 00746000
*                                  to the list authority value for    * 00746100
*                                  the designated list.  If the       * 00746200
*                                  condition specified by             * 00746300
*                                  AUTHCOMPTYPE is not met then the   * 00746400
*                                  IXLLSTM operation is terminated    * 00746500
*                                  with no resultant change to the    * 00746600
*                                  structure, and appropriate return  * 00746700
*                                  and reason codes are provided to   * 00746800
*                                  the invoker.                       * 00746900
*                                                                     * 00747000
*                                                                     * 00747100
*                                  ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨ * 00747200
*                                      ¨¨                             * 00747300
*                                      is an optional keyword input   * 00747400
*                                      which specifies how the list   * 00747500
*                                      authority comparison is to be  * 00747600
*                                      performed.                     * 00747700
*                                                                     * 00747800
*                                      DEFAULT: EQUAL                 * 00747900
*                                                                     * 00748000
*                                                                     * 00748100
*                                      AUTHCOMPTYPE=EQUAL             * 00748200
*                                          The list authority for the * 00748300
*                                          list specified by LISTNUM  * 00748400
*                                          must be equal to the value * 00748500
*                                          specified for AUTHCOMP.    * 00748600
*                                                                     * 00748700
*                                                                     * 00748800
*                                      AUTHCOMPTYPE=LESSOREQUAL       * 00748900
*                                          The list authority for the * 00749000
*                                          list specified by LISTNUM  * 00749100
*                                          must be less than or equal * 00749200
*                                          to the value specified for * 00749300
*                                          AUTHCOMP.                  * 00749400
*                                                                     * 00749500
*                                                                     * 00749600
*                                                                     * 00749700
*                                                                     * 00749800
*                                                                     * 00749900
*                                                                     * 00750000
*                                                                     * 00750100
*                                                                     * 00750200
*                                                                     * 00750300
*                                                                     * 00750400
*                                                                     * 00750500
*                                                                     * 00750600
*                                                                     * 00750700
*                                                                     * 00750800
*                                                                     * 00750900
*                                                                     * 00751000
*              ÝKEYCOMPARE=»NO!YESº                                   * 00751100
*                  is an optional keyword input that determines       * 00751200
*                  whether the key value of an existing keyed list    * 00751300
*                  entry is to be compared to determine if this entry * 00751400
*                  should be selected for processing.  KEYCOMPARE is  * 00751500
*                  only meaningful for list structures allocated on   * 00751600
*                  CFLEVEL=1 or higher CF.                            * 00751700
*                  DEFAULT: NO                                        * 00751800
*                                                                     * 00751900
*                                                                     * 00752000
*                  ÝKEYCOMPARE=NO¨                                    * 00752100
*                      Indicates that no entry key comparison will be * 00752200
*                      performed to determine if this entry should be * 00752300
*                      processed.                                     * 00752400
*                                                                     * 00752500
*                  ÝKEYCOMPARE=YES                                    * 00752600
*                      Indicates that entry key comparison will be    * 00752700
*                      performed based on the KEYREQTYPE specified to * 00752800
*                      determine if this entry is selectable for      * 00752900
*                      processing.                                    * 00753000
*                                                                     * 00753100
*                      KEYCOMPARE=YES is ignored if the target        * 00753200
*                      structure does not support keyed entries.      * 00753300
*                                                                     * 00753400
*                                                                     * 00753500
*                      ENTRYKEY=xentrykey                             * 00753600
*                          is the name (RS-type), or address in       * 00753700
*                          register (2)-(12), of a required 16        * 00753800
*                          character input that specifies the key to  * 00753900
*                          be used to compare to the entry key of the * 00754000
*                          list entry.  If the condition specified by * 00754100
*                          KEYREQTYPE is not met for the current list * 00754200
*                          entry then no processing is performed for  * 00754300
*                          the current entry, and processing          * 00754400
*                          continues with the next entry to be        * 00754500
*                          considered.                                * 00754600
*                                                                     * 00754700
*                                                                     * 00754800
*                                                                     * 00754900
*                                                                     * 00755000
*                      ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATEROREQUAL! * 00755100
*                          RANGEº¨¨                                   * 00755200
*                          is an optional keyword input which         * 00755300
*                          specifies how entry Key comparison is to   * 00755400
*                          be performed on an existing keyed list     * 00755500
*                          entry to determine if the entry is         * 00755600
*                          selectable for processing.                 * 00755700
*                          DEFAULT: EQUAL                             * 00755800
*                                                                     * 00755900
*                                                                     * 00756000
*                          ÝKEYREQTYPE=EQUAL¨                         * 00756100
*                              a list entry must have an entry key    * 00756200
*                              equal to the value specified by        * 00756300
*                              ENTRYKEY.                              * 00756400
*                                                                     * 00756500
*                          ÝKEYREQTYPE=LESSOREQUAL¨                   * 00756600
*                              a list entry must have an entry key    * 00756700
*                              less than or equal to the value        * 00756800
*                              specified by ENTRYKEY.                 * 00756900
*                                                                     * 00757000
*                              KEYREQTYPE=LESSOREQUAL is only valid   * 00757100
*                              when the structure is allocated in a   * 00757200
*                              CFLEVEL=9 or higher CF.                * 00757300
*                                                                     * 00757400
*                          ÝKEYREQTYPE=GREATEROREQUAL¨                * 00757500
*                              a list entry must have an entry key    * 00757600
*                              greater than or equal to the value     * 00757700
*                              specified by ENTRYKEY.                 * 00757800
*                                                                     * 00757900
*                              KEYREQTYPE=GREATEROREQUAL is only      * 00758000
*                              valid when the structure is allocated  * 00758100
*                              in a CFLEVEL=9 or higher CF.           * 00758200
*                                                                     * 00758300
*                          ÝKEYREQTYPE=RANGE                          * 00758400
*                              a list entry must have an entry key    * 00758500
*                              within a specified range of values.    * 00758600
*                              The ENTRYKEY specified will be used as * 00758700
*                              the beginning of the range of key      * 00758800
*                              values that will be compared with the  * 00758900
*                              existing entry key. KEYRANGEEND will   * 00759000
*                              be used as the ending value.  A list   * 00759100
*                              entry must have an entry key value     * 00759200
*                              within the specified entry key range,  * 00759300
*                              inclusive, for it to be selectable.    * 00759400
*                                                                     * 00759500
*                              KEYREQTYPE=RANGE is only valid when    * 00759600
*                              the structure is allocated in a        * 00759700
*                              CFLEVEL=9 or higher CF.                * 00759800
*                                                                     * 00759900
*                                                                     * 00760000
*                              KEYRANGEEND=xkeyrangeend¨¨             * 00760100
*                                  is the name (RS-type), or address  * 00760200
*                                  in register (2)-(12), of a         * 00760300
*                                  required 16 character input        * 00760400
*                                  specifies the ending value for the * 00760500
*                                  range of keys to be compared to    * 00760600
*                                  the entry key of the list entry.   * 00760700
*                                                                     * 00760800
*                                                                     * 00760900
*                                                                     * 00761000
*                                                                     * 00761100
*                                                                     * 00761200
*                                                                     * 00761300
*                                                                     * 00761400
*                                                                     * 00761500
*                                                                     * 00761600
*                                                                     * 00761700
*                                                                     * 00761800
*                                                                     * 00761900
*              ÝSKEYCOMPARE=»NO!YESº                                  * 00762000
*                  is an optional keyword input that determines       * 00762100
*                  whether the secondary key value of an existing     * 00762200
*                  keyed list entry is to be compared to determine if * 00762300
*                  this entry should be selected for processing.      * 00762400
*                  DEFAULT: NO                                        * 00762500
*                                                                     * 00762600
*                                                                     * 00762700
*                  ÝSKEYCOMPARE=NO¨                                   * 00762800
*                      Indicates that no secondary key comparison     * 00762900
*                      will be performed to determine if this entry   * 00763000
*                      should be processed.                           * 00763100
*                                                                     * 00763200
*                  ÝSKEYCOMPARE=YES                                   * 00763300
*                      Indicates that secondary key comparison will   * 00763400
*                      be performed based on the SKEYREQTYPE          * 00763500
*                      specified to determine if this entry is        * 00763600
*                      selectable for processing.                     * 00763700
*                                                                     * 00763800
*                      SKEYCOMPARE=YES is ignored if the target       * 00763900
*                      structure was not allocated with secondary     * 00764000
*                      keys.                                          * 00764100
*                                                                     * 00764200
*                                                                     * 00764300
*                      SECONDARYKEY=xsecondarykey                     * 00764400
*                          is the name (RS-type), or address in       * 00764500
*                          register (2)-(12), of a required 32        * 00764600
*                          character input that specifies the         * 00764700
*                          secondary key to be used to compare to the * 00764800
*                          secondary key of the list entry.  If the   * 00764900
*                          condition specified by SKEYREQTYPE is not  * 00765000
*                          met for the current list entry then no     * 00765100
*                          processing is performed for the current    * 00765200
*                          entry, and processing continues with the   * 00765300
*                          next entry to be considered.               * 00765400
*                                                                     * 00765500
*                                                                     * 00765600
*                                                                     * 00765700
*                                                                     * 00765800
*                      ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATEROREQUAL * 00765900
*                          !RANGEº¨¨                                  * 00766000
*                          is an optional keyword input which         * 00766100
*                          specifies how secondary key comparison is  * 00766200
*                          to be performed on an existing keyed list  * 00766300
*                          entry to determine if the entry is         * 00766400
*                          selectable for processing.                 * 00766500
*                          DEFAULT: EQUAL                             * 00766600
*                                                                     * 00766700
*                                                                     * 00766800
*                          ÝSKEYREQTYPE=EQUAL¨                        * 00766900
*                              a list entry must have a secondary key * 00767000
*                              equal to the value specified by        * 00767100
*                              SECONDARYKEY.                          * 00767200
*                                                                     * 00767300
*                          ÝSKEYREQTYPE=LESSOREQUAL¨                  * 00767400
*                              a list entry must have a secondary key * 00767500
*                              less than or equal to the value        * 00767600
*                              specified by SECONDARYKEY.             * 00767700
*                                                                     * 00767800
*                          ÝSKEYREQTYPE=GREATEROREQUAL¨               * 00767900
*                              a list entry must have a secondary key * 00768000
*                              greater than or equal to the value     * 00768100
*                              specified by SECONDARYKEY.             * 00768200
*                                                                     * 00768300
*                          ÝSKEYREQTYPE=RANGE                         * 00768400
*                              a list entry must have a secondary key * 00768500
*                              within a specified range of values.    * 00768600
*                              The SECONDARYKEY specified will be     * 00768700
*                              used as the beginning of the range of  * 00768800
*                              secondary key values that will be      * 00768900
*                              compared with the existing secondary   * 00769000
*                              key of the designated list entry.      * 00769100
*                              SKEYRANGEEND will be used as the       * 00769200
*                              ending value.  A list entry must have  * 00769300
*                              a secondary key value within the       * 00769400
*                              specified secondary key range,         * 00769500
*                              inclusive, for it to be selectable.    * 00769600
*                                                                     * 00769700
*                                                                     * 00769800
*                              SKEYRANGEEND=xskeyrangeend¨¨           * 00769900
*                                  is the name (RS-type), or address  * 00770000
*                                  in register (2)-(12), of a         * 00770100
*                                  required 32 character input which  * 00770200
*                                  specifies the ending value for the * 00770300
*                                  range of secondary keys to be      * 00770400
*                                  compared to the secondary key of   * 00770500
*                                  the list entry.                    * 00770600
*                                                                     * 00770700
*                                                                     * 00770800
*                                                                     * 00770900
*                                                                     * 00771000
*                                                                     * 00771100
*                                                                     * 00771200
*                                                                     * 00771300
*                                                                     * 00771400
*                                                                     * 00771500
*                                                                     * 00771600
*                                                                     * 00771700
*                                                                     * 00771800
*              ÝVERSCOMPARE=»NO!YESº                                  * 00771900
*                  is an optional keyword input indicates the version * 00772000
*                  comparison be done for each list entry. The        * 00772100
*                  version number specified by VERSCOMP will be used  * 00772200
*                  to compare each list entry version number.         * 00772300
*                  DEFAULT: NO                                        * 00772400
*                                                                     * 00772500
*                                                                     * 00772600
*                  ÝVERSCOMPARE=NO¨                                   * 00772700
*                      indicates no version criteria is to be applied * 00772800
*                      when selecting entries to be processed.        * 00772900
*                                                                     * 00773000
*                  ÝVERSCOMPARE=YES                                   * 00773100
*                      indicates that version number comparison       * 00773200
*                      should precede processing of any list entries. * 00773300
*                                                                     * 00773400
*                                                                     * 00773500
*                      VERSCOMP=xverscomp                             * 00773600
*                          is the name (RS-type), or address in       * 00773700
*                          register (2)-(12), of a required 8         * 00773800
*                          character input which specifies a value to * 00773900
*                          be compared to the version number of the   * 00774000
*                          designated list entry.  If the condition   * 00774100
*                          specified by VERSCOMPTYPE is not met for   * 00774200
*                          the current list entry then no processing  * 00774300
*                          is performed for the current entry and     * 00774400
*                          processing continues with the next entry   * 00774500
*                          to be considered.                          * 00774600
*                                                                     * 00774700
*                                                                     * 00774800
*                          ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨        * 00774900
*                              is an optional keyword input which     * 00775000
*                              specifies how the list entry version   * 00775100
*                              number comparison is to be performed.  * 00775200
*                                                                     * 00775300
*                              VERSCOMPTYPE=LESSOREQUAL is only       * 00775400
*                              meaningful for list structures         * 00775500
*                              allocated on CFLEVEL=1 or higher CF.   * 00775600
*                                                                     * 00775700
*                              DEFAULT: EQUAL                         * 00775800
*                                                                     * 00775900
*                                                                     * 00776000
*                              VERSCOMPTYPE=EQUAL                     * 00776100
*                                  The version number for the list    * 00776200
*                                  entry must be equal to the value   * 00776300
*                                  specified for VERSCOMP.            * 00776400
*                                                                     * 00776500
*                                                                     * 00776600
*                              VERSCOMPTYPE=LESSOREQUAL               * 00776700
*                                  The version number for the list    * 00776800
*                                  entry must be less than or equal   * 00776900
*                                  to the value specified for         * 00777000
*                                  VERSCOMP.                          * 00777100
*                                  DEFAULT: Equal                     * 00777200
*                                                                     * 00777300
*                                                                     * 00777400
*                                                                     * 00777500
*                                                                     * 00777600
*                                                                     * 00777700
*                                                                     * 00777800
*                                                                     * 00777900
*                                                                     * 00778000
*                                                                     * 00778100
*                                                                     * 00778200
*                                                                     * 00778300
*          REQUEST=MOVE_ENTRYLIST                                     * 00778400
*              Move by entry list.  Requests that all entries         * 00778500
*              specified by the list of EntryIDs, or EntryNames in    * 00778600
*              the storage area specified by BUFFER or the buffers    * 00778700
*              specified by BUFLIST be moved from the current source  * 00778800
*              location to a designated target location.              * 00778900
*                                                                     * 00779000
*              Specifying AUTHCOMPARE=YES in conjunction with         * 00779100
*              AUTHCOMP causes list authority comparison for the      * 00779200
*              designated list to precede processing of any list      * 00779300
*              entries.  If the list authority verification fails,    * 00779400
*              the list authority, the list control information and   * 00779500
*              appropriate return and reason codes are provided in    * 00779600
*              the ANSAREA.                                           * 00779700
*                                                                     * 00779800
*              LOCKINDEX may optionally be specified in conjunction   * 00779900
*              with LOCKOPER to indicate the index of the serialized  * 00780000
*              list lock to be operated on within the lock table for  * 00780100
*              the list structure. If the lock comparison fails, lock * 00780200
*              table entry, and appropriate return and reason codes   * 00780300
*              are provided in the ANSAREA.                           * 00780400
*                                                                     * 00780500
*              In order for any list entries to be moved, the list    * 00780600
*              authority comparison and the lock operation, when      * 00780700
*              requested, must succeed.                               * 00780800
*                                                                     * 00780900
*              Specifying VERSCOMPARE=YES in conjunction with         * 00781000
*              VERSCOMP may be specified to limit moving of entries   * 00781100
*              to those with a matching version number.               * 00781200
*              VERSCOMPARE=YES indicates the version comparison be    * 00781300
*              done for each list entry. The version number specified * 00781400
*              by VERSCOMP will be used to compare each list entry    * 00781500
*              version number.  VERSCOMPARE=BYENTRY indicates the     * 00781600
*              version comparison be done for each list entry. The    * 00781700
*              version number specified in the BUFFER or BUFLIST for  * 00781800
*              each entry will be used to compare each list entry     * 00781900
*              version number.                                        * 00782000
*                                                                     * 00782100
*              LISTNUM may optionally be specified in conjunction     * 00782200
*              with LISTCOMPARE=YES causes list number comparison to  * 00782300
*              be performed before processing each list entry.        * 00782400
*                                                                     * 00782500
*              Specifying ENTRYKEY in conjunction with                * 00782600
*              KEYCOMPARE=YES, causes entry key comparison to be      * 00782700
*              performed as specified by KEYREQTYPE.                  * 00782800
*                                                                     * 00782900
*              Specifying SECONDARYKEY in conjunction with            * 00783000
*              SKEYCOMPARE=YES, causes secondary key comparison to be * 00783100
*              performed as specified by SKEYREQTYPE.                 * 00783200
*                                                                     * 00783300
*              The absence of VERSCOMPARE, KEYCOMPARE, SKEYCOMPARE,   * 00783400
*              or LISTCOMPARE or specifying VERSCOMPARE=NO,           * 00783500
*              KEYCOMPARE=NO, SKEYCOMPARE=NO, or LISTCOMPARE=NO       * 00783600
*              indicates no version number, entry key value,          * 00783700
*              secondary key value, or list comparisons are performed * 00783800
*              when selecting entries to be processed.                * 00783900
*                                                                     * 00784000
*              In order for a particular list entry to be moved, the  * 00784100
*              version number comparison, list number comparison and  * 00784200
*              key comparison, when requested must succeed. If the    * 00784300
*              list number, version number or key comparison fails,   * 00784400
*              and MISCOMPARE=HALT was specified, the request will be * 00784500
*              terminated, and the list entry controls and            * 00784600
*              appropriate return and reason codes are provided in    * 00784700
*              the ANSAREA.  When MISCOMPARE=CONTINUE is specified,   * 00784800
*              or MISCOMPARE is not specified, processing of the      * 00784900
*              current list entry is terminated, and processing       * 00785000
*              continues with the next list entry.                    * 00785100
*                                                                     * 00785200
*              The BUFFER or BUFLIST contains an input array of       * 00785300
*              elements.  Each array element contains the information * 00785400
*              needed to identify the entry to be moved and may also  * 00785500
*              designate the key to be assigned, the version number   * 00785600
*              to be compared and the version number to be assigned.  * 00785700
*              Array elements are mapped by the IXLYMELI mapping      * 00785800
*              macro.  The array elements are indexed with the first  * 00785900
*              element (index 1) starting at offset zero in the       * 00786000
*              BUFFER or BUFLIST area.                                * 00786100
*                                                                     * 00786200
*              When the request completes successfully the number of  * 00786300
*              entries moved for this request is returned in the      * 00786400
*              answer area specified by ANSAREA. Entry key values are * 00786500
*              also returned in LISTKEYAREA when MOVETOKEY=LISTKEY is * 00786600
*              specified on the request.                              * 00786700
*                                                                     * 00786800
*              If any entry specified in the input array does not     * 00786900
*              exist then processing is halted, the count of list     * 00787000
*              entries moved and the current array element index of   * 00787100
*              the non-existent list entry are returned in the answer * 00787200
*              area.  The entry key value for each array element is   * 00787300
*              also returned in LISTKEYAREA if MOVETOKEY=LISTKEY was  * 00787400
*              specified on the request.  In this event all specified * 00787500
*              entries preceding the offending entry have been        * 00787600
*              processed.  All succeeding entries have not been       * 00787700
*              processed.                                             * 00787800
*                                                                     * 00787900
*              A MOVE_ENTRYLIST request may complete prematurely if   * 00788000
*              coupling facility model dependent timeout criteria is  * 00788100
*              exceeded.  In this event appropriate return and reason * 00788200
*              codes are provided, and the number of entries moved    * 00788300
*              thus far and the index of the first unprocessed entry  * 00788400
*              identifier or name is provided in ANSAREA.  The entry  * 00788500
*              key value for each array entry is also returned in     * 00788600
*              LISTKEYAREA if MOVETOKEY=LISTKEY was specified on the  * 00788700
*              request.  The request may subsequently be resumed for  * 00788800
*              the sublist of remaining unprocessed EntryIDs or       * 00788900
*              EntryNames specifying the index returned in the answer * 00789000
*              area on keyword FIRSTELEM.                             * 00789100
*                                                                     * 00789200
*              Resumed requests are processed identically to and must * 00789300
*              meet the same interface requirements as original       * 00789400
*              requests.  A resumed request may in turn experience    * 00789500
*              premature completion.                                  * 00789600
*                                                                     * 00789700
*              MOVE_ENTRYLIST is only valid when the structure is     * 00789800
*              allocated in a CFLEVEL=9 or higher CF.                 * 00789900
*                                                                     * 00790000
*                                                                     * 00790100
*              ÝFIRSTELEM=»xfirstelem!1º¨                             * 00790200
*                  is the name (RS-type), or address in register      * 00790300
*                  (2)-(12), of an optional halfword input specifying * 00790400
*                  the index of the first array element to be         * 00790500
*                  processed.                                         * 00790600
*                                                                     * 00790700
*                  The value must specify one of the array elements   * 00790800
*                  passed in the BUFFER area or the BUFLIST buffers.  * 00790900
*                  An index value of 1 references the first array     * 00791000
*                  element in the BUFFER area or in the first BUFLIST * 00791100
*                  buffer.                                            * 00791200
*                                                                     * 00791300
*                  DEFAULT: 1                                         * 00791400
*                                                                     * 00791500
*                                                                     * 00791600
*                                                                     * 00791700
*                                                                     * 00791800
*              LASTELEM=xlastelem                                     * 00791900
*                  is the name (RS-type), or address in register      * 00792000
*                  (2)-(12), of a required halfword input specifying  * 00792100
*                  the index of the last array element to be          * 00792200
*                  processed.                                         * 00792300
*                                                                     * 00792400
*                  The specified value must be greater than or equal  * 00792500
*                  to the specified FIRSTELEM value and must specify  * 00792600
*                  one of the array elements passed in the BUFFER     * 00792700
*                  area or the BUFLIST buffers.                       * 00792800
*                                                                     * 00792900
*                                                                     * 00793000
*                                                                     * 00793100
*                                                                     * 00793200
*              ÝMISCOMPARE=»CONTINUE!HALTº¨                           * 00793300
*                  is an optional keyword input indicates whether     * 00793400
*                  processing should continue to the next entry or    * 00793500
*                  halt when the version number compare, list number  * 00793600
*                  compare or key compare when requested is not       * 00793700
*                  successful for the current entry.                  * 00793800
*                  DEFAULT: CONTINUE                                  * 00793900
*                                                                     * 00794000
*                                                                     * 00794100
*                  MISCOMPARE=CONTINUE                                * 00794200
*                      is an optional keyword input that indicates    * 00794300
*                      that processing should continue to the next    * 00794400
*                      entry when any of the version number, list     * 00794500
*                      number, or key comparisons, when specified,    * 00794600
*                      are not successful.                            * 00794700
*                                                                     * 00794800
*                  MISCOMPARE=HALT                                    * 00794900
*                      is an optional keyword input that indicates    * 00795000
*                      that processing should halt and not continue   * 00795100
*                      to the next entry when the version number,     * 00795200
*                      list number, or key comparisons, when          * 00795300
*                      specified are not successful. Processing for   * 00795400
*                      the command is stopped, list entry controls    * 00795500
*                      and the appropriate return and reason codes    * 00795600
*                      will be returned in the ANSAREA.               * 00795700
*                      DEFAULT: CONTINUE                              * 00795800
*                                                                     * 00795900
*                                                                     * 00796000
*                                                                     * 00796100
*                                                                     * 00796200
*                                                                     * 00796300
*                                                                     * 00796400
*              LISTTYPE=»NAMELIST!IDLISTº                             * 00796500
*                  is a required keyword input that specifies whether * 00796600
*                  the input in the BUFFER area or the BUFLIST        * 00796700
*                  buffers for the request consists of an array of    * 00796800
*                  elements whose first field is an EntryID or an     * 00796900
*                  EntryName.                                         * 00797000
*                                                                     * 00797100
*                                                                     * 00797200
*                  LISTTYPE=NAMELIST                                  * 00797300
*                      The input in the BUFFER area or the BUFLIST    * 00797400
*                      buffers contains an array of elements, where   * 00797500
*                      the first field in each array element is the   * 00797600
*                      entry name of the list entry.                  * 00797700
*                                                                     * 00797800
*                      LISTTYPE=NAMELIST is not allowed for           * 00797900
*                      structures that do not support named entries.  * 00798000
*                                                                     * 00798100
*                  LISTTYPE=IDLIST                                    * 00798200
*                      The input in the BUFFER area or the BUFLIST    * 00798300
*                      buffers contains an array of elements, where   * 00798400
*                      the first field in each array element is the   * 00798500
*                      EntryID of the list entry. The EntryId may be  * 00798600
*                      either system generated or user provided.      * 00798700
*                                                                     * 00798800
*                                                                     * 00798900
*                      ÝKEYCOMPARE=»NO!YESº                           * 00799000
*                          is an optional keyword input that          * 00799100
*                          determines whether the key value of an     * 00799200
*                          existing keyed list entry is to be         * 00799300
*                          compared to determine if this entry should * 00799400
*                          be selected for processing.                * 00799500
*                          DEFAULT: NO                                * 00799600
*                                                                     * 00799700
*                                                                     * 00799800
*                          ÝKEYCOMPARE=NO¨                            * 00799900
*                              Indicates that no entry key comparison * 00800000
*                              will be performed to determine if this * 00800100
*                              entry should be processed.             * 00800200
*                                                                     * 00800300
*                          ÝKEYCOMPARE=YES                            * 00800400
*                              Indicates that entry key comparison    * 00800500
*                              will be performed based on the         * 00800600
*                              KEYREQTYPE specified to determine if   * 00800700
*                              this entry is selectable for           * 00800800
*                              processing.                            * 00800900
*                                                                     * 00801000
*                              KEYCOMPARE=YES is ignored if the       * 00801100
*                              target structure does not support      * 00801200
*                              keyed entries.                         * 00801300
*                                                                     * 00801400
*                                                                     * 00801500
*                              ENTRYKEY=xentrykey                     * 00801600
*                                  is the name (RS-type), or address  * 00801700
*                                  in register (2)-(12), of a         * 00801800
*                                  required 16 character input that   * 00801900
*                                  specifies the key to be used to    * 00802000
*                                  compare to the entry key.  If the  * 00802100
*                                  condition specified by KEYREQTYPE  * 00802200
*                                  is not met for the current list    * 00802300
*                                  entry then no processing is        * 00802400
*                                  performed for the current entry,   * 00802500
*                                  and processing either continues    * 00802600
*                                  with the next entry to be          * 00802700
*                                  considered, or is terminated based * 00802800
*                                  on the value specified for         * 00802900
*                                  MISCOMPARE.                        * 00803000
*                                                                     * 00803100
*                                                                     * 00803200
*                                                                     * 00803300
*                                                                     * 00803400
*                              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATER * 00803500
*                                  OREQUAL!RANGEº¨¨                   * 00803600
*                                  is an optional keyword input which * 00803700
*                                  specifies how entry key comparison * 00803800
*                                  is to be performed on an existing  * 00803900
*                                  keyed list entry to determine if   * 00804000
*                                  the entry is selectable for        * 00804100
*                                  processing.                        * 00804200
*                                  DEFAULT: EQUAL                     * 00804300
*                                                                     * 00804400
*                                                                     * 00804500
*                                  ÝKEYREQTYPE=EQUAL¨                 * 00804600
*                                      a list entry must have an      * 00804700
*                                      entry key equal to the value   * 00804800
*                                      specified by ENTRYKEY.         * 00804900
*                                                                     * 00805000
*                                  ÝKEYREQTYPE=LESSOREQUAL¨           * 00805100
*                                      a list entry must have an      * 00805200
*                                      entry key less than or equal   * 00805300
*                                      to the value specified by      * 00805400
*                                      ENTRYKEY.                      * 00805500
*                                                                     * 00805600
*                                  ÝKEYREQTYPE=GREATEROREQUAL¨        * 00805700
*                                      a list entry must have an      * 00805800
*                                      entry key greater than or      * 00805900
*                                      equal to the value specified   * 00806000
*                                      by ENTRYKEY.                   * 00806100
*                                                                     * 00806200
*                                  ÝKEYREQTYPE=RANGE                  * 00806300
*                                      a list entry must have an      * 00806400
*                                      entry key within a specified   * 00806500
*                                      range of values. The ENTRYKEY  * 00806600
*                                      specified will be used as the  * 00806700
*                                      beginning of the range of key  * 00806800
*                                      values that will be compared   * 00806900
*                                      with the existing entry key.   * 00807000
*                                      KEYRANGEEND will be used as    * 00807100
*                                      the ending value.  A list      * 00807200
*                                      entry must have an entry key   * 00807300
*                                      value within the specified     * 00807400
*                                      entry key range, inclusive,    * 00807500
*                                      for it to be selectable.       * 00807600
*                                                                     * 00807700
*                                                                     * 00807800
*                                      KEYRANGEEND=xkeyrangeend¨¨     * 00807900
*                                          is the name (RS-type), or  * 00808000
*                                          address in register        * 00808100
*                                          (2)-(12), of a required 16 * 00808200
*                                          character input specifies  * 00808300
*                                          the ending value for the   * 00808400
*                                          range of keys to be        * 00808500
*                                          compared to the entry key  * 00808600
*                                          of the list entry.         * 00808700
*                                                                     * 00808800
*                                                                     * 00808900
*                                                                     * 00809000
*                                                                     * 00809100
*                                                                     * 00809200
*                                                                     * 00809300
*                                                                     * 00809400
*                                                                     * 00809500
*                                                                     * 00809600
*                                                                     * 00809700
*                                                                     * 00809800
*                                                                     * 00809900
*                      ÝSKEYCOMPARE=»NO!YESº                          * 00810000
*                          is an optional keyword input that          * 00810100
*                          determines whether the secondary key value * 00810200
*                          of an existing keyed list entry is to be   * 00810300
*                          compared to determine if this entry should * 00810400
*                          be selected for processing.                * 00810500
*                          DEFAULT: NO                                * 00810600
*                                                                     * 00810700
*                                                                     * 00810800
*                          ÝSKEYCOMPARE=NO¨                           * 00810900
*                              Indicates that no secondary key        * 00811000
*                              comparison will be performed to        * 00811100
*                              determine if this entry should be      * 00811200
*                              processed.                             * 00811300
*                                                                     * 00811400
*                          ÝSKEYCOMPARE=YES                           * 00811500
*                              Indicates that secondary key           * 00811600
*                              comparison will be performed based on  * 00811700
*                              the SKEYREQTYPE specified to determine * 00811800
*                              if this entry is selectable for        * 00811900
*                              processing.                            * 00812000
*                                                                     * 00812100
*                              SKEYCOMPARE=YES is ignored if the      * 00812200
*                              target structure was not allocated     * 00812300
*                              with secondary keys.                   * 00812400
*                                                                     * 00812500
*                                                                     * 00812600
*                              SECONDARYKEY=xsecondarykey             * 00812700
*                                  is the name (RS-type), or address  * 00812800
*                                  in register (2)-(12), of a         * 00812900
*                                  required 32 character input that   * 00813000
*                                  specifies the secondary key to be  * 00813100
*                                  used to compare to the secondary   * 00813200
*                                  key of the list entry.  If the     * 00813300
*                                  condition specified by SKEYREQTYPE * 00813400
*                                  is not met for the current list    * 00813500
*                                  entry then no processing is        * 00813600
*                                  performed for the current entry,   * 00813700
*                                  and processing continues with the  * 00813800
*                                  next entry to be considered.       * 00813900
*                                                                     * 00814000
*                                                                     * 00814100
*                                                                     * 00814200
*                                                                     * 00814300
*                              ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATE * 00814400
*                                  ROREQUAL!RANGEº¨¨                  * 00814500
*                                  is an optional keyword input which * 00814600
*                                  specifies how secondary key        * 00814700
*                                  comparison is to be performed on   * 00814800
*                                  an existing keyed list entry to    * 00814900
*                                  determine if the entry is          * 00815000
*                                  selectable for processing.         * 00815100
*                                  DEFAULT: EQUAL                     * 00815200
*                                                                     * 00815300
*                                                                     * 00815400
*                                  ÝSKEYREQTYPE=EQUAL¨                * 00815500
*                                      a list entry must have a       * 00815600
*                                      secondary key equal to the     * 00815700
*                                      value specified by             * 00815800
*                                      SECONDARYKEY.                  * 00815900
*                                                                     * 00816000
*                                  ÝSKEYREQTYPE=LESSOREQUAL¨          * 00816100
*                                      a list entry must have a       * 00816200
*                                      secondary key less than or     * 00816300
*                                      equal to the value specified   * 00816400
*                                      by SECONDARYKEY.               * 00816500
*                                                                     * 00816600
*                                  ÝSKEYREQTYPE=GREATEROREQUAL¨       * 00816700
*                                      a list entry must have a       * 00816800
*                                      secondary key greater than or  * 00816900
*                                      equal to the value specified   * 00817000
*                                      by SECONDARYKEY.               * 00817100
*                                                                     * 00817200
*                                  ÝSKEYREQTYPE=RANGE                 * 00817300
*                                      a list entry must have a       * 00817400
*                                      secondary key within a         * 00817500
*                                      specified range of values. The * 00817600
*                                      SECONDARYKEY specified will be * 00817700
*                                      used as the beginning of the   * 00817800
*                                      range of secondary key values  * 00817900
*                                      that will be compared with the * 00818000
*                                      secondary key of the           * 00818100
*                                      designated list entry.         * 00818200
*                                      SKEYRANGEEND will be used as   * 00818300
*                                      the ending value.  A list      * 00818400
*                                      entry must have a secondary    * 00818500
*                                      key value within the specified * 00818600
*                                      secondary key range,           * 00818700
*                                      inclusive, for it to be        * 00818800
*                                      selectable.                    * 00818900
*                                                                     * 00819000
*                                                                     * 00819100
*                                      SKEYRANGEEND=xskeyrangeend¨¨   * 00819200
*                                                                     * 00819300
*                                          is the name (RS-type), or  * 00819400
*                                          address in register        * 00819500
*                                          (2)-(12), of a required 32 * 00819600
*                                          character input which      * 00819700
*                                          specifies the ending value * 00819800
*                                          for the range of secondary * 00819900
*                                          keys to be compared to the * 00820000
*                                          secondary key of the list  * 00820100
*                                          entry.                     * 00820200
*                                                                     * 00820300
*                                                                     * 00820400
*                                                                     * 00820500
*                                                                     * 00820600
*                                                                     * 00820700
*                                                                     * 00820800
*                                                                     * 00820900
*                                                                     * 00821000
*                                                                     * 00821100
*                                                                     * 00821200
*                                                                     * 00821300
*                                                                     * 00821400
*                      ÝMOVETOKEY=»UNCHANGED!TARGETKEY!LISTKEYº¨      * 00821500
*                          is an optional keyword input that          * 00821600
*                          indicates how the key is to be assigned to * 00821700
*                          the list entry when it is moved to the     * 00821800
*                          MOVETOLIST.  MOVETOKEY may only be         * 00821900
*                          specified for structures that support      * 00822000
*                          keyed entries.                             * 00822100
*                          DEFAULT: UNCHANGED                         * 00822200
*                                                                     * 00822300
*                                                                     * 00822400
*                          ÝMOVETOKEY=UNCHANGED¨                      * 00822500
*                              The current entry key value assigned   * 00822600
*                              to the list entry will remain          * 00822700
*                              unchanged.                             * 00822800
*                                                                     * 00822900
*                          ÝMOVETOKEY=TARGETKEY¨                      * 00823000
*                                                                     * 00823100
*                              The MOVETOKEY provided in the array    * 00823200
*                              element in the BUFFER or the BUFLIST   * 00823300
*                              buffer will be assigned to the list    * 00823400
*                              entry when it is moved to the target   * 00823500
*                              list.                                  * 00823600
*                                                                     * 00823700
*                          ÝMOVETOKEY=LISTKEY                         * 00823800
*                              The current list key value will be     * 00823900
*                              assigned to the list entry when it is  * 00824000
*                              moved to the target list.              * 00824100
*                                                                     * 00824200
*                                                                     * 00824300
*                              ÝLISTKEYINC=»xlistkeyinc!NOº¨          * 00824400
*                                  is the name (RS-type), or address  * 00824500
*                                  in register (2)-(12), of an        * 00824600
*                                  optional fullword input which      * 00824700
*                                  specifies a value to be added to   * 00824800
*                                  the list key after the entry key   * 00824900
*                                  is set to the list key value.      * 00825000
*                                                                     * 00825100
*                                  If the result of adding the value  * 00825200
*                                  specified by LISTKEYINC to the     * 00825300
*                                  target list key value is greater   * 00825400
*                                  than the maximum list key value    * 00825500
*                                  then the request will be failed.   * 00825600
*                                                                     * 00825700
*                                  DEFAULT: NO                        * 00825800
*                                                                     * 00825900
*                                                                     * 00826000
*                                                                     * 00826100
*                                                                     * 00826200
*                              ÝLISTKEYAREA=»xlistkeyarea!NOº¨¨       * 00826300
*                                  is an optional input.  It is the   * 00826400
*                                  name (RS-type), or address in      * 00826500
*                                  register (2)-(12), of a virtual    * 00826600
*                                  storage area in which entry key    * 00826700
*                                  values will be placed when the     * 00826800
*                                  current list key value has been    * 00826900
*                                  assigned to list entries.  This is * 00827000
*                                  a 112 byte area that will contain  * 00827100
*                                  an array of entry keys.            * 00827200
*                                                                     * 00827300
*                                  List key information will be       * 00827400
*                                  placed in the LISTKEYAREA when the * 00827500
*                                  current list key value contains a  * 00827600
*                                  new list key has been assigned to  * 00827700
*                                  the entry key when the request     * 00827800
*                                  completes successfully, the        * 00827900
*                                  model-dependent timeout has been   * 00828000
*                                  exceeded or a list entry does not  * 00828100
*                                  exist.                             * 00828200
*                                  DEFAULT: NO                        * 00828300
*                                                                     * 00828400
*                                                                     * 00828500
*                                                                     * 00828600
*                                                                     * 00828700
*                                                                     * 00828800
*                                                                     * 00828900
*                                                                     * 00829000
*                                                                     * 00829100
*                      ÝMOVETOSKEY=»UNCHANGED!TARGETKEYº¨             * 00829200
*                          is an optional keyword input that          * 00829300
*                          indicates how the key is to be assigned to * 00829400
*                          the list entry when it is moved to the     * 00829500
*                          MOVETOLIST.  MOVETOSKEY may only be        * 00829600
*                          specified for structures that support      * 00829700
*                          secondary keyed entries.                   * 00829800
*                          DEFAULT: UNCHANGED                         * 00829900
*                                                                     * 00830000
*                                                                     * 00830100
*                          ÝMOVETOSKEY=UNCHANGED¨                     * 00830200
*                              The current entry key value assigned   * 00830300
*                              to the list entry will remain          * 00830400
*                              unchanged.                             * 00830500
*                                                                     * 00830600
*                          ÝMOVETOSKEY=TARGETKEY¨                     * 00830700
*                                                                     * 00830800
*                              The MOVETOSKEY provided in the array   * 00830900
*                              element in the BUFFER or the BUFLIST   * 00831000
*                              buffer will be assigned to the list    * 00831100
*                              entry when it is moved to the target   * 00831200
*                              list.                                  * 00831300
*                                                                     * 00831400
*                                                                     * 00831500
*                                                                     * 00831600
*                                                                     * 00831700
*                                                                     * 00831800
*                                                                     * 00831900
*                                                                     * 00832000
*                                                                     * 00832100
*                                                                     * 00832200
*                                                                     * 00832300
*              ÝLISTCOMPARE=»NO!YESº                                  * 00832400
*                  is an optional keyword input which determines if   * 00832500
*                  the list number is to be compared to determine if  * 00832600
*                  entries should be processed.                       * 00832700
*                  DEFAULT: NO                                        * 00832800
*                                                                     * 00832900
*                                                                     * 00833000
*                  ÝLISTCOMPARE=NO¨                                   * 00833100
*                      indicates no list number criteria is to be     * 00833200
*                      applied when selecting entries to be           * 00833300
*                      processed.                                     * 00833400
*                                                                     * 00833500
*                  ÝLISTCOMPARE=YES                                   * 00833600
*                      indicates that list number comparison should   * 00833700
*                      precede processing of each list entry.         * 00833800
*                                                                     * 00833900
*                                                                     * 00834000
*                      LISTNUM=xlistnum                               * 00834100
*                          is the name (RS-type), or address in       * 00834200
*                          register (2)-(12), of a required fullword  * 00834300
*                          input that designates the number of the    * 00834400
*                          list on which the entries to be processed  * 00834500
*                          reside. If the list comparison fails for   * 00834600
*                          the current list entry, processing either  * 00834700
*                          continues to the next entry, or is         * 00834800
*                          terminated based on the value specified by * 00834900
*                          MISCOMPARE.                                * 00835000
*                                                                     * 00835100
*                                                                     * 00835200
*                          ÝAUTHCOMPARE=»NO!YESº                      * 00835300
*                              is an optional keyword input which     * 00835400
*                              determines whether the list authority  * 00835500
*                              comparison is to be used to determine  * 00835600
*                              if entries on the list should be       * 00835700
*                              processed.                             * 00835800
*                              DEFAULT: NO                            * 00835900
*                                                                     * 00836000
*                                                                     * 00836100
*                              ÝAUTHCOMPARE=NO¨                       * 00836200
*                                  indicates no list authority        * 00836300
*                                  comparison is to be performed      * 00836400
*                                  before processing any entries on   * 00836500
*                                  the list.                          * 00836600
*                                                                     * 00836700
*                              ÝAUTHCOMPARE=YES                       * 00836800
*                                  indicates that list authority      * 00836900
*                                  comparison should precede          * 00837000
*                                  processing of any entries on the   * 00837100
*                                  list.                              * 00837200
*                                                                     * 00837300
*                                                                     * 00837400
*                                  AUTHCOMP=xauthcomp                 * 00837500
*                                      is the name (RS-type), or      * 00837600
*                                      address in register (2)-(12),  * 00837700
*                                      of a required 16 character     * 00837800
*                                      input which specifies a value  * 00837900
*                                      to be compared to the list     * 00838000
*                                      authority value for the        * 00838100
*                                      designated list.  If the       * 00838200
*                                      condition specified by         * 00838300
*                                      AUTHCOMPTYPE is not met then   * 00838400
*                                      the IXLLSTM operation is       * 00838500
*                                      terminated, and appropriate    * 00838600
*                                      return and reason codes are    * 00838700
*                                      provided to the invoker.       * 00838800
*                                                                     * 00838900
*                                                                     * 00839000
*                                      ÝAUTHCOMPTYPE=»EQUAL!LESSOREQU * 00839100
*                                          ALº¨¨¨                     * 00839200
*                                          is an optional keyword     * 00839300
*                                          input which specifies how  * 00839400
*                                          the list authority         * 00839500
*                                          comparison is to be        * 00839600
*                                          performed.                 * 00839700
*                                                                     * 00839800
*                                          DEFAULT: EQUAL             * 00839900
*                                                                     * 00840000
*                                                                     * 00840100
*                                          AUTHCOMPTYPE=EQUAL         * 00840200
*                                              The list authority for * 00840300
*                                              the list specified by  * 00840400
*                                              LISTNUM must be equal  * 00840500
*                                              to the value specified * 00840600
*                                              for AUTHCOMP.          * 00840700
*                                                                     * 00840800
*                                                                     * 00840900
*                                          AUTHCOMPTYPE=LESSOREQUAL   * 00841000
*                                                                     * 00841100
*                                              The list authority for * 00841200
*                                              the list specified by  * 00841300
*                                              LISTNUM must be less   * 00841400
*                                              than or equal to the   * 00841500
*                                              value specified for    * 00841600
*                                              AUTHCOMP.              * 00841700
*                                                                     * 00841800
*                                                                     * 00841900
*                                                                     * 00842000
*                                                                     * 00842100
*                                                                     * 00842200
*                                                                     * 00842300
*                                                                     * 00842400
*                                                                     * 00842500
*                                                                     * 00842600
*                                                                     * 00842700
*                                                                     * 00842800
*                                                                     * 00842900
*                                                                     * 00843000
*                                                                     * 00843100
*                                                                     * 00843200
*                                                                     * 00843300
*                                                                     * 00843400
*                                                                     * 00843500
*              ÝVERSCOMPARE=»NO!BYENTRY!YESº                          * 00843600
*                  is an optional keyword input that indicates the    * 00843700
*                  version comparison is to be done for each list     * 00843800
*                  entry.                                             * 00843900
*                  DEFAULT: NO                                        * 00844000
*                                                                     * 00844100
*                                                                     * 00844200
*                  ÝVERSCOMPARE=NO¨                                   * 00844300
*                      Indicates that no version number criteria is   * 00844400
*                      to be applied when selecting entries to be     * 00844500
*                      processed.                                     * 00844600
*                                                                     * 00844700
*                  ÝVERSCOMPARE=BYENTRY¨                              * 00844800
*                      Indicates that version number comparison will  * 00844900
*                      be performed before each list entry is         * 00845000
*                      processed.  The version number specified in    * 00845100
*                      the datablock for each list entry will be used * 00845200
*                      to compare each entry.                         * 00845300
*                                                                     * 00845400
*                      The version number may also be updated for     * 00845500
*                      each entry to be moved using the version       * 00845600
*                      number update specification indicated for each * 00845700
*                      entry in the datablock. The version number may * 00845800
*                      be incremented, decremented or updated to a    * 00845900
*                      new version value also specified in the        * 00846000
*                      datablock for the list entry in the            * 00846100
*                      BUFFER/BUFLIST buffers.                        * 00846200
*                                                                     * 00846300
*                  ÝVERSCOMPARE=YES                                   * 00846400
*                      Indicates that version number comparison will  * 00846500
*                      be performed before each list entry is         * 00846600
*                      processed.  The version number specified by    * 00846700
*                      VERSCOMP and the VERSCOMPTYPE will be used for * 00846800
*                      each entry processed.                          * 00846900
*                                                                     * 00847000
*                                                                     * 00847100
*                      VERSCOMP=xverscomp                             * 00847200
*                          is the name (RS-type), or address in       * 00847300
*                          register (2)-(12), of a required 8         * 00847400
*                          character input which specifies a value to * 00847500
*                          be compared to the version number of the   * 00847600
*                          designated list entry.  If the condition   * 00847700
*                          specified by VERSCOMPTYPE is not met for   * 00847800
*                          the current list entry then processing     * 00847900
*                          either continues with the next entry to be * 00848000
*                          considered, or is terminated based on the  * 00848100
*                          value specified by MISCOMPARE.             * 00848200
*                                                                     * 00848300
*                                                                     * 00848400
*                          ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨        * 00848500
*                              is an optional keyword input which     * 00848600
*                              specifies how the list entry version   * 00848700
*                              number comparison is to be performed.  * 00848800
*                                                                     * 00848900
*                              DEFAULT: EQUAL                         * 00849000
*                                                                     * 00849100
*                                                                     * 00849200
*                              VERSCOMPTYPE=EQUAL                     * 00849300
*                                  The version number for the list    * 00849400
*                                  entry must be equal to the value   * 00849500
*                                  specified for VERSCOMP.            * 00849600
*                                                                     * 00849700
*                                                                     * 00849800
*                              VERSCOMPTYPE=LESSOREQUAL               * 00849900
*                                  The version number for the list    * 00850000
*                                  entry must be less than or equal   * 00850100
*                                  to the value specified for         * 00850200
*                                  VERSCOMP.                          * 00850300
*                                  DEFAULT: Equal                     * 00850400
*                                                                     * 00850500
*                                                                     * 00850600
*                                                                     * 00850700
*                                                                     * 00850800
*                                                                     * 00850900
*                                                                     * 00851000
*                                                                     * 00851100
*                                                                     * 00851200
*                                                                     * 00851300
*                                                                     * 00851400
*                                                                     * 00851500
*                                                                     * 00851600
*              The following is a set of mutually exclusive keys.     * 00851700
*              This set is required; only one key must be specified.  * 00851800
*                                                                     * 00851900
*                                                                     * 00852000
*              BUFLIST=xbuflist                                       * 00852100
*                  belongs to a set of mutually exclusive keys. It is * 00852200
*                  an input.  It is the name (RS-type), or address in * 00852300
*                  register (2)-(12), of a 128-byte virtual storage   * 00852400
*                  area containing a list of addresses of buffers.    * 00852500
*                  These buffers contain input data for the           * 00852600
*                  MOVE_ENTRYLIST request.  The set of buffers is     * 00852700
*                  used as if it were a single contiguous area for    * 00852800
*                  the purpose of input.                              * 00852900
*                                                                     * 00853000
*                  The format of the list is a set of 8-byte          * 00853100
*                  elements.  The BUFADDRSIZE keyword denotes whether * 00853200
*                  four or eight bytes of the element are used.  If   * 00853300
*                  BUFADDRSIZE=31 is specified then the first four    * 00853400
*                  bytes of each element are reserved space and the   * 00853500
*                  last four bytes contain the address of the buffer. * 00853600
*                  If BUFADDRSIZE=64 is specified then the full eight * 00853700
*                  bytes specify the address of the buffer.  The      * 00853800
*                  buffers may not reside in large pages.  The        * 00853900
*                  buffers may not reside in high shared virtual      * 00854000
*                  storage areas or in pageable high virtual common   * 00854100
*                  storage (above 2GB).                               * 00854200
*                                                                     * 00854300
*                  There may be 1 to 16 buffers passed in the list.   * 00854400
*                  Each buffer in the list must be the same size and  * 00854500
*                  must reside in the same address space or data      * 00854600
*                  space.  Data is fetched from the buffers in the    * 00854700
*                  order specified.                                   * 00854800
*                                                                     * 00854900
*                  If QureqRfDeMeBufferSize is off, then each buffer  * 00855000
*                  must be 4096 bytes in length and must start on a   * 00855100
*                  4096-byte boundary.                                * 00855200
*                                                                     * 00855300
*                  If QureqRfDeMeBufferSize is on, then the length of * 00855400
*                  each buffer must be a power of 2 between 256 and   * 00855500
*                  4096 bytes (256, 512, 1024, 2048, 4096).  Each     * 00855600
*                  buffer must start on a 256-byte boundary and must  * 00855700
*                  not cross a 4096-byte boundary.                    * 00855800
*                                                                     * 00855900
*                  The buffers should be formatted into 32-byte,      * 00856000
*                  64-byte, or 96-byte elements, where each element   * 00856100
*                  is mapped by IXLYMELI and contains all the         * 00856200
*                  information required to move a list entry.  The    * 00856300
*                  format (and size) of an element is determined by   * 00856400
*                  the structure characteristics, and the options     * 00856500
*                  specified on the IXLLSTM REQUEST=MOVE_ENTRYLIST:   * 00856600
*                                                                     * 00856700
*                                                                     * 00856800
*                  32-BYTE   Any one of the following conditions:     * 00856900
*                                                                     * 00857000
*                                                                     * 00857100
*                            o   The structure does not support keyed * 00857200
*                                entries and VERSCOMPARE(NO) is       * 00857300
*                                specified.                           * 00857400
*                                                                     * 00857500
*                            o   The structure does not support keyed * 00857600
*                                entries and VERSCOMPARE(YES) is      * 00857700
*                                specified.                           * 00857800
*                                                                     * 00857900
*                            o   The structure does support keyed     * 00858000
*                                entries and MOVETOKEY=UNCHANGED,     * 00858100
*                                MOVETOSKEY=UNCHANGED, and            * 00858200
*                                VERSCOMPARE(NO) are specified.       * 00858300
*                                                                     * 00858400
*                            o   The structure does support keyed     * 00858500
*                                entries and MOVETOKEY=UNCHANGED,     * 00858600
*                                MOVETOSKEY=UNCHANGED, and            * 00858700
*                                VERSCOMPARE(YES) are specified.      * 00858800
*                                                                     * 00858900
*                            o   The structure does support keyed     * 00859000
*                                entries and MOVETOKEY=LISTKEY,       * 00859100
*                                MOVETOSKEY=UNCHANGED, and            * 00859200
*                                VERSCOMPARE(NO) are specified.       * 00859300
*                                                                     * 00859400
*                            o   The structure does support keyed     * 00859500
*                                entries and MOVETOKEY=LISTKEY,       * 00859600
*                                MOVETOSKEY=UNCHANGED, and            * 00859700
*                                VERSCOMPARE(YES) are specified.      * 00859800
*                                                                     * 00859900
*                                                                     * 00860000
*                                                                     * 00860100
*                  64-BYTE   VERSCOMPARE(BYENTRY) or                  * 00860200
*                            MOVETOKEY=TARGETKEY is specified.        * 00860300
*                                                                     * 00860400
*                  96-BYTE   MOVETOSKEY=TARGETKEY is specified.       * 00860500
*                                                                     * 00860600
*                                                                     * 00860700
*                                                                     * 00860800
*                                                                     * 00860900
*                  ÝBUFADDRTYPE=»VIRTUAL!REALº                        * 00861000
*                      is an optional keyword input that specifies    * 00861100
*                      whether the buffer addresses specified in the  * 00861200
*                      BUFLIST list are virtual storage addresses or  * 00861300
*                      real storage addresses.                        * 00861400
*                                                                     * 00861500
*                      DEFAULT: VIRTUAL                               * 00861600
*                                                                     * 00861700
*                                                                     * 00861800
*                      ÝBUFADDRTYPE=VIRTUAL                           * 00861900
*                          Indicates that the buffer addresses        * 00862000
*                          specified in the BUFLIST list are virtual  * 00862100
*                          storage addresses.                         * 00862200
*                                                                     * 00862300
*                                                                     * 00862400
*                                                                     * 00862500
*                          ÝPAGEABLE=»YES!NOº¨                        * 00862600
*                              is an optional keyword input that      * 00862700
*                              specifies whether or not the buffers   * 00862800
*                              specified by BUFLIST resides in        * 00862900
*                              pageable storage.                      * 00863000
*                                                                     * 00863100
*                              DEFAULT: YES                           * 00863200
*                                                                     * 00863300
*                                                                     * 00863400
*                              ÝPAGEABLE=YES                          * 00863500
*                                  Indicates that the BUFLIST buffers * 00863600
*                                  reside in pageable virtual         * 00863700
*                                  storage.                           * 00863800
*                                                                     * 00863900
*                                  This includes disabled reference   * 00864000
*                                  storage, and may include storage   * 00864100
*                                  that has the potential to become   * 00864200
*                                  pageable (such as address space    * 00864300
*                                  storage for which a PGSER FIX has  * 00864400
*                                  been successfully processed).  It  * 00864500
*                                  does not include implicitly        * 00864600
*                                  non-pageable storage (such as is   * 00864700
*                                  obtained from non-pageable         * 00864800
*                                  subpools).                         * 00864900
*                                                                     * 00865000
*                                                                     * 00865100
*                                                                     * 00865200
*                                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEY * 00865300
*                                      º¨¨                            * 00865400
*                                      is the name (RS-type), or      * 00865500
*                                      address in register (2)-(12),  * 00865600
*                                      of an optional 8 bit input     * 00865700
*                                      containing the storage key to  * 00865800
*                                      be used when referencing the   * 00865900
*                                      buffers in the list specified  * 00866000
*                                      by BUFLIST.                    * 00866100
*                                                                     * 00866200
*                                      The high order nibble contains * 00866300
*                                      the storage key, the low order * 00866400
*                                      nibble is ignored.  For        * 00866500
*                                      example, set 'kkkk' in the     * 00866600
*                                      binary bit string 'kkkkxxxx'B  * 00866700
*                                      to correspond to the desired   * 00866800
*                                      storage key.                   * 00866900
*                                                                     * 00867000
*                                      If BUFSTGKEY is not specified, * 00867100
*                                      then all references to the     * 00867200
*                                      BUFLIST buffers are performed  * 00867300
*                                      using the caller's PSW key.    * 00867400
*                                                                     * 00867500
*                                      DEFAULT: CALLERS_KEY           * 00867600
*                                                                     * 00867700
*                                                                     * 00867800
*                                                                     * 00867900
*                              ÝPAGEABLE=NO¨                          * 00868000
*                                  Indicates that the BUFLIST buffers * 00868100
*                                  reside in non-pageable virtual     * 00868200
*                                  storage.                           * 00868300
*                                                                     * 00868400
*                                  This includes implicitly           * 00868500
*                                  non-pageable storage areas.  If    * 00868600
*                                  the virtual storage may            * 00868700
*                                  potentially become pageable, then  * 00868800
*                                  the invoker is responsible for     * 00868900
*                                  ensuring the virtual storage       * 00869000
*                                  remains non-pageable for the       * 00869100
*                                  duration of the request.           * 00869200
*                                                                     * 00869300
*                                  If MODE=ASYNCTOKEN is specified or * 00869400
*                                  MODE=SYNCTOKEN is specified and    * 00869500
*                                  the request does not complete      * 00869600
*                                  synchronously, then the storage    * 00869700
*                                  must remain non-pageable until     * 00869800
*                                  completion of the corresponding    * 00869900
*                                  IXLFCOMP request.  If              * 00870000
*                                  MODE=ASYNCEXIT is specified or     * 00870100
*                                  MODE=SYNCEXIT is specified and the * 00870200
*                                  request does not complete          * 00870300
*                                  synchronously, then the storage    * 00870400
*                                  must remain non-pageable until the * 00870500
*                                  completion exit is driven for the  * 00870600
*                                  request.  If MODE=ASYNCECB is      * 00870700
*                                  specified or MODE=SYNCECB is       * 00870800
*                                  specified and the request does not * 00870900
*                                  complete synchronously, then the   * 00871000
*                                  storage must remain non-pageable   * 00871100
*                                  until the specified ECB is posted  * 00871200
*                                  for the request.                   * 00871300
*                                                                     * 00871400
*                                                                     * 00871500
*                                                                     * 00871600
*                                                                     * 00871700
*                                                                     * 00871800
*                                                                     * 00871900
*                          ÝBUFALET=»xbufalet!NO_BUFALETº¨            * 00872000
*                              is the name (RS-type), or address in   * 00872100
*                              register (2)-(12), of an optional      * 00872200
*                              fullword input specifying the ALET     * 00872300
*                              value to be used in referencing all of * 00872400
*                              the buffers specified for BUFLIST      * 00872500
*                                                                     * 00872600
*                              DEFAULT: NO_BUFALET                    * 00872700
*                                                                     * 00872800
*                                                                     * 00872900
*                                                                     * 00873000
*                                                                     * 00873100
*                          ÝBUFADDRSIZE=»31!64º¨                      * 00873200
*                              is an optional keyword input that      * 00873300
*                              specifies whether a 31 or a 64 bit     * 00873400
*                              address is specified by a BUFLIST      * 00873500
*                              entry.                                 * 00873600
*                                                                     * 00873700
*                              DEFAULT: 31                            * 00873800
*                                                                     * 00873900
*                                                                     * 00874000
*                              ÝBUFADDRSIZE=31¨                       * 00874100
*                                  Indicates that the BUFLIST entry   * 00874200
*                                  is 31 bits in size.                * 00874300
*                                                                     * 00874400
*                              ÝBUFADDRSIZE=64¨¨                      * 00874500
*                                  Indicates that the BUFLIST entry   * 00874600
*                                  is 64 bits in size.                * 00874700
*                                                                     * 00874800
*                                                                     * 00874900
*                                                                     * 00875000
*                                                                     * 00875100
*                                                                     * 00875200
*                      ÝBUFADDRTYPE=REAL                              * 00875300
*                          Indicates that the buffer addresses        * 00875400
*                          specified in the BUFLIST list are real     * 00875500
*                          storage addresses.                         * 00875600
*                                                                     * 00875700
*                                                                     * 00875800
*                          ÝBUFADDRSIZE=»31!64º¨¨                     * 00875900
*                              is an optional keyword input that      * 00876000
*                              specifies whether a 31 or a 64 bit     * 00876100
*                              address is specified by a BUFLIST      * 00876200
*                              entry.                                 * 00876300
*                                                                     * 00876400
*                              DEFAULT: 31                            * 00876500
*                                                                     * 00876600
*                                                                     * 00876700
*                              ÝBUFADDRSIZE=31¨                       * 00876800
*                                  Indicates that the BUFLIST entry   * 00876900
*                                  is 31 bits in size.                * 00877000
*                                                                     * 00877100
*                              ÝBUFADDRSIZE=64¨¨                      * 00877200
*                                  Indicates that the BUFLIST entry   * 00877300
*                                  is 64 bits in size.                * 00877400
*                                                                     * 00877500
*                                                                     * 00877600
*                                                                     * 00877700
*                                                                     * 00877800
*                                                                     * 00877900
*                                                                     * 00878000
*                                                                     * 00878100
*                                                                     * 00878200
*                                                                     * 00878300
*                                                                     * 00878400
*                  BUFNUM=xbufnum                                     * 00878500
*                      is the name (RS-type), or address in register  * 00878600
*                      (2)-(12), of a required byte input specifying  * 00878700
*                      the number of buffers defined in the BUFLIST   * 00878800
*                      list.                                          * 00878900
*                                                                     * 00879000
*                      BUFNUM values must be in the range of 1 to 16. * 00879100
*                                                                     * 00879200
*                                                                     * 00879300
*                                                                     * 00879400
*                                                                     * 00879500
*                                                                     * 00879600
*                  ÝBUFINCRNUM=»xbufincrnum!16º¨                      * 00879700
*                      is the name (RS-type), or address in register  * 00879800
*                      (2)-(12), of an optional byte input that       * 00879900
*                      specifies the number of 256-byte increments or * 00880000
*                      segments in each buffer in the BUFLIST list.   * 00880100
*                                                                     * 00880200
*                      BUFINCRNUM values must be a power of 2 in the  * 00880300
*                      range of 1 to 16 (1, 2, 4, 8, 16),             * 00880400
*                      corresponding to BUFLIST buffer sizes of 256   * 00880500
*                      to 4096 bytes.                                 * 00880600
*                      DEFAULT: 16                                    * 00880700
*                                                                     * 00880800
*                                                                     * 00880900
*                                                                     * 00881000
*              BUFFER=xbuffer                                         * 00881100
*                  belongs to a set of mutually exclusive keys. It is * 00881200
*                  an input.  It is the name (RS-type), or address in * 00881300
*                  register (2)-(12), of a virtual storage area       * 00881400
*                  containing input data for the request.  The        * 00881500
*                  BUFSIZE keyword specifies the size of the buffer.  * 00881600
*                  The BUFFER keyword supports 4 byte addresses only. * 00881700
*                  The BUFFER keyword is mutually exclusive with the  * 00881800
*                  BUFADDRSIZE keyword.  The buffer may not reside in * 00881900
*                  large pages.                                       * 00882000
*                                                                     * 00882100
*                  If QureqRfDeMeBufferSize is off, the length of the * 00882200
*                  buffer must be a multiple of 4096 bytes between    * 00882300
*                  4096 and 65536 and the buffer must start on a      * 00882400
*                  4096-byte boundary.                                * 00882500
*                                                                     * 00882600
*                  If QureqRfDeMeBufferSize is on, then if the length * 00882700
*                  of the buffer is less than or equal to 4096 bytes, * 00882800
*                  the length of the buffer must be a power of 2      * 00882900
*                  between 256 and 4096 bytes (256, 512, 1024, 2048,  * 00883000
*                  4096), the buffer must start on a 256-byte         * 00883100
*                  boundary, and the buffer must not cross a          * 00883200
*                  4096-byte boundary.  If the length of the buffer   * 00883300
*                  is greater than 4096 bytes, the length of the      * 00883400
*                  buffer must be a multiple of 4096 bytes between    * 00883500
*                  4096 and 65536 and the buffer must start on a      * 00883600
*                  4096-byte boundary.                                * 00883700
*                                                                     * 00883800
*                  The buffers should be formatted into 32-byte,      * 00883900
*                  64-byte, or 96-byte elements, where each element   * 00884000
*                  is mapped by IXLYMELI and contains all the         * 00884100
*                  information required to move a list entry.  The    * 00884200
*                  format (and size) of an element is determined by   * 00884300
*                  the structure characteristics, and the options     * 00884400
*                  specified on the IXLLSTM REQUEST=MOVE_ENTRYLIST:   * 00884500
*                                                                     * 00884600
*                                                                     * 00884700
*                  32-BYTE   Any one of the following conditions:     * 00884800
*                                                                     * 00884900
*                                                                     * 00885000
*                            o   The structure does not support keyed * 00885100
*                                entries and VERSCOMPARE(NO) is       * 00885200
*                                specified.                           * 00885300
*                                                                     * 00885400
*                            o   The structure does not support keyed * 00885500
*                                entries and VERSCOMPARE(YES) is      * 00885600
*                                specified.                           * 00885700
*                                                                     * 00885800
*                            o   The structure does support keyed     * 00885900
*                                entries and MOVETOKEY=UNCHANGED,     * 00886000
*                                MOVETOSKEY=UNCHANGED, and            * 00886100
*                                VERSCOMPARE(NO) are specified.       * 00886200
*                                                                     * 00886300
*                            o   The structure does support keyed     * 00886400
*                                entries and MOVETOKEY=UNCHANGED,     * 00886500
*                                MOVETOSKEY=UNCHANGED, and            * 00886600
*                                VERSCOMPARE(YES) are specified.      * 00886700
*                                                                     * 00886800
*                            o   The structure does support keyed     * 00886900
*                                entries and MOVETOKEY=LISTKEY,       * 00887000
*                                MOVETOSKEY=UNCHANGED, and            * 00887100
*                                VERSCOMPARE(NO) are specified.       * 00887200
*                                                                     * 00887300
*                            o   The structure does support keyed     * 00887400
*                                entries and MOVETOKEY=LISTKEY,       * 00887500
*                                MOVETOSKEY=UNCHANGED, and            * 00887600
*                                VERSCOMPARE(YES) are specified.      * 00887700
*                                                                     * 00887800
*                                                                     * 00887900
*                                                                     * 00888000
*                  64-BYTE   VERSCOMPARE(BYENTRY) or                  * 00888100
*                            MOVETOKEY=TARGETKEY is specified.        * 00888200
*                                                                     * 00888300
*                  96-BYTE   MOVETOSKEY=TARGETKEY is specified.       * 00888400
*                                                                     * 00888500
*                                                                     * 00888600
*                                                                     * 00888700
*                                                                     * 00888800
*                  ÝPAGEABLE=»YES!NOº¨                                * 00888900
*                      is an optional keyword input that specifies    * 00889000
*                      whether or not the storage area specified by   * 00889100
*                      BUFFER resides in pageable storage.            * 00889200
*                                                                     * 00889300
*                      DEFAULT: YES                                   * 00889400
*                                                                     * 00889500
*                                                                     * 00889600
*                      ÝPAGEABLE=YES                                  * 00889700
*                          Indicates that the BUFFER area resides in  * 00889800
*                          pageable virtual storage.                  * 00889900
*                                                                     * 00890000
*                          This includes disabled reference storage,  * 00890100
*                          and may include storage that has the       * 00890200
*                          potential to become pageable It does not   * 00890300
*                          include implicitly non-pageable storage    * 00890400
*                          (such as is obtained from non-pageable     * 00890500
*                          subpools).                                 * 00890600
*                                                                     * 00890700
*                                                                     * 00890800
*                                                                     * 00890900
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00891000
*                              is the name (RS-type), or address in   * 00891100
*                              register (2)-(12), of an optional 8    * 00891200
*                              bit input containing the storage key   * 00891300
*                              to be used when referencing the        * 00891400
*                              storage area specified by BUFFER.      * 00891500
*                                                                     * 00891600
*                              The high order nibble contains the     * 00891700
*                              storage key, the low order nibble is   * 00891800
*                              ignored.  For example, set 'kkkk' in   * 00891900
*                              the binary bit string 'kkkkxxxx'B to   * 00892000
*                              correspond to the desired storage key. * 00892100
*                                                                     * 00892200
*                              If BUFSTGKEY is not specified, then    * 00892300
*                              all references to the BUFFER buffer    * 00892400
*                              storage are performed using the        * 00892500
*                              caller's PSW key.                      * 00892600
*                                                                     * 00892700
*                              DEFAULT: CALLERS_KEY                   * 00892800
*                                                                     * 00892900
*                                                                     * 00893000
*                                                                     * 00893100
*                      ÝPAGEABLE=NO¨                                  * 00893200
*                          Indicates that the BUFFER area resides in  * 00893300
*                          non-pageable virtual storage.              * 00893400
*                                                                     * 00893500
*                          This includes implicitly non-pageable      * 00893600
*                          storage areas.  If the virtual storage may * 00893700
*                          potentially become pageable, then the      * 00893800
*                          invoker is responsible for ensuring the    * 00893900
*                          virtual storage remains non-pageable for   * 00894000
*                          the duration of the request.               * 00894100
*                                                                     * 00894200
*                          If MODE=ASYNCTOKEN is specified or         * 00894300
*                          MODE=SYNCTOKEN is specified and the        * 00894400
*                          request does not complete synchronously,   * 00894500
*                          then the storage must remain non-pageable  * 00894600
*                          until completion of the corresponding      * 00894700
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00894800
*                          specified or MODE=SYNCEXIT is specified    * 00894900
*                          and the request does not complete          * 00895000
*                          synchronously, then the storage must       * 00895100
*                          remain non-pageable until the completion   * 00895200
*                          exit is driven for the request.  If        * 00895300
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00895400
*                          is specified and the request does not      * 00895500
*                          complete synchronously, then the storage   * 00895600
*                          must remain non-pageable until the         * 00895700
*                          specified ECB is posted for the request.   * 00895800
*                                                                     * 00895900
*                                                                     * 00896000
*                                                                     * 00896100
*                                                                     * 00896200
*                                                                     * 00896300
*                                                                     * 00896400
*                  BUFSIZE=xbufsize                                   * 00896500
*                      is the name (RS-type), or address in register  * 00896600
*                      (2)-(12), of a required fullword input         * 00896700
*                      specifying the length of the virtual storage   * 00896800
*                      area specified for BUFFER in bytes.            * 00896900
*                                                                     * 00897000
*                                                                     * 00897100
*                                                                     * 00897200
*                                                                     * 00897300
*                                                                     * 00897400
*                                                                     * 00897500
*              End of a set of mutually exclusive required keys.      * 00897600
*                                                                     * 00897700
*                                                                     * 00897800
*          REQUEST=DELETE_ENTRYLIST                                   * 00897900
*              Delete by entry list.  Requests that all entries       * 00898000
*              specified by the list of entry identifiers or entry    * 00898100
*              names in the storage area specified by BUFFER or the   * 00898200
*              buffers specified by BUFLIST be removed from whichever * 00898300
*              list they reside on and returned to the pool of free   * 00898400
*              entries for reuse.                                     * 00898500
*                                                                     * 00898600
*              Specifying AUTHCOMPARE=YES and AUTHCOMP causes list    * 00898700
*              authority verification for the designated list to      * 00898800
*              precede processing of any list entries.  If the list   * 00898900
*              authority verification fails, the list authority, the  * 00899000
*              list control information and appropriate return and    * 00899100
*              reason codes are provided in the ANSAREA.              * 00899200
*                                                                     * 00899300
*              LOCKINDEX may optionally be specified in conjunction   * 00899400
*              with LOCKOPER to indicate the index of the serialized  * 00899500
*              list lock to be operated on within the lock table for  * 00899600
*              the list structure. If the lock comparison fails,      * 00899700
*              appropriate return and reason codes are provided in    * 00899800
*              the ANSAREA.  In order for any list entries to be      * 00899900
*              processed, the list authority verification and the     * 00900000
*              lock operation if requested, must succeed.             * 00900100
*                                                                     * 00900200
*              The absence of AUTHCOMPARE or specifying               * 00900300
*              AUTHCOMPARE=NO indicates no list authority comparisons * 00900400
*              are to be performed before selecting entries to be     * 00900500
*              processed.  The absence of LOCKINDEX indicates that no * 00900600
*              lock comparison is to be performed before selecting    * 00900700
*              entries to be processed.                               * 00900800
*                                                                     * 00900900
*              LISTCOMPARE=YES and LISTNUM and/or VERSCOMPARE=YES and * 00901000
*              VERSCOMP may optionally be specified to limit deletion * 00901100
*              of entries to those residing on the specified list or  * 00901200
*              with a matching version number, as specified by        * 00901300
*              VERSCOMPTYPE, respectively.                            * 00901400
*                                                                     * 00901500
*              Specifying ENTRYKEY in conjunction with                * 00901600
*              KEYCOMPARE=YES, causes entry key comparison to be      * 00901700
*              performed as specified by KEYREQTYPE.                  * 00901800
*                                                                     * 00901900
*              Specifying SECONDARYKEY in conjunction with            * 00902000
*              SKEYCOMPARE=YES, causes secondary key comparison to be * 00902100
*              performed as specified by SKEYREQTYPE.                 * 00902200
*                                                                     * 00902300
*              The absence of VERSCOMPARE, KEYCOMPARE, SKEYCOMPARE,   * 00902400
*              or LISTCOMPARE or specifying VERSCOMPARE=NO,           * 00902500
*              KEYCOMPARE=NO, SKEYCOMPARE=NO, or LISTCOMPARE=NO       * 00902600
*              indicates no version number, entry key value,          * 00902700
*              secondary key value, or list number comparisons are    * 00902800
*              performed when selecting entries to be processed.      * 00902900
*                                                                     * 00903000
*              If the list number, version number or key comparison,  * 00903100
*              when specified, fails, and MISCOMPARE=HALT is          * 00903200
*              specified, the request will be terminated, and the     * 00903300
*              list entry controls and appropriate return and reason  * 00903400
*              codes are provided in the ANSAREA.  When               * 00903500
*              MISCOMPARE=CONTINUE is specified, or MISCOMPAREis not  * 00903600
*              specified, processing for the current list entry is    * 00903700
*              terminated, and processing continues with the next     * 00903800
*              list entry.                                            * 00903900
*                                                                     * 00904000
*              In order for a particular list entry to be deleted,    * 00904100
*              the listnum, the key and version comparison, when      * 00904200
*              requested, must succeed.                               * 00904300
*                                                                     * 00904400
*              When the request completes successfully the number of  * 00904500
*              entries deleted for this request is returned in the    * 00904600
*              answer area specified by ANSAREA.                      * 00904700
*                                                                     * 00904800
*              If any entry specified in the input list does not      * 00904900
*              exist then processing is halted and the index of the   * 00905000
*              offending entry identifier or name is also returned in * 00905100
*              the answer area.  In this event all specified entries  * 00905200
*              preceding the offending entry have been processed.     * 00905300
*              All succeeding entries have not been processed.        * 00905400
*                                                                     * 00905500
*              The BUFFER or BUFLIST contains an input array of       * 00905600
*              elements, each mapped by the IXLYDELI mapping macro.   * 00905700
*                                                                     * 00905800
*              A DELETE_ENTRYLIST request may complete prematurely if * 00905900
*              coupling facility model dependent timeout criteria is  * 00906000
*              exceeded.  In this event appropriate return and reason * 00906100
*              codes are provided, and the number of entries deleted  * 00906200
*              thus far and the index of the first unprocessed array  * 00906300
*              element is provided in ANSAREA.  The request may       * 00906400
*              subsequently be re-issued for the sublist of remaining * 00906500
*              unprocessed entry identifiers or names by specifying   * 00906600
*              the index returned in the answer area on keyword       * 00906700
*              FIRSTELEM.                                             * 00906800
*                                                                     * 00906900
*              Re-issued requests are processed identically to and    * 00907000
*              must meet the same interface requirements as original  * 00907100
*              requests.  A re-issued request may in turn experience  * 00907200
*              premature completion.                                  * 00907300
*                                                                     * 00907400
*                                                                     * 00907500
*              ÝFIRSTELEM=»xfirstelem!1º¨                             * 00907600
*                  is the name (RS-type), or address in register      * 00907700
*                  (2)-(12), of an optional halfword input specifying * 00907800
*                  the index of the first array element to be         * 00907900
*                  processed.                                         * 00908000
*                                                                     * 00908100
*                  The value must specify one of the array elements   * 00908200
*                  passed in the BUFFER area or the BUFLIST buffers.  * 00908300
*                  An index value of 1 references the first array     * 00908400
*                  entry in the BUFFER area or in the first BUFLIST   * 00908500
*                  buffer.                                            * 00908600
*                                                                     * 00908700
*                  DEFAULT: 1                                         * 00908800
*                                                                     * 00908900
*                                                                     * 00909000
*                                                                     * 00909100
*                                                                     * 00909200
*              LASTELEM=xlastelem                                     * 00909300
*                  is the name (RS-type), or address in register      * 00909400
*                  (2)-(12), of a required halfword input specifying  * 00909500
*                  the index of the last array element to be          * 00909600
*                  processed.                                         * 00909700
*                                                                     * 00909800
*                  The specified value must be greater than or equal  * 00909900
*                  to the specified FIRSTELEM value and must specify  * 00910000
*                  one of the array elements passed in the BUFFER     * 00910100
*                  area or the BUFLIST buffers.                       * 00910200
*                                                                     * 00910300
*                                                                     * 00910400
*                                                                     * 00910500
*                                                                     * 00910600
*              ÝMISCOMPARE=»CONTINUE!HALTº¨                           * 00910700
*                  is an optional keyword input indicates whether     * 00910800
*                  processing should continue to the next entry or    * 00910900
*                  halt when the version number compare, list number  * 00911000
*                  compare or key compare when requested is not       * 00911100
*                  successful.                                        * 00911200
*                                                                     * 00911300
*                  MISCOMPARE is only valid when the structure is     * 00911400
*                  allocated in a CFLEVEL=9 or higher CF.             * 00911500
*                  DEFAULT: CONTINUE                                  * 00911600
*                                                                     * 00911700
*                                                                     * 00911800
*                  MISCOMPARE=CONTINUE                                * 00911900
*                      is an optional keyword input that indicates    * 00912000
*                      that processing should continue to the next    * 00912100
*                      entry when the version number, list number, or * 00912200
*                      key comparison requested for the current entry * 00912300
*                      is not successful.                             * 00912400
*                                                                     * 00912500
*                  MISCOMPARE=HALT                                    * 00912600
*                      is an optional keyword input that indicates    * 00912700
*                      that processing should halt and not continue   * 00912800
*                      to the next entry when the version number,     * 00912900
*                      list number, or key comparison requested is    * 00913000
*                      not successful. Processing for the request is  * 00913100
*                      terminated, the list entry controls and the    * 00913200
*                      appropriate return and reason codes will be    * 00913300
*                      returned in the ANSAREA.                       * 00913400
*                                                                     * 00913500
*                                                                     * 00913600
*                                                                     * 00913700
*                                                                     * 00913800
*                                                                     * 00913900
*                                                                     * 00914000
*              LISTTYPE=»NAMELIST!IDLISTº                             * 00914100
*                  is a required keyword input that specifies whether * 00914200
*                  the entries in the BUFFER area or the BUFLIST      * 00914300
*                  buffers for the request contain a list entry name  * 00914400
*                  or a list entry ID.                                * 00914500
*                                                                     * 00914600
*                                                                     * 00914700
*                  LISTTYPE=NAMELIST                                  * 00914800
*                      The input entries in the BUFFER area or the    * 00914900
*                      BUFLIST buffers contain list entry names.      * 00915000
*                                                                     * 00915100
*                      LISTTYPE=NAMELIST is not allowed for           * 00915200
*                      structures that do not support named entries.  * 00915300
*                                                                     * 00915400
*                  LISTTYPE=IDLIST                                    * 00915500
*                      The input entries in the BUFFER area or the    * 00915600
*                      BUFLIST buffers contain list entry             * 00915700
*                      identifiers.                                   * 00915800
*                                                                     * 00915900
*                                                                     * 00916000
*                      ÝKEYCOMPARE=»NO!YESº                           * 00916100
*                          is an optional keyword input that          * 00916200
*                          determines whether the key value of an     * 00916300
*                          existing keyed list entry is to be         * 00916400
*                          compared to determine if this entry should * 00916500
*                          be selected for processing.  KEYCOMPARE is * 00916600
*                          only meaningful for list structures        * 00916700
*                          allocated on CFLEVEL=1 or higher CF.       * 00916800
*                          DEFAULT: NO                                * 00916900
*                                                                     * 00917000
*                                                                     * 00917100
*                          ÝKEYCOMPARE=NO¨                            * 00917200
*                              Indicates that no entry key comparison * 00917300
*                              will be performed to determine if this * 00917400
*                              entry should be processed.             * 00917500
*                                                                     * 00917600
*                          ÝKEYCOMPARE=YES                            * 00917700
*                              Indicates that entry key comparison    * 00917800
*                              will be performed based on the         * 00917900
*                              KEYREQTYPE specified to determine if   * 00918000
*                              this entry is selectable for           * 00918100
*                              processing.                            * 00918200
*                                                                     * 00918300
*                              KEYCOMPARE=YES is ignored if the       * 00918400
*                              target structure does not support      * 00918500
*                              keyed entries.                         * 00918600
*                                                                     * 00918700
*                                                                     * 00918800
*                              ENTRYKEY=xentrykey                     * 00918900
*                                  is the name (RS-type), or address  * 00919000
*                                  in register (2)-(12), of a         * 00919100
*                                  required 16 character input that   * 00919200
*                                  specifies the key to be used to    * 00919300
*                                  compare to the entry key of the    * 00919400
*                                  list entry.  If the condition      * 00919500
*                                  specified by KEYREQTYPE is not met * 00919600
*                                  for the current list entry then no * 00919700
*                                  processing is performed for the    * 00919800
*                                  current entry, and processing      * 00919900
*                                  either continues with the next     * 00920000
*                                  entry to be considered, or is      * 00920100
*                                  terminated based on the value      * 00920200
*                                  specified by MISCOMPARE.           * 00920300
*                                                                     * 00920400
*                                                                     * 00920500
*                                                                     * 00920600
*                                                                     * 00920700
*                              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATER * 00920800
*                                  OREQUAL!RANGEº¨¨                   * 00920900
*                                  is an optional keyword input which * 00921000
*                                  specifies how entry key comparison * 00921100
*                                  is to be performed on an existing  * 00921200
*                                  keyed list entry to determine if   * 00921300
*                                  the entry is selectable for        * 00921400
*                                  processing.                        * 00921500
*                                  DEFAULT: EQUAL                     * 00921600
*                                                                     * 00921700
*                                                                     * 00921800
*                                  ÝKEYREQTYPE=EQUAL¨                 * 00921900
*                                      a list entry must have an      * 00922000
*                                      entry key equal to the value   * 00922100
*                                      specified by ENTRYKEY.         * 00922200
*                                                                     * 00922300
*                                  ÝKEYREQTYPE=LESSOREQUAL¨           * 00922400
*                                      a list entry must have an      * 00922500
*                                      entry key less than or equal   * 00922600
*                                      to the value specified by      * 00922700
*                                      ENTRYKEY.                      * 00922800
*                                                                     * 00922900
*                                      KEYREQTYPE=LESSOREQUAL is only * 00923000
*                                      valid when the structure is    * 00923100
*                                      allocated in a CFLEVEL=9 or    * 00923200
*                                      higher CF.                     * 00923300
*                                                                     * 00923400
*                                  ÝKEYREQTYPE=GREATEROREQUAL¨        * 00923500
*                                      a list entry must have an      * 00923600
*                                      entry key greater than or      * 00923700
*                                      equal to the value specified   * 00923800
*                                      by ENTRYKEY.                   * 00923900
*                                                                     * 00924000
*                                      KEYREQTYPE=GREATEROREQUAL is   * 00924100
*                                      only valid when the structure  * 00924200
*                                      is allocated in a CFLEVEL=9 or * 00924300
*                                      higher CF.                     * 00924400
*                                                                     * 00924500
*                                  ÝKEYREQTYPE=RANGE                  * 00924600
*                                      a list entry must have an      * 00924700
*                                      entry key within a specified   * 00924800
*                                      range of values. The ENTRYKEY  * 00924900
*                                      specified will be used as the  * 00925000
*                                      beginning of the range of key  * 00925100
*                                      values that will be compared   * 00925200
*                                      with the existing entry key.   * 00925300
*                                      KEYRANGEEND will be used as    * 00925400
*                                      the ending value.  A list      * 00925500
*                                      entry must have an entry key   * 00925600
*                                      value within the specified     * 00925700
*                                      entry key range, inclusive,    * 00925800
*                                      for it to be selectable.       * 00925900
*                                                                     * 00926000
*                                      KEYREQTYPE=RANGE is only valid * 00926100
*                                      when the structure is          * 00926200
*                                      allocated in a CFLEVEL=9 or    * 00926300
*                                      higher CF.                     * 00926400
*                                                                     * 00926500
*                                                                     * 00926600
*                                      KEYRANGEEND=xkeyrangeend¨¨     * 00926700
*                                          is the name (RS-type), or  * 00926800
*                                          address in register        * 00926900
*                                          (2)-(12), of a required 16 * 00927000
*                                          character input specifies  * 00927100
*                                          the ending value for the   * 00927200
*                                          range of keys to be        * 00927300
*                                          compared to the entry key  * 00927400
*                                          of the list entry.         * 00927500
*                                                                     * 00927600
*                                                                     * 00927700
*                                                                     * 00927800
*                                                                     * 00927900
*                                                                     * 00928000
*                                                                     * 00928100
*                                                                     * 00928200
*                                                                     * 00928300
*                                                                     * 00928400
*                                                                     * 00928500
*                                                                     * 00928600
*                                                                     * 00928700
*                      ÝSKEYCOMPARE=»NO!YESº                          * 00928800
*                          is an optional keyword input that          * 00928900
*                          determines whether the secondary key value * 00929000
*                          of an existing keyed list entry is to be   * 00929100
*                          compared to determine if this entry should * 00929200
*                          be selected for processing.                * 00929300
*                          DEFAULT: NO                                * 00929400
*                                                                     * 00929500
*                                                                     * 00929600
*                          ÝSKEYCOMPARE=NO¨                           * 00929700
*                              Indicates that no secondary key        * 00929800
*                              comparison will be performed to        * 00929900
*                              determine if this entry should be      * 00930000
*                              processed.                             * 00930100
*                                                                     * 00930200
*                          ÝSKEYCOMPARE=YES                           * 00930300
*                              Indicates that secondary key           * 00930400
*                              comparison will be performed based on  * 00930500
*                              the SKEYREQTYPE specified to determine * 00930600
*                              if this entry is selectable for        * 00930700
*                              processing.                            * 00930800
*                                                                     * 00930900
*                              SKEYCOMPARE=YES is ignored if the      * 00931000
*                              target structure was not allocated     * 00931100
*                              with secondary keys.                   * 00931200
*                                                                     * 00931300
*                                                                     * 00931400
*                              SECONDARYKEY=xsecondarykey             * 00931500
*                                  is the name (RS-type), or address  * 00931600
*                                  in register (2)-(12), of a         * 00931700
*                                  required 32 character input that   * 00931800
*                                  specifies the secondary key to be  * 00931900
*                                  used to compare to the secondary   * 00932000
*                                  key of the list entry.  If the     * 00932100
*                                  condition specified by SKEYREQTYPE * 00932200
*                                  is not met for the current list    * 00932300
*                                  entry then no processing is        * 00932400
*                                  performed for the current entry,   * 00932500
*                                  and processing continues with the  * 00932600
*                                  next entry to be considered.       * 00932700
*                                                                     * 00932800
*                                                                     * 00932900
*                                                                     * 00933000
*                                                                     * 00933100
*                              ÝSKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATE * 00933200
*                                  ROREQUAL!RANGEº¨¨                  * 00933300
*                                  is an optional keyword input which * 00933400
*                                  specifies how secondary key        * 00933500
*                                  comparison is to be performed on   * 00933600
*                                  an existing keyed list entry to    * 00933700
*                                  determine if the entry is          * 00933800
*                                  selectable for processing.         * 00933900
*                                  DEFAULT: EQUAL                     * 00934000
*                                                                     * 00934100
*                                                                     * 00934200
*                                  ÝSKEYREQTYPE=EQUAL¨                * 00934300
*                                      a list entry must have a       * 00934400
*                                      secondary key equal to the     * 00934500
*                                      value specified by             * 00934600
*                                      SECONDARYKEY.                  * 00934700
*                                                                     * 00934800
*                                  ÝSKEYREQTYPE=LESSOREQUAL¨          * 00934900
*                                      a list entry must have a       * 00935000
*                                      secondary key less than or     * 00935100
*                                      equal to the value specified   * 00935200
*                                      by SECONDARYKEY.               * 00935300
*                                                                     * 00935400
*                                  ÝSKEYREQTYPE=GREATEROREQUAL¨       * 00935500
*                                      a list entry must have a       * 00935600
*                                      secondary key greater than or  * 00935700
*                                      equal to the value specified   * 00935800
*                                      by SECONDARYKEY.               * 00935900
*                                                                     * 00936000
*                                  ÝSKEYREQTYPE=RANGE                 * 00936100
*                                      a list entry must have a       * 00936200
*                                      secondary key within a         * 00936300
*                                      specified range of values. The * 00936400
*                                      SECONDARYKEY specified will be * 00936500
*                                      used as the beginning of the   * 00936600
*                                      range of secondary key values  * 00936700
*                                      that will be compared with the * 00936800
*                                      existing secondary key of the  * 00936900
*                                      designated list entry.         * 00937000
*                                      SKEYRANGEEND will be used as   * 00937100
*                                      the ending value.  A list      * 00937200
*                                      entry must have a secondary    * 00937300
*                                      key value within the specified * 00937400
*                                      secondary key range,           * 00937500
*                                      inclusive, for it to be        * 00937600
*                                      selectable.                    * 00937700
*                                                                     * 00937800
*                                                                     * 00937900
*                                      SKEYRANGEEND=xskeyrangeend¨¨   * 00938000
*                                                                     * 00938100
*                                          is the name (RS-type), or  * 00938200
*                                          address in register        * 00938300
*                                          (2)-(12), of a required 32 * 00938400
*                                          character input which      * 00938500
*                                          specifies the ending value * 00938600
*                                          for the range of secondary * 00938700
*                                          keys to be compared to the * 00938800
*                                          secondary key of the list  * 00938900
*                                          entry.                     * 00939000
*                                                                     * 00939100
*                                                                     * 00939200
*                                                                     * 00939300
*                                                                     * 00939400
*                                                                     * 00939500
*                                                                     * 00939600
*                                                                     * 00939700
*                                                                     * 00939800
*                                                                     * 00939900
*                                                                     * 00940000
*                                                                     * 00940100
*                                                                     * 00940200
*                                                                     * 00940300
*                                                                     * 00940400
*                                                                     * 00940500
*                                                                     * 00940600
*              ÝLISTCOMPARE=»NO!YESº                                  * 00940700
*                  is an optional keyword input which determines if   * 00940800
*                  the list number is to be compared to determine if  * 00940900
*                  entries should be processed.                       * 00941000
*                  DEFAULT: NO                                        * 00941100
*                                                                     * 00941200
*                                                                     * 00941300
*                  ÝLISTCOMPARE=NO¨                                   * 00941400
*                      indicates no list number criteria is to be     * 00941500
*                      applied when selecting entries to be           * 00941600
*                      processed.                                     * 00941700
*                                                                     * 00941800
*                  ÝLISTCOMPARE=YES                                   * 00941900
*                      indicates that list number comparison should   * 00942000
*                      precede processing of any list entries.        * 00942100
*                                                                     * 00942200
*                                                                     * 00942300
*                      LISTNUM=xlistnum                               * 00942400
*                          is the name (RS-type), or address in       * 00942500
*                          register (2)-(12), of a required fullword  * 00942600
*                          input designates the number of the list on * 00942700
*                          which the entries to be processed reside.  * 00942800
*                          If the condition specified by LISTNUM is   * 00942900
*                          not met for the current list entry then no * 00943000
*                          processing is performed for the current    * 00943100
*                          entry and processing either continues with * 00943200
*                          the next entry to be considered, or is     * 00943300
*                          terminated based on the value specified by * 00943400
*                          MISCOMPARE.                                * 00943500
*                                                                     * 00943600
*                                                                     * 00943700
*                          ÝAUTHCOMPARE=»NO!YESº                      * 00943800
*                              is an optional keyword input which     * 00943900
*                              determines whether the list authority  * 00944000
*                              comparison is to be used to determine  * 00944100
*                              if entries on the list should be       * 00944200
*                              processed.                             * 00944300
*                                                                     * 00944400
*                              AUTHCOMPARE is only meaningful for     * 00944500
*                              list structures allocated on CFLEVEL=1 * 00944600
*                              or higher CF.                          * 00944700
*                              DEFAULT: NO                            * 00944800
*                                                                     * 00944900
*                                                                     * 00945000
*                              ÝAUTHCOMPARE=NO¨                       * 00945100
*                                  indicates no list authority        * 00945200
*                                  comparison is to be performed      * 00945300
*                                  before processing any entries on   * 00945400
*                                  the list.                          * 00945500
*                                                                     * 00945600
*                              ÝAUTHCOMPARE=YES                       * 00945700
*                                  indicates that list authority      * 00945800
*                                  comparison should precede          * 00945900
*                                  processing of any entries on the   * 00946000
*                                  list.                              * 00946100
*                                                                     * 00946200
*                                                                     * 00946300
*                                  AUTHCOMP=xauthcomp                 * 00946400
*                                      is the name (RS-type), or      * 00946500
*                                      address in register (2)-(12),  * 00946600
*                                      of a required 16 character     * 00946700
*                                      input which specifies a value  * 00946800
*                                      to be compared to the list     * 00946900
*                                      authority value for the        * 00947000
*                                      designated list.  If the       * 00947100
*                                      condition specified by         * 00947200
*                                      AUTHCOMPTYPE is not met then   * 00947300
*                                      the IXLLSTM operation is       * 00947400
*                                      terminated with no resultant   * 00947500
*                                      change to the structure, and   * 00947600
*                                      appropriate return and reason  * 00947700
*                                      codes are provided to the      * 00947800
*                                      invoker.                       * 00947900
*                                                                     * 00948000
*                                                                     * 00948100
*                                      ÝAUTHCOMPTYPE=»EQUAL!LESSOREQU * 00948200
*                                          ALº¨¨¨                     * 00948300
*                                          is an optional keyword     * 00948400
*                                          input which specifies how  * 00948500
*                                          the list authority         * 00948600
*                                          comparison is to be        * 00948700
*                                          performed.                 * 00948800
*                                                                     * 00948900
*                                          DEFAULT: EQUAL             * 00949000
*                                                                     * 00949100
*                                                                     * 00949200
*                                          AUTHCOMPTYPE=EQUAL         * 00949300
*                                              The list authority for * 00949400
*                                              the list specified by  * 00949500
*                                              LISTNUM must be equal  * 00949600
*                                              to the value specified * 00949700
*                                              for AUTHCOMP.          * 00949800
*                                                                     * 00949900
*                                                                     * 00950000
*                                          AUTHCOMPTYPE=LESSOREQUAL   * 00950100
*                                                                     * 00950200
*                                              The list authority for * 00950300
*                                              the list specified by  * 00950400
*                                              LISTNUM must be less   * 00950500
*                                              than or equal to the   * 00950600
*                                              value specified for    * 00950700
*                                              AUTHCOMP.              * 00950800
*                                                                     * 00950900
*                                                                     * 00951000
*                                                                     * 00951100
*                                                                     * 00951200
*                                                                     * 00951300
*                                                                     * 00951400
*                                                                     * 00951500
*                                                                     * 00951600
*                                                                     * 00951700
*                                                                     * 00951800
*                                                                     * 00951900
*                                                                     * 00952000
*                                                                     * 00952100
*                                                                     * 00952200
*                                                                     * 00952300
*                                                                     * 00952400
*                                                                     * 00952500
*                                                                     * 00952600
*              ÝVERSCOMPARE=»NO!BYENTRY!YESº                          * 00952700
*                  is an optional keyword input indicates the version * 00952800
*                  comparison be done for each list entry.            * 00952900
*                  DEFAULT: NO                                        * 00953000
*                                                                     * 00953100
*                                                                     * 00953200
*                  ÝVERSCOMPARE=NO¨                                   * 00953300
*                      Indicates that no version number comparison is * 00953400
*                      to be applied when selecting entries to be     * 00953500
*                      processed.                                     * 00953600
*                                                                     * 00953700
*                  ÝVERSCOMPARE=BYENTRY¨                              * 00953800
*                      Indicates that version number comparison will  * 00953900
*                      be performed before each list entry is         * 00954000
*                      processed.  The version number specified in    * 00954100
*                      the datablock for each list entry will be used * 00954200
*                      to compare each entry processed.  If the       * 00954300
*                      condition specified by VERSCOMPTYPE in the     * 00954400
*                      datablock is not met for the current list      * 00954500
*                      entry then no processing is performed for the  * 00954600
*                      current entry and processing either continues  * 00954700
*                      with the next entry to be considered, or is    * 00954800
*                      terminated based on the value specified by     * 00954900
*                      MISCOMPARE.                                    * 00955000
*                                                                     * 00955100
*                      VERSCOMPARE=BYENTRY is only valid when the     * 00955200
*                      structure is allocated in a CFLEVEL=9 or       * 00955300
*                      higher CF.                                     * 00955400
*                                                                     * 00955500
*                  ÝVERSCOMPARE=YES                                   * 00955600
*                      Indicates that version number comparison will  * 00955700
*                      be performed before each list entry is         * 00955800
*                      processed.  The version number specified by    * 00955900
*                      VERSCOMP and the VERSCOMPTYPE will be used for * 00956000
*                      each entry processed.                          * 00956100
*                                                                     * 00956200
*                                                                     * 00956300
*                      VERSCOMP=xverscomp                             * 00956400
*                          is the name (RS-type), or address in       * 00956500
*                          register (2)-(12), of a required 8         * 00956600
*                          character input which specifies a value to * 00956700
*                          be compared to the version number of the   * 00956800
*                          designated list entry.  If the condition   * 00956900
*                          specified by VERSCOMPTYPE is not met for   * 00957000
*                          the current list entry then no processing  * 00957100
*                          is performed for the current entry and     * 00957200
*                          processing either continues with the next  * 00957300
*                          entry to be considered, or is terminated   * 00957400
*                          based on the value specified by            * 00957500
*                          MISCOMPARE.                                * 00957600
*                                                                     * 00957700
*                                                                     * 00957800
*                          ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨        * 00957900
*                              is an optional keyword input which     * 00958000
*                              specifies how the list entry version   * 00958100
*                              number comparison is to be performed.  * 00958200
*                                                                     * 00958300
*                              VERSCOMPTYPE=LESSOREQUAL is only       * 00958400
*                              meaningful for list structures         * 00958500
*                              allocated on CFLEVEL=1 or higher CF.   * 00958600
*                                                                     * 00958700
*                              DEFAULT: EQUAL                         * 00958800
*                                                                     * 00958900
*                                                                     * 00959000
*                              VERSCOMPTYPE=EQUAL                     * 00959100
*                                  The version number for the list    * 00959200
*                                  entry must be equal to the value   * 00959300
*                                  specified for VERSCOMP.            * 00959400
*                                                                     * 00959500
*                                                                     * 00959600
*                              VERSCOMPTYPE=LESSOREQUAL               * 00959700
*                                  The version number for the list    * 00959800
*                                  entry must be less than or equal   * 00959900
*                                  to the value specified for         * 00960000
*                                  VERSCOMP.                          * 00960100
*                                  DEFAULT: Equal                     * 00960200
*                                                                     * 00960300
*                                                                     * 00960400
*                                                                     * 00960500
*                                                                     * 00960600
*                                                                     * 00960700
*                                                                     * 00960800
*                                                                     * 00960900
*                                                                     * 00961000
*                                                                     * 00961100
*                                                                     * 00961200
*                                                                     * 00961300
*                                                                     * 00961400
*              The following is a set of mutually exclusive keys.     * 00961500
*              This set is required; only one key must be specified.  * 00961600
*                                                                     * 00961700
*                                                                     * 00961800
*              BUFLIST=xbuflist                                       * 00961900
*                  belongs to a set of mutually exclusive keys. It is * 00962000
*                  an input.  It is the name (RS-type), or address in * 00962100
*                  register (2)-(12), of a 128-byte virtual storage   * 00962200
*                  area containing a list of addresses of buffers.    * 00962300
*                  These buffers contain input data for the request.  * 00962400
*                  The set of buffers is used as if it were a single  * 00962500
*                  contiguous area for purposes of input.             * 00962600
*                                                                     * 00962700
*                  The format of the list is a set of 8-byte          * 00962800
*                  elements.  The BUFADDRSIZE keyword denotes whether * 00962900
*                  four or eight bytes of the element are used.  If   * 00963000
*                  BUFADDRSIZE=31 is specified then the first four    * 00963100
*                  bytes of each element are reserved space and the   * 00963200
*                  last four bytes contain the address of the buffer. * 00963300
*                  If BUFADDRSIZE=64 is specified then the full eight * 00963400
*                  bytes specify the address of the buffer.  The      * 00963500
*                  buffers may not reside in large pages.  The        * 00963600
*                  buffers may not reside in high shared virtual      * 00963700
*                  storage areas or in pageable high virtual common   * 00963800
*                  storage (above 2GB).                               * 00963900
*                                                                     * 00964000
*                  There may be 1 to 16 buffers passed in the list.   * 00964100
*                  Each buffer in the list must be the same size and  * 00964200
*                  must reside in the same address space or data      * 00964300
*                  space.  Data is fetched from the buffers in the    * 00964400
*                  order specified.                                   * 00964500
*                                                                     * 00964600
*                  If QureqRfDeMeBufferSize is off, then each buffer  * 00964700
*                  must be 4096 bytes in length and must start on a   * 00964800
*                  4096-byte boundary.                                * 00964900
*                                                                     * 00965000
*                  If QureqRfDeMeBufferSize is on, then the length of * 00965100
*                  each buffer must be a power of 2 between 256 and   * 00965200
*                  4096 bytes (256, 512, 1024, 2048, 4096).  Each     * 00965300
*                  buffer must start on a 256-byte boundary and must  * 00965400
*                  not cross a 4096-byte boundary.                    * 00965500
*                                                                     * 00965600
*                  The buffers should be formatted into 12-byte,      * 00965700
*                  16-byte, or 64-byte elements, where each element   * 00965800
*                  is mapped by IXLYDELI and contains all the         * 00965900
*                  information required to delete a list entry.  The  * 00966000
*                  format (and size) of an element is determined by   * 00966100
*                  the options specified on the IXLLSTM               * 00966200
*                  REQUEST=DELETE_ENTRYLIST:                          * 00966300
*                                                                     * 00966400
*                                                                     * 00966500
*                  16-BYTE   Any one of the following conditions:     * 00966600
*                                                                     * 00966700
*                                                                     * 00966800
*                            o   VERSCOMPARE(NO) and                  * 00966900
*                                LISTTYPE(NAMELIST) are specified.    * 00967000
*                                                                     * 00967100
*                            o   VERSCOMPARE(YES) and                 * 00967200
*                                LISTTYPE(NAMELIST) are specified.    * 00967300
*                                                                     * 00967400
*                                                                     * 00967500
*                                                                     * 00967600
*                  12-BYTE   Any one of the following conditions:     * 00967700
*                                                                     * 00967800
*                                                                     * 00967900
*                            o   VERSCOMPARE(NO) and LISTTYPE(IDLIST) * 00968000
*                                are specified.                       * 00968100
*                                                                     * 00968200
*                            o   VERSCOMPARE(YES) and                 * 00968300
*                                LISTTYPE(IDLIST) are specified.      * 00968400
*                                                                     * 00968500
*                                                                     * 00968600
*                                                                     * 00968700
*                  64-BYTE   VERSCOMPARE(BYENTRY) is specified.       * 00968800
*                                                                     * 00968900
*                                                                     * 00969000
*                                                                     * 00969100
*                                                                     * 00969200
*                  ÝBUFADDRTYPE=»VIRTUAL!REALº                        * 00969300
*                      is an optional keyword input that specifies    * 00969400
*                      whether the buffer addresses specified in the  * 00969500
*                      BUFLIST list are virtual storage addresses or  * 00969600
*                      real storage addresses.                        * 00969700
*                                                                     * 00969800
*                      DEFAULT: VIRTUAL                               * 00969900
*                                                                     * 00970000
*                                                                     * 00970100
*                      ÝBUFADDRTYPE=VIRTUAL                           * 00970200
*                          Indicates that the buffer addresses        * 00970300
*                          specified in the BUFLIST list are virtual  * 00970400
*                          storage addresses.                         * 00970500
*                                                                     * 00970600
*                                                                     * 00970700
*                                                                     * 00970800
*                          ÝPAGEABLE=»YES!NOº¨                        * 00970900
*                              is an optional keyword input that      * 00971000
*                              specifies whether or not the buffers   * 00971100
*                              specified by BUFLIST resides in        * 00971200
*                              pageable storage.                      * 00971300
*                                                                     * 00971400
*                              DEFAULT: YES                           * 00971500
*                                                                     * 00971600
*                                                                     * 00971700
*                              ÝPAGEABLE=YES                          * 00971800
*                                  Indicates that the BUFLIST buffers * 00971900
*                                  reside in pageable virtual         * 00972000
*                                  storage.                           * 00972100
*                                                                     * 00972200
*                                  This includes disabled reference   * 00972300
*                                  storage, and may include storage   * 00972400
*                                  that has the potential to become   * 00972500
*                                  pageable (such as address space    * 00972600
*                                  storage for which a PGSER FIX has  * 00972700
*                                  been successfully processed).  It  * 00972800
*                                  does not include implicitly        * 00972900
*                                  non-pageable storage (such as is   * 00973000
*                                  obtained from non-pageable         * 00973100
*                                  subpools).                         * 00973200
*                                                                     * 00973300
*                                                                     * 00973400
*                                                                     * 00973500
*                                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEY * 00973600
*                                      º¨¨                            * 00973700
*                                      is the name (RS-type), or      * 00973800
*                                      address in register (2)-(12),  * 00973900
*                                      of an optional 8 bit input     * 00974000
*                                      containing the storage key to  * 00974100
*                                      be used when referencing the   * 00974200
*                                      buffers in the list specified  * 00974300
*                                      by BUFLIST.                    * 00974400
*                                                                     * 00974500
*                                      The high order nibble contains * 00974600
*                                      the storage key, the low order * 00974700
*                                      nibble is ignored.  For        * 00974800
*                                      example, set 'kkkk' in the     * 00974900
*                                      binary bit string 'kkkkxxxx'B  * 00975000
*                                      to correspond to the desired   * 00975100
*                                      storage key.                   * 00975200
*                                                                     * 00975300
*                                      If BUFSTGKEY is not specified, * 00975400
*                                      then all references to the     * 00975500
*                                      BUFLIST buffers are performed  * 00975600
*                                      using the caller's PSW key.    * 00975700
*                                                                     * 00975800
*                                      DEFAULT: CALLERS_KEY           * 00975900
*                                                                     * 00976000
*                                                                     * 00976100
*                                                                     * 00976200
*                              ÝPAGEABLE=NO¨                          * 00976300
*                                  Indicates that the BUFLIST buffers * 00976400
*                                  reside in non-pageable virtual     * 00976500
*                                  storage.                           * 00976600
*                                                                     * 00976700
*                                  This includes implicitly           * 00976800
*                                  non-pageable storage areas.  If    * 00976900
*                                  the virtual storage may            * 00977000
*                                  potentially become pageable, then  * 00977100
*                                  the invoker is responsible for     * 00977200
*                                  ensuring the virtual storage       * 00977300
*                                  remains non-pageable for the       * 00977400
*                                  duration of the request.           * 00977500
*                                                                     * 00977600
*                                  If MODE=ASYNCTOKEN is specified or * 00977700
*                                  MODE=SYNCTOKEN is specified and    * 00977800
*                                  the request does not complete      * 00977900
*                                  synchronously, then the storage    * 00978000
*                                  must remain non-pageable until     * 00978100
*                                  completion of the corresponding    * 00978200
*                                  IXLFCOMP request.  If              * 00978300
*                                  MODE=ASYNCEXIT is specified or     * 00978400
*                                  MODE=SYNCEXIT is specified and the * 00978500
*                                  request does not complete          * 00978600
*                                  synchronously, then the storage    * 00978700
*                                  must remain non-pageable until the * 00978800
*                                  completion exit is driven for the  * 00978900
*                                  request.  If MODE=ASYNCECB is      * 00979000
*                                  specified or MODE=SYNCECB is       * 00979100
*                                  specified and the request does not * 00979200
*                                  complete synchronously, then the   * 00979300
*                                  storage must remain non-pageable   * 00979400
*                                  until the specified ECB is posted  * 00979500
*                                  for the request.                   * 00979600
*                                                                     * 00979700
*                                                                     * 00979800
*                                                                     * 00979900
*                                                                     * 00980000
*                                                                     * 00980100
*                                                                     * 00980200
*                          ÝBUFALET=»xbufalet!NO_BUFALETº¨            * 00980300
*                              is the name (RS-type), or address in   * 00980400
*                              register (2)-(12), of an optional      * 00980500
*                              fullword input specifying the ALET     * 00980600
*                              value to be used in referencing all of * 00980700
*                              the buffers specified for BUFLIST      * 00980800
*                                                                     * 00980900
*                              DEFAULT: NO_BUFALET                    * 00981000
*                                                                     * 00981100
*                                                                     * 00981200
*                                                                     * 00981300
*                                                                     * 00981400
*                          ÝBUFADDRSIZE=»31!64º¨                      * 00981500
*                              is an optional keyword input that      * 00981600
*                              specifies whether a 31 or a 64 bit     * 00981700
*                              address is specified by a BUFLIST      * 00981800
*                              entry.                                 * 00981900
*                                                                     * 00982000
*                              DEFAULT: 31                            * 00982100
*                                                                     * 00982200
*                                                                     * 00982300
*                              ÝBUFADDRSIZE=31¨                       * 00982400
*                                  Indicates that the BUFLIST entry   * 00982500
*                                  is 31 bits in size.                * 00982600
*                                                                     * 00982700
*                              ÝBUFADDRSIZE=64¨¨                      * 00982800
*                                  Indicates that the BUFLIST entry   * 00982900
*                                  is 64 bits in size.                * 00983000
*                                                                     * 00983100
*                                                                     * 00983200
*                                                                     * 00983300
*                                                                     * 00983400
*                                                                     * 00983500
*                      ÝBUFADDRTYPE=REAL                              * 00983600
*                          Indicates that the buffer addresses        * 00983700
*                          specified in the BUFLIST list are real     * 00983800
*                          storage addresses.                         * 00983900
*                                                                     * 00984000
*                                                                     * 00984100
*                          ÝBUFADDRSIZE=»31!64º¨¨                     * 00984200
*                              is an optional keyword input that      * 00984300
*                              specifies whether a 31 or a 64 bit     * 00984400
*                              address is specified by a BUFLIST      * 00984500
*                              entry.                                 * 00984600
*                                                                     * 00984700
*                              DEFAULT: 31                            * 00984800
*                                                                     * 00984900
*                                                                     * 00985000
*                              ÝBUFADDRSIZE=31¨                       * 00985100
*                                  Indicates that the BUFLIST entry   * 00985200
*                                  is 31 bits in size.                * 00985300
*                                                                     * 00985400
*                              ÝBUFADDRSIZE=64¨¨                      * 00985500
*                                  Indicates that the BUFLIST entry   * 00985600
*                                  is 64 bits in size.                * 00985700
*                                                                     * 00985800
*                                                                     * 00985900
*                                                                     * 00986000
*                                                                     * 00986100
*                                                                     * 00986200
*                                                                     * 00986300
*                                                                     * 00986400
*                                                                     * 00986500
*                                                                     * 00986600
*                                                                     * 00986700
*                  BUFNUM=xbufnum                                     * 00986800
*                      is the name (RS-type), or address in register  * 00986900
*                      (2)-(12), of a required byte input specifying  * 00987000
*                      the number of buffers defined in the BUFLIST   * 00987100
*                      list.                                          * 00987200
*                                                                     * 00987300
*                      BUFNUM values must be in the range of 1 to 16. * 00987400
*                                                                     * 00987500
*                                                                     * 00987600
*                                                                     * 00987700
*                                                                     * 00987800
*                                                                     * 00987900
*                  ÝBUFINCRNUM=»xbufincrnum!16º¨                      * 00988000
*                      is the name (RS-type), or address in register  * 00988100
*                      (2)-(12), of an optional byte input that       * 00988200
*                      specifies the number of 256-byte increments or * 00988300
*                      segments in each buffer in the BUFLIST list.   * 00988400
*                                                                     * 00988500
*                      BUFINCRNUM values must be a power of 2 in the  * 00988600
*                      range of 1 to 16 (1, 2, 4, 8, 16),             * 00988700
*                      corresponding to BUFLIST buffer sizes of 256   * 00988800
*                      to 4096 bytes.                                 * 00988900
*                      DEFAULT: 16                                    * 00989000
*                                                                     * 00989100
*                                                                     * 00989200
*                                                                     * 00989300
*              BUFFER=xbuffer                                         * 00989400
*                  belongs to a set of mutually exclusive keys. It is * 00989500
*                  an input.  It is the name (RS-type), or address in * 00989600
*                  register (2)-(12), of a virtual storage area       * 00989700
*                  containing input data for the request.  The        * 00989800
*                  BUFSIZE keyword specifies the size of the buffer.  * 00989900
*                  The BUFFER keyword supports 4 byte addresses only. * 00990000
*                  The BUFFER keyword is mutually exclusive with the  * 00990100
*                  BUFADDRSIZE keyword.  The buffer may not reside in * 00990200
*                  large pages.                                       * 00990300
*                                                                     * 00990400
*                  If QureqRfDeMeBufferSize is off, the length of the * 00990500
*                  buffer must be a multiple of 4096 bytes between    * 00990600
*                  4096 and 65536 and the buffer must start on a      * 00990700
*                  4096-byte boundary.                                * 00990800
*                                                                     * 00990900
*                  If QureqRfDeMeBufferSize is on, then if the length * 00991000
*                  of the buffer is less than or equal to 4096 bytes, * 00991100
*                  the length of the buffer must be a power of 2      * 00991200
*                  between 256 and 4096 bytes (256, 512, 1024, 2048,  * 00991300
*                  4096), the buffer must start on a 256-byte         * 00991400
*                  boundary, and the buffer must not cross a          * 00991500
*                  4096-byte boundary.  If the length of the buffer   * 00991600
*                  is greater than 4096 bytes, the length of the      * 00991700
*                  buffer must be a multiple of 4096 bytes between    * 00991800
*                  4096 and 65536 and the buffer must start on a      * 00991900
*                  4096-byte boundary.                                * 00992000
*                                                                     * 00992100
*                  The BUFFER area is used as input and contains a    * 00992200
*                  list of list entry identifiers or names to be      * 00992300
*                  deleted.  The buffers should be formatted into     * 00992400
*                  12-byte, 16-byte, or 64-byte elements, where each  * 00992500
*                  element is mapped by IXLYDELI and contains all the * 00992600
*                  information required to delete a list entry.  The  * 00992700
*                  format (and size) of an element is determined by   * 00992800
*                  the options specified on the IXLLSTM               * 00992900
*                  REQUEST=DELETE_ENTRYLIST:                          * 00993000
*                                                                     * 00993100
*                                                                     * 00993200
*                  16-BYTE   Any one of the following conditions:     * 00993300
*                                                                     * 00993400
*                                                                     * 00993500
*                            o   VERSCOMPARE(NO) and                  * 00993600
*                                LISTTYPE(NAMELIST) are specified.    * 00993700
*                                                                     * 00993800
*                            o   VERSCOMPARE(YES) and                 * 00993900
*                                LISTTYPE(NAMELIST) are specified.    * 00994000
*                                                                     * 00994100
*                                                                     * 00994200
*                                                                     * 00994300
*                  12-BYTE   Any one of the following conditions:     * 00994400
*                                                                     * 00994500
*                                                                     * 00994600
*                            o   VERSCOMPARE(NO) and LISTTYPE(IDLIST) * 00994700
*                                are specified.                       * 00994800
*                                                                     * 00994900
*                            o   VERSCOMPARE(YES) and                 * 00995000
*                                LISTTYPE(IDLIST) are specified.      * 00995100
*                                                                     * 00995200
*                                                                     * 00995300
*                                                                     * 00995400
*                  64-BYTE   VERSCOMPARE(BYENTRY) is specified.       * 00995500
*                                                                     * 00995600
*                                                                     * 00995700
*                                                                     * 00995800
*                                                                     * 00995900
*                  ÝPAGEABLE=»YES!NOº¨                                * 00996000
*                      is an optional keyword input that specifies    * 00996100
*                      whether or not the storage area specified by   * 00996200
*                      BUFFER resides in pageable storage.            * 00996300
*                                                                     * 00996400
*                      DEFAULT: YES                                   * 00996500
*                                                                     * 00996600
*                                                                     * 00996700
*                      ÝPAGEABLE=YES                                  * 00996800
*                          Indicates that the BUFFER area resides in  * 00996900
*                          pageable virtual storage.                  * 00997000
*                                                                     * 00997100
*                          This includes disabled reference storage,  * 00997200
*                          and may include storage that has the       * 00997300
*                          potential to become pageable It does not   * 00997400
*                          include implicitly non-pageable storage    * 00997500
*                          (such as is obtained from non-pageable     * 00997600
*                          subpools).                                 * 00997700
*                                                                     * 00997800
*                                                                     * 00997900
*                                                                     * 00998000
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00998100
*                              is the name (RS-type), or address in   * 00998200
*                              register (2)-(12), of an optional 8    * 00998300
*                              bit input containing the storage key   * 00998400
*                              to be used when referencing the        * 00998500
*                              storage area specified by BUFFER.      * 00998600
*                                                                     * 00998700
*                              The high order nibble contains the     * 00998800
*                              storage key, the low order nibble is   * 00998900
*                              ignored.  For example, set 'kkkk' in   * 00999000
*                              the binary bit string 'kkkkxxxx'B to   * 00999100
*                              correspond to the desired storage key. * 00999200
*                                                                     * 00999300
*                              If BUFSTGKEY is not specified, then    * 00999400
*                              all references to the BUFFER buffer    * 00999500
*                              storage are performed using the        * 00999600
*                              caller's PSW key.                      * 00999700
*                                                                     * 00999800
*                              DEFAULT: CALLERS_KEY                   * 00999900
*                                                                     * 01000000
*                                                                     * 01000100
*                                                                     * 01000200
*                      ÝPAGEABLE=NO¨                                  * 01000300
*                          Indicates that the BUFFER area resides in  * 01000400
*                          non-pageable virtual storage.              * 01000500
*                                                                     * 01000600
*                          This includes implicitly non-pageable      * 01000700
*                          storage areas.  If the virtual storage may * 01000800
*                          potentially become pageable, then the      * 01000900
*                          invoker is responsible for ensuring the    * 01001000
*                          virtual storage remains non-pageable for   * 01001100
*                          the duration of the request.               * 01001200
*                                                                     * 01001300
*                          If MODE=ASYNCTOKEN is specified or         * 01001400
*                          MODE=SYNCTOKEN is specified and the        * 01001500
*                          request does not complete synchronously,   * 01001600
*                          then the storage must remain non-pageable  * 01001700
*                          until completion of the corresponding      * 01001800
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 01001900
*                          specified or MODE=SYNCEXIT is specified    * 01002000
*                          and the request does not complete          * 01002100
*                          synchronously, then the storage must       * 01002200
*                          remain non-pageable until the completion   * 01002300
*                          exit is driven for the request.  If        * 01002400
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 01002500
*                          is specified and the request does not      * 01002600
*                          complete synchronously, then the storage   * 01002700
*                          must remain non-pageable until the         * 01002800
*                          specified ECB is posted for the request.   * 01002900
*                                                                     * 01003000
*                                                                     * 01003100
*                                                                     * 01003200
*                                                                     * 01003300
*                                                                     * 01003400
*                                                                     * 01003500
*                  BUFSIZE=xbufsize                                   * 01003600
*                      is the name (RS-type), or address in register  * 01003700
*                      (2)-(12), of a required fullword input         * 01003800
*                      specifying the length of the virtual storage   * 01003900
*                      area specified for BUFFER in bytes.            * 01004000
*                                                                     * 01004100
*                                                                     * 01004200
*                                                                     * 01004300
*                                                                     * 01004400
*                                                                     * 01004500
*                                                                     * 01004600
*              End of a set of mutually exclusive required keys.      * 01004700
*                                                                     * 01004800
*                                                                     * 01004900
*                                                                     * 01005000
*                                                                     * 01005100
*                                                                     * 01005200
*                                                                     * 01005300
*                                                                     * 01005400
*      ÝLOCKINDEX=»xlockindex!NO_LOCKINDEXº                           * 01005500
*          is the name (RS-type), or address in register (2)-(12), of * 01005600
*          an optional fullword input that contains the index of the  * 01005700
*          lock to be operated on within the lock table for the list  * 01005800
*          structure.                                                 * 01005900
*                                                                     * 01006000
*          When specified, the designated lock will be operated on as * 01006100
*          specified by the LOCKOPER keyword.  The specified value    * 01006200
*          must fall within the range 0 to the number of lock table   * 01006300
*          entries minus one, inclusive.                              * 01006400
*                                                                     * 01006500
*          It is mutually exclusive with MODE=ASYNCNORESPONSE.        * 01006600
*                                                                     * 01006700
*          DEFAULT: NO_LOCKINDEX                                      * 01006800
*                                                                     * 01006900
*                                                                     * 01007000
*          LOCKOPER=»NOTHELD!HELDBYº                                  * 01007100
*              is a required keyword input that specifies the type of * 01007200
*              operation to be performed on the specified lock.       * 01007300
*                                                                     * 01007400
*                                                                     * 01007500
*                                                                     * 01007600
*              LOCKOPER=NOTHELD                                       * 01007700
*                  Requests that the state of the lock be such that   * 01007800
*                  the lock is not held for the duration of the       * 01007900
*                  requested list entry operation.  The lock state    * 01008000
*                  remains unchanged as a result of this option.      * 01008100
*                                                                     * 01008200
*                  When NOTHELD is specified the locking operation is * 01008300
*                  always considered to be a conditional operation.   * 01008400
*                  That is, if the specified lock is held then the    * 01008500
*                  entire IXLLSTM operation will be terminated with   * 01008600
*                  no resultant change to the structure, and          * 01008700
*                  appropriate return and reason codes are provided   * 01008800
*                  in the ANSAREA.                                    * 01008900
*                                                                     * 01009000
*              LOCKOPER=HELDBY                                        * 01009100
*                  When LOCKCOMP is not specified, requests that the  * 01009200
*                  list operation only be performed if the lock is    * 01009300
*                  currently held by the connection specified by      * 01009400
*                  CONTOKEN.                                          * 01009500
*                                                                     * 01009600
*                  When LOCKCOMP is specified, requests that the list * 01009700
*                  operation only be performed if the lock is         * 01009800
*                  currently held by the connection specified by      * 01009900
*                  LOCKCOMP.                                          * 01010000
*                                                                     * 01010100
*                                                                     * 01010200
*                  ÝLOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨¨                * 01010300
*                      is the name (RS-type), or address in register  * 01010400
*                      (2)-(12), of an optional byte input field      * 01010500
*                      containing a connection identifier to be       * 01010600
*                      verified as the current lock owner as a        * 01010700
*                      prerequisite to successful completion of this  * 01010800
*                      request.                                       * 01010900
*                                                                     * 01011000
*                      When LOCKCOMP is specified the locking         * 01011100
*                      operation is always considered to be a         * 01011200
*                      conditional operation.  That is, if the        * 01011300
*                      request experiences lock contention the        * 01011400
*                      request will be terminated with no resultant   * 01011500
*                      change to the structure, and appropriate       * 01011600
*                      return and reason codes are provided in the    * 01011700
*                      ANSAREA.  The connection identifier is         * 01011800
*                      available from the IXLCONN answer area.        * 01011900
*                      DEFAULT: NO_LOCKCOMP                           * 01012000
*                                                                     * 01012100
*                                                                     * 01012200
*                                                                     * 01012300
*                                                                     * 01012400
*                                                                     * 01012500
*                                                                     * 01012600
*                                                                     * 01012700
*                                                                     * 01012800
*                                                                     * 01012900
*                                                                     * 01013000
*      ÝMODE=»SYNCSUSPEND!SYNCECB!SYNCEXIT!SYNCTOKEN!ASYNCECB!ASYNCEX * 01013100
*          IT!ASYNCTOKEN!ASYNCNORESPONSEº¨                            * 01013200
*          is an optional keyword input that specifies whether the    * 01013300
*          request is to be performed synchronously or                * 01013400
*          asynchronously.                                            * 01013500
*                                                                     * 01013600
*          DEFAULT: SYNCSUSPEND                                       * 01013700
*                                                                     * 01013800
*                                                                     * 01013900
*          ÝMODE=SYNCSUSPEND                                          * 01014000
*              Indicates that the request will be performed           * 01014100
*              synchronously.  Control is not returned to the caller  * 01014200
*              until request processing is complete and the final     * 01014300
*              disposition determined.                                * 01014400
*                                                                     * 01014500
*              If necessary the caller will be suspended until the    * 01014600
*              request completes.  The caller must be executing in an * 01014700
*              enabled state to use this option.                      * 01014800
*                                                                     * 01014900
*                                                                     * 01015000
*              ANSAREA=xansarea                                       * 01015100
*                  is a required input.  It is the name (RS-type), or * 01015200
*                  address in register (2)-(12), of a virtual storage * 01015300
*                  area in which command response information will be * 01015400
*                  placed.  The format of the answer area is          * 01015500
*                  described by the IXLYLAA mapping macro.            * 01015600
*                                                                     * 01015700
*                  Not all fields in the answer area are applicable   * 01015800
*                  to all request types.  Request type descriptions   * 01015900
*                  indicate what answer area fields are applicable    * 01016000
*                  for successful request completion cases.  Return   * 01016100
*                  and reason code descriptions indicate what answer  * 01016200
*                  area fields are applicable for non-successfully    * 01016300
*                  completing requests.                               * 01016400
*                                                                     * 01016500
*                                                                     * 01016600
*                  ANSLEN=xanslen¨                                    * 01016700
*                      is the name (RS-type), or address in register  * 01016800
*                      (2)-(12), of a required halfword input that    * 01016900
*                      contains the length in bytes of the virtual    * 01017000
*                      storage area provided for ANSAREA.             * 01017100
*                                                                     * 01017200
*                      The length of the answer area is described by  * 01017300
*                      the IXLYLAA mapping macro.                     * 01017400
*                                                                     * 01017500
*                                                                     * 01017600
*                                                                     * 01017700
*                                                                     * 01017800
*                                                                     * 01017900
*          ÝMODE=SYNCECB                                              * 01018000
*              Indicates that the request will be attempted           * 01018100
*              synchronously.  If the request can not be completed    * 01018200
*              synchronously control is returned to the caller prior  * 01018300
*              to completion of the request, and the ECB specified by * 01018400
*              REQECB is posted when the request has completed.       * 01018500
*                                                                     * 01018600
*              When MODE=SYNCECB is specified and the request does    * 01018700
*              not complete synchronously latent XES binds to the     * 01018800
*              storage locations specified by BUFFER, BUFLIST,        * 01018900
*              LISTKEYAREA, ADJAREA, and ANSAREA persist until the    * 01019000
*              REQECB ECB is posted.                                  * 01019100
*                                                                     * 01019200
*                                                                     * 01019300
*              ANSAREA=xansarea                                       * 01019400
*                  is a required input.  It is the name (RS-type), or * 01019500
*                  address in register (2)-(12), of a virtual storage * 01019600
*                  area in which command response information will be * 01019700
*                  placed.  The format of the answer area is          * 01019800
*                  described by the IXLYLAA mapping macro.            * 01019900
*                                                                     * 01020000
*                  Not all fields in the answer area are applicable   * 01020100
*                  to all request types.  Request type descriptions   * 01020200
*                  indicate what answer area fields are applicable    * 01020300
*                  for successful request completion cases.  Return   * 01020400
*                  and reason code descriptions indicate what answer  * 01020500
*                  area fields are applicable for non-successfully    * 01020600
*                  completing requests.                               * 01020700
*                                                                     * 01020800
*                                                                     * 01020900
*                  ANSLEN=xanslen                                     * 01021000
*                      is the name (RS-type), or address in register  * 01021100
*                      (2)-(12), of a required halfword input that    * 01021200
*                      contains the length in bytes of the virtual    * 01021300
*                      storage area provided for ANSAREA.             * 01021400
*                                                                     * 01021500
*                      The length of the answer area is described by  * 01021600
*                      the IXLYLAA mapping macro.                     * 01021700
*                                                                     * 01021800
*                                                                     * 01021900
*                                                                     * 01022000
*                                                                     * 01022100
*                                                                     * 01022200
*                                                                     * 01022300
*              REQECB=xreqecb¨                                        * 01022400
*                  is the name (RS-type), or address in register      * 01022500
*                  (2)-(12), of a required 4 byte input that contains * 01022600
*                  the address of an ECB to be posted when the        * 01022700
*                  request has completed.                             * 01022800
*                                                                     * 01022900
*                  The ECB should be initialized by the requestor     * 01023000
*                  prior to use of this service.  The ECB must reside * 01023100
*                  either in common storage or in the home address    * 01023200
*                  space that existed at the time the connection      * 01023300
*                  service, IXLCONN, was issued for the structure.    * 01023400
*                  Any task which waits on the ECB must have the same * 01023500
*                  home address space as existed when IXLCONN was     * 01023600
*                  issued.                                            * 01023700
*                                                                     * 01023800
*                                                                     * 01023900
*                                                                     * 01024000
*          ÝMODE=SYNCEXIT                                             * 01024100
*              Indicates that the request will be attempted           * 01024200
*              synchronously.  If the request can not be completed    * 01024300
*              synchronously control is returned to the caller prior  * 01024400
*              to completion of the request.  When the request        * 01024500
*              completes the connection's Complete Exit will be       * 01024600
*              called.                                                * 01024700
*                                                                     * 01024800
*              When the request does not complete synchronously       * 01024900
*              latent XES binds to the storage locations specified by * 01025000
*              BUFFER, BUFLIST, ADJAREA, LISTKEYAREA, and ANSAREA     * 01025100
*              persist until the connection's Complete Exit is        * 01025200
*              called.                                                * 01025300
*                                                                     * 01025400
*                                                                     * 01025500
*              ANSAREA=xansarea                                       * 01025600
*                  is a required input.  It is the name (RS-type), or * 01025700
*                  address in register (2)-(12), of a virtual storage * 01025800
*                  area in which command response information will be * 01025900
*                  placed.  The format of the answer area is          * 01026000
*                  described by the IXLYLAA mapping macro.            * 01026100
*                                                                     * 01026200
*                  Not all fields in the answer area are applicable   * 01026300
*                  to all request types.  Request type descriptions   * 01026400
*                  indicate what answer area fields are applicable    * 01026500
*                  for successful request completion cases.  Return   * 01026600
*                  and reason code descriptions indicate what answer  * 01026700
*                  area fields are applicable for non-successfully    * 01026800
*                  completing requests.                               * 01026900
*                                                                     * 01027000
*                                                                     * 01027100
*                  ANSLEN=xanslen                                     * 01027200
*                      is the name (RS-type), or address in register  * 01027300
*                      (2)-(12), of a required halfword input that    * 01027400
*                      contains the length in bytes of the virtual    * 01027500
*                      storage area provided for ANSAREA.             * 01027600
*                                                                     * 01027700
*                      The length of the answer area is described by  * 01027800
*                      the IXLYLAA mapping macro.                     * 01027900
*                                                                     * 01028000
*                                                                     * 01028100
*                                                                     * 01028200
*                                                                     * 01028300
*                                                                     * 01028400
*                                                                     * 01028500
*              ÝREQDATA=»xreqdata!NO_REQDATAº¨¨                       * 01028600
*                  is the name (RS-type), or address in register      * 01028700
*                  (2)-(12), of an optional 8 character input         * 01028800
*                  variable that contains connected user-defined data * 01028900
*                  for the request to be passed to the Complete Exit  * 01029000
*                  when driven.  The contents of REQDATA only has     * 01029100
*                  meaning to the application.                        * 01029200
*                                                                     * 01029300
*                  DEFAULT: NO_REQDATA                                * 01029400
*                                                                     * 01029500
*                                                                     * 01029600
*                                                                     * 01029700
*          ÝMODE=SYNCTOKEN                                            * 01029800
*              Indicates that the request will be attempted           * 01029900
*              synchronously.  If the request can not be completed    * 01030000
*              synchronously control is returned to the caller prior  * 01030100
*              to completion of the request and a token that uniquely * 01030200
*              identifies the request is returned.                    * 01030300
*                                                                     * 01030400
*              When the request does not complete synchronously       * 01030500
*              latent XES binds to the storage locations specified by * 01030600
*              BUFFER, BUFLIST, ADJAREA, LISTKEYAREA, and ANSAREA     * 01030700
*              persist until a subsequent corresponding IXLFCOMP      * 01030800
*              request indicates completion of the original request.  * 01030900
*                                                                     * 01031000
*                                                                     * 01031100
*              ANSAREA=xansarea                                       * 01031200
*                  is a required input.  It is the name (RS-type), or * 01031300
*                  address in register (2)-(12), of a virtual storage * 01031400
*                  area in which command response information will be * 01031500
*                  placed.  The format of the answer area is          * 01031600
*                  described by the IXLYLAA mapping macro.  Not all   * 01031700
*                  fields in the answer area are applicable to all    * 01031800
*                  request types.  Request type descriptions indicate * 01031900
*                  what answer area fields are applicable for         * 01032000
*                  successful request completion cases.  Return and   * 01032100
*                  reason code descriptions indicate what answer area * 01032200
*                  fields are applicable for non-successfully         * 01032300
*                  completing requests.                               * 01032400
*                                                                     * 01032500
*                                                                     * 01032600
*                  ANSLEN=xanslen                                     * 01032700
*                      is the name (RS-type), or address in register  * 01032800
*                      (2)-(12), of a required halfword input that    * 01032900
*                      contains the length in bytes of the virtual    * 01033000
*                      storage area provided for ANSAREA.             * 01033100
*                                                                     * 01033200
*                      The length of the answer area is described by  * 01033300
*                      the IXLYLAA mapping macro.                     * 01033400
*                                                                     * 01033500
*                                                                     * 01033600
*                                                                     * 01033700
*                                                                     * 01033800
*                                                                     * 01033900
*                                                                     * 01034000
*              REQTOKEN=xreqtoken¨                                    * 01034100
*                  is a required output.  It is the name (RS-type),   * 01034200
*                  or address in register (2)-(12), of a 16 character * 01034300
*                  field into which is stored a token that uniquely   * 01034400
*                  identifies this request.                           * 01034500
*                                                                     * 01034600
*                  This token must be specified on a subsequent       * 01034700
*                  invocation of IXLFCOMP to force completion of the  * 01034800
*                  request and determine its final disposition.       * 01034900
*                                                                     * 01035000
*                                                                     * 01035100
*                                                                     * 01035200
*          ÝMODE=ASYNCECB                                             * 01035300
*              Indicates that the request is to be initiated and      * 01035400
*              control is to be returned to the caller prior to       * 01035500
*              completion of the request.  When the request completes * 01035600
*              the ECB specified by REQECB will be posted.            * 01035700
*                                                                     * 01035800
*              The latent XES binds to the storage locations          * 01035900
*              specified by BUFFER, BUFLIST, LISTKEYAREA, ADJAREA,    * 01036000
*              and ANSAREA persist until the REQECB ECB is posted.    * 01036100
*                                                                     * 01036200
*                                                                     * 01036300
*              ANSAREA=xansarea                                       * 01036400
*                  is a required input.  It is the name (RS-type), or * 01036500
*                  address in register (2)-(12), of a virtual storage * 01036600
*                  area, called the answer area, in which command     * 01036700
*                  response information will be placed.  The format   * 01036800
*                  of the answer area is described by the IXLYLAA     * 01036900
*                  mapping macro.  Not all fields in the answer area  * 01037000
*                  are applicable to all request types.  Request type * 01037100
*                  descriptions indicate what answer area fields are  * 01037200
*                  applicable for successful request completion       * 01037300
*                  cases.  Return and reason code descriptions        * 01037400
*                  indicate what answer area fields are applicable    * 01037500
*                  for non-successfully completing requests.          * 01037600
*                                                                     * 01037700
*                                                                     * 01037800
*                  ANSLEN=xanslen                                     * 01037900
*                      is the name (RS-type), or address in register  * 01038000
*                      (2)-(12), of a required halfword input that    * 01038100
*                      contains the length in bytes of the virtual    * 01038200
*                      storage area provided for ANSAREA.             * 01038300
*                                                                     * 01038400
*                      The length of the answer area is described by  * 01038500
*                      the IXLYLAA mapping macro.                     * 01038600
*                                                                     * 01038700
*                                                                     * 01038800
*                                                                     * 01038900
*                                                                     * 01039000
*                                                                     * 01039100
*                                                                     * 01039200
*              REQECB=xreqecb¨                                        * 01039300
*                  is the name (RS-type), or address in register      * 01039400
*                  (2)-(12), of a required 4 byte input that contains * 01039500
*                  the address of an ECB to be posted when the        * 01039600
*                  request has completed.                             * 01039700
*                                                                     * 01039800
*                  The ECB should be initialized by the requestor     * 01039900
*                  prior to use with this service.  The ECB must      * 01040000
*                  reside either in common storage or in the home     * 01040100
*                  address space that existed at the time the         * 01040200
*                  connection service, IXLCONN, was issued for the    * 01040300
*                  structure.  Any task which waits on the ECB must   * 01040400
*                  have the same home address space as existed when   * 01040500
*                  IXLCONN was issued.                                * 01040600
*                                                                     * 01040700
*                                                                     * 01040800
*                                                                     * 01040900
*          ÝMODE=ASYNCEXIT                                            * 01041000
*              Indicates that the request is to be initiated and      * 01041100
*              control is to be returned to the caller prior to       * 01041200
*              completion of the request.  When the request completes * 01041300
*              the connection's Complete Exit will be called.         * 01041400
*                                                                     * 01041500
*              The latent XES binds to the storage locations          * 01041600
*              specified by BUFFER, BUFLIST, LISTKEYAREA, ADJAREA,    * 01041700
*              and ANSAREA persist until the connection's Complete    * 01041800
*              Exit is called.                                        * 01041900
*                                                                     * 01042000
*                                                                     * 01042100
*              ANSAREA=xansarea                                       * 01042200
*                  is a required input.  It is the name (RS-type), or * 01042300
*                  address in register (2)-(12), of a virtual storage * 01042400
*                  area, called the answer area, in which command     * 01042500
*                  response information will be placed.  The format   * 01042600
*                  of the answer area is described by the IXLYLAA     * 01042700
*                  mapping macro.  Not all fields in the answer area  * 01042800
*                  are applicable to all request types.  Request type * 01042900
*                  descriptions indicate what answer area fields are  * 01043000
*                  applicable for successful request completion       * 01043100
*                  cases.  Return and reason code descriptions        * 01043200
*                  indicate what answer area fields are applicable    * 01043300
*                  for non-successfully completing requests.          * 01043400
*                                                                     * 01043500
*                                                                     * 01043600
*                  ANSLEN=xanslen                                     * 01043700
*                      is the name (RS-type), or address in register  * 01043800
*                      (2)-(12), of a required halfword input that    * 01043900
*                      contains the length in bytes of the virtual    * 01044000
*                      storage area provided for ANSAREA.             * 01044100
*                                                                     * 01044200
*                      The length of the answer area is described by  * 01044300
*                      the IXLYLAA mapping macro.                     * 01044400
*                                                                     * 01044500
*                                                                     * 01044600
*                                                                     * 01044700
*                                                                     * 01044800
*                                                                     * 01044900
*                                                                     * 01045000
*              ÝREQDATA=»xreqdata!NO_REQDATAº¨¨                       * 01045100
*                  is the name (RS-type), or address in register      * 01045200
*                  (2)-(12), of an optional 8 character input         * 01045300
*                  variable that contains connected user-defined data * 01045400
*                  for the request to be passed to the Complete Exit  * 01045500
*                  when driven.  The contents of REQDATA only has     * 01045600
*                  meaning to the application.                        * 01045700
*                                                                     * 01045800
*                  DEFAULT: NO_REQDATA                                * 01045900
*                                                                     * 01046000
*                                                                     * 01046100
*                                                                     * 01046200
*          ÝMODE=ASYNCTOKEN                                           * 01046300
*              Indicates that the request is to be initiated, a token * 01046400
*              generated that uniquely identifies the request on this * 01046500
*              system, and control returned to the caller prior to    * 01046600
*              completion of the requested operation.                 * 01046700
*                                                                     * 01046800
*              The latent XES binds to the storage locations          * 01046900
*              specified by BUFFER, BUFLIST, LISTKEYAREA, ADJAREA,    * 01047000
*              and ANSAREA persist until a subsequent corresponding   * 01047100
*              IXLFCOMP request indicates completion of the original  * 01047200
*              request.                                               * 01047300
*                                                                     * 01047400
*                                                                     * 01047500
*              ANSAREA=xansarea                                       * 01047600
*                  is a required input.  It is the name (RS-type), or * 01047700
*                  address in register (2)-(12), of a virtual storage * 01047800
*                  area in which command response information will be * 01047900
*                  placed.  The format of the answer area is          * 01048000
*                  described by the IXLYLAA mapping macro.  Not all   * 01048100
*                  fields in the answer area are applicable to all    * 01048200
*                  request types.  Request type descriptions indicate * 01048300
*                  what answer area fields are applicable for         * 01048400
*                  successful request completion cases.  Return and   * 01048500
*                  reason code descriptions indicate what answer area * 01048600
*                  fields are applicable for non-successfully         * 01048700
*                  completing requests.                               * 01048800
*                                                                     * 01048900
*                                                                     * 01049000
*                  ANSLEN=xanslen                                     * 01049100
*                      is the name (RS-type), or address in register  * 01049200
*                      (2)-(12), of a required halfword input that    * 01049300
*                      contains the length in bytes of the virtual    * 01049400
*                      storage area provided for ANSAREA.             * 01049500
*                                                                     * 01049600
*                      The length of the answer area is described by  * 01049700
*                      the IXLYLAA mapping macro.                     * 01049800
*                                                                     * 01049900
*                                                                     * 01050000
*                                                                     * 01050100
*                                                                     * 01050200
*                                                                     * 01050300
*                                                                     * 01050400
*              REQTOKEN=xreqtoken¨                                    * 01050500
*                  is a required output.  It is the name (RS-type),   * 01050600
*                  or address in register (2)-(12), of a 16 character * 01050700
*                  field into which is stored a token that uniquely   * 01050800
*                  identifies this request.                           * 01050900
*                                                                     * 01051000
*                  This token must be specified on a subsequent       * 01051100
*                  invocation of IXLFCOMP to force completion of the  * 01051200
*                  request and determine its final disposition.       * 01051300
*                                                                     * 01051400
*                                                                     * 01051500
*                                                                     * 01051600
*          ÝMODE=ASYNCNORESPONSE¨                                     * 01051700
*              Indicates that the request is to be initiated and      * 01051800
*              control returned to the caller prior to completion of  * 01051900
*              the requested operation.  No asynchronous request      * 01052000
*              token is returned, hence no external mechanism exists  * 01052100
*              to force completion of the request.                    * 01052200
*                                                                     * 01052300
*              MODE=ASYNCNORESPONSE is mutually exclusive with        * 01052400
*              LOCKINDEX, BUFFER, and BUFLIST.  Any request which     * 01052500
*              does not perform a locking operation and does not use  * 01052600
*              a BUFFER area or BUFLIST buffers may specifiy          * 01052700
*              MODE=ASYNCNORESPONSE.                                  * 01052800
*                                                                     * 01052900
*                                                                     * 01053000
*                                                                     * 01053100
*                                                                     * 01053200
*                                                                     * 01053300
*                                                                     * 01053400
*      ÝRETCODE=xretcode¨                                             * 01053500
*          is the name (RS-type) of an optional fullword output       * 01053600
*          variable, or register (2)-(12) or (15), into which the     * 01053700
*          return code is to be copied from GPR 15.  If you specify   * 01053800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 01053900
*          the value will be left in GPR 15.                          * 01054000
*                                                                     * 01054100
*                                                                     * 01054200
*                                                                     * 01054300
*                                                                     * 01054400
*      ÝRSNCODE=xrsncode¨                                             * 01054500
*          is the name (RS-type) of an optional fullword output       * 01054600
*          variable into which the reason code is to be copied from   * 01054700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 01054800
*          R0 (within or without parentheses), the value will be left * 01054900
*          in GPR 0.                                                  * 01055000
*                                                                     * 01055100
*                                                                     * 01055200
*                                                                     * 01055300
*                                                                     * 01055400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 01055500
*          is an optional byte input decimal value in the "0-4" range * 01055600
*          that specifies the macro version.  PLISTVER is the only    * 01055700
*          key allowed on the list form of MF and determines which    * 01055800
*          parameter list is generated.  The macro keys associated    * 01055900
*          with each supported version of the macro are listed in     * 01056000
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 01056100
*          instead of a number, and the parameter list will be of the * 01056200
*          largest size currently supported. This size may grow from  * 01056300
*          release to release (thus possibly affecting the amount of  * 01056400
*          storage needed by your program).  If your program can      * 01056500
*          tolerate this, IBM recommends that you always specify MAX  * 01056600
*          when creating the list form parameter list as that will    * 01056700
*          ensure that the list form parameter list is always long    * 01056800
*          enough to hold whatever parameters might be specified on   * 01056900
*          the execute form.                                          * 01057000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 01057100
*          default is the lowest version which allows all of the      * 01057200
*          parameters specified on the invocation to be processed.    * 01057300
*                                                                     * 01057400
*                                                                     * 01057500
*                                                                     * 01057600
*                                                                     * 01057700
*      ÝMF=»S!L!Eº¨                                                   * 01057800
*          is an optional keyword input which specifies the macro     * 01057900
*          form.                                                      * 01058000
*          DEFAULT: S                                                 * 01058100
*                                                                     * 01058200
*                                                                     * 01058300
*          ÝMF=S¨                                                     * 01058400
*              specifies the standard form of the macro.  The "S"     * 01058500
*              form generates code to put the parameters into an      * 01058600
*              in-line parameter list and invoke the desired service. * 01058700
*              Full checking for required macro keys is done along    * 01058800
*              with supplying defaults for omitted optional           * 01058900
*              parameters.                                            * 01059000
*                                                                     * 01059100
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 01059200
*              specifies the list form of the macro.  The "L" form    * 01059300
*              defines an area to be used for the parameter list.     * 01059400
*              Only the PLISTVER key may be specified on the          * 01059500
*              invocation.  All other macro parameters are flagged as * 01059600
*              errors.  If PLISTVER is not specified, the original    * 01059700
*              parameter list definition is used.                     * 01059800
*                                                                     * 01059900
*            ,xmfctrl                                                 * 01060000
*              is a required input.  It is the name of a storage area * 01060100
*              for the parameter list.                                * 01060200
*                                                                     * 01060300
*            »,xmfattr!0Dº                                            * 01060400
*              is an optional 60 character input string that varies   * 01060500
*              from 1 to 60 characters. Use it to force boundary      * 01060600
*              alignment of the parameter list. Use only 0F or 0D.    * 01060700
*              DEFAULT: 0D which forces the parameter list to a       * 01060800
*              doubleword boundary.                                   * 01060900
*                                                                     * 01061000
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 01061100
*              specifies the execute form of the macro.  The "E" form * 01061200
*              generates code to put the parameters into the          * 01061300
*              parameter list specified by xmfctrl and provides full  * 01061400
*              syntax checking with default setting.                  * 01061500
*                                                                     * 01061600
*            ,xmfctrl                                                 * 01061700
*              is a required input.  It is the name (RS-type), or     * 01061800
*              address in register (1)-(12), of a storage area for    * 01061900
*              the parameter list.                                    * 01062000
*                                                                     * 01062100
*            »,COMPLETEº                                              * 01062200
*              is an optional keyword input which specifies the       * 01062300
*              degree of macro parameter syntax checking.             * 01062400
*              DEFAULT: COMPLETE                                      * 01062500
*                                                                     * 01062600
*                                                                     * 01062700
*              COMPLETE                                               * 01062800
*                  Checking for required macro keys is done and       * 01062900
*                  defaults are supplied for omitted optional         * 01063000
*                  parameters.                                        * 01063100
*                                                                     * 01063200
*                                                                     * 01063300
*                                                                     * 01063400
*                                                                     * 01063500
*                                                                     * 01063600
*                                                                     * 01063700
*                                                                     * 01063800
*01* RETURN CODES:                                                    * 01063900
*                                                                     * 01064000
*                                                                     * 01064100
*       0         IxlRetCodeOk:  Successful completion.               * 01064200
*                                                                     * 01064300
*                 If a MODE value of ASYNCECB, ASYNCEXIT, ASYNCTOKEN, * 01064400
*                 or ASYNCNORESPONSE was specified then the request   * 01064500
*                 has been successfully initiated.                    * 01064600
*                                                                     * 01064700
*                                                                     * 01064800
*       4         IxlRetCodeWarning:  Warning.  The request           * 01064900
*                 completed, but with exceptional circumstances.      * 01065000
*                                                                     * 01065100
*                 HEX REASON  MEANING                                 * 01065200
*                 CODE                                                * 01065300
*                                                                     * 01065400
*                                                                     * 01065500
*                 xxxx0402    IxlRsnCodeAsynch:  The request could    * 01065600
*                             not be completed synchronously.  It     * 01065700
*                             will be completed asynchronously.       * 01065800
*                                                                     * 01065900
*                             If MODE=SYNCECB was specified the ECB   * 01066000
*                             specifed for REQECB will be posted when * 01066100
*                             the request has finished.               * 01066200
*                                                                     * 01066300
*                             If MODE=SYNCEXIT was specified the      * 01066400
*                             connection's completion exit will be    * 01066500
*                             given control when the request has      * 01066600
*                             finished.                               * 01066700
*                                                                     * 01066800
*                             If MODE=SYNCTOKEN was specified the     * 01066900
*                             answer area contains an asynchronous    * 01067000
*                             request token which may be used on the  * 01067100
*                             IXLFCOMP macro to determine when the    * 01067200
*                             request has finished.                   * 01067300
*                                                                     * 01067400
*                 xxxx0409    IxlRsnCodeTimeout:  A READ_LIST,        * 01067500
*                             DELETE_LIST, READ_MULT, DELETE_MULT,    * 01067600
*                             DELETE_ENTRYLIST or MOVE_ENTRYLIST      * 01067700
*                             request has completed prematurely due   * 01067800
*                             to a model-dependent timeout condition. * 01067900
*                                                                     * 01068000
*                             For READ_LIST and READ_MULT, the number * 01068100
*                             of output elements returned in the      * 01068200
*                             BUFFER area or BUFLIST buffers for the  * 01068300
*                             current request has been returned in    * 01068400
*                             the answer area.                        * 01068500
*                                                                     * 01068600
*                             For DELETE_MULT, DELETE_LIST and        * 01068700
*                             DELETE_ENTRYLIST, the number of deleted * 01068800
*                             structure entries for the current       * 01068900
*                             request has been returned in the answer * 01069000
*                             area.                                   * 01069100
*                                                                     * 01069200
*                             For both READ_MULT and DELETE_MULT, a   * 01069300
*                             restart token or an extended restart    * 01069400
*                             token has been returned in the answer   * 01069500
*                             area.                                   * 01069600
*                                                                     * 01069700
*                             For READ_LIST and DELETE_LIST, the list * 01069800
*                             entry controls for the first            * 01069900
*                             appropriate unprocessed entry in the    * 01070000
*                             list sequence has been returned in the  * 01070100
*                             answer area.                            * 01070200
*                                                                     * 01070300
*                             For DELETE_ENTRYLIST and                * 01070400
*                             MOVE_ENTRYLIST, the index of the first  * 01070500
*                             unprocessed entry identifier or name    * 01070600
*                             has been returned in the answer area.   * 01070700
*                                                                     * 01070800
*                             See the usage notes in the individual   * 01070900
*                             request types for additional            * 01071000
*                             information about how to initiate a     * 01071100
*                             "resuming" operation to continue the    * 01071200
*                             scan process to completion.             * 01071300
*                                                                     * 01071400
*                 xxxx040D    IxlRsnCodeBadReadAdjData:  A READ_LIST, * 01071500
*                             or READ_MULT specified that adjunct     * 01071600
*                             data was to be read, but the storage    * 01071700
*                             area provided for ADJDATA is not        * 01071800
*                             addressable.  All other requested data  * 01071900
*                             was retrieved.  If supported and        * 01072000
*                             requested, the entry data was           * 01072100
*                             retrieved.                              * 01072200
*                                                                     * 01072300
*                 xxxx040F    IxlRsnCodeBufferFull:  A READ_LIST or   * 01072400
*                             READ_MULT request has completed         * 01072500
*                             prematurely due to a buffer full        * 01072600
*                             condition.                              * 01072700
*                                                                     * 01072800
*                             For both READ_LIST and READ_MULT, the   * 01072900
*                             number of output elements returned in   * 01073000
*                             the BUFFER area or BUFLIST buffers for  * 01073100
*                             the current request has been returned   * 01073200
*                             in the answer area.                     * 01073300
*                                                                     * 01073400
*                             For READ_MULT a restart token or an     * 01073500
*                             extended restart token has been         * 01073600
*                             returned in the answer area.            * 01073700
*                                                                     * 01073800
*                             For READ_LIST, the list entry controls  * 01073900
*                             for the first unprocessed entry in the  * 01074000
*                             list sequence has been returned in the  * 01074100
*                             answer area.                            * 01074200
*                                                                     * 01074300
*                             See the usage notes in the individual   * 01074400
*                             request types for additional            * 01074500
*                             information about how to initiate a     * 01074600
*                             "resuming" operation to continue the    * 01074700
*                             scan process to completion.             * 01074800
*                                                                     * 01074900
*                 xxxx0410    IxlRsnCodeLockCond:  For a              * 01075000
*                             LOCKOPER=HELDBY request, or a request   * 01075100
*                             that specified LOCKCOMP, the request    * 01075200
*                             could not be completed successfully     * 01075300
*                             because the specified lock is not       * 01075400
*                             currently held as required.  The        * 01075500
*                             connection ID of the lock owner is      * 01075600
*                             returned in the answer area.            * 01075700
*                                                                     * 01075800
*                 xxxx0412    IxlRsnCodeLockHeldBySys:  For a         * 01075900
*                             LOCKOPER=HELDBY request, the request    * 01076000
*                             could not be completed successfully     * 01076100
*                             because the specified lock is not       * 01076200
*                             currently held as required.             * 01076300
*                                                                     * 01076400
*                                                                     * 01076500
*                                                                     * 01076600
*                                                                     * 01076700
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 01076800
*                 completed due to a user error.                      * 01076900
*                                                                     * 01077000
*                 HEX REASON  MEANING                                 * 01077100
*                 CODE                                                * 01077200
*                                                                     * 01077300
*                                                                     * 01077400
*                 xxxx0801    IxlRsnCodeBadParmlist:  Either unable   * 01077500
*                             to read or unable to write to the       * 01077600
*                             IXLLSTM parameter list.                 * 01077700
*                                                                     * 01077800
*                 xxxx0804    IxlRsnCodeBadVersionNum:  The version   * 01077900
*                             number in the parameter list is not     * 01078000
*                             valid.  This usually indicates that the * 01078100
*                             level of the macro is incompatible with * 01078200
*                             the level of the XES service code.      * 01078300
*                                                                     * 01078400
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 01078500
*                             contoken specified.  The contoken is    * 01078600
*                             invalid for one of the following        * 01078700
*                             reasons:  disconnect has occurred, EOT  * 01078800
*                             of the connector's task, input contoken * 01078900
*                             is not the contoken returned from       * 01079000
*                             IXLCONN, the request was issued outside * 01079100
*                             the connector's address space, or the   * 01079200
*                             contoken has been invalidated for       * 01079300
*                             rebuild.                                * 01079400
*                                                                     * 01079500
*                 xxxx0822    IxlRsnCodeBadReadType:  An IXLLSTM      * 01079600
*                             READ_LIST or READ_MULT request          * 01079700
*                             specified that either entry or adjunct  * 01079800
*                             data was to be returned, but the list   * 01079900
*                             structure does not contain the          * 01080000
*                             requested component.  No data is        * 01080100
*                             returned.                               * 01080200
*                                                                     * 01080300
*                 xxxx0824    IxlRsnCodeWrongStrType:  The connection * 01080400
*                             specified by CONTOKEN is not to a list  * 01080500
*                             structure.                              * 01080600
*                                                                     * 01080700
*                 xxxx0825    IxlRsnCodeNoEntry:  The designated list * 01080800
*                             entry or event monitor controls object  * 01080900
*                             does not exist, hence request           * 01081000
*                             processing was suppressed.              * 01081100
*                                                                     * 01081200
*                 xxxx082B    IxlRsnCodeBadIDIndex:  An invalid value * 01081300
*                             was specified for either FIRSTELEM or   * 01081400
*                             LASTELEM.  When FIRSTELEM or LASTELEM   * 01081500
*                             is invalid, the index of the first      * 01081600
*                             entry identifier or name which was not  * 01081700
*                             processed is returned in the answer     * 01081800
*                             area.                                   * 01081900
*                                                                     * 01082000
*                 xxxx0833    IxlRsnCodeBadPgblAttr:  The storage     * 01082100
*                             area specified by BUFFER, or one of the * 01082200
*                             buffers in the BUFLIST list is          * 01082300
*                             specified as being pageable, but is     * 01082400
*                             not.                                    * 01082500
*                                                                     * 01082600
*                 xxxx0834    IxlRsnCodeBadNonPgblAttr:  The storage  * 01082700
*                             area specified by BUFFER, or one of the * 01082800
*                             buffers in the BUFLIST list is          * 01082900
*                             specified as being non-pageable, but is * 01083000
*                             either pageable or not addressable.     * 01083100
*                                                                     * 01083200
*                 xxxx0835    IxlRsnCodeBadDataAddr:  The storage     * 01083300
*                             area specified by BUFFER or one of the  * 01083400
*                             buffers in the BUFLIST list is not      * 01083500
*                             addressable.                            * 01083600
*                                                                     * 01083700
*                 xxxx0836    IxlRsnCodeBadRealAddr:  Real storage    * 01083800
*                             addresses were provided in a BUFLIST    * 01083900
*                             list.  One of the buffers is not        * 01084000
*                             addressable in central storage.         * 01084100
*                                                                     * 01084200
*                 xxxx0838    IxlRsnCodeBadAnsArea:  The storage area * 01084300
*                             specified by ANSAREA and ANSLEN is not  * 01084400
*                             addressable.                            * 01084500
*                                                                     * 01084600
*                 xxxx0839    IxlRsnCodeBadReqTokenArea:  The storage * 01084700
*                             area specified by REQTOKEN is not       * 01084800
*                             addressable.                            * 01084900
*                                                                     * 01085000
*                 xxxx083D    IxlRsnCodeBadAnsLen:  The length of the * 01085100
*                             answer area, as specified by ANSLEN, is * 01085200
*                             not sufficient for providing answer     * 01085300
*                             area information.                       * 01085400
*                                                                     * 01085500
*                 xxxx083E    IxlRsnCodeMaxListKey:  The request      * 01085600
*                             failed while trying to assign the list  * 01085700
*                             key to an entry which was being moved.  * 01085800
*                             Either the list key or the list key     * 01085900
*                             plus the list key increment value is    * 01086000
*                             greater than the maximum list key.      * 01086100
*                                                                     * 01086200
*                 xxxx083F    IxlRsnCodeBadEntryVersion:  The entry   * 01086300
*                             designated by the specified list entry  * 01086400
*                             controls has a version number which     * 01086500
*                             does not meet the criteria specified by * 01086600
*                             VERSCOMP and VERSCOMPTYPE.  The list    * 01086700
*                             entry controls for the entry are        * 01086800
*                             returned in the answer area.            * 01086900
*                                                                     * 01087000
*                 xxxx0840    IxlRsnCodeBadEntryList:  The entry      * 01087100
*                             designated by the specified list entry  * 01087200
*                             controls does not reside on the list    * 01087300
*                             specified by LISTNUM.  The list entry   * 01087400
*                             controls for the entry are returned in  * 01087500
*                             the answer area.                        * 01087600
*                                                                     * 01087700
*                 xxxx0841    IxlRsnCodeBadEntryName:  The name       * 01087800
*                             specified by ENTRYNAME is not a unique  * 01087900
*                             name within the structure, and hence    * 01088000
*                             entry creation was suppressed.          * 01088100
*                                                                     * 01088200
*                 xxxx0842    IxlRsnCodePersistentLock:  A request    * 01088300
*                             specifying a NOTHELD lock operation     * 01088400
*                             failed because the lock was held by a   * 01088500
*                             connection in the failed persistent     * 01088600
*                             state.  The connection ID of the lock   * 01088700
*                             owner is returned in the answer area.   * 01088800
*                                                                     * 01088900
*                 xxxx0843    IxlRsnCodeBadEntryID:  An entry         * 01089000
*                             corresponding to an identifier or name  * 01089100
*                             in either IDLIST or NAMELIST,           * 01089200
*                             respectively, does not exist.  The      * 01089300
*                             index of the offending entry identifier * 01089400
*                             or name was returned in the answer      * 01089500
*                             area.                                   * 01089600
*                                                                     * 01089700
*                 xxxx0845    IxlRsnCodeNoNames:  A list entry was    * 01089800
*                             designated by entry name, but the       * 01089900
*                             structure does not support entry names. * 01090000
*                                                                     * 01090100
*                 xxxx0846    IxlRsnCodeBadLockIndex:  The specified  * 01090200
*                             LOCKINDEX exceeds the size of the lock  * 01090300
*                             table for the structure.                * 01090400
*                                                                     * 01090500
*                 xxxx0847    IxlRsnCodeBadListNumber:  The specified * 01090600
*                             LISTNUM exceeds the number of lists for * 01090700
*                             the structure.                          * 01090800
*                                                                     * 01090900
*                 xxxx0849    IxlRsnCodeBadResToken:  The specified   * 01091000
*                             restart token is not valid.  Possible   * 01091100
*                             causes are:                             * 01091200
*                                                                     * 01091300
*                                                                     * 01091400
*                             o   The specified token does not        * 01091500
*                                 correspond to a previous            * 01091600
*                                 prematurely-completed request.      * 01091700
*                                                                     * 01091800
*                             o   The user specified RESTOKEN when    * 01091900
*                                 EXTRESTOKEN was required.           * 01092000
*                                                                     * 01092100
*                             o   The user specified EXTRESTOKEN when * 01092200
*                                 RESTOKEN was required.              * 01092300
*                                                                     * 01092400
*                                                                     * 01092500
*                                                                     * 01092600
*                 xxxx084A    IxlRsnCodeNoKeys:  The structure does   * 01092700
*                             not support the use of entry keys,  and * 01092800
*                             the request either was a request type   * 01092900
*                             that requires the structure to support  * 01093000
*                             entry keys,  or designated a sublist,   * 01093100
*                             list entry, or list position by list    * 01093200
*                             number and entry key.                   * 01093300
*                                                                     * 01093400
*                 xxxx084B    IxlRsnCodeNoLocks:  A locking operation * 01093500
*                             was requested, but the structure does   * 01093600
*                             not contain a lock table.               * 01093700
*                                                                     * 01093800
*                 xxxx084E    IxlRsnCodeBadMoveToList:  An IXLLSTM    * 01093900
*                             request specified a list number for     * 01094000
*                             MOVETOLIST that exceeds the number of   * 01094100
*                             lists defined for the structure.        * 01094200
*                                                                     * 01094300
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 01094400
*                             specifying MODE=SYNCSUSPEND failed      * 01094500
*                             because the caller is disabled and      * 01094600
*                             cannot be suspended.                    * 01094700
*                                                                     * 01094800
*                 xxxx0854    IxlRsnCodeBadLockComp:  The value       * 01094900
*                             specified for LOCKCOMP is not a valid   * 01095000
*                             connection identifier.                  * 01095100
*                                                                     * 01095200
*                 xxxx0859    IxlRsnCodeBadListAuth:  The authority   * 01095300
*                             value for the specified list does not   * 01095400
*                             meet the criteria specified by AUTHCOMP * 01095500
*                             and AUTHCOMPTYPE.  The current list     * 01095600
*                             authority and description are returned  * 01095700
*                             in the answer area.                     * 01095800
*                                                                     * 01095900
*                 xxxx0864    IxlRsnCodeBadBufSize:  The specified    * 01096000
*                             buffer area is not large enough to      * 01096100
*                             contain the data being read.  For       * 01096200
*                             READ_LIST or a READ_MULT request the    * 01096300
*                             answer area contains the list entry     * 01096400
*                             controls for the first list entry       * 01096500
*                             selected for processing.                * 01096600
*                                                                     * 01096700
*                 xxxx0865    IxlRsnCodeBadBufSpec:  The buffer       * 01096800
*                             specification is in error.  Refer to    * 01096900
*                             the BUFFER or BUFLIST specification     * 01097000
*                             requirements.                           * 01097100
*                                                                     * 01097200
*                 xxxx0866    IxlRsnCodeBadBufKey:  The buffer        * 01097300
*                             storage key is incorrect.  For requests * 01097400
*                             which write CF data the data cannot be  * 01097500
*                             fetched.  For requests which read CF    * 01097600
*                             data the data cannot be stored.         * 01097700
*                                                                     * 01097800
*                 xxxx0867    IxlRsnCodeBadBufList:  The storage area * 01097900
*                             specified by BUFLIST is not             * 01098000
*                             addressable.                            * 01098100
*                                                                     * 01098200
*                 xxxx086A    IxlRsnCodeBadElemNum:  The value        * 01098300
*                             specified for ELEMNUM is not valid.     * 01098400
*                                                                     * 01098500
*                 xxxx0887    IxlRsnCodeBadExtResToken:  The          * 01098600
*                             specified extended restart token is not * 01098700
*                             valid.  The specified token refers to   * 01098800
*                             an older instance of the target         * 01098900
*                             structure.                              * 01099000
*                                                                     * 01099100
*                 xxxx0894    IxlRsnCodeBadKeyCompare The value       * 01099200
*                             specified for ENTRYKEY used with the    * 01099300
*                             KEYCOMPARE=YES with KEYREQTYPE did not  * 01099400
*                             match.  The value specified for         * 01099500
*                             SECONDARYKEY used with the              * 01099600
*                             SKEYCOMPARE=YES with SKEYREQTYPE did    * 01099700
*                             not match.                              * 01099800
*                                                                     * 01099900
*                 xxxx0895    IxlRsnCodeBadListKeyArea The storage    * 01100000
*                             area specified for LISTKEYAREA is not   * 01100100
*                             addressable.                            * 01100200
*                                                                     * 01100300
*                 xxxx0897    IxlRsnCodeBadKeyType The specified      * 01100400
*                             KEYTYPE value is not valid for the      * 01100500
*                             specified structure.                    * 01100600
*                                                                     * 01100700
*                 xxxx0898    IxlRsnCodeBadKeyScanType The specified  * 01100800
*                             KEYSCANTYPE value is not valid for the  * 01100900
*                             specified structure.                    * 01101000
*                                                                     * 01101100
*                 xxxx0899    IxlRsnCodeBadSKeyCompare The specified  * 01101200
*                             SKEYCOMPARE value is not valid for the  * 01101300
*                             specified structure.                    * 01101400
*                                                                     * 01101500
*                 xxxx089A    IxlRsnCodeBadSKeyReqType The specified  * 01101600
*                             SKEYREQTYPE value is not valid for the  * 01101700
*                             specified structure.                    * 01101800
*                                                                     * 01101900
*                 xxxx089B    IxlRsnCodeBadKeyCompareTyp The          * 01102000
*                             specified KEYCOMPARE value is not valid * 01102100
*                             for the specified structure.            * 01102200
*                                                                     * 01102300
*                 xxxx089C    IxlRsnBadCodeMoveToKey The specified    * 01102400
*                             MOVETOKEY value is not valid for the    * 01102500
*                             specified structure.                    * 01102600
*                                                                     * 01102700
*                 xxxx089D    IxlRsnBadCodeMoveToSKey The specified   * 01102800
*                             MOVETOSKEY value is not valid for the   * 01102900
*                             specified structure.                    * 01103000
*                                                                     * 01103100
*                 xxxx08AD    IxlRsnCodeBadHighSharedVirt:  Request   * 01103200
*                             specified a high shared virtual storage * 01103300
*                             area (above 2GB).                       * 01103400
*                                                                     * 01103500
*                                                                     * 01103600
*                                                                     * 01103700
*                                                                     * 01103800
*       C         IxlRetCodeEnvError:  Environmental problem.         * 01103900
*                                                                     * 01104000
*                 HEX REASON  MEANING                                 * 01104100
*                 CODE                                                * 01104200
*                                                                     * 01104300
*                                                                     * 01104400
*                 xxxx0C06    IxlRsnCodeNoConn:  No connectivity to   * 01104500
*                             the list structure.  This may occur due * 01104600
*                             to operator commands such as VARY PATH  * 01104700
*                             OFFLINE or CONFIG CHP OFFLINE or        * 01104800
*                             hardware errors such as facility or     * 01104900
*                             path failures.  The contoken will be    * 01105000
*                             invalidated.  The user should           * 01105100
*                             disconnect or rebuild.                  * 01105200
*                                                                     * 01105300
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 01105400
*                             completion of the request, the request  * 01105500
*                             was purged.  Reasons: the connector     * 01105600
*                             failed, the connector disconnected, the * 01105700
*                             requestor failed, the request was       * 01105800
*                             purged by IXLPURGE, or requests were    * 01105900
*                             purged when the connector provided an   * 01106000
*                             IXLEERSP response for the Rebuild Stop  * 01106100
*                             or Rebuild Cleanup event.               * 01106200
*                                                                     * 01106300
*                 xxxx0C14    IxlRsnCodeStatusUnknown:  The IXLLSTM   * 01106400
*                             request has completed, but the final    * 01106500
*                             disposition of the request can not be   * 01106600
*                             determined.                             * 01106700
*                                                                     * 01106800
*                 xxxx0C18    IxlRsnCodeListFull:  The list           * 01106900
*                             designated as the target of a           * 01107000
*                             MOVE_ENTRYLIST request, cannot          * 01107100
*                             accomodate more entries.                * 01107200
*                                                                     * 01107300
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 01107400
*                             completion of the request, the list     * 01107500
*                             structure failed.                       * 01107600
*                                                                     * 01107700
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 01107800
*                             type is not permitted for the level of  * 01107900
*                             coupling facility in which the target   * 01108000
*                             structure is allocated.                 * 01108100
*                                                                     * 01108200
*                 xxxx0CA0    IxlRsnCodeQuiescedSuspendFail:  The     * 01108300
*                             request is failed because the structure * 01108400
*                             is quiesced for a system-managed        * 01108500
*                             process (other than a STOP or SWITCH to * 01108600
*                             fall out of a system-managed duplexing  * 01108700
*                             rebuild) and SUSPEND=FAIL is specified. * 01108800
*                                                                     * 01108900
*                 FFFFFFFF    IxlRsnCodeNotAvailable:  XES functions  * 01109000
*                             are not available.  This can be because * 01109100
*                             the hardware necessary to provide XES   * 01109200
*                             functions is not present.               * 01109300
*                                                                     * 01109400
*                                                                     * 01109500
*                                                                     * 01109600
*                                                                     * 01109700
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 01109800
*                 state of the involved structure and the disposition * 01109900
*                 of the request are unpredictable.                   * 01110000
*                                                                     * 01110100
*                                                                     * 01110200
*                                                                     * 01110300
*01* REASON CODES:                                                    * 01110400
*                                                                     * 01110500
*       Reason codes, as appropriate, are defined under their         * 01110600
*       corresponding return code.  Reason code and return code       * 01110700
*       constants are defined within the IXLYCON macro.               * 01110800
*                                                                     * 01110900
*01* MODULE TYPE:  ASSEM MACRO                                        * 01111000
*                                                                     * 01111100
*02*   PROCESSOR:  ASSEM                                              * 01111200
*                                                                     * 01111300
*01* COMPONENT:  SCIXL                                                * 01111400
*                                                                     * 01111500
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 01111600
*                                                                     * 01111700
*01* ABEND CODES:  None.                                              * 01111800
*                                                                     * 01111900
*01* MACRO USAGE NOTES:                                               * 01112000
*                                                                     * 01112100
*                                                                     * 01112200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 01112300
*        global macro variable.  Any value other than 'NO' will       * 01112400
*        result in the macro expansion being printed.  The default is * 01112500
*        'YES'.  The following examples illustrate how the ZPRINT     * 01112600
*        variable should be set.                                      * 01112700
*                                                                     * 01112800
*                    GBLC &ZPRINT                                     * 01112900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 01113000
*                                                                     * 01113100
*                                                                     * 01113200
*    2.  The  IXLLSTM macro supports multiple versions. The macro key * 01113300
*        list  below  contains the version level in which the key was * 01113400
*        first  introduced.  Positionals  are  identified by the word * 01113500
*        'Positional'  followed by the numeric value of its position. * 01113600
*        Nested  positionals  are  preceded  by their outer key.  The * 01113700
*        lowest value represents the original version and the highest * 01113800
*        value  represents  the  most  recent  version of the IXLLSTM * 01113900
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 01114000
*        least  as high as the highest version number of all the keys * 01114100
*        being used.                                                  * 01114200
*                                                                     * 01114300
*        VERSION   KEY                                                * 01114400
*                                                                     * 01114500
*              0      ADJAREA                                         * 01114600
*                     ANSAREA                                         * 01114700
*                     ANSLEN                                          * 01114800
*                     AUTHCOMP                                        * 01114900
*                     AUTHCOMPARE                                     * 01115000
*                     AUTHCOMPTYPE                                    * 01115100
*                     BUFADDRSIZE                                     * 01115200
*                     BUFADDRTYPE                                     * 01115300
*                     BUFALET                                         * 01115400
*                     BUFFER                                          * 01115500
*                     BUFINCRNUM                                      * 01115600
*                     BUFLIST                                         * 01115700
*                     BUFNUM                                          * 01115800
*                     BUFSIZE                                         * 01115900
*                     BUFSTGKEY                                       * 01116000
*                     CONTOKEN                                        * 01116100
*                     DIRECTION                                       * 01116200
*                     ENTRYID                                         * 01116300
*                     ENTRYKEY                                        * 01116400
*                     ENTRYNAME                                       * 01116500
*                     FIRSTELEM                                       * 01116600
*                     KEYRANGEEND                                     * 01116700
*                     KEYREQTYPE                                      * 01116800
*                     KEYSCANTYPE                                     * 01116900
*                     KEYTYPE                                         * 01117000
*                     LASTELEM                                        * 01117100
*                     LISTCOMPARE                                     * 01117200
*                     LISTNUM                                         * 01117300
*                     LISTTYPE                                        * 01117400
*                     LOCATOR                                         * 01117500
*                     LOCKCOMP                                        * 01117600
*                     LOCKINDEX                                       * 01117700
*                     LOCKOPER                                        * 01117800
*                     MODE                                            * 01117900
*                     MOVETOKEY                                       * 01118000
*                     PAGEABLE                                        * 01118100
*                     REQDATA                                         * 01118200
*                     REQECB                                          * 01118300
*                     REQID                                           * 01118400
*                     REQTOKEN                                        * 01118500
*                     REQUEST                                         * 01118600
*                     RESTOKEN                                        * 01118700
*                     TYPE                                            * 01118800
*                     VERSCOMP                                        * 01118900
*                     VERSCOMPARE                                     * 01119000
*                     VERSCOMPTYPE                                    * 01119100
*              1      KEYCOMPARE                                      * 01119200
*                     LISTKEYINC                                      * 01119300
*              3      EXTRESTOKEN                                     * 01119400
*              4      LISTKEYAREA                                     * 01119500
*                     MISCOMPARE                                      * 01119600
*                     MOVETOSKEY                                      * 01119700
*                     SECONDARYKEY                                    * 01119800
*                     SKEYCOMPARE                                     * 01119900
*                     SKEYRANGEEND                                    * 01120000
*                     SKEYREQTYPE                                     * 01120100
*                                                                     * 01120200
*    3.  The  following table summarizes the allowed usage of some of * 01120300
*        the  specifications  that can be made dependent on the plist * 01120400
*        version.                                                     * 01120500
*                                                                     * 01120600
*        Key            Version  Notes                                * 01120700
*        ------------------------------------------------------       * 01120800
*        AUTHCOMPARE    0        NO may be specified                  * 01120900
*                       1        NO or YES may be specified           * 01121000
*        REQUEST        0        READ_LIST, READ_MULT, DELETE_MULT,   * 01121100
*                                or DELETE_ENTRYLIST may be           * 01121200
*                                specified.                           * 01121300
*                       1        Same as version 0                    * 01121400
*                       2        Same as version 1                    * 01121500
*                       3        Same as version 2                    * 01121600
*                       4        READ_LIST, READ_MULT, DELETE_MULT,   * 01121700
*                                DELETE_ENTRYLIST, DELETE_LIST,       * 01121800
*                                or MOVE_ENTRYLIST may be             * 01121900
*                                specified.                           * 01122000
*        VERSCOMPARE    0        NO or YES may be specified.          * 01122100
*                       1        Same as version 0                    * 01122200
*                       2        Same as version 1                    * 01122300
*                       3        Same as version 2                    * 01122400
*                       4        NO, YES, or BYENTRY may be           * 01122500
*                                specified.                           * 01122600
*        VERSCOMPTYPE   0        EQUAL may be specified.              * 01122700
*                       1        EQUAL or LESSOREQUAL may be          * 01122800
*                                specified.                           * 01122900
*        KEYSCANTYPE    0        ENTRY may be specified               * 01123000
*                       1        Same as version 0                    * 01123100
*                       2        Same as version 1                    * 01123200
*                       3        Same as version 2                    * 01123300
*                       4        ENTRY or SECONDARY may be specified. * 01123400
*        KEYREQTYPE     0        EQUAL may be specified.              * 01123500
*                                GREATEROREQUAL and LESSOREQUAL       * 01123600
*                                may be specified for only            * 01123700
*                                REQUEST(READ_LIST)                   * 01123800
*                       1        Same as version 0                    * 01123900
*                       2        Same as version 1                    * 01124000
*                       3        Same as version 2                    * 01124100
*                       4        EQUAL, LESSOREQUAL, GREATEROREQUAL,  * 01124200
*                                or RANGE may be specified.           * 01124300
*                                                                     * 01124400
*                                                                     * 01124500
*                                                                     * 01124600
*01* CHANGE ACTIVITY:                                                 * 01124700
*                                                                     * 01124800
*   Flag LineItem  FMID    Date   ID    Comment                       * 01124900
*                                                                     * 01125000
*    $L0=SYSLKSMQ JBB6609 980930 PDS7:  MQSeries support / split      * 01125100
*                                         IXLLIST                     * 01125200
*    $P1=PWY0001  JBB6609 980807 PD00DV:  Plist version needs to be   * 01125300
*                                         set consistently with       * 01125400
*                                         IXLLIST                     * 01125500
*    $L1=SYSLKSMQ JBB6609 980920 PD00MP:  Add the rest of ExtResToken * 01125600
*                                         support.                    * 01125700
*    $L2=64BIT    HBB7703 981208 B7VBGD:  64 bit real support         * 01125800
*    $P2=PWY0287  JBB6609 990415 PD00DV:  Add reason code 0842        * 01125900
*                                         description.                * 01126000
*    $P3=PWY0410  JBB6609 990616 PD00DV:  Comment out prolog and      * 01126100
*                                         docprof tags at top of      * 01126200
*                                         macro                       * 01126300
*    $L3=DUPLX    HBB7705 000115 PD00DV:  CF Duplexing                * 01126400
*    $01=CICSAUTO HBB7705 001115 PD00QQ:  AutoR extension for CICS    * 01126500
*    $L4=V64BIT   HBB7705 000912 PD00SE:  Virtual 64-Bit Support      * 01126600
*    $P5=PX00769  HBB7705 001131 PD00SE:  64-Bit Virtual Support      * 01126700
*    $02=OW41614  JBB6609 000911 PD00FR:  Buffer size requirements    * 01126800
*                                         for MOVE_ENTRYLIST and      * 01126900
*                                         DELETE_ENTRYLIST            * 01127000
*    $03=OA17188  HBB7707 060809 PD00FR:  Enhance concurrency         * 01127100
*                                         descriptions for READ_LIST  * 01127200
*                                         and DELETE_LIST             * 01127300
*    $P6=ME08196  HBB7740 070629 PD00FR:  RSMPIN/RSMLKPG large pages  * 01127400
*                                         (APAR OA20902)              * 01127500
*    $P7=ME12915  HBB7750 080314 PD00FR:  Correct macro documentation * 01127600
*                                         regarding disallowed use of * 01127700
*                                         high shared virtual storage * 01127800
*                                         areas (PYN0893)             * 01127900
*    $P8=151683   HBB77B0 170112 PD00C9:  Add documentation regarding * 01128000
*                                         disallowed use of pageable  * 01128100
*                                         high virtual common storage * 01128200
*                                         (above 2GB) for buffers     * 01128300
****** END OF SPECIFICATIONS *****************************************/ 01128400
*/********************************************************************* 01128500
         MACRO                                                          01128600
&XLABEL  IXLLSTM &CONTOKEN=,&REQID=,&REQUEST=,&TYPE=,&ADJAREA=,        *01128700
               &DIRECTION=,&LOCATOR=,&LISTNUM=,&KEYSCANTYPE=,          *01128800
               &AUTHCOMPARE=,&AUTHCOMP=,&AUTHCOMPTYPE=,&KEYCOMPARE=,   *01128900
               &ENTRYKEY=,&KEYREQTYPE=,&KEYRANGEEND=,&SKEYCOMPARE=,    *01129000
               &SECONDARYKEY=,&SKEYREQTYPE=,&SKEYRANGEEND=,&ENTRYID=,  *01129100
               &LISTCOMPARE=,&ENTRYNAME=,&KEYTYPE=,&VERSCOMPARE=,      *01129200
               &VERSCOMP=,&VERSCOMPTYPE=,&BUFLIST=,&BUFADDRTYPE=,      *01129300
               &PAGEABLE=,&BUFSTGKEY=,&BUFALET=,&BUFADDRSIZE=,&BUFNUM=,*01129400
               &BUFFER=,&BUFSIZE=,&RESTOKEN=,&EXTRESTOKEN=,&FIRSTELEM=,*01129500
               &LASTELEM=,&MISCOMPARE=,&LISTTYPE=,&MOVETOKEY=,         *01129600
               &LISTKEYINC=,&LISTKEYAREA=,&MOVETOSKEY=,&BUFINCRNUM=,   *01129700
               &LOCKINDEX=,&LOCKOPER=,&LOCKCOMP=,&MODE=,&ANSAREA=,     *01129800
               &ANSLEN=,&REQECB=,&REQDATA=,&REQTOKEN=,&RETCODE=,       *01129900
               &RSNCODE=,&PLISTVER=,&MF=                                01130000
.*                                                                      01130100
*                      MACDATE -01/13/18-<4>                            01130200
.*                                                                      01130300
.*******************************************************************    01130400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        01130500
.*******************************************************************    01130600
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           01130700
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             01130800
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     01130900
.*                                                                      01131000
                      GBLC  &ZIXLLSTM   YES=MACRO USED AT LEAST ONCE    01131100
.*******************************************************************    01131200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          01131300
.*******************************************************************    01131400
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         01131500
                      LCLC  &ZCNDX      SYSNDX CHARACTERS               01131600
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      01131700
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     01131800
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     01131900
                      LCLA  &ZAWRK      USED AS A WORK AREA             01132000
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          01132100
                      LCLA  &ZN         NUMERIC WORK VARIABLE           01132200
                      LCLC  &ZC         CHARACTER WORK VARIABLE         01132300
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     01132400
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         01132500
                      LCLC  &ZMAC_G     "G" or null                     01132600
&ZMAC_G               SETC  ''                                          01132700
                      LCLC  &ZMAC_LR                                    01132800
&ZMAC_LR              SETC  'LR'                                        01132900
                      LCLC  &ZMAC_L                                     01133000
&ZMAC_L               SETC  'L'                                         01133100
                      LCLC  &ZMAC_ST                                    01133200
&ZMAC_ST              SETC  'ST'                                        01133300
                      LCLC  &ZMAC_LLGT                                  01133400
&ZMAC_LLGT            SETC  'L'                                         01133500
                      LCLC  &ZMAC_LGR                                   01133600
&ZMAC_LGR             SETC  'LR'                                        01133700
                      LCLC  &ZMAC_LG                                    01133800
&ZMAC_LG              SETC  'L'                                         01133900
                      LCLC  &ZMAC_STG                                   01134000
&ZMAC_STG             SETC  'ST'                                        01134100
                      LCLA  &ZMACRET    MACRO RETURN CODE               01134200
&ZMACRET              SETA  0           ASSUME NO ERRORS                01134300
.*                                                                      01134400
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      01134500
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      01134600
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           01134700
                      LCLC  &ZENDBASEPL         End of base PL          01134800
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           01134900
.*******************************************************************    01135000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             01135100
.*******************************************************************    01135200
                      LCLA  &ZI         INDEX FOR ARRAY                 01135300
                      LCLA  &ZJ         INDEX FOR PARMS                 01135400
                      LCLA  &ZK         INDEX FOR PARSE                 01135500
                      LCLA  &ZLO        LOW RANGE VALUE                 01135600
                      LCLA  &ZHI        HIGH RANGE VALUE                01135700
                      LCLC  &ZW         WORK AREA FOR PARM              01135800
.********************************************************************   01135900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 01136000
.********************************************************************   01136100
                      GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL         01136200
                      GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE  01136300
                      GBLA  &SYSALVL    SYSSTATE ARCHLVL                01136400
                      GBLC  &SYSAM64    SYSSTATE AMODE64                01136500
.*                                                                      01136600
                      AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED  01136700
                      AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED   01136800
                      SPLEVEL  TEST                                     01136900
.ZSYS2                ANOP  ,                                           01137000
                      AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1       01137100
                      AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1       01137200
                      SYSSTATE TEST                                     01137300
                      AGO   .ZSYS4                                      01137400
.ZSYS3                ANOP  ,                                           01137500
&SYSASCE              SETC  'P'         ASSUME SYSSTATE PRIMARY         01137600
.ZSYS4                ANOP  ,                                           01137700
                      AIF   ('&SYSAM64' NE 'YES').ZSYSN64               01137800
&ZMAC_LLGT            SETC 'LLGT'                                       01137900
&ZMAC_LGR             SETC 'LGR'                                        01138000
&ZMAC_LG              SETC 'LG'                                         01138100
&ZMAC_STG             SETC 'STG'                                        01138200
.ZSYSN64              ANOP  ,                                           01138300
.*******************************************************************    01138400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   01138500
.*******************************************************************    01138600
                      LCLC  &XCONTOKEN  ++ NAME                         01138700
                      LCLC  &XREQID     ++ NAME                         01138800
                      LCLC  &XREQUEST   ++ VALUE                        01138900
                      LCLC  &XTYPE(257)         ++ VALUE                01139000
                      LCLC  &XADJAREA   ++ NAME                         01139100
                      LCLC  &XDIRECTION         ++ VALUE                01139200
                      LCLC  &XLOCATOR   ++ VALUE                        01139300
                      LCLC  &XLISTNUM   ++ NAME                         01139400
                      LCLC  &XKEYSCANTYPE       ++ VALUE                01139500
                      LCLC  &XAUTHCOMPARE       ++ VALUE                01139600
                      LCLC  &XAUTHCOMP  ++ NAME                         01139700
                      LCLC  &XAUTHCOMPTYPE      ++ VALUE                01139800
                      LCLC  &XKEYCOMPARE        ++ VALUE                01139900
                      LCLC  &XENTRYKEY  ++ NAME                         01140000
                      LCLC  &XKEYREQTYPE        ++ VALUE                01140100
                      LCLC  &XKEYRANGEEND       ++ NAME                 01140200
                      LCLC  &XSKEYCOMPARE       ++ VALUE                01140300
                      LCLC  &XSECONDARYKEY      ++ NAME                 01140400
                      LCLC  &XSKEYREQTYPE       ++ VALUE                01140500
                      LCLC  &XSKEYRANGEEND      ++ NAME                 01140600
                      LCLC  &XENTRYID   ++ NAME                         01140700
                      LCLC  &XLISTCOMPARE       ++ VALUE                01140800
                      LCLC  &XENTRYNAME         ++ NAME                 01140900
                      LCLC  &XKEYTYPE   ++ VALUE                        01141000
                      LCLC  &XVERSCOMPARE       ++ VALUE                01141100
                      LCLC  &XVERSCOMP  ++ NAME                         01141200
                      LCLC  &XVERSCOMPTYPE      ++ VALUE                01141300
                      LCLC  &XDATAREA   ++ NAME                         01141400
                      LCLC  &XBUFLIST   ++ NAME                         01141500
                      LCLC  &XBUFADDRTYPE       ++ VALUE                01141600
                      LCLC  &XPAGEABLE  ++ VALUE                        01141700
                      LCLC  &XBUFSTGKEY         ++ NAME                 01141800
                      LCLC  &XBUFALET   ++ NAME                         01141900
                      LCLC  &XBUFADDRSIZE       ++ VALUE                01142000
                      LCLC  &XBUFNUM    ++ NAME                         01142100
                      LCLC  &XBUFFER    ++ NAME                         01142200
                      LCLC  &XBUFSIZE   ++ NAME                         01142300
                      LCLC  &XRESTARTTOKEN      ++ NAME                 01142400
                      LCLC  &XRESTOKEN  ++ NAME                         01142500
                      LCLC  &XEXTRESTOKEN       ++ NAME                 01142600
                      LCLC  &XDATAREA3  ++ NAME                         01142700
                      LCLC  &XFIRSTELEM         ++ NAME                 01142800
                      LCLC  &XLASTELEM  ++ NAME                         01142900
                      LCLC  &XMISCOMPARE        ++ VALUE                01143000
                      LCLC  &XLISTTYPE  ++ VALUE                        01143100
                      LCLC  &XMOVETOKEY         ++ VALUE                01143200
                      LCLC  &XLISTKEYINC        ++ NAME                 01143300
                      LCLC  &XLISTKEYAREA       ++ NAME                 01143400
                      LCLC  &XMOVETOSKEY        ++ VALUE                01143500
                      LCLC  &XBUFINCRNUM        ++ NAME                 01143600
                      LCLC  &XLOCKINDEX         ++ NAME                 01143700
                      LCLC  &XLOCKOPER  ++ VALUE                        01143800
                      LCLC  &XLOCKCOMP  ++ NAME                         01143900
                      LCLC  &XMODE      ++ VALUE                        01144000
                      LCLC  &XANSAREA   ++ NAME                         01144100
                      LCLC  &XANSLEN    ++ NAME                         01144200
                      LCLC  &XREQECB    ++ NAME                         01144300
                      LCLC  &XREQDATA   ++ NAME                         01144400
                      LCLC  &XREQTOKEN  ++ NAME                         01144500
                      LCLC  &XRETCODE   ++ NAME                         01144600
                      LCLC  &XRSNCODE   ++ NAME                         01144700
                      LCLA  &XPLISTVER  ++ VALUE                        01144800
                      LCLC  &XMF        ++ VALUE                        01144900
                      LCLC  &XMFCTRL    ++ NAME                         01145000
                      LCLC  &XMFATTR    ++ VALUE                        01145100
                      LCLC  &XMFSCK     ++ VALUE                        01145200
.*******************************************************************    01145300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           01145400
.*******************************************************************    01145500
                      LCLC  &ZXCONTOKEN         ++ INPUT NAME           01145600
                      LCLC  &ZXREQID    ++ INPUT NAME                   01145700
                      LCLC  &ZXREQUEST  ++ INPUT VALUE                  01145800
                      LCLC  &ZXTYPE     ++ INPUT VALUE                  01145900
                      LCLC  &ZXADJAREA  ++ INPUT NAME                   01146000
                      LCLC  &ZXDIRECTION        ++ INPUT VALUE          01146100
                      LCLC  &ZXLOCATOR  ++ INPUT VALUE                  01146200
                      LCLC  &ZXLISTNUM  ++ INPUT NAME                   01146300
                      LCLC  &ZXKEYSCANTYPE      ++ INPUT VALUE          01146400
                      LCLC  &ZXAUTHCOMPARE      ++ INPUT VALUE          01146500
                      LCLC  &ZXAUTHCOMP         ++ INPUT NAME           01146600
                      LCLC  &ZXAUTHCOMPTYPE     ++ INPUT VALUE          01146700
                      LCLC  &ZXKEYCOMPARE       ++ INPUT VALUE          01146800
                      LCLC  &ZXENTRYKEY         ++ INPUT NAME           01146900
                      LCLC  &ZXKEYREQTYPE       ++ INPUT VALUE          01147000
                      LCLC  &ZXKEYRANGEEND      ++ INPUT NAME           01147100
                      LCLC  &ZXSKEYCOMPARE      ++ INPUT VALUE          01147200
                      LCLC  &ZXSECONDARYKEY     ++ INPUT NAME           01147300
                      LCLC  &ZXSKEYREQTYPE      ++ INPUT VALUE          01147400
                      LCLC  &ZXSKEYRANGEEND     ++ INPUT NAME           01147500
                      LCLC  &ZXENTRYID  ++ INPUT NAME                   01147600
                      LCLC  &ZXLISTCOMPARE      ++ INPUT VALUE          01147700
                      LCLC  &ZXENTRYNAME        ++ INPUT NAME           01147800
                      LCLC  &ZXKEYTYPE  ++ INPUT VALUE                  01147900
                      LCLC  &ZXVERSCOMPARE      ++ INPUT VALUE          01148000
                      LCLC  &ZXVERSCOMP         ++ INPUT NAME           01148100
                      LCLC  &ZXVERSCOMPTYPE     ++ INPUT VALUE          01148200
                      LCLC  &ZXDATAREA  ++ OUTPUT NAME                  01148300
                      LCLC  &ZXBUFLIST  ++ OUTPUT NAME                  01148400
                      LCLC  &ZXBUFADDRTYPE      ++ INPUT VALUE          01148500
                      LCLC  &ZXPAGEABLE         ++ INPUT VALUE          01148600
                      LCLC  &ZXBUFSTGKEY        ++ INPUT NAME           01148700
                      LCLC  &ZXBUFALET  ++ INPUT NAME                   01148800
                      LCLC  &ZXBUFADDRSIZE      ++ INPUT VALUE          01148900
                      LCLC  &ZXBUFNUM   ++ INPUT NAME                   01149000
                      LCLC  &ZXBUFFER   ++ OUTPUT NAME                  01149100
                      LCLC  &ZXBUFSIZE  ++ INPUT NAME                   01149200
                      LCLC  &ZXRESTARTTOKEN     ++ INPUT NAME           01149300
                      LCLC  &ZXRESTOKEN         ++ INPUT NAME           01149400
                      LCLC  &ZXEXTRESTOKEN      ++ INPUT NAME           01149500
                      LCLC  &ZXDATAREA3         ++ OUTPUT NAME          01149600
                      LCLC  &ZXFIRSTELEM        ++ INPUT NAME           01149700
                      LCLC  &ZXLASTELEM         ++ INPUT NAME           01149800
                      LCLC  &ZXMISCOMPARE       ++ INPUT VALUE          01149900
                      LCLC  &ZXLISTTYPE         ++ INPUT VALUE          01150000
                      LCLC  &ZXMOVETOKEY        ++ INPUT VALUE          01150100
                      LCLC  &ZXLISTKEYINC       ++ INPUT NAME           01150200
                      LCLC  &ZXLISTKEYAREA      ++ INPUT NAME           01150300
                      LCLC  &ZXMOVETOSKEY       ++ INPUT VALUE          01150400
                      LCLC  &ZXBUFINCRNUM       ++ INPUT NAME           01150500
                      LCLC  &ZXLOCKINDEX        ++ INPUT NAME           01150600
                      LCLC  &ZXLOCKOPER         ++ INPUT VALUE          01150700
                      LCLC  &ZXLOCKCOMP         ++ INPUT NAME           01150800
                      LCLC  &ZXMODE     ++ INPUT VALUE                  01150900
                      LCLC  &ZXANSAREA  ++ INPUT NAME                   01151000
                      LCLC  &ZXANSLEN   ++ INPUT NAME                   01151100
                      LCLC  &ZXREQECB   ++ INPUT NAME                   01151200
                      LCLC  &ZXREQDATA  ++ INPUT NAME                   01151300
                      LCLC  &ZXREQTOKEN         ++ OUTPUT NAME          01151400
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  01151500
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  01151600
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          01151700
                      LCLC  &ZXMF       ++ INPUT VALUE                  01151800
                      LCLC  &ZXMFCTRL   ++ INPUT NAME                   01151900
                      LCLC  &ZXMFATTR   ++ INPUT VALUE                  01152000
                      LCLC  &ZXMFSCK    ++ INPUT VALUE                  01152100
.********************************************************************   01152200
.***AC.PLV01  PROCESS PLISTVER                                      *   01152300
.********************************************************************   01152400
&XPLISTVER      SETA  0                                                 01152500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       01152600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   01152700
&XPLISTVER      SETA  4                                                 01152800
.ZPLV0          ANOP  ,                                                 01152900
.*                                                                      01153000
                AIF   ('&KEYCOMPARE' EQ '').ZPLV1E                      01153100
                AIF   (&XPLISTVER GE 1).ZPLV1E                          01153200
&XPLISTVER      SETA  1                                                 01153300
.ZPLV1E         ANOP  ,                                                 01153400
.*                                                                      01153500
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV2E                     01153600
                AIF   (&XPLISTVER GE 4).ZPLV2E                          01153700
&XPLISTVER      SETA  4                                                 01153800
.ZPLV2E         ANOP  ,                                                 01153900
.*                                                                      01154000
                AIF   ('&SECONDARYKEY' EQ '').ZPLV3E                    01154100
                AIF   (&XPLISTVER GE 4).ZPLV3E                          01154200
&XPLISTVER      SETA  4                                                 01154300
.ZPLV3E         ANOP  ,                                                 01154400
.*                                                                      01154500
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV4E                     01154600
                AIF   (&XPLISTVER GE 4).ZPLV4E                          01154700
&XPLISTVER      SETA  4                                                 01154800
.ZPLV4E         ANOP  ,                                                 01154900
.*                                                                      01155000
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV5E                    01155100
                AIF   (&XPLISTVER GE 4).ZPLV5E                          01155200
&XPLISTVER      SETA  4                                                 01155300
.ZPLV5E         ANOP  ,                                                 01155400
.*                                                                      01155500
                AIF   ('&KEYCOMPARE' EQ '').ZPLV6E                      01155600
                AIF   (&XPLISTVER GE 1).ZPLV6E                          01155700
&XPLISTVER      SETA  1                                                 01155800
.ZPLV6E         ANOP  ,                                                 01155900
.*                                                                      01156000
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV7E                     01156100
                AIF   (&XPLISTVER GE 4).ZPLV7E                          01156200
&XPLISTVER      SETA  4                                                 01156300
.ZPLV7E         ANOP  ,                                                 01156400
.*                                                                      01156500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV8E                    01156600
                AIF   (&XPLISTVER GE 4).ZPLV8E                          01156700
&XPLISTVER      SETA  4                                                 01156800
.ZPLV8E         ANOP  ,                                                 01156900
.*                                                                      01157000
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV9E                     01157100
                AIF   (&XPLISTVER GE 4).ZPLV9E                          01157200
&XPLISTVER      SETA  4                                                 01157300
.ZPLV9E         ANOP  ,                                                 01157400
.*                                                                      01157500
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV10E                   01157600
                AIF   (&XPLISTVER GE 4).ZPLV10E                         01157700
&XPLISTVER      SETA  4                                                 01157800
.ZPLV10E        ANOP  ,                                                 01157900
.*                                                                      01158000
                AIF   ('&KEYCOMPARE' EQ '').ZPLV11E                     01158100
                AIF   (&XPLISTVER GE 1).ZPLV11E                         01158200
&XPLISTVER      SETA  1                                                 01158300
.ZPLV11E        ANOP  ,                                                 01158400
.*                                                                      01158500
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV12E                    01158600
                AIF   (&XPLISTVER GE 4).ZPLV12E                         01158700
&XPLISTVER      SETA  4                                                 01158800
.ZPLV12E        ANOP  ,                                                 01158900
.*                                                                      01159000
                AIF   ('&SECONDARYKEY' EQ '').ZPLV13E                   01159100
                AIF   (&XPLISTVER GE 4).ZPLV13E                         01159200
&XPLISTVER      SETA  4                                                 01159300
.ZPLV13E        ANOP  ,                                                 01159400
.*                                                                      01159500
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV14E                    01159600
                AIF   (&XPLISTVER GE 4).ZPLV14E                         01159700
&XPLISTVER      SETA  4                                                 01159800
.ZPLV14E        ANOP  ,                                                 01159900
.*                                                                      01160000
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV15E                   01160100
                AIF   (&XPLISTVER GE 4).ZPLV15E                         01160200
&XPLISTVER      SETA  4                                                 01160300
.ZPLV15E        ANOP  ,                                                 01160400
.*                                                                      01160500
                AIF   ('&KEYCOMPARE' EQ '').ZPLV16E                     01160600
                AIF   (&XPLISTVER GE 1).ZPLV16E                         01160700
&XPLISTVER      SETA  1                                                 01160800
.ZPLV16E        ANOP  ,                                                 01160900
.*                                                                      01161000
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV17E                    01161100
                AIF   (&XPLISTVER GE 4).ZPLV17E                         01161200
&XPLISTVER      SETA  4                                                 01161300
.ZPLV17E        ANOP  ,                                                 01161400
.*                                                                      01161500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV18E                   01161600
                AIF   (&XPLISTVER GE 4).ZPLV18E                         01161700
&XPLISTVER      SETA  4                                                 01161800
.ZPLV18E        ANOP  ,                                                 01161900
.*                                                                      01162000
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV19E                    01162100
                AIF   (&XPLISTVER GE 4).ZPLV19E                         01162200
&XPLISTVER      SETA  4                                                 01162300
.ZPLV19E        ANOP  ,                                                 01162400
.*                                                                      01162500
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV20E                   01162600
                AIF   (&XPLISTVER GE 4).ZPLV20E                         01162700
&XPLISTVER      SETA  4                                                 01162800
.ZPLV20E        ANOP  ,                                                 01162900
.*                                                                      01163000
                AIF   ('&SECONDARYKEY' EQ '').ZPLV21E                   01163100
                AIF   (&XPLISTVER GE 4).ZPLV21E                         01163200
&XPLISTVER      SETA  4                                                 01163300
.ZPLV21E        ANOP  ,                                                 01163400
.*                                                                      01163500
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV22E                    01163600
                AIF   (&XPLISTVER GE 4).ZPLV22E                         01163700
&XPLISTVER      SETA  4                                                 01163800
.ZPLV22E        ANOP  ,                                                 01163900
.*                                                                      01164000
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV23E                   01164100
                AIF   (&XPLISTVER GE 4).ZPLV23E                         01164200
&XPLISTVER      SETA  4                                                 01164300
.ZPLV23E        ANOP  ,                                                 01164400
.*                                                                      01164500
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV24E                    01164600
                AIF   (&XPLISTVER GE 4).ZPLV24E                         01164700
&XPLISTVER      SETA  4                                                 01164800
.ZPLV24E        ANOP  ,                                                 01164900
.*                                                                      01165000
                AIF   ('&KEYCOMPARE' EQ '').ZPLV25E                     01165100
                AIF   (&XPLISTVER GE 1).ZPLV25E                         01165200
&XPLISTVER      SETA  1                                                 01165300
.ZPLV25E        ANOP  ,                                                 01165400
.*                                                                      01165500
                AIF   ('&KEYCOMPARE' EQ '').ZPLV26E                     01165600
                AIF   (&XPLISTVER GE 1).ZPLV26E                         01165700
&XPLISTVER      SETA  1                                                 01165800
.ZPLV26E        ANOP  ,                                                 01165900
.*                                                                      01166000
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV27E                    01166100
                AIF   (&XPLISTVER GE 4).ZPLV27E                         01166200
&XPLISTVER      SETA  4                                                 01166300
.ZPLV27E        ANOP  ,                                                 01166400
.*                                                                      01166500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV28E                   01166600
                AIF   (&XPLISTVER GE 4).ZPLV28E                         01166700
&XPLISTVER      SETA  4                                                 01166800
.ZPLV28E        ANOP  ,                                                 01166900
.*                                                                      01167000
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV29E                    01167100
                AIF   (&XPLISTVER GE 4).ZPLV29E                         01167200
&XPLISTVER      SETA  4                                                 01167300
.ZPLV29E        ANOP  ,                                                 01167400
.*                                                                      01167500
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV30E                   01167600
                AIF   (&XPLISTVER GE 4).ZPLV30E                         01167700
&XPLISTVER      SETA  4                                                 01167800
.ZPLV30E        ANOP  ,                                                 01167900
.*                                                                      01168000
                AIF   ('&KEYCOMPARE' EQ '').ZPLV31E                     01168100
                AIF   (&XPLISTVER GE 1).ZPLV31E                         01168200
&XPLISTVER      SETA  1                                                 01168300
.ZPLV31E        ANOP  ,                                                 01168400
.*                                                                      01168500
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV32E                    01168600
                AIF   (&XPLISTVER GE 4).ZPLV32E                         01168700
&XPLISTVER      SETA  4                                                 01168800
.ZPLV32E        ANOP  ,                                                 01168900
.*                                                                      01169000
                AIF   ('&SECONDARYKEY' EQ '').ZPLV33E                   01169100
                AIF   (&XPLISTVER GE 4).ZPLV33E                         01169200
&XPLISTVER      SETA  4                                                 01169300
.ZPLV33E        ANOP  ,                                                 01169400
.*                                                                      01169500
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV34E                    01169600
                AIF   (&XPLISTVER GE 4).ZPLV34E                         01169700
&XPLISTVER      SETA  4                                                 01169800
.ZPLV34E        ANOP  ,                                                 01169900
.*                                                                      01170000
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV35E                   01170100
                AIF   (&XPLISTVER GE 4).ZPLV35E                         01170200
&XPLISTVER      SETA  4                                                 01170300
.ZPLV35E        ANOP  ,                                                 01170400
.*                                                                      01170500
                AIF   ('&KEYCOMPARE' EQ '').ZPLV36E                     01170600
                AIF   (&XPLISTVER GE 1).ZPLV36E                         01170700
&XPLISTVER      SETA  1                                                 01170800
.ZPLV36E        ANOP  ,                                                 01170900
.*                                                                      01171000
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV37E                    01171100
                AIF   (&XPLISTVER GE 4).ZPLV37E                         01171200
&XPLISTVER      SETA  4                                                 01171300
.ZPLV37E        ANOP  ,                                                 01171400
.*                                                                      01171500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV38E                   01171600
                AIF   (&XPLISTVER GE 4).ZPLV38E                         01171700
&XPLISTVER      SETA  4                                                 01171800
.ZPLV38E        ANOP  ,                                                 01171900
.*                                                                      01172000
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV39E                    01172100
                AIF   (&XPLISTVER GE 4).ZPLV39E                         01172200
&XPLISTVER      SETA  4                                                 01172300
.ZPLV39E        ANOP  ,                                                 01172400
.*                                                                      01172500
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV40E                   01172600
                AIF   (&XPLISTVER GE 4).ZPLV40E                         01172700
&XPLISTVER      SETA  4                                                 01172800
.ZPLV40E        ANOP  ,                                                 01172900
.*                                                                      01173000
                AIF   ('&KEYCOMPARE' EQ '').ZPLV41E                     01173100
                AIF   (&XPLISTVER GE 1).ZPLV41E                         01173200
&XPLISTVER      SETA  1                                                 01173300
.ZPLV41E        ANOP  ,                                                 01173400
.*                                                                      01173500
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV42E                    01173600
                AIF   (&XPLISTVER GE 4).ZPLV42E                         01173700
&XPLISTVER      SETA  4                                                 01173800
.ZPLV42E        ANOP  ,                                                 01173900
.*                                                                      01174000
                AIF   ('&SECONDARYKEY' EQ '').ZPLV43E                   01174100
                AIF   (&XPLISTVER GE 4).ZPLV43E                         01174200
&XPLISTVER      SETA  4                                                 01174300
.ZPLV43E        ANOP  ,                                                 01174400
.*                                                                      01174500
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV44E                    01174600
                AIF   (&XPLISTVER GE 4).ZPLV44E                         01174700
&XPLISTVER      SETA  4                                                 01174800
.ZPLV44E        ANOP  ,                                                 01174900
.*                                                                      01175000
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV45E                   01175100
                AIF   (&XPLISTVER GE 4).ZPLV45E                         01175200
&XPLISTVER      SETA  4                                                 01175300
.ZPLV45E        ANOP  ,                                                 01175400
.*                                                                      01175500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV46E                   01175600
                AIF   (&XPLISTVER GE 4).ZPLV46E                         01175700
&XPLISTVER      SETA  4                                                 01175800
.ZPLV46E        ANOP  ,                                                 01175900
.*                                                                      01176000
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV47E                    01176100
                AIF   (&XPLISTVER GE 4).ZPLV47E                         01176200
&XPLISTVER      SETA  4                                                 01176300
.ZPLV47E        ANOP  ,                                                 01176400
.*                                                                      01176500
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV48E                   01176600
                AIF   (&XPLISTVER GE 4).ZPLV48E                         01176700
&XPLISTVER      SETA  4                                                 01176800
.ZPLV48E        ANOP  ,                                                 01176900
.*                                                                      01177000
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV49E                    01177100
                AIF   (&XPLISTVER GE 4).ZPLV49E                         01177200
&XPLISTVER      SETA  4                                                 01177300
.ZPLV49E        ANOP  ,                                                 01177400
.*                                                                      01177500
                AIF   ('&KEYCOMPARE' EQ '').ZPLV50E                     01177600
                AIF   (&XPLISTVER GE 1).ZPLV50E                         01177700
&XPLISTVER      SETA  1                                                 01177800
.ZPLV50E        ANOP  ,                                                 01177900
.*                                                                      01178000
                AIF   ('&EXTRESTOKEN' EQ '').ZPLV51E                    01178100
                AIF   (&XPLISTVER GE 3).ZPLV51E                         01178200
&XPLISTVER      SETA  3                                                 01178300
.ZPLV51E        ANOP  ,                                                 01178400
.*                                                                      01178500
                AIF   ('&KEYCOMPARE' EQ '').ZPLV52E                     01178600
                AIF   (&XPLISTVER GE 1).ZPLV52E                         01178700
&XPLISTVER      SETA  1                                                 01178800
.ZPLV52E        ANOP  ,                                                 01178900
.*                                                                      01179000
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV53E                    01179100
                AIF   (&XPLISTVER GE 4).ZPLV53E                         01179200
&XPLISTVER      SETA  4                                                 01179300
.ZPLV53E        ANOP  ,                                                 01179400
.*                                                                      01179500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV54E                   01179600
                AIF   (&XPLISTVER GE 4).ZPLV54E                         01179700
&XPLISTVER      SETA  4                                                 01179800
.ZPLV54E        ANOP  ,                                                 01179900
.*                                                                      01180000
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV55E                    01180100
                AIF   (&XPLISTVER GE 4).ZPLV55E                         01180200
&XPLISTVER      SETA  4                                                 01180300
.ZPLV55E        ANOP  ,                                                 01180400
.*                                                                      01180500
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV56E                   01180600
                AIF   (&XPLISTVER GE 4).ZPLV56E                         01180700
&XPLISTVER      SETA  4                                                 01180800
.ZPLV56E        ANOP  ,                                                 01180900
.*                                                                      01181000
                AIF   ('&EXTRESTOKEN' EQ '').ZPLV57E                    01181100
                AIF   (&XPLISTVER GE 3).ZPLV57E                         01181200
&XPLISTVER      SETA  3                                                 01181300
.ZPLV57E        ANOP  ,                                                 01181400
.*                                                                      01181500
                AIF   ('&KEYCOMPARE' EQ '').ZPLV58E                     01181600
                AIF   (&XPLISTVER GE 1).ZPLV58E                         01181700
&XPLISTVER      SETA  1                                                 01181800
.ZPLV58E        ANOP  ,                                                 01181900
.*                                                                      01182000
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV59E                    01182100
                AIF   (&XPLISTVER GE 4).ZPLV59E                         01182200
&XPLISTVER      SETA  4                                                 01182300
.ZPLV59E        ANOP  ,                                                 01182400
.*                                                                      01182500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV60E                   01182600
                AIF   (&XPLISTVER GE 4).ZPLV60E                         01182700
&XPLISTVER      SETA  4                                                 01182800
.ZPLV60E        ANOP  ,                                                 01182900
.*                                                                      01183000
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV61E                    01183100
                AIF   (&XPLISTVER GE 4).ZPLV61E                         01183200
&XPLISTVER      SETA  4                                                 01183300
.ZPLV61E        ANOP  ,                                                 01183400
.*                                                                      01183500
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV62E                   01183600
                AIF   (&XPLISTVER GE 4).ZPLV62E                         01183700
&XPLISTVER      SETA  4                                                 01183800
.ZPLV62E        ANOP  ,                                                 01183900
.*                                                                      01184000
                AIF   ('&MISCOMPARE' EQ '').ZPLV63E                     01184100
                AIF   (&XPLISTVER GE 4).ZPLV63E                         01184200
&XPLISTVER      SETA  4                                                 01184300
.ZPLV63E        ANOP  ,                                                 01184400
.*                                                                      01184500
                AIF   ('&KEYCOMPARE' EQ '').ZPLV64E                     01184600
                AIF   (&XPLISTVER GE 1).ZPLV64E                         01184700
&XPLISTVER      SETA  1                                                 01184800
.ZPLV64E        ANOP  ,                                                 01184900
.*                                                                      01185000
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV65E                    01185100
                AIF   (&XPLISTVER GE 4).ZPLV65E                         01185200
&XPLISTVER      SETA  4                                                 01185300
.ZPLV65E        ANOP  ,                                                 01185400
.*                                                                      01185500
                AIF   ('&SECONDARYKEY' EQ '').ZPLV66E                   01185600
                AIF   (&XPLISTVER GE 4).ZPLV66E                         01185700
&XPLISTVER      SETA  4                                                 01185800
.ZPLV66E        ANOP  ,                                                 01185900
.*                                                                      01186000
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV67E                    01186100
                AIF   (&XPLISTVER GE 4).ZPLV67E                         01186200
&XPLISTVER      SETA  4                                                 01186300
.ZPLV67E        ANOP  ,                                                 01186400
.*                                                                      01186500
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV68E                   01186600
                AIF   (&XPLISTVER GE 4).ZPLV68E                         01186700
&XPLISTVER      SETA  4                                                 01186800
.ZPLV68E        ANOP  ,                                                 01186900
.*                                                                      01187000
                AIF   ('&LISTKEYINC' EQ '').ZPLV69E                     01187100
                AIF   (&XPLISTVER GE 1).ZPLV69E                         01187200
&XPLISTVER      SETA  1                                                 01187300
.ZPLV69E        ANOP  ,                                                 01187400
.*                                                                      01187500
                AIF   ('&LISTKEYAREA' EQ '').ZPLV70E                    01187600
                AIF   (&XPLISTVER GE 4).ZPLV70E                         01187700
&XPLISTVER      SETA  4                                                 01187800
.ZPLV70E        ANOP  ,                                                 01187900
.*                                                                      01188000
                AIF   ('&MOVETOSKEY' EQ '').ZPLV71E                     01188100
                AIF   (&XPLISTVER GE 4).ZPLV71E                         01188200
&XPLISTVER      SETA  4                                                 01188300
.ZPLV71E        ANOP  ,                                                 01188400
.*                                                                      01188500
                AIF   ('&MISCOMPARE' EQ '').ZPLV72E                     01188600
                AIF   (&XPLISTVER GE 4).ZPLV72E                         01188700
&XPLISTVER      SETA  4                                                 01188800
.ZPLV72E        ANOP  ,                                                 01188900
.*                                                                      01189000
                AIF   ('&KEYCOMPARE' EQ '').ZPLV73E                     01189100
                AIF   (&XPLISTVER GE 1).ZPLV73E                         01189200
&XPLISTVER      SETA  1                                                 01189300
.ZPLV73E        ANOP  ,                                                 01189400
.*                                                                      01189500
                AIF   ('&SKEYCOMPARE' EQ '').ZPLV74E                    01189600
                AIF   (&XPLISTVER GE 4).ZPLV74E                         01189700
&XPLISTVER      SETA  4                                                 01189800
.ZPLV74E        ANOP  ,                                                 01189900
.*                                                                      01190000
                AIF   ('&SECONDARYKEY' EQ '').ZPLV75E                   01190100
                AIF   (&XPLISTVER GE 4).ZPLV75E                         01190200
&XPLISTVER      SETA  4                                                 01190300
.ZPLV75E        ANOP  ,                                                 01190400
.*                                                                      01190500
                AIF   ('&SKEYREQTYPE' EQ '').ZPLV76E                    01190600
                AIF   (&XPLISTVER GE 4).ZPLV76E                         01190700
&XPLISTVER      SETA  4                                                 01190800
.ZPLV76E        ANOP  ,                                                 01190900
.*                                                                      01191000
                AIF   ('&SKEYRANGEEND' EQ '').ZPLV77E                   01191100
                AIF   (&XPLISTVER GE 4).ZPLV77E                         01191200
&XPLISTVER      SETA  4                                                 01191300
.ZPLV77E        ANOP  ,                                                 01191400
.*                                                                      01191500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      01191600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      01191700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  01191800
.*-------------------------------------------------------------------   01191900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 01192000
&ZMS            SETC  '"PLISTVER='                                      01192100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01192200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 01192300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01192400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01192500
                AGO   .ZPVCK2                                           01192600
.ZPVCK3         ANOP  ,                                                 01192700
.*-------------------------------------------------------------------   01192800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  01192900
&ZMS            SETC  '"PLISTVER='                                      01193000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01193100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         01193200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 01193300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01193400
                AGO   .ZPVCKE                                           01193500
.ZPVCK2         ANOP  ,                                                 01193600
.*-------------------------------------------------------------------   01193700
&ZCVAL          SETC  '&PLISTVER(1)'                                    01193800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             01193900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             01194000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        01194100
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      01194200
                AIF   (&ZN LE 4).ZPVCK4A   NOT HIGH                     01194300
.ZPVCK6         ANOP  ,                                                 01194400
&ZMS            SETC  '"PLISTVER='                                      01194500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01194600
&ZMS            SETC  '&ZMS THE RANGE IS "0-4"'                         01194700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         01194800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01194900
&XPLISTVER      SETA  4                                                 01195000
                AGO   .ZPVCKE                                           01195100
.*-------------------------------------------------------------------   01195200
.ZPVCK4A        ANOP  ,                                                 01195300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        01195400
&ZMS            SETC  'PLISTVER='                                       01195500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               01195600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          01195700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 01195800
                MNOTE 8,' &ZMS IS REQUIRED.'                            01195900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01196000
                AGO   .ZPVCK5                                           01196100
.ZPVCK4         ANOP  ,                                                 01196200
&XPLISTVER      SETA  &PLISTVER(1)                                      01196300
.ZPVCK5         ANOP  ,                                                 01196400
.ZPVCKE         ANOP  ,                                                 01196500
.********************************************************************   01196600
.***AG.MF01 PROCESS MF MACRO FORMS                                      01196700
.********************************************************************   01196800
                      ACTR  10000                                       01196900
.*------------------------------------------------------------------    01197000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01197100
&XMF                  SETC  ''          INITIALIZE XVARIABLE            01197200
.*-------------------------------------------------------------------   01197300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01197400
.ZG1302               ANOP  ,                                           01197500
&ZTLC                 SETC 'S'                                          01197600
                      AIF   ('&MF(1)' NE '&ZTLC').ZG1303                01197700
&XMF                  SETC  'S'         SET KEYWORD                     01197800
                      AIF   (N'&MF LE 1).ZG1302A  CK NUM                01197900
&ZMS                  SETC  '"MF='                                      01198000
&ZMS                  SETC  '&ZMS.&MF"'                                 01198100
&ZMS                  SETC  '&ZMS "MF"'                                 01198200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01198300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01198400
.ZG1302A              ANOP  ,                                           01198500
.*-------------------------------------------------------------------   01198600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01198700
.ZG1303               ANOP  ,                                           01198800
&ZTLC                 SETC 'L'                                          01198900
                      AIF   ('&MF(1)' NE '&ZTLC').ZG1310                01199000
&XMF                  SETC  'L'         SET KEYWORD                     01199100
                      AIF   (N'&MF LE 3).ZG1303A  CK NUM                01199200
&ZMS                  SETC  '"MF='                                      01199300
&ZMS                  SETC  '&ZMS.&MF"'                                 01199400
&ZMS                  SETC  '&ZMS "MF"'                                 01199500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        01199600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01199700
.ZG1303A              ANOP  ,                                           01199800
.*-------------------------------------------------------------------   01199900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     01200000
                      AIF   (N'&SYSLIST NE 0).ZG1303B  POSITIONALS?     01200100
                      AIF   ('&CONTOKEN' NE '').ZG1303B  KEYS?          01200200
                      AIF   ('&REQID' NE '').ZG1303B  KEYS?             01200300
                      AIF   ('&REQUEST' NE '').ZG1303B  KEYS?           01200400
                      AIF   ('&TYPE' NE '').ZG1303B  KEYS?              01200500
                      AIF   ('&ADJAREA' NE '').ZG1303B  KEYS?           01200600
                      AIF   ('&DIRECTION' NE '').ZG1303B  KEYS?         01200700
                      AIF   ('&LOCATOR' NE '').ZG1303B  KEYS?           01200800
                      AIF   ('&LISTNUM' NE '').ZG1303B  KEYS?           01200900
                      AIF   ('&KEYSCANTYPE' NE '').ZG1303B  KEYS?       01201000
                      AIF   ('&AUTHCOMPARE' NE '').ZG1303B  KEYS?       01201100
                      AIF   ('&AUTHCOMP' NE '').ZG1303B  KEYS?          01201200
                      AIF   ('&AUTHCOMPTYPE' NE '').ZG1303B  KEYS?      01201300
                      AIF   ('&KEYCOMPARE' NE '').ZG1303B  KEYS?        01201400
                      AIF   ('&ENTRYKEY' NE '').ZG1303B  KEYS?          01201500
                      AIF   ('&KEYREQTYPE' NE '').ZG1303B  KEYS?        01201600
                      AIF   ('&KEYRANGEEND' NE '').ZG1303B  KEYS?       01201700
                      AIF   ('&SKEYCOMPARE' NE '').ZG1303B  KEYS?       01201800
                      AIF   ('&SECONDARYKEY' NE '').ZG1303B  KEYS?      01201900
                      AIF   ('&SKEYREQTYPE' NE '').ZG1303B  KEYS?       01202000
                      AIF   ('&SKEYRANGEEND' NE '').ZG1303B  KEYS?      01202100
                      AIF   ('&ENTRYID' NE '').ZG1303B  KEYS?           01202200
                      AIF   ('&LISTCOMPARE' NE '').ZG1303B  KEYS?       01202300
                      AIF   ('&ENTRYNAME' NE '').ZG1303B  KEYS?         01202400
                      AIF   ('&KEYTYPE' NE '').ZG1303B  KEYS?           01202500
                      AIF   ('&VERSCOMPARE' NE '').ZG1303B  KEYS?       01202600
                      AIF   ('&VERSCOMP' NE '').ZG1303B  KEYS?          01202700
                      AIF   ('&VERSCOMPTYPE' NE '').ZG1303B  KEYS?      01202800
                      AIF   ('&BUFLIST' NE '').ZG1303B  KEYS?           01202900
                      AIF   ('&BUFADDRTYPE' NE '').ZG1303B  KEYS?       01203000
                      AIF   ('&PAGEABLE' NE '').ZG1303B  KEYS?          01203100
                      AIF   ('&BUFSTGKEY' NE '').ZG1303B  KEYS?         01203200
                      AIF   ('&BUFALET' NE '').ZG1303B  KEYS?           01203300
                      AIF   ('&BUFADDRSIZE' NE '').ZG1303B  KEYS?       01203400
                      AIF   ('&BUFNUM' NE '').ZG1303B  KEYS?            01203500
                      AIF   ('&BUFFER' NE '').ZG1303B  KEYS?            01203600
                      AIF   ('&BUFSIZE' NE '').ZG1303B  KEYS?           01203700
                      AIF   ('&RESTOKEN' NE '').ZG1303B  KEYS?          01203800
                      AIF   ('&EXTRESTOKEN' NE '').ZG1303B  KEYS?       01203900
                      AIF   ('&FIRSTELEM' NE '').ZG1303B  KEYS?         01204000
                      AIF   ('&LASTELEM' NE '').ZG1303B  KEYS?          01204100
                      AIF   ('&MISCOMPARE' NE '').ZG1303B  KEYS?        01204200
                      AIF   ('&LISTTYPE' NE '').ZG1303B  KEYS?          01204300
                      AIF   ('&MOVETOKEY' NE '').ZG1303B  KEYS?         01204400
                      AIF   ('&LISTKEYINC' NE '').ZG1303B  KEYS?        01204500
                      AIF   ('&LISTKEYAREA' NE '').ZG1303B  KEYS?       01204600
                      AIF   ('&MOVETOSKEY' NE '').ZG1303B  KEYS?        01204700
                      AIF   ('&BUFINCRNUM' NE '').ZG1303B  KEYS?        01204800
                      AIF   ('&LOCKINDEX' NE '').ZG1303B  KEYS?         01204900
                      AIF   ('&LOCKOPER' NE '').ZG1303B  KEYS?          01205000
                      AIF   ('&LOCKCOMP' NE '').ZG1303B  KEYS?          01205100
                      AIF   ('&MODE' NE '').ZG1303B  KEYS?              01205200
                      AIF   ('&ANSAREA' NE '').ZG1303B  KEYS?           01205300
                      AIF   ('&ANSLEN' NE '').ZG1303B  KEYS?            01205400
                      AIF   ('&REQECB' NE '').ZG1303B  KEYS?            01205500
                      AIF   ('&REQDATA' NE '').ZG1303B  KEYS?           01205600
                      AIF   ('&REQTOKEN' NE '').ZG1303B  KEYS?          01205700
                      AIF   ('&RETCODE' NE '').ZG1303B  KEYS?           01205800
                      AIF   ('&RSNCODE' NE '').ZG1303B  KEYS?           01205900
                      AGO    .ZG1303C   INVOCATION OKAY                 01206000
.ZG1303B              ANOP  ,                                           01206100
&ZMS                  SETC  'THE "L" FORM OF "MF"'                      01206200
&ZMS                  SETC  '&ZMS CAN ONLY HAVE'                        01206300
&ZMS                  SETC  '&ZMS THE "PLISTVER" KEY'                   01206400
                      MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'      01206500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01206600
.ZG1303C              ANOP  ,                                           01206700
.*-------------------------------------------------------------------   01206800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01206900
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   01207000
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   01207100
                      AIF   (N'&MF(2) GT 1).ZG1305B  MULTI              01207200
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   01207300
.ZG1305B              AIF   (K'&MF(2) GT 0).ZG1305C                     01207400
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 01207500
&ZMS                  SETC  'WHEN "L" IS SPECIFIED'                     01207600
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         01207700
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                01207800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01207900
.ZG1305C              ANOP  ,                                           01208000
.*-------------------------------------------------------------------   01208100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               01208200
                      AIF   (K'&ZXMFCTRL LE 0).ZG1305P  NOT I/O         01208300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG1305P            01208400
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 01208500
&ZMS                  SETC  '"MF='                                      01208600
&ZMS                  SETC  '&ZMS.&MF"'                                 01208700
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   01208800
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'           01208900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01209000
.ZG1305P              ANOP  ,                                           01209100
.*-------------------------------------------------------------------   01209200
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      01209300
&ZXMFATTR             SETC  'INPUT'     SET IN/OUTPUT                   01209400
&XMFATTR              SETC  '0D'                                        01209500
                      AIF   (K'&MF(3) LE 0).ZG1308B  PARM               01209600
&XMFATTR              SETC  '&MF(3,1)'  SET XVARIABLE                   01209700
                      AIF   (N'&MF(3) GT 1).ZG1308B  MULTI              01209800
&XMFATTR              SETC  '&MF(3)'    SET XVARIABLE                   01209900
.ZG1308B              ANOP  ,                                           01210000
.*-------------------------------------------------------------------   01210100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  01210200
                      AIF   (K'&ZXMFATTR LE 0).ZG1308P  NOT I/O         01210300
                      AIF   ('&XMFATTR'(1,1) NE '(').ZG1308P            01210400
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 01210500
&ZMS                  SETC  '"MF='                                      01210600
&ZMS                  SETC  '&ZMS.&MF"'                                 01210700
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   01210800
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'           01210900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01211000
.ZG1308P              ANOP  ,                                           01211100
.*-------------------------------------------------------------------   01211200
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 01211300
                      AIF   (K'&ZXMFATTR LE 0).ZG1308S  NOT I/O         01211400
                      AIF   (K'&XMFATTR LE 60).ZG1308S  LNG OK          01211500
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 01211600
&ZMS                  SETC  '"MF='                                      01211700
&ZMS                  SETC  '&ZMS.&MF"'                                 01211800
&ZMS                  SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'       01211900
                      MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'          01212000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01212100
.ZG1308S              ANOP  ,                                           01212200
.*-------------------------------------------------------------------   01212300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01212400
.ZG1310               ANOP  ,                                           01212500
&ZTLC                 SETC 'E'                                          01212600
                      AIF   ('&MF(1)' NE '&ZTLC').ZG1318                01212700
&XMF                  SETC  'E'         SET KEYWORD                     01212800
                      AIF   (N'&MF LE 3).ZG1310A  CK NUM                01212900
&ZMS                  SETC  '"MF='                                      01213000
&ZMS                  SETC  '&ZMS.&MF"'                                 01213100
&ZMS                  SETC  '&ZMS "MF"'                                 01213200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        01213300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01213400
.ZG1310A              ANOP  ,                                           01213500
.*-------------------------------------------------------------------   01213600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01213700
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   01213800
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   01213900
                      AIF   (N'&MF(2) GT 1).ZG1312B  MULTI              01214000
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   01214100
.ZG1312B              AIF   (K'&MF(2) GT 0).ZG1312C                     01214200
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 01214300
&ZMS                  SETC  'WHEN "E" IS SPECIFIED'                     01214400
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         01214500
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                01214600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01214700
.ZG1312C              ANOP  ,                                           01214800
.*-------------------------------------------------------------------   01214900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              01215000
                      AIF   (K'&ZXMFCTRL LE 0).ZG1312R  NOT I/O         01215100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG1312R            01215200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                  01215300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1312P              01215400
                      AIF   (K'&ZCGPR GT 2).ZG1312Q                     01215500
                      AIF   ('&ZCGPR' EQ '0').ZG1312Q                   01215600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01215700
                      AIF   (T'&ZCGPR NE 'N').ZG1312Q  INVALID REG NAME 01215800
.ZG1312P              ANOP  ,                                           01215900
                      AIF   (T'&ZCGPR NE 'N').ZG1312R  NON NUMERIC      01216000
                      AIF   ('&ZCGPR' LT '1').ZG1312Q                   01216100
                      AIF   ('&ZCGPR' LE '12').ZG1312R                  01216200
.ZG1312Q              ANOP  ,                                           01216300
&ZMS                  SETC  '"MF='                                      01216400
&ZMS                  SETC  '&ZMS.&MF"'                                 01216500
&ZMS                  SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'   01216600
                      MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'            01216700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01216800
.ZG1312R              ANOP  ,                                           01216900
.*-------------------------------------------------------------------   01217000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01217100
&XMFSCK               SETC  ''          INITIALIZE XVARIABLE            01217200
.ZG1316A   AIF   ('&MF(3)' NE 'COMPLETE').ZG1317A                       01217300
&XMFSCK               SETC  'COMPLETE'  SET KEYWORD                     01217400
.*-------------------------------------------------------------------   01217500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01217600
.ZG1317A              AIF   (K'&XMFSCK GT 0).ZG1317C  KEYWORD           01217700
                      AIF   (K'&MF(3) LE 0).ZG1317B                     01217800
&ZMS                  SETC  '"MF='                                      01217900
&ZMS                  SETC  '&ZMS.&MF"'                                 01218000
&ZMS                  SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '   01218100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01218200
&ZMS                  SETC  '&ZMS "COMPLETE".'                          01218300
                      MNOTE 8,' &ZMS '                                  01218400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01218500
.ZG1317B              ANOP  ,                                           01218600
&XMFSCK               SETC  'COMPLETE'  SET DEFAULT KEYWORD             01218700
.ZG1317C              ANOP  ,                                           01218800
&ZXMFSCK              SETC  'INPUT'     SET IN/OUTPUT                   01218900
.*------------------------------------------------------------------    01219000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01219100
.ZG1318               ANOP  ,                                           01219200
&ZXMF                 SETC  'INPUT'     SET IN/OUTPUT                   01219300
                      AIF   (K'&XMF GT 0).ZG1318E  VALID ARG            01219400
                      AIF   (T'&MF EQ 'O').ZG1318D  OMITTED             01219500
&ZASYSLNDX            SETA  0                                           01219600
.ZG1318A              ANOP  ,           POSITIONAL MACRO KEY            01219700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01219800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1318C          01219900
&ZTLC                 SETC 'MF'                                         01220000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1318A 01220100
.ZG1318B              ANOP  ,                                           01220200
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 01220300
&ZMS                  SETC  'THE "MF" KEY'                              01220400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01220500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01220600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01220700
                      AGO   .ZG1318E                                    01220800
.ZG1318C              ANOP  ,                                           01220900
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 01221000
&ZMS                  SETC  '"MF='                                      01221100
&ZMS                  SETC  '&ZMS.&MF"'                                 01221200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01221300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01221400
&ZMS                  SETC  '&ZMS "S",'                                 01221500
&ZMS                  SETC  '&ZMS "L",'                                 01221600
&ZMS                  SETC  '&ZMS OR "E".'                              01221700
                      MNOTE 8,' &ZMS '                                  01221800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01221900
                      AGO   .ZG1318E                                    01222000
.ZG1318D              ANOP  ,                                           01222100
&XMF                  SETC  'S'         SET DEFAULT KEYWORD             01222200
&XMFSCK               SETC  'COMPLETE'  COMPLETE CHECKING               01222300
.ZG1318E              ANOP  ,                                           01222400
.********************************************************************   01222500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 01222600
.********************************************************************   01222700
                      ACTR  10000                                       01222800
.*-------------------------------------------------------------------   01222900
.***AG.MF03 MF=(SLE)                                                    01223000
                      AIF   ('&XMF' EQ 'L').ZGMFX                       01223100
.*----------------------------------------------------------------***   01223200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01223300
                      AIF   (N'&CONTOKEN LE 1).ZG2A  CK NUM             01223400
&ZMS                  SETC  '"CONTOKEN='                                01223500
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           01223600
&ZMS                  SETC  '&ZMS "CONTOKEN"'                           01223700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01223800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01223900
.ZG2A                 ANOP  ,                                           01224000
.*-------------------------------------------------------------------   01224100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01224200
&ZXCONTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   01224300
&XCONTOKEN            SETC  '&CONTOKEN(1)'      SET XVARIABLE           01224400
                      AIF   (N'&CONTOKEN GT 1).ZG2B  MULTI              01224500
&XCONTOKEN            SETC  '&CONTOKEN'         SET XVARIABLE           01224600
.ZG2B                 AIF   (K'&CONTOKEN(1) GT 0).ZG2C                  01224700
&ZXCONTOKEN           SETC  ''          RESET IN/OUTPUT                 01224800
&ZMS                  SETC  ' '                                         01224900
&ZMS                  SETC  '&ZMS "CONTOKEN" KEY AND ITS'               01225000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01225100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01225200
.ZG2C                 ANOP  ,                                           01225300
.*-------------------------------------------------------------------   01225400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01225500
                      AIF   (K'&ZXCONTOKEN LE 0).ZG2R  NOT I/O          01225600
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R             01225700
&ZCGPR                SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)              01225800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                 01225900
                      AIF   (K'&ZCGPR GT 2).ZG2Q                        01226000
                      AIF   ('&ZCGPR' EQ '0').ZG2Q                      01226100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01226200
                      AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME    01226300
.ZG2P                 ANOP  ,                                           01226400
                      AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC         01226500
                      AIF   ('&ZCGPR' LT '2').ZG2Q                      01226600
                      AIF   ('&ZCGPR' LE '12').ZG2R                     01226700
.ZG2Q                 ANOP  ,                                           01226800
&ZMS                  SETC  '"CONTOKEN='                                01226900
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           01227000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01227100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01227200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01227300
.ZG2R                 ANOP  ,                                           01227400
.*----------------------------------------------------------------***   01227500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01227600
                      AIF   (N'&REQID LE 1).ZG5A  CK NUM                01227700
&ZMS                  SETC  '"REQID='                                   01227800
&ZMS                  SETC  '&ZMS.&REQID"'                              01227900
&ZMS                  SETC  '&ZMS "REQID"'                              01228000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01228100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01228200
.ZG5A                 ANOP  ,                                           01228300
.*-------------------------------------------------------------------   01228400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01228500
&ZXREQID              SETC  'INPUT'     SET IN/OUTPUT                   01228600
&XREQID               SETC  'NO_REQID'                                  01228700
                      AIF   (K'&REQID(1) LE 0).ZG5B  PARM               01228800
&XREQID               SETC  '&REQID(1)'         SET XVARIABLE           01228900
                      AIF   (N'&REQID GT 1).ZG5B  MULTI                 01229000
&XREQID               SETC  '&REQID'    SET XVARIABLE                   01229100
.ZG5B                 ANOP  ,                                           01229200
.*-------------------------------------------------------------------   01229300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01229400
                      AIF   (K'&ZXREQID LE 0).ZG5R  NOT I/O             01229500
         AIF   ('&XREQID' EQ 'NO_REQID').ZG5R                           01229600
                      AIF   ('&XREQID'(1,1) NE '(').ZG5R                01229700
&ZCGPR                SETC  '&XREQID'(2,K'&XREQID-2)                    01229800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                 01229900
                      AIF   (K'&ZCGPR GT 2).ZG5Q                        01230000
                      AIF   ('&ZCGPR' EQ '0').ZG5Q                      01230100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01230200
                      AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME    01230300
.ZG5P                 ANOP  ,                                           01230400
                      AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC         01230500
                      AIF   ('&ZCGPR' LT '2').ZG5Q                      01230600
                      AIF   ('&ZCGPR' LE '12').ZG5R                     01230700
.ZG5Q                 ANOP  ,                                           01230800
&ZMS                  SETC  '"REQID='                                   01230900
&ZMS                  SETC  '&ZMS.&REQID"'                              01231000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01231100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01231200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01231300
.ZG5R                 ANOP  ,                                           01231400
.*------------------------------------------------------------------    01231500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01231600
&XREQUEST             SETC  ''          INITIALIZE XVARIABLE            01231700
.*-------------------------------------------------------------------   01231800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01231900
.ZG9                  ANOP  ,                                           01232000
                      AIF   (K'&REQUEST(1) LE 0).ZG9A                   01232100
&ZTLC                 SETC 'READ_LIST'                                  01232200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG390            01232300
&XREQUEST             SETC  'READ_LIST'         SET KEYWORD             01232400
                      AIF   (N'&REQUEST LE 1).ZG9A  CK NUM              01232500
&ZMS                  SETC  '"REQUEST='                                 01232600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01232700
&ZMS                  SETC  '&ZMS "REQUEST"'                            01232800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01232900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01233000
.ZG9A                 ANOP  ,                                           01233100
.*------------------------------------------------------------------    01233200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01233300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01233400
.ZG9A0                AIF   (K'&RESTOKEN LE 0).ZG9A1  OK                01233500
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      01233600
.ZG9A1                AIF   (K'&EXTRESTOKEN LE 0).ZG9A2  OK             01233700
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     01233800
.ZG9A2                AIF   (K'&FIRSTELEM LE 0).ZG9A3  OK               01233900
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      01234000
.ZG9A3                AIF   (K'&LASTELEM LE 0).ZG9A4  OK                01234100
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      01234200
.ZG9A4                AIF   (K'&MISCOMPARE LE 0).ZG9A5  OK              01234300
&ZCVAL                SETC '&ZCVAL MISCOMPARE'  INCORRECT KEY USED      01234400
.ZG9A5                AIF   (K'&LISTTYPE LE 0).ZG9A6  OK                01234500
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      01234600
.ZG9A6                AIF   (K'&MOVETOKEY LE 0).ZG9A7  OK               01234700
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      01234800
.ZG9A7                AIF   (K'&LISTKEYINC LE 0).ZG9A8  OK              01234900
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      01235000
.ZG9A8                AIF   (K'&LISTKEYAREA LE 0).ZG9A9  OK             01235100
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     01235200
.ZG9A9                AIF   (K'&MOVETOSKEY LE 0).ZG9A10  OK             01235300
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      01235400
.ZG9A10               AIF   (K'&BUFINCRNUM LE 0).ZG9A11  OK             01235500
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      01235600
.ZG9A11               AIF   (K'&ZCVAL LE 0).ZG9A12  OK                  01235700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01235800
&ZMS                  SETC  '"REQUEST'                                  01235900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01236000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01236100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01236200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01236300
.ZG9A12               ANOP  ,                                           01236400
.*-------------------------------------------------------------------   01236500
.***AG.KKWRD07 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          01236600
&ZI                   SETA  0           XVARIABLE ARRAY INDEX           01236700
&ZJ                   SETA  0           SUBLIST INDEX                   01236800
.ZG11A                ANOP  ,                                           01236900
&ZJ                   SETA  &ZJ+1       NEXT SUBLIST                    01237000
                      AIF   (&ZJ GT N'&TYPE).ZG11C  DONE                01237100
                      AIF   (K'&TYPE(&ZJ) LE 0).ZG11A  NULL             01237200
&ZI                   SETA  &ZI+1       NEXT ARRAY ENTRY                01237300
&XTYPE(&ZI)   SETC  ''                  NULL ENTRY                      01237400
&XTYPE(&ZI+1) SETC  ''                  NULL AT ARRAY END               01237500
.ZG12B  AIF   ('&TYPE(&ZJ)' NE 'ENTDATA').ZG13B                         01237600
&XTYPE(&ZI)   SETC  'ENTDATA'           SET KEYWORD                     01237700
.ZG13B  AIF   ('&TYPE(&ZJ)' NE 'ADJDATA').ZG14B                         01237800
&XTYPE(&ZI)   SETC  'ADJDATA'           SET KEYWORD                     01237900
.ZG14B  AIF   ('&TYPE(&ZJ)' NE 'ECONTROLS').ZG15B                       01238000
&XTYPE(&ZI)   SETC  'ECONTROLS'         SET KEYWORD                     01238100
.ZG15B                AIF   ('&XTYPE(&ZI)' NE '').ZG11A                 01238200
&ZI                   SETA  &ZI-1       BACKUP ARRAY                    01238300
&ZMS                  SETC  '"TYPE='                                    01238400
&ZMS                  SETC  '&ZMS.&TYPE"'                               01238500
&ZMS                  SETC  '&ZMS ARGUMENT &ZJ'                         01238600
&ZMS                  SETC  '&ZMS IS AN UNKNOWN KEYWORD. '              01238700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01238800
&ZMS                  SETC  '&ZMS "ENTDATA",'                           01238900
&ZMS                  SETC  '&ZMS "ADJDATA",'                           01239000
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      01239100
                      MNOTE 8,' &ZMS '                                  01239200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01239300
                      AGO   .ZG11A                                      01239400
.*-------------------------------------------------------------------   01239500
.***AG.KKWRD09 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          01239600
.ZG11C                AIF   (&ZI GT 0).ZG11D    VALID                   01239700
&ZXTYPE               SETC  ''          RESET IN/OUTPUT                 01239800
&XTYPE(1)  SETC  'ENTDATA'              SET DEFAULT KEYWORD             01239900
&XTYPE(2)  SETC  ''   NULL AT ARRAY END                                 01240000
&ZMS                  SETC  'THE'                                       01240100
&ZMS                  SETC  '&ZMS "TYPE" KEY AND ITS'                   01240200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01240300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01240400
&ZMS                  SETC  '&ZMS "ENTDATA",'                           01240500
&ZMS                  SETC  '&ZMS "ADJDATA",'                           01240600
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      01240700
                      MNOTE 8,' &ZMS '                                  01240800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01240900
.ZG11D                ANOP  ,                                           01241000
.*----------------------------------------------------------------***   01241100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01241200
                      AIF   (N'&ADJAREA LE 1).ZG17A  CK NUM             01241300
&ZMS                  SETC  '"ADJAREA='                                 01241400
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            01241500
&ZMS                  SETC  '&ZMS "ADJAREA"'                            01241600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01241700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01241800
.ZG17A                ANOP  ,                                           01241900
.*-------------------------------------------------------------------   01242000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01242100
&ZXADJAREA            SETC  'INPUT'     SET IN/OUTPUT                   01242200
&XADJAREA             SETC  'NO_ADJAREA'                                01242300
                      AIF   (K'&ADJAREA(1) LE 0).ZG17B  PARM            01242400
&XADJAREA             SETC  '&ADJAREA(1)'       SET XVARIABLE           01242500
                      AIF   (N'&ADJAREA GT 1).ZG17B  MULTI              01242600
&XADJAREA             SETC  '&ADJAREA'  SET XVARIABLE                   01242700
.ZG17B                ANOP  ,                                           01242800
.*-------------------------------------------------------------------   01242900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01243000
                      AIF   (K'&ZXADJAREA LE 0).ZG17R  NOT I/O          01243100
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA').ZG17R                      01243200
                      AIF   ('&XADJAREA'(1,1) NE '(').ZG17R             01243300
&ZCGPR                SETC  '&XADJAREA'(2,K'&XADJAREA-2)                01243400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                01243500
                      AIF   (K'&ZCGPR GT 2).ZG17Q                       01243600
                      AIF   ('&ZCGPR' EQ '0').ZG17Q                     01243700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01243800
                      AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME   01243900
.ZG17P                ANOP  ,                                           01244000
                      AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC        01244100
                      AIF   ('&ZCGPR' LT '2').ZG17Q                     01244200
                      AIF   ('&ZCGPR' LE '12').ZG17R                    01244300
.ZG17Q                ANOP  ,                                           01244400
&ZMS                  SETC  '"ADJAREA='                                 01244500
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            01244600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01244700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01244800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01244900
.ZG17R                ANOP  ,                                           01245000
.*----------------------------------------------------------------***   01245100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01245200
                      AIF   (N'&DIRECTION LE 1).ZG20A  CK NUM           01245300
&ZMS                  SETC  '"DIRECTION='                               01245400
&ZMS                  SETC  '&ZMS.&DIRECTION"'                          01245500
&ZMS                  SETC  '&ZMS "DIRECTION"'                          01245600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01245700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01245800
.ZG20A                ANOP  ,                                           01245900
.*-------------------------------------------------------------------   01246000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01246100
&XDIRECTION           SETC  ''          INITIALIZE XVARIABLE            01246200
.ZG21A   AIF   ('&DIRECTION(1)' NE 'HEADTOTAIL').ZG22A                  01246300
&XDIRECTION           SETC  'HEADTOTAIL'        SET KEYWORD             01246400
.*-------------------------------------------------------------------   01246500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01246600
.ZG22A   AIF   ('&DIRECTION(1)' NE 'TAILTOHEAD').ZG23A                  01246700
&XDIRECTION           SETC  'TAILTOHEAD'        SET KEYWORD             01246800
.*-------------------------------------------------------------------   01246900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01247000
.ZG23A                AIF   (K'&XDIRECTION GT 0).ZG23C  KEYWORD         01247100
                      AIF   (K'&DIRECTION(1) LE 0).ZG23B                01247200
&ZMS                  SETC  '"DIRECTION='                               01247300
&ZMS                  SETC  '&ZMS.&DIRECTION"'                          01247400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01247500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01247600
&ZMS                  SETC  '&ZMS "HEADTOTAIL"'                         01247700
&ZMS                  SETC  '&ZMS OR "TAILTOHEAD".'                     01247800
                      MNOTE 8,' &ZMS '                                  01247900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01248000
.ZG23B                ANOP  ,                                           01248100
&XDIRECTION           SETC  'HEADTOTAIL'        SET DEFAULT KEYWORD     01248200
.ZG23C                ANOP  ,                                           01248300
&ZXDIRECTION          SETC  'INPUT'     SET IN/OUTPUT                   01248400
.*------------------------------------------------------------------    01248500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01248600
&XLOCATOR             SETC  ''          INITIALIZE XVARIABLE            01248700
.*-------------------------------------------------------------------   01248800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01248900
.ZG26                 ANOP  ,                                           01249000
                      AIF   (K'&LOCATOR(1) LE 0).ZG26A                  01249100
&ZTLC                 SETC 'CURSOR'                                     01249200
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG84             01249300
&XLOCATOR             SETC  'CURSOR'    SET KEYWORD                     01249400
                      AIF   (N'&LOCATOR LE 1).ZG26A  CK NUM             01249500
&ZMS                  SETC  '"LOCATOR='                                 01249600
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01249700
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01249800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01249900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01250000
.ZG26A                ANOP  ,                                           01250100
.*------------------------------------------------------------------    01250200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01250300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01250400
.ZG26A0               AIF   (K'&ENTRYID LE 0).ZG26A1  OK                01250500
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01250600
.ZG26A1               AIF   (K'&LISTCOMPARE LE 0).ZG26A2  OK            01250700
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     01250800
.ZG26A2               AIF   (K'&ENTRYNAME LE 0).ZG26A3  OK              01250900
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01251000
.ZG26A3               AIF   (K'&KEYTYPE LE 0).ZG26A4  OK                01251100
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01251200
.ZG26A4               AIF   (K'&ZCVAL LE 0).ZG26A5  OK                  01251300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01251400
&ZMS                  SETC  '"LOCATOR'                                  01251500
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01251600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01251700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01251800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01251900
.ZG26A5               ANOP  ,                                           01252000
.*----------------------------------------------------------------***   01252100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01252200
                      AIF   (N'&LISTNUM LE 1).ZG28A  CK NUM             01252300
&ZMS                  SETC  '"LISTNUM='                                 01252400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01252500
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01252600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01252700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01252800
.ZG28A                ANOP  ,                                           01252900
.*-------------------------------------------------------------------   01253000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01253100
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01253200
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01253300
                      AIF   (N'&LISTNUM GT 1).ZG28B  MULTI              01253400
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01253500
.ZG28B                AIF   (K'&LISTNUM(1) GT 0).ZG28C                  01253600
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01253700
&ZMS                  SETC  ' '                                         01253800
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01253900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01254000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01254100
.ZG28C                ANOP  ,                                           01254200
.*-------------------------------------------------------------------   01254300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01254400
                      AIF   (K'&ZXLISTNUM LE 0).ZG28R  NOT I/O          01254500
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG28R             01254600
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01254700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                01254800
                      AIF   (K'&ZCGPR GT 2).ZG28Q                       01254900
                      AIF   ('&ZCGPR' EQ '0').ZG28Q                     01255000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01255100
                      AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME   01255200
.ZG28P                ANOP  ,                                           01255300
                      AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC        01255400
                      AIF   ('&ZCGPR' LT '2').ZG28Q                     01255500
                      AIF   ('&ZCGPR' LE '12').ZG28R                    01255600
.ZG28Q                ANOP  ,                                           01255700
&ZMS                  SETC  '"LISTNUM='                                 01255800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01255900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01256000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01256100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01256200
.ZG28R                ANOP  ,                                           01256300
.*----------------------------------------------------------------***   01256400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01256500
                      AIF   (N'&KEYSCANTYPE LE 1).ZG31A  CK NUM         01256600
&ZMS                  SETC  '"KEYSCANTYPE='                             01256700
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01256800
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01256900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01257000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01257100
.ZG31A                ANOP  ,                                           01257200
.*-------------------------------------------------------------------   01257300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01257400
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01257500
.ZG32A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG33A                     01257600
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01257700
.*-------------------------------------------------------------------   01257800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01257900
.ZG33A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG34A                 01258000
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01258100
.*-------------------------------------------------------------------   01258200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01258300
.ZG34A                AIF   (K'&XKEYSCANTYPE GT 0).ZG34C  KEYWORD       01258400
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG34B              01258500
&ZMS                  SETC  '"KEYSCANTYPE='                             01258600
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01258700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01258800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01258900
&ZMS                  SETC  '&ZMS "ENTRY"'                              01259000
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01259100
                      MNOTE 8,' &ZMS '                                  01259200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01259300
.ZG34B                ANOP  ,                                           01259400
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01259500
.ZG34C                ANOP  ,                                           01259600
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01259700
.*------------------------------------------------------------------    01259800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01259900
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01260000
.*-------------------------------------------------------------------   01260100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01260200
.ZG37                 ANOP  ,                                           01260300
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG37A              01260400
&ZTLC                 SETC 'NO'                                         01260500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG38         01260600
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01260700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG37A  CK NUM         01260800
&ZMS                  SETC  '"AUTHCOMPARE='                             01260900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01261000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01261100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01261200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01261300
.ZG37A                ANOP  ,                                           01261400
.*------------------------------------------------------------------    01261500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01261600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01261700
.ZG37A0               AIF   (K'&AUTHCOMP LE 0).ZG37A1  OK               01261800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01261900
.ZG37A1               AIF   (K'&AUTHCOMPTYPE LE 0).ZG37A2  OK           01262000
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01262100
.ZG37A2               AIF   (K'&ZCVAL LE 0).ZG37A3  OK                  01262200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01262300
&ZMS                  SETC  '"AUTHCOMPARE'                              01262400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01262500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01262600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01262700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01262800
.ZG37A3               ANOP  ,                                           01262900
.*-------------------------------------------------------------------   01263000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01263100
.ZG38                 ANOP  ,                                           01263200
&ZTLC                 SETC 'YES'                                        01263300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG47         01263400
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01263500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG38A  CK NUM         01263600
&ZMS                  SETC  '"AUTHCOMPARE='                             01263700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01263800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01263900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01264000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01264100
.ZG38A                ANOP  ,                                           01264200
.*----------------------------------------------------------------***   01264300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01264400
                      AIF   (N'&AUTHCOMP LE 1).ZG40A  CK NUM            01264500
&ZMS                  SETC  '"AUTHCOMP='                                01264600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01264700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01264800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01264900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01265000
.ZG40A                ANOP  ,                                           01265100
.*-------------------------------------------------------------------   01265200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01265300
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01265400
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01265500
                      AIF   (N'&AUTHCOMP GT 1).ZG40B  MULTI             01265600
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01265700
.ZG40B                AIF   (K'&AUTHCOMP(1) GT 0).ZG40C                 01265800
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01265900
&ZMS                  SETC  ' '                                         01266000
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01266100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01266200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01266300
.ZG40C                ANOP  ,                                           01266400
.*-------------------------------------------------------------------   01266500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01266600
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG40R  NOT I/O         01266700
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG40R            01266800
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01266900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                01267000
                      AIF   (K'&ZCGPR GT 2).ZG40Q                       01267100
                      AIF   ('&ZCGPR' EQ '0').ZG40Q                     01267200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01267300
                      AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME   01267400
.ZG40P                ANOP  ,                                           01267500
                      AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC        01267600
                      AIF   ('&ZCGPR' LT '2').ZG40Q                     01267700
                      AIF   ('&ZCGPR' LE '12').ZG40R                    01267800
.ZG40Q                ANOP  ,                                           01267900
&ZMS                  SETC  '"AUTHCOMP='                                01268000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01268100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01268200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01268300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01268400
.ZG40R                ANOP  ,                                           01268500
.*----------------------------------------------------------------***   01268600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01268700
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG42A  CK NUM        01268800
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01268900
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01269000
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01269100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01269200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01269300
.ZG42A                ANOP  ,                                           01269400
.*-------------------------------------------------------------------   01269500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01269600
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01269700
.ZG43A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG44A                    01269800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01269900
.*-------------------------------------------------------------------   01270000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01270100
.ZG44A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG45A              01270200
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01270300
.*-------------------------------------------------------------------   01270400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01270500
.ZG45A                AIF   (K'&XAUTHCOMPTYPE GT 0).ZG45C  KEYWORD      01270600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG45B             01270700
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01270800
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01270900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01271000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01271100
&ZMS                  SETC  '&ZMS "EQUAL"'                              01271200
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01271300
                      MNOTE 8,' &ZMS '                                  01271400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01271500
.ZG45B                ANOP  ,                                           01271600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01271700
.ZG45C                ANOP  ,                                           01271800
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01271900
.*-------------------------------------------------------------------   01272000
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01272100
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG45D  KEY            01272200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG45D  PARM       01272300
&ZMS                  SETC  '"AUTHCOMPTYPE'                             01272400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01272500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01272600
&ZMS                  SETC  '&ZMS '                                     01272700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01272800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01272900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01273000
.ZG45D                ANOP  ,                                           01273100
.*------------------------------------------------------------------    01273200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01273300
.ZG47                 ANOP  ,                                           01273400
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01273500
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG47E  VALID ARG     01273600
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG47D  OMITTED      01273700
&ZASYSLNDX            SETA  0                                           01273800
.ZG47A                ANOP  ,           POSITIONAL MACRO KEY            01273900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01274000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG47C            01274100
&ZTLC                 SETC 'AUTHCOMPARE'                                01274200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG47A   01274300
.ZG47B                ANOP  ,                                           01274400
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01274500
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     01274600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01274700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01274800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01274900
                      AGO   .ZG47E                                      01275000
.ZG47C                ANOP  ,                                           01275100
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01275200
&ZMS                  SETC  '"AUTHCOMPARE='                             01275300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01275400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01275500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01275600
&ZMS                  SETC  '&ZMS "NO"'                                 01275700
&ZMS                  SETC  '&ZMS OR "YES".'                            01275800
                      MNOTE 8,' &ZMS '                                  01275900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01276000
                      AGO   .ZG47E                                      01276100
.ZG47D                ANOP  ,                                           01276200
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01276300
.ZG47E                ANOP  ,                                           01276400
.*------------------------------------------------------------------    01276500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01276600
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01276700
.*-------------------------------------------------------------------   01276800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01276900
.ZG50                 ANOP  ,                                           01277000
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG50A               01277100
&ZTLC                 SETC 'NO'                                         01277200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG51          01277300
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01277400
                      AIF   (N'&KEYCOMPARE LE 1).ZG50A  CK NUM          01277500
&ZMS                  SETC  '"KEYCOMPARE='                              01277600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01277700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01277800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01277900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01278000
.ZG50A                ANOP  ,                                           01278100
.*------------------------------------------------------------------    01278200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01278300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01278400
.ZG50A0               AIF   (K'&ENTRYKEY LE 0).ZG50A1  OK               01278500
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01278600
.ZG50A1               AIF   (K'&KEYREQTYPE LE 0).ZG50A2  OK             01278700
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01278800
.ZG50A2               AIF   (K'&KEYRANGEEND LE 0).ZG50A3  OK            01278900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01279000
.ZG50A3               AIF   (K'&ZCVAL LE 0).ZG50A4  OK                  01279100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01279200
&ZMS                  SETC  '"KEYCOMPARE'                               01279300
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01279400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01279500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01279600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01279700
.ZG50A4               ANOP  ,                                           01279800
.*-------------------------------------------------------------------   01279900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01280000
.ZG51                 ANOP  ,                                           01280100
&ZTLC                 SETC 'YES'                                        01280200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG65          01280300
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01280400
                      AIF   (N'&KEYCOMPARE LE 1).ZG51A  CK NUM          01280500
&ZMS                  SETC  '"KEYCOMPARE='                              01280600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01280700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01280800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01280900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01281000
.ZG51A                ANOP  ,                                           01281100
.*----------------------------------------------------------------***   01281200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01281300
                      AIF   (N'&ENTRYKEY LE 1).ZG53A  CK NUM            01281400
&ZMS                  SETC  '"ENTRYKEY='                                01281500
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01281600
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01281700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01281800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01281900
.ZG53A                ANOP  ,                                           01282000
.*-------------------------------------------------------------------   01282100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01282200
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01282300
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01282400
                      AIF   (N'&ENTRYKEY GT 1).ZG53B  MULTI             01282500
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01282600
.ZG53B                AIF   (K'&ENTRYKEY(1) GT 0).ZG53C                 01282700
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01282800
&ZMS                  SETC  ' '                                         01282900
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01283000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01283100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01283200
.ZG53C                ANOP  ,                                           01283300
.*-------------------------------------------------------------------   01283400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01283500
                      AIF   (K'&ZXENTRYKEY LE 0).ZG53R  NOT I/O         01283600
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG53R            01283700
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01283800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                01283900
                      AIF   (K'&ZCGPR GT 2).ZG53Q                       01284000
                      AIF   ('&ZCGPR' EQ '0').ZG53Q                     01284100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01284200
                      AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME   01284300
.ZG53P                ANOP  ,                                           01284400
                      AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC        01284500
                      AIF   ('&ZCGPR' LT '2').ZG53Q                     01284600
                      AIF   ('&ZCGPR' LE '12').ZG53R                    01284700
.ZG53Q                ANOP  ,                                           01284800
&ZMS                  SETC  '"ENTRYKEY='                                01284900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01285000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01285100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01285200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01285300
.ZG53R                ANOP  ,                                           01285400
.*------------------------------------------------------------------    01285500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01285600
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01285700
.*-------------------------------------------------------------------   01285800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01285900
.ZG57                 ANOP  ,                                           01286000
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG57A               01286100
&ZTLC                 SETC 'EQUAL'                                      01286200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG58          01286300
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01286400
                      AIF   (N'&KEYREQTYPE LE 1).ZG57A  CK NUM          01286500
&ZMS                  SETC  '"KEYREQTYPE='                              01286600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01286700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01286800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01286900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01287000
.ZG57A                ANOP  ,                                           01287100
.*------------------------------------------------------------------    01287200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01287300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01287400
.ZG57A0               AIF   (K'&KEYRANGEEND LE 0).ZG57A1  OK            01287500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01287600
.ZG57A1               AIF   (K'&ZCVAL LE 0).ZG57A2  OK                  01287700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01287800
&ZMS                  SETC  '"KEYREQTYPE'                               01287900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01288000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01288100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01288200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01288300
.ZG57A2               ANOP  ,                                           01288400
.*-------------------------------------------------------------------   01288500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01288600
.ZG58                 ANOP  ,                                           01288700
&ZTLC                 SETC 'LESSOREQUAL'                                01288800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG59          01288900
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01289000
                      AIF   (N'&KEYREQTYPE LE 1).ZG58A  CK NUM          01289100
&ZMS                  SETC  '"KEYREQTYPE='                              01289200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01289300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01289400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01289500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01289600
.ZG58A                ANOP  ,                                           01289700
.*------------------------------------------------------------------    01289800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01289900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01290000
.ZG58A0               AIF   (K'&KEYRANGEEND LE 0).ZG58A1  OK            01290100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01290200
.ZG58A1               AIF   (K'&ZCVAL LE 0).ZG58A2  OK                  01290300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01290400
&ZMS                  SETC  '"KEYREQTYPE'                               01290500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01290600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01290700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01290800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01290900
.ZG58A2               ANOP  ,                                           01291000
.*-------------------------------------------------------------------   01291100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01291200
.ZG59                 ANOP  ,                                           01291300
&ZTLC                 SETC 'GREATEROREQUAL'                             01291400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG60          01291500
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01291600
                      AIF   (N'&KEYREQTYPE LE 1).ZG59A  CK NUM          01291700
&ZMS                  SETC  '"KEYREQTYPE='                              01291800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01291900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01292000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01292100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01292200
.ZG59A                ANOP  ,                                           01292300
.*------------------------------------------------------------------    01292400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01292500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01292600
.ZG59A0               AIF   (K'&KEYRANGEEND LE 0).ZG59A1  OK            01292700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01292800
.ZG59A1               AIF   (K'&ZCVAL LE 0).ZG59A2  OK                  01292900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01293000
&ZMS                  SETC  '"KEYREQTYPE'                               01293100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01293200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01293300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01293400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01293500
.ZG59A2               ANOP  ,                                           01293600
.*-------------------------------------------------------------------   01293700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01293800
.ZG60                 ANOP  ,                                           01293900
&ZTLC                 SETC 'RANGE'                                      01294000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG64          01294100
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01294200
                      AIF   (N'&KEYREQTYPE LE 1).ZG60A  CK NUM          01294300
&ZMS                  SETC  '"KEYREQTYPE='                              01294400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01294500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01294600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01294700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01294800
.ZG60A                ANOP  ,                                           01294900
.*----------------------------------------------------------------***   01295000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01295100
                      AIF   (N'&KEYRANGEEND LE 1).ZG62A  CK NUM         01295200
&ZMS                  SETC  '"KEYRANGEEND='                             01295300
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01295400
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01295500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01295600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01295700
.ZG62A                ANOP  ,                                           01295800
.*-------------------------------------------------------------------   01295900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01296000
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01296100
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01296200
                      AIF   (N'&KEYRANGEEND GT 1).ZG62B  MULTI          01296300
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01296400
.ZG62B                AIF   (K'&KEYRANGEEND(1) GT 0).ZG62C              01296500
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01296600
&ZMS                  SETC  ' '                                         01296700
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01296800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01296900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01297000
.ZG62C                ANOP  ,                                           01297100
.*-------------------------------------------------------------------   01297200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01297300
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG62R  NOT I/O      01297400
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG62R         01297500
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01297600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                01297700
                      AIF   (K'&ZCGPR GT 2).ZG62Q                       01297800
                      AIF   ('&ZCGPR' EQ '0').ZG62Q                     01297900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01298000
                      AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME   01298100
.ZG62P                ANOP  ,                                           01298200
                      AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC        01298300
                      AIF   ('&ZCGPR' LT '2').ZG62Q                     01298400
                      AIF   ('&ZCGPR' LE '12').ZG62R                    01298500
.ZG62Q                ANOP  ,                                           01298600
&ZMS                  SETC  '"KEYRANGEEND='                             01298700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01298800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01298900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01299000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01299100
.ZG62R                ANOP  ,                                           01299200
.*------------------------------------------------------------------    01299300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01299400
.ZG64                 ANOP  ,                                           01299500
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01299600
                      AIF   (K'&XKEYREQTYPE GT 0).ZG64E  VALID ARG      01299700
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG64D  OMITTED       01299800
&ZASYSLNDX            SETA  0                                           01299900
.ZG64A                ANOP  ,           POSITIONAL MACRO KEY            01300000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01300100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG64C            01300200
&ZTLC                 SETC 'KEYREQTYPE'                                 01300300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG64A   01300400
.ZG64B                ANOP  ,                                           01300500
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01300600
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      01300700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01300800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01300900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01301000
                      AGO   .ZG64E                                      01301100
.ZG64C                ANOP  ,                                           01301200
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01301300
&ZMS                  SETC  '"KEYREQTYPE='                              01301400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01301500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01301600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01301700
&ZMS                  SETC  '&ZMS "EQUAL",'                             01301800
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01301900
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01302000
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01302100
                      MNOTE 8,' &ZMS '                                  01302200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01302300
                      AGO   .ZG64E                                      01302400
.ZG64D                ANOP  ,                                           01302500
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01302600
.ZG64E                ANOP  ,                                           01302700
.*------------------------------------------------------------------    01302800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01302900
.ZG65                 ANOP  ,                                           01303000
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01303100
                      AIF   (K'&XKEYCOMPARE GT 0).ZG65E  VALID ARG      01303200
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG65D  OMITTED       01303300
&ZASYSLNDX            SETA  0                                           01303400
.ZG65A                ANOP  ,           POSITIONAL MACRO KEY            01303500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01303600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG65C            01303700
&ZTLC                 SETC 'KEYCOMPARE'                                 01303800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG65A   01303900
.ZG65B                ANOP  ,                                           01304000
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01304100
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      01304200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01304300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01304400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01304500
                      AGO   .ZG65E                                      01304600
.ZG65C                ANOP  ,                                           01304700
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01304800
&ZMS                  SETC  '"KEYCOMPARE='                              01304900
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01305000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01305100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01305200
&ZMS                  SETC  '&ZMS "NO"'                                 01305300
&ZMS                  SETC  '&ZMS OR "YES".'                            01305400
                      MNOTE 8,' &ZMS '                                  01305500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01305600
                      AGO   .ZG65E                                      01305700
.ZG65D                ANOP  ,                                           01305800
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01305900
.ZG65E                ANOP  ,                                           01306000
.*------------------------------------------------------------------    01306100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01306200
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01306300
.*-------------------------------------------------------------------   01306400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01306500
.ZG68                 ANOP  ,                                           01306600
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG68A              01306700
&ZTLC                 SETC 'NO'                                         01306800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG69         01306900
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01307000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG68A  CK NUM         01307100
&ZMS                  SETC  '"SKEYCOMPARE='                             01307200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01307300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01307400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01307500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01307600
.ZG68A                ANOP  ,                                           01307700
.*------------------------------------------------------------------    01307800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01307900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01308000
.ZG68A0               AIF   (K'&SECONDARYKEY LE 0).ZG68A1  OK           01308100
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01308200
.ZG68A1               AIF   (K'&SKEYREQTYPE LE 0).ZG68A2  OK            01308300
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01308400
.ZG68A2               AIF   (K'&SKEYRANGEEND LE 0).ZG68A3  OK           01308500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01308600
.ZG68A3               AIF   (K'&ZCVAL LE 0).ZG68A4  OK                  01308700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01308800
&ZMS                  SETC  '"SKEYCOMPARE'                              01308900
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01309000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01309100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01309200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01309300
.ZG68A4               ANOP  ,                                           01309400
.*-------------------------------------------------------------------   01309500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01309600
.ZG69                 ANOP  ,                                           01309700
&ZTLC                 SETC 'YES'                                        01309800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG83         01309900
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01310000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG69A  CK NUM         01310100
&ZMS                  SETC  '"SKEYCOMPARE='                             01310200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01310300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01310400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01310500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01310600
.ZG69A                ANOP  ,                                           01310700
.*----------------------------------------------------------------***   01310800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01310900
                      AIF   (N'&SECONDARYKEY LE 1).ZG71A  CK NUM        01311000
&ZMS                  SETC  '"SECONDARYKEY='                            01311100
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01311200
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01311300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01311400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01311500
.ZG71A                ANOP  ,                                           01311600
.*-------------------------------------------------------------------   01311700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01311800
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01311900
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01312000
                      AIF   (N'&SECONDARYKEY GT 1).ZG71B  MULTI         01312100
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01312200
.ZG71B                AIF   (K'&SECONDARYKEY(1) GT 0).ZG71C             01312300
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01312400
&ZMS                  SETC  ' '                                         01312500
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01312600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01312700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01312800
.ZG71C                ANOP  ,                                           01312900
.*-------------------------------------------------------------------   01313000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01313100
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG71R  NOT I/O     01313200
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG71R        01313300
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01313400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                01313500
                      AIF   (K'&ZCGPR GT 2).ZG71Q                       01313600
                      AIF   ('&ZCGPR' EQ '0').ZG71Q                     01313700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01313800
                      AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME   01313900
.ZG71P                ANOP  ,                                           01314000
                      AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC        01314100
                      AIF   ('&ZCGPR' LT '2').ZG71Q                     01314200
                      AIF   ('&ZCGPR' LE '12').ZG71R                    01314300
.ZG71Q                ANOP  ,                                           01314400
&ZMS                  SETC  '"SECONDARYKEY='                            01314500
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01314600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01314700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01314800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01314900
.ZG71R                ANOP  ,                                           01315000
.*------------------------------------------------------------------    01315100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01315200
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01315300
.*-------------------------------------------------------------------   01315400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01315500
.ZG75                 ANOP  ,                                           01315600
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG75A              01315700
&ZTLC                 SETC 'EQUAL'                                      01315800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG76         01315900
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01316000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG75A  CK NUM         01316100
&ZMS                  SETC  '"SKEYREQTYPE='                             01316200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01316300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01316400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01316500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01316600
.ZG75A                ANOP  ,                                           01316700
.*------------------------------------------------------------------    01316800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01316900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01317000
.ZG75A0               AIF   (K'&SKEYRANGEEND LE 0).ZG75A1  OK           01317100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01317200
.ZG75A1               AIF   (K'&ZCVAL LE 0).ZG75A2  OK                  01317300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01317400
&ZMS                  SETC  '"SKEYREQTYPE'                              01317500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01317600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01317700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01317800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01317900
.ZG75A2               ANOP  ,                                           01318000
.*-------------------------------------------------------------------   01318100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01318200
.ZG76                 ANOP  ,                                           01318300
&ZTLC                 SETC 'LESSOREQUAL'                                01318400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG77         01318500
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01318600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG76A  CK NUM         01318700
&ZMS                  SETC  '"SKEYREQTYPE='                             01318800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01318900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01319000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01319100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01319200
.ZG76A                ANOP  ,                                           01319300
.*------------------------------------------------------------------    01319400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01319500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01319600
.ZG76A0               AIF   (K'&SKEYRANGEEND LE 0).ZG76A1  OK           01319700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01319800
.ZG76A1               AIF   (K'&ZCVAL LE 0).ZG76A2  OK                  01319900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01320000
&ZMS                  SETC  '"SKEYREQTYPE'                              01320100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01320200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01320300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01320400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01320500
.ZG76A2               ANOP  ,                                           01320600
.*-------------------------------------------------------------------   01320700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01320800
.ZG77                 ANOP  ,                                           01320900
&ZTLC                 SETC 'GREATEROREQUAL'                             01321000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG78         01321100
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01321200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG77A  CK NUM         01321300
&ZMS                  SETC  '"SKEYREQTYPE='                             01321400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01321500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01321600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01321700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01321800
.ZG77A                ANOP  ,                                           01321900
.*------------------------------------------------------------------    01322000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01322100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01322200
.ZG77A0               AIF   (K'&SKEYRANGEEND LE 0).ZG77A1  OK           01322300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01322400
.ZG77A1               AIF   (K'&ZCVAL LE 0).ZG77A2  OK                  01322500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01322600
&ZMS                  SETC  '"SKEYREQTYPE'                              01322700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01322800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01322900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01323000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01323100
.ZG77A2               ANOP  ,                                           01323200
.*-------------------------------------------------------------------   01323300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01323400
.ZG78                 ANOP  ,                                           01323500
&ZTLC                 SETC 'RANGE'                                      01323600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG82         01323700
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01323800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG78A  CK NUM         01323900
&ZMS                  SETC  '"SKEYREQTYPE='                             01324000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01324100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01324200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01324300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01324400
.ZG78A                ANOP  ,                                           01324500
.*----------------------------------------------------------------***   01324600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01324700
                      AIF   (N'&SKEYRANGEEND LE 1).ZG80A  CK NUM        01324800
&ZMS                  SETC  '"SKEYRANGEEND='                            01324900
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01325000
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01325100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01325200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01325300
.ZG80A                ANOP  ,                                           01325400
.*-------------------------------------------------------------------   01325500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01325600
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01325700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01325800
                      AIF   (N'&SKEYRANGEEND GT 1).ZG80B  MULTI         01325900
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01326000
.ZG80B                AIF   (K'&SKEYRANGEEND(1) GT 0).ZG80C             01326100
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01326200
&ZMS                  SETC  ' '                                         01326300
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01326400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01326500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01326600
.ZG80C                ANOP  ,                                           01326700
.*-------------------------------------------------------------------   01326800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01326900
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG80R  NOT I/O     01327000
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG80R        01327100
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01327200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                01327300
                      AIF   (K'&ZCGPR GT 2).ZG80Q                       01327400
                      AIF   ('&ZCGPR' EQ '0').ZG80Q                     01327500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01327600
                      AIF   (T'&ZCGPR NE 'N').ZG80Q  INVALID REG NAME   01327700
.ZG80P                ANOP  ,                                           01327800
                      AIF   (T'&ZCGPR NE 'N').ZG80R  NON NUMERIC        01327900
                      AIF   ('&ZCGPR' LT '2').ZG80Q                     01328000
                      AIF   ('&ZCGPR' LE '12').ZG80R                    01328100
.ZG80Q                ANOP  ,                                           01328200
&ZMS                  SETC  '"SKEYRANGEEND='                            01328300
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01328400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01328500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01328600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01328700
.ZG80R                ANOP  ,                                           01328800
.*------------------------------------------------------------------    01328900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01329000
.ZG82                 ANOP  ,                                           01329100
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01329200
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG82E  VALID ARG     01329300
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG82D  OMITTED      01329400
&ZASYSLNDX            SETA  0                                           01329500
.ZG82A                ANOP  ,           POSITIONAL MACRO KEY            01329600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01329700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG82C            01329800
&ZTLC                 SETC 'SKEYREQTYPE'                                01329900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG82A   01330000
.ZG82B                ANOP  ,                                           01330100
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01330200
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     01330300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01330400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01330500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01330600
                      AGO   .ZG82E                                      01330700
.ZG82C                ANOP  ,                                           01330800
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01330900
&ZMS                  SETC  '"SKEYREQTYPE='                             01331000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01331100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01331200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01331300
&ZMS                  SETC  '&ZMS "EQUAL",'                             01331400
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01331500
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01331600
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01331700
                      MNOTE 8,' &ZMS '                                  01331800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01331900
                      AGO   .ZG82E                                      01332000
.ZG82D                ANOP  ,                                           01332100
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01332200
.ZG82E                ANOP  ,                                           01332300
.*------------------------------------------------------------------    01332400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01332500
.ZG83                 ANOP  ,                                           01332600
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01332700
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG83E  VALID ARG     01332800
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG83D  OMITTED      01332900
&ZASYSLNDX            SETA  0                                           01333000
.ZG83A                ANOP  ,           POSITIONAL MACRO KEY            01333100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01333200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG83C            01333300
&ZTLC                 SETC 'SKEYCOMPARE'                                01333400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG83A   01333500
.ZG83B                ANOP  ,                                           01333600
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01333700
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     01333800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01333900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01334000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01334100
                      AGO   .ZG83E                                      01334200
.ZG83C                ANOP  ,                                           01334300
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01334400
&ZMS                  SETC  '"SKEYCOMPARE='                             01334500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01334600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01334700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01334800
&ZMS                  SETC  '&ZMS "NO"'                                 01334900
&ZMS                  SETC  '&ZMS OR "YES".'                            01335000
                      MNOTE 8,' &ZMS '                                  01335100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01335200
                      AGO   .ZG83E                                      01335300
.ZG83D                ANOP  ,                                           01335400
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01335500
.ZG83E                ANOP  ,                                           01335600
.*-------------------------------------------------------------------   01335700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01335800
.ZG84                 ANOP  ,                                           01335900
&ZTLC                 SETC 'ENTRYID'                                    01336000
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG150            01336100
&XLOCATOR             SETC  'ENTRYID'   SET KEYWORD                     01336200
                      AIF   (N'&LOCATOR LE 1).ZG84A  CK NUM             01336300
&ZMS                  SETC  '"LOCATOR='                                 01336400
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01336500
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01336600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01336700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01336800
.ZG84A                ANOP  ,                                           01336900
.*------------------------------------------------------------------    01337000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01337100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01337200
.ZG84A0               AIF   (K'&ENTRYNAME LE 0).ZG84A1  OK              01337300
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01337400
.ZG84A1               AIF   (K'&KEYTYPE LE 0).ZG84A2  OK                01337500
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01337600
.ZG84A2               AIF   (K'&ZCVAL LE 0).ZG84A3  OK                  01337700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01337800
&ZMS                  SETC  '"LOCATOR'                                  01337900
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01338000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01338100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01338200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01338300
.ZG84A3               ANOP  ,                                           01338400
.*----------------------------------------------------------------***   01338500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01338600
                      AIF   (N'&ENTRYID LE 1).ZG86A  CK NUM             01338700
&ZMS                  SETC  '"ENTRYID='                                 01338800
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            01338900
&ZMS                  SETC  '&ZMS "ENTRYID"'                            01339000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01339100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01339200
.ZG86A                ANOP  ,                                           01339300
.*-------------------------------------------------------------------   01339400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01339500
&ZXENTRYID            SETC  'INPUT'     SET IN/OUTPUT                   01339600
&XENTRYID             SETC  '&ENTRYID(1)'       SET XVARIABLE           01339700
                      AIF   (N'&ENTRYID GT 1).ZG86B  MULTI              01339800
&XENTRYID             SETC  '&ENTRYID'  SET XVARIABLE                   01339900
.ZG86B                AIF   (K'&ENTRYID(1) GT 0).ZG86C                  01340000
&ZXENTRYID            SETC  ''          RESET IN/OUTPUT                 01340100
&ZMS                  SETC  ' '                                         01340200
&ZMS                  SETC  '&ZMS "ENTRYID" KEY AND ITS'                01340300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01340400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01340500
.ZG86C                ANOP  ,                                           01340600
.*-------------------------------------------------------------------   01340700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01340800
                      AIF   (K'&ZXENTRYID LE 0).ZG86R  NOT I/O          01340900
                      AIF   ('&XENTRYID'(1,1) NE '(').ZG86R             01341000
&ZCGPR                SETC  '&XENTRYID'(2,K'&XENTRYID-2)                01341100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                01341200
                      AIF   (K'&ZCGPR GT 2).ZG86Q                       01341300
                      AIF   ('&ZCGPR' EQ '0').ZG86Q                     01341400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01341500
                      AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME   01341600
.ZG86P                ANOP  ,                                           01341700
                      AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC        01341800
                      AIF   ('&ZCGPR' LT '2').ZG86Q                     01341900
                      AIF   ('&ZCGPR' LE '12').ZG86R                    01342000
.ZG86Q                ANOP  ,                                           01342100
&ZMS                  SETC  '"ENTRYID='                                 01342200
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            01342300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01342400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01342500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01342600
.ZG86R                ANOP  ,                                           01342700
.*----------------------------------------------------------------***   01342800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01342900
                      AIF   (N'&KEYSCANTYPE LE 1).ZG89A  CK NUM         01343000
&ZMS                  SETC  '"KEYSCANTYPE='                             01343100
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01343200
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01343300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01343400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01343500
.ZG89A                ANOP  ,                                           01343600
.*-------------------------------------------------------------------   01343700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01343800
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01343900
.ZG90A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG91A                     01344000
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01344100
.*-------------------------------------------------------------------   01344200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01344300
.ZG91A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG92A                 01344400
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01344500
.*-------------------------------------------------------------------   01344600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01344700
.ZG92A                AIF   (K'&XKEYSCANTYPE GT 0).ZG92C  KEYWORD       01344800
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG92B              01344900
&ZMS                  SETC  '"KEYSCANTYPE='                             01345000
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01345100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01345200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01345300
&ZMS                  SETC  '&ZMS "ENTRY"'                              01345400
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01345500
                      MNOTE 8,' &ZMS '                                  01345600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01345700
.ZG92B                ANOP  ,                                           01345800
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01345900
.ZG92C                ANOP  ,                                           01346000
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01346100
.*------------------------------------------------------------------    01346200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01346300
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01346400
.*-------------------------------------------------------------------   01346500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01346600
.ZG95                 ANOP  ,                                           01346700
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG95A              01346800
&ZTLC                 SETC 'NO'                                         01346900
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG96         01347000
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     01347100
                      AIF   (N'&LISTCOMPARE LE 1).ZG95A  CK NUM         01347200
&ZMS                  SETC  '"LISTCOMPARE='                             01347300
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01347400
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01347500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01347600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01347700
.ZG95A                ANOP  ,                                           01347800
.*------------------------------------------------------------------    01347900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01348000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01348100
.ZG95A0               AIF   (K'&LISTNUM LE 0).ZG95A1  OK                01348200
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      01348300
.ZG95A1               AIF   (K'&AUTHCOMPARE LE 0).ZG95A2  OK            01348400
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     01348500
.ZG95A2               AIF   (K'&AUTHCOMP LE 0).ZG95A3  OK               01348600
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01348700
.ZG95A3               AIF   (K'&AUTHCOMPTYPE LE 0).ZG95A4  OK           01348800
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01348900
.ZG95A4               AIF   (K'&ZCVAL LE 0).ZG95A5  OK                  01349000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01349100
&ZMS                  SETC  '"LISTCOMPARE'                              01349200
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       01349300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01349400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01349500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01349600
.ZG95A5               ANOP  ,                                           01349700
.*-------------------------------------------------------------------   01349800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01349900
.ZG96                 ANOP  ,                                           01350000
&ZTLC                 SETC 'YES'                                        01350100
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG113        01350200
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     01350300
                      AIF   (N'&LISTCOMPARE LE 1).ZG96A  CK NUM         01350400
&ZMS                  SETC  '"LISTCOMPARE='                             01350500
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01350600
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01350700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01350800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01350900
.ZG96A                ANOP  ,                                           01351000
.*----------------------------------------------------------------***   01351100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01351200
                      AIF   (N'&LISTNUM LE 1).ZG98A  CK NUM             01351300
&ZMS                  SETC  '"LISTNUM='                                 01351400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01351500
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01351600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01351700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01351800
.ZG98A                ANOP  ,                                           01351900
.*-------------------------------------------------------------------   01352000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01352100
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01352200
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01352300
                      AIF   (N'&LISTNUM GT 1).ZG98B  MULTI              01352400
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01352500
.ZG98B                AIF   (K'&LISTNUM(1) GT 0).ZG98C                  01352600
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01352700
&ZMS                  SETC  ' '                                         01352800
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01352900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01353000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01353100
.ZG98C                ANOP  ,                                           01353200
.*-------------------------------------------------------------------   01353300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01353400
                      AIF   (K'&ZXLISTNUM LE 0).ZG98R  NOT I/O          01353500
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG98R             01353600
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01353700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                01353800
                      AIF   (K'&ZCGPR GT 2).ZG98Q                       01353900
                      AIF   ('&ZCGPR' EQ '0').ZG98Q                     01354000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01354100
                      AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME   01354200
.ZG98P                ANOP  ,                                           01354300
                      AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC        01354400
                      AIF   ('&ZCGPR' LT '2').ZG98Q                     01354500
                      AIF   ('&ZCGPR' LE '12').ZG98R                    01354600
.ZG98Q                ANOP  ,                                           01354700
&ZMS                  SETC  '"LISTNUM='                                 01354800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01354900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01355000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01355100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01355200
.ZG98R                ANOP  ,                                           01355300
.*------------------------------------------------------------------    01355400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01355500
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01355600
.*-------------------------------------------------------------------   01355700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01355800
.ZG102                ANOP  ,                                           01355900
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG102A             01356000
&ZTLC                 SETC 'NO'                                         01356100
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG103        01356200
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01356300
                      AIF   (N'&AUTHCOMPARE LE 1).ZG102A  CK NUM        01356400
&ZMS                  SETC  '"AUTHCOMPARE='                             01356500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01356600
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01356700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01356800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01356900
.ZG102A               ANOP  ,                                           01357000
.*------------------------------------------------------------------    01357100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01357200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01357300
.ZG102A0              AIF   (K'&AUTHCOMP LE 0).ZG102A1  OK              01357400
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01357500
.ZG102A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG102A2  OK          01357600
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01357700
.ZG102A2              AIF   (K'&ZCVAL LE 0).ZG102A3  OK                 01357800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01357900
&ZMS                  SETC  '"AUTHCOMPARE'                              01358000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01358100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01358200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01358300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01358400
.ZG102A3              ANOP  ,                                           01358500
.*-------------------------------------------------------------------   01358600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01358700
.ZG103                ANOP  ,                                           01358800
&ZTLC                 SETC 'YES'                                        01358900
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG112        01359000
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01359100
                      AIF   (N'&AUTHCOMPARE LE 1).ZG103A  CK NUM        01359200
&ZMS                  SETC  '"AUTHCOMPARE='                             01359300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01359400
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01359500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01359600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01359700
.ZG103A               ANOP  ,                                           01359800
.*----------------------------------------------------------------***   01359900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01360000
                      AIF   (N'&AUTHCOMP LE 1).ZG105A  CK NUM           01360100
&ZMS                  SETC  '"AUTHCOMP='                                01360200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01360300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01360400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01360500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01360600
.ZG105A               ANOP  ,                                           01360700
.*-------------------------------------------------------------------   01360800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01360900
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01361000
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01361100
                      AIF   (N'&AUTHCOMP GT 1).ZG105B  MULTI            01361200
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01361300
.ZG105B               AIF   (K'&AUTHCOMP(1) GT 0).ZG105C                01361400
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01361500
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   01361600
&ZMS                  SETC  '&ZMS , "AUTHCOMP" KEY AND ITS'             01361700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01361800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01361900
.ZG105C               ANOP  ,                                           01362000
.*-------------------------------------------------------------------   01362100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01362200
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG105R  NOT I/O        01362300
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG105R           01362400
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01362500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG105P               01362600
                      AIF   (K'&ZCGPR GT 2).ZG105Q                      01362700
                      AIF   ('&ZCGPR' EQ '0').ZG105Q                    01362800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01362900
                      AIF   (T'&ZCGPR NE 'N').ZG105Q  INVALID REG NAME  01363000
.ZG105P               ANOP  ,                                           01363100
                      AIF   (T'&ZCGPR NE 'N').ZG105R  NON NUMERIC       01363200
                      AIF   ('&ZCGPR' LT '2').ZG105Q                    01363300
                      AIF   ('&ZCGPR' LE '12').ZG105R                   01363400
.ZG105Q               ANOP  ,                                           01363500
&ZMS                  SETC  '"AUTHCOMP='                                01363600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01363700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01363800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01363900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01364000
.ZG105R               ANOP  ,                                           01364100
.*----------------------------------------------------------------***   01364200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01364300
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG107A  CK NUM       01364400
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01364500
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01364600
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01364700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01364800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01364900
.ZG107A               ANOP  ,                                           01365000
.*-------------------------------------------------------------------   01365100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01365200
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01365300
.ZG108A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG109A                  01365400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01365500
.*-------------------------------------------------------------------   01365600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01365700
.ZG109A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG110A            01365800
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01365900
.*-------------------------------------------------------------------   01366000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01366100
.ZG110A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG110C  KEYWORD     01366200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG110B            01366300
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01366400
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01366500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01366600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01366700
&ZMS                  SETC  '&ZMS "EQUAL"'                              01366800
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01366900
                      MNOTE 8,' &ZMS '                                  01367000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01367100
.ZG110B               ANOP  ,                                           01367200
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01367300
.ZG110C               ANOP  ,                                           01367400
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01367500
.*-------------------------------------------------------------------   01367600
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01367700
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG110D  KEY           01367800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG110D  PARM      01367900
&ZMS                  SETC  '"AUTHCOMPTYPE'                             01368000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01368100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01368200
&ZMS                  SETC  '&ZMS '                                     01368300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01368400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01368500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01368600
.ZG110D               ANOP  ,                                           01368700
.*------------------------------------------------------------------    01368800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01368900
.ZG112                ANOP  ,                                           01369000
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01369100
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG112E  VALID ARG    01369200
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG112D  OMITTED     01369300
&ZASYSLNDX            SETA  0                                           01369400
.ZG112A               ANOP  ,           POSITIONAL MACRO KEY            01369500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01369600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG112C           01369700
&ZTLC                 SETC 'AUTHCOMPARE'                                01369800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG112A  01369900
.ZG112B               ANOP  ,                                           01370000
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01370100
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     01370200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01370300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01370400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01370500
                      AGO   .ZG112E                                     01370600
.ZG112C               ANOP  ,                                           01370700
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01370800
&ZMS                  SETC  '"AUTHCOMPARE='                             01370900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01371000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01371100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01371200
&ZMS                  SETC  '&ZMS "NO"'                                 01371300
&ZMS                  SETC  '&ZMS OR "YES".'                            01371400
                      MNOTE 8,' &ZMS '                                  01371500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01371600
                      AGO   .ZG112E                                     01371700
.ZG112D               ANOP  ,                                           01371800
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01371900
.ZG112E               ANOP  ,                                           01372000
.*------------------------------------------------------------------    01372100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01372200
.ZG113                ANOP  ,                                           01372300
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01372400
                      AIF   (K'&XLISTCOMPARE GT 0).ZG113E  VALID ARG    01372500
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG113D  OMITTED     01372600
&ZASYSLNDX            SETA  0                                           01372700
.ZG113A               ANOP  ,           POSITIONAL MACRO KEY            01372800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01372900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG113C           01373000
&ZTLC                 SETC 'LISTCOMPARE'                                01373100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG113A  01373200
.ZG113B               ANOP  ,                                           01373300
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01373400
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'                     01373500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01373600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01373700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01373800
                      AGO   .ZG113E                                     01373900
.ZG113C               ANOP  ,                                           01374000
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01374100
&ZMS                  SETC  '"LISTCOMPARE='                             01374200
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01374300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01374400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01374500
&ZMS                  SETC  '&ZMS "NO"'                                 01374600
&ZMS                  SETC  '&ZMS OR "YES".'                            01374700
                      MNOTE 8,' &ZMS '                                  01374800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01374900
                      AGO   .ZG113E                                     01375000
.ZG113D               ANOP  ,                                           01375100
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01375200
.ZG113E               ANOP  ,                                           01375300
.*------------------------------------------------------------------    01375400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01375500
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01375600
.*-------------------------------------------------------------------   01375700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01375800
.ZG116                ANOP  ,                                           01375900
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG116A              01376000
&ZTLC                 SETC 'NO'                                         01376100
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG117         01376200
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01376300
                      AIF   (N'&KEYCOMPARE LE 1).ZG116A  CK NUM         01376400
&ZMS                  SETC  '"KEYCOMPARE='                              01376500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01376600
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01376700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01376800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01376900
.ZG116A               ANOP  ,                                           01377000
.*------------------------------------------------------------------    01377100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01377200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01377300
.ZG116A0              AIF   (K'&ENTRYKEY LE 0).ZG116A1  OK              01377400
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01377500
.ZG116A1              AIF   (K'&KEYREQTYPE LE 0).ZG116A2  OK            01377600
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01377700
.ZG116A2              AIF   (K'&KEYRANGEEND LE 0).ZG116A3  OK           01377800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01377900
.ZG116A3              AIF   (K'&ZCVAL LE 0).ZG116A4  OK                 01378000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01378100
&ZMS                  SETC  '"KEYCOMPARE'                               01378200
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01378300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01378400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01378500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01378600
.ZG116A4              ANOP  ,                                           01378700
.*-------------------------------------------------------------------   01378800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01378900
.ZG117                ANOP  ,                                           01379000
&ZTLC                 SETC 'YES'                                        01379100
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG131         01379200
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01379300
                      AIF   (N'&KEYCOMPARE LE 1).ZG117A  CK NUM         01379400
&ZMS                  SETC  '"KEYCOMPARE='                              01379500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01379600
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01379700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01379800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01379900
.ZG117A               ANOP  ,                                           01380000
.*----------------------------------------------------------------***   01380100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01380200
                      AIF   (N'&ENTRYKEY LE 1).ZG119A  CK NUM           01380300
&ZMS                  SETC  '"ENTRYKEY='                                01380400
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01380500
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01380600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01380700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01380800
.ZG119A               ANOP  ,                                           01380900
.*-------------------------------------------------------------------   01381000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01381100
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01381200
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01381300
                      AIF   (N'&ENTRYKEY GT 1).ZG119B  MULTI            01381400
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01381500
.ZG119B               AIF   (K'&ENTRYKEY(1) GT 0).ZG119C                01381600
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01381700
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   01381800
&ZMS                  SETC  '&ZMS , "ENTRYKEY" KEY AND ITS'             01381900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01382000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01382100
.ZG119C               ANOP  ,                                           01382200
.*-------------------------------------------------------------------   01382300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01382400
                      AIF   (K'&ZXENTRYKEY LE 0).ZG119R  NOT I/O        01382500
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG119R           01382600
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01382700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG119P               01382800
                      AIF   (K'&ZCGPR GT 2).ZG119Q                      01382900
                      AIF   ('&ZCGPR' EQ '0').ZG119Q                    01383000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01383100
                      AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME  01383200
.ZG119P               ANOP  ,                                           01383300
                      AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC       01383400
                      AIF   ('&ZCGPR' LT '2').ZG119Q                    01383500
                      AIF   ('&ZCGPR' LE '12').ZG119R                   01383600
.ZG119Q               ANOP  ,                                           01383700
&ZMS                  SETC  '"ENTRYKEY='                                01383800
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01383900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01384000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01384100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01384200
.ZG119R               ANOP  ,                                           01384300
.*------------------------------------------------------------------    01384400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01384500
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01384600
.*-------------------------------------------------------------------   01384700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01384800
.ZG123                ANOP  ,                                           01384900
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG123A              01385000
&ZTLC                 SETC 'EQUAL'                                      01385100
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG124         01385200
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01385300
                      AIF   (N'&KEYREQTYPE LE 1).ZG123A  CK NUM         01385400
&ZMS                  SETC  '"KEYREQTYPE='                              01385500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01385600
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01385700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01385800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01385900
.ZG123A               ANOP  ,                                           01386000
.*------------------------------------------------------------------    01386100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01386200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01386300
.ZG123A0              AIF   (K'&KEYRANGEEND LE 0).ZG123A1  OK           01386400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01386500
.ZG123A1              AIF   (K'&ZCVAL LE 0).ZG123A2  OK                 01386600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01386700
&ZMS                  SETC  '"KEYREQTYPE'                               01386800
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01386900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01387000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01387100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01387200
.ZG123A2              ANOP  ,                                           01387300
.*-------------------------------------------------------------------   01387400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01387500
.ZG124                ANOP  ,                                           01387600
&ZTLC                 SETC 'LESSOREQUAL'                                01387700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG125         01387800
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01387900
                      AIF   (N'&KEYREQTYPE LE 1).ZG124A  CK NUM         01388000
&ZMS                  SETC  '"KEYREQTYPE='                              01388100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01388200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01388300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01388400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01388500
.ZG124A               ANOP  ,                                           01388600
.*------------------------------------------------------------------    01388700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01388800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01388900
.ZG124A0              AIF   (K'&KEYRANGEEND LE 0).ZG124A1  OK           01389000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01389100
.ZG124A1              AIF   (K'&ZCVAL LE 0).ZG124A2  OK                 01389200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01389300
&ZMS                  SETC  '"KEYREQTYPE'                               01389400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01389500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01389600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01389700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01389800
.ZG124A2              ANOP  ,                                           01389900
.*-------------------------------------------------------------------   01390000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01390100
.ZG125                ANOP  ,                                           01390200
&ZTLC                 SETC 'GREATEROREQUAL'                             01390300
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG126         01390400
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01390500
                      AIF   (N'&KEYREQTYPE LE 1).ZG125A  CK NUM         01390600
&ZMS                  SETC  '"KEYREQTYPE='                              01390700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01390800
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01390900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01391000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01391100
.ZG125A               ANOP  ,                                           01391200
.*------------------------------------------------------------------    01391300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01391400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01391500
.ZG125A0              AIF   (K'&KEYRANGEEND LE 0).ZG125A1  OK           01391600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01391700
.ZG125A1              AIF   (K'&ZCVAL LE 0).ZG125A2  OK                 01391800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01391900
&ZMS                  SETC  '"KEYREQTYPE'                               01392000
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01392100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01392200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01392300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01392400
.ZG125A2              ANOP  ,                                           01392500
.*-------------------------------------------------------------------   01392600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01392700
.ZG126                ANOP  ,                                           01392800
&ZTLC                 SETC 'RANGE'                                      01392900
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG130         01393000
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01393100
                      AIF   (N'&KEYREQTYPE LE 1).ZG126A  CK NUM         01393200
&ZMS                  SETC  '"KEYREQTYPE='                              01393300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01393400
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01393500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01393600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01393700
.ZG126A               ANOP  ,                                           01393800
.*----------------------------------------------------------------***   01393900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01394000
                      AIF   (N'&KEYRANGEEND LE 1).ZG128A  CK NUM        01394100
&ZMS                  SETC  '"KEYRANGEEND='                             01394200
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01394300
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01394400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01394500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01394600
.ZG128A               ANOP  ,                                           01394700
.*-------------------------------------------------------------------   01394800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01394900
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01395000
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01395100
                      AIF   (N'&KEYRANGEEND GT 1).ZG128B  MULTI         01395200
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01395300
.ZG128B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG128C             01395400
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01395500
&ZMS                  SETC  'WHEN "RANGE" IS SPECIFIED'                 01395600
&ZMS                  SETC  '&ZMS , "KEYRANGEEND" KEY AND ITS'          01395700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01395800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01395900
.ZG128C               ANOP  ,                                           01396000
.*-------------------------------------------------------------------   01396100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01396200
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG128R  NOT I/O     01396300
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG128R        01396400
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01396500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG128P               01396600
                      AIF   (K'&ZCGPR GT 2).ZG128Q                      01396700
                      AIF   ('&ZCGPR' EQ '0').ZG128Q                    01396800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01396900
                      AIF   (T'&ZCGPR NE 'N').ZG128Q  INVALID REG NAME  01397000
.ZG128P               ANOP  ,                                           01397100
                      AIF   (T'&ZCGPR NE 'N').ZG128R  NON NUMERIC       01397200
                      AIF   ('&ZCGPR' LT '2').ZG128Q                    01397300
                      AIF   ('&ZCGPR' LE '12').ZG128R                   01397400
.ZG128Q               ANOP  ,                                           01397500
&ZMS                  SETC  '"KEYRANGEEND='                             01397600
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01397700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01397800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01397900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01398000
.ZG128R               ANOP  ,                                           01398100
.*------------------------------------------------------------------    01398200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01398300
.ZG130                ANOP  ,                                           01398400
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01398500
                      AIF   (K'&XKEYREQTYPE GT 0).ZG130E  VALID ARG     01398600
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG130D  OMITTED      01398700
&ZASYSLNDX            SETA  0                                           01398800
.ZG130A               ANOP  ,           POSITIONAL MACRO KEY            01398900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01399000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG130C           01399100
&ZTLC                 SETC 'KEYREQTYPE'                                 01399200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG130A  01399300
.ZG130B               ANOP  ,                                           01399400
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01399500
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      01399600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01399700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01399800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01399900
                      AGO   .ZG130E                                     01400000
.ZG130C               ANOP  ,                                           01400100
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01400200
&ZMS                  SETC  '"KEYREQTYPE='                              01400300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01400400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01400500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01400600
&ZMS                  SETC  '&ZMS "EQUAL",'                             01400700
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01400800
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01400900
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01401000
                      MNOTE 8,' &ZMS '                                  01401100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01401200
                      AGO   .ZG130E                                     01401300
.ZG130D               ANOP  ,                                           01401400
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01401500
.ZG130E               ANOP  ,                                           01401600
.*------------------------------------------------------------------    01401700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01401800
.ZG131                ANOP  ,                                           01401900
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01402000
                      AIF   (K'&XKEYCOMPARE GT 0).ZG131E  VALID ARG     01402100
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG131D  OMITTED      01402200
&ZASYSLNDX            SETA  0                                           01402300
.ZG131A               ANOP  ,           POSITIONAL MACRO KEY            01402400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01402500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG131C           01402600
&ZTLC                 SETC 'KEYCOMPARE'                                 01402700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG131A  01402800
.ZG131B               ANOP  ,                                           01402900
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01403000
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      01403100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01403200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01403300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01403400
                      AGO   .ZG131E                                     01403500
.ZG131C               ANOP  ,                                           01403600
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01403700
&ZMS                  SETC  '"KEYCOMPARE='                              01403800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01403900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01404000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01404100
&ZMS                  SETC  '&ZMS "NO"'                                 01404200
&ZMS                  SETC  '&ZMS OR "YES".'                            01404300
                      MNOTE 8,' &ZMS '                                  01404400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01404500
                      AGO   .ZG131E                                     01404600
.ZG131D               ANOP  ,                                           01404700
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01404800
.ZG131E               ANOP  ,                                           01404900
.*------------------------------------------------------------------    01405000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01405100
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01405200
.*-------------------------------------------------------------------   01405300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01405400
.ZG134                ANOP  ,                                           01405500
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG134A             01405600
&ZTLC                 SETC 'NO'                                         01405700
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG135        01405800
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01405900
                      AIF   (N'&SKEYCOMPARE LE 1).ZG134A  CK NUM        01406000
&ZMS                  SETC  '"SKEYCOMPARE='                             01406100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01406200
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01406300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01406400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01406500
.ZG134A               ANOP  ,                                           01406600
.*------------------------------------------------------------------    01406700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01406800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01406900
.ZG134A0              AIF   (K'&SECONDARYKEY LE 0).ZG134A1  OK          01407000
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01407100
.ZG134A1              AIF   (K'&SKEYREQTYPE LE 0).ZG134A2  OK           01407200
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01407300
.ZG134A2              AIF   (K'&SKEYRANGEEND LE 0).ZG134A3  OK          01407400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01407500
.ZG134A3              AIF   (K'&ZCVAL LE 0).ZG134A4  OK                 01407600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01407700
&ZMS                  SETC  '"SKEYCOMPARE'                              01407800
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01407900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01408000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01408100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01408200
.ZG134A4              ANOP  ,                                           01408300
.*-------------------------------------------------------------------   01408400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01408500
.ZG135                ANOP  ,                                           01408600
&ZTLC                 SETC 'YES'                                        01408700
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG149        01408800
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01408900
                      AIF   (N'&SKEYCOMPARE LE 1).ZG135A  CK NUM        01409000
&ZMS                  SETC  '"SKEYCOMPARE='                             01409100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01409200
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01409300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01409400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01409500
.ZG135A               ANOP  ,                                           01409600
.*----------------------------------------------------------------***   01409700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01409800
                      AIF   (N'&SECONDARYKEY LE 1).ZG137A  CK NUM       01409900
&ZMS                  SETC  '"SECONDARYKEY='                            01410000
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01410100
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01410200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01410300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01410400
.ZG137A               ANOP  ,                                           01410500
.*-------------------------------------------------------------------   01410600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01410700
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01410800
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01410900
                      AIF   (N'&SECONDARYKEY GT 1).ZG137B  MULTI        01411000
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01411100
.ZG137B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG137C            01411200
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01411300
&ZMS                  SETC  ' '                                         01411400
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01411500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01411600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01411700
.ZG137C               ANOP  ,                                           01411800
.*-------------------------------------------------------------------   01411900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01412000
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG137R  NOT I/O    01412100
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG137R       01412200
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01412300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG137P               01412400
                      AIF   (K'&ZCGPR GT 2).ZG137Q                      01412500
                      AIF   ('&ZCGPR' EQ '0').ZG137Q                    01412600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01412700
                      AIF   (T'&ZCGPR NE 'N').ZG137Q  INVALID REG NAME  01412800
.ZG137P               ANOP  ,                                           01412900
                      AIF   (T'&ZCGPR NE 'N').ZG137R  NON NUMERIC       01413000
                      AIF   ('&ZCGPR' LT '2').ZG137Q                    01413100
                      AIF   ('&ZCGPR' LE '12').ZG137R                   01413200
.ZG137Q               ANOP  ,                                           01413300
&ZMS                  SETC  '"SECONDARYKEY='                            01413400
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01413500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01413600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01413700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01413800
.ZG137R               ANOP  ,                                           01413900
.*------------------------------------------------------------------    01414000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01414100
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01414200
.*-------------------------------------------------------------------   01414300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01414400
.ZG141                ANOP  ,                                           01414500
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG141A             01414600
&ZTLC                 SETC 'EQUAL'                                      01414700
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG142        01414800
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01414900
                      AIF   (N'&SKEYREQTYPE LE 1).ZG141A  CK NUM        01415000
&ZMS                  SETC  '"SKEYREQTYPE='                             01415100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01415200
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01415300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01415400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01415500
.ZG141A               ANOP  ,                                           01415600
.*------------------------------------------------------------------    01415700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01415800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01415900
.ZG141A0              AIF   (K'&SKEYRANGEEND LE 0).ZG141A1  OK          01416000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01416100
.ZG141A1              AIF   (K'&ZCVAL LE 0).ZG141A2  OK                 01416200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01416300
&ZMS                  SETC  '"SKEYREQTYPE'                              01416400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01416500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01416600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01416700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01416800
.ZG141A2              ANOP  ,                                           01416900
.*-------------------------------------------------------------------   01417000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01417100
.ZG142                ANOP  ,                                           01417200
&ZTLC                 SETC 'LESSOREQUAL'                                01417300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG143        01417400
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01417500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG142A  CK NUM        01417600
&ZMS                  SETC  '"SKEYREQTYPE='                             01417700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01417800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01417900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01418000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01418100
.ZG142A               ANOP  ,                                           01418200
.*------------------------------------------------------------------    01418300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01418400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01418500
.ZG142A0              AIF   (K'&SKEYRANGEEND LE 0).ZG142A1  OK          01418600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01418700
.ZG142A1              AIF   (K'&ZCVAL LE 0).ZG142A2  OK                 01418800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01418900
&ZMS                  SETC  '"SKEYREQTYPE'                              01419000
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01419100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01419200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01419300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01419400
.ZG142A2              ANOP  ,                                           01419500
.*-------------------------------------------------------------------   01419600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01419700
.ZG143                ANOP  ,                                           01419800
&ZTLC                 SETC 'GREATEROREQUAL'                             01419900
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG144        01420000
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01420100
                      AIF   (N'&SKEYREQTYPE LE 1).ZG143A  CK NUM        01420200
&ZMS                  SETC  '"SKEYREQTYPE='                             01420300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01420400
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01420500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01420600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01420700
.ZG143A               ANOP  ,                                           01420800
.*------------------------------------------------------------------    01420900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01421000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01421100
.ZG143A0              AIF   (K'&SKEYRANGEEND LE 0).ZG143A1  OK          01421200
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01421300
.ZG143A1              AIF   (K'&ZCVAL LE 0).ZG143A2  OK                 01421400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01421500
&ZMS                  SETC  '"SKEYREQTYPE'                              01421600
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01421700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01421800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01421900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01422000
.ZG143A2              ANOP  ,                                           01422100
.*-------------------------------------------------------------------   01422200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01422300
.ZG144                ANOP  ,                                           01422400
&ZTLC                 SETC 'RANGE'                                      01422500
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG148        01422600
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01422700
                      AIF   (N'&SKEYREQTYPE LE 1).ZG144A  CK NUM        01422800
&ZMS                  SETC  '"SKEYREQTYPE='                             01422900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01423000
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01423100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01423200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01423300
.ZG144A               ANOP  ,                                           01423400
.*----------------------------------------------------------------***   01423500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01423600
                      AIF   (N'&SKEYRANGEEND LE 1).ZG146A  CK NUM       01423700
&ZMS                  SETC  '"SKEYRANGEEND='                            01423800
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01423900
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01424000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01424100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01424200
.ZG146A               ANOP  ,                                           01424300
.*-------------------------------------------------------------------   01424400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01424500
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01424600
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01424700
                      AIF   (N'&SKEYRANGEEND GT 1).ZG146B  MULTI        01424800
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01424900
.ZG146B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG146C            01425000
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01425100
&ZMS                  SETC  ' '                                         01425200
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01425300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01425400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01425500
.ZG146C               ANOP  ,                                           01425600
.*-------------------------------------------------------------------   01425700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01425800
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG146R  NOT I/O    01425900
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG146R       01426000
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01426100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG146P               01426200
                      AIF   (K'&ZCGPR GT 2).ZG146Q                      01426300
                      AIF   ('&ZCGPR' EQ '0').ZG146Q                    01426400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01426500
                      AIF   (T'&ZCGPR NE 'N').ZG146Q  INVALID REG NAME  01426600
.ZG146P               ANOP  ,                                           01426700
                      AIF   (T'&ZCGPR NE 'N').ZG146R  NON NUMERIC       01426800
                      AIF   ('&ZCGPR' LT '2').ZG146Q                    01426900
                      AIF   ('&ZCGPR' LE '12').ZG146R                   01427000
.ZG146Q               ANOP  ,                                           01427100
&ZMS                  SETC  '"SKEYRANGEEND='                            01427200
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01427300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01427400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01427500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01427600
.ZG146R               ANOP  ,                                           01427700
.*------------------------------------------------------------------    01427800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01427900
.ZG148                ANOP  ,                                           01428000
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01428100
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG148E  VALID ARG    01428200
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG148D  OMITTED     01428300
&ZASYSLNDX            SETA  0                                           01428400
.ZG148A               ANOP  ,           POSITIONAL MACRO KEY            01428500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01428600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG148C           01428700
&ZTLC                 SETC 'SKEYREQTYPE'                                01428800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG148A  01428900
.ZG148B               ANOP  ,                                           01429000
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01429100
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     01429200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01429300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01429400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01429500
                      AGO   .ZG148E                                     01429600
.ZG148C               ANOP  ,                                           01429700
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01429800
&ZMS                  SETC  '"SKEYREQTYPE='                             01429900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01430000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01430100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01430200
&ZMS                  SETC  '&ZMS "EQUAL",'                             01430300
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01430400
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01430500
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01430600
                      MNOTE 8,' &ZMS '                                  01430700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01430800
                      AGO   .ZG148E                                     01430900
.ZG148D               ANOP  ,                                           01431000
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01431100
.ZG148E               ANOP  ,                                           01431200
.*------------------------------------------------------------------    01431300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01431400
.ZG149                ANOP  ,                                           01431500
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01431600
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG149E  VALID ARG    01431700
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG149D  OMITTED     01431800
&ZASYSLNDX            SETA  0                                           01431900
.ZG149A               ANOP  ,           POSITIONAL MACRO KEY            01432000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01432100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG149C           01432200
&ZTLC                 SETC 'SKEYCOMPARE'                                01432300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG149A  01432400
.ZG149B               ANOP  ,                                           01432500
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01432600
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     01432700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01432800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01432900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01433000
                      AGO   .ZG149E                                     01433100
.ZG149C               ANOP  ,                                           01433200
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01433300
&ZMS                  SETC  '"SKEYCOMPARE='                             01433400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01433500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01433600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01433700
&ZMS                  SETC  '&ZMS "NO"'                                 01433800
&ZMS                  SETC  '&ZMS OR "YES".'                            01433900
                      MNOTE 8,' &ZMS '                                  01434000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01434100
                      AGO   .ZG149E                                     01434200
.ZG149D               ANOP  ,                                           01434300
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01434400
.ZG149E               ANOP  ,                                           01434500
.*-------------------------------------------------------------------   01434600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01434700
.ZG150                ANOP  ,                                           01434800
&ZTLC                 SETC 'ENTRYNAME'                                  01434900
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG175            01435000
&XLOCATOR             SETC  'ENTRYNAME'         SET KEYWORD             01435100
                      AIF   (N'&LOCATOR LE 1).ZG150A  CK NUM            01435200
&ZMS                  SETC  '"LOCATOR='                                 01435300
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01435400
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01435500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01435600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01435700
.ZG150A               ANOP  ,                                           01435800
.*------------------------------------------------------------------    01435900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01436000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01436100
.ZG150A0              AIF   (K'&KEYSCANTYPE LE 0).ZG150A1  OK           01436200
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     01436300
.ZG150A1              AIF   (K'&KEYCOMPARE LE 0).ZG150A2  OK            01436400
&ZCVAL                SETC '&ZCVAL KEYCOMPARE'  INCORRECT KEY USED      01436500
.ZG150A2              AIF   (K'&ENTRYKEY LE 0).ZG150A3  OK              01436600
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01436700
.ZG150A3              AIF   (K'&KEYREQTYPE LE 0).ZG150A4  OK            01436800
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01436900
.ZG150A4              AIF   (K'&KEYRANGEEND LE 0).ZG150A5  OK           01437000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01437100
.ZG150A5              AIF   (K'&SKEYCOMPARE LE 0).ZG150A6  OK           01437200
&ZCVAL                SETC '&ZCVAL SKEYCOMPARE'  INCORRECT KEY USED     01437300
.ZG150A6              AIF   (K'&SECONDARYKEY LE 0).ZG150A7  OK          01437400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01437500
.ZG150A7              AIF   (K'&SKEYREQTYPE LE 0).ZG150A8  OK           01437600
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01437700
.ZG150A8              AIF   (K'&SKEYRANGEEND LE 0).ZG150A9  OK          01437800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01437900
.ZG150A9              AIF   (K'&ENTRYID LE 0).ZG150A10  OK              01438000
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01438100
.ZG150A10             AIF   (K'&KEYTYPE LE 0).ZG150A11  OK              01438200
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01438300
.ZG150A11             AIF   (K'&ZCVAL LE 0).ZG150A12  OK                01438400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01438500
&ZMS                  SETC  '"LOCATOR'                                  01438600
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01438700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01438800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01438900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01439000
.ZG150A12             ANOP  ,                                           01439100
.*----------------------------------------------------------------***   01439200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01439300
                      AIF   (N'&ENTRYNAME LE 1).ZG152A  CK NUM          01439400
&ZMS                  SETC  '"ENTRYNAME='                               01439500
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          01439600
&ZMS                  SETC  '&ZMS "ENTRYNAME"'                          01439700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01439800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01439900
.ZG152A               ANOP  ,                                           01440000
.*-------------------------------------------------------------------   01440100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01440200
&ZXENTRYNAME          SETC  'INPUT'     SET IN/OUTPUT                   01440300
&XENTRYNAME           SETC  '&ENTRYNAME(1)'     SET XVARIABLE           01440400
                      AIF   (N'&ENTRYNAME GT 1).ZG152B  MULTI           01440500
&XENTRYNAME           SETC  '&ENTRYNAME'        SET XVARIABLE           01440600
.ZG152B               AIF   (K'&ENTRYNAME(1) GT 0).ZG152C               01440700
&ZXENTRYNAME          SETC  ''          RESET IN/OUTPUT                 01440800
&ZMS                  SETC  ' '                                         01440900
&ZMS                  SETC  '&ZMS "ENTRYNAME" KEY AND ITS'              01441000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01441100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01441200
.ZG152C               ANOP  ,                                           01441300
.*-------------------------------------------------------------------   01441400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01441500
                      AIF   (K'&ZXENTRYNAME LE 0).ZG152R  NOT I/O       01441600
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZG152R          01441700
&ZCGPR                SETC  '&XENTRYNAME'(2,K'&XENTRYNAME-2)            01441800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG152P               01441900
                      AIF   (K'&ZCGPR GT 2).ZG152Q                      01442000
                      AIF   ('&ZCGPR' EQ '0').ZG152Q                    01442100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01442200
                      AIF   (T'&ZCGPR NE 'N').ZG152Q  INVALID REG NAME  01442300
.ZG152P               ANOP  ,                                           01442400
                      AIF   (T'&ZCGPR NE 'N').ZG152R  NON NUMERIC       01442500
                      AIF   ('&ZCGPR' LT '2').ZG152Q                    01442600
                      AIF   ('&ZCGPR' LE '12').ZG152R                   01442700
.ZG152Q               ANOP  ,                                           01442800
&ZMS                  SETC  '"ENTRYNAME='                               01442900
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          01443000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01443100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01443200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01443300
.ZG152R               ANOP  ,                                           01443400
.*------------------------------------------------------------------    01443500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01443600
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01443700
.*-------------------------------------------------------------------   01443800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01443900
.ZG156                ANOP  ,                                           01444000
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG156A             01444100
&ZTLC                 SETC 'NO'                                         01444200
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG157        01444300
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     01444400
                      AIF   (N'&LISTCOMPARE LE 1).ZG156A  CK NUM        01444500
&ZMS                  SETC  '"LISTCOMPARE='                             01444600
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01444700
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01444800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01444900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01445000
.ZG156A               ANOP  ,                                           01445100
.*------------------------------------------------------------------    01445200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01445300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01445400
.ZG156A0              AIF   (K'&LISTNUM LE 0).ZG156A1  OK               01445500
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      01445600
.ZG156A1              AIF   (K'&AUTHCOMPARE LE 0).ZG156A2  OK           01445700
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     01445800
.ZG156A2              AIF   (K'&AUTHCOMP LE 0).ZG156A3  OK              01445900
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01446000
.ZG156A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG156A4  OK          01446100
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01446200
.ZG156A4              AIF   (K'&ZCVAL LE 0).ZG156A5  OK                 01446300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01446400
&ZMS                  SETC  '"LISTCOMPARE'                              01446500
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       01446600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01446700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01446800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01446900
.ZG156A5              ANOP  ,                                           01447000
.*-------------------------------------------------------------------   01447100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01447200
.ZG157                ANOP  ,                                           01447300
&ZTLC                 SETC 'YES'                                        01447400
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG174        01447500
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     01447600
                      AIF   (N'&LISTCOMPARE LE 1).ZG157A  CK NUM        01447700
&ZMS                  SETC  '"LISTCOMPARE='                             01447800
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01447900
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01448000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01448100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01448200
.ZG157A               ANOP  ,                                           01448300
.*----------------------------------------------------------------***   01448400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01448500
                      AIF   (N'&LISTNUM LE 1).ZG159A  CK NUM            01448600
&ZMS                  SETC  '"LISTNUM='                                 01448700
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01448800
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01448900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01449000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01449100
.ZG159A               ANOP  ,                                           01449200
.*-------------------------------------------------------------------   01449300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01449400
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01449500
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01449600
                      AIF   (N'&LISTNUM GT 1).ZG159B  MULTI             01449700
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01449800
.ZG159B               AIF   (K'&LISTNUM(1) GT 0).ZG159C                 01449900
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01450000
&ZMS                  SETC  ' '                                         01450100
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01450200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01450300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01450400
.ZG159C               ANOP  ,                                           01450500
.*-------------------------------------------------------------------   01450600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01450700
                      AIF   (K'&ZXLISTNUM LE 0).ZG159R  NOT I/O         01450800
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG159R            01450900
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01451000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG159P               01451100
                      AIF   (K'&ZCGPR GT 2).ZG159Q                      01451200
                      AIF   ('&ZCGPR' EQ '0').ZG159Q                    01451300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01451400
                      AIF   (T'&ZCGPR NE 'N').ZG159Q  INVALID REG NAME  01451500
.ZG159P               ANOP  ,                                           01451600
                      AIF   (T'&ZCGPR NE 'N').ZG159R  NON NUMERIC       01451700
                      AIF   ('&ZCGPR' LT '2').ZG159Q                    01451800
                      AIF   ('&ZCGPR' LE '12').ZG159R                   01451900
.ZG159Q               ANOP  ,                                           01452000
&ZMS                  SETC  '"LISTNUM='                                 01452100
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01452200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01452300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01452400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01452500
.ZG159R               ANOP  ,                                           01452600
.*------------------------------------------------------------------    01452700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01452800
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01452900
.*-------------------------------------------------------------------   01453000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01453100
.ZG163                ANOP  ,                                           01453200
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG163A             01453300
&ZTLC                 SETC 'NO'                                         01453400
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG164        01453500
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01453600
                      AIF   (N'&AUTHCOMPARE LE 1).ZG163A  CK NUM        01453700
&ZMS                  SETC  '"AUTHCOMPARE='                             01453800
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01453900
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01454000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01454100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01454200
.ZG163A               ANOP  ,                                           01454300
.*------------------------------------------------------------------    01454400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01454500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01454600
.ZG163A0              AIF   (K'&AUTHCOMP LE 0).ZG163A1  OK              01454700
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01454800
.ZG163A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG163A2  OK          01454900
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01455000
.ZG163A2              AIF   (K'&ZCVAL LE 0).ZG163A3  OK                 01455100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01455200
&ZMS                  SETC  '"AUTHCOMPARE'                              01455300
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01455400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01455500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01455600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01455700
.ZG163A3              ANOP  ,                                           01455800
.*-------------------------------------------------------------------   01455900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01456000
.ZG164                ANOP  ,                                           01456100
&ZTLC                 SETC 'YES'                                        01456200
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG173        01456300
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01456400
                      AIF   (N'&AUTHCOMPARE LE 1).ZG164A  CK NUM        01456500
&ZMS                  SETC  '"AUTHCOMPARE='                             01456600
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01456700
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01456800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01456900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01457000
.ZG164A               ANOP  ,                                           01457100
.*----------------------------------------------------------------***   01457200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01457300
                      AIF   (N'&AUTHCOMP LE 1).ZG166A  CK NUM           01457400
&ZMS                  SETC  '"AUTHCOMP='                                01457500
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01457600
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01457700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01457800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01457900
.ZG166A               ANOP  ,                                           01458000
.*-------------------------------------------------------------------   01458100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01458200
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01458300
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01458400
                      AIF   (N'&AUTHCOMP GT 1).ZG166B  MULTI            01458500
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01458600
.ZG166B               AIF   (K'&AUTHCOMP(1) GT 0).ZG166C                01458700
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01458800
&ZMS                  SETC  ' '                                         01458900
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01459000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01459100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01459200
.ZG166C               ANOP  ,                                           01459300
.*-------------------------------------------------------------------   01459400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01459500
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG166R  NOT I/O        01459600
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG166R           01459700
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01459800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG166P               01459900
                      AIF   (K'&ZCGPR GT 2).ZG166Q                      01460000
                      AIF   ('&ZCGPR' EQ '0').ZG166Q                    01460100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01460200
                      AIF   (T'&ZCGPR NE 'N').ZG166Q  INVALID REG NAME  01460300
.ZG166P               ANOP  ,                                           01460400
                      AIF   (T'&ZCGPR NE 'N').ZG166R  NON NUMERIC       01460500
                      AIF   ('&ZCGPR' LT '2').ZG166Q                    01460600
                      AIF   ('&ZCGPR' LE '12').ZG166R                   01460700
.ZG166Q               ANOP  ,                                           01460800
&ZMS                  SETC  '"AUTHCOMP='                                01460900
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01461000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01461100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01461200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01461300
.ZG166R               ANOP  ,                                           01461400
.*----------------------------------------------------------------***   01461500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01461600
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG168A  CK NUM       01461700
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01461800
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01461900
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01462000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01462100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01462200
.ZG168A               ANOP  ,                                           01462300
.*-------------------------------------------------------------------   01462400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01462500
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01462600
.ZG169A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG170A                  01462700
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01462800
.*-------------------------------------------------------------------   01462900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01463000
.ZG170A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG171A            01463100
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01463200
.*-------------------------------------------------------------------   01463300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01463400
.ZG171A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG171C  KEYWORD     01463500
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG171B            01463600
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01463700
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01463800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01463900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01464000
&ZMS                  SETC  '&ZMS "EQUAL"'                              01464100
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01464200
                      MNOTE 8,' &ZMS '                                  01464300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01464400
.ZG171B               ANOP  ,                                           01464500
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01464600
.ZG171C               ANOP  ,                                           01464700
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01464800
.*-------------------------------------------------------------------   01464900
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01465000
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG171D  KEY           01465100
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG171D  PARM      01465200
&ZMS                  SETC  '"AUTHCOMPTYPE'                             01465300
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01465400
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01465500
&ZMS                  SETC  '&ZMS '                                     01465600
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01465700
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01465800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01465900
.ZG171D               ANOP  ,                                           01466000
.*------------------------------------------------------------------    01466100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01466200
.ZG173                ANOP  ,                                           01466300
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01466400
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG173E  VALID ARG    01466500
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG173D  OMITTED     01466600
&ZASYSLNDX            SETA  0                                           01466700
.ZG173A               ANOP  ,           POSITIONAL MACRO KEY            01466800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01466900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG173C           01467000
&ZTLC                 SETC 'AUTHCOMPARE'                                01467100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG173A  01467200
.ZG173B               ANOP  ,                                           01467300
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01467400
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     01467500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01467600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01467700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01467800
                      AGO   .ZG173E                                     01467900
.ZG173C               ANOP  ,                                           01468000
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01468100
&ZMS                  SETC  '"AUTHCOMPARE='                             01468200
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01468300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01468400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01468500
&ZMS                  SETC  '&ZMS "NO"'                                 01468600
&ZMS                  SETC  '&ZMS OR "YES".'                            01468700
                      MNOTE 8,' &ZMS '                                  01468800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01468900
                      AGO   .ZG173E                                     01469000
.ZG173D               ANOP  ,                                           01469100
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01469200
.ZG173E               ANOP  ,                                           01469300
.*------------------------------------------------------------------    01469400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01469500
.ZG174                ANOP  ,                                           01469600
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01469700
                      AIF   (K'&XLISTCOMPARE GT 0).ZG174E  VALID ARG    01469800
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG174D  OMITTED     01469900
&ZASYSLNDX            SETA  0                                           01470000
.ZG174A               ANOP  ,           POSITIONAL MACRO KEY            01470100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01470200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG174C           01470300
&ZTLC                 SETC 'LISTCOMPARE'                                01470400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG174A  01470500
.ZG174B               ANOP  ,                                           01470600
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01470700
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'                     01470800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01470900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01471000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01471100
                      AGO   .ZG174E                                     01471200
.ZG174C               ANOP  ,                                           01471300
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01471400
&ZMS                  SETC  '"LISTCOMPARE='                             01471500
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01471600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01471700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01471800
&ZMS                  SETC  '&ZMS "NO"'                                 01471900
&ZMS                  SETC  '&ZMS OR "YES".'                            01472000
                      MNOTE 8,' &ZMS '                                  01472100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01472200
                      AGO   .ZG174E                                     01472300
.ZG174D               ANOP  ,                                           01472400
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01472500
.ZG174E               ANOP  ,                                           01472600
.*-------------------------------------------------------------------   01472700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01472800
.ZG175                ANOP  ,                                           01472900
&ZTLC                 SETC 'UNKEYPOS'                                   01473000
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG233            01473100
&XLOCATOR             SETC  'UNKEYPOS'  SET KEYWORD                     01473200
                      AIF   (N'&LOCATOR LE 1).ZG175A  CK NUM            01473300
&ZMS                  SETC  '"LOCATOR='                                 01473400
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01473500
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01473600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01473700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01473800
.ZG175A               ANOP  ,                                           01473900
.*------------------------------------------------------------------    01474000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01474100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01474200
.ZG175A0              AIF   (K'&ENTRYID LE 0).ZG175A1  OK               01474300
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01474400
.ZG175A1              AIF   (K'&LISTCOMPARE LE 0).ZG175A2  OK           01474500
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     01474600
.ZG175A2              AIF   (K'&ENTRYNAME LE 0).ZG175A3  OK             01474700
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01474800
.ZG175A3              AIF   (K'&KEYTYPE LE 0).ZG175A4  OK               01474900
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01475000
.ZG175A4              AIF   (K'&ZCVAL LE 0).ZG175A5  OK                 01475100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01475200
&ZMS                  SETC  '"LOCATOR'                                  01475300
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01475400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01475500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01475600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01475700
.ZG175A5              ANOP  ,                                           01475800
.*----------------------------------------------------------------***   01475900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01476000
                      AIF   (N'&LISTNUM LE 1).ZG177A  CK NUM            01476100
&ZMS                  SETC  '"LISTNUM='                                 01476200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01476300
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01476400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01476500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01476600
.ZG177A               ANOP  ,                                           01476700
.*-------------------------------------------------------------------   01476800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01476900
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01477000
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01477100
                      AIF   (N'&LISTNUM GT 1).ZG177B  MULTI             01477200
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01477300
.ZG177B               AIF   (K'&LISTNUM(1) GT 0).ZG177C                 01477400
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01477500
&ZMS                  SETC  ' '                                         01477600
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01477700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01477800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01477900
.ZG177C               ANOP  ,                                           01478000
.*-------------------------------------------------------------------   01478100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01478200
                      AIF   (K'&ZXLISTNUM LE 0).ZG177R  NOT I/O         01478300
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG177R            01478400
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01478500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG177P               01478600
                      AIF   (K'&ZCGPR GT 2).ZG177Q                      01478700
                      AIF   ('&ZCGPR' EQ '0').ZG177Q                    01478800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01478900
                      AIF   (T'&ZCGPR NE 'N').ZG177Q  INVALID REG NAME  01479000
.ZG177P               ANOP  ,                                           01479100
                      AIF   (T'&ZCGPR NE 'N').ZG177R  NON NUMERIC       01479200
                      AIF   ('&ZCGPR' LT '2').ZG177Q                    01479300
                      AIF   ('&ZCGPR' LE '12').ZG177R                   01479400
.ZG177Q               ANOP  ,                                           01479500
&ZMS                  SETC  '"LISTNUM='                                 01479600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01479700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01479800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01479900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01480000
.ZG177R               ANOP  ,                                           01480100
.*----------------------------------------------------------------***   01480200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01480300
                      AIF   (N'&KEYSCANTYPE LE 1).ZG180A  CK NUM        01480400
&ZMS                  SETC  '"KEYSCANTYPE='                             01480500
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01480600
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01480700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01480800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01480900
.ZG180A               ANOP  ,                                           01481000
.*-------------------------------------------------------------------   01481100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01481200
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01481300
.ZG181A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG182A                   01481400
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01481500
.*-------------------------------------------------------------------   01481600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01481700
.ZG182A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG183A               01481800
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01481900
.*-------------------------------------------------------------------   01482000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01482100
.ZG183A               AIF   (K'&XKEYSCANTYPE GT 0).ZG183C  KEYWORD      01482200
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG183B             01482300
&ZMS                  SETC  '"KEYSCANTYPE='                             01482400
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01482500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01482600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01482700
&ZMS                  SETC  '&ZMS "ENTRY"'                              01482800
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01482900
                      MNOTE 8,' &ZMS '                                  01483000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01483100
.ZG183B               ANOP  ,                                           01483200
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01483300
.ZG183C               ANOP  ,                                           01483400
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01483500
.*------------------------------------------------------------------    01483600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01483700
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01483800
.*-------------------------------------------------------------------   01483900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01484000
.ZG186                ANOP  ,                                           01484100
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG186A             01484200
&ZTLC                 SETC 'NO'                                         01484300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG187        01484400
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01484500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG186A  CK NUM        01484600
&ZMS                  SETC  '"AUTHCOMPARE='                             01484700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01484800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01484900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01485000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01485100
.ZG186A               ANOP  ,                                           01485200
.*------------------------------------------------------------------    01485300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01485400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01485500
.ZG186A0              AIF   (K'&AUTHCOMP LE 0).ZG186A1  OK              01485600
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01485700
.ZG186A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG186A2  OK          01485800
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01485900
.ZG186A2              AIF   (K'&ZCVAL LE 0).ZG186A3  OK                 01486000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01486100
&ZMS                  SETC  '"AUTHCOMPARE'                              01486200
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01486300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01486400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01486500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01486600
.ZG186A3              ANOP  ,                                           01486700
.*-------------------------------------------------------------------   01486800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01486900
.ZG187                ANOP  ,                                           01487000
&ZTLC                 SETC 'YES'                                        01487100
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG196        01487200
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01487300
                      AIF   (N'&AUTHCOMPARE LE 1).ZG187A  CK NUM        01487400
&ZMS                  SETC  '"AUTHCOMPARE='                             01487500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01487600
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01487700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01487800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01487900
.ZG187A               ANOP  ,                                           01488000
.*----------------------------------------------------------------***   01488100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01488200
                      AIF   (N'&AUTHCOMP LE 1).ZG189A  CK NUM           01488300
&ZMS                  SETC  '"AUTHCOMP='                                01488400
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01488500
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01488600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01488700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01488800
.ZG189A               ANOP  ,                                           01488900
.*-------------------------------------------------------------------   01489000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01489100
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01489200
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01489300
                      AIF   (N'&AUTHCOMP GT 1).ZG189B  MULTI            01489400
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01489500
.ZG189B               AIF   (K'&AUTHCOMP(1) GT 0).ZG189C                01489600
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01489700
&ZMS                  SETC  ' '                                         01489800
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01489900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01490000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01490100
.ZG189C               ANOP  ,                                           01490200
.*-------------------------------------------------------------------   01490300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01490400
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG189R  NOT I/O        01490500
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG189R           01490600
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01490700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG189P               01490800
                      AIF   (K'&ZCGPR GT 2).ZG189Q                      01490900
                      AIF   ('&ZCGPR' EQ '0').ZG189Q                    01491000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01491100
                      AIF   (T'&ZCGPR NE 'N').ZG189Q  INVALID REG NAME  01491200
.ZG189P               ANOP  ,                                           01491300
                      AIF   (T'&ZCGPR NE 'N').ZG189R  NON NUMERIC       01491400
                      AIF   ('&ZCGPR' LT '2').ZG189Q                    01491500
                      AIF   ('&ZCGPR' LE '12').ZG189R                   01491600
.ZG189Q               ANOP  ,                                           01491700
&ZMS                  SETC  '"AUTHCOMP='                                01491800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01491900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01492000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01492100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01492200
.ZG189R               ANOP  ,                                           01492300
.*----------------------------------------------------------------***   01492400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01492500
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG191A  CK NUM       01492600
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01492700
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01492800
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01492900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01493000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01493100
.ZG191A               ANOP  ,                                           01493200
.*-------------------------------------------------------------------   01493300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01493400
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01493500
.ZG192A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG193A                  01493600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01493700
.*-------------------------------------------------------------------   01493800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01493900
.ZG193A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG194A            01494000
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01494100
.*-------------------------------------------------------------------   01494200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01494300
.ZG194A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG194C  KEYWORD     01494400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG194B            01494500
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01494600
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01494700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01494800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01494900
&ZMS                  SETC  '&ZMS "EQUAL"'                              01495000
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01495100
                      MNOTE 8,' &ZMS '                                  01495200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01495300
.ZG194B               ANOP  ,                                           01495400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01495500
.ZG194C               ANOP  ,                                           01495600
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01495700
.*-------------------------------------------------------------------   01495800
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01495900
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG194D  KEY           01496000
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG194D  PARM      01496100
&ZMS                  SETC  '"AUTHCOMPTYPE'                             01496200
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01496300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01496400
&ZMS                  SETC  '&ZMS '                                     01496500
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01496600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01496700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01496800
.ZG194D               ANOP  ,                                           01496900
.*------------------------------------------------------------------    01497000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01497100
.ZG196                ANOP  ,                                           01497200
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01497300
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG196E  VALID ARG    01497400
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG196D  OMITTED     01497500
&ZASYSLNDX            SETA  0                                           01497600
.ZG196A               ANOP  ,           POSITIONAL MACRO KEY            01497700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01497800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG196C           01497900
&ZTLC                 SETC 'AUTHCOMPARE'                                01498000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG196A  01498100
.ZG196B               ANOP  ,                                           01498200
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01498300
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     01498400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01498500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01498600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01498700
                      AGO   .ZG196E                                     01498800
.ZG196C               ANOP  ,                                           01498900
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01499000
&ZMS                  SETC  '"AUTHCOMPARE='                             01499100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01499200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01499300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01499400
&ZMS                  SETC  '&ZMS "NO"'                                 01499500
&ZMS                  SETC  '&ZMS OR "YES".'                            01499600
                      MNOTE 8,' &ZMS '                                  01499700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01499800
                      AGO   .ZG196E                                     01499900
.ZG196D               ANOP  ,                                           01500000
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01500100
.ZG196E               ANOP  ,                                           01500200
.*------------------------------------------------------------------    01500300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01500400
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01500500
.*-------------------------------------------------------------------   01500600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01500700
.ZG199                ANOP  ,                                           01500800
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG199A              01500900
&ZTLC                 SETC 'NO'                                         01501000
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG200         01501100
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01501200
                      AIF   (N'&KEYCOMPARE LE 1).ZG199A  CK NUM         01501300
&ZMS                  SETC  '"KEYCOMPARE='                              01501400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01501500
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01501600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01501700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01501800
.ZG199A               ANOP  ,                                           01501900
.*------------------------------------------------------------------    01502000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01502100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01502200
.ZG199A0              AIF   (K'&ENTRYKEY LE 0).ZG199A1  OK              01502300
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01502400
.ZG199A1              AIF   (K'&KEYREQTYPE LE 0).ZG199A2  OK            01502500
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01502600
.ZG199A2              AIF   (K'&KEYRANGEEND LE 0).ZG199A3  OK           01502700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01502800
.ZG199A3              AIF   (K'&ZCVAL LE 0).ZG199A4  OK                 01502900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01503000
&ZMS                  SETC  '"KEYCOMPARE'                               01503100
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01503200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01503300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01503400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01503500
.ZG199A4              ANOP  ,                                           01503600
.*-------------------------------------------------------------------   01503700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01503800
.ZG200                ANOP  ,                                           01503900
&ZTLC                 SETC 'YES'                                        01504000
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG214         01504100
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01504200
                      AIF   (N'&KEYCOMPARE LE 1).ZG200A  CK NUM         01504300
&ZMS                  SETC  '"KEYCOMPARE='                              01504400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01504500
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01504600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01504700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01504800
.ZG200A               ANOP  ,                                           01504900
.*----------------------------------------------------------------***   01505000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01505100
                      AIF   (N'&ENTRYKEY LE 1).ZG202A  CK NUM           01505200
&ZMS                  SETC  '"ENTRYKEY='                                01505300
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01505400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01505500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01505600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01505700
.ZG202A               ANOP  ,                                           01505800
.*-------------------------------------------------------------------   01505900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01506000
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01506100
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01506200
                      AIF   (N'&ENTRYKEY GT 1).ZG202B  MULTI            01506300
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01506400
.ZG202B               AIF   (K'&ENTRYKEY(1) GT 0).ZG202C                01506500
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01506600
&ZMS                  SETC  ' '                                         01506700
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01506800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01506900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01507000
.ZG202C               ANOP  ,                                           01507100
.*-------------------------------------------------------------------   01507200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01507300
                      AIF   (K'&ZXENTRYKEY LE 0).ZG202R  NOT I/O        01507400
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG202R           01507500
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01507600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG202P               01507700
                      AIF   (K'&ZCGPR GT 2).ZG202Q                      01507800
                      AIF   ('&ZCGPR' EQ '0').ZG202Q                    01507900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01508000
                      AIF   (T'&ZCGPR NE 'N').ZG202Q  INVALID REG NAME  01508100
.ZG202P               ANOP  ,                                           01508200
                      AIF   (T'&ZCGPR NE 'N').ZG202R  NON NUMERIC       01508300
                      AIF   ('&ZCGPR' LT '2').ZG202Q                    01508400
                      AIF   ('&ZCGPR' LE '12').ZG202R                   01508500
.ZG202Q               ANOP  ,                                           01508600
&ZMS                  SETC  '"ENTRYKEY='                                01508700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01508800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01508900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01509000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01509100
.ZG202R               ANOP  ,                                           01509200
.*------------------------------------------------------------------    01509300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01509400
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01509500
.*-------------------------------------------------------------------   01509600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01509700
.ZG206                ANOP  ,                                           01509800
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG206A              01509900
&ZTLC                 SETC 'EQUAL'                                      01510000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG207         01510100
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01510200
                      AIF   (N'&KEYREQTYPE LE 1).ZG206A  CK NUM         01510300
&ZMS                  SETC  '"KEYREQTYPE='                              01510400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01510500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01510600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01510700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01510800
.ZG206A               ANOP  ,                                           01510900
.*------------------------------------------------------------------    01511000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01511100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01511200
.ZG206A0              AIF   (K'&KEYRANGEEND LE 0).ZG206A1  OK           01511300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01511400
.ZG206A1              AIF   (K'&ZCVAL LE 0).ZG206A2  OK                 01511500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01511600
&ZMS                  SETC  '"KEYREQTYPE'                               01511700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01511800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01511900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01512000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01512100
.ZG206A2              ANOP  ,                                           01512200
.*-------------------------------------------------------------------   01512300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01512400
.ZG207                ANOP  ,                                           01512500
&ZTLC                 SETC 'LESSOREQUAL'                                01512600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG208         01512700
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01512800
                      AIF   (N'&KEYREQTYPE LE 1).ZG207A  CK NUM         01512900
&ZMS                  SETC  '"KEYREQTYPE='                              01513000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01513100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01513200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01513300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01513400
.ZG207A               ANOP  ,                                           01513500
.*------------------------------------------------------------------    01513600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01513700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01513800
.ZG207A0              AIF   (K'&KEYRANGEEND LE 0).ZG207A1  OK           01513900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01514000
.ZG207A1              AIF   (K'&ZCVAL LE 0).ZG207A2  OK                 01514100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01514200
&ZMS                  SETC  '"KEYREQTYPE'                               01514300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01514400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01514500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01514600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01514700
.ZG207A2              ANOP  ,                                           01514800
.*-------------------------------------------------------------------   01514900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01515000
.ZG208                ANOP  ,                                           01515100
&ZTLC                 SETC 'GREATEROREQUAL'                             01515200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG209         01515300
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01515400
                      AIF   (N'&KEYREQTYPE LE 1).ZG208A  CK NUM         01515500
&ZMS                  SETC  '"KEYREQTYPE='                              01515600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01515700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01515800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01515900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01516000
.ZG208A               ANOP  ,                                           01516100
.*------------------------------------------------------------------    01516200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01516300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01516400
.ZG208A0              AIF   (K'&KEYRANGEEND LE 0).ZG208A1  OK           01516500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01516600
.ZG208A1              AIF   (K'&ZCVAL LE 0).ZG208A2  OK                 01516700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01516800
&ZMS                  SETC  '"KEYREQTYPE'                               01516900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01517000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01517100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01517200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01517300
.ZG208A2              ANOP  ,                                           01517400
.*-------------------------------------------------------------------   01517500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01517600
.ZG209                ANOP  ,                                           01517700
&ZTLC                 SETC 'RANGE'                                      01517800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG213         01517900
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01518000
                      AIF   (N'&KEYREQTYPE LE 1).ZG209A  CK NUM         01518100
&ZMS                  SETC  '"KEYREQTYPE='                              01518200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01518300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01518400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01518500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01518600
.ZG209A               ANOP  ,                                           01518700
.*----------------------------------------------------------------***   01518800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01518900
                      AIF   (N'&KEYRANGEEND LE 1).ZG211A  CK NUM        01519000
&ZMS                  SETC  '"KEYRANGEEND='                             01519100
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01519200
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01519300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01519400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01519500
.ZG211A               ANOP  ,                                           01519600
.*-------------------------------------------------------------------   01519700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01519800
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01519900
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01520000
                      AIF   (N'&KEYRANGEEND GT 1).ZG211B  MULTI         01520100
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01520200
.ZG211B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG211C             01520300
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01520400
&ZMS                  SETC  ' '                                         01520500
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01520600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01520700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01520800
.ZG211C               ANOP  ,                                           01520900
.*-------------------------------------------------------------------   01521000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01521100
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG211R  NOT I/O     01521200
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG211R        01521300
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01521400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG211P               01521500
                      AIF   (K'&ZCGPR GT 2).ZG211Q                      01521600
                      AIF   ('&ZCGPR' EQ '0').ZG211Q                    01521700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01521800
                      AIF   (T'&ZCGPR NE 'N').ZG211Q  INVALID REG NAME  01521900
.ZG211P               ANOP  ,                                           01522000
                      AIF   (T'&ZCGPR NE 'N').ZG211R  NON NUMERIC       01522100
                      AIF   ('&ZCGPR' LT '2').ZG211Q                    01522200
                      AIF   ('&ZCGPR' LE '12').ZG211R                   01522300
.ZG211Q               ANOP  ,                                           01522400
&ZMS                  SETC  '"KEYRANGEEND='                             01522500
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01522600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01522700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01522800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01522900
.ZG211R               ANOP  ,                                           01523000
.*------------------------------------------------------------------    01523100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01523200
.ZG213                ANOP  ,                                           01523300
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01523400
                      AIF   (K'&XKEYREQTYPE GT 0).ZG213E  VALID ARG     01523500
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG213D  OMITTED      01523600
&ZASYSLNDX            SETA  0                                           01523700
.ZG213A               ANOP  ,           POSITIONAL MACRO KEY            01523800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01523900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG213C           01524000
&ZTLC                 SETC 'KEYREQTYPE'                                 01524100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG213A  01524200
.ZG213B               ANOP  ,                                           01524300
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01524400
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      01524500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01524600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01524700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01524800
                      AGO   .ZG213E                                     01524900
.ZG213C               ANOP  ,                                           01525000
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01525100
&ZMS                  SETC  '"KEYREQTYPE='                              01525200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01525300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01525400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01525500
&ZMS                  SETC  '&ZMS "EQUAL",'                             01525600
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01525700
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01525800
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01525900
                      MNOTE 8,' &ZMS '                                  01526000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01526100
                      AGO   .ZG213E                                     01526200
.ZG213D               ANOP  ,                                           01526300
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01526400
.ZG213E               ANOP  ,                                           01526500
.*------------------------------------------------------------------    01526600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01526700
.ZG214                ANOP  ,                                           01526800
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01526900
                      AIF   (K'&XKEYCOMPARE GT 0).ZG214E  VALID ARG     01527000
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG214D  OMITTED      01527100
&ZASYSLNDX            SETA  0                                           01527200
.ZG214A               ANOP  ,           POSITIONAL MACRO KEY            01527300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01527400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG214C           01527500
&ZTLC                 SETC 'KEYCOMPARE'                                 01527600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG214A  01527700
.ZG214B               ANOP  ,                                           01527800
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01527900
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      01528000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01528100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01528200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01528300
                      AGO   .ZG214E                                     01528400
.ZG214C               ANOP  ,                                           01528500
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01528600
&ZMS                  SETC  '"KEYCOMPARE='                              01528700
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01528800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01528900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01529000
&ZMS                  SETC  '&ZMS "NO"'                                 01529100
&ZMS                  SETC  '&ZMS OR "YES".'                            01529200
                      MNOTE 8,' &ZMS '                                  01529300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01529400
                      AGO   .ZG214E                                     01529500
.ZG214D               ANOP  ,                                           01529600
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01529700
.ZG214E               ANOP  ,                                           01529800
.*------------------------------------------------------------------    01529900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01530000
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01530100
.*-------------------------------------------------------------------   01530200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01530300
.ZG217                ANOP  ,                                           01530400
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG217A             01530500
&ZTLC                 SETC 'NO'                                         01530600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG218        01530700
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01530800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG217A  CK NUM        01530900
&ZMS                  SETC  '"SKEYCOMPARE='                             01531000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01531100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01531200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01531300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01531400
.ZG217A               ANOP  ,                                           01531500
.*------------------------------------------------------------------    01531600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01531700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01531800
.ZG217A0              AIF   (K'&SECONDARYKEY LE 0).ZG217A1  OK          01531900
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01532000
.ZG217A1              AIF   (K'&SKEYREQTYPE LE 0).ZG217A2  OK           01532100
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01532200
.ZG217A2              AIF   (K'&SKEYRANGEEND LE 0).ZG217A3  OK          01532300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01532400
.ZG217A3              AIF   (K'&ZCVAL LE 0).ZG217A4  OK                 01532500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01532600
&ZMS                  SETC  '"SKEYCOMPARE'                              01532700
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01532800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01532900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01533000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01533100
.ZG217A4              ANOP  ,                                           01533200
.*-------------------------------------------------------------------   01533300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01533400
.ZG218                ANOP  ,                                           01533500
&ZTLC                 SETC 'YES'                                        01533600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG232        01533700
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01533800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG218A  CK NUM        01533900
&ZMS                  SETC  '"SKEYCOMPARE='                             01534000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01534100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01534200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01534300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01534400
.ZG218A               ANOP  ,                                           01534500
.*----------------------------------------------------------------***   01534600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01534700
                      AIF   (N'&SECONDARYKEY LE 1).ZG220A  CK NUM       01534800
&ZMS                  SETC  '"SECONDARYKEY='                            01534900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01535000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01535100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01535200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01535300
.ZG220A               ANOP  ,                                           01535400
.*-------------------------------------------------------------------   01535500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01535600
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01535700
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01535800
                      AIF   (N'&SECONDARYKEY GT 1).ZG220B  MULTI        01535900
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01536000
.ZG220B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG220C            01536100
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01536200
&ZMS                  SETC  ' '                                         01536300
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01536400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01536500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01536600
.ZG220C               ANOP  ,                                           01536700
.*-------------------------------------------------------------------   01536800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01536900
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG220R  NOT I/O    01537000
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG220R       01537100
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01537200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG220P               01537300
                      AIF   (K'&ZCGPR GT 2).ZG220Q                      01537400
                      AIF   ('&ZCGPR' EQ '0').ZG220Q                    01537500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01537600
                      AIF   (T'&ZCGPR NE 'N').ZG220Q  INVALID REG NAME  01537700
.ZG220P               ANOP  ,                                           01537800
                      AIF   (T'&ZCGPR NE 'N').ZG220R  NON NUMERIC       01537900
                      AIF   ('&ZCGPR' LT '2').ZG220Q                    01538000
                      AIF   ('&ZCGPR' LE '12').ZG220R                   01538100
.ZG220Q               ANOP  ,                                           01538200
&ZMS                  SETC  '"SECONDARYKEY='                            01538300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01538400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01538500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01538600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01538700
.ZG220R               ANOP  ,                                           01538800
.*------------------------------------------------------------------    01538900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01539000
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01539100
.*-------------------------------------------------------------------   01539200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01539300
.ZG224                ANOP  ,                                           01539400
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG224A             01539500
&ZTLC                 SETC 'EQUAL'                                      01539600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG225        01539700
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01539800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG224A  CK NUM        01539900
&ZMS                  SETC  '"SKEYREQTYPE='                             01540000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01540100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01540200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01540300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01540400
.ZG224A               ANOP  ,                                           01540500
.*------------------------------------------------------------------    01540600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01540700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01540800
.ZG224A0              AIF   (K'&SKEYRANGEEND LE 0).ZG224A1  OK          01540900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01541000
.ZG224A1              AIF   (K'&ZCVAL LE 0).ZG224A2  OK                 01541100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01541200
&ZMS                  SETC  '"SKEYREQTYPE'                              01541300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01541400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01541500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01541600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01541700
.ZG224A2              ANOP  ,                                           01541800
.*-------------------------------------------------------------------   01541900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01542000
.ZG225                ANOP  ,                                           01542100
&ZTLC                 SETC 'LESSOREQUAL'                                01542200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG226        01542300
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01542400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG225A  CK NUM        01542500
&ZMS                  SETC  '"SKEYREQTYPE='                             01542600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01542700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01542800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01542900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01543000
.ZG225A               ANOP  ,                                           01543100
.*------------------------------------------------------------------    01543200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01543300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01543400
.ZG225A0              AIF   (K'&SKEYRANGEEND LE 0).ZG225A1  OK          01543500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01543600
.ZG225A1              AIF   (K'&ZCVAL LE 0).ZG225A2  OK                 01543700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01543800
&ZMS                  SETC  '"SKEYREQTYPE'                              01543900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01544000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01544100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01544200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01544300
.ZG225A2              ANOP  ,                                           01544400
.*-------------------------------------------------------------------   01544500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01544600
.ZG226                ANOP  ,                                           01544700
&ZTLC                 SETC 'GREATEROREQUAL'                             01544800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG227        01544900
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01545000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG226A  CK NUM        01545100
&ZMS                  SETC  '"SKEYREQTYPE='                             01545200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01545300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01545400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01545500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01545600
.ZG226A               ANOP  ,                                           01545700
.*------------------------------------------------------------------    01545800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01545900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01546000
.ZG226A0              AIF   (K'&SKEYRANGEEND LE 0).ZG226A1  OK          01546100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01546200
.ZG226A1              AIF   (K'&ZCVAL LE 0).ZG226A2  OK                 01546300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01546400
&ZMS                  SETC  '"SKEYREQTYPE'                              01546500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01546600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01546700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01546800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01546900
.ZG226A2              ANOP  ,                                           01547000
.*-------------------------------------------------------------------   01547100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01547200
.ZG227                ANOP  ,                                           01547300
&ZTLC                 SETC 'RANGE'                                      01547400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG231        01547500
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01547600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG227A  CK NUM        01547700
&ZMS                  SETC  '"SKEYREQTYPE='                             01547800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01547900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01548000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01548100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01548200
.ZG227A               ANOP  ,                                           01548300
.*----------------------------------------------------------------***   01548400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01548500
                      AIF   (N'&SKEYRANGEEND LE 1).ZG229A  CK NUM       01548600
&ZMS                  SETC  '"SKEYRANGEEND='                            01548700
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01548800
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01548900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01549000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01549100
.ZG229A               ANOP  ,                                           01549200
.*-------------------------------------------------------------------   01549300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01549400
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01549500
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01549600
                      AIF   (N'&SKEYRANGEEND GT 1).ZG229B  MULTI        01549700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01549800
.ZG229B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG229C            01549900
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01550000
&ZMS                  SETC  ' '                                         01550100
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01550200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01550300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01550400
.ZG229C               ANOP  ,                                           01550500
.*-------------------------------------------------------------------   01550600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01550700
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG229R  NOT I/O    01550800
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG229R       01550900
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01551000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG229P               01551100
                      AIF   (K'&ZCGPR GT 2).ZG229Q                      01551200
                      AIF   ('&ZCGPR' EQ '0').ZG229Q                    01551300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01551400
                      AIF   (T'&ZCGPR NE 'N').ZG229Q  INVALID REG NAME  01551500
.ZG229P               ANOP  ,                                           01551600
                      AIF   (T'&ZCGPR NE 'N').ZG229R  NON NUMERIC       01551700
                      AIF   ('&ZCGPR' LT '2').ZG229Q                    01551800
                      AIF   ('&ZCGPR' LE '12').ZG229R                   01551900
.ZG229Q               ANOP  ,                                           01552000
&ZMS                  SETC  '"SKEYRANGEEND='                            01552100
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01552200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01552300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01552400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01552500
.ZG229R               ANOP  ,                                           01552600
.*------------------------------------------------------------------    01552700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01552800
.ZG231                ANOP  ,                                           01552900
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01553000
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG231E  VALID ARG    01553100
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG231D  OMITTED     01553200
&ZASYSLNDX            SETA  0                                           01553300
.ZG231A               ANOP  ,           POSITIONAL MACRO KEY            01553400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01553500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG231C           01553600
&ZTLC                 SETC 'SKEYREQTYPE'                                01553700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG231A  01553800
.ZG231B               ANOP  ,                                           01553900
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01554000
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     01554100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01554200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01554300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01554400
                      AGO   .ZG231E                                     01554500
.ZG231C               ANOP  ,                                           01554600
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01554700
&ZMS                  SETC  '"SKEYREQTYPE='                             01554800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01554900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01555000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01555100
&ZMS                  SETC  '&ZMS "EQUAL",'                             01555200
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01555300
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01555400
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01555500
                      MNOTE 8,' &ZMS '                                  01555600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01555700
                      AGO   .ZG231E                                     01555800
.ZG231D               ANOP  ,                                           01555900
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01556000
.ZG231E               ANOP  ,                                           01556100
.*------------------------------------------------------------------    01556200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01556300
.ZG232                ANOP  ,                                           01556400
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01556500
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG232E  VALID ARG    01556600
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG232D  OMITTED     01556700
&ZASYSLNDX            SETA  0                                           01556800
.ZG232A               ANOP  ,           POSITIONAL MACRO KEY            01556900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01557000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG232C           01557100
&ZTLC                 SETC 'SKEYCOMPARE'                                01557200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG232A  01557300
.ZG232B               ANOP  ,                                           01557400
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01557500
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     01557600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01557700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01557800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01557900
                      AGO   .ZG232E                                     01558000
.ZG232C               ANOP  ,                                           01558100
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01558200
&ZMS                  SETC  '"SKEYCOMPARE='                             01558300
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01558400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01558500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01558600
&ZMS                  SETC  '&ZMS "NO"'                                 01558700
&ZMS                  SETC  '&ZMS OR "YES".'                            01558800
                      MNOTE 8,' &ZMS '                                  01558900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01559000
                      AGO   .ZG232E                                     01559100
.ZG232D               ANOP  ,                                           01559200
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01559300
.ZG232E               ANOP  ,                                           01559400
.*-------------------------------------------------------------------   01559500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01559600
.ZG233                ANOP  ,                                           01559700
&ZTLC                 SETC 'KEYPOS'                                     01559800
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG332            01559900
&XLOCATOR             SETC  'KEYPOS'    SET KEYWORD                     01560000
                      AIF   (N'&LOCATOR LE 1).ZG233A  CK NUM            01560100
&ZMS                  SETC  '"LOCATOR='                                 01560200
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01560300
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01560400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01560500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01560600
.ZG233A               ANOP  ,                                           01560700
.*------------------------------------------------------------------    01560800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01560900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01561000
.ZG233A0              AIF   (K'&ENTRYID LE 0).ZG233A1  OK               01561100
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01561200
.ZG233A1              AIF   (K'&LISTCOMPARE LE 0).ZG233A2  OK           01561300
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     01561400
.ZG233A2              AIF   (K'&ENTRYNAME LE 0).ZG233A3  OK             01561500
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01561600
.ZG233A3              AIF   (K'&ZCVAL LE 0).ZG233A4  OK                 01561700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01561800
&ZMS                  SETC  '"LOCATOR'                                  01561900
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01562000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01562100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01562200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01562300
.ZG233A4              ANOP  ,                                           01562400
.*----------------------------------------------------------------***   01562500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01562600
                      AIF   (N'&LISTNUM LE 1).ZG235A  CK NUM            01562700
&ZMS                  SETC  '"LISTNUM='                                 01562800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01562900
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01563000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01563100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01563200
.ZG235A               ANOP  ,                                           01563300
.*-------------------------------------------------------------------   01563400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01563500
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01563600
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01563700
                      AIF   (N'&LISTNUM GT 1).ZG235B  MULTI             01563800
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01563900
.ZG235B               AIF   (K'&LISTNUM(1) GT 0).ZG235C                 01564000
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01564100
&ZMS                  SETC  ' '                                         01564200
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01564300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01564400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01564500
.ZG235C               ANOP  ,                                           01564600
.*-------------------------------------------------------------------   01564700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01564800
                      AIF   (K'&ZXLISTNUM LE 0).ZG235R  NOT I/O         01564900
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG235R            01565000
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01565100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG235P               01565200
                      AIF   (K'&ZCGPR GT 2).ZG235Q                      01565300
                      AIF   ('&ZCGPR' EQ '0').ZG235Q                    01565400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01565500
                      AIF   (T'&ZCGPR NE 'N').ZG235Q  INVALID REG NAME  01565600
.ZG235P               ANOP  ,                                           01565700
                      AIF   (T'&ZCGPR NE 'N').ZG235R  NON NUMERIC       01565800
                      AIF   ('&ZCGPR' LT '2').ZG235Q                    01565900
                      AIF   ('&ZCGPR' LE '12').ZG235R                   01566000
.ZG235Q               ANOP  ,                                           01566100
&ZMS                  SETC  '"LISTNUM='                                 01566200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01566300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01566400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01566500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01566600
.ZG235R               ANOP  ,                                           01566700
.*----------------------------------------------------------------***   01566800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01566900
                      AIF   (N'&KEYSCANTYPE LE 1).ZG238A  CK NUM        01567000
&ZMS                  SETC  '"KEYSCANTYPE='                             01567100
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01567200
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01567300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01567400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01567500
.ZG238A               ANOP  ,                                           01567600
.*-------------------------------------------------------------------   01567700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01567800
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01567900
.ZG239A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG240A                   01568000
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01568100
.*-------------------------------------------------------------------   01568200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01568300
.ZG240A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG241A               01568400
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01568500
.*-------------------------------------------------------------------   01568600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01568700
.ZG241A               AIF   (K'&XKEYSCANTYPE GT 0).ZG241C  KEYWORD      01568800
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG241B             01568900
&ZMS                  SETC  '"KEYSCANTYPE='                             01569000
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01569100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01569200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01569300
&ZMS                  SETC  '&ZMS "ENTRY"'                              01569400
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01569500
                      MNOTE 8,' &ZMS '                                  01569600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01569700
.ZG241B               ANOP  ,                                           01569800
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01569900
.ZG241C               ANOP  ,                                           01570000
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01570100
.*------------------------------------------------------------------    01570200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01570300
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01570400
.*-------------------------------------------------------------------   01570500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01570600
.ZG244                ANOP  ,                                           01570700
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG244A             01570800
&ZTLC                 SETC 'NO'                                         01570900
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG245        01571000
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01571100
                      AIF   (N'&AUTHCOMPARE LE 1).ZG244A  CK NUM        01571200
&ZMS                  SETC  '"AUTHCOMPARE='                             01571300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01571400
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01571500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01571600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01571700
.ZG244A               ANOP  ,                                           01571800
.*------------------------------------------------------------------    01571900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01572000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01572100
.ZG244A0              AIF   (K'&AUTHCOMP LE 0).ZG244A1  OK              01572200
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01572300
.ZG244A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG244A2  OK          01572400
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01572500
.ZG244A2              AIF   (K'&ZCVAL LE 0).ZG244A3  OK                 01572600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01572700
&ZMS                  SETC  '"AUTHCOMPARE'                              01572800
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01572900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01573000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01573100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01573200
.ZG244A3              ANOP  ,                                           01573300
.*-------------------------------------------------------------------   01573400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01573500
.ZG245                ANOP  ,                                           01573600
&ZTLC                 SETC 'YES'                                        01573700
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG254        01573800
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01573900
                      AIF   (N'&AUTHCOMPARE LE 1).ZG245A  CK NUM        01574000
&ZMS                  SETC  '"AUTHCOMPARE='                             01574100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01574200
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01574300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01574400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01574500
.ZG245A               ANOP  ,                                           01574600
.*----------------------------------------------------------------***   01574700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01574800
                      AIF   (N'&AUTHCOMP LE 1).ZG247A  CK NUM           01574900
&ZMS                  SETC  '"AUTHCOMP='                                01575000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01575100
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01575200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01575300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01575400
.ZG247A               ANOP  ,                                           01575500
.*-------------------------------------------------------------------   01575600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01575700
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01575800
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01575900
                      AIF   (N'&AUTHCOMP GT 1).ZG247B  MULTI            01576000
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01576100
.ZG247B               AIF   (K'&AUTHCOMP(1) GT 0).ZG247C                01576200
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01576300
&ZMS                  SETC  ' '                                         01576400
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01576500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01576600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01576700
.ZG247C               ANOP  ,                                           01576800
.*-------------------------------------------------------------------   01576900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01577000
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG247R  NOT I/O        01577100
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG247R           01577200
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01577300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG247P               01577400
                      AIF   (K'&ZCGPR GT 2).ZG247Q                      01577500
                      AIF   ('&ZCGPR' EQ '0').ZG247Q                    01577600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01577700
                      AIF   (T'&ZCGPR NE 'N').ZG247Q  INVALID REG NAME  01577800
.ZG247P               ANOP  ,                                           01577900
                      AIF   (T'&ZCGPR NE 'N').ZG247R  NON NUMERIC       01578000
                      AIF   ('&ZCGPR' LT '2').ZG247Q                    01578100
                      AIF   ('&ZCGPR' LE '12').ZG247R                   01578200
.ZG247Q               ANOP  ,                                           01578300
&ZMS                  SETC  '"AUTHCOMP='                                01578400
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01578500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01578600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01578700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01578800
.ZG247R               ANOP  ,                                           01578900
.*----------------------------------------------------------------***   01579000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01579100
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG249A  CK NUM       01579200
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01579300
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01579400
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01579500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01579600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01579700
.ZG249A               ANOP  ,                                           01579800
.*-------------------------------------------------------------------   01579900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01580000
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01580100
.ZG250A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG251A                  01580200
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01580300
.*-------------------------------------------------------------------   01580400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01580500
.ZG251A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG252A            01580600
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01580700
.*-------------------------------------------------------------------   01580800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01580900
.ZG252A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG252C  KEYWORD     01581000
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG252B            01581100
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01581200
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01581300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01581400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01581500
&ZMS                  SETC  '&ZMS "EQUAL"'                              01581600
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01581700
                      MNOTE 8,' &ZMS '                                  01581800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01581900
.ZG252B               ANOP  ,                                           01582000
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01582100
.ZG252C               ANOP  ,                                           01582200
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01582300
.*-------------------------------------------------------------------   01582400
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01582500
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG252D  KEY           01582600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG252D  PARM      01582700
&ZMS                  SETC  '"AUTHCOMPTYPE'                             01582800
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01582900
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01583000
&ZMS                  SETC  '&ZMS '                                     01583100
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01583200
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01583300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01583400
.ZG252D               ANOP  ,                                           01583500
.*------------------------------------------------------------------    01583600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01583700
.ZG254                ANOP  ,                                           01583800
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01583900
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG254E  VALID ARG    01584000
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG254D  OMITTED     01584100
&ZASYSLNDX            SETA  0                                           01584200
.ZG254A               ANOP  ,           POSITIONAL MACRO KEY            01584300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01584400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG254C           01584500
&ZTLC                 SETC 'AUTHCOMPARE'                                01584600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG254A  01584700
.ZG254B               ANOP  ,                                           01584800
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01584900
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     01585000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01585100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01585200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01585300
                      AGO   .ZG254E                                     01585400
.ZG254C               ANOP  ,                                           01585500
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01585600
&ZMS                  SETC  '"AUTHCOMPARE='                             01585700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01585800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01585900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01586000
&ZMS                  SETC  '&ZMS "NO"'                                 01586100
&ZMS                  SETC  '&ZMS OR "YES".'                            01586200
                      MNOTE 8,' &ZMS '                                  01586300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01586400
                      AGO   .ZG254E                                     01586500
.ZG254D               ANOP  ,                                           01586600
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01586700
.ZG254E               ANOP  ,                                           01586800
.*------------------------------------------------------------------    01586900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01587000
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            01587100
.*-------------------------------------------------------------------   01587200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01587300
.ZG257                ANOP  ,                                           01587400
                      AIF   (K'&KEYTYPE(1) LE 0).ZG257A                 01587500
&ZTLC                 SETC 'ENTRY'                                      01587600
                      AIF   ('&KEYTYPE(1)' NE '&ZTLC').ZG294            01587700
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     01587800
                      AIF   (N'&KEYTYPE LE 1).ZG257A  CK NUM            01587900
&ZMS                  SETC  '"KEYTYPE='                                 01588000
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            01588100
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            01588200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01588300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01588400
.ZG257A               ANOP  ,                                           01588500
.*----------------------------------------------------------------***   01588600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01588700
                      AIF   (N'&ENTRYKEY LE 1).ZG259A  CK NUM           01588800
&ZMS                  SETC  '"ENTRYKEY='                                01588900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01589000
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01589100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01589200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01589300
.ZG259A               ANOP  ,                                           01589400
.*-------------------------------------------------------------------   01589500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01589600
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01589700
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01589800
                      AIF   (N'&ENTRYKEY GT 1).ZG259B  MULTI            01589900
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01590000
.ZG259B               AIF   (K'&ENTRYKEY(1) GT 0).ZG259C                01590100
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01590200
&ZMS                  SETC  ' '                                         01590300
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01590400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01590500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01590600
.ZG259C               ANOP  ,                                           01590700
.*-------------------------------------------------------------------   01590800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01590900
                      AIF   (K'&ZXENTRYKEY LE 0).ZG259R  NOT I/O        01591000
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG259R           01591100
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01591200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG259P               01591300
                      AIF   (K'&ZCGPR GT 2).ZG259Q                      01591400
                      AIF   ('&ZCGPR' EQ '0').ZG259Q                    01591500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01591600
                      AIF   (T'&ZCGPR NE 'N').ZG259Q  INVALID REG NAME  01591700
.ZG259P               ANOP  ,                                           01591800
                      AIF   (T'&ZCGPR NE 'N').ZG259R  NON NUMERIC       01591900
                      AIF   ('&ZCGPR' LT '2').ZG259Q                    01592000
                      AIF   ('&ZCGPR' LE '12').ZG259R                   01592100
.ZG259Q               ANOP  ,                                           01592200
&ZMS                  SETC  '"ENTRYKEY='                                01592300
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01592400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01592500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01592600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01592700
.ZG259R               ANOP  ,                                           01592800
.*------------------------------------------------------------------    01592900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01593000
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01593100
.*-------------------------------------------------------------------   01593200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01593300
.ZG262                ANOP  ,                                           01593400
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG262A              01593500
&ZTLC                 SETC 'EQUAL'                                      01593600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG263         01593700
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01593800
                      AIF   (N'&KEYREQTYPE LE 1).ZG262A  CK NUM         01593900
&ZMS                  SETC  '"KEYREQTYPE='                              01594000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01594100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01594200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01594300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01594400
.ZG262A               ANOP  ,                                           01594500
.*------------------------------------------------------------------    01594600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01594700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01594800
.ZG262A0              AIF   (K'&KEYRANGEEND LE 0).ZG262A1  OK           01594900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01595000
.ZG262A1              AIF   (K'&ZCVAL LE 0).ZG262A2  OK                 01595100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01595200
&ZMS                  SETC  '"KEYREQTYPE'                               01595300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01595400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01595500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01595600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01595700
.ZG262A2              ANOP  ,                                           01595800
.*-------------------------------------------------------------------   01595900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01596000
.ZG263                ANOP  ,                                           01596100
&ZTLC                 SETC 'LESSOREQUAL'                                01596200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG264         01596300
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01596400
                      AIF   (N'&KEYREQTYPE LE 1).ZG263A  CK NUM         01596500
&ZMS                  SETC  '"KEYREQTYPE='                              01596600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01596700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01596800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01596900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01597000
.ZG263A               ANOP  ,                                           01597100
.*------------------------------------------------------------------    01597200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01597300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01597400
.ZG263A0              AIF   (K'&KEYRANGEEND LE 0).ZG263A1  OK           01597500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01597600
.ZG263A1              AIF   (K'&ZCVAL LE 0).ZG263A2  OK                 01597700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01597800
&ZMS                  SETC  '"KEYREQTYPE'                               01597900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01598000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01598100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01598200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01598300
.ZG263A2              ANOP  ,                                           01598400
.*-------------------------------------------------------------------   01598500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01598600
.ZG264                ANOP  ,                                           01598700
&ZTLC                 SETC 'GREATEROREQUAL'                             01598800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG265         01598900
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01599000
                      AIF   (N'&KEYREQTYPE LE 1).ZG264A  CK NUM         01599100
&ZMS                  SETC  '"KEYREQTYPE='                              01599200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01599300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01599400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01599500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01599600
.ZG264A               ANOP  ,                                           01599700
.*------------------------------------------------------------------    01599800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01599900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01600000
.ZG264A0              AIF   (K'&KEYRANGEEND LE 0).ZG264A1  OK           01600100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01600200
.ZG264A1              AIF   (K'&ZCVAL LE 0).ZG264A2  OK                 01600300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01600400
&ZMS                  SETC  '"KEYREQTYPE'                               01600500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01600600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01600700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01600800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01600900
.ZG264A2              ANOP  ,                                           01601000
.*-------------------------------------------------------------------   01601100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01601200
.ZG265                ANOP  ,                                           01601300
&ZTLC                 SETC 'RANGE'                                      01601400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG269         01601500
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01601600
                      AIF   (N'&KEYREQTYPE LE 1).ZG265A  CK NUM         01601700
&ZMS                  SETC  '"KEYREQTYPE='                              01601800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01601900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01602000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01602100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01602200
.ZG265A               ANOP  ,                                           01602300
.*----------------------------------------------------------------***   01602400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01602500
                      AIF   (N'&KEYRANGEEND LE 1).ZG267A  CK NUM        01602600
&ZMS                  SETC  '"KEYRANGEEND='                             01602700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01602800
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01602900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01603000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01603100
.ZG267A               ANOP  ,                                           01603200
.*-------------------------------------------------------------------   01603300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01603400
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01603500
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01603600
                      AIF   (N'&KEYRANGEEND GT 1).ZG267B  MULTI         01603700
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01603800
.ZG267B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG267C             01603900
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01604000
&ZMS                  SETC  ' '                                         01604100
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01604200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01604300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01604400
.ZG267C               ANOP  ,                                           01604500
.*-------------------------------------------------------------------   01604600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01604700
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG267R  NOT I/O     01604800
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG267R        01604900
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01605000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG267P               01605100
                      AIF   (K'&ZCGPR GT 2).ZG267Q                      01605200
                      AIF   ('&ZCGPR' EQ '0').ZG267Q                    01605300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01605400
                      AIF   (T'&ZCGPR NE 'N').ZG267Q  INVALID REG NAME  01605500
.ZG267P               ANOP  ,                                           01605600
                      AIF   (T'&ZCGPR NE 'N').ZG267R  NON NUMERIC       01605700
                      AIF   ('&ZCGPR' LT '2').ZG267Q                    01605800
                      AIF   ('&ZCGPR' LE '12').ZG267R                   01605900
.ZG267Q               ANOP  ,                                           01606000
&ZMS                  SETC  '"KEYRANGEEND='                             01606100
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01606200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01606300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01606400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01606500
.ZG267R               ANOP  ,                                           01606600
.*------------------------------------------------------------------    01606700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01606800
.ZG269                ANOP  ,                                           01606900
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01607000
                      AIF   (K'&XKEYREQTYPE GT 0).ZG269E  VALID ARG     01607100
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG269D  OMITTED      01607200
&ZASYSLNDX            SETA  0                                           01607300
.ZG269A               ANOP  ,           POSITIONAL MACRO KEY            01607400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01607500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG269C           01607600
&ZTLC                 SETC 'KEYREQTYPE'                                 01607700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG269A  01607800
.ZG269B               ANOP  ,                                           01607900
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01608000
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      01608100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01608200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01608300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01608400
                      AGO   .ZG269E                                     01608500
.ZG269C               ANOP  ,                                           01608600
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01608700
&ZMS                  SETC  '"KEYREQTYPE='                              01608800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01608900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01609000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01609100
&ZMS                  SETC  '&ZMS "EQUAL",'                             01609200
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01609300
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01609400
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01609500
                      MNOTE 8,' &ZMS '                                  01609600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01609700
                      AGO   .ZG269E                                     01609800
.ZG269D               ANOP  ,                                           01609900
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01610000
.ZG269E               ANOP  ,                                           01610100
.*------------------------------------------------------------------    01610200
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01610300
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG269F  KEY           01610400
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG269F  PARM        01610500
&ZMS                  SETC  '"KEYREQTYPE'                               01610600
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01610700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01610800
&ZMS                  SETC  '&ZMS '                                     01610900
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01611000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01611100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01611200
.ZG269F               ANOP  ,                                           01611300
.*------------------------------------------------------------------    01611400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01611500
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01611600
.*-------------------------------------------------------------------   01611700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01611800
.ZG272                ANOP  ,                                           01611900
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG272A              01612000
&ZTLC                 SETC 'NO'                                         01612100
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG273         01612200
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01612300
                      AIF   (N'&KEYCOMPARE LE 1).ZG272A  CK NUM         01612400
&ZMS                  SETC  '"KEYCOMPARE='                              01612500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01612600
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01612700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01612800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01612900
.ZG272A               ANOP  ,                                           01613000
.*-------------------------------------------------------------------   01613100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01613200
.ZG273                ANOP  ,                                           01613300
&ZTLC                 SETC 'YES'                                        01613400
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG274         01613500
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01613600
                      AIF   (N'&KEYCOMPARE LE 1).ZG273A  CK NUM         01613700
&ZMS                  SETC  '"KEYCOMPARE='                              01613800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01613900
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01614000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01614100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01614200
.ZG273A               ANOP  ,                                           01614300
.*------------------------------------------------------------------    01614400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01614500
.ZG274                ANOP  ,                                           01614600
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01614700
                      AIF   (K'&XKEYCOMPARE GT 0).ZG274E  VALID ARG     01614800
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG274D  OMITTED      01614900
&ZASYSLNDX            SETA  0                                           01615000
.ZG274A               ANOP  ,           POSITIONAL MACRO KEY            01615100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01615200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG274C           01615300
&ZTLC                 SETC 'KEYCOMPARE'                                 01615400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG274A  01615500
.ZG274B               ANOP  ,                                           01615600
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01615700
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      01615800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01615900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01616000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01616100
                      AGO   .ZG274E                                     01616200
.ZG274C               ANOP  ,                                           01616300
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01616400
&ZMS                  SETC  '"KEYCOMPARE='                              01616500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01616600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01616700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01616800
&ZMS                  SETC  '&ZMS "NO"'                                 01616900
&ZMS                  SETC  '&ZMS OR "YES".'                            01617000
                      MNOTE 8,' &ZMS '                                  01617100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01617200
                      AGO   .ZG274E                                     01617300
.ZG274D               ANOP  ,                                           01617400
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01617500
.ZG274E               ANOP  ,                                           01617600
.*------------------------------------------------------------------    01617700
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01617800
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG274F  KEY           01617900
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG274F  PARM        01618000
&ZMS                  SETC  '"KEYCOMPARE'                               01618100
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01618200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01618300
&ZMS                  SETC  '&ZMS '                                     01618400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01618500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01618600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01618700
.ZG274F               ANOP  ,                                           01618800
.*------------------------------------------------------------------    01618900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01619000
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01619100
.*-------------------------------------------------------------------   01619200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01619300
.ZG277                ANOP  ,                                           01619400
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG277A             01619500
&ZTLC                 SETC 'NO'                                         01619600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG278        01619700
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01619800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG277A  CK NUM        01619900
&ZMS                  SETC  '"SKEYCOMPARE='                             01620000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01620100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01620200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01620300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01620400
.ZG277A               ANOP  ,                                           01620500
.*------------------------------------------------------------------    01620600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01620700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01620800
.ZG277A0              AIF   (K'&SECONDARYKEY LE 0).ZG277A1  OK          01620900
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01621000
.ZG277A1              AIF   (K'&SKEYREQTYPE LE 0).ZG277A2  OK           01621100
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01621200
.ZG277A2              AIF   (K'&SKEYRANGEEND LE 0).ZG277A3  OK          01621300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01621400
.ZG277A3              AIF   (K'&ZCVAL LE 0).ZG277A4  OK                 01621500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01621600
&ZMS                  SETC  '"SKEYCOMPARE'                              01621700
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01621800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01621900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01622000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01622100
.ZG277A4              ANOP  ,                                           01622200
.*-------------------------------------------------------------------   01622300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01622400
.ZG278                ANOP  ,                                           01622500
&ZTLC                 SETC 'YES'                                        01622600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG292        01622700
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01622800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG278A  CK NUM        01622900
&ZMS                  SETC  '"SKEYCOMPARE='                             01623000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01623100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01623200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01623300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01623400
.ZG278A               ANOP  ,                                           01623500
.*----------------------------------------------------------------***   01623600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01623700
                      AIF   (N'&SECONDARYKEY LE 1).ZG280A  CK NUM       01623800
&ZMS                  SETC  '"SECONDARYKEY='                            01623900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01624000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01624100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01624200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01624300
.ZG280A               ANOP  ,                                           01624400
.*-------------------------------------------------------------------   01624500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01624600
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01624700
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01624800
                      AIF   (N'&SECONDARYKEY GT 1).ZG280B  MULTI        01624900
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01625000
.ZG280B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG280C            01625100
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01625200
&ZMS                  SETC  ' '                                         01625300
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01625400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01625500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01625600
.ZG280C               ANOP  ,                                           01625700
.*-------------------------------------------------------------------   01625800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01625900
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG280R  NOT I/O    01626000
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG280R       01626100
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01626200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG280P               01626300
                      AIF   (K'&ZCGPR GT 2).ZG280Q                      01626400
                      AIF   ('&ZCGPR' EQ '0').ZG280Q                    01626500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01626600
                      AIF   (T'&ZCGPR NE 'N').ZG280Q  INVALID REG NAME  01626700
.ZG280P               ANOP  ,                                           01626800
                      AIF   (T'&ZCGPR NE 'N').ZG280R  NON NUMERIC       01626900
                      AIF   ('&ZCGPR' LT '2').ZG280Q                    01627000
                      AIF   ('&ZCGPR' LE '12').ZG280R                   01627100
.ZG280Q               ANOP  ,                                           01627200
&ZMS                  SETC  '"SECONDARYKEY='                            01627300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01627400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01627500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01627600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01627700
.ZG280R               ANOP  ,                                           01627800
.*------------------------------------------------------------------    01627900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01628000
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01628100
.*-------------------------------------------------------------------   01628200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01628300
.ZG283                ANOP  ,                                           01628400
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG283A             01628500
&ZTLC                 SETC 'EQUAL'                                      01628600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG284        01628700
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01628800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG283A  CK NUM        01628900
&ZMS                  SETC  '"SKEYREQTYPE='                             01629000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01629100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01629200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01629300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01629400
.ZG283A               ANOP  ,                                           01629500
.*------------------------------------------------------------------    01629600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01629700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01629800
.ZG283A0              AIF   (K'&SKEYRANGEEND LE 0).ZG283A1  OK          01629900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01630000
.ZG283A1              AIF   (K'&ZCVAL LE 0).ZG283A2  OK                 01630100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01630200
&ZMS                  SETC  '"SKEYREQTYPE'                              01630300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01630400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01630500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01630600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01630700
.ZG283A2              ANOP  ,                                           01630800
.*-------------------------------------------------------------------   01630900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01631000
.ZG284                ANOP  ,                                           01631100
&ZTLC                 SETC 'LESSOREQUAL'                                01631200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG285        01631300
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01631400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG284A  CK NUM        01631500
&ZMS                  SETC  '"SKEYREQTYPE='                             01631600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01631700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01631800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01631900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01632000
.ZG284A               ANOP  ,                                           01632100
.*------------------------------------------------------------------    01632200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01632300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01632400
.ZG284A0              AIF   (K'&SKEYRANGEEND LE 0).ZG284A1  OK          01632500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01632600
.ZG284A1              AIF   (K'&ZCVAL LE 0).ZG284A2  OK                 01632700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01632800
&ZMS                  SETC  '"SKEYREQTYPE'                              01632900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01633000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01633100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01633200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01633300
.ZG284A2              ANOP  ,                                           01633400
.*-------------------------------------------------------------------   01633500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01633600
.ZG285                ANOP  ,                                           01633700
&ZTLC                 SETC 'GREATEROREQUAL'                             01633800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG286        01633900
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01634000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG285A  CK NUM        01634100
&ZMS                  SETC  '"SKEYREQTYPE='                             01634200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01634300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01634400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01634500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01634600
.ZG285A               ANOP  ,                                           01634700
.*------------------------------------------------------------------    01634800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01634900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01635000
.ZG285A0              AIF   (K'&SKEYRANGEEND LE 0).ZG285A1  OK          01635100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01635200
.ZG285A1              AIF   (K'&ZCVAL LE 0).ZG285A2  OK                 01635300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01635400
&ZMS                  SETC  '"SKEYREQTYPE'                              01635500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01635600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01635700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01635800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01635900
.ZG285A2              ANOP  ,                                           01636000
.*-------------------------------------------------------------------   01636100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01636200
.ZG286                ANOP  ,                                           01636300
&ZTLC                 SETC 'RANGE'                                      01636400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG290        01636500
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01636600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG286A  CK NUM        01636700
&ZMS                  SETC  '"SKEYREQTYPE='                             01636800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01636900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01637000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01637100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01637200
.ZG286A               ANOP  ,                                           01637300
.*----------------------------------------------------------------***   01637400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01637500
                      AIF   (N'&SKEYRANGEEND LE 1).ZG288A  CK NUM       01637600
&ZMS                  SETC  '"SKEYRANGEEND='                            01637700
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01637800
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01637900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01638000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01638100
.ZG288A               ANOP  ,                                           01638200
.*-------------------------------------------------------------------   01638300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01638400
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01638500
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01638600
                      AIF   (N'&SKEYRANGEEND GT 1).ZG288B  MULTI        01638700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01638800
.ZG288B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG288C            01638900
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01639000
&ZMS                  SETC  ' '                                         01639100
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01639200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01639300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01639400
.ZG288C               ANOP  ,                                           01639500
.*-------------------------------------------------------------------   01639600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01639700
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG288R  NOT I/O    01639800
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG288R       01639900
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01640000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG288P               01640100
                      AIF   (K'&ZCGPR GT 2).ZG288Q                      01640200
                      AIF   ('&ZCGPR' EQ '0').ZG288Q                    01640300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01640400
                      AIF   (T'&ZCGPR NE 'N').ZG288Q  INVALID REG NAME  01640500
.ZG288P               ANOP  ,                                           01640600
                      AIF   (T'&ZCGPR NE 'N').ZG288R  NON NUMERIC       01640700
                      AIF   ('&ZCGPR' LT '2').ZG288Q                    01640800
                      AIF   ('&ZCGPR' LE '12').ZG288R                   01640900
.ZG288Q               ANOP  ,                                           01641000
&ZMS                  SETC  '"SKEYRANGEEND='                            01641100
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01641200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01641300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01641400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01641500
.ZG288R               ANOP  ,                                           01641600
.*------------------------------------------------------------------    01641700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01641800
.ZG290                ANOP  ,                                           01641900
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01642000
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG290E  VALID ARG    01642100
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG290D  OMITTED     01642200
&ZASYSLNDX            SETA  0                                           01642300
.ZG290A               ANOP  ,           POSITIONAL MACRO KEY            01642400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01642500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG290C           01642600
&ZTLC                 SETC 'SKEYREQTYPE'                                01642700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG290A  01642800
.ZG290B               ANOP  ,                                           01642900
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01643000
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     01643100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01643200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01643300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01643400
                      AGO   .ZG290E                                     01643500
.ZG290C               ANOP  ,                                           01643600
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01643700
&ZMS                  SETC  '"SKEYREQTYPE='                             01643800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01643900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01644000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01644100
&ZMS                  SETC  '&ZMS "EQUAL",'                             01644200
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01644300
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01644400
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01644500
                      MNOTE 8,' &ZMS '                                  01644600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01644700
                      AGO   .ZG290E                                     01644800
.ZG290D               ANOP  ,                                           01644900
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01645000
.ZG290E               ANOP  ,                                           01645100
.*------------------------------------------------------------------    01645200
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01645300
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG290F  KEY       01645400
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG290F  PARM       01645500
&ZMS                  SETC  '"SKEYREQTYPE'                              01645600
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01645700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01645800
&ZMS                  SETC  '&ZMS '                                     01645900
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01646000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01646100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01646200
.ZG290F               ANOP  ,                                           01646300
.*------------------------------------------------------------------    01646400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01646500
.ZG292                ANOP  ,                                           01646600
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01646700
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG292E  VALID ARG    01646800
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG292D  OMITTED     01646900
&ZASYSLNDX            SETA  0                                           01647000
.ZG292A               ANOP  ,           POSITIONAL MACRO KEY            01647100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01647200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG292C           01647300
&ZTLC                 SETC 'SKEYCOMPARE'                                01647400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG292A  01647500
.ZG292B               ANOP  ,                                           01647600
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01647700
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     01647800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01647900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01648000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01648100
                      AGO   .ZG292E                                     01648200
.ZG292C               ANOP  ,                                           01648300
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01648400
&ZMS                  SETC  '"SKEYCOMPARE='                             01648500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01648600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01648700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01648800
&ZMS                  SETC  '&ZMS "NO"'                                 01648900
&ZMS                  SETC  '&ZMS OR "YES".'                            01649000
                      MNOTE 8,' &ZMS '                                  01649100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01649200
                      AGO   .ZG292E                                     01649300
.ZG292D               ANOP  ,                                           01649400
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01649500
.ZG292E               ANOP  ,                                           01649600
.*------------------------------------------------------------------    01649700
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01649800
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG292F  KEY           01649900
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG292F  PARM       01650000
&ZMS                  SETC  '"SKEYCOMPARE'                              01650100
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01650200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01650300
&ZMS                  SETC  '&ZMS '                                     01650400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01650500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01650600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01650700
.ZG292F               ANOP  ,                                           01650800
.*-------------------------------------------------------------------   01650900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01651000
.ZG294                ANOP  ,                                           01651100
&ZTLC                 SETC 'SECONDARY'                                  01651200
                      AIF   ('&KEYTYPE(1)' NE '&ZTLC').ZG331            01651300
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             01651400
                      AIF   (N'&KEYTYPE LE 1).ZG294A  CK NUM            01651500
&ZMS                  SETC  '"KEYTYPE='                                 01651600
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            01651700
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            01651800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01651900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01652000
.ZG294A               ANOP  ,                                           01652100
.*----------------------------------------------------------------***   01652200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01652300
                      AIF   (N'&SECONDARYKEY LE 1).ZG296A  CK NUM       01652400
&ZMS                  SETC  '"SECONDARYKEY='                            01652500
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01652600
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01652700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01652800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01652900
.ZG296A               ANOP  ,                                           01653000
.*-------------------------------------------------------------------   01653100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01653200
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01653300
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01653400
                      AIF   (N'&SECONDARYKEY GT 1).ZG296B  MULTI        01653500
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01653600
.ZG296B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG296C            01653700
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01653800
&ZMS                  SETC  ' '                                         01653900
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01654000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01654100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01654200
.ZG296C               ANOP  ,                                           01654300
.*-------------------------------------------------------------------   01654400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01654500
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG296R  NOT I/O    01654600
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG296R       01654700
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01654800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG296P               01654900
                      AIF   (K'&ZCGPR GT 2).ZG296Q                      01655000
                      AIF   ('&ZCGPR' EQ '0').ZG296Q                    01655100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01655200
                      AIF   (T'&ZCGPR NE 'N').ZG296Q  INVALID REG NAME  01655300
.ZG296P               ANOP  ,                                           01655400
                      AIF   (T'&ZCGPR NE 'N').ZG296R  NON NUMERIC       01655500
                      AIF   ('&ZCGPR' LT '2').ZG296Q                    01655600
                      AIF   ('&ZCGPR' LE '12').ZG296R                   01655700
.ZG296Q               ANOP  ,                                           01655800
&ZMS                  SETC  '"SECONDARYKEY='                            01655900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01656000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01656100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01656200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01656300
.ZG296R               ANOP  ,                                           01656400
.*------------------------------------------------------------------    01656500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01656600
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01656700
.*-------------------------------------------------------------------   01656800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01656900
.ZG299                ANOP  ,                                           01657000
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG299A             01657100
&ZTLC                 SETC 'EQUAL'                                      01657200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG300        01657300
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01657400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG299A  CK NUM        01657500
&ZMS                  SETC  '"SKEYREQTYPE='                             01657600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01657700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01657800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01657900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01658000
.ZG299A               ANOP  ,                                           01658100
.*------------------------------------------------------------------    01658200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01658300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01658400
.ZG299A0              AIF   (K'&SKEYRANGEEND LE 0).ZG299A1  OK          01658500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01658600
.ZG299A1              AIF   (K'&ZCVAL LE 0).ZG299A2  OK                 01658700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01658800
&ZMS                  SETC  '"SKEYREQTYPE'                              01658900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01659000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01659100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01659200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01659300
.ZG299A2              ANOP  ,                                           01659400
.*-------------------------------------------------------------------   01659500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01659600
.ZG300                ANOP  ,                                           01659700
&ZTLC                 SETC 'LESSOREQUAL'                                01659800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG301        01659900
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01660000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG300A  CK NUM        01660100
&ZMS                  SETC  '"SKEYREQTYPE='                             01660200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01660300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01660400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01660500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01660600
.ZG300A               ANOP  ,                                           01660700
.*------------------------------------------------------------------    01660800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01660900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01661000
.ZG300A0              AIF   (K'&SKEYRANGEEND LE 0).ZG300A1  OK          01661100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01661200
.ZG300A1              AIF   (K'&ZCVAL LE 0).ZG300A2  OK                 01661300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01661400
&ZMS                  SETC  '"SKEYREQTYPE'                              01661500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01661600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01661700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01661800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01661900
.ZG300A2              ANOP  ,                                           01662000
.*-------------------------------------------------------------------   01662100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01662200
.ZG301                ANOP  ,                                           01662300
&ZTLC                 SETC 'GREATEROREQUAL'                             01662400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG302        01662500
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01662600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG301A  CK NUM        01662700
&ZMS                  SETC  '"SKEYREQTYPE='                             01662800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01662900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01663000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01663100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01663200
.ZG301A               ANOP  ,                                           01663300
.*------------------------------------------------------------------    01663400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01663500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01663600
.ZG301A0              AIF   (K'&SKEYRANGEEND LE 0).ZG301A1  OK          01663700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01663800
.ZG301A1              AIF   (K'&ZCVAL LE 0).ZG301A2  OK                 01663900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01664000
&ZMS                  SETC  '"SKEYREQTYPE'                              01664100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01664200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01664300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01664400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01664500
.ZG301A2              ANOP  ,                                           01664600
.*-------------------------------------------------------------------   01664700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01664800
.ZG302                ANOP  ,                                           01664900
&ZTLC                 SETC 'RANGE'                                      01665000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG306        01665100
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01665200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG302A  CK NUM        01665300
&ZMS                  SETC  '"SKEYREQTYPE='                             01665400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01665500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01665600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01665700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01665800
.ZG302A               ANOP  ,                                           01665900
.*----------------------------------------------------------------***   01666000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01666100
                      AIF   (N'&SKEYRANGEEND LE 1).ZG304A  CK NUM       01666200
&ZMS                  SETC  '"SKEYRANGEEND='                            01666300
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01666400
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01666500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01666600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01666700
.ZG304A               ANOP  ,                                           01666800
.*-------------------------------------------------------------------   01666900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01667000
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01667100
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01667200
                      AIF   (N'&SKEYRANGEEND GT 1).ZG304B  MULTI        01667300
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01667400
.ZG304B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG304C            01667500
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01667600
&ZMS                  SETC  ' '                                         01667700
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01667800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01667900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01668000
.ZG304C               ANOP  ,                                           01668100
.*-------------------------------------------------------------------   01668200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01668300
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG304R  NOT I/O    01668400
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG304R       01668500
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01668600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG304P               01668700
                      AIF   (K'&ZCGPR GT 2).ZG304Q                      01668800
                      AIF   ('&ZCGPR' EQ '0').ZG304Q                    01668900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01669000
                      AIF   (T'&ZCGPR NE 'N').ZG304Q  INVALID REG NAME  01669100
.ZG304P               ANOP  ,                                           01669200
                      AIF   (T'&ZCGPR NE 'N').ZG304R  NON NUMERIC       01669300
                      AIF   ('&ZCGPR' LT '2').ZG304Q                    01669400
                      AIF   ('&ZCGPR' LE '12').ZG304R                   01669500
.ZG304Q               ANOP  ,                                           01669600
&ZMS                  SETC  '"SKEYRANGEEND='                            01669700
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01669800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01669900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01670000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01670100
.ZG304R               ANOP  ,                                           01670200
.*------------------------------------------------------------------    01670300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01670400
.ZG306                ANOP  ,                                           01670500
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01670600
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG306E  VALID ARG    01670700
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG306D  OMITTED     01670800
&ZASYSLNDX            SETA  0                                           01670900
.ZG306A               ANOP  ,           POSITIONAL MACRO KEY            01671000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01671100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG306C           01671200
&ZTLC                 SETC 'SKEYREQTYPE'                                01671300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG306A  01671400
.ZG306B               ANOP  ,                                           01671500
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01671600
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     01671700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01671800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01671900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01672000
                      AGO   .ZG306E                                     01672100
.ZG306C               ANOP  ,                                           01672200
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01672300
&ZMS                  SETC  '"SKEYREQTYPE='                             01672400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01672500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01672600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01672700
&ZMS                  SETC  '&ZMS "EQUAL",'                             01672800
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01672900
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01673000
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01673100
                      MNOTE 8,' &ZMS '                                  01673200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01673300
                      AGO   .ZG306E                                     01673400
.ZG306D               ANOP  ,                                           01673500
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01673600
.ZG306E               ANOP  ,                                           01673700
.*------------------------------------------------------------------    01673800
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01673900
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG306F  KEY       01674000
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG306F  PARM       01674100
&ZMS                  SETC  '"SKEYREQTYPE'                              01674200
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01674300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01674400
&ZMS                  SETC  '&ZMS '                                     01674500
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01674600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01674700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01674800
.ZG306F               ANOP  ,                                           01674900
.*------------------------------------------------------------------    01675000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01675100
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01675200
.*-------------------------------------------------------------------   01675300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01675400
.ZG309                ANOP  ,                                           01675500
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG309A             01675600
&ZTLC                 SETC 'NO'                                         01675700
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG310        01675800
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01675900
                      AIF   (N'&SKEYCOMPARE LE 1).ZG309A  CK NUM        01676000
&ZMS                  SETC  '"SKEYCOMPARE='                             01676100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01676200
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01676300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01676400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01676500
.ZG309A               ANOP  ,                                           01676600
.*-------------------------------------------------------------------   01676700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01676800
.ZG310                ANOP  ,                                           01676900
&ZTLC                 SETC 'YES'                                        01677000
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG311        01677100
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01677200
                      AIF   (N'&SKEYCOMPARE LE 1).ZG310A  CK NUM        01677300
&ZMS                  SETC  '"SKEYCOMPARE='                             01677400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01677500
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01677600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01677700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01677800
.ZG310A               ANOP  ,                                           01677900
.*------------------------------------------------------------------    01678000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01678100
.ZG311                ANOP  ,                                           01678200
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01678300
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG311E  VALID ARG    01678400
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG311D  OMITTED     01678500
&ZASYSLNDX            SETA  0                                           01678600
.ZG311A               ANOP  ,           POSITIONAL MACRO KEY            01678700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01678800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG311C           01678900
&ZTLC                 SETC 'SKEYCOMPARE'                                01679000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG311A  01679100
.ZG311B               ANOP  ,                                           01679200
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01679300
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     01679400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01679500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01679600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01679700
                      AGO   .ZG311E                                     01679800
.ZG311C               ANOP  ,                                           01679900
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01680000
&ZMS                  SETC  '"SKEYCOMPARE='                             01680100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01680200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01680300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01680400
&ZMS                  SETC  '&ZMS "NO"'                                 01680500
&ZMS                  SETC  '&ZMS OR "YES".'                            01680600
                      MNOTE 8,' &ZMS '                                  01680700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01680800
                      AGO   .ZG311E                                     01680900
.ZG311D               ANOP  ,                                           01681000
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01681100
.ZG311E               ANOP  ,                                           01681200
.*------------------------------------------------------------------    01681300
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01681400
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG311F  KEY       01681500
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG311F  PARM       01681600
&ZMS                  SETC  '"SKEYCOMPARE'                              01681700
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01681800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01681900
&ZMS                  SETC  '&ZMS '                                     01682000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01682100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01682200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01682300
.ZG311F               ANOP  ,                                           01682400
.*------------------------------------------------------------------    01682500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01682600
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01682700
.*-------------------------------------------------------------------   01682800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01682900
.ZG314                ANOP  ,                                           01683000
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG314A              01683100
&ZTLC                 SETC 'NO'                                         01683200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG315         01683300
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01683400
                      AIF   (N'&KEYCOMPARE LE 1).ZG314A  CK NUM         01683500
&ZMS                  SETC  '"KEYCOMPARE='                              01683600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01683700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01683800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01683900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01684000
.ZG314A               ANOP  ,                                           01684100
.*------------------------------------------------------------------    01684200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01684300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01684400
.ZG314A0              AIF   (K'&ENTRYKEY LE 0).ZG314A1  OK              01684500
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01684600
.ZG314A1              AIF   (K'&KEYREQTYPE LE 0).ZG314A2  OK            01684700
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01684800
.ZG314A2              AIF   (K'&KEYRANGEEND LE 0).ZG314A3  OK           01684900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01685000
.ZG314A3              AIF   (K'&ZCVAL LE 0).ZG314A4  OK                 01685100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01685200
&ZMS                  SETC  '"KEYCOMPARE'                               01685300
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01685400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01685500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01685600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01685700
.ZG314A4              ANOP  ,                                           01685800
.*-------------------------------------------------------------------   01685900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01686000
.ZG315                ANOP  ,                                           01686100
&ZTLC                 SETC 'YES'                                        01686200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG329         01686300
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01686400
                      AIF   (N'&KEYCOMPARE LE 1).ZG315A  CK NUM         01686500
&ZMS                  SETC  '"KEYCOMPARE='                              01686600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01686700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01686800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01686900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01687000
.ZG315A               ANOP  ,                                           01687100
.*----------------------------------------------------------------***   01687200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01687300
                      AIF   (N'&ENTRYKEY LE 1).ZG317A  CK NUM           01687400
&ZMS                  SETC  '"ENTRYKEY='                                01687500
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01687600
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01687700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01687800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01687900
.ZG317A               ANOP  ,                                           01688000
.*-------------------------------------------------------------------   01688100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01688200
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01688300
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01688400
                      AIF   (N'&ENTRYKEY GT 1).ZG317B  MULTI            01688500
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01688600
.ZG317B               AIF   (K'&ENTRYKEY(1) GT 0).ZG317C                01688700
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01688800
&ZMS                  SETC  ' '                                         01688900
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01689000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01689100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01689200
.ZG317C               ANOP  ,                                           01689300
.*-------------------------------------------------------------------   01689400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01689500
                      AIF   (K'&ZXENTRYKEY LE 0).ZG317R  NOT I/O        01689600
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG317R           01689700
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01689800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG317P               01689900
                      AIF   (K'&ZCGPR GT 2).ZG317Q                      01690000
                      AIF   ('&ZCGPR' EQ '0').ZG317Q                    01690100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01690200
                      AIF   (T'&ZCGPR NE 'N').ZG317Q  INVALID REG NAME  01690300
.ZG317P               ANOP  ,                                           01690400
                      AIF   (T'&ZCGPR NE 'N').ZG317R  NON NUMERIC       01690500
                      AIF   ('&ZCGPR' LT '2').ZG317Q                    01690600
                      AIF   ('&ZCGPR' LE '12').ZG317R                   01690700
.ZG317Q               ANOP  ,                                           01690800
&ZMS                  SETC  '"ENTRYKEY='                                01690900
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01691000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01691100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01691200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01691300
.ZG317R               ANOP  ,                                           01691400
.*------------------------------------------------------------------    01691500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01691600
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01691700
.*-------------------------------------------------------------------   01691800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01691900
.ZG320                ANOP  ,                                           01692000
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG320A              01692100
&ZTLC                 SETC 'EQUAL'                                      01692200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG321         01692300
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01692400
                      AIF   (N'&KEYREQTYPE LE 1).ZG320A  CK NUM         01692500
&ZMS                  SETC  '"KEYREQTYPE='                              01692600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01692700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01692800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01692900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01693000
.ZG320A               ANOP  ,                                           01693100
.*------------------------------------------------------------------    01693200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01693300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01693400
.ZG320A0              AIF   (K'&KEYRANGEEND LE 0).ZG320A1  OK           01693500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01693600
.ZG320A1              AIF   (K'&ZCVAL LE 0).ZG320A2  OK                 01693700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01693800
&ZMS                  SETC  '"KEYREQTYPE'                               01693900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01694000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01694100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01694200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01694300
.ZG320A2              ANOP  ,                                           01694400
.*-------------------------------------------------------------------   01694500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01694600
.ZG321                ANOP  ,                                           01694700
&ZTLC                 SETC 'LESSOREQUAL'                                01694800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG322         01694900
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01695000
                      AIF   (N'&KEYREQTYPE LE 1).ZG321A  CK NUM         01695100
&ZMS                  SETC  '"KEYREQTYPE='                              01695200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01695300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01695400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01695500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01695600
.ZG321A               ANOP  ,                                           01695700
.*------------------------------------------------------------------    01695800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01695900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01696000
.ZG321A0              AIF   (K'&KEYRANGEEND LE 0).ZG321A1  OK           01696100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01696200
.ZG321A1              AIF   (K'&ZCVAL LE 0).ZG321A2  OK                 01696300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01696400
&ZMS                  SETC  '"KEYREQTYPE'                               01696500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01696600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01696700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01696800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01696900
.ZG321A2              ANOP  ,                                           01697000
.*-------------------------------------------------------------------   01697100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01697200
.ZG322                ANOP  ,                                           01697300
&ZTLC                 SETC 'GREATEROREQUAL'                             01697400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG323         01697500
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01697600
                      AIF   (N'&KEYREQTYPE LE 1).ZG322A  CK NUM         01697700
&ZMS                  SETC  '"KEYREQTYPE='                              01697800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01697900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01698000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01698100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01698200
.ZG322A               ANOP  ,                                           01698300
.*------------------------------------------------------------------    01698400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01698500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01698600
.ZG322A0              AIF   (K'&KEYRANGEEND LE 0).ZG322A1  OK           01698700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01698800
.ZG322A1              AIF   (K'&ZCVAL LE 0).ZG322A2  OK                 01698900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01699000
&ZMS                  SETC  '"KEYREQTYPE'                               01699100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01699200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01699300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01699400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01699500
.ZG322A2              ANOP  ,                                           01699600
.*-------------------------------------------------------------------   01699700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01699800
.ZG323                ANOP  ,                                           01699900
&ZTLC                 SETC 'RANGE'                                      01700000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG327         01700100
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01700200
                      AIF   (N'&KEYREQTYPE LE 1).ZG323A  CK NUM         01700300
&ZMS                  SETC  '"KEYREQTYPE='                              01700400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01700500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01700600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01700700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01700800
.ZG323A               ANOP  ,                                           01700900
.*----------------------------------------------------------------***   01701000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01701100
                      AIF   (N'&KEYRANGEEND LE 1).ZG325A  CK NUM        01701200
&ZMS                  SETC  '"KEYRANGEEND='                             01701300
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01701400
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01701500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01701600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01701700
.ZG325A               ANOP  ,                                           01701800
.*-------------------------------------------------------------------   01701900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01702000
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01702100
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01702200
                      AIF   (N'&KEYRANGEEND GT 1).ZG325B  MULTI         01702300
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01702400
.ZG325B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG325C             01702500
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01702600
&ZMS                  SETC  ' '                                         01702700
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01702800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01702900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01703000
.ZG325C               ANOP  ,                                           01703100
.*-------------------------------------------------------------------   01703200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01703300
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG325R  NOT I/O     01703400
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG325R        01703500
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01703600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG325P               01703700
                      AIF   (K'&ZCGPR GT 2).ZG325Q                      01703800
                      AIF   ('&ZCGPR' EQ '0').ZG325Q                    01703900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01704000
                      AIF   (T'&ZCGPR NE 'N').ZG325Q  INVALID REG NAME  01704100
.ZG325P               ANOP  ,                                           01704200
                      AIF   (T'&ZCGPR NE 'N').ZG325R  NON NUMERIC       01704300
                      AIF   ('&ZCGPR' LT '2').ZG325Q                    01704400
                      AIF   ('&ZCGPR' LE '12').ZG325R                   01704500
.ZG325Q               ANOP  ,                                           01704600
&ZMS                  SETC  '"KEYRANGEEND='                             01704700
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01704800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01704900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01705000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01705100
.ZG325R               ANOP  ,                                           01705200
.*------------------------------------------------------------------    01705300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01705400
.ZG327                ANOP  ,                                           01705500
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01705600
                      AIF   (K'&XKEYREQTYPE GT 0).ZG327E  VALID ARG     01705700
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG327D  OMITTED      01705800
&ZASYSLNDX            SETA  0                                           01705900
.ZG327A               ANOP  ,           POSITIONAL MACRO KEY            01706000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01706100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG327C           01706200
&ZTLC                 SETC 'KEYREQTYPE'                                 01706300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG327A  01706400
.ZG327B               ANOP  ,                                           01706500
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01706600
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      01706700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01706800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01706900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01707000
                      AGO   .ZG327E                                     01707100
.ZG327C               ANOP  ,                                           01707200
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01707300
&ZMS                  SETC  '"KEYREQTYPE='                              01707400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01707500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01707600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01707700
&ZMS                  SETC  '&ZMS "EQUAL",'                             01707800
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01707900
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01708000
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01708100
                      MNOTE 8,' &ZMS '                                  01708200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01708300
                      AGO   .ZG327E                                     01708400
.ZG327D               ANOP  ,                                           01708500
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01708600
.ZG327E               ANOP  ,                                           01708700
.*------------------------------------------------------------------    01708800
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01708900
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG327F  KEY           01709000
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG327F  PARM        01709100
&ZMS                  SETC  '"KEYREQTYPE'                               01709200
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01709300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01709400
&ZMS                  SETC  '&ZMS '                                     01709500
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01709600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01709700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01709800
.ZG327F               ANOP  ,                                           01709900
.*------------------------------------------------------------------    01710000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01710100
.ZG329                ANOP  ,                                           01710200
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01710300
                      AIF   (K'&XKEYCOMPARE GT 0).ZG329E  VALID ARG     01710400
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG329D  OMITTED      01710500
&ZASYSLNDX            SETA  0                                           01710600
.ZG329A               ANOP  ,           POSITIONAL MACRO KEY            01710700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01710800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG329C           01710900
&ZTLC                 SETC 'KEYCOMPARE'                                 01711000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG329A  01711100
.ZG329B               ANOP  ,                                           01711200
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01711300
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      01711400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01711500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01711600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01711700
                      AGO   .ZG329E                                     01711800
.ZG329C               ANOP  ,                                           01711900
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01712000
&ZMS                  SETC  '"KEYCOMPARE='                              01712100
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01712200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01712300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01712400
&ZMS                  SETC  '&ZMS "NO"'                                 01712500
&ZMS                  SETC  '&ZMS OR "YES".'                            01712600
                      MNOTE 8,' &ZMS '                                  01712700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01712800
                      AGO   .ZG329E                                     01712900
.ZG329D               ANOP  ,                                           01713000
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01713100
.ZG329E               ANOP  ,                                           01713200
.*------------------------------------------------------------------    01713300
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01713400
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG329F  KEY       01713500
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG329F  PARM        01713600
&ZMS                  SETC  '"KEYCOMPARE'                               01713700
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01713800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01713900
&ZMS                  SETC  '&ZMS '                                     01714000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01714100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01714200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01714300
.ZG329F               ANOP  ,                                           01714400
.*------------------------------------------------------------------    01714500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01714600
.ZG331                ANOP  ,                                           01714700
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   01714800
                      AIF   (K'&XKEYTYPE GT 0).ZG331E  VALID ARG        01714900
                      AIF   (T'&KEYTYPE EQ 'O').ZG331D  OMITTED         01715000
&ZASYSLNDX            SETA  0                                           01715100
.ZG331A               ANOP  ,           POSITIONAL MACRO KEY            01715200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01715300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG331C           01715400
&ZTLC                 SETC 'KEYTYPE'                                    01715500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG331A  01715600
.ZG331B               ANOP  ,                                           01715700
&ZXKEYTYPE            SETC  ''          RESET IN/OUTPUT                 01715800
&ZMS                  SETC  'THE "KEYTYPE" KEY'                         01715900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01716000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01716100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01716200
                      AGO   .ZG331E                                     01716300
.ZG331C               ANOP  ,                                           01716400
&ZXKEYTYPE            SETC  ''          RESET IN/OUTPUT                 01716500
&ZMS                  SETC  '"KEYTYPE='                                 01716600
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            01716700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01716800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01716900
&ZMS                  SETC  '&ZMS "ENTRY"'                              01717000
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01717100
                      MNOTE 8,' &ZMS '                                  01717200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01717300
                      AGO   .ZG331E                                     01717400
.ZG331D               ANOP  ,                                           01717500
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             01717600
.ZG331E               ANOP  ,                                           01717700
.*------------------------------------------------------------------    01717800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01717900
.ZG332                ANOP  ,                                           01718000
&ZXLOCATOR            SETC  'INPUT'     SET IN/OUTPUT                   01718100
                      AIF   (K'&XLOCATOR GT 0).ZG332E  VALID ARG        01718200
                      AIF   (T'&LOCATOR EQ 'O').ZG332D  OMITTED         01718300
&ZASYSLNDX            SETA  0                                           01718400
.ZG332A               ANOP  ,           POSITIONAL MACRO KEY            01718500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01718600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG332C           01718700
&ZTLC                 SETC 'LOCATOR'                                    01718800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG332A  01718900
.ZG332B               ANOP  ,                                           01719000
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 01719100
&ZMS                  SETC  'THE "LOCATOR" KEY'                         01719200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01719300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01719400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01719500
                      AGO   .ZG332E                                     01719600
.ZG332C               ANOP  ,                                           01719700
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 01719800
&ZMS                  SETC  '"LOCATOR='                                 01719900
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01720000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01720100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01720200
&ZMS                  SETC  '&ZMS "CURSOR",'                            01720300
&ZMS                  SETC  '&ZMS "ENTRYID",'                           01720400
&ZMS                  SETC  '&ZMS "ENTRYNAME",'                         01720500
&ZMS                  SETC  '&ZMS "UNKEYPOS",'                          01720600
&ZMS                  SETC  '&ZMS OR "KEYPOS".'                         01720700
                      MNOTE 8,' &ZMS '                                  01720800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01720900
                      AGO   .ZG332E                                     01721000
.ZG332D               ANOP  ,                                           01721100
&XLOCATOR             SETC  'CURSOR'    SET DEFAULT KEYWORD             01721200
.ZG332E               ANOP  ,                                           01721300
.*------------------------------------------------------------------    01721400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01721500
                      AIF   (K'&LOCATOR(1) GT 0).ZG332F  PARM           01721600
&XLOCATOR             SETC  ''          ENSURE NULL KEYWORD             01721700
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 01721800
&ZMS                  SETC  'THE'                                       01721900
&ZMS                  SETC  '&ZMS "LOCATOR" KEY AND ITS'                01722000
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01722100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01722200
&ZMS                  SETC  '&ZMS "CURSOR",'                            01722300
&ZMS                  SETC  '&ZMS "ENTRYID",'                           01722400
&ZMS                  SETC  '&ZMS "ENTRYNAME",'                         01722500
&ZMS                  SETC  '&ZMS "UNKEYPOS",'                          01722600
&ZMS                  SETC  '&ZMS OR "KEYPOS".'                         01722700
                      MNOTE 8,' &ZMS '                                  01722800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01722900
.ZG332F               ANOP  ,                                           01723000
.*------------------------------------------------------------------    01723100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01723200
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01723300
.*-------------------------------------------------------------------   01723400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01723500
.ZG335                ANOP  ,                                           01723600
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG335A             01723700
&ZTLC                 SETC 'NO'                                         01723800
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG336        01723900
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     01724000
                      AIF   (N'&VERSCOMPARE LE 1).ZG335A  CK NUM        01724100
&ZMS                  SETC  '"VERSCOMPARE='                             01724200
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        01724300
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        01724400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01724500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01724600
.ZG335A               ANOP  ,                                           01724700
.*------------------------------------------------------------------    01724800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01724900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01725000
.ZG335A0              AIF   (K'&VERSCOMP LE 0).ZG335A1  OK              01725100
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01725200
.ZG335A1              AIF   (K'&VERSCOMPTYPE LE 0).ZG335A2  OK          01725300
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01725400
.ZG335A2              AIF   (K'&ZCVAL LE 0).ZG335A3  OK                 01725500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01725600
&ZMS                  SETC  '"VERSCOMPARE'                              01725700
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       01725800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01725900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01726000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01726100
.ZG335A3              ANOP  ,                                           01726200
.*-------------------------------------------------------------------   01726300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01726400
.ZG336                ANOP  ,                                           01726500
&ZTLC                 SETC 'YES'                                        01726600
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG345        01726700
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     01726800
                      AIF   (N'&VERSCOMPARE LE 1).ZG336A  CK NUM        01726900
&ZMS                  SETC  '"VERSCOMPARE='                             01727000
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        01727100
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        01727200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01727300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01727400
.ZG336A               ANOP  ,                                           01727500
.*----------------------------------------------------------------***   01727600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01727700
                      AIF   (N'&VERSCOMP LE 1).ZG338A  CK NUM           01727800
&ZMS                  SETC  '"VERSCOMP='                                01727900
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           01728000
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           01728100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01728200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01728300
.ZG338A               ANOP  ,                                           01728400
.*-------------------------------------------------------------------   01728500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01728600
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01728700
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           01728800
                      AIF   (N'&VERSCOMP GT 1).ZG338B  MULTI            01728900
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           01729000
.ZG338B               AIF   (K'&VERSCOMP(1) GT 0).ZG338C                01729100
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 01729200
&ZMS                  SETC  ' '                                         01729300
&ZMS                  SETC  '&ZMS "VERSCOMP" KEY AND ITS'               01729400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01729500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01729600
.ZG338C               ANOP  ,                                           01729700
.*-------------------------------------------------------------------   01729800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01729900
                      AIF   (K'&ZXVERSCOMP LE 0).ZG338R  NOT I/O        01730000
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG338R           01730100
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              01730200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG338P               01730300
                      AIF   (K'&ZCGPR GT 2).ZG338Q                      01730400
                      AIF   ('&ZCGPR' EQ '0').ZG338Q                    01730500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01730600
                      AIF   (T'&ZCGPR NE 'N').ZG338Q  INVALID REG NAME  01730700
.ZG338P               ANOP  ,                                           01730800
                      AIF   (T'&ZCGPR NE 'N').ZG338R  NON NUMERIC       01730900
                      AIF   ('&ZCGPR' LT '2').ZG338Q                    01731000
                      AIF   ('&ZCGPR' LE '12').ZG338R                   01731100
.ZG338Q               ANOP  ,                                           01731200
&ZMS                  SETC  '"VERSCOMP='                                01731300
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           01731400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01731500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01731600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01731700
.ZG338R               ANOP  ,                                           01731800
.*----------------------------------------------------------------***   01731900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01732000
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG340A  CK NUM       01732100
&ZMS                  SETC  '"VERSCOMPTYPE='                            01732200
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01732300
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       01732400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01732500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01732600
.ZG340A               ANOP  ,                                           01732700
.*-------------------------------------------------------------------   01732800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01732900
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01733000
.ZG341A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG342A                  01733100
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01733200
.*-------------------------------------------------------------------   01733300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01733400
.ZG342A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG343A            01733500
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01733600
.*-------------------------------------------------------------------   01733700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01733800
.ZG343A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG343C  KEYWORD     01733900
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG343B            01734000
&ZMS                  SETC  '"VERSCOMPTYPE='                            01734100
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01734200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01734300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01734400
&ZMS                  SETC  '&ZMS "EQUAL"'                              01734500
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01734600
                      MNOTE 8,' &ZMS '                                  01734700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01734800
.ZG343B               ANOP  ,                                           01734900
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01735000
.ZG343C               ANOP  ,                                           01735100
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01735200
.*-------------------------------------------------------------------   01735300
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01735400
                      AIF   (K'&VERSCOMP(1) GT 0).ZG343D  KEY           01735500
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG343D  PARM      01735600
&ZMS                  SETC  '"VERSCOMPTYPE'                             01735700
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      01735800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01735900
&ZMS                  SETC  '&ZMS '                                     01736000
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           01736100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01736200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01736300
.ZG343D               ANOP  ,                                           01736400
.*------------------------------------------------------------------    01736500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01736600
.ZG345                ANOP  ,                                           01736700
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01736800
                      AIF   (K'&XVERSCOMPARE GT 0).ZG345E  VALID ARG    01736900
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG345D  OMITTED     01737000
&ZASYSLNDX            SETA  0                                           01737100
.ZG345A               ANOP  ,           POSITIONAL MACRO KEY            01737200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01737300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG345C           01737400
&ZTLC                 SETC 'VERSCOMPARE'                                01737500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG345A  01737600
.ZG345B               ANOP  ,                                           01737700
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 01737800
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'                     01737900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01738000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01738100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01738200
                      AGO   .ZG345E                                     01738300
.ZG345C               ANOP  ,                                           01738400
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 01738500
&ZMS                  SETC  '"VERSCOMPARE='                             01738600
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        01738700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01738800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01738900
&ZMS                  SETC  '&ZMS "NO"'                                 01739000
&ZMS                  SETC  '&ZMS OR "YES".'                            01739100
                      MNOTE 8,' &ZMS '                                  01739200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01739300
                      AGO   .ZG345E                                     01739400
.ZG345D               ANOP  ,                                           01739500
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01739600
.ZG345E               ANOP  ,                                           01739700
.*----------------------------------------------------------------***   01739800
.***AG.KMEKY01 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     01739900
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            01740000
                      AIF   (K'&BUFLIST LE 0).ZG347C                    01740100
&ZXDATAREA            SETC  'OUTPUT'    SET IN/OUTPUT                   01740200
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   01740300
&ZXBUFLIST            SETC  'OUTPUT'    SET IN/OUTPUT                   01740400
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      01740500
                      AIF   (N'&BUFLIST GT 1).ZG347A                    01740600
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              01740700
.ZG347A               AIF   (N'&BUFLIST LE 1).ZG347B  CK NUM            01740800
&ZMS                  SETC  '"BUFLIST='                                 01740900
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            01741000
&ZMS                  SETC  '&ZMS "BUFLIST"'                            01741100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01741200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01741300
.ZG347B               AIF   (K'&XBUFLIST GT 0).ZG347C  ONE PARM         01741400
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01741500
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 01741600
&ZMS                  SETC  ' '                                         01741700
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                01741800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01741900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01742000
.ZG347C               ANOP  ,                                           01742100
.*----------------------------------------------------------------***   01742200
.***AG.KMEKY02 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     01742300
                      AIF   (K'&BUFFER LE 0).ZG377D  NO ME KEY          01742400
                      AIF   (N'&BUFFER LE 1).ZG377A  CK NUM             01742500
&ZMS                  SETC  '"BUFFER='                                  01742600
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01742700
&ZMS                  SETC  '&ZMS "BUFFER"'                             01742800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01742900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01743000
.ZG377A               AIF   (K'&XDATAREA LE 0).ZG377B                   01743100
&ZMS                  SETC  '"BUFFER'                                   01743200
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01743300
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       01743400
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          01743500
                      MNOTE 8,' &ZMS KEY.'                              01743600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01743700
                      AGO   .ZG377D                                     01743800
.*                                                                      01743900
.ZG377B               ANOP  ,                                           01744000
&ZXDATAREA            SETC  'OUTPUT'    SET IN/OUTPUT                   01744100
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   01744200
&ZXBUFFER             SETC  'OUTPUT'    SET IN/OUTPUT                   01744300
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      01744400
                      AIF   (N'&BUFFER GT 1).ZG377C                     01744500
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              01744600
.ZG377C               AIF   (K'&XBUFFER GT 0).ZG377D  ONE PARM          01744700
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01744800
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 01744900
&ZMS                  SETC  ' '                                         01745000
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 01745100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01745200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01745300
.ZG377D               ANOP  ,                                           01745400
.*------------------------------------------------------------------    01745500
.***AG.KME4Y09 NAME, RQD OUTPUT, ME KEYS -CHECK IF KEY ENTERED          01745600
                      AIF   (K'&XDATAREA GT 0).ZG389B                   01745700
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01745800
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 01745900
&XDATAREA             SETC  ''          ENSURE NULL                     01746000
&XBUFLIST             SETC  ''          ENSURE NULL                     01746100
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      01746200
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         01746300
&ZMS                  SETC  '&ZMS REQUIRED:'                            01746400
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            01746500
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           01746600
                      MNOTE 8,' &ZMS '                                  01746700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01746800
.ZG389B               ANOP  ,                                           01746900
.*-------------------------------------------------------------------   01747000
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          01747100
.ZG347ZY  AIF    ('&XDATAREA' NE 'BUFLIST').ZG377ZY                     01747200
.*-------------------------------------------------------------------   01747300
.***AG.KMEKY14 NAME, RQD OUTPUT, ME KEYS -DISALLOWED KEYS               01747400
&ZCVAL                SETC ''           ERROR KEY FIELD                 01747500
.ZG347I0              AIF   (K'&BUFSIZE LE 0).ZG347I1                   01747600
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          01747700
.ZG347I1              AIF   (K'&ZCVAL LE 0).ZG347J  KEY                 01747800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01747900
&ZMS                  SETC  '"BUFLIST'                                  01748000
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           01748100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01748200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01748300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01748400
.ZG347J               ANOP  ,                                           01748500
.*-------------------------------------------------------------------   01748600
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                01748700
                      AIF   (K'&ZXBUFLIST LE 0).ZG347R  NOT I/O         01748800
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG347R            01748900
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                01749000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG347P               01749100
                      AIF   (K'&ZCGPR GT 2).ZG347Q                      01749200
                      AIF   ('&ZCGPR' EQ '0').ZG347Q                    01749300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01749400
                      AIF   (T'&ZCGPR NE 'N').ZG347Q  INVALID REG NAME  01749500
.ZG347P               ANOP  ,                                           01749600
                      AIF   (T'&ZCGPR NE 'N').ZG347R  NON NUMERIC       01749700
                      AIF   ('&ZCGPR' LT '2').ZG347Q                    01749800
                      AIF   ('&ZCGPR' LE '12').ZG347R                   01749900
.ZG347Q               ANOP  ,                                           01750000
&ZMS                  SETC  '"BUFLIST='                                 01750100
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            01750200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01750300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01750400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01750500
.ZG347R               ANOP  ,                                           01750600
.*------------------------------------------------------------------    01750700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01750800
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            01750900
.*-------------------------------------------------------------------   01751000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01751100
.ZG350                ANOP  ,                                           01751200
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG350A             01751300
&ZTLC                 SETC 'VIRTUAL'                                    01751400
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG367        01751500
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     01751600
                      AIF   (N'&BUFADDRTYPE LE 1).ZG350A  CK NUM        01751700
&ZMS                  SETC  '"BUFADDRTYPE='                             01751800
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01751900
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        01752000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01752100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01752200
.ZG350A               ANOP  ,                                           01752300
.*------------------------------------------------------------------    01752400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01752500
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01752600
.*-------------------------------------------------------------------   01752700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01752800
.ZG353                ANOP  ,                                           01752900
                      AIF   (K'&PAGEABLE(1) LE 0).ZG353A                01753000
&ZTLC                 SETC 'YES'                                        01753100
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG357           01753200
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01753300
                      AIF   (N'&PAGEABLE LE 1).ZG353A  CK NUM           01753400
&ZMS                  SETC  '"PAGEABLE='                                01753500
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01753600
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01753700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01753800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01753900
.ZG353A               ANOP  ,                                           01754000
.*----------------------------------------------------------------***   01754100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01754200
                      AIF   (N'&BUFSTGKEY LE 1).ZG355A  CK NUM          01754300
&ZMS                  SETC  '"BUFSTGKEY='                               01754400
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01754500
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01754600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01754700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01754800
.ZG355A               ANOP  ,                                           01754900
.*-------------------------------------------------------------------   01755000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01755100
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01755200
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01755300
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG355B  PARM         01755400
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01755500
                      AIF   (N'&BUFSTGKEY GT 1).ZG355B  MULTI           01755600
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01755700
.ZG355B               ANOP  ,                                           01755800
.*-------------------------------------------------------------------   01755900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01756000
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG355R  NOT I/O       01756100
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG355R                  01756200
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG355R          01756300
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01756400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG355P               01756500
                      AIF   (K'&ZCGPR GT 2).ZG355Q                      01756600
                      AIF   ('&ZCGPR' EQ '0').ZG355Q                    01756700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01756800
                      AIF   (T'&ZCGPR NE 'N').ZG355Q  INVALID REG NAME  01756900
.ZG355P               ANOP  ,                                           01757000
                      AIF   (T'&ZCGPR NE 'N').ZG355R  NON NUMERIC       01757100
                      AIF   ('&ZCGPR' LT '2').ZG355Q                    01757200
                      AIF   ('&ZCGPR' LE '12').ZG355R                   01757300
.ZG355Q               ANOP  ,                                           01757400
&ZMS                  SETC  '"BUFSTGKEY='                               01757500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01757600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01757700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01757800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01757900
.ZG355R               ANOP  ,                                           01758000
.*-------------------------------------------------------------------   01758100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01758200
.ZG357                ANOP  ,                                           01758300
&ZTLC                 SETC 'NO'                                         01758400
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG358           01758500
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01758600
                      AIF   (N'&PAGEABLE LE 1).ZG357A  CK NUM           01758700
&ZMS                  SETC  '"PAGEABLE='                                01758800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01758900
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01759000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01759100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01759200
.ZG357A               ANOP  ,                                           01759300
.*------------------------------------------------------------------    01759400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01759500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01759600
.ZG357A0              AIF   (K'&BUFSTGKEY LE 0).ZG357A1  OK             01759700
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01759800
.ZG357A1              AIF   (K'&ZCVAL LE 0).ZG357A2  OK                 01759900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01760000
&ZMS                  SETC  '"PAGEABLE'                                 01760100
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01760200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01760300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01760400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01760500
.ZG357A2              ANOP  ,                                           01760600
.*------------------------------------------------------------------    01760700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01760800
.ZG358                ANOP  ,                                           01760900
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01761000
                      AIF   (K'&XPAGEABLE GT 0).ZG358E  VALID ARG       01761100
                      AIF   (T'&PAGEABLE EQ 'O').ZG358D  OMITTED        01761200
&ZASYSLNDX            SETA  0                                           01761300
.ZG358A               ANOP  ,           POSITIONAL MACRO KEY            01761400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01761500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG358C           01761600
&ZTLC                 SETC 'PAGEABLE'                                   01761700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG358A  01761800
.ZG358B               ANOP  ,                                           01761900
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01762000
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        01762100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01762200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01762300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01762400
                      AGO   .ZG358E                                     01762500
.ZG358C               ANOP  ,                                           01762600
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01762700
&ZMS                  SETC  '"PAGEABLE='                                01762800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01762900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01763000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01763100
&ZMS                  SETC  '&ZMS "YES"'                                01763200
&ZMS                  SETC  '&ZMS OR "NO".'                             01763300
                      MNOTE 8,' &ZMS '                                  01763400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01763500
                      AGO   .ZG358E                                     01763600
.ZG358D               ANOP  ,                                           01763700
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01763800
.ZG358E               ANOP  ,                                           01763900
.*----------------------------------------------------------------***   01764000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01764100
                      AIF   (N'&BUFALET LE 1).ZG360A  CK NUM            01764200
&ZMS                  SETC  '"BUFALET='                                 01764300
&ZMS                  SETC  '&ZMS.&BUFALET"'                            01764400
&ZMS                  SETC  '&ZMS "BUFALET"'                            01764500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01764600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01764700
.ZG360A               ANOP  ,                                           01764800
.*-------------------------------------------------------------------   01764900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01765000
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   01765100
&XBUFALET             SETC  'NO_BUFALET'                                01765200
                      AIF   (K'&BUFALET(1) LE 0).ZG360B  PARM           01765300
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           01765400
                      AIF   (N'&BUFALET GT 1).ZG360B  MULTI             01765500
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   01765600
.ZG360B               ANOP  ,                                           01765700
.*-------------------------------------------------------------------   01765800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01765900
                      AIF   (K'&ZXBUFALET LE 0).ZG360R  NOT I/O         01766000
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG360R                     01766100
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG360R            01766200
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                01766300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG360P               01766400
                      AIF   (K'&ZCGPR GT 2).ZG360Q                      01766500
                      AIF   ('&ZCGPR' EQ '0').ZG360Q                    01766600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01766700
                      AIF   (T'&ZCGPR NE 'N').ZG360Q  INVALID REG NAME  01766800
.ZG360P               ANOP  ,                                           01766900
                      AIF   (T'&ZCGPR NE 'N').ZG360R  NON NUMERIC       01767000
                      AIF   ('&ZCGPR' LT '2').ZG360Q                    01767100
                      AIF   ('&ZCGPR' LE '12').ZG360R                   01767200
.ZG360Q               ANOP  ,                                           01767300
&ZMS                  SETC  '"BUFALET='                                 01767400
&ZMS                  SETC  '&ZMS.&BUFALET"'                            01767500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01767600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01767700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01767800
.ZG360R               ANOP  ,                                           01767900
.*------------------------------------------------------------------    01768000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01768100
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            01768200
.*-------------------------------------------------------------------   01768300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01768400
.ZG364                ANOP  ,                                           01768500
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG364A             01768600
&ZTLC                 SETC '31'                                         01768700
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG365        01768800
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     01768900
                      AIF   (N'&BUFADDRSIZE LE 1).ZG364A  CK NUM        01769000
&ZMS                  SETC  '"BUFADDRSIZE='                             01769100
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01769200
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01769300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01769400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01769500
.ZG364A               ANOP  ,                                           01769600
.*-------------------------------------------------------------------   01769700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01769800
.ZG365                ANOP  ,                                           01769900
&ZTLC                 SETC '64'                                         01770000
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG366        01770100
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     01770200
                      AIF   (N'&BUFADDRSIZE LE 1).ZG365A  CK NUM        01770300
&ZMS                  SETC  '"BUFADDRSIZE='                             01770400
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01770500
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01770600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01770700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01770800
.ZG365A               ANOP  ,                                           01770900
.*------------------------------------------------------------------    01771000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01771100
.ZG366                ANOP  ,                                           01771200
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   01771300
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG366E  VALID ARG    01771400
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG366D  OMITTED     01771500
&ZASYSLNDX            SETA  0                                           01771600
.ZG366A               ANOP  ,           POSITIONAL MACRO KEY            01771700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01771800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG366C           01771900
&ZTLC                 SETC 'BUFADDRSIZE'                                01772000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG366A  01772100
.ZG366B               ANOP  ,                                           01772200
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01772300
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     01772400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01772500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01772600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01772700
                      AGO   .ZG366E                                     01772800
.ZG366C               ANOP  ,                                           01772900
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01773000
&ZMS                  SETC  '"BUFADDRSIZE='                             01773100
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01773200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01773300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01773400
&ZMS                  SETC  '&ZMS "31"'                                 01773500
&ZMS                  SETC  '&ZMS OR "64".'                             01773600
                      MNOTE 8,' &ZMS '                                  01773700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01773800
                      AGO   .ZG366E                                     01773900
.ZG366D               ANOP  ,                                           01774000
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             01774100
.ZG366E               ANOP  ,                                           01774200
.*-------------------------------------------------------------------   01774300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01774400
.ZG367                ANOP  ,                                           01774500
&ZTLC                 SETC 'REAL'                                       01774600
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG373        01774700
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     01774800
                      AIF   (N'&BUFADDRTYPE LE 1).ZG367A  CK NUM        01774900
&ZMS                  SETC  '"BUFADDRTYPE='                             01775000
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01775100
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        01775200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01775300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01775400
.ZG367A               ANOP  ,                                           01775500
.*------------------------------------------------------------------    01775600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01775700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01775800
.ZG367A0              AIF   (K'&PAGEABLE LE 0).ZG367A1  OK              01775900
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      01776000
.ZG367A1              AIF   (K'&BUFSTGKEY LE 0).ZG367A2  OK             01776100
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01776200
.ZG367A2              AIF   (K'&BUFALET LE 0).ZG367A3  OK               01776300
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      01776400
.ZG367A3              AIF   (K'&ZCVAL LE 0).ZG367A4  OK                 01776500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01776600
&ZMS                  SETC  '"BUFADDRTYPE'                              01776700
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       01776800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01776900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01777000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01777100
.ZG367A4              ANOP  ,                                           01777200
.*------------------------------------------------------------------    01777300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01777400
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            01777500
.*-------------------------------------------------------------------   01777600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01777700
.ZG370                ANOP  ,                                           01777800
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG370A             01777900
&ZTLC                 SETC '31'                                         01778000
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG371        01778100
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     01778200
                      AIF   (N'&BUFADDRSIZE LE 1).ZG370A  CK NUM        01778300
&ZMS                  SETC  '"BUFADDRSIZE='                             01778400
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01778500
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01778600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01778700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01778800
.ZG370A               ANOP  ,                                           01778900
.*-------------------------------------------------------------------   01779000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01779100
.ZG371                ANOP  ,                                           01779200
&ZTLC                 SETC '64'                                         01779300
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG372        01779400
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     01779500
                      AIF   (N'&BUFADDRSIZE LE 1).ZG371A  CK NUM        01779600
&ZMS                  SETC  '"BUFADDRSIZE='                             01779700
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01779800
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01779900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01780000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01780100
.ZG371A               ANOP  ,                                           01780200
.*------------------------------------------------------------------    01780300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01780400
.ZG372                ANOP  ,                                           01780500
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   01780600
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG372E  VALID ARG    01780700
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG372D  OMITTED     01780800
&ZASYSLNDX            SETA  0                                           01780900
.ZG372A               ANOP  ,           POSITIONAL MACRO KEY            01781000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01781100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG372C           01781200
&ZTLC                 SETC 'BUFADDRSIZE'                                01781300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG372A  01781400
.ZG372B               ANOP  ,                                           01781500
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01781600
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     01781700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01781800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01781900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01782000
                      AGO   .ZG372E                                     01782100
.ZG372C               ANOP  ,                                           01782200
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01782300
&ZMS                  SETC  '"BUFADDRSIZE='                             01782400
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01782500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01782600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01782700
&ZMS                  SETC  '&ZMS "31"'                                 01782800
&ZMS                  SETC  '&ZMS OR "64".'                             01782900
                      MNOTE 8,' &ZMS '                                  01783000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01783100
                      AGO   .ZG372E                                     01783200
.ZG372D               ANOP  ,                                           01783300
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             01783400
.ZG372E               ANOP  ,                                           01783500
.*------------------------------------------------------------------    01783600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01783700
.ZG373                ANOP  ,                                           01783800
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01783900
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG373E  VALID ARG    01784000
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG373D  OMITTED     01784100
&ZASYSLNDX            SETA  0                                           01784200
.ZG373A               ANOP  ,           POSITIONAL MACRO KEY            01784300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01784400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG373C           01784500
&ZTLC                 SETC 'BUFADDRTYPE'                                01784600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG373A  01784700
.ZG373B               ANOP  ,                                           01784800
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01784900
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     01785000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01785100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01785200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01785300
                      AGO   .ZG373E                                     01785400
.ZG373C               ANOP  ,                                           01785500
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01785600
&ZMS                  SETC  '"BUFADDRTYPE='                             01785700
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01785800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01785900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01786000
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            01786100
&ZMS                  SETC  '&ZMS OR "REAL".'                           01786200
                      MNOTE 8,' &ZMS '                                  01786300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01786400
                      AGO   .ZG373E                                     01786500
.ZG373D               ANOP  ,                                           01786600
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             01786700
.ZG373E               ANOP  ,                                           01786800
.*----------------------------------------------------------------***   01786900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01787000
                      AIF   (N'&BUFNUM LE 1).ZG375A  CK NUM             01787100
&ZMS                  SETC  '"BUFNUM='                                  01787200
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01787300
&ZMS                  SETC  '&ZMS "BUFNUM"'                             01787400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01787500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01787600
.ZG375A               ANOP  ,                                           01787700
.*-------------------------------------------------------------------   01787800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01787900
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   01788000
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           01788100
                      AIF   (N'&BUFNUM GT 1).ZG375B  MULTI              01788200
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   01788300
.ZG375B               AIF   (K'&BUFNUM(1) GT 0).ZG375C                  01788400
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 01788500
&ZMS                  SETC  ' '                                         01788600
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 01788700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01788800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01788900
.ZG375C               ANOP  ,                                           01789000
.*-------------------------------------------------------------------   01789100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01789200
                      AIF   (K'&ZXBUFNUM LE 0).ZG375R  NOT I/O          01789300
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG375R             01789400
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  01789500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG375P               01789600
                      AIF   (K'&ZCGPR GT 2).ZG375Q                      01789700
                      AIF   ('&ZCGPR' EQ '0').ZG375Q                    01789800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01789900
                      AIF   (T'&ZCGPR NE 'N').ZG375Q  INVALID REG NAME  01790000
.ZG375P               ANOP  ,                                           01790100
                      AIF   (T'&ZCGPR NE 'N').ZG375R  NON NUMERIC       01790200
                      AIF   ('&ZCGPR' LT '2').ZG375Q                    01790300
                      AIF   ('&ZCGPR' LE '12').ZG375R                   01790400
.ZG375Q               ANOP  ,                                           01790500
&ZMS                  SETC  '"BUFNUM='                                  01790600
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01790700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01790800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01790900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01791000
.ZG375R               ANOP  ,                                           01791100
.*-------------------------------------------------------------------   01791200
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          01791300
.ZG377ZY  AIF    ('&XDATAREA' NE 'BUFFER').ZG389ZY                      01791400
.*-------------------------------------------------------------------   01791500
.***AG.KMEKY14 NAME, RQD OUTPUT, ME KEYS -DISALLOWED KEYS               01791600
&ZCVAL                SETC ''           ERROR KEY FIELD                 01791700
.ZG377I0              AIF   (K'&BUFADDRTYPE LE 0).ZG377I1               01791800
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         01791900
.ZG377I1              AIF   (K'&BUFALET LE 0).ZG377I2                   01792000
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          01792100
.ZG377I2              AIF   (K'&BUFADDRSIZE LE 0).ZG377I3               01792200
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         01792300
.ZG377I3              AIF   (K'&BUFNUM LE 0).ZG377I4                    01792400
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          01792500
.ZG377I4              AIF   (K'&ZCVAL LE 0).ZG377J  KEY                 01792600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01792700
&ZMS                  SETC  '"BUFFER'                                   01792800
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01792900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01793000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01793100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01793200
.ZG377J               ANOP  ,                                           01793300
.*-------------------------------------------------------------------   01793400
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                01793500
                      AIF   (K'&ZXBUFFER LE 0).ZG377R  NOT I/O          01793600
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG377R             01793700
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  01793800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG377P               01793900
                      AIF   (K'&ZCGPR GT 2).ZG377Q                      01794000
                      AIF   ('&ZCGPR' EQ '0').ZG377Q                    01794100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01794200
                      AIF   (T'&ZCGPR NE 'N').ZG377Q  INVALID REG NAME  01794300
.ZG377P               ANOP  ,                                           01794400
                      AIF   (T'&ZCGPR NE 'N').ZG377R  NON NUMERIC       01794500
                      AIF   ('&ZCGPR' LT '2').ZG377Q                    01794600
                      AIF   ('&ZCGPR' LE '12').ZG377R                   01794700
.ZG377Q               ANOP  ,                                           01794800
&ZMS                  SETC  '"BUFFER='                                  01794900
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01795000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01795100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01795200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01795300
.ZG377R               ANOP  ,                                           01795400
.*------------------------------------------------------------------    01795500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01795600
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01795700
.*-------------------------------------------------------------------   01795800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01795900
.ZG380                ANOP  ,                                           01796000
                      AIF   (K'&PAGEABLE(1) LE 0).ZG380A                01796100
&ZTLC                 SETC 'YES'                                        01796200
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG384           01796300
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01796400
                      AIF   (N'&PAGEABLE LE 1).ZG380A  CK NUM           01796500
&ZMS                  SETC  '"PAGEABLE='                                01796600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01796700
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01796800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01796900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01797000
.ZG380A               ANOP  ,                                           01797100
.*----------------------------------------------------------------***   01797200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01797300
                      AIF   (N'&BUFSTGKEY LE 1).ZG382A  CK NUM          01797400
&ZMS                  SETC  '"BUFSTGKEY='                               01797500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01797600
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01797700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01797800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01797900
.ZG382A               ANOP  ,                                           01798000
.*-------------------------------------------------------------------   01798100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01798200
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01798300
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01798400
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG382B  PARM         01798500
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01798600
                      AIF   (N'&BUFSTGKEY GT 1).ZG382B  MULTI           01798700
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01798800
.ZG382B               ANOP  ,                                           01798900
.*-------------------------------------------------------------------   01799000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01799100
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG382R  NOT I/O       01799200
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG382R                  01799300
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG382R          01799400
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01799500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG382P               01799600
                      AIF   (K'&ZCGPR GT 2).ZG382Q                      01799700
                      AIF   ('&ZCGPR' EQ '0').ZG382Q                    01799800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01799900
                      AIF   (T'&ZCGPR NE 'N').ZG382Q  INVALID REG NAME  01800000
.ZG382P               ANOP  ,                                           01800100
                      AIF   (T'&ZCGPR NE 'N').ZG382R  NON NUMERIC       01800200
                      AIF   ('&ZCGPR' LT '2').ZG382Q                    01800300
                      AIF   ('&ZCGPR' LE '12').ZG382R                   01800400
.ZG382Q               ANOP  ,                                           01800500
&ZMS                  SETC  '"BUFSTGKEY='                               01800600
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01800700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01800800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01800900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01801000
.ZG382R               ANOP  ,                                           01801100
.*-------------------------------------------------------------------   01801200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01801300
.ZG384                ANOP  ,                                           01801400
&ZTLC                 SETC 'NO'                                         01801500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG385           01801600
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01801700
                      AIF   (N'&PAGEABLE LE 1).ZG384A  CK NUM           01801800
&ZMS                  SETC  '"PAGEABLE='                                01801900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01802000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01802100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01802200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01802300
.ZG384A               ANOP  ,                                           01802400
.*------------------------------------------------------------------    01802500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01802600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01802700
.ZG384A0              AIF   (K'&BUFSTGKEY LE 0).ZG384A1  OK             01802800
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01802900
.ZG384A1              AIF   (K'&ZCVAL LE 0).ZG384A2  OK                 01803000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01803100
&ZMS                  SETC  '"PAGEABLE'                                 01803200
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01803300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01803400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01803500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01803600
.ZG384A2              ANOP  ,                                           01803700
.*------------------------------------------------------------------    01803800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01803900
.ZG385                ANOP  ,                                           01804000
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01804100
                      AIF   (K'&XPAGEABLE GT 0).ZG385E  VALID ARG       01804200
                      AIF   (T'&PAGEABLE EQ 'O').ZG385D  OMITTED        01804300
&ZASYSLNDX            SETA  0                                           01804400
.ZG385A               ANOP  ,           POSITIONAL MACRO KEY            01804500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01804600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG385C           01804700
&ZTLC                 SETC 'PAGEABLE'                                   01804800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG385A  01804900
.ZG385B               ANOP  ,                                           01805000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01805100
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        01805200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01805300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01805400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01805500
                      AGO   .ZG385E                                     01805600
.ZG385C               ANOP  ,                                           01805700
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01805800
&ZMS                  SETC  '"PAGEABLE='                                01805900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01806000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01806100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01806200
&ZMS                  SETC  '&ZMS "YES"'                                01806300
&ZMS                  SETC  '&ZMS OR "NO".'                             01806400
                      MNOTE 8,' &ZMS '                                  01806500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01806600
                      AGO   .ZG385E                                     01806700
.ZG385D               ANOP  ,                                           01806800
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01806900
.ZG385E               ANOP  ,                                           01807000
.*----------------------------------------------------------------***   01807100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01807200
                      AIF   (N'&BUFSIZE LE 1).ZG387A  CK NUM            01807300
&ZMS                  SETC  '"BUFSIZE='                                 01807400
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01807500
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            01807600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01807700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01807800
.ZG387A               ANOP  ,                                           01807900
.*-------------------------------------------------------------------   01808000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01808100
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   01808200
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           01808300
                      AIF   (N'&BUFSIZE GT 1).ZG387B  MULTI             01808400
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   01808500
.ZG387B               AIF   (K'&BUFSIZE(1) GT 0).ZG387C                 01808600
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 01808700
&ZMS                  SETC  ' '                                         01808800
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                01808900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01809000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01809100
.ZG387C               ANOP  ,                                           01809200
.*-------------------------------------------------------------------   01809300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01809400
                      AIF   (K'&ZXBUFSIZE LE 0).ZG387R  NOT I/O         01809500
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG387R            01809600
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                01809700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG387P               01809800
                      AIF   (K'&ZCGPR GT 2).ZG387Q                      01809900
                      AIF   ('&ZCGPR' EQ '0').ZG387Q                    01810000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01810100
                      AIF   (T'&ZCGPR NE 'N').ZG387Q  INVALID REG NAME  01810200
.ZG387P               ANOP  ,                                           01810300
                      AIF   (T'&ZCGPR NE 'N').ZG387R  NON NUMERIC       01810400
                      AIF   ('&ZCGPR' LT '2').ZG387Q                    01810500
                      AIF   ('&ZCGPR' LE '12').ZG387R                   01810600
.ZG387Q               ANOP  ,                                           01810700
&ZMS                  SETC  '"BUFSIZE='                                 01810800
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01810900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01811000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01811100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01811200
.ZG387R               ANOP  ,                                           01811300
.*-------------------------------------------------------------------   01811400
.***AG.KMEKY15 NAME, RQD OUTPUT, ME KEYS -END                           01811500
.ZG389ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     01811600
.*-------------------------------------------------------------------   01811700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01811800
.ZG390                ANOP  ,                                           01811900
&ZTLC                 SETC 'DELETE_LIST'                                01812000
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG718            01812100
&XREQUEST             SETC  'DELETE_LIST'       SET KEYWORD             01812200
                      AIF   (N'&REQUEST LE 1).ZG390A  CK NUM            01812300
&ZMS                  SETC  '"REQUEST='                                 01812400
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01812500
&ZMS                  SETC  '&ZMS "REQUEST"'                            01812600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01812700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01812800
.ZG390A               ANOP  ,                                           01812900
.*------------------------------------------------------------------    01813000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01813100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01813200
.ZG390A0              AIF   (K'&TYPE LE 0).ZG390A1  OK                  01813300
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      01813400
.ZG390A1              AIF   (K'&ADJAREA LE 0).ZG390A2  OK               01813500
&ZCVAL                SETC '&ZCVAL ADJAREA'     INCORRECT KEY USED      01813600
.ZG390A2              AIF   (K'&BUFLIST LE 0).ZG390A3  OK               01813700
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      01813800
.ZG390A3              AIF   (K'&BUFADDRTYPE LE 0).ZG390A4  OK           01813900
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     01814000
.ZG390A4              AIF   (K'&PAGEABLE LE 0).ZG390A5  OK              01814100
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      01814200
.ZG390A5              AIF   (K'&BUFSTGKEY LE 0).ZG390A6  OK             01814300
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01814400
.ZG390A6              AIF   (K'&BUFALET LE 0).ZG390A7  OK               01814500
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      01814600
.ZG390A7              AIF   (K'&BUFADDRSIZE LE 0).ZG390A8  OK           01814700
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     01814800
.ZG390A8              AIF   (K'&BUFNUM LE 0).ZG390A9  OK                01814900
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      01815000
.ZG390A9              AIF   (K'&BUFFER LE 0).ZG390A10  OK               01815100
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      01815200
.ZG390A10             AIF   (K'&BUFSIZE LE 0).ZG390A11  OK              01815300
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      01815400
.ZG390A11             AIF   (K'&RESTOKEN LE 0).ZG390A12  OK             01815500
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      01815600
.ZG390A12             AIF   (K'&EXTRESTOKEN LE 0).ZG390A13  OK          01815700
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     01815800
.ZG390A13             AIF   (K'&FIRSTELEM LE 0).ZG390A14  OK            01815900
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      01816000
.ZG390A14             AIF   (K'&LASTELEM LE 0).ZG390A15  OK             01816100
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      01816200
.ZG390A15             AIF   (K'&MISCOMPARE LE 0).ZG390A16  OK           01816300
&ZCVAL                SETC '&ZCVAL MISCOMPARE'  INCORRECT KEY USED      01816400
.ZG390A16             AIF   (K'&LISTTYPE LE 0).ZG390A17  OK             01816500
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      01816600
.ZG390A17             AIF   (K'&MOVETOKEY LE 0).ZG390A18  OK            01816700
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      01816800
.ZG390A18             AIF   (K'&LISTKEYINC LE 0).ZG390A19  OK           01816900
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      01817000
.ZG390A19             AIF   (K'&LISTKEYAREA LE 0).ZG390A20  OK          01817100
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     01817200
.ZG390A20             AIF   (K'&MOVETOSKEY LE 0).ZG390A21  OK           01817300
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      01817400
.ZG390A21             AIF   (K'&BUFINCRNUM LE 0).ZG390A22  OK           01817500
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      01817600
.ZG390A22             AIF   (K'&ZCVAL LE 0).ZG390A23  OK                01817700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01817800
                      AIF  (K'&ZCVAL LE 160).ZG390A23A                  01817900
&ZCVAL                SETC '&ZCVAL'(1,160)                              01818000
&ZCVAL                SETC '&ZCVAL....'                                 01818100
.ZG390A23A            ANOP                                              01818200
&ZMS                  SETC  '"REQUEST'                                  01818300
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01818400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01818500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01818600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01818700
.ZG390A23             ANOP  ,                                           01818800
.*----------------------------------------------------------------***   01818900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01819000
                      AIF   (N'&DIRECTION LE 1).ZG392A  CK NUM          01819100
&ZMS                  SETC  '"DIRECTION='                               01819200
&ZMS                  SETC  '&ZMS.&DIRECTION"'                          01819300
&ZMS                  SETC  '&ZMS "DIRECTION"'                          01819400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01819500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01819600
.ZG392A               ANOP  ,                                           01819700
.*-------------------------------------------------------------------   01819800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01819900
&XDIRECTION           SETC  ''          INITIALIZE XVARIABLE            01820000
.ZG393A   AIF   ('&DIRECTION(1)' NE 'HEADTOTAIL').ZG394A                01820100
&XDIRECTION           SETC  'HEADTOTAIL'        SET KEYWORD             01820200
.*-------------------------------------------------------------------   01820300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01820400
.ZG394A   AIF   ('&DIRECTION(1)' NE 'TAILTOHEAD').ZG395A                01820500
&XDIRECTION           SETC  'TAILTOHEAD'        SET KEYWORD             01820600
.*-------------------------------------------------------------------   01820700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01820800
.ZG395A               AIF   (K'&XDIRECTION GT 0).ZG395C  KEYWORD        01820900
                      AIF   (K'&DIRECTION(1) LE 0).ZG395B               01821000
&ZMS                  SETC  '"DIRECTION='                               01821100
&ZMS                  SETC  '&ZMS.&DIRECTION"'                          01821200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01821300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01821400
&ZMS                  SETC  '&ZMS "HEADTOTAIL"'                         01821500
&ZMS                  SETC  '&ZMS OR "TAILTOHEAD".'                     01821600
                      MNOTE 8,' &ZMS '                                  01821700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01821800
.ZG395B               ANOP  ,                                           01821900
&XDIRECTION           SETC  'HEADTOTAIL'        SET DEFAULT KEYWORD     01822000
.ZG395C               ANOP  ,                                           01822100
&ZXDIRECTION          SETC  'INPUT'     SET IN/OUTPUT                   01822200
.*------------------------------------------------------------------    01822300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01822400
&XLOCATOR             SETC  ''          INITIALIZE XVARIABLE            01822500
.*-------------------------------------------------------------------   01822600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01822700
.ZG398                ANOP  ,                                           01822800
                      AIF   (K'&LOCATOR(1) LE 0).ZG398A                 01822900
&ZTLC                 SETC 'CURSOR'                                     01823000
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG456            01823100
&XLOCATOR             SETC  'CURSOR'    SET KEYWORD                     01823200
                      AIF   (N'&LOCATOR LE 1).ZG398A  CK NUM            01823300
&ZMS                  SETC  '"LOCATOR='                                 01823400
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01823500
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01823600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01823700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01823800
.ZG398A               ANOP  ,                                           01823900
.*------------------------------------------------------------------    01824000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01824100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01824200
.ZG398A0              AIF   (K'&ENTRYID LE 0).ZG398A1  OK               01824300
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      01824400
.ZG398A1              AIF   (K'&LISTCOMPARE LE 0).ZG398A2  OK           01824500
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     01824600
.ZG398A2              AIF   (K'&ENTRYNAME LE 0).ZG398A3  OK             01824700
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01824800
.ZG398A3              AIF   (K'&KEYTYPE LE 0).ZG398A4  OK               01824900
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01825000
.ZG398A4              AIF   (K'&ZCVAL LE 0).ZG398A5  OK                 01825100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01825200
&ZMS                  SETC  '"LOCATOR'                                  01825300
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01825400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01825500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01825600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01825700
.ZG398A5              ANOP  ,                                           01825800
.*----------------------------------------------------------------***   01825900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01826000
                      AIF   (N'&LISTNUM LE 1).ZG400A  CK NUM            01826100
&ZMS                  SETC  '"LISTNUM='                                 01826200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01826300
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01826400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01826500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01826600
.ZG400A               ANOP  ,                                           01826700
.*-------------------------------------------------------------------   01826800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01826900
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01827000
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01827100
                      AIF   (N'&LISTNUM GT 1).ZG400B  MULTI             01827200
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01827300
.ZG400B               AIF   (K'&LISTNUM(1) GT 0).ZG400C                 01827400
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01827500
&ZMS                  SETC  ' '                                         01827600
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01827700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01827800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01827900
.ZG400C               ANOP  ,                                           01828000
.*-------------------------------------------------------------------   01828100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01828200
                      AIF   (K'&ZXLISTNUM LE 0).ZG400R  NOT I/O         01828300
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG400R            01828400
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01828500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG400P               01828600
                      AIF   (K'&ZCGPR GT 2).ZG400Q                      01828700
                      AIF   ('&ZCGPR' EQ '0').ZG400Q                    01828800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01828900
                      AIF   (T'&ZCGPR NE 'N').ZG400Q  INVALID REG NAME  01829000
.ZG400P               ANOP  ,                                           01829100
                      AIF   (T'&ZCGPR NE 'N').ZG400R  NON NUMERIC       01829200
                      AIF   ('&ZCGPR' LT '2').ZG400Q                    01829300
                      AIF   ('&ZCGPR' LE '12').ZG400R                   01829400
.ZG400Q               ANOP  ,                                           01829500
&ZMS                  SETC  '"LISTNUM='                                 01829600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01829700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01829800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01829900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01830000
.ZG400R               ANOP  ,                                           01830100
.*----------------------------------------------------------------***   01830200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01830300
                      AIF   (N'&KEYSCANTYPE LE 1).ZG403A  CK NUM        01830400
&ZMS                  SETC  '"KEYSCANTYPE='                             01830500
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01830600
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01830700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01830800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01830900
.ZG403A               ANOP  ,                                           01831000
.*-------------------------------------------------------------------   01831100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01831200
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01831300
.ZG404A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG405A                   01831400
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01831500
.*-------------------------------------------------------------------   01831600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01831700
.ZG405A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG406A               01831800
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01831900
.*-------------------------------------------------------------------   01832000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01832100
.ZG406A               AIF   (K'&XKEYSCANTYPE GT 0).ZG406C  KEYWORD      01832200
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG406B             01832300
&ZMS                  SETC  '"KEYSCANTYPE='                             01832400
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01832500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01832600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01832700
&ZMS                  SETC  '&ZMS "ENTRY"'                              01832800
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01832900
                      MNOTE 8,' &ZMS '                                  01833000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01833100
.ZG406B               ANOP  ,                                           01833200
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01833300
.ZG406C               ANOP  ,                                           01833400
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01833500
.*------------------------------------------------------------------    01833600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01833700
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01833800
.*-------------------------------------------------------------------   01833900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01834000
.ZG409                ANOP  ,                                           01834100
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG409A             01834200
&ZTLC                 SETC 'NO'                                         01834300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG410        01834400
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01834500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG409A  CK NUM        01834600
&ZMS                  SETC  '"AUTHCOMPARE='                             01834700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01834800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01834900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01835000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01835100
.ZG409A               ANOP  ,                                           01835200
.*------------------------------------------------------------------    01835300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01835400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01835500
.ZG409A0              AIF   (K'&AUTHCOMP LE 0).ZG409A1  OK              01835600
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01835700
.ZG409A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG409A2  OK          01835800
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01835900
.ZG409A2              AIF   (K'&ZCVAL LE 0).ZG409A3  OK                 01836000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01836100
&ZMS                  SETC  '"AUTHCOMPARE'                              01836200
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01836300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01836400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01836500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01836600
.ZG409A3              ANOP  ,                                           01836700
.*-------------------------------------------------------------------   01836800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01836900
.ZG410                ANOP  ,                                           01837000
&ZTLC                 SETC 'YES'                                        01837100
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG419        01837200
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01837300
                      AIF   (N'&AUTHCOMPARE LE 1).ZG410A  CK NUM        01837400
&ZMS                  SETC  '"AUTHCOMPARE='                             01837500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01837600
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01837700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01837800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01837900
.ZG410A               ANOP  ,                                           01838000
.*----------------------------------------------------------------***   01838100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01838200
                      AIF   (N'&AUTHCOMP LE 1).ZG412A  CK NUM           01838300
&ZMS                  SETC  '"AUTHCOMP='                                01838400
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01838500
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01838600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01838700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01838800
.ZG412A               ANOP  ,                                           01838900
.*-------------------------------------------------------------------   01839000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01839100
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01839200
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01839300
                      AIF   (N'&AUTHCOMP GT 1).ZG412B  MULTI            01839400
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01839500
.ZG412B               AIF   (K'&AUTHCOMP(1) GT 0).ZG412C                01839600
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01839700
&ZMS                  SETC  ' '                                         01839800
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01839900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01840000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01840100
.ZG412C               ANOP  ,                                           01840200
.*-------------------------------------------------------------------   01840300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01840400
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG412R  NOT I/O        01840500
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG412R           01840600
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01840700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG412P               01840800
                      AIF   (K'&ZCGPR GT 2).ZG412Q                      01840900
                      AIF   ('&ZCGPR' EQ '0').ZG412Q                    01841000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01841100
                      AIF   (T'&ZCGPR NE 'N').ZG412Q  INVALID REG NAME  01841200
.ZG412P               ANOP  ,                                           01841300
                      AIF   (T'&ZCGPR NE 'N').ZG412R  NON NUMERIC       01841400
                      AIF   ('&ZCGPR' LT '2').ZG412Q                    01841500
                      AIF   ('&ZCGPR' LE '12').ZG412R                   01841600
.ZG412Q               ANOP  ,                                           01841700
&ZMS                  SETC  '"AUTHCOMP='                                01841800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01841900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01842000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01842100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01842200
.ZG412R               ANOP  ,                                           01842300
.*----------------------------------------------------------------***   01842400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01842500
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG414A  CK NUM       01842600
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01842700
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01842800
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01842900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01843000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01843100
.ZG414A               ANOP  ,                                           01843200
.*-------------------------------------------------------------------   01843300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01843400
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01843500
.ZG415A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG416A                  01843600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01843700
.*-------------------------------------------------------------------   01843800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01843900
.ZG416A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG417A            01844000
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01844100
.*-------------------------------------------------------------------   01844200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01844300
.ZG417A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG417C  KEYWORD     01844400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG417B            01844500
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01844600
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01844700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01844800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01844900
&ZMS                  SETC  '&ZMS "EQUAL"'                              01845000
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01845100
                      MNOTE 8,' &ZMS '                                  01845200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01845300
.ZG417B               ANOP  ,                                           01845400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01845500
.ZG417C               ANOP  ,                                           01845600
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01845700
.*-------------------------------------------------------------------   01845800
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01845900
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG417D  KEY           01846000
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG417D  PARM      01846100
&ZMS                  SETC  '"AUTHCOMPTYPE'                             01846200
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01846300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01846400
&ZMS                  SETC  '&ZMS '                                     01846500
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01846600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01846700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01846800
.ZG417D               ANOP  ,                                           01846900
.*------------------------------------------------------------------    01847000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01847100
.ZG419                ANOP  ,                                           01847200
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01847300
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG419E  VALID ARG    01847400
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG419D  OMITTED     01847500
&ZASYSLNDX            SETA  0                                           01847600
.ZG419A               ANOP  ,           POSITIONAL MACRO KEY            01847700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01847800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG419C           01847900
&ZTLC                 SETC 'AUTHCOMPARE'                                01848000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG419A  01848100
.ZG419B               ANOP  ,                                           01848200
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01848300
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     01848400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01848500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01848600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01848700
                      AGO   .ZG419E                                     01848800
.ZG419C               ANOP  ,                                           01848900
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01849000
&ZMS                  SETC  '"AUTHCOMPARE='                             01849100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01849200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01849300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01849400
&ZMS                  SETC  '&ZMS "NO"'                                 01849500
&ZMS                  SETC  '&ZMS OR "YES".'                            01849600
                      MNOTE 8,' &ZMS '                                  01849700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01849800
                      AGO   .ZG419E                                     01849900
.ZG419D               ANOP  ,                                           01850000
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01850100
.ZG419E               ANOP  ,                                           01850200
.*------------------------------------------------------------------    01850300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01850400
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01850500
.*-------------------------------------------------------------------   01850600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01850700
.ZG422                ANOP  ,                                           01850800
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG422A              01850900
&ZTLC                 SETC 'NO'                                         01851000
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG423         01851100
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01851200
                      AIF   (N'&KEYCOMPARE LE 1).ZG422A  CK NUM         01851300
&ZMS                  SETC  '"KEYCOMPARE='                              01851400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01851500
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01851600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01851700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01851800
.ZG422A               ANOP  ,                                           01851900
.*------------------------------------------------------------------    01852000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01852100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01852200
.ZG422A0              AIF   (K'&ENTRYKEY LE 0).ZG422A1  OK              01852300
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01852400
.ZG422A1              AIF   (K'&KEYREQTYPE LE 0).ZG422A2  OK            01852500
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01852600
.ZG422A2              AIF   (K'&KEYRANGEEND LE 0).ZG422A3  OK           01852700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01852800
.ZG422A3              AIF   (K'&ZCVAL LE 0).ZG422A4  OK                 01852900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01853000
&ZMS                  SETC  '"KEYCOMPARE'                               01853100
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01853200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01853300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01853400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01853500
.ZG422A4              ANOP  ,                                           01853600
.*-------------------------------------------------------------------   01853700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01853800
.ZG423                ANOP  ,                                           01853900
&ZTLC                 SETC 'YES'                                        01854000
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG437         01854100
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01854200
                      AIF   (N'&KEYCOMPARE LE 1).ZG423A  CK NUM         01854300
&ZMS                  SETC  '"KEYCOMPARE='                              01854400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01854500
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01854600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01854700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01854800
.ZG423A               ANOP  ,                                           01854900
.*----------------------------------------------------------------***   01855000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01855100
                      AIF   (N'&ENTRYKEY LE 1).ZG425A  CK NUM           01855200
&ZMS                  SETC  '"ENTRYKEY='                                01855300
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01855400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01855500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01855600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01855700
.ZG425A               ANOP  ,                                           01855800
.*-------------------------------------------------------------------   01855900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01856000
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01856100
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01856200
                      AIF   (N'&ENTRYKEY GT 1).ZG425B  MULTI            01856300
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01856400
.ZG425B               AIF   (K'&ENTRYKEY(1) GT 0).ZG425C                01856500
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01856600
&ZMS                  SETC  ' '                                         01856700
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01856800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01856900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01857000
.ZG425C               ANOP  ,                                           01857100
.*-------------------------------------------------------------------   01857200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01857300
                      AIF   (K'&ZXENTRYKEY LE 0).ZG425R  NOT I/O        01857400
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG425R           01857500
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01857600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG425P               01857700
                      AIF   (K'&ZCGPR GT 2).ZG425Q                      01857800
                      AIF   ('&ZCGPR' EQ '0').ZG425Q                    01857900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01858000
                      AIF   (T'&ZCGPR NE 'N').ZG425Q  INVALID REG NAME  01858100
.ZG425P               ANOP  ,                                           01858200
                      AIF   (T'&ZCGPR NE 'N').ZG425R  NON NUMERIC       01858300
                      AIF   ('&ZCGPR' LT '2').ZG425Q                    01858400
                      AIF   ('&ZCGPR' LE '12').ZG425R                   01858500
.ZG425Q               ANOP  ,                                           01858600
&ZMS                  SETC  '"ENTRYKEY='                                01858700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01858800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01858900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01859000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01859100
.ZG425R               ANOP  ,                                           01859200
.*------------------------------------------------------------------    01859300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01859400
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01859500
.*-------------------------------------------------------------------   01859600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01859700
.ZG429                ANOP  ,                                           01859800
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG429A              01859900
&ZTLC                 SETC 'EQUAL'                                      01860000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG430         01860100
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01860200
                      AIF   (N'&KEYREQTYPE LE 1).ZG429A  CK NUM         01860300
&ZMS                  SETC  '"KEYREQTYPE='                              01860400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01860500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01860600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01860700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01860800
.ZG429A               ANOP  ,                                           01860900
.*------------------------------------------------------------------    01861000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01861100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01861200
.ZG429A0              AIF   (K'&KEYRANGEEND LE 0).ZG429A1  OK           01861300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01861400
.ZG429A1              AIF   (K'&ZCVAL LE 0).ZG429A2  OK                 01861500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01861600
&ZMS                  SETC  '"KEYREQTYPE'                               01861700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01861800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01861900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01862000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01862100
.ZG429A2              ANOP  ,                                           01862200
.*-------------------------------------------------------------------   01862300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01862400
.ZG430                ANOP  ,                                           01862500
&ZTLC                 SETC 'LESSOREQUAL'                                01862600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG431         01862700
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01862800
                      AIF   (N'&KEYREQTYPE LE 1).ZG430A  CK NUM         01862900
&ZMS                  SETC  '"KEYREQTYPE='                              01863000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01863100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01863200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01863300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01863400
.ZG430A               ANOP  ,                                           01863500
.*------------------------------------------------------------------    01863600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01863700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01863800
.ZG430A0              AIF   (K'&KEYRANGEEND LE 0).ZG430A1  OK           01863900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01864000
.ZG430A1              AIF   (K'&ZCVAL LE 0).ZG430A2  OK                 01864100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01864200
&ZMS                  SETC  '"KEYREQTYPE'                               01864300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01864400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01864500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01864600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01864700
.ZG430A2              ANOP  ,                                           01864800
.*-------------------------------------------------------------------   01864900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01865000
.ZG431                ANOP  ,                                           01865100
&ZTLC                 SETC 'GREATEROREQUAL'                             01865200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG432         01865300
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01865400
                      AIF   (N'&KEYREQTYPE LE 1).ZG431A  CK NUM         01865500
&ZMS                  SETC  '"KEYREQTYPE='                              01865600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01865700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01865800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01865900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01866000
.ZG431A               ANOP  ,                                           01866100
.*------------------------------------------------------------------    01866200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01866300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01866400
.ZG431A0              AIF   (K'&KEYRANGEEND LE 0).ZG431A1  OK           01866500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01866600
.ZG431A1              AIF   (K'&ZCVAL LE 0).ZG431A2  OK                 01866700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01866800
&ZMS                  SETC  '"KEYREQTYPE'                               01866900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01867000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01867100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01867200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01867300
.ZG431A2              ANOP  ,                                           01867400
.*-------------------------------------------------------------------   01867500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01867600
.ZG432                ANOP  ,                                           01867700
&ZTLC                 SETC 'RANGE'                                      01867800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG436         01867900
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01868000
                      AIF   (N'&KEYREQTYPE LE 1).ZG432A  CK NUM         01868100
&ZMS                  SETC  '"KEYREQTYPE='                              01868200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01868300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01868400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01868500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01868600
.ZG432A               ANOP  ,                                           01868700
.*----------------------------------------------------------------***   01868800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01868900
                      AIF   (N'&KEYRANGEEND LE 1).ZG434A  CK NUM        01869000
&ZMS                  SETC  '"KEYRANGEEND='                             01869100
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01869200
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01869300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01869400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01869500
.ZG434A               ANOP  ,                                           01869600
.*-------------------------------------------------------------------   01869700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01869800
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01869900
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01870000
                      AIF   (N'&KEYRANGEEND GT 1).ZG434B  MULTI         01870100
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01870200
.ZG434B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG434C             01870300
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01870400
&ZMS                  SETC  ' '                                         01870500
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01870600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01870700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01870800
.ZG434C               ANOP  ,                                           01870900
.*-------------------------------------------------------------------   01871000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01871100
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG434R  NOT I/O     01871200
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG434R        01871300
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01871400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG434P               01871500
                      AIF   (K'&ZCGPR GT 2).ZG434Q                      01871600
                      AIF   ('&ZCGPR' EQ '0').ZG434Q                    01871700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01871800
                      AIF   (T'&ZCGPR NE 'N').ZG434Q  INVALID REG NAME  01871900
.ZG434P               ANOP  ,                                           01872000
                      AIF   (T'&ZCGPR NE 'N').ZG434R  NON NUMERIC       01872100
                      AIF   ('&ZCGPR' LT '2').ZG434Q                    01872200
                      AIF   ('&ZCGPR' LE '12').ZG434R                   01872300
.ZG434Q               ANOP  ,                                           01872400
&ZMS                  SETC  '"KEYRANGEEND='                             01872500
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01872600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01872700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01872800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01872900
.ZG434R               ANOP  ,                                           01873000
.*------------------------------------------------------------------    01873100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01873200
.ZG436                ANOP  ,                                           01873300
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01873400
                      AIF   (K'&XKEYREQTYPE GT 0).ZG436E  VALID ARG     01873500
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG436D  OMITTED      01873600
&ZASYSLNDX            SETA  0                                           01873700
.ZG436A               ANOP  ,           POSITIONAL MACRO KEY            01873800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01873900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG436C           01874000
&ZTLC                 SETC 'KEYREQTYPE'                                 01874100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG436A  01874200
.ZG436B               ANOP  ,                                           01874300
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01874400
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      01874500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01874600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01874700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01874800
                      AGO   .ZG436E                                     01874900
.ZG436C               ANOP  ,                                           01875000
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01875100
&ZMS                  SETC  '"KEYREQTYPE='                              01875200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01875300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01875400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01875500
&ZMS                  SETC  '&ZMS "EQUAL",'                             01875600
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01875700
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01875800
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01875900
                      MNOTE 8,' &ZMS '                                  01876000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01876100
                      AGO   .ZG436E                                     01876200
.ZG436D               ANOP  ,                                           01876300
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01876400
.ZG436E               ANOP  ,                                           01876500
.*------------------------------------------------------------------    01876600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01876700
.ZG437                ANOP  ,                                           01876800
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01876900
                      AIF   (K'&XKEYCOMPARE GT 0).ZG437E  VALID ARG     01877000
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG437D  OMITTED      01877100
&ZASYSLNDX            SETA  0                                           01877200
.ZG437A               ANOP  ,           POSITIONAL MACRO KEY            01877300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01877400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG437C           01877500
&ZTLC                 SETC 'KEYCOMPARE'                                 01877600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG437A  01877700
.ZG437B               ANOP  ,                                           01877800
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01877900
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      01878000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01878100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01878200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01878300
                      AGO   .ZG437E                                     01878400
.ZG437C               ANOP  ,                                           01878500
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01878600
&ZMS                  SETC  '"KEYCOMPARE='                              01878700
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01878800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01878900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01879000
&ZMS                  SETC  '&ZMS "NO"'                                 01879100
&ZMS                  SETC  '&ZMS OR "YES".'                            01879200
                      MNOTE 8,' &ZMS '                                  01879300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01879400
                      AGO   .ZG437E                                     01879500
.ZG437D               ANOP  ,                                           01879600
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01879700
.ZG437E               ANOP  ,                                           01879800
.*------------------------------------------------------------------    01879900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01880000
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01880100
.*-------------------------------------------------------------------   01880200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01880300
.ZG440                ANOP  ,                                           01880400
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG440A             01880500
&ZTLC                 SETC 'NO'                                         01880600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG441        01880700
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01880800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG440A  CK NUM        01880900
&ZMS                  SETC  '"SKEYCOMPARE='                             01881000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01881100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01881200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01881300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01881400
.ZG440A               ANOP  ,                                           01881500
.*------------------------------------------------------------------    01881600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01881700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01881800
.ZG440A0              AIF   (K'&SECONDARYKEY LE 0).ZG440A1  OK          01881900
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01882000
.ZG440A1              AIF   (K'&SKEYREQTYPE LE 0).ZG440A2  OK           01882100
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01882200
.ZG440A2              AIF   (K'&SKEYRANGEEND LE 0).ZG440A3  OK          01882300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01882400
.ZG440A3              AIF   (K'&ZCVAL LE 0).ZG440A4  OK                 01882500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01882600
&ZMS                  SETC  '"SKEYCOMPARE'                              01882700
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01882800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01882900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01883000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01883100
.ZG440A4              ANOP  ,                                           01883200
.*-------------------------------------------------------------------   01883300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01883400
.ZG441                ANOP  ,                                           01883500
&ZTLC                 SETC 'YES'                                        01883600
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG455        01883700
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01883800
                      AIF   (N'&SKEYCOMPARE LE 1).ZG441A  CK NUM        01883900
&ZMS                  SETC  '"SKEYCOMPARE='                             01884000
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01884100
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01884200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01884300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01884400
.ZG441A               ANOP  ,                                           01884500
.*----------------------------------------------------------------***   01884600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01884700
                      AIF   (N'&SECONDARYKEY LE 1).ZG443A  CK NUM       01884800
&ZMS                  SETC  '"SECONDARYKEY='                            01884900
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01885000
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01885100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01885200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01885300
.ZG443A               ANOP  ,                                           01885400
.*-------------------------------------------------------------------   01885500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01885600
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01885700
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01885800
                      AIF   (N'&SECONDARYKEY GT 1).ZG443B  MULTI        01885900
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01886000
.ZG443B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG443C            01886100
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01886200
&ZMS                  SETC  ' '                                         01886300
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01886400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01886500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01886600
.ZG443C               ANOP  ,                                           01886700
.*-------------------------------------------------------------------   01886800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01886900
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG443R  NOT I/O    01887000
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG443R       01887100
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01887200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG443P               01887300
                      AIF   (K'&ZCGPR GT 2).ZG443Q                      01887400
                      AIF   ('&ZCGPR' EQ '0').ZG443Q                    01887500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01887600
                      AIF   (T'&ZCGPR NE 'N').ZG443Q  INVALID REG NAME  01887700
.ZG443P               ANOP  ,                                           01887800
                      AIF   (T'&ZCGPR NE 'N').ZG443R  NON NUMERIC       01887900
                      AIF   ('&ZCGPR' LT '2').ZG443Q                    01888000
                      AIF   ('&ZCGPR' LE '12').ZG443R                   01888100
.ZG443Q               ANOP  ,                                           01888200
&ZMS                  SETC  '"SECONDARYKEY='                            01888300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01888400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01888500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01888600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01888700
.ZG443R               ANOP  ,                                           01888800
.*------------------------------------------------------------------    01888900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01889000
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01889100
.*-------------------------------------------------------------------   01889200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01889300
.ZG447                ANOP  ,                                           01889400
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG447A             01889500
&ZTLC                 SETC 'EQUAL'                                      01889600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG448        01889700
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01889800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG447A  CK NUM        01889900
&ZMS                  SETC  '"SKEYREQTYPE='                             01890000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01890100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01890200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01890300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01890400
.ZG447A               ANOP  ,                                           01890500
.*------------------------------------------------------------------    01890600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01890700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01890800
.ZG447A0              AIF   (K'&SKEYRANGEEND LE 0).ZG447A1  OK          01890900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01891000
.ZG447A1              AIF   (K'&ZCVAL LE 0).ZG447A2  OK                 01891100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01891200
&ZMS                  SETC  '"SKEYREQTYPE'                              01891300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01891400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01891500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01891600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01891700
.ZG447A2              ANOP  ,                                           01891800
.*-------------------------------------------------------------------   01891900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01892000
.ZG448                ANOP  ,                                           01892100
&ZTLC                 SETC 'LESSOREQUAL'                                01892200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG449        01892300
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01892400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG448A  CK NUM        01892500
&ZMS                  SETC  '"SKEYREQTYPE='                             01892600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01892700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01892800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01892900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01893000
.ZG448A               ANOP  ,                                           01893100
.*------------------------------------------------------------------    01893200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01893300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01893400
.ZG448A0              AIF   (K'&SKEYRANGEEND LE 0).ZG448A1  OK          01893500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01893600
.ZG448A1              AIF   (K'&ZCVAL LE 0).ZG448A2  OK                 01893700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01893800
&ZMS                  SETC  '"SKEYREQTYPE'                              01893900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01894000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01894100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01894200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01894300
.ZG448A2              ANOP  ,                                           01894400
.*-------------------------------------------------------------------   01894500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01894600
.ZG449                ANOP  ,                                           01894700
&ZTLC                 SETC 'GREATEROREQUAL'                             01894800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG450        01894900
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01895000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG449A  CK NUM        01895100
&ZMS                  SETC  '"SKEYREQTYPE='                             01895200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01895300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01895400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01895500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01895600
.ZG449A               ANOP  ,                                           01895700
.*------------------------------------------------------------------    01895800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01895900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01896000
.ZG449A0              AIF   (K'&SKEYRANGEEND LE 0).ZG449A1  OK          01896100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01896200
.ZG449A1              AIF   (K'&ZCVAL LE 0).ZG449A2  OK                 01896300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01896400
&ZMS                  SETC  '"SKEYREQTYPE'                              01896500
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01896600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01896700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01896800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01896900
.ZG449A2              ANOP  ,                                           01897000
.*-------------------------------------------------------------------   01897100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01897200
.ZG450                ANOP  ,                                           01897300
&ZTLC                 SETC 'RANGE'                                      01897400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG454        01897500
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01897600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG450A  CK NUM        01897700
&ZMS                  SETC  '"SKEYREQTYPE='                             01897800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01897900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01898000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01898100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01898200
.ZG450A               ANOP  ,                                           01898300
.*----------------------------------------------------------------***   01898400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01898500
                      AIF   (N'&SKEYRANGEEND LE 1).ZG452A  CK NUM       01898600
&ZMS                  SETC  '"SKEYRANGEEND='                            01898700
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01898800
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01898900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01899000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01899100
.ZG452A               ANOP  ,                                           01899200
.*-------------------------------------------------------------------   01899300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01899400
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01899500
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01899600
                      AIF   (N'&SKEYRANGEEND GT 1).ZG452B  MULTI        01899700
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01899800
.ZG452B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG452C            01899900
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01900000
&ZMS                  SETC  ' '                                         01900100
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01900200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01900300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01900400
.ZG452C               ANOP  ,                                           01900500
.*-------------------------------------------------------------------   01900600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01900700
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG452R  NOT I/O    01900800
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG452R       01900900
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01901000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG452P               01901100
                      AIF   (K'&ZCGPR GT 2).ZG452Q                      01901200
                      AIF   ('&ZCGPR' EQ '0').ZG452Q                    01901300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01901400
                      AIF   (T'&ZCGPR NE 'N').ZG452Q  INVALID REG NAME  01901500
.ZG452P               ANOP  ,                                           01901600
                      AIF   (T'&ZCGPR NE 'N').ZG452R  NON NUMERIC       01901700
                      AIF   ('&ZCGPR' LT '2').ZG452Q                    01901800
                      AIF   ('&ZCGPR' LE '12').ZG452R                   01901900
.ZG452Q               ANOP  ,                                           01902000
&ZMS                  SETC  '"SKEYRANGEEND='                            01902100
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01902200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01902300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01902400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01902500
.ZG452R               ANOP  ,                                           01902600
.*------------------------------------------------------------------    01902700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01902800
.ZG454                ANOP  ,                                           01902900
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01903000
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG454E  VALID ARG    01903100
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG454D  OMITTED     01903200
&ZASYSLNDX            SETA  0                                           01903300
.ZG454A               ANOP  ,           POSITIONAL MACRO KEY            01903400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01903500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG454C           01903600
&ZTLC                 SETC 'SKEYREQTYPE'                                01903700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG454A  01903800
.ZG454B               ANOP  ,                                           01903900
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01904000
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     01904100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01904200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01904300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01904400
                      AGO   .ZG454E                                     01904500
.ZG454C               ANOP  ,                                           01904600
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 01904700
&ZMS                  SETC  '"SKEYREQTYPE='                             01904800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01904900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01905000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01905100
&ZMS                  SETC  '&ZMS "EQUAL",'                             01905200
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01905300
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01905400
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01905500
                      MNOTE 8,' &ZMS '                                  01905600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01905700
                      AGO   .ZG454E                                     01905800
.ZG454D               ANOP  ,                                           01905900
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             01906000
.ZG454E               ANOP  ,                                           01906100
.*------------------------------------------------------------------    01906200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01906300
.ZG455                ANOP  ,                                           01906400
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01906500
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG455E  VALID ARG    01906600
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG455D  OMITTED     01906700
&ZASYSLNDX            SETA  0                                           01906800
.ZG455A               ANOP  ,           POSITIONAL MACRO KEY            01906900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01907000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG455C           01907100
&ZTLC                 SETC 'SKEYCOMPARE'                                01907200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG455A  01907300
.ZG455B               ANOP  ,                                           01907400
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01907500
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     01907600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01907700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01907800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01907900
                      AGO   .ZG455E                                     01908000
.ZG455C               ANOP  ,                                           01908100
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 01908200
&ZMS                  SETC  '"SKEYCOMPARE='                             01908300
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01908400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01908500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01908600
&ZMS                  SETC  '&ZMS "NO"'                                 01908700
&ZMS                  SETC  '&ZMS OR "YES".'                            01908800
                      MNOTE 8,' &ZMS '                                  01908900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01909000
                      AGO   .ZG455E                                     01909100
.ZG455D               ANOP  ,                                           01909200
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01909300
.ZG455E               ANOP  ,                                           01909400
.*-------------------------------------------------------------------   01909500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01909600
.ZG456                ANOP  ,                                           01909700
&ZTLC                 SETC 'ENTRYID'                                    01909800
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG522            01909900
&XLOCATOR             SETC  'ENTRYID'   SET KEYWORD                     01910000
                      AIF   (N'&LOCATOR LE 1).ZG456A  CK NUM            01910100
&ZMS                  SETC  '"LOCATOR='                                 01910200
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            01910300
&ZMS                  SETC  '&ZMS "LOCATOR"'                            01910400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01910500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01910600
.ZG456A               ANOP  ,                                           01910700
.*------------------------------------------------------------------    01910800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01910900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01911000
.ZG456A0              AIF   (K'&ENTRYNAME LE 0).ZG456A1  OK             01911100
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      01911200
.ZG456A1              AIF   (K'&KEYTYPE LE 0).ZG456A2  OK               01911300
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      01911400
.ZG456A2              AIF   (K'&ZCVAL LE 0).ZG456A3  OK                 01911500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01911600
&ZMS                  SETC  '"LOCATOR'                                  01911700
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           01911800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01911900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01912000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01912100
.ZG456A3              ANOP  ,                                           01912200
.*----------------------------------------------------------------***   01912300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01912400
                      AIF   (N'&ENTRYID LE 1).ZG458A  CK NUM            01912500
&ZMS                  SETC  '"ENTRYID='                                 01912600
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            01912700
&ZMS                  SETC  '&ZMS "ENTRYID"'                            01912800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01912900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01913000
.ZG458A               ANOP  ,                                           01913100
.*-------------------------------------------------------------------   01913200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01913300
&ZXENTRYID            SETC  'INPUT'     SET IN/OUTPUT                   01913400
&XENTRYID             SETC  '&ENTRYID(1)'       SET XVARIABLE           01913500
                      AIF   (N'&ENTRYID GT 1).ZG458B  MULTI             01913600
&XENTRYID             SETC  '&ENTRYID'  SET XVARIABLE                   01913700
.ZG458B               AIF   (K'&ENTRYID(1) GT 0).ZG458C                 01913800
&ZXENTRYID            SETC  ''          RESET IN/OUTPUT                 01913900
&ZMS                  SETC  ' '                                         01914000
&ZMS                  SETC  '&ZMS "ENTRYID" KEY AND ITS'                01914100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01914200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01914300
.ZG458C               ANOP  ,                                           01914400
.*-------------------------------------------------------------------   01914500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01914600
                      AIF   (K'&ZXENTRYID LE 0).ZG458R  NOT I/O         01914700
                      AIF   ('&XENTRYID'(1,1) NE '(').ZG458R            01914800
&ZCGPR                SETC  '&XENTRYID'(2,K'&XENTRYID-2)                01914900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG458P               01915000
                      AIF   (K'&ZCGPR GT 2).ZG458Q                      01915100
                      AIF   ('&ZCGPR' EQ '0').ZG458Q                    01915200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01915300
                      AIF   (T'&ZCGPR NE 'N').ZG458Q  INVALID REG NAME  01915400
.ZG458P               ANOP  ,                                           01915500
                      AIF   (T'&ZCGPR NE 'N').ZG458R  NON NUMERIC       01915600
                      AIF   ('&ZCGPR' LT '2').ZG458Q                    01915700
                      AIF   ('&ZCGPR' LE '12').ZG458R                   01915800
.ZG458Q               ANOP  ,                                           01915900
&ZMS                  SETC  '"ENTRYID='                                 01916000
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            01916100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01916200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01916300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01916400
.ZG458R               ANOP  ,                                           01916500
.*----------------------------------------------------------------***   01916600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01916700
                      AIF   (N'&KEYSCANTYPE LE 1).ZG461A  CK NUM        01916800
&ZMS                  SETC  '"KEYSCANTYPE='                             01916900
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01917000
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        01917100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01917200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01917300
.ZG461A               ANOP  ,                                           01917400
.*-------------------------------------------------------------------   01917500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01917600
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            01917700
.ZG462A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG463A                   01917800
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     01917900
.*-------------------------------------------------------------------   01918000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01918100
.ZG463A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG464A               01918200
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             01918300
.*-------------------------------------------------------------------   01918400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01918500
.ZG464A               AIF   (K'&XKEYSCANTYPE GT 0).ZG464C  KEYWORD      01918600
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG464B             01918700
&ZMS                  SETC  '"KEYSCANTYPE='                             01918800
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        01918900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01919000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01919100
&ZMS                  SETC  '&ZMS "ENTRY"'                              01919200
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      01919300
                      MNOTE 8,' &ZMS '                                  01919400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01919500
.ZG464B               ANOP  ,                                           01919600
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             01919700
.ZG464C               ANOP  ,                                           01919800
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01919900
.*------------------------------------------------------------------    01920000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01920100
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01920200
.*-------------------------------------------------------------------   01920300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01920400
.ZG467                ANOP  ,                                           01920500
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG467A             01920600
&ZTLC                 SETC 'NO'                                         01920700
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG468        01920800
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     01920900
                      AIF   (N'&LISTCOMPARE LE 1).ZG467A  CK NUM        01921000
&ZMS                  SETC  '"LISTCOMPARE='                             01921100
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01921200
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01921300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01921400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01921500
.ZG467A               ANOP  ,                                           01921600
.*------------------------------------------------------------------    01921700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01921800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01921900
.ZG467A0              AIF   (K'&LISTNUM LE 0).ZG467A1  OK               01922000
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      01922100
.ZG467A1              AIF   (K'&AUTHCOMPARE LE 0).ZG467A2  OK           01922200
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     01922300
.ZG467A2              AIF   (K'&AUTHCOMP LE 0).ZG467A3  OK              01922400
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01922500
.ZG467A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG467A4  OK          01922600
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01922700
.ZG467A4              AIF   (K'&ZCVAL LE 0).ZG467A5  OK                 01922800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01922900
&ZMS                  SETC  '"LISTCOMPARE'                              01923000
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       01923100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01923200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01923300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01923400
.ZG467A5              ANOP  ,                                           01923500
.*-------------------------------------------------------------------   01923600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01923700
.ZG468                ANOP  ,                                           01923800
&ZTLC                 SETC 'YES'                                        01923900
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG485        01924000
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     01924100
                      AIF   (N'&LISTCOMPARE LE 1).ZG468A  CK NUM        01924200
&ZMS                  SETC  '"LISTCOMPARE='                             01924300
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01924400
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        01924500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01924600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01924700
.ZG468A               ANOP  ,                                           01924800
.*----------------------------------------------------------------***   01924900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01925000
                      AIF   (N'&LISTNUM LE 1).ZG470A  CK NUM            01925100
&ZMS                  SETC  '"LISTNUM='                                 01925200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01925300
&ZMS                  SETC  '&ZMS "LISTNUM"'                            01925400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01925500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01925600
.ZG470A               ANOP  ,                                           01925700
.*-------------------------------------------------------------------   01925800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01925900
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   01926000
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           01926100
                      AIF   (N'&LISTNUM GT 1).ZG470B  MULTI             01926200
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   01926300
.ZG470B               AIF   (K'&LISTNUM(1) GT 0).ZG470C                 01926400
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 01926500
&ZMS                  SETC  ' '                                         01926600
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                01926700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01926800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01926900
.ZG470C               ANOP  ,                                           01927000
.*-------------------------------------------------------------------   01927100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01927200
                      AIF   (K'&ZXLISTNUM LE 0).ZG470R  NOT I/O         01927300
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG470R            01927400
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                01927500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG470P               01927600
                      AIF   (K'&ZCGPR GT 2).ZG470Q                      01927700
                      AIF   ('&ZCGPR' EQ '0').ZG470Q                    01927800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01927900
                      AIF   (T'&ZCGPR NE 'N').ZG470Q  INVALID REG NAME  01928000
.ZG470P               ANOP  ,                                           01928100
                      AIF   (T'&ZCGPR NE 'N').ZG470R  NON NUMERIC       01928200
                      AIF   ('&ZCGPR' LT '2').ZG470Q                    01928300
                      AIF   ('&ZCGPR' LE '12').ZG470R                   01928400
.ZG470Q               ANOP  ,                                           01928500
&ZMS                  SETC  '"LISTNUM='                                 01928600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            01928700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01928800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01928900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01929000
.ZG470R               ANOP  ,                                           01929100
.*------------------------------------------------------------------    01929200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01929300
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01929400
.*-------------------------------------------------------------------   01929500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01929600
.ZG474                ANOP  ,                                           01929700
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG474A             01929800
&ZTLC                 SETC 'NO'                                         01929900
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG475        01930000
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     01930100
                      AIF   (N'&AUTHCOMPARE LE 1).ZG474A  CK NUM        01930200
&ZMS                  SETC  '"AUTHCOMPARE='                             01930300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01930400
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01930500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01930600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01930700
.ZG474A               ANOP  ,                                           01930800
.*------------------------------------------------------------------    01930900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01931000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01931100
.ZG474A0              AIF   (K'&AUTHCOMP LE 0).ZG474A1  OK              01931200
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      01931300
.ZG474A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG474A2  OK          01931400
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    01931500
.ZG474A2              AIF   (K'&ZCVAL LE 0).ZG474A3  OK                 01931600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01931700
&ZMS                  SETC  '"AUTHCOMPARE'                              01931800
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       01931900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01932000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01932100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01932200
.ZG474A3              ANOP  ,                                           01932300
.*-------------------------------------------------------------------   01932400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01932500
.ZG475                ANOP  ,                                           01932600
&ZTLC                 SETC 'YES'                                        01932700
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG484        01932800
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     01932900
                      AIF   (N'&AUTHCOMPARE LE 1).ZG475A  CK NUM        01933000
&ZMS                  SETC  '"AUTHCOMPARE='                             01933100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01933200
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        01933300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01933400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01933500
.ZG475A               ANOP  ,                                           01933600
.*----------------------------------------------------------------***   01933700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01933800
                      AIF   (N'&AUTHCOMP LE 1).ZG477A  CK NUM           01933900
&ZMS                  SETC  '"AUTHCOMP='                                01934000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01934100
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01934200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01934300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01934400
.ZG477A               ANOP  ,                                           01934500
.*-------------------------------------------------------------------   01934600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01934700
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01934800
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           01934900
                      AIF   (N'&AUTHCOMP GT 1).ZG477B  MULTI            01935000
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           01935100
.ZG477B               AIF   (K'&AUTHCOMP(1) GT 0).ZG477C                01935200
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 01935300
&ZMS                  SETC  ' '                                         01935400
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               01935500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01935600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01935700
.ZG477C               ANOP  ,                                           01935800
.*-------------------------------------------------------------------   01935900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01936000
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG477R  NOT I/O        01936100
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG477R           01936200
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              01936300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG477P               01936400
                      AIF   (K'&ZCGPR GT 2).ZG477Q                      01936500
                      AIF   ('&ZCGPR' EQ '0').ZG477Q                    01936600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01936700
                      AIF   (T'&ZCGPR NE 'N').ZG477Q  INVALID REG NAME  01936800
.ZG477P               ANOP  ,                                           01936900
                      AIF   (T'&ZCGPR NE 'N').ZG477R  NON NUMERIC       01937000
                      AIF   ('&ZCGPR' LT '2').ZG477Q                    01937100
                      AIF   ('&ZCGPR' LE '12').ZG477R                   01937200
.ZG477Q               ANOP  ,                                           01937300
&ZMS                  SETC  '"AUTHCOMP='                                01937400
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           01937500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01937600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01937700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01937800
.ZG477R               ANOP  ,                                           01937900
.*----------------------------------------------------------------***   01938000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01938100
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG479A  CK NUM       01938200
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01938300
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01938400
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       01938500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01938600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01938700
.ZG479A               ANOP  ,                                           01938800
.*-------------------------------------------------------------------   01938900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01939000
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01939100
.ZG480A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG481A                  01939200
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01939300
.*-------------------------------------------------------------------   01939400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01939500
.ZG481A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG482A            01939600
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01939700
.*-------------------------------------------------------------------   01939800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01939900
.ZG482A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG482C  KEYWORD     01940000
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG482B            01940100
&ZMS                  SETC  '"AUTHCOMPTYPE='                            01940200
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       01940300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01940400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01940500
&ZMS                  SETC  '&ZMS "EQUAL"'                              01940600
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01940700
                      MNOTE 8,' &ZMS '                                  01940800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01940900
.ZG482B               ANOP  ,                                           01941000
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01941100
.ZG482C               ANOP  ,                                           01941200
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01941300
.*-------------------------------------------------------------------   01941400
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01941500
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG482D  KEY           01941600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG482D  PARM      01941700
&ZMS                  SETC  '"AUTHCOMPTYPE'                             01941800
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      01941900
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01942000
&ZMS                  SETC  '&ZMS '                                     01942100
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           01942200
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01942300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01942400
.ZG482D               ANOP  ,                                           01942500
.*------------------------------------------------------------------    01942600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01942700
.ZG484                ANOP  ,                                           01942800
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01942900
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG484E  VALID ARG    01943000
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG484D  OMITTED     01943100
&ZASYSLNDX            SETA  0                                           01943200
.ZG484A               ANOP  ,           POSITIONAL MACRO KEY            01943300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01943400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG484C           01943500
&ZTLC                 SETC 'AUTHCOMPARE'                                01943600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG484A  01943700
.ZG484B               ANOP  ,                                           01943800
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01943900
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     01944000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01944100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01944200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01944300
                      AGO   .ZG484E                                     01944400
.ZG484C               ANOP  ,                                           01944500
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 01944600
&ZMS                  SETC  '"AUTHCOMPARE='                             01944700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        01944800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01944900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01945000
&ZMS                  SETC  '&ZMS "NO"'                                 01945100
&ZMS                  SETC  '&ZMS OR "YES".'                            01945200
                      MNOTE 8,' &ZMS '                                  01945300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01945400
                      AGO   .ZG484E                                     01945500
.ZG484D               ANOP  ,                                           01945600
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01945700
.ZG484E               ANOP  ,                                           01945800
.*------------------------------------------------------------------    01945900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01946000
.ZG485                ANOP  ,                                           01946100
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   01946200
                      AIF   (K'&XLISTCOMPARE GT 0).ZG485E  VALID ARG    01946300
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG485D  OMITTED     01946400
&ZASYSLNDX            SETA  0                                           01946500
.ZG485A               ANOP  ,           POSITIONAL MACRO KEY            01946600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01946700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG485C           01946800
&ZTLC                 SETC 'LISTCOMPARE'                                01946900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG485A  01947000
.ZG485B               ANOP  ,                                           01947100
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01947200
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'                     01947300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01947400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01947500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01947600
                      AGO   .ZG485E                                     01947700
.ZG485C               ANOP  ,                                           01947800
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 01947900
&ZMS                  SETC  '"LISTCOMPARE='                             01948000
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        01948100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01948200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01948300
&ZMS                  SETC  '&ZMS "NO"'                                 01948400
&ZMS                  SETC  '&ZMS OR "YES".'                            01948500
                      MNOTE 8,' &ZMS '                                  01948600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01948700
                      AGO   .ZG485E                                     01948800
.ZG485D               ANOP  ,                                           01948900
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             01949000
.ZG485E               ANOP  ,                                           01949100
.*------------------------------------------------------------------    01949200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01949300
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            01949400
.*-------------------------------------------------------------------   01949500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01949600
.ZG488                ANOP  ,                                           01949700
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG488A              01949800
&ZTLC                 SETC 'NO'                                         01949900
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG489         01950000
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     01950100
                      AIF   (N'&KEYCOMPARE LE 1).ZG488A  CK NUM         01950200
&ZMS                  SETC  '"KEYCOMPARE='                              01950300
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01950400
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01950500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01950600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01950700
.ZG488A               ANOP  ,                                           01950800
.*------------------------------------------------------------------    01950900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01951000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01951100
.ZG488A0              AIF   (K'&ENTRYKEY LE 0).ZG488A1  OK              01951200
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      01951300
.ZG488A1              AIF   (K'&KEYREQTYPE LE 0).ZG488A2  OK            01951400
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      01951500
.ZG488A2              AIF   (K'&KEYRANGEEND LE 0).ZG488A3  OK           01951600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01951700
.ZG488A3              AIF   (K'&ZCVAL LE 0).ZG488A4  OK                 01951800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01951900
&ZMS                  SETC  '"KEYCOMPARE'                               01952000
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        01952100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01952200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01952300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01952400
.ZG488A4              ANOP  ,                                           01952500
.*-------------------------------------------------------------------   01952600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01952700
.ZG489                ANOP  ,                                           01952800
&ZTLC                 SETC 'YES'                                        01952900
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG503         01953000
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     01953100
                      AIF   (N'&KEYCOMPARE LE 1).ZG489A  CK NUM         01953200
&ZMS                  SETC  '"KEYCOMPARE='                              01953300
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01953400
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         01953500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01953600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01953700
.ZG489A               ANOP  ,                                           01953800
.*----------------------------------------------------------------***   01953900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01954000
                      AIF   (N'&ENTRYKEY LE 1).ZG491A  CK NUM           01954100
&ZMS                  SETC  '"ENTRYKEY='                                01954200
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01954300
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           01954400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01954500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01954600
.ZG491A               ANOP  ,                                           01954700
.*-------------------------------------------------------------------   01954800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01954900
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   01955000
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           01955100
                      AIF   (N'&ENTRYKEY GT 1).ZG491B  MULTI            01955200
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           01955300
.ZG491B               AIF   (K'&ENTRYKEY(1) GT 0).ZG491C                01955400
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 01955500
&ZMS                  SETC  ' '                                         01955600
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               01955700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01955800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01955900
.ZG491C               ANOP  ,                                           01956000
.*-------------------------------------------------------------------   01956100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01956200
                      AIF   (K'&ZXENTRYKEY LE 0).ZG491R  NOT I/O        01956300
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG491R           01956400
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              01956500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG491P               01956600
                      AIF   (K'&ZCGPR GT 2).ZG491Q                      01956700
                      AIF   ('&ZCGPR' EQ '0').ZG491Q                    01956800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01956900
                      AIF   (T'&ZCGPR NE 'N').ZG491Q  INVALID REG NAME  01957000
.ZG491P               ANOP  ,                                           01957100
                      AIF   (T'&ZCGPR NE 'N').ZG491R  NON NUMERIC       01957200
                      AIF   ('&ZCGPR' LT '2').ZG491Q                    01957300
                      AIF   ('&ZCGPR' LE '12').ZG491R                   01957400
.ZG491Q               ANOP  ,                                           01957500
&ZMS                  SETC  '"ENTRYKEY='                                01957600
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           01957700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01957800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01957900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01958000
.ZG491R               ANOP  ,                                           01958100
.*------------------------------------------------------------------    01958200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01958300
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            01958400
.*-------------------------------------------------------------------   01958500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01958600
.ZG495                ANOP  ,                                           01958700
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG495A              01958800
&ZTLC                 SETC 'EQUAL'                                      01958900
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG496         01959000
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     01959100
                      AIF   (N'&KEYREQTYPE LE 1).ZG495A  CK NUM         01959200
&ZMS                  SETC  '"KEYREQTYPE='                              01959300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01959400
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01959500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01959600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01959700
.ZG495A               ANOP  ,                                           01959800
.*------------------------------------------------------------------    01959900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01960000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01960100
.ZG495A0              AIF   (K'&KEYRANGEEND LE 0).ZG495A1  OK           01960200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01960300
.ZG495A1              AIF   (K'&ZCVAL LE 0).ZG495A2  OK                 01960400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01960500
&ZMS                  SETC  '"KEYREQTYPE'                               01960600
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01960700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01960800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01960900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01961000
.ZG495A2              ANOP  ,                                           01961100
.*-------------------------------------------------------------------   01961200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01961300
.ZG496                ANOP  ,                                           01961400
&ZTLC                 SETC 'LESSOREQUAL'                                01961500
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG497         01961600
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             01961700
                      AIF   (N'&KEYREQTYPE LE 1).ZG496A  CK NUM         01961800
&ZMS                  SETC  '"KEYREQTYPE='                              01961900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01962000
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01962100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01962200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01962300
.ZG496A               ANOP  ,                                           01962400
.*------------------------------------------------------------------    01962500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01962600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01962700
.ZG496A0              AIF   (K'&KEYRANGEEND LE 0).ZG496A1  OK           01962800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01962900
.ZG496A1              AIF   (K'&ZCVAL LE 0).ZG496A2  OK                 01963000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01963100
&ZMS                  SETC  '"KEYREQTYPE'                               01963200
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01963300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01963400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01963500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01963600
.ZG496A2              ANOP  ,                                           01963700
.*-------------------------------------------------------------------   01963800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01963900
.ZG497                ANOP  ,                                           01964000
&ZTLC                 SETC 'GREATEROREQUAL'                             01964100
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG498         01964200
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             01964300
                      AIF   (N'&KEYREQTYPE LE 1).ZG497A  CK NUM         01964400
&ZMS                  SETC  '"KEYREQTYPE='                              01964500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01964600
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01964700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01964800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01964900
.ZG497A               ANOP  ,                                           01965000
.*------------------------------------------------------------------    01965100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01965200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01965300
.ZG497A0              AIF   (K'&KEYRANGEEND LE 0).ZG497A1  OK           01965400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     01965500
.ZG497A1              AIF   (K'&ZCVAL LE 0).ZG497A2  OK                 01965600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01965700
&ZMS                  SETC  '"KEYREQTYPE'                               01965800
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        01965900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01966000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01966100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01966200
.ZG497A2              ANOP  ,                                           01966300
.*-------------------------------------------------------------------   01966400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01966500
.ZG498                ANOP  ,                                           01966600
&ZTLC                 SETC 'RANGE'                                      01966700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG502         01966800
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     01966900
                      AIF   (N'&KEYREQTYPE LE 1).ZG498A  CK NUM         01967000
&ZMS                  SETC  '"KEYREQTYPE='                              01967100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01967200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         01967300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01967400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01967500
.ZG498A               ANOP  ,                                           01967600
.*----------------------------------------------------------------***   01967700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01967800
                      AIF   (N'&KEYRANGEEND LE 1).ZG500A  CK NUM        01967900
&ZMS                  SETC  '"KEYRANGEEND='                             01968000
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01968100
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        01968200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01968300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01968400
.ZG500A               ANOP  ,                                           01968500
.*-------------------------------------------------------------------   01968600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01968700
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   01968800
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           01968900
                      AIF   (N'&KEYRANGEEND GT 1).ZG500B  MULTI         01969000
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           01969100
.ZG500B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG500C             01969200
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 01969300
&ZMS                  SETC  ' '                                         01969400
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            01969500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01969600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01969700
.ZG500C               ANOP  ,                                           01969800
.*-------------------------------------------------------------------   01969900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01970000
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG500R  NOT I/O     01970100
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG500R        01970200
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        01970300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG500P               01970400
                      AIF   (K'&ZCGPR GT 2).ZG500Q                      01970500
                      AIF   ('&ZCGPR' EQ '0').ZG500Q                    01970600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01970700
                      AIF   (T'&ZCGPR NE 'N').ZG500Q  INVALID REG NAME  01970800
.ZG500P               ANOP  ,                                           01970900
                      AIF   (T'&ZCGPR NE 'N').ZG500R  NON NUMERIC       01971000
                      AIF   ('&ZCGPR' LT '2').ZG500Q                    01971100
                      AIF   ('&ZCGPR' LE '12').ZG500R                   01971200
.ZG500Q               ANOP  ,                                           01971300
&ZMS                  SETC  '"KEYRANGEEND='                             01971400
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        01971500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01971600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01971700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01971800
.ZG500R               ANOP  ,                                           01971900
.*------------------------------------------------------------------    01972000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01972100
.ZG502                ANOP  ,                                           01972200
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   01972300
                      AIF   (K'&XKEYREQTYPE GT 0).ZG502E  VALID ARG     01972400
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG502D  OMITTED      01972500
&ZASYSLNDX            SETA  0                                           01972600
.ZG502A               ANOP  ,           POSITIONAL MACRO KEY            01972700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01972800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG502C           01972900
&ZTLC                 SETC 'KEYREQTYPE'                                 01973000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG502A  01973100
.ZG502B               ANOP  ,                                           01973200
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01973300
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      01973400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01973500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01973600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01973700
                      AGO   .ZG502E                                     01973800
.ZG502C               ANOP  ,                                           01973900
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 01974000
&ZMS                  SETC  '"KEYREQTYPE='                              01974100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         01974200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01974300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01974400
&ZMS                  SETC  '&ZMS "EQUAL",'                             01974500
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       01974600
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    01974700
&ZMS                  SETC  '&ZMS OR "RANGE".'                          01974800
                      MNOTE 8,' &ZMS '                                  01974900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01975000
                      AGO   .ZG502E                                     01975100
.ZG502D               ANOP  ,                                           01975200
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             01975300
.ZG502E               ANOP  ,                                           01975400
.*------------------------------------------------------------------    01975500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01975600
.ZG503                ANOP  ,                                           01975700
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   01975800
                      AIF   (K'&XKEYCOMPARE GT 0).ZG503E  VALID ARG     01975900
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG503D  OMITTED      01976000
&ZASYSLNDX            SETA  0                                           01976100
.ZG503A               ANOP  ,           POSITIONAL MACRO KEY            01976200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01976300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG503C           01976400
&ZTLC                 SETC 'KEYCOMPARE'                                 01976500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG503A  01976600
.ZG503B               ANOP  ,                                           01976700
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01976800
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      01976900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01977000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01977100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01977200
                      AGO   .ZG503E                                     01977300
.ZG503C               ANOP  ,                                           01977400
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 01977500
&ZMS                  SETC  '"KEYCOMPARE='                              01977600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         01977700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01977800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01977900
&ZMS                  SETC  '&ZMS "NO"'                                 01978000
&ZMS                  SETC  '&ZMS OR "YES".'                            01978100
                      MNOTE 8,' &ZMS '                                  01978200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01978300
                      AGO   .ZG503E                                     01978400
.ZG503D               ANOP  ,                                           01978500
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             01978600
.ZG503E               ANOP  ,                                           01978700
.*------------------------------------------------------------------    01978800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01978900
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            01979000
.*-------------------------------------------------------------------   01979100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01979200
.ZG506                ANOP  ,                                           01979300
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG506A             01979400
&ZTLC                 SETC 'NO'                                         01979500
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG507        01979600
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     01979700
                      AIF   (N'&SKEYCOMPARE LE 1).ZG506A  CK NUM        01979800
&ZMS                  SETC  '"SKEYCOMPARE='                             01979900
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01980000
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01980100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01980200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01980300
.ZG506A               ANOP  ,                                           01980400
.*------------------------------------------------------------------    01980500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01980600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01980700
.ZG506A0              AIF   (K'&SECONDARYKEY LE 0).ZG506A1  OK          01980800
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    01980900
.ZG506A1              AIF   (K'&SKEYREQTYPE LE 0).ZG506A2  OK           01981000
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     01981100
.ZG506A2              AIF   (K'&SKEYRANGEEND LE 0).ZG506A3  OK          01981200
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01981300
.ZG506A3              AIF   (K'&ZCVAL LE 0).ZG506A4  OK                 01981400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01981500
&ZMS                  SETC  '"SKEYCOMPARE'                              01981600
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       01981700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01981800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01981900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01982000
.ZG506A4              ANOP  ,                                           01982100
.*-------------------------------------------------------------------   01982200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01982300
.ZG507                ANOP  ,                                           01982400
&ZTLC                 SETC 'YES'                                        01982500
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG521        01982600
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     01982700
                      AIF   (N'&SKEYCOMPARE LE 1).ZG507A  CK NUM        01982800
&ZMS                  SETC  '"SKEYCOMPARE='                             01982900
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        01983000
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        01983100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01983200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01983300
.ZG507A               ANOP  ,                                           01983400
.*----------------------------------------------------------------***   01983500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01983600
                      AIF   (N'&SECONDARYKEY LE 1).ZG509A  CK NUM       01983700
&ZMS                  SETC  '"SECONDARYKEY='                            01983800
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01983900
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       01984000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01984100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01984200
.ZG509A               ANOP  ,                                           01984300
.*-------------------------------------------------------------------   01984400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01984500
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   01984600
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           01984700
                      AIF   (N'&SECONDARYKEY GT 1).ZG509B  MULTI        01984800
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           01984900
.ZG509B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG509C            01985000
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 01985100
&ZMS                  SETC  ' '                                         01985200
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           01985300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01985400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01985500
.ZG509C               ANOP  ,                                           01985600
.*-------------------------------------------------------------------   01985700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01985800
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG509R  NOT I/O    01985900
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG509R       01986000
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      01986100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG509P               01986200
                      AIF   (K'&ZCGPR GT 2).ZG509Q                      01986300
                      AIF   ('&ZCGPR' EQ '0').ZG509Q                    01986400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01986500
                      AIF   (T'&ZCGPR NE 'N').ZG509Q  INVALID REG NAME  01986600
.ZG509P               ANOP  ,                                           01986700
                      AIF   (T'&ZCGPR NE 'N').ZG509R  NON NUMERIC       01986800
                      AIF   ('&ZCGPR' LT '2').ZG509Q                    01986900
                      AIF   ('&ZCGPR' LE '12').ZG509R                   01987000
.ZG509Q               ANOP  ,                                           01987100
&ZMS                  SETC  '"SECONDARYKEY='                            01987200
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       01987300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01987400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01987500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01987600
.ZG509R               ANOP  ,                                           01987700
.*------------------------------------------------------------------    01987800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01987900
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            01988000
.*-------------------------------------------------------------------   01988100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01988200
.ZG513                ANOP  ,                                           01988300
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG513A             01988400
&ZTLC                 SETC 'EQUAL'                                      01988500
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG514        01988600
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     01988700
                      AIF   (N'&SKEYREQTYPE LE 1).ZG513A  CK NUM        01988800
&ZMS                  SETC  '"SKEYREQTYPE='                             01988900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01989000
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01989100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01989200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01989300
.ZG513A               ANOP  ,                                           01989400
.*------------------------------------------------------------------    01989500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01989600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01989700
.ZG513A0              AIF   (K'&SKEYRANGEEND LE 0).ZG513A1  OK          01989800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01989900
.ZG513A1              AIF   (K'&ZCVAL LE 0).ZG513A2  OK                 01990000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01990100
&ZMS                  SETC  '"SKEYREQTYPE'                              01990200
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01990300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01990400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01990500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01990600
.ZG513A2              ANOP  ,                                           01990700
.*-------------------------------------------------------------------   01990800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01990900
.ZG514                ANOP  ,                                           01991000
&ZTLC                 SETC 'LESSOREQUAL'                                01991100
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG515        01991200
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             01991300
                      AIF   (N'&SKEYREQTYPE LE 1).ZG514A  CK NUM        01991400
&ZMS                  SETC  '"SKEYREQTYPE='                             01991500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01991600
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01991700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01991800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01991900
.ZG514A               ANOP  ,                                           01992000
.*------------------------------------------------------------------    01992100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01992200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01992300
.ZG514A0              AIF   (K'&SKEYRANGEEND LE 0).ZG514A1  OK          01992400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01992500
.ZG514A1              AIF   (K'&ZCVAL LE 0).ZG514A2  OK                 01992600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01992700
&ZMS                  SETC  '"SKEYREQTYPE'                              01992800
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01992900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01993000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01993100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01993200
.ZG514A2              ANOP  ,                                           01993300
.*-------------------------------------------------------------------   01993400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01993500
.ZG515                ANOP  ,                                           01993600
&ZTLC                 SETC 'GREATEROREQUAL'                             01993700
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG516        01993800
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             01993900
                      AIF   (N'&SKEYREQTYPE LE 1).ZG515A  CK NUM        01994000
&ZMS                  SETC  '"SKEYREQTYPE='                             01994100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01994200
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01994300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01994400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01994500
.ZG515A               ANOP  ,                                           01994600
.*------------------------------------------------------------------    01994700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01994800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01994900
.ZG515A0              AIF   (K'&SKEYRANGEEND LE 0).ZG515A1  OK          01995000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    01995100
.ZG515A1              AIF   (K'&ZCVAL LE 0).ZG515A2  OK                 01995200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01995300
&ZMS                  SETC  '"SKEYREQTYPE'                              01995400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       01995500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01995600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01995700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01995800
.ZG515A2              ANOP  ,                                           01995900
.*-------------------------------------------------------------------   01996000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01996100
.ZG516                ANOP  ,                                           01996200
&ZTLC                 SETC 'RANGE'                                      01996300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG520        01996400
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     01996500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG516A  CK NUM        01996600
&ZMS                  SETC  '"SKEYREQTYPE='                             01996700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        01996800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        01996900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01997000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01997100
.ZG516A               ANOP  ,                                           01997200
.*----------------------------------------------------------------***   01997300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01997400
                      AIF   (N'&SKEYRANGEEND LE 1).ZG518A  CK NUM       01997500
&ZMS                  SETC  '"SKEYRANGEEND='                            01997600
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       01997700
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       01997800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01997900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01998000
.ZG518A               ANOP  ,                                           01998100
.*-------------------------------------------------------------------   01998200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01998300
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   01998400
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           01998500
                      AIF   (N'&SKEYRANGEEND GT 1).ZG518B  MULTI        01998600
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           01998700
.ZG518B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG518C            01998800
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 01998900
&ZMS                  SETC  ' '                                         01999000
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           01999100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01999200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01999300
.ZG518C               ANOP  ,                                           01999400
.*-------------------------------------------------------------------   01999500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01999600
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG518R  NOT I/O    01999700
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG518R       01999800
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      01999900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG518P               02000000
                      AIF   (K'&ZCGPR GT 2).ZG518Q                      02000100
                      AIF   ('&ZCGPR' EQ '0').ZG518Q                    02000200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02000300
                      AIF   (T'&ZCGPR NE 'N').ZG518Q  INVALID REG NAME  02000400
.ZG518P               ANOP  ,                                           02000500
                      AIF   (T'&ZCGPR NE 'N').ZG518R  NON NUMERIC       02000600
                      AIF   ('&ZCGPR' LT '2').ZG518Q                    02000700
                      AIF   ('&ZCGPR' LE '12').ZG518R                   02000800
.ZG518Q               ANOP  ,                                           02000900
&ZMS                  SETC  '"SKEYRANGEEND='                            02001000
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02001100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02001200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02001300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02001400
.ZG518R               ANOP  ,                                           02001500
.*------------------------------------------------------------------    02001600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02001700
.ZG520                ANOP  ,                                           02001800
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02001900
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG520E  VALID ARG    02002000
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG520D  OMITTED     02002100
&ZASYSLNDX            SETA  0                                           02002200
.ZG520A               ANOP  ,           POSITIONAL MACRO KEY            02002300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02002400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG520C           02002500
&ZTLC                 SETC 'SKEYREQTYPE'                                02002600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG520A  02002700
.ZG520B               ANOP  ,                                           02002800
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02002900
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     02003000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02003100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02003200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02003300
                      AGO   .ZG520E                                     02003400
.ZG520C               ANOP  ,                                           02003500
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02003600
&ZMS                  SETC  '"SKEYREQTYPE='                             02003700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02003800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02003900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02004000
&ZMS                  SETC  '&ZMS "EQUAL",'                             02004100
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02004200
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02004300
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02004400
                      MNOTE 8,' &ZMS '                                  02004500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02004600
                      AGO   .ZG520E                                     02004700
.ZG520D               ANOP  ,                                           02004800
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02004900
.ZG520E               ANOP  ,                                           02005000
.*------------------------------------------------------------------    02005100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02005200
.ZG521                ANOP  ,                                           02005300
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02005400
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG521E  VALID ARG    02005500
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG521D  OMITTED     02005600
&ZASYSLNDX            SETA  0                                           02005700
.ZG521A               ANOP  ,           POSITIONAL MACRO KEY            02005800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02005900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG521C           02006000
&ZTLC                 SETC 'SKEYCOMPARE'                                02006100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG521A  02006200
.ZG521B               ANOP  ,                                           02006300
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02006400
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     02006500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02006600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02006700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02006800
                      AGO   .ZG521E                                     02006900
.ZG521C               ANOP  ,                                           02007000
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02007100
&ZMS                  SETC  '"SKEYCOMPARE='                             02007200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02007300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02007400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02007500
&ZMS                  SETC  '&ZMS "NO"'                                 02007600
&ZMS                  SETC  '&ZMS OR "YES".'                            02007700
                      MNOTE 8,' &ZMS '                                  02007800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02007900
                      AGO   .ZG521E                                     02008000
.ZG521D               ANOP  ,                                           02008100
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02008200
.ZG521E               ANOP  ,                                           02008300
.*-------------------------------------------------------------------   02008400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02008500
.ZG522                ANOP  ,                                           02008600
&ZTLC                 SETC 'ENTRYNAME'                                  02008700
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG547            02008800
&XLOCATOR             SETC  'ENTRYNAME'         SET KEYWORD             02008900
                      AIF   (N'&LOCATOR LE 1).ZG522A  CK NUM            02009000
&ZMS                  SETC  '"LOCATOR='                                 02009100
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            02009200
&ZMS                  SETC  '&ZMS "LOCATOR"'                            02009300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02009400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02009500
.ZG522A               ANOP  ,                                           02009600
.*------------------------------------------------------------------    02009700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02009800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02009900
.ZG522A0              AIF   (K'&KEYSCANTYPE LE 0).ZG522A1  OK           02010000
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02010100
.ZG522A1              AIF   (K'&KEYCOMPARE LE 0).ZG522A2  OK            02010200
&ZCVAL                SETC '&ZCVAL KEYCOMPARE'  INCORRECT KEY USED      02010300
.ZG522A2              AIF   (K'&ENTRYKEY LE 0).ZG522A3  OK              02010400
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02010500
.ZG522A3              AIF   (K'&KEYREQTYPE LE 0).ZG522A4  OK            02010600
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02010700
.ZG522A4              AIF   (K'&KEYRANGEEND LE 0).ZG522A5  OK           02010800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02010900
.ZG522A5              AIF   (K'&SKEYCOMPARE LE 0).ZG522A6  OK           02011000
&ZCVAL                SETC '&ZCVAL SKEYCOMPARE'  INCORRECT KEY USED     02011100
.ZG522A6              AIF   (K'&SECONDARYKEY LE 0).ZG522A7  OK          02011200
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02011300
.ZG522A7              AIF   (K'&SKEYREQTYPE LE 0).ZG522A8  OK           02011400
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02011500
.ZG522A8              AIF   (K'&SKEYRANGEEND LE 0).ZG522A9  OK          02011600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02011700
.ZG522A9              AIF   (K'&ENTRYID LE 0).ZG522A10  OK              02011800
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02011900
.ZG522A10             AIF   (K'&KEYTYPE LE 0).ZG522A11  OK              02012000
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02012100
.ZG522A11             AIF   (K'&ZCVAL LE 0).ZG522A12  OK                02012200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02012300
&ZMS                  SETC  '"LOCATOR'                                  02012400
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           02012500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02012600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02012700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02012800
.ZG522A12             ANOP  ,                                           02012900
.*----------------------------------------------------------------***   02013000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02013100
                      AIF   (N'&ENTRYNAME LE 1).ZG524A  CK NUM          02013200
&ZMS                  SETC  '"ENTRYNAME='                               02013300
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          02013400
&ZMS                  SETC  '&ZMS "ENTRYNAME"'                          02013500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02013600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02013700
.ZG524A               ANOP  ,                                           02013800
.*-------------------------------------------------------------------   02013900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02014000
&ZXENTRYNAME          SETC  'INPUT'     SET IN/OUTPUT                   02014100
&XENTRYNAME           SETC  '&ENTRYNAME(1)'     SET XVARIABLE           02014200
                      AIF   (N'&ENTRYNAME GT 1).ZG524B  MULTI           02014300
&XENTRYNAME           SETC  '&ENTRYNAME'        SET XVARIABLE           02014400
.ZG524B               AIF   (K'&ENTRYNAME(1) GT 0).ZG524C               02014500
&ZXENTRYNAME          SETC  ''          RESET IN/OUTPUT                 02014600
&ZMS                  SETC  ' '                                         02014700
&ZMS                  SETC  '&ZMS "ENTRYNAME" KEY AND ITS'              02014800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02014900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02015000
.ZG524C               ANOP  ,                                           02015100
.*-------------------------------------------------------------------   02015200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02015300
                      AIF   (K'&ZXENTRYNAME LE 0).ZG524R  NOT I/O       02015400
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZG524R          02015500
&ZCGPR                SETC  '&XENTRYNAME'(2,K'&XENTRYNAME-2)            02015600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG524P               02015700
                      AIF   (K'&ZCGPR GT 2).ZG524Q                      02015800
                      AIF   ('&ZCGPR' EQ '0').ZG524Q                    02015900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02016000
                      AIF   (T'&ZCGPR NE 'N').ZG524Q  INVALID REG NAME  02016100
.ZG524P               ANOP  ,                                           02016200
                      AIF   (T'&ZCGPR NE 'N').ZG524R  NON NUMERIC       02016300
                      AIF   ('&ZCGPR' LT '2').ZG524Q                    02016400
                      AIF   ('&ZCGPR' LE '12').ZG524R                   02016500
.ZG524Q               ANOP  ,                                           02016600
&ZMS                  SETC  '"ENTRYNAME='                               02016700
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          02016800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02016900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02017000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02017100
.ZG524R               ANOP  ,                                           02017200
.*------------------------------------------------------------------    02017300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02017400
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02017500
.*-------------------------------------------------------------------   02017600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02017700
.ZG528                ANOP  ,                                           02017800
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG528A             02017900
&ZTLC                 SETC 'NO'                                         02018000
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG529        02018100
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02018200
                      AIF   (N'&LISTCOMPARE LE 1).ZG528A  CK NUM        02018300
&ZMS                  SETC  '"LISTCOMPARE='                             02018400
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02018500
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02018600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02018700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02018800
.ZG528A               ANOP  ,                                           02018900
.*------------------------------------------------------------------    02019000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02019100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02019200
.ZG528A0              AIF   (K'&LISTNUM LE 0).ZG528A1  OK               02019300
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02019400
.ZG528A1              AIF   (K'&AUTHCOMPARE LE 0).ZG528A2  OK           02019500
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02019600
.ZG528A2              AIF   (K'&AUTHCOMP LE 0).ZG528A3  OK              02019700
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02019800
.ZG528A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG528A4  OK          02019900
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02020000
.ZG528A4              AIF   (K'&ZCVAL LE 0).ZG528A5  OK                 02020100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02020200
&ZMS                  SETC  '"LISTCOMPARE'                              02020300
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02020400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02020500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02020600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02020700
.ZG528A5              ANOP  ,                                           02020800
.*-------------------------------------------------------------------   02020900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02021000
.ZG529                ANOP  ,                                           02021100
&ZTLC                 SETC 'YES'                                        02021200
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG546        02021300
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02021400
                      AIF   (N'&LISTCOMPARE LE 1).ZG529A  CK NUM        02021500
&ZMS                  SETC  '"LISTCOMPARE='                             02021600
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02021700
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02021800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02021900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02022000
.ZG529A               ANOP  ,                                           02022100
.*----------------------------------------------------------------***   02022200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02022300
                      AIF   (N'&LISTNUM LE 1).ZG531A  CK NUM            02022400
&ZMS                  SETC  '"LISTNUM='                                 02022500
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02022600
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02022700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02022800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02022900
.ZG531A               ANOP  ,                                           02023000
.*-------------------------------------------------------------------   02023100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02023200
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02023300
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02023400
                      AIF   (N'&LISTNUM GT 1).ZG531B  MULTI             02023500
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02023600
.ZG531B               AIF   (K'&LISTNUM(1) GT 0).ZG531C                 02023700
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02023800
&ZMS                  SETC  ' '                                         02023900
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02024000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02024100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02024200
.ZG531C               ANOP  ,                                           02024300
.*-------------------------------------------------------------------   02024400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02024500
                      AIF   (K'&ZXLISTNUM LE 0).ZG531R  NOT I/O         02024600
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG531R            02024700
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02024800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG531P               02024900
                      AIF   (K'&ZCGPR GT 2).ZG531Q                      02025000
                      AIF   ('&ZCGPR' EQ '0').ZG531Q                    02025100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02025200
                      AIF   (T'&ZCGPR NE 'N').ZG531Q  INVALID REG NAME  02025300
.ZG531P               ANOP  ,                                           02025400
                      AIF   (T'&ZCGPR NE 'N').ZG531R  NON NUMERIC       02025500
                      AIF   ('&ZCGPR' LT '2').ZG531Q                    02025600
                      AIF   ('&ZCGPR' LE '12').ZG531R                   02025700
.ZG531Q               ANOP  ,                                           02025800
&ZMS                  SETC  '"LISTNUM='                                 02025900
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02026000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02026100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02026200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02026300
.ZG531R               ANOP  ,                                           02026400
.*------------------------------------------------------------------    02026500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02026600
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02026700
.*-------------------------------------------------------------------   02026800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02026900
.ZG535                ANOP  ,                                           02027000
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG535A             02027100
&ZTLC                 SETC 'NO'                                         02027200
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG536        02027300
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02027400
                      AIF   (N'&AUTHCOMPARE LE 1).ZG535A  CK NUM        02027500
&ZMS                  SETC  '"AUTHCOMPARE='                             02027600
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02027700
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02027800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02027900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02028000
.ZG535A               ANOP  ,                                           02028100
.*------------------------------------------------------------------    02028200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02028300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02028400
.ZG535A0              AIF   (K'&AUTHCOMP LE 0).ZG535A1  OK              02028500
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02028600
.ZG535A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG535A2  OK          02028700
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02028800
.ZG535A2              AIF   (K'&ZCVAL LE 0).ZG535A3  OK                 02028900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02029000
&ZMS                  SETC  '"AUTHCOMPARE'                              02029100
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02029200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02029300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02029400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02029500
.ZG535A3              ANOP  ,                                           02029600
.*-------------------------------------------------------------------   02029700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02029800
.ZG536                ANOP  ,                                           02029900
&ZTLC                 SETC 'YES'                                        02030000
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG545        02030100
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02030200
                      AIF   (N'&AUTHCOMPARE LE 1).ZG536A  CK NUM        02030300
&ZMS                  SETC  '"AUTHCOMPARE='                             02030400
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02030500
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02030600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02030700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02030800
.ZG536A               ANOP  ,                                           02030900
.*----------------------------------------------------------------***   02031000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02031100
                      AIF   (N'&AUTHCOMP LE 1).ZG538A  CK NUM           02031200
&ZMS                  SETC  '"AUTHCOMP='                                02031300
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02031400
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02031500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02031600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02031700
.ZG538A               ANOP  ,                                           02031800
.*-------------------------------------------------------------------   02031900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02032000
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02032100
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02032200
                      AIF   (N'&AUTHCOMP GT 1).ZG538B  MULTI            02032300
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02032400
.ZG538B               AIF   (K'&AUTHCOMP(1) GT 0).ZG538C                02032500
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02032600
&ZMS                  SETC  ' '                                         02032700
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02032800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02032900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02033000
.ZG538C               ANOP  ,                                           02033100
.*-------------------------------------------------------------------   02033200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02033300
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG538R  NOT I/O        02033400
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG538R           02033500
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02033600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG538P               02033700
                      AIF   (K'&ZCGPR GT 2).ZG538Q                      02033800
                      AIF   ('&ZCGPR' EQ '0').ZG538Q                    02033900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02034000
                      AIF   (T'&ZCGPR NE 'N').ZG538Q  INVALID REG NAME  02034100
.ZG538P               ANOP  ,                                           02034200
                      AIF   (T'&ZCGPR NE 'N').ZG538R  NON NUMERIC       02034300
                      AIF   ('&ZCGPR' LT '2').ZG538Q                    02034400
                      AIF   ('&ZCGPR' LE '12').ZG538R                   02034500
.ZG538Q               ANOP  ,                                           02034600
&ZMS                  SETC  '"AUTHCOMP='                                02034700
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02034800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02034900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02035000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02035100
.ZG538R               ANOP  ,                                           02035200
.*----------------------------------------------------------------***   02035300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02035400
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG540A  CK NUM       02035500
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02035600
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02035700
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02035800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02035900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02036000
.ZG540A               ANOP  ,                                           02036100
.*-------------------------------------------------------------------   02036200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02036300
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02036400
.ZG541A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG542A                  02036500
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02036600
.*-------------------------------------------------------------------   02036700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02036800
.ZG542A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG543A            02036900
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02037000
.*-------------------------------------------------------------------   02037100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02037200
.ZG543A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG543C  KEYWORD     02037300
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG543B            02037400
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02037500
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02037600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02037700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02037800
&ZMS                  SETC  '&ZMS "EQUAL"'                              02037900
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02038000
                      MNOTE 8,' &ZMS '                                  02038100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02038200
.ZG543B               ANOP  ,                                           02038300
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02038400
.ZG543C               ANOP  ,                                           02038500
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02038600
.*-------------------------------------------------------------------   02038700
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02038800
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG543D  KEY           02038900
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG543D  PARM      02039000
&ZMS                  SETC  '"AUTHCOMPTYPE'                             02039100
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02039200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02039300
&ZMS                  SETC  '&ZMS '                                     02039400
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02039500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02039600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02039700
.ZG543D               ANOP  ,                                           02039800
.*------------------------------------------------------------------    02039900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02040000
.ZG545                ANOP  ,                                           02040100
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02040200
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG545E  VALID ARG    02040300
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG545D  OMITTED     02040400
&ZASYSLNDX            SETA  0                                           02040500
.ZG545A               ANOP  ,           POSITIONAL MACRO KEY            02040600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02040700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG545C           02040800
&ZTLC                 SETC 'AUTHCOMPARE'                                02040900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG545A  02041000
.ZG545B               ANOP  ,                                           02041100
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02041200
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     02041300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02041400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02041500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02041600
                      AGO   .ZG545E                                     02041700
.ZG545C               ANOP  ,                                           02041800
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02041900
&ZMS                  SETC  '"AUTHCOMPARE='                             02042000
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02042100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02042200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02042300
&ZMS                  SETC  '&ZMS "NO"'                                 02042400
&ZMS                  SETC  '&ZMS OR "YES".'                            02042500
                      MNOTE 8,' &ZMS '                                  02042600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02042700
                      AGO   .ZG545E                                     02042800
.ZG545D               ANOP  ,                                           02042900
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02043000
.ZG545E               ANOP  ,                                           02043100
.*------------------------------------------------------------------    02043200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02043300
.ZG546                ANOP  ,                                           02043400
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02043500
                      AIF   (K'&XLISTCOMPARE GT 0).ZG546E  VALID ARG    02043600
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG546D  OMITTED     02043700
&ZASYSLNDX            SETA  0                                           02043800
.ZG546A               ANOP  ,           POSITIONAL MACRO KEY            02043900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02044000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG546C           02044100
&ZTLC                 SETC 'LISTCOMPARE'                                02044200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG546A  02044300
.ZG546B               ANOP  ,                                           02044400
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02044500
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'                     02044600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02044700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02044800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02044900
                      AGO   .ZG546E                                     02045000
.ZG546C               ANOP  ,                                           02045100
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02045200
&ZMS                  SETC  '"LISTCOMPARE='                             02045300
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02045400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02045500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02045600
&ZMS                  SETC  '&ZMS "NO"'                                 02045700
&ZMS                  SETC  '&ZMS OR "YES".'                            02045800
                      MNOTE 8,' &ZMS '                                  02045900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02046000
                      AGO   .ZG546E                                     02046100
.ZG546D               ANOP  ,                                           02046200
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02046300
.ZG546E               ANOP  ,                                           02046400
.*-------------------------------------------------------------------   02046500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02046600
.ZG547                ANOP  ,                                           02046700
&ZTLC                 SETC 'UNKEYPOS'                                   02046800
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG605            02046900
&XLOCATOR             SETC  'UNKEYPOS'  SET KEYWORD                     02047000
                      AIF   (N'&LOCATOR LE 1).ZG547A  CK NUM            02047100
&ZMS                  SETC  '"LOCATOR='                                 02047200
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            02047300
&ZMS                  SETC  '&ZMS "LOCATOR"'                            02047400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02047500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02047600
.ZG547A               ANOP  ,                                           02047700
.*------------------------------------------------------------------    02047800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02047900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02048000
.ZG547A0              AIF   (K'&ENTRYID LE 0).ZG547A1  OK               02048100
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02048200
.ZG547A1              AIF   (K'&LISTCOMPARE LE 0).ZG547A2  OK           02048300
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     02048400
.ZG547A2              AIF   (K'&ENTRYNAME LE 0).ZG547A3  OK             02048500
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02048600
.ZG547A3              AIF   (K'&KEYTYPE LE 0).ZG547A4  OK               02048700
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02048800
.ZG547A4              AIF   (K'&ZCVAL LE 0).ZG547A5  OK                 02048900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02049000
&ZMS                  SETC  '"LOCATOR'                                  02049100
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           02049200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02049300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02049400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02049500
.ZG547A5              ANOP  ,                                           02049600
.*----------------------------------------------------------------***   02049700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02049800
                      AIF   (N'&LISTNUM LE 1).ZG549A  CK NUM            02049900
&ZMS                  SETC  '"LISTNUM='                                 02050000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02050100
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02050200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02050300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02050400
.ZG549A               ANOP  ,                                           02050500
.*-------------------------------------------------------------------   02050600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02050700
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02050800
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02050900
                      AIF   (N'&LISTNUM GT 1).ZG549B  MULTI             02051000
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02051100
.ZG549B               AIF   (K'&LISTNUM(1) GT 0).ZG549C                 02051200
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02051300
&ZMS                  SETC  ' '                                         02051400
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02051500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02051600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02051700
.ZG549C               ANOP  ,                                           02051800
.*-------------------------------------------------------------------   02051900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02052000
                      AIF   (K'&ZXLISTNUM LE 0).ZG549R  NOT I/O         02052100
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG549R            02052200
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02052300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG549P               02052400
                      AIF   (K'&ZCGPR GT 2).ZG549Q                      02052500
                      AIF   ('&ZCGPR' EQ '0').ZG549Q                    02052600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02052700
                      AIF   (T'&ZCGPR NE 'N').ZG549Q  INVALID REG NAME  02052800
.ZG549P               ANOP  ,                                           02052900
                      AIF   (T'&ZCGPR NE 'N').ZG549R  NON NUMERIC       02053000
                      AIF   ('&ZCGPR' LT '2').ZG549Q                    02053100
                      AIF   ('&ZCGPR' LE '12').ZG549R                   02053200
.ZG549Q               ANOP  ,                                           02053300
&ZMS                  SETC  '"LISTNUM='                                 02053400
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02053500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02053600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02053700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02053800
.ZG549R               ANOP  ,                                           02053900
.*----------------------------------------------------------------***   02054000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02054100
                      AIF   (N'&KEYSCANTYPE LE 1).ZG552A  CK NUM        02054200
&ZMS                  SETC  '"KEYSCANTYPE='                             02054300
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        02054400
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        02054500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02054600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02054700
.ZG552A               ANOP  ,                                           02054800
.*-------------------------------------------------------------------   02054900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02055000
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            02055100
.ZG553A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG554A                   02055200
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     02055300
.*-------------------------------------------------------------------   02055400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02055500
.ZG554A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG555A               02055600
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             02055700
.*-------------------------------------------------------------------   02055800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02055900
.ZG555A               AIF   (K'&XKEYSCANTYPE GT 0).ZG555C  KEYWORD      02056000
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG555B             02056100
&ZMS                  SETC  '"KEYSCANTYPE='                             02056200
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        02056300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02056400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02056500
&ZMS                  SETC  '&ZMS "ENTRY"'                              02056600
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      02056700
                      MNOTE 8,' &ZMS '                                  02056800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02056900
.ZG555B               ANOP  ,                                           02057000
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             02057100
.ZG555C               ANOP  ,                                           02057200
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02057300
.*------------------------------------------------------------------    02057400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02057500
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02057600
.*-------------------------------------------------------------------   02057700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02057800
.ZG558                ANOP  ,                                           02057900
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG558A             02058000
&ZTLC                 SETC 'NO'                                         02058100
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG559        02058200
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02058300
                      AIF   (N'&AUTHCOMPARE LE 1).ZG558A  CK NUM        02058400
&ZMS                  SETC  '"AUTHCOMPARE='                             02058500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02058600
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02058700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02058800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02058900
.ZG558A               ANOP  ,                                           02059000
.*------------------------------------------------------------------    02059100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02059200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02059300
.ZG558A0              AIF   (K'&AUTHCOMP LE 0).ZG558A1  OK              02059400
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02059500
.ZG558A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG558A2  OK          02059600
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02059700
.ZG558A2              AIF   (K'&ZCVAL LE 0).ZG558A3  OK                 02059800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02059900
&ZMS                  SETC  '"AUTHCOMPARE'                              02060000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02060100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02060200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02060300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02060400
.ZG558A3              ANOP  ,                                           02060500
.*-------------------------------------------------------------------   02060600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02060700
.ZG559                ANOP  ,                                           02060800
&ZTLC                 SETC 'YES'                                        02060900
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG568        02061000
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02061100
                      AIF   (N'&AUTHCOMPARE LE 1).ZG559A  CK NUM        02061200
&ZMS                  SETC  '"AUTHCOMPARE='                             02061300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02061400
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02061500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02061600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02061700
.ZG559A               ANOP  ,                                           02061800
.*----------------------------------------------------------------***   02061900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02062000
                      AIF   (N'&AUTHCOMP LE 1).ZG561A  CK NUM           02062100
&ZMS                  SETC  '"AUTHCOMP='                                02062200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02062300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02062400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02062500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02062600
.ZG561A               ANOP  ,                                           02062700
.*-------------------------------------------------------------------   02062800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02062900
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02063000
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02063100
                      AIF   (N'&AUTHCOMP GT 1).ZG561B  MULTI            02063200
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02063300
.ZG561B               AIF   (K'&AUTHCOMP(1) GT 0).ZG561C                02063400
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02063500
&ZMS                  SETC  ' '                                         02063600
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02063700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02063800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02063900
.ZG561C               ANOP  ,                                           02064000
.*-------------------------------------------------------------------   02064100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02064200
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG561R  NOT I/O        02064300
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG561R           02064400
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02064500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG561P               02064600
                      AIF   (K'&ZCGPR GT 2).ZG561Q                      02064700
                      AIF   ('&ZCGPR' EQ '0').ZG561Q                    02064800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02064900
                      AIF   (T'&ZCGPR NE 'N').ZG561Q  INVALID REG NAME  02065000
.ZG561P               ANOP  ,                                           02065100
                      AIF   (T'&ZCGPR NE 'N').ZG561R  NON NUMERIC       02065200
                      AIF   ('&ZCGPR' LT '2').ZG561Q                    02065300
                      AIF   ('&ZCGPR' LE '12').ZG561R                   02065400
.ZG561Q               ANOP  ,                                           02065500
&ZMS                  SETC  '"AUTHCOMP='                                02065600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02065700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02065800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02065900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02066000
.ZG561R               ANOP  ,                                           02066100
.*----------------------------------------------------------------***   02066200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02066300
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG563A  CK NUM       02066400
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02066500
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02066600
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02066700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02066800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02066900
.ZG563A               ANOP  ,                                           02067000
.*-------------------------------------------------------------------   02067100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02067200
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02067300
.ZG564A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG565A                  02067400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02067500
.*-------------------------------------------------------------------   02067600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02067700
.ZG565A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG566A            02067800
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02067900
.*-------------------------------------------------------------------   02068000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02068100
.ZG566A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG566C  KEYWORD     02068200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG566B            02068300
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02068400
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02068500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02068600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02068700
&ZMS                  SETC  '&ZMS "EQUAL"'                              02068800
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02068900
                      MNOTE 8,' &ZMS '                                  02069000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02069100
.ZG566B               ANOP  ,                                           02069200
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02069300
.ZG566C               ANOP  ,                                           02069400
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02069500
.*-------------------------------------------------------------------   02069600
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02069700
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG566D  KEY           02069800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG566D  PARM      02069900
&ZMS                  SETC  '"AUTHCOMPTYPE'                             02070000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02070100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02070200
&ZMS                  SETC  '&ZMS '                                     02070300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02070400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02070500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02070600
.ZG566D               ANOP  ,                                           02070700
.*------------------------------------------------------------------    02070800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02070900
.ZG568                ANOP  ,                                           02071000
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02071100
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG568E  VALID ARG    02071200
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG568D  OMITTED     02071300
&ZASYSLNDX            SETA  0                                           02071400
.ZG568A               ANOP  ,           POSITIONAL MACRO KEY            02071500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02071600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG568C           02071700
&ZTLC                 SETC 'AUTHCOMPARE'                                02071800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG568A  02071900
.ZG568B               ANOP  ,                                           02072000
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02072100
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     02072200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02072300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02072400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02072500
                      AGO   .ZG568E                                     02072600
.ZG568C               ANOP  ,                                           02072700
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02072800
&ZMS                  SETC  '"AUTHCOMPARE='                             02072900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02073000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02073100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02073200
&ZMS                  SETC  '&ZMS "NO"'                                 02073300
&ZMS                  SETC  '&ZMS OR "YES".'                            02073400
                      MNOTE 8,' &ZMS '                                  02073500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02073600
                      AGO   .ZG568E                                     02073700
.ZG568D               ANOP  ,                                           02073800
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02073900
.ZG568E               ANOP  ,                                           02074000
.*------------------------------------------------------------------    02074100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02074200
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02074300
.*-------------------------------------------------------------------   02074400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02074500
.ZG571                ANOP  ,                                           02074600
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG571A              02074700
&ZTLC                 SETC 'NO'                                         02074800
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG572         02074900
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02075000
                      AIF   (N'&KEYCOMPARE LE 1).ZG571A  CK NUM         02075100
&ZMS                  SETC  '"KEYCOMPARE='                              02075200
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02075300
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02075400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02075500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02075600
.ZG571A               ANOP  ,                                           02075700
.*------------------------------------------------------------------    02075800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02075900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02076000
.ZG571A0              AIF   (K'&ENTRYKEY LE 0).ZG571A1  OK              02076100
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02076200
.ZG571A1              AIF   (K'&KEYREQTYPE LE 0).ZG571A2  OK            02076300
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02076400
.ZG571A2              AIF   (K'&KEYRANGEEND LE 0).ZG571A3  OK           02076500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02076600
.ZG571A3              AIF   (K'&ZCVAL LE 0).ZG571A4  OK                 02076700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02076800
&ZMS                  SETC  '"KEYCOMPARE'                               02076900
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02077000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02077100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02077200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02077300
.ZG571A4              ANOP  ,                                           02077400
.*-------------------------------------------------------------------   02077500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02077600
.ZG572                ANOP  ,                                           02077700
&ZTLC                 SETC 'YES'                                        02077800
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG586         02077900
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02078000
                      AIF   (N'&KEYCOMPARE LE 1).ZG572A  CK NUM         02078100
&ZMS                  SETC  '"KEYCOMPARE='                              02078200
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02078300
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02078400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02078500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02078600
.ZG572A               ANOP  ,                                           02078700
.*----------------------------------------------------------------***   02078800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02078900
                      AIF   (N'&ENTRYKEY LE 1).ZG574A  CK NUM           02079000
&ZMS                  SETC  '"ENTRYKEY='                                02079100
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02079200
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02079300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02079400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02079500
.ZG574A               ANOP  ,                                           02079600
.*-------------------------------------------------------------------   02079700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02079800
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02079900
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02080000
                      AIF   (N'&ENTRYKEY GT 1).ZG574B  MULTI            02080100
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02080200
.ZG574B               AIF   (K'&ENTRYKEY(1) GT 0).ZG574C                02080300
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02080400
&ZMS                  SETC  ' '                                         02080500
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02080600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02080700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02080800
.ZG574C               ANOP  ,                                           02080900
.*-------------------------------------------------------------------   02081000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02081100
                      AIF   (K'&ZXENTRYKEY LE 0).ZG574R  NOT I/O        02081200
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG574R           02081300
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02081400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG574P               02081500
                      AIF   (K'&ZCGPR GT 2).ZG574Q                      02081600
                      AIF   ('&ZCGPR' EQ '0').ZG574Q                    02081700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02081800
                      AIF   (T'&ZCGPR NE 'N').ZG574Q  INVALID REG NAME  02081900
.ZG574P               ANOP  ,                                           02082000
                      AIF   (T'&ZCGPR NE 'N').ZG574R  NON NUMERIC       02082100
                      AIF   ('&ZCGPR' LT '2').ZG574Q                    02082200
                      AIF   ('&ZCGPR' LE '12').ZG574R                   02082300
.ZG574Q               ANOP  ,                                           02082400
&ZMS                  SETC  '"ENTRYKEY='                                02082500
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02082600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02082700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02082800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02082900
.ZG574R               ANOP  ,                                           02083000
.*------------------------------------------------------------------    02083100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02083200
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02083300
.*-------------------------------------------------------------------   02083400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02083500
.ZG578                ANOP  ,                                           02083600
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG578A              02083700
&ZTLC                 SETC 'EQUAL'                                      02083800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG579         02083900
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02084000
                      AIF   (N'&KEYREQTYPE LE 1).ZG578A  CK NUM         02084100
&ZMS                  SETC  '"KEYREQTYPE='                              02084200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02084300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02084400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02084500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02084600
.ZG578A               ANOP  ,                                           02084700
.*------------------------------------------------------------------    02084800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02084900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02085000
.ZG578A0              AIF   (K'&KEYRANGEEND LE 0).ZG578A1  OK           02085100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02085200
.ZG578A1              AIF   (K'&ZCVAL LE 0).ZG578A2  OK                 02085300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02085400
&ZMS                  SETC  '"KEYREQTYPE'                               02085500
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02085600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02085700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02085800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02085900
.ZG578A2              ANOP  ,                                           02086000
.*-------------------------------------------------------------------   02086100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02086200
.ZG579                ANOP  ,                                           02086300
&ZTLC                 SETC 'LESSOREQUAL'                                02086400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG580         02086500
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02086600
                      AIF   (N'&KEYREQTYPE LE 1).ZG579A  CK NUM         02086700
&ZMS                  SETC  '"KEYREQTYPE='                              02086800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02086900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02087000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02087100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02087200
.ZG579A               ANOP  ,                                           02087300
.*------------------------------------------------------------------    02087400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02087500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02087600
.ZG579A0              AIF   (K'&KEYRANGEEND LE 0).ZG579A1  OK           02087700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02087800
.ZG579A1              AIF   (K'&ZCVAL LE 0).ZG579A2  OK                 02087900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02088000
&ZMS                  SETC  '"KEYREQTYPE'                               02088100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02088200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02088300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02088400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02088500
.ZG579A2              ANOP  ,                                           02088600
.*-------------------------------------------------------------------   02088700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02088800
.ZG580                ANOP  ,                                           02088900
&ZTLC                 SETC 'GREATEROREQUAL'                             02089000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG581         02089100
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02089200
                      AIF   (N'&KEYREQTYPE LE 1).ZG580A  CK NUM         02089300
&ZMS                  SETC  '"KEYREQTYPE='                              02089400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02089500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02089600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02089700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02089800
.ZG580A               ANOP  ,                                           02089900
.*------------------------------------------------------------------    02090000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02090100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02090200
.ZG580A0              AIF   (K'&KEYRANGEEND LE 0).ZG580A1  OK           02090300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02090400
.ZG580A1              AIF   (K'&ZCVAL LE 0).ZG580A2  OK                 02090500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02090600
&ZMS                  SETC  '"KEYREQTYPE'                               02090700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02090800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02090900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02091000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02091100
.ZG580A2              ANOP  ,                                           02091200
.*-------------------------------------------------------------------   02091300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02091400
.ZG581                ANOP  ,                                           02091500
&ZTLC                 SETC 'RANGE'                                      02091600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG585         02091700
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02091800
                      AIF   (N'&KEYREQTYPE LE 1).ZG581A  CK NUM         02091900
&ZMS                  SETC  '"KEYREQTYPE='                              02092000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02092100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02092200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02092300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02092400
.ZG581A               ANOP  ,                                           02092500
.*----------------------------------------------------------------***   02092600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02092700
                      AIF   (N'&KEYRANGEEND LE 1).ZG583A  CK NUM        02092800
&ZMS                  SETC  '"KEYRANGEEND='                             02092900
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02093000
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02093100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02093200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02093300
.ZG583A               ANOP  ,                                           02093400
.*-------------------------------------------------------------------   02093500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02093600
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02093700
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02093800
                      AIF   (N'&KEYRANGEEND GT 1).ZG583B  MULTI         02093900
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02094000
.ZG583B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG583C             02094100
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02094200
&ZMS                  SETC  ' '                                         02094300
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02094400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02094500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02094600
.ZG583C               ANOP  ,                                           02094700
.*-------------------------------------------------------------------   02094800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02094900
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG583R  NOT I/O     02095000
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG583R        02095100
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02095200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG583P               02095300
                      AIF   (K'&ZCGPR GT 2).ZG583Q                      02095400
                      AIF   ('&ZCGPR' EQ '0').ZG583Q                    02095500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02095600
                      AIF   (T'&ZCGPR NE 'N').ZG583Q  INVALID REG NAME  02095700
.ZG583P               ANOP  ,                                           02095800
                      AIF   (T'&ZCGPR NE 'N').ZG583R  NON NUMERIC       02095900
                      AIF   ('&ZCGPR' LT '2').ZG583Q                    02096000
                      AIF   ('&ZCGPR' LE '12').ZG583R                   02096100
.ZG583Q               ANOP  ,                                           02096200
&ZMS                  SETC  '"KEYRANGEEND='                             02096300
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02096400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02096500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02096600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02096700
.ZG583R               ANOP  ,                                           02096800
.*------------------------------------------------------------------    02096900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02097000
.ZG585                ANOP  ,                                           02097100
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02097200
                      AIF   (K'&XKEYREQTYPE GT 0).ZG585E  VALID ARG     02097300
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG585D  OMITTED      02097400
&ZASYSLNDX            SETA  0                                           02097500
.ZG585A               ANOP  ,           POSITIONAL MACRO KEY            02097600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02097700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG585C           02097800
&ZTLC                 SETC 'KEYREQTYPE'                                 02097900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG585A  02098000
.ZG585B               ANOP  ,                                           02098100
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02098200
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      02098300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02098400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02098500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02098600
                      AGO   .ZG585E                                     02098700
.ZG585C               ANOP  ,                                           02098800
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02098900
&ZMS                  SETC  '"KEYREQTYPE='                              02099000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02099100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02099200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02099300
&ZMS                  SETC  '&ZMS "EQUAL",'                             02099400
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02099500
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02099600
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02099700
                      MNOTE 8,' &ZMS '                                  02099800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02099900
                      AGO   .ZG585E                                     02100000
.ZG585D               ANOP  ,                                           02100100
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02100200
.ZG585E               ANOP  ,                                           02100300
.*------------------------------------------------------------------    02100400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02100500
.ZG586                ANOP  ,                                           02100600
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02100700
                      AIF   (K'&XKEYCOMPARE GT 0).ZG586E  VALID ARG     02100800
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG586D  OMITTED      02100900
&ZASYSLNDX            SETA  0                                           02101000
.ZG586A               ANOP  ,           POSITIONAL MACRO KEY            02101100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02101200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG586C           02101300
&ZTLC                 SETC 'KEYCOMPARE'                                 02101400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG586A  02101500
.ZG586B               ANOP  ,                                           02101600
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02101700
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      02101800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02101900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02102000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02102100
                      AGO   .ZG586E                                     02102200
.ZG586C               ANOP  ,                                           02102300
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02102400
&ZMS                  SETC  '"KEYCOMPARE='                              02102500
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02102600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02102700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02102800
&ZMS                  SETC  '&ZMS "NO"'                                 02102900
&ZMS                  SETC  '&ZMS OR "YES".'                            02103000
                      MNOTE 8,' &ZMS '                                  02103100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02103200
                      AGO   .ZG586E                                     02103300
.ZG586D               ANOP  ,                                           02103400
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02103500
.ZG586E               ANOP  ,                                           02103600
.*------------------------------------------------------------------    02103700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02103800
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02103900
.*-------------------------------------------------------------------   02104000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02104100
.ZG589                ANOP  ,                                           02104200
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG589A             02104300
&ZTLC                 SETC 'NO'                                         02104400
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG590        02104500
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02104600
                      AIF   (N'&SKEYCOMPARE LE 1).ZG589A  CK NUM        02104700
&ZMS                  SETC  '"SKEYCOMPARE='                             02104800
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02104900
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02105000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02105100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02105200
.ZG589A               ANOP  ,                                           02105300
.*------------------------------------------------------------------    02105400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02105500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02105600
.ZG589A0              AIF   (K'&SECONDARYKEY LE 0).ZG589A1  OK          02105700
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02105800
.ZG589A1              AIF   (K'&SKEYREQTYPE LE 0).ZG589A2  OK           02105900
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02106000
.ZG589A2              AIF   (K'&SKEYRANGEEND LE 0).ZG589A3  OK          02106100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02106200
.ZG589A3              AIF   (K'&ZCVAL LE 0).ZG589A4  OK                 02106300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02106400
&ZMS                  SETC  '"SKEYCOMPARE'                              02106500
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02106600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02106700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02106800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02106900
.ZG589A4              ANOP  ,                                           02107000
.*-------------------------------------------------------------------   02107100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02107200
.ZG590                ANOP  ,                                           02107300
&ZTLC                 SETC 'YES'                                        02107400
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG604        02107500
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02107600
                      AIF   (N'&SKEYCOMPARE LE 1).ZG590A  CK NUM        02107700
&ZMS                  SETC  '"SKEYCOMPARE='                             02107800
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02107900
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02108000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02108100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02108200
.ZG590A               ANOP  ,                                           02108300
.*----------------------------------------------------------------***   02108400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02108500
                      AIF   (N'&SECONDARYKEY LE 1).ZG592A  CK NUM       02108600
&ZMS                  SETC  '"SECONDARYKEY='                            02108700
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02108800
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02108900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02109000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02109100
.ZG592A               ANOP  ,                                           02109200
.*-------------------------------------------------------------------   02109300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02109400
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02109500
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02109600
                      AIF   (N'&SECONDARYKEY GT 1).ZG592B  MULTI        02109700
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02109800
.ZG592B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG592C            02109900
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02110000
&ZMS                  SETC  ' '                                         02110100
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02110200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02110300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02110400
.ZG592C               ANOP  ,                                           02110500
.*-------------------------------------------------------------------   02110600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02110700
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG592R  NOT I/O    02110800
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG592R       02110900
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02111000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG592P               02111100
                      AIF   (K'&ZCGPR GT 2).ZG592Q                      02111200
                      AIF   ('&ZCGPR' EQ '0').ZG592Q                    02111300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02111400
                      AIF   (T'&ZCGPR NE 'N').ZG592Q  INVALID REG NAME  02111500
.ZG592P               ANOP  ,                                           02111600
                      AIF   (T'&ZCGPR NE 'N').ZG592R  NON NUMERIC       02111700
                      AIF   ('&ZCGPR' LT '2').ZG592Q                    02111800
                      AIF   ('&ZCGPR' LE '12').ZG592R                   02111900
.ZG592Q               ANOP  ,                                           02112000
&ZMS                  SETC  '"SECONDARYKEY='                            02112100
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02112200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02112300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02112400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02112500
.ZG592R               ANOP  ,                                           02112600
.*------------------------------------------------------------------    02112700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02112800
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02112900
.*-------------------------------------------------------------------   02113000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02113100
.ZG596                ANOP  ,                                           02113200
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG596A             02113300
&ZTLC                 SETC 'EQUAL'                                      02113400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG597        02113500
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02113600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG596A  CK NUM        02113700
&ZMS                  SETC  '"SKEYREQTYPE='                             02113800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02113900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02114000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02114100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02114200
.ZG596A               ANOP  ,                                           02114300
.*------------------------------------------------------------------    02114400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02114500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02114600
.ZG596A0              AIF   (K'&SKEYRANGEEND LE 0).ZG596A1  OK          02114700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02114800
.ZG596A1              AIF   (K'&ZCVAL LE 0).ZG596A2  OK                 02114900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02115000
&ZMS                  SETC  '"SKEYREQTYPE'                              02115100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02115200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02115300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02115400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02115500
.ZG596A2              ANOP  ,                                           02115600
.*-------------------------------------------------------------------   02115700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02115800
.ZG597                ANOP  ,                                           02115900
&ZTLC                 SETC 'LESSOREQUAL'                                02116000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG598        02116100
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02116200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG597A  CK NUM        02116300
&ZMS                  SETC  '"SKEYREQTYPE='                             02116400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02116500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02116600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02116700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02116800
.ZG597A               ANOP  ,                                           02116900
.*------------------------------------------------------------------    02117000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02117100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02117200
.ZG597A0              AIF   (K'&SKEYRANGEEND LE 0).ZG597A1  OK          02117300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02117400
.ZG597A1              AIF   (K'&ZCVAL LE 0).ZG597A2  OK                 02117500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02117600
&ZMS                  SETC  '"SKEYREQTYPE'                              02117700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02117800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02117900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02118000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02118100
.ZG597A2              ANOP  ,                                           02118200
.*-------------------------------------------------------------------   02118300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02118400
.ZG598                ANOP  ,                                           02118500
&ZTLC                 SETC 'GREATEROREQUAL'                             02118600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG599        02118700
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02118800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG598A  CK NUM        02118900
&ZMS                  SETC  '"SKEYREQTYPE='                             02119000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02119100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02119200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02119300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02119400
.ZG598A               ANOP  ,                                           02119500
.*------------------------------------------------------------------    02119600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02119700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02119800
.ZG598A0              AIF   (K'&SKEYRANGEEND LE 0).ZG598A1  OK          02119900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02120000
.ZG598A1              AIF   (K'&ZCVAL LE 0).ZG598A2  OK                 02120100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02120200
&ZMS                  SETC  '"SKEYREQTYPE'                              02120300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02120400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02120500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02120600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02120700
.ZG598A2              ANOP  ,                                           02120800
.*-------------------------------------------------------------------   02120900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02121000
.ZG599                ANOP  ,                                           02121100
&ZTLC                 SETC 'RANGE'                                      02121200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG603        02121300
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02121400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG599A  CK NUM        02121500
&ZMS                  SETC  '"SKEYREQTYPE='                             02121600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02121700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02121800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02121900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02122000
.ZG599A               ANOP  ,                                           02122100
.*----------------------------------------------------------------***   02122200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02122300
                      AIF   (N'&SKEYRANGEEND LE 1).ZG601A  CK NUM       02122400
&ZMS                  SETC  '"SKEYRANGEEND='                            02122500
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02122600
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02122700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02122800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02122900
.ZG601A               ANOP  ,                                           02123000
.*-------------------------------------------------------------------   02123100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02123200
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02123300
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02123400
                      AIF   (N'&SKEYRANGEEND GT 1).ZG601B  MULTI        02123500
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02123600
.ZG601B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG601C            02123700
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02123800
&ZMS                  SETC  ' '                                         02123900
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02124000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02124100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02124200
.ZG601C               ANOP  ,                                           02124300
.*-------------------------------------------------------------------   02124400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02124500
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG601R  NOT I/O    02124600
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG601R       02124700
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02124800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG601P               02124900
                      AIF   (K'&ZCGPR GT 2).ZG601Q                      02125000
                      AIF   ('&ZCGPR' EQ '0').ZG601Q                    02125100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02125200
                      AIF   (T'&ZCGPR NE 'N').ZG601Q  INVALID REG NAME  02125300
.ZG601P               ANOP  ,                                           02125400
                      AIF   (T'&ZCGPR NE 'N').ZG601R  NON NUMERIC       02125500
                      AIF   ('&ZCGPR' LT '2').ZG601Q                    02125600
                      AIF   ('&ZCGPR' LE '12').ZG601R                   02125700
.ZG601Q               ANOP  ,                                           02125800
&ZMS                  SETC  '"SKEYRANGEEND='                            02125900
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02126000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02126100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02126200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02126300
.ZG601R               ANOP  ,                                           02126400
.*------------------------------------------------------------------    02126500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02126600
.ZG603                ANOP  ,                                           02126700
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02126800
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG603E  VALID ARG    02126900
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG603D  OMITTED     02127000
&ZASYSLNDX            SETA  0                                           02127100
.ZG603A               ANOP  ,           POSITIONAL MACRO KEY            02127200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02127300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG603C           02127400
&ZTLC                 SETC 'SKEYREQTYPE'                                02127500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG603A  02127600
.ZG603B               ANOP  ,                                           02127700
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02127800
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     02127900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02128000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02128100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02128200
                      AGO   .ZG603E                                     02128300
.ZG603C               ANOP  ,                                           02128400
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02128500
&ZMS                  SETC  '"SKEYREQTYPE='                             02128600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02128700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02128800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02128900
&ZMS                  SETC  '&ZMS "EQUAL",'                             02129000
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02129100
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02129200
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02129300
                      MNOTE 8,' &ZMS '                                  02129400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02129500
                      AGO   .ZG603E                                     02129600
.ZG603D               ANOP  ,                                           02129700
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02129800
.ZG603E               ANOP  ,                                           02129900
.*------------------------------------------------------------------    02130000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02130100
.ZG604                ANOP  ,                                           02130200
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02130300
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG604E  VALID ARG    02130400
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG604D  OMITTED     02130500
&ZASYSLNDX            SETA  0                                           02130600
.ZG604A               ANOP  ,           POSITIONAL MACRO KEY            02130700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02130800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG604C           02130900
&ZTLC                 SETC 'SKEYCOMPARE'                                02131000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG604A  02131100
.ZG604B               ANOP  ,                                           02131200
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02131300
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     02131400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02131500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02131600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02131700
                      AGO   .ZG604E                                     02131800
.ZG604C               ANOP  ,                                           02131900
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02132000
&ZMS                  SETC  '"SKEYCOMPARE='                             02132100
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02132200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02132300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02132400
&ZMS                  SETC  '&ZMS "NO"'                                 02132500
&ZMS                  SETC  '&ZMS OR "YES".'                            02132600
                      MNOTE 8,' &ZMS '                                  02132700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02132800
                      AGO   .ZG604E                                     02132900
.ZG604D               ANOP  ,                                           02133000
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02133100
.ZG604E               ANOP  ,                                           02133200
.*-------------------------------------------------------------------   02133300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02133400
.ZG605                ANOP  ,                                           02133500
&ZTLC                 SETC 'KEYPOS'                                     02133600
                      AIF   ('&LOCATOR(1)' NE '&ZTLC').ZG704            02133700
&XLOCATOR             SETC  'KEYPOS'    SET KEYWORD                     02133800
                      AIF   (N'&LOCATOR LE 1).ZG605A  CK NUM            02133900
&ZMS                  SETC  '"LOCATOR='                                 02134000
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            02134100
&ZMS                  SETC  '&ZMS "LOCATOR"'                            02134200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02134300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02134400
.ZG605A               ANOP  ,                                           02134500
.*------------------------------------------------------------------    02134600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02134700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02134800
.ZG605A0              AIF   (K'&ENTRYID LE 0).ZG605A1  OK               02134900
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02135000
.ZG605A1              AIF   (K'&LISTCOMPARE LE 0).ZG605A2  OK           02135100
&ZCVAL                SETC '&ZCVAL LISTCOMPARE'  INCORRECT KEY USED     02135200
.ZG605A2              AIF   (K'&ENTRYNAME LE 0).ZG605A3  OK             02135300
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02135400
.ZG605A3              AIF   (K'&ZCVAL LE 0).ZG605A4  OK                 02135500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02135600
&ZMS                  SETC  '"LOCATOR'                                  02135700
&ZMS                  SETC  '&ZMS.=&LOCATOR"'                           02135800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02135900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02136000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02136100
.ZG605A4              ANOP  ,                                           02136200
.*----------------------------------------------------------------***   02136300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02136400
                      AIF   (N'&LISTNUM LE 1).ZG607A  CK NUM            02136500
&ZMS                  SETC  '"LISTNUM='                                 02136600
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02136700
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02136800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02136900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02137000
.ZG607A               ANOP  ,                                           02137100
.*-------------------------------------------------------------------   02137200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02137300
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02137400
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02137500
                      AIF   (N'&LISTNUM GT 1).ZG607B  MULTI             02137600
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02137700
.ZG607B               AIF   (K'&LISTNUM(1) GT 0).ZG607C                 02137800
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02137900
&ZMS                  SETC  ' '                                         02138000
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02138100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02138200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02138300
.ZG607C               ANOP  ,                                           02138400
.*-------------------------------------------------------------------   02138500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02138600
                      AIF   (K'&ZXLISTNUM LE 0).ZG607R  NOT I/O         02138700
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG607R            02138800
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02138900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG607P               02139000
                      AIF   (K'&ZCGPR GT 2).ZG607Q                      02139100
                      AIF   ('&ZCGPR' EQ '0').ZG607Q                    02139200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02139300
                      AIF   (T'&ZCGPR NE 'N').ZG607Q  INVALID REG NAME  02139400
.ZG607P               ANOP  ,                                           02139500
                      AIF   (T'&ZCGPR NE 'N').ZG607R  NON NUMERIC       02139600
                      AIF   ('&ZCGPR' LT '2').ZG607Q                    02139700
                      AIF   ('&ZCGPR' LE '12').ZG607R                   02139800
.ZG607Q               ANOP  ,                                           02139900
&ZMS                  SETC  '"LISTNUM='                                 02140000
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02140100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02140200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02140300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02140400
.ZG607R               ANOP  ,                                           02140500
.*----------------------------------------------------------------***   02140600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02140700
                      AIF   (N'&KEYSCANTYPE LE 1).ZG610A  CK NUM        02140800
&ZMS                  SETC  '"KEYSCANTYPE='                             02140900
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        02141000
&ZMS                  SETC  '&ZMS "KEYSCANTYPE"'                        02141100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02141200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02141300
.ZG610A               ANOP  ,                                           02141400
.*-------------------------------------------------------------------   02141500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02141600
&XKEYSCANTYPE         SETC  ''          INITIALIZE XVARIABLE            02141700
.ZG611A   AIF   ('&KEYSCANTYPE(1)' NE 'ENTRY').ZG612A                   02141800
&XKEYSCANTYPE         SETC  'ENTRY'     SET KEYWORD                     02141900
.*-------------------------------------------------------------------   02142000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02142100
.ZG612A   AIF   ('&KEYSCANTYPE(1)' NE 'SECONDARY').ZG613A               02142200
&XKEYSCANTYPE         SETC  'SECONDARY'         SET KEYWORD             02142300
.*-------------------------------------------------------------------   02142400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02142500
.ZG613A               AIF   (K'&XKEYSCANTYPE GT 0).ZG613C  KEYWORD      02142600
                      AIF   (K'&KEYSCANTYPE(1) LE 0).ZG613B             02142700
&ZMS                  SETC  '"KEYSCANTYPE='                             02142800
&ZMS                  SETC  '&ZMS.&KEYSCANTYPE"'                        02142900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02143000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02143100
&ZMS                  SETC  '&ZMS "ENTRY"'                              02143200
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      02143300
                      MNOTE 8,' &ZMS '                                  02143400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02143500
.ZG613B               ANOP  ,                                           02143600
&XKEYSCANTYPE         SETC  'ENTRY'     SET DEFAULT KEYWORD             02143700
.ZG613C               ANOP  ,                                           02143800
&ZXKEYSCANTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02143900
.*------------------------------------------------------------------    02144000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02144100
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02144200
.*-------------------------------------------------------------------   02144300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02144400
.ZG616                ANOP  ,                                           02144500
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG616A             02144600
&ZTLC                 SETC 'NO'                                         02144700
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG617        02144800
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02144900
                      AIF   (N'&AUTHCOMPARE LE 1).ZG616A  CK NUM        02145000
&ZMS                  SETC  '"AUTHCOMPARE='                             02145100
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02145200
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02145300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02145400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02145500
.ZG616A               ANOP  ,                                           02145600
.*------------------------------------------------------------------    02145700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02145800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02145900
.ZG616A0              AIF   (K'&AUTHCOMP LE 0).ZG616A1  OK              02146000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02146100
.ZG616A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG616A2  OK          02146200
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02146300
.ZG616A2              AIF   (K'&ZCVAL LE 0).ZG616A3  OK                 02146400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02146500
&ZMS                  SETC  '"AUTHCOMPARE'                              02146600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02146700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02146800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02146900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02147000
.ZG616A3              ANOP  ,                                           02147100
.*-------------------------------------------------------------------   02147200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02147300
.ZG617                ANOP  ,                                           02147400
&ZTLC                 SETC 'YES'                                        02147500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG626        02147600
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02147700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG617A  CK NUM        02147800
&ZMS                  SETC  '"AUTHCOMPARE='                             02147900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02148000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02148100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02148200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02148300
.ZG617A               ANOP  ,                                           02148400
.*----------------------------------------------------------------***   02148500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02148600
                      AIF   (N'&AUTHCOMP LE 1).ZG619A  CK NUM           02148700
&ZMS                  SETC  '"AUTHCOMP='                                02148800
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02148900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02149000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02149100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02149200
.ZG619A               ANOP  ,                                           02149300
.*-------------------------------------------------------------------   02149400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02149500
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02149600
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02149700
                      AIF   (N'&AUTHCOMP GT 1).ZG619B  MULTI            02149800
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02149900
.ZG619B               AIF   (K'&AUTHCOMP(1) GT 0).ZG619C                02150000
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02150100
&ZMS                  SETC  ' '                                         02150200
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02150300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02150400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02150500
.ZG619C               ANOP  ,                                           02150600
.*-------------------------------------------------------------------   02150700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02150800
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG619R  NOT I/O        02150900
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG619R           02151000
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02151100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG619P               02151200
                      AIF   (K'&ZCGPR GT 2).ZG619Q                      02151300
                      AIF   ('&ZCGPR' EQ '0').ZG619Q                    02151400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02151500
                      AIF   (T'&ZCGPR NE 'N').ZG619Q  INVALID REG NAME  02151600
.ZG619P               ANOP  ,                                           02151700
                      AIF   (T'&ZCGPR NE 'N').ZG619R  NON NUMERIC       02151800
                      AIF   ('&ZCGPR' LT '2').ZG619Q                    02151900
                      AIF   ('&ZCGPR' LE '12').ZG619R                   02152000
.ZG619Q               ANOP  ,                                           02152100
&ZMS                  SETC  '"AUTHCOMP='                                02152200
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02152300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02152400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02152500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02152600
.ZG619R               ANOP  ,                                           02152700
.*----------------------------------------------------------------***   02152800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02152900
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG621A  CK NUM       02153000
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02153100
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02153200
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02153300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02153400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02153500
.ZG621A               ANOP  ,                                           02153600
.*-------------------------------------------------------------------   02153700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02153800
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02153900
.ZG622A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG623A                  02154000
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02154100
.*-------------------------------------------------------------------   02154200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02154300
.ZG623A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG624A            02154400
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02154500
.*-------------------------------------------------------------------   02154600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02154700
.ZG624A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG624C  KEYWORD     02154800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG624B            02154900
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02155000
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02155100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02155200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02155300
&ZMS                  SETC  '&ZMS "EQUAL"'                              02155400
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02155500
                      MNOTE 8,' &ZMS '                                  02155600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02155700
.ZG624B               ANOP  ,                                           02155800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02155900
.ZG624C               ANOP  ,                                           02156000
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02156100
.*-------------------------------------------------------------------   02156200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02156300
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG624D  KEY           02156400
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG624D  PARM      02156500
&ZMS                  SETC  '"AUTHCOMPTYPE'                             02156600
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02156700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02156800
&ZMS                  SETC  '&ZMS '                                     02156900
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02157000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02157100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02157200
.ZG624D               ANOP  ,                                           02157300
.*------------------------------------------------------------------    02157400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02157500
.ZG626                ANOP  ,                                           02157600
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02157700
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG626E  VALID ARG    02157800
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG626D  OMITTED     02157900
&ZASYSLNDX            SETA  0                                           02158000
.ZG626A               ANOP  ,           POSITIONAL MACRO KEY            02158100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02158200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG626C           02158300
&ZTLC                 SETC 'AUTHCOMPARE'                                02158400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG626A  02158500
.ZG626B               ANOP  ,                                           02158600
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02158700
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     02158800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02158900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02159000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02159100
                      AGO   .ZG626E                                     02159200
.ZG626C               ANOP  ,                                           02159300
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02159400
&ZMS                  SETC  '"AUTHCOMPARE='                             02159500
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02159600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02159700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02159800
&ZMS                  SETC  '&ZMS "NO"'                                 02159900
&ZMS                  SETC  '&ZMS OR "YES".'                            02160000
                      MNOTE 8,' &ZMS '                                  02160100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02160200
                      AGO   .ZG626E                                     02160300
.ZG626D               ANOP  ,                                           02160400
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02160500
.ZG626E               ANOP  ,                                           02160600
.*------------------------------------------------------------------    02160700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02160800
&XKEYTYPE             SETC  ''          INITIALIZE XVARIABLE            02160900
.*-------------------------------------------------------------------   02161000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02161100
.ZG629                ANOP  ,                                           02161200
                      AIF   (K'&KEYTYPE(1) LE 0).ZG629A                 02161300
&ZTLC                 SETC 'ENTRY'                                      02161400
                      AIF   ('&KEYTYPE(1)' NE '&ZTLC').ZG666            02161500
&XKEYTYPE             SETC  'ENTRY'     SET KEYWORD                     02161600
                      AIF   (N'&KEYTYPE LE 1).ZG629A  CK NUM            02161700
&ZMS                  SETC  '"KEYTYPE='                                 02161800
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            02161900
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            02162000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02162100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02162200
.ZG629A               ANOP  ,                                           02162300
.*----------------------------------------------------------------***   02162400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02162500
                      AIF   (N'&ENTRYKEY LE 1).ZG631A  CK NUM           02162600
&ZMS                  SETC  '"ENTRYKEY='                                02162700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02162800
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02162900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02163000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02163100
.ZG631A               ANOP  ,                                           02163200
.*-------------------------------------------------------------------   02163300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02163400
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02163500
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02163600
                      AIF   (N'&ENTRYKEY GT 1).ZG631B  MULTI            02163700
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02163800
.ZG631B               AIF   (K'&ENTRYKEY(1) GT 0).ZG631C                02163900
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02164000
&ZMS                  SETC  ' '                                         02164100
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02164200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02164300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02164400
.ZG631C               ANOP  ,                                           02164500
.*-------------------------------------------------------------------   02164600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02164700
                      AIF   (K'&ZXENTRYKEY LE 0).ZG631R  NOT I/O        02164800
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG631R           02164900
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02165000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG631P               02165100
                      AIF   (K'&ZCGPR GT 2).ZG631Q                      02165200
                      AIF   ('&ZCGPR' EQ '0').ZG631Q                    02165300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02165400
                      AIF   (T'&ZCGPR NE 'N').ZG631Q  INVALID REG NAME  02165500
.ZG631P               ANOP  ,                                           02165600
                      AIF   (T'&ZCGPR NE 'N').ZG631R  NON NUMERIC       02165700
                      AIF   ('&ZCGPR' LT '2').ZG631Q                    02165800
                      AIF   ('&ZCGPR' LE '12').ZG631R                   02165900
.ZG631Q               ANOP  ,                                           02166000
&ZMS                  SETC  '"ENTRYKEY='                                02166100
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02166200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02166300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02166400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02166500
.ZG631R               ANOP  ,                                           02166600
.*------------------------------------------------------------------    02166700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02166800
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02166900
.*-------------------------------------------------------------------   02167000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02167100
.ZG634                ANOP  ,                                           02167200
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG634A              02167300
&ZTLC                 SETC 'EQUAL'                                      02167400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG635         02167500
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02167600
                      AIF   (N'&KEYREQTYPE LE 1).ZG634A  CK NUM         02167700
&ZMS                  SETC  '"KEYREQTYPE='                              02167800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02167900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02168000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02168100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02168200
.ZG634A               ANOP  ,                                           02168300
.*------------------------------------------------------------------    02168400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02168500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02168600
.ZG634A0              AIF   (K'&KEYRANGEEND LE 0).ZG634A1  OK           02168700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02168800
.ZG634A1              AIF   (K'&ZCVAL LE 0).ZG634A2  OK                 02168900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02169000
&ZMS                  SETC  '"KEYREQTYPE'                               02169100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02169200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02169300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02169400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02169500
.ZG634A2              ANOP  ,                                           02169600
.*-------------------------------------------------------------------   02169700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02169800
.ZG635                ANOP  ,                                           02169900
&ZTLC                 SETC 'LESSOREQUAL'                                02170000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG636         02170100
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02170200
                      AIF   (N'&KEYREQTYPE LE 1).ZG635A  CK NUM         02170300
&ZMS                  SETC  '"KEYREQTYPE='                              02170400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02170500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02170600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02170700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02170800
.ZG635A               ANOP  ,                                           02170900
.*------------------------------------------------------------------    02171000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02171100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02171200
.ZG635A0              AIF   (K'&KEYRANGEEND LE 0).ZG635A1  OK           02171300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02171400
.ZG635A1              AIF   (K'&ZCVAL LE 0).ZG635A2  OK                 02171500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02171600
&ZMS                  SETC  '"KEYREQTYPE'                               02171700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02171800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02171900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02172000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02172100
.ZG635A2              ANOP  ,                                           02172200
.*-------------------------------------------------------------------   02172300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02172400
.ZG636                ANOP  ,                                           02172500
&ZTLC                 SETC 'GREATEROREQUAL'                             02172600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG637         02172700
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02172800
                      AIF   (N'&KEYREQTYPE LE 1).ZG636A  CK NUM         02172900
&ZMS                  SETC  '"KEYREQTYPE='                              02173000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02173100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02173200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02173300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02173400
.ZG636A               ANOP  ,                                           02173500
.*------------------------------------------------------------------    02173600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02173700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02173800
.ZG636A0              AIF   (K'&KEYRANGEEND LE 0).ZG636A1  OK           02173900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02174000
.ZG636A1              AIF   (K'&ZCVAL LE 0).ZG636A2  OK                 02174100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02174200
&ZMS                  SETC  '"KEYREQTYPE'                               02174300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02174400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02174500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02174600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02174700
.ZG636A2              ANOP  ,                                           02174800
.*-------------------------------------------------------------------   02174900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02175000
.ZG637                ANOP  ,                                           02175100
&ZTLC                 SETC 'RANGE'                                      02175200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG641         02175300
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02175400
                      AIF   (N'&KEYREQTYPE LE 1).ZG637A  CK NUM         02175500
&ZMS                  SETC  '"KEYREQTYPE='                              02175600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02175700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02175800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02175900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02176000
.ZG637A               ANOP  ,                                           02176100
.*----------------------------------------------------------------***   02176200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02176300
                      AIF   (N'&KEYRANGEEND LE 1).ZG639A  CK NUM        02176400
&ZMS                  SETC  '"KEYRANGEEND='                             02176500
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02176600
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02176700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02176800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02176900
.ZG639A               ANOP  ,                                           02177000
.*-------------------------------------------------------------------   02177100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02177200
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02177300
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02177400
                      AIF   (N'&KEYRANGEEND GT 1).ZG639B  MULTI         02177500
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02177600
.ZG639B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG639C             02177700
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02177800
&ZMS                  SETC  ' '                                         02177900
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02178000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02178100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02178200
.ZG639C               ANOP  ,                                           02178300
.*-------------------------------------------------------------------   02178400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02178500
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG639R  NOT I/O     02178600
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG639R        02178700
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02178800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG639P               02178900
                      AIF   (K'&ZCGPR GT 2).ZG639Q                      02179000
                      AIF   ('&ZCGPR' EQ '0').ZG639Q                    02179100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02179200
                      AIF   (T'&ZCGPR NE 'N').ZG639Q  INVALID REG NAME  02179300
.ZG639P               ANOP  ,                                           02179400
                      AIF   (T'&ZCGPR NE 'N').ZG639R  NON NUMERIC       02179500
                      AIF   ('&ZCGPR' LT '2').ZG639Q                    02179600
                      AIF   ('&ZCGPR' LE '12').ZG639R                   02179700
.ZG639Q               ANOP  ,                                           02179800
&ZMS                  SETC  '"KEYRANGEEND='                             02179900
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02180000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02180100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02180200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02180300
.ZG639R               ANOP  ,                                           02180400
.*------------------------------------------------------------------    02180500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02180600
.ZG641                ANOP  ,                                           02180700
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02180800
                      AIF   (K'&XKEYREQTYPE GT 0).ZG641E  VALID ARG     02180900
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG641D  OMITTED      02181000
&ZASYSLNDX            SETA  0                                           02181100
.ZG641A               ANOP  ,           POSITIONAL MACRO KEY            02181200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02181300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG641C           02181400
&ZTLC                 SETC 'KEYREQTYPE'                                 02181500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG641A  02181600
.ZG641B               ANOP  ,                                           02181700
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02181800
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      02181900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02182000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02182100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02182200
                      AGO   .ZG641E                                     02182300
.ZG641C               ANOP  ,                                           02182400
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02182500
&ZMS                  SETC  '"KEYREQTYPE='                              02182600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02182700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02182800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02182900
&ZMS                  SETC  '&ZMS "EQUAL",'                             02183000
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02183100
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02183200
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02183300
                      MNOTE 8,' &ZMS '                                  02183400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02183500
                      AGO   .ZG641E                                     02183600
.ZG641D               ANOP  ,                                           02183700
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02183800
.ZG641E               ANOP  ,                                           02183900
.*------------------------------------------------------------------    02184000
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02184100
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG641F  KEY           02184200
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG641F  PARM        02184300
&ZMS                  SETC  '"KEYREQTYPE'                               02184400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02184500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02184600
&ZMS                  SETC  '&ZMS '                                     02184700
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02184800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02184900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02185000
.ZG641F               ANOP  ,                                           02185100
.*------------------------------------------------------------------    02185200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02185300
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02185400
.*-------------------------------------------------------------------   02185500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02185600
.ZG644                ANOP  ,                                           02185700
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG644A              02185800
&ZTLC                 SETC 'NO'                                         02185900
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG645         02186000
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02186100
                      AIF   (N'&KEYCOMPARE LE 1).ZG644A  CK NUM         02186200
&ZMS                  SETC  '"KEYCOMPARE='                              02186300
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02186400
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02186500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02186600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02186700
.ZG644A               ANOP  ,                                           02186800
.*-------------------------------------------------------------------   02186900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02187000
.ZG645                ANOP  ,                                           02187100
&ZTLC                 SETC 'YES'                                        02187200
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG646         02187300
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02187400
                      AIF   (N'&KEYCOMPARE LE 1).ZG645A  CK NUM         02187500
&ZMS                  SETC  '"KEYCOMPARE='                              02187600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02187700
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02187800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02187900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02188000
.ZG645A               ANOP  ,                                           02188100
.*------------------------------------------------------------------    02188200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02188300
.ZG646                ANOP  ,                                           02188400
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02188500
                      AIF   (K'&XKEYCOMPARE GT 0).ZG646E  VALID ARG     02188600
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG646D  OMITTED      02188700
&ZASYSLNDX            SETA  0                                           02188800
.ZG646A               ANOP  ,           POSITIONAL MACRO KEY            02188900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02189000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG646C           02189100
&ZTLC                 SETC 'KEYCOMPARE'                                 02189200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG646A  02189300
.ZG646B               ANOP  ,                                           02189400
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02189500
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      02189600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02189700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02189800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02189900
                      AGO   .ZG646E                                     02190000
.ZG646C               ANOP  ,                                           02190100
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02190200
&ZMS                  SETC  '"KEYCOMPARE='                              02190300
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02190400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02190500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02190600
&ZMS                  SETC  '&ZMS "NO"'                                 02190700
&ZMS                  SETC  '&ZMS OR "YES".'                            02190800
                      MNOTE 8,' &ZMS '                                  02190900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02191000
                      AGO   .ZG646E                                     02191100
.ZG646D               ANOP  ,                                           02191200
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02191300
.ZG646E               ANOP  ,                                           02191400
.*------------------------------------------------------------------    02191500
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02191600
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG646F  KEY           02191700
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG646F  PARM        02191800
&ZMS                  SETC  '"KEYCOMPARE'                               02191900
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02192000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02192100
&ZMS                  SETC  '&ZMS '                                     02192200
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02192300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02192400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02192500
.ZG646F               ANOP  ,                                           02192600
.*------------------------------------------------------------------    02192700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02192800
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02192900
.*-------------------------------------------------------------------   02193000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02193100
.ZG649                ANOP  ,                                           02193200
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG649A             02193300
&ZTLC                 SETC 'NO'                                         02193400
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG650        02193500
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02193600
                      AIF   (N'&SKEYCOMPARE LE 1).ZG649A  CK NUM        02193700
&ZMS                  SETC  '"SKEYCOMPARE='                             02193800
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02193900
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02194000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02194100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02194200
.ZG649A               ANOP  ,                                           02194300
.*------------------------------------------------------------------    02194400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02194500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02194600
.ZG649A0              AIF   (K'&SECONDARYKEY LE 0).ZG649A1  OK          02194700
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02194800
.ZG649A1              AIF   (K'&SKEYREQTYPE LE 0).ZG649A2  OK           02194900
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02195000
.ZG649A2              AIF   (K'&SKEYRANGEEND LE 0).ZG649A3  OK          02195100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02195200
.ZG649A3              AIF   (K'&ZCVAL LE 0).ZG649A4  OK                 02195300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02195400
&ZMS                  SETC  '"SKEYCOMPARE'                              02195500
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02195600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02195700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02195800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02195900
.ZG649A4              ANOP  ,                                           02196000
.*-------------------------------------------------------------------   02196100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02196200
.ZG650                ANOP  ,                                           02196300
&ZTLC                 SETC 'YES'                                        02196400
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG664        02196500
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02196600
                      AIF   (N'&SKEYCOMPARE LE 1).ZG650A  CK NUM        02196700
&ZMS                  SETC  '"SKEYCOMPARE='                             02196800
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02196900
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02197000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02197100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02197200
.ZG650A               ANOP  ,                                           02197300
.*----------------------------------------------------------------***   02197400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02197500
                      AIF   (N'&SECONDARYKEY LE 1).ZG652A  CK NUM       02197600
&ZMS                  SETC  '"SECONDARYKEY='                            02197700
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02197800
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02197900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02198000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02198100
.ZG652A               ANOP  ,                                           02198200
.*-------------------------------------------------------------------   02198300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02198400
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02198500
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02198600
                      AIF   (N'&SECONDARYKEY GT 1).ZG652B  MULTI        02198700
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02198800
.ZG652B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG652C            02198900
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02199000
&ZMS                  SETC  ' '                                         02199100
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02199200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02199300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02199400
.ZG652C               ANOP  ,                                           02199500
.*-------------------------------------------------------------------   02199600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02199700
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG652R  NOT I/O    02199800
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG652R       02199900
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02200000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG652P               02200100
                      AIF   (K'&ZCGPR GT 2).ZG652Q                      02200200
                      AIF   ('&ZCGPR' EQ '0').ZG652Q                    02200300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02200400
                      AIF   (T'&ZCGPR NE 'N').ZG652Q  INVALID REG NAME  02200500
.ZG652P               ANOP  ,                                           02200600
                      AIF   (T'&ZCGPR NE 'N').ZG652R  NON NUMERIC       02200700
                      AIF   ('&ZCGPR' LT '2').ZG652Q                    02200800
                      AIF   ('&ZCGPR' LE '12').ZG652R                   02200900
.ZG652Q               ANOP  ,                                           02201000
&ZMS                  SETC  '"SECONDARYKEY='                            02201100
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02201200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02201300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02201400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02201500
.ZG652R               ANOP  ,                                           02201600
.*------------------------------------------------------------------    02201700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02201800
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02201900
.*-------------------------------------------------------------------   02202000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02202100
.ZG655                ANOP  ,                                           02202200
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG655A             02202300
&ZTLC                 SETC 'EQUAL'                                      02202400
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG656        02202500
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02202600
                      AIF   (N'&SKEYREQTYPE LE 1).ZG655A  CK NUM        02202700
&ZMS                  SETC  '"SKEYREQTYPE='                             02202800
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02202900
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02203000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02203100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02203200
.ZG655A               ANOP  ,                                           02203300
.*------------------------------------------------------------------    02203400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02203500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02203600
.ZG655A0              AIF   (K'&SKEYRANGEEND LE 0).ZG655A1  OK          02203700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02203800
.ZG655A1              AIF   (K'&ZCVAL LE 0).ZG655A2  OK                 02203900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02204000
&ZMS                  SETC  '"SKEYREQTYPE'                              02204100
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02204200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02204300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02204400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02204500
.ZG655A2              ANOP  ,                                           02204600
.*-------------------------------------------------------------------   02204700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02204800
.ZG656                ANOP  ,                                           02204900
&ZTLC                 SETC 'LESSOREQUAL'                                02205000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG657        02205100
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02205200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG656A  CK NUM        02205300
&ZMS                  SETC  '"SKEYREQTYPE='                             02205400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02205500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02205600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02205700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02205800
.ZG656A               ANOP  ,                                           02205900
.*------------------------------------------------------------------    02206000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02206100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02206200
.ZG656A0              AIF   (K'&SKEYRANGEEND LE 0).ZG656A1  OK          02206300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02206400
.ZG656A1              AIF   (K'&ZCVAL LE 0).ZG656A2  OK                 02206500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02206600
&ZMS                  SETC  '"SKEYREQTYPE'                              02206700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02206800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02206900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02207000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02207100
.ZG656A2              ANOP  ,                                           02207200
.*-------------------------------------------------------------------   02207300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02207400
.ZG657                ANOP  ,                                           02207500
&ZTLC                 SETC 'GREATEROREQUAL'                             02207600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG658        02207700
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02207800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG657A  CK NUM        02207900
&ZMS                  SETC  '"SKEYREQTYPE='                             02208000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02208100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02208200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02208300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02208400
.ZG657A               ANOP  ,                                           02208500
.*------------------------------------------------------------------    02208600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02208700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02208800
.ZG657A0              AIF   (K'&SKEYRANGEEND LE 0).ZG657A1  OK          02208900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02209000
.ZG657A1              AIF   (K'&ZCVAL LE 0).ZG657A2  OK                 02209100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02209200
&ZMS                  SETC  '"SKEYREQTYPE'                              02209300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02209400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02209500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02209600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02209700
.ZG657A2              ANOP  ,                                           02209800
.*-------------------------------------------------------------------   02209900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02210000
.ZG658                ANOP  ,                                           02210100
&ZTLC                 SETC 'RANGE'                                      02210200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG662        02210300
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02210400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG658A  CK NUM        02210500
&ZMS                  SETC  '"SKEYREQTYPE='                             02210600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02210700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02210800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02210900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02211000
.ZG658A               ANOP  ,                                           02211100
.*----------------------------------------------------------------***   02211200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02211300
                      AIF   (N'&SKEYRANGEEND LE 1).ZG660A  CK NUM       02211400
&ZMS                  SETC  '"SKEYRANGEEND='                            02211500
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02211600
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02211700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02211800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02211900
.ZG660A               ANOP  ,                                           02212000
.*-------------------------------------------------------------------   02212100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02212200
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02212300
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02212400
                      AIF   (N'&SKEYRANGEEND GT 1).ZG660B  MULTI        02212500
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02212600
.ZG660B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG660C            02212700
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02212800
&ZMS                  SETC  ' '                                         02212900
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02213000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02213100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02213200
.ZG660C               ANOP  ,                                           02213300
.*-------------------------------------------------------------------   02213400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02213500
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG660R  NOT I/O    02213600
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG660R       02213700
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02213800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG660P               02213900
                      AIF   (K'&ZCGPR GT 2).ZG660Q                      02214000
                      AIF   ('&ZCGPR' EQ '0').ZG660Q                    02214100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02214200
                      AIF   (T'&ZCGPR NE 'N').ZG660Q  INVALID REG NAME  02214300
.ZG660P               ANOP  ,                                           02214400
                      AIF   (T'&ZCGPR NE 'N').ZG660R  NON NUMERIC       02214500
                      AIF   ('&ZCGPR' LT '2').ZG660Q                    02214600
                      AIF   ('&ZCGPR' LE '12').ZG660R                   02214700
.ZG660Q               ANOP  ,                                           02214800
&ZMS                  SETC  '"SKEYRANGEEND='                            02214900
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02215000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02215100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02215200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02215300
.ZG660R               ANOP  ,                                           02215400
.*------------------------------------------------------------------    02215500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02215600
.ZG662                ANOP  ,                                           02215700
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02215800
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG662E  VALID ARG    02215900
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG662D  OMITTED     02216000
&ZASYSLNDX            SETA  0                                           02216100
.ZG662A               ANOP  ,           POSITIONAL MACRO KEY            02216200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02216300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG662C           02216400
&ZTLC                 SETC 'SKEYREQTYPE'                                02216500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG662A  02216600
.ZG662B               ANOP  ,                                           02216700
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02216800
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     02216900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02217000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02217100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02217200
                      AGO   .ZG662E                                     02217300
.ZG662C               ANOP  ,                                           02217400
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02217500
&ZMS                  SETC  '"SKEYREQTYPE='                             02217600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02217700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02217800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02217900
&ZMS                  SETC  '&ZMS "EQUAL",'                             02218000
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02218100
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02218200
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02218300
                      MNOTE 8,' &ZMS '                                  02218400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02218500
                      AGO   .ZG662E                                     02218600
.ZG662D               ANOP  ,                                           02218700
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02218800
.ZG662E               ANOP  ,                                           02218900
.*------------------------------------------------------------------    02219000
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02219100
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG662F  KEY       02219200
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG662F  PARM       02219300
&ZMS                  SETC  '"SKEYREQTYPE'                              02219400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02219500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02219600
&ZMS                  SETC  '&ZMS '                                     02219700
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02219800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02219900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02220000
.ZG662F               ANOP  ,                                           02220100
.*------------------------------------------------------------------    02220200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02220300
.ZG664                ANOP  ,                                           02220400
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02220500
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG664E  VALID ARG    02220600
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG664D  OMITTED     02220700
&ZASYSLNDX            SETA  0                                           02220800
.ZG664A               ANOP  ,           POSITIONAL MACRO KEY            02220900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02221000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG664C           02221100
&ZTLC                 SETC 'SKEYCOMPARE'                                02221200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG664A  02221300
.ZG664B               ANOP  ,                                           02221400
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02221500
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     02221600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02221700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02221800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02221900
                      AGO   .ZG664E                                     02222000
.ZG664C               ANOP  ,                                           02222100
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02222200
&ZMS                  SETC  '"SKEYCOMPARE='                             02222300
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02222400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02222500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02222600
&ZMS                  SETC  '&ZMS "NO"'                                 02222700
&ZMS                  SETC  '&ZMS OR "YES".'                            02222800
                      MNOTE 8,' &ZMS '                                  02222900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02223000
                      AGO   .ZG664E                                     02223100
.ZG664D               ANOP  ,                                           02223200
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02223300
.ZG664E               ANOP  ,                                           02223400
.*------------------------------------------------------------------    02223500
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02223600
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG664F  KEY           02223700
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG664F  PARM       02223800
&ZMS                  SETC  '"SKEYCOMPARE'                              02223900
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02224000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02224100
&ZMS                  SETC  '&ZMS '                                     02224200
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02224300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02224400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02224500
.ZG664F               ANOP  ,                                           02224600
.*-------------------------------------------------------------------   02224700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02224800
.ZG666                ANOP  ,                                           02224900
&ZTLC                 SETC 'SECONDARY'                                  02225000
                      AIF   ('&KEYTYPE(1)' NE '&ZTLC').ZG703            02225100
&XKEYTYPE             SETC  'SECONDARY'         SET KEYWORD             02225200
                      AIF   (N'&KEYTYPE LE 1).ZG666A  CK NUM            02225300
&ZMS                  SETC  '"KEYTYPE='                                 02225400
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            02225500
&ZMS                  SETC  '&ZMS "KEYTYPE"'                            02225600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02225700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02225800
.ZG666A               ANOP  ,                                           02225900
.*----------------------------------------------------------------***   02226000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02226100
                      AIF   (N'&SECONDARYKEY LE 1).ZG668A  CK NUM       02226200
&ZMS                  SETC  '"SECONDARYKEY='                            02226300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02226400
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02226500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02226600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02226700
.ZG668A               ANOP  ,                                           02226800
.*-------------------------------------------------------------------   02226900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02227000
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02227100
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02227200
                      AIF   (N'&SECONDARYKEY GT 1).ZG668B  MULTI        02227300
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02227400
.ZG668B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG668C            02227500
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02227600
&ZMS                  SETC  ' '                                         02227700
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02227800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02227900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02228000
.ZG668C               ANOP  ,                                           02228100
.*-------------------------------------------------------------------   02228200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02228300
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG668R  NOT I/O    02228400
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG668R       02228500
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02228600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG668P               02228700
                      AIF   (K'&ZCGPR GT 2).ZG668Q                      02228800
                      AIF   ('&ZCGPR' EQ '0').ZG668Q                    02228900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02229000
                      AIF   (T'&ZCGPR NE 'N').ZG668Q  INVALID REG NAME  02229100
.ZG668P               ANOP  ,                                           02229200
                      AIF   (T'&ZCGPR NE 'N').ZG668R  NON NUMERIC       02229300
                      AIF   ('&ZCGPR' LT '2').ZG668Q                    02229400
                      AIF   ('&ZCGPR' LE '12').ZG668R                   02229500
.ZG668Q               ANOP  ,                                           02229600
&ZMS                  SETC  '"SECONDARYKEY='                            02229700
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02229800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02229900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02230000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02230100
.ZG668R               ANOP  ,                                           02230200
.*------------------------------------------------------------------    02230300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02230400
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02230500
.*-------------------------------------------------------------------   02230600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02230700
.ZG671                ANOP  ,                                           02230800
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG671A             02230900
&ZTLC                 SETC 'EQUAL'                                      02231000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG672        02231100
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02231200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG671A  CK NUM        02231300
&ZMS                  SETC  '"SKEYREQTYPE='                             02231400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02231500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02231600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02231700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02231800
.ZG671A               ANOP  ,                                           02231900
.*------------------------------------------------------------------    02232000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02232100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02232200
.ZG671A0              AIF   (K'&SKEYRANGEEND LE 0).ZG671A1  OK          02232300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02232400
.ZG671A1              AIF   (K'&ZCVAL LE 0).ZG671A2  OK                 02232500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02232600
&ZMS                  SETC  '"SKEYREQTYPE'                              02232700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02232800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02232900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02233000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02233100
.ZG671A2              ANOP  ,                                           02233200
.*-------------------------------------------------------------------   02233300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02233400
.ZG672                ANOP  ,                                           02233500
&ZTLC                 SETC 'LESSOREQUAL'                                02233600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG673        02233700
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02233800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG672A  CK NUM        02233900
&ZMS                  SETC  '"SKEYREQTYPE='                             02234000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02234100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02234200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02234300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02234400
.ZG672A               ANOP  ,                                           02234500
.*------------------------------------------------------------------    02234600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02234700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02234800
.ZG672A0              AIF   (K'&SKEYRANGEEND LE 0).ZG672A1  OK          02234900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02235000
.ZG672A1              AIF   (K'&ZCVAL LE 0).ZG672A2  OK                 02235100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02235200
&ZMS                  SETC  '"SKEYREQTYPE'                              02235300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02235400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02235500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02235600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02235700
.ZG672A2              ANOP  ,                                           02235800
.*-------------------------------------------------------------------   02235900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02236000
.ZG673                ANOP  ,                                           02236100
&ZTLC                 SETC 'GREATEROREQUAL'                             02236200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG674        02236300
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02236400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG673A  CK NUM        02236500
&ZMS                  SETC  '"SKEYREQTYPE='                             02236600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02236700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02236800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02236900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02237000
.ZG673A               ANOP  ,                                           02237100
.*------------------------------------------------------------------    02237200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02237300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02237400
.ZG673A0              AIF   (K'&SKEYRANGEEND LE 0).ZG673A1  OK          02237500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02237600
.ZG673A1              AIF   (K'&ZCVAL LE 0).ZG673A2  OK                 02237700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02237800
&ZMS                  SETC  '"SKEYREQTYPE'                              02237900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02238000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02238100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02238200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02238300
.ZG673A2              ANOP  ,                                           02238400
.*-------------------------------------------------------------------   02238500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02238600
.ZG674                ANOP  ,                                           02238700
&ZTLC                 SETC 'RANGE'                                      02238800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG678        02238900
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02239000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG674A  CK NUM        02239100
&ZMS                  SETC  '"SKEYREQTYPE='                             02239200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02239300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02239400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02239500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02239600
.ZG674A               ANOP  ,                                           02239700
.*----------------------------------------------------------------***   02239800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02239900
                      AIF   (N'&SKEYRANGEEND LE 1).ZG676A  CK NUM       02240000
&ZMS                  SETC  '"SKEYRANGEEND='                            02240100
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02240200
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02240300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02240400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02240500
.ZG676A               ANOP  ,                                           02240600
.*-------------------------------------------------------------------   02240700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02240800
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02240900
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02241000
                      AIF   (N'&SKEYRANGEEND GT 1).ZG676B  MULTI        02241100
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02241200
.ZG676B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG676C            02241300
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02241400
&ZMS                  SETC  ' '                                         02241500
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02241600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02241700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02241800
.ZG676C               ANOP  ,                                           02241900
.*-------------------------------------------------------------------   02242000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02242100
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG676R  NOT I/O    02242200
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG676R       02242300
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02242400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG676P               02242500
                      AIF   (K'&ZCGPR GT 2).ZG676Q                      02242600
                      AIF   ('&ZCGPR' EQ '0').ZG676Q                    02242700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02242800
                      AIF   (T'&ZCGPR NE 'N').ZG676Q  INVALID REG NAME  02242900
.ZG676P               ANOP  ,                                           02243000
                      AIF   (T'&ZCGPR NE 'N').ZG676R  NON NUMERIC       02243100
                      AIF   ('&ZCGPR' LT '2').ZG676Q                    02243200
                      AIF   ('&ZCGPR' LE '12').ZG676R                   02243300
.ZG676Q               ANOP  ,                                           02243400
&ZMS                  SETC  '"SKEYRANGEEND='                            02243500
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02243600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02243700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02243800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02243900
.ZG676R               ANOP  ,                                           02244000
.*------------------------------------------------------------------    02244100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02244200
.ZG678                ANOP  ,                                           02244300
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02244400
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG678E  VALID ARG    02244500
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG678D  OMITTED     02244600
&ZASYSLNDX            SETA  0                                           02244700
.ZG678A               ANOP  ,           POSITIONAL MACRO KEY            02244800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02244900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG678C           02245000
&ZTLC                 SETC 'SKEYREQTYPE'                                02245100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG678A  02245200
.ZG678B               ANOP  ,                                           02245300
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02245400
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     02245500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02245600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02245700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02245800
                      AGO   .ZG678E                                     02245900
.ZG678C               ANOP  ,                                           02246000
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02246100
&ZMS                  SETC  '"SKEYREQTYPE='                             02246200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02246300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02246400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02246500
&ZMS                  SETC  '&ZMS "EQUAL",'                             02246600
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02246700
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02246800
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02246900
                      MNOTE 8,' &ZMS '                                  02247000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02247100
                      AGO   .ZG678E                                     02247200
.ZG678D               ANOP  ,                                           02247300
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02247400
.ZG678E               ANOP  ,                                           02247500
.*------------------------------------------------------------------    02247600
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02247700
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG678F  KEY       02247800
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG678F  PARM       02247900
&ZMS                  SETC  '"SKEYREQTYPE'                              02248000
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02248100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02248200
&ZMS                  SETC  '&ZMS '                                     02248300
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02248400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02248500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02248600
.ZG678F               ANOP  ,                                           02248700
.*------------------------------------------------------------------    02248800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02248900
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02249000
.*-------------------------------------------------------------------   02249100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02249200
.ZG681                ANOP  ,                                           02249300
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG681A             02249400
&ZTLC                 SETC 'NO'                                         02249500
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG682        02249600
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02249700
                      AIF   (N'&SKEYCOMPARE LE 1).ZG681A  CK NUM        02249800
&ZMS                  SETC  '"SKEYCOMPARE='                             02249900
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02250000
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02250100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02250200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02250300
.ZG681A               ANOP  ,                                           02250400
.*-------------------------------------------------------------------   02250500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02250600
.ZG682                ANOP  ,                                           02250700
&ZTLC                 SETC 'YES'                                        02250800
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG683        02250900
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02251000
                      AIF   (N'&SKEYCOMPARE LE 1).ZG682A  CK NUM        02251100
&ZMS                  SETC  '"SKEYCOMPARE='                             02251200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02251300
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02251400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02251500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02251600
.ZG682A               ANOP  ,                                           02251700
.*------------------------------------------------------------------    02251800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02251900
.ZG683                ANOP  ,                                           02252000
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02252100
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG683E  VALID ARG    02252200
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG683D  OMITTED     02252300
&ZASYSLNDX            SETA  0                                           02252400
.ZG683A               ANOP  ,           POSITIONAL MACRO KEY            02252500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02252600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG683C           02252700
&ZTLC                 SETC 'SKEYCOMPARE'                                02252800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG683A  02252900
.ZG683B               ANOP  ,                                           02253000
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02253100
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     02253200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02253300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02253400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02253500
                      AGO   .ZG683E                                     02253600
.ZG683C               ANOP  ,                                           02253700
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02253800
&ZMS                  SETC  '"SKEYCOMPARE='                             02253900
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02254000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02254100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02254200
&ZMS                  SETC  '&ZMS "NO"'                                 02254300
&ZMS                  SETC  '&ZMS OR "YES".'                            02254400
                      MNOTE 8,' &ZMS '                                  02254500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02254600
                      AGO   .ZG683E                                     02254700
.ZG683D               ANOP  ,                                           02254800
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02254900
.ZG683E               ANOP  ,                                           02255000
.*------------------------------------------------------------------    02255100
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02255200
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG683F  KEY       02255300
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG683F  PARM       02255400
&ZMS                  SETC  '"SKEYCOMPARE'                              02255500
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02255600
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02255700
&ZMS                  SETC  '&ZMS '                                     02255800
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02255900
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02256000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02256100
.ZG683F               ANOP  ,                                           02256200
.*------------------------------------------------------------------    02256300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02256400
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02256500
.*-------------------------------------------------------------------   02256600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02256700
.ZG686                ANOP  ,                                           02256800
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG686A              02256900
&ZTLC                 SETC 'NO'                                         02257000
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG687         02257100
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02257200
                      AIF   (N'&KEYCOMPARE LE 1).ZG686A  CK NUM         02257300
&ZMS                  SETC  '"KEYCOMPARE='                              02257400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02257500
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02257600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02257700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02257800
.ZG686A               ANOP  ,                                           02257900
.*------------------------------------------------------------------    02258000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02258100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02258200
.ZG686A0              AIF   (K'&ENTRYKEY LE 0).ZG686A1  OK              02258300
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02258400
.ZG686A1              AIF   (K'&KEYREQTYPE LE 0).ZG686A2  OK            02258500
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02258600
.ZG686A2              AIF   (K'&KEYRANGEEND LE 0).ZG686A3  OK           02258700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02258800
.ZG686A3              AIF   (K'&ZCVAL LE 0).ZG686A4  OK                 02258900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02259000
&ZMS                  SETC  '"KEYCOMPARE'                               02259100
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02259200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02259300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02259400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02259500
.ZG686A4              ANOP  ,                                           02259600
.*-------------------------------------------------------------------   02259700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02259800
.ZG687                ANOP  ,                                           02259900
&ZTLC                 SETC 'YES'                                        02260000
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG701         02260100
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02260200
                      AIF   (N'&KEYCOMPARE LE 1).ZG687A  CK NUM         02260300
&ZMS                  SETC  '"KEYCOMPARE='                              02260400
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02260500
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02260600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02260700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02260800
.ZG687A               ANOP  ,                                           02260900
.*----------------------------------------------------------------***   02261000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02261100
                      AIF   (N'&ENTRYKEY LE 1).ZG689A  CK NUM           02261200
&ZMS                  SETC  '"ENTRYKEY='                                02261300
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02261400
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02261500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02261600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02261700
.ZG689A               ANOP  ,                                           02261800
.*-------------------------------------------------------------------   02261900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02262000
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02262100
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02262200
                      AIF   (N'&ENTRYKEY GT 1).ZG689B  MULTI            02262300
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02262400
.ZG689B               AIF   (K'&ENTRYKEY(1) GT 0).ZG689C                02262500
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02262600
&ZMS                  SETC  ' '                                         02262700
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02262800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02262900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02263000
.ZG689C               ANOP  ,                                           02263100
.*-------------------------------------------------------------------   02263200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02263300
                      AIF   (K'&ZXENTRYKEY LE 0).ZG689R  NOT I/O        02263400
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG689R           02263500
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02263600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG689P               02263700
                      AIF   (K'&ZCGPR GT 2).ZG689Q                      02263800
                      AIF   ('&ZCGPR' EQ '0').ZG689Q                    02263900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02264000
                      AIF   (T'&ZCGPR NE 'N').ZG689Q  INVALID REG NAME  02264100
.ZG689P               ANOP  ,                                           02264200
                      AIF   (T'&ZCGPR NE 'N').ZG689R  NON NUMERIC       02264300
                      AIF   ('&ZCGPR' LT '2').ZG689Q                    02264400
                      AIF   ('&ZCGPR' LE '12').ZG689R                   02264500
.ZG689Q               ANOP  ,                                           02264600
&ZMS                  SETC  '"ENTRYKEY='                                02264700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02264800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02264900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02265000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02265100
.ZG689R               ANOP  ,                                           02265200
.*------------------------------------------------------------------    02265300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02265400
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02265500
.*-------------------------------------------------------------------   02265600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02265700
.ZG692                ANOP  ,                                           02265800
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG692A              02265900
&ZTLC                 SETC 'EQUAL'                                      02266000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG693         02266100
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02266200
                      AIF   (N'&KEYREQTYPE LE 1).ZG692A  CK NUM         02266300
&ZMS                  SETC  '"KEYREQTYPE='                              02266400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02266500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02266600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02266700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02266800
.ZG692A               ANOP  ,                                           02266900
.*------------------------------------------------------------------    02267000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02267100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02267200
.ZG692A0              AIF   (K'&KEYRANGEEND LE 0).ZG692A1  OK           02267300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02267400
.ZG692A1              AIF   (K'&ZCVAL LE 0).ZG692A2  OK                 02267500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02267600
&ZMS                  SETC  '"KEYREQTYPE'                               02267700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02267800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02267900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02268000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02268100
.ZG692A2              ANOP  ,                                           02268200
.*-------------------------------------------------------------------   02268300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02268400
.ZG693                ANOP  ,                                           02268500
&ZTLC                 SETC 'LESSOREQUAL'                                02268600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG694         02268700
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02268800
                      AIF   (N'&KEYREQTYPE LE 1).ZG693A  CK NUM         02268900
&ZMS                  SETC  '"KEYREQTYPE='                              02269000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02269100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02269200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02269300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02269400
.ZG693A               ANOP  ,                                           02269500
.*------------------------------------------------------------------    02269600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02269700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02269800
.ZG693A0              AIF   (K'&KEYRANGEEND LE 0).ZG693A1  OK           02269900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02270000
.ZG693A1              AIF   (K'&ZCVAL LE 0).ZG693A2  OK                 02270100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02270200
&ZMS                  SETC  '"KEYREQTYPE'                               02270300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02270400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02270500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02270600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02270700
.ZG693A2              ANOP  ,                                           02270800
.*-------------------------------------------------------------------   02270900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02271000
.ZG694                ANOP  ,                                           02271100
&ZTLC                 SETC 'GREATEROREQUAL'                             02271200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG695         02271300
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02271400
                      AIF   (N'&KEYREQTYPE LE 1).ZG694A  CK NUM         02271500
&ZMS                  SETC  '"KEYREQTYPE='                              02271600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02271700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02271800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02271900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02272000
.ZG694A               ANOP  ,                                           02272100
.*------------------------------------------------------------------    02272200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02272300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02272400
.ZG694A0              AIF   (K'&KEYRANGEEND LE 0).ZG694A1  OK           02272500
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02272600
.ZG694A1              AIF   (K'&ZCVAL LE 0).ZG694A2  OK                 02272700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02272800
&ZMS                  SETC  '"KEYREQTYPE'                               02272900
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02273000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02273100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02273200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02273300
.ZG694A2              ANOP  ,                                           02273400
.*-------------------------------------------------------------------   02273500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02273600
.ZG695                ANOP  ,                                           02273700
&ZTLC                 SETC 'RANGE'                                      02273800
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG699         02273900
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02274000
                      AIF   (N'&KEYREQTYPE LE 1).ZG695A  CK NUM         02274100
&ZMS                  SETC  '"KEYREQTYPE='                              02274200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02274300
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02274400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02274500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02274600
.ZG695A               ANOP  ,                                           02274700
.*----------------------------------------------------------------***   02274800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02274900
                      AIF   (N'&KEYRANGEEND LE 1).ZG697A  CK NUM        02275000
&ZMS                  SETC  '"KEYRANGEEND='                             02275100
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02275200
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02275300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02275400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02275500
.ZG697A               ANOP  ,                                           02275600
.*-------------------------------------------------------------------   02275700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02275800
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02275900
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02276000
                      AIF   (N'&KEYRANGEEND GT 1).ZG697B  MULTI         02276100
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02276200
.ZG697B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG697C             02276300
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02276400
&ZMS                  SETC  ' '                                         02276500
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02276600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02276700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02276800
.ZG697C               ANOP  ,                                           02276900
.*-------------------------------------------------------------------   02277000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02277100
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG697R  NOT I/O     02277200
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG697R        02277300
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02277400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG697P               02277500
                      AIF   (K'&ZCGPR GT 2).ZG697Q                      02277600
                      AIF   ('&ZCGPR' EQ '0').ZG697Q                    02277700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02277800
                      AIF   (T'&ZCGPR NE 'N').ZG697Q  INVALID REG NAME  02277900
.ZG697P               ANOP  ,                                           02278000
                      AIF   (T'&ZCGPR NE 'N').ZG697R  NON NUMERIC       02278100
                      AIF   ('&ZCGPR' LT '2').ZG697Q                    02278200
                      AIF   ('&ZCGPR' LE '12').ZG697R                   02278300
.ZG697Q               ANOP  ,                                           02278400
&ZMS                  SETC  '"KEYRANGEEND='                             02278500
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02278600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02278700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02278800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02278900
.ZG697R               ANOP  ,                                           02279000
.*------------------------------------------------------------------    02279100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02279200
.ZG699                ANOP  ,                                           02279300
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02279400
                      AIF   (K'&XKEYREQTYPE GT 0).ZG699E  VALID ARG     02279500
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG699D  OMITTED      02279600
&ZASYSLNDX            SETA  0                                           02279700
.ZG699A               ANOP  ,           POSITIONAL MACRO KEY            02279800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02279900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG699C           02280000
&ZTLC                 SETC 'KEYREQTYPE'                                 02280100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG699A  02280200
.ZG699B               ANOP  ,                                           02280300
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02280400
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      02280500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02280600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02280700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02280800
                      AGO   .ZG699E                                     02280900
.ZG699C               ANOP  ,                                           02281000
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02281100
&ZMS                  SETC  '"KEYREQTYPE='                              02281200
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02281300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02281400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02281500
&ZMS                  SETC  '&ZMS "EQUAL",'                             02281600
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02281700
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02281800
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02281900
                      MNOTE 8,' &ZMS '                                  02282000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02282100
                      AGO   .ZG699E                                     02282200
.ZG699D               ANOP  ,                                           02282300
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02282400
.ZG699E               ANOP  ,                                           02282500
.*------------------------------------------------------------------    02282600
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02282700
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG699F  KEY           02282800
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG699F  PARM        02282900
&ZMS                  SETC  '"KEYREQTYPE'                               02283000
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02283100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02283200
&ZMS                  SETC  '&ZMS '                                     02283300
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02283400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02283500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02283600
.ZG699F               ANOP  ,                                           02283700
.*------------------------------------------------------------------    02283800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02283900
.ZG701                ANOP  ,                                           02284000
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02284100
                      AIF   (K'&XKEYCOMPARE GT 0).ZG701E  VALID ARG     02284200
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG701D  OMITTED      02284300
&ZASYSLNDX            SETA  0                                           02284400
.ZG701A               ANOP  ,           POSITIONAL MACRO KEY            02284500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02284600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG701C           02284700
&ZTLC                 SETC 'KEYCOMPARE'                                 02284800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG701A  02284900
.ZG701B               ANOP  ,                                           02285000
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02285100
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      02285200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02285300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02285400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02285500
                      AGO   .ZG701E                                     02285600
.ZG701C               ANOP  ,                                           02285700
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02285800
&ZMS                  SETC  '"KEYCOMPARE='                              02285900
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02286000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02286100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02286200
&ZMS                  SETC  '&ZMS "NO"'                                 02286300
&ZMS                  SETC  '&ZMS OR "YES".'                            02286400
                      MNOTE 8,' &ZMS '                                  02286500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02286600
                      AGO   .ZG701E                                     02286700
.ZG701D               ANOP  ,                                           02286800
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02286900
.ZG701E               ANOP  ,                                           02287000
.*------------------------------------------------------------------    02287100
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02287200
                      AIF   (K'&SECONDARYKEY(1) GT 0).ZG701F  KEY       02287300
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG701F  PARM        02287400
&ZMS                  SETC  '"KEYCOMPARE'                               02287500
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02287600
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02287700
&ZMS                  SETC  '&ZMS '                                     02287800
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02287900
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02288000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02288100
.ZG701F               ANOP  ,                                           02288200
.*------------------------------------------------------------------    02288300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02288400
.ZG703                ANOP  ,                                           02288500
&ZXKEYTYPE            SETC  'INPUT'     SET IN/OUTPUT                   02288600
                      AIF   (K'&XKEYTYPE GT 0).ZG703E  VALID ARG        02288700
                      AIF   (T'&KEYTYPE EQ 'O').ZG703D  OMITTED         02288800
&ZASYSLNDX            SETA  0                                           02288900
.ZG703A               ANOP  ,           POSITIONAL MACRO KEY            02289000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02289100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG703C           02289200
&ZTLC                 SETC 'KEYTYPE'                                    02289300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG703A  02289400
.ZG703B               ANOP  ,                                           02289500
&ZXKEYTYPE            SETC  ''          RESET IN/OUTPUT                 02289600
&ZMS                  SETC  'THE "KEYTYPE" KEY'                         02289700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02289800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02289900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02290000
                      AGO   .ZG703E                                     02290100
.ZG703C               ANOP  ,                                           02290200
&ZXKEYTYPE            SETC  ''          RESET IN/OUTPUT                 02290300
&ZMS                  SETC  '"KEYTYPE='                                 02290400
&ZMS                  SETC  '&ZMS.&KEYTYPE"'                            02290500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02290600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02290700
&ZMS                  SETC  '&ZMS "ENTRY"'                              02290800
&ZMS                  SETC  '&ZMS OR "SECONDARY".'                      02290900
                      MNOTE 8,' &ZMS '                                  02291000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02291100
                      AGO   .ZG703E                                     02291200
.ZG703D               ANOP  ,                                           02291300
&XKEYTYPE             SETC  'ENTRY'     SET DEFAULT KEYWORD             02291400
.ZG703E               ANOP  ,                                           02291500
.*------------------------------------------------------------------    02291600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02291700
.ZG704                ANOP  ,                                           02291800
&ZXLOCATOR            SETC  'INPUT'     SET IN/OUTPUT                   02291900
                      AIF   (K'&XLOCATOR GT 0).ZG704E  VALID ARG        02292000
                      AIF   (T'&LOCATOR EQ 'O').ZG704D  OMITTED         02292100
&ZASYSLNDX            SETA  0                                           02292200
.ZG704A               ANOP  ,           POSITIONAL MACRO KEY            02292300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02292400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG704C           02292500
&ZTLC                 SETC 'LOCATOR'                                    02292600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG704A  02292700
.ZG704B               ANOP  ,                                           02292800
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 02292900
&ZMS                  SETC  'THE "LOCATOR" KEY'                         02293000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02293100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02293200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02293300
                      AGO   .ZG704E                                     02293400
.ZG704C               ANOP  ,                                           02293500
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 02293600
&ZMS                  SETC  '"LOCATOR='                                 02293700
&ZMS                  SETC  '&ZMS.&LOCATOR"'                            02293800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02293900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02294000
&ZMS                  SETC  '&ZMS "CURSOR",'                            02294100
&ZMS                  SETC  '&ZMS "ENTRYID",'                           02294200
&ZMS                  SETC  '&ZMS "ENTRYNAME",'                         02294300
&ZMS                  SETC  '&ZMS "UNKEYPOS",'                          02294400
&ZMS                  SETC  '&ZMS OR "KEYPOS".'                         02294500
                      MNOTE 8,' &ZMS '                                  02294600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02294700
                      AGO   .ZG704E                                     02294800
.ZG704D               ANOP  ,                                           02294900
&XLOCATOR             SETC  'CURSOR'    SET DEFAULT KEYWORD             02295000
.ZG704E               ANOP  ,                                           02295100
.*------------------------------------------------------------------    02295200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02295300
                      AIF   (K'&LOCATOR(1) GT 0).ZG704F  PARM           02295400
&XLOCATOR             SETC  ''          ENSURE NULL KEYWORD             02295500
&ZXLOCATOR            SETC  ''          RESET IN/OUTPUT                 02295600
&ZMS                  SETC  'THE'                                       02295700
&ZMS                  SETC  '&ZMS "LOCATOR" KEY AND ITS'                02295800
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               02295900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02296000
&ZMS                  SETC  '&ZMS "CURSOR",'                            02296100
&ZMS                  SETC  '&ZMS "ENTRYID",'                           02296200
&ZMS                  SETC  '&ZMS "ENTRYNAME",'                         02296300
&ZMS                  SETC  '&ZMS "UNKEYPOS",'                          02296400
&ZMS                  SETC  '&ZMS OR "KEYPOS".'                         02296500
                      MNOTE 8,' &ZMS '                                  02296600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02296700
.ZG704F               ANOP  ,                                           02296800
.*------------------------------------------------------------------    02296900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02297000
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02297100
.*-------------------------------------------------------------------   02297200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02297300
.ZG707                ANOP  ,                                           02297400
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG707A             02297500
&ZTLC                 SETC 'NO'                                         02297600
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG708        02297700
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02297800
                      AIF   (N'&VERSCOMPARE LE 1).ZG707A  CK NUM        02297900
&ZMS                  SETC  '"VERSCOMPARE='                             02298000
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02298100
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02298200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02298300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02298400
.ZG707A               ANOP  ,                                           02298500
.*------------------------------------------------------------------    02298600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02298700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02298800
.ZG707A0              AIF   (K'&VERSCOMP LE 0).ZG707A1  OK              02298900
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02299000
.ZG707A1              AIF   (K'&VERSCOMPTYPE LE 0).ZG707A2  OK          02299100
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02299200
.ZG707A2              AIF   (K'&ZCVAL LE 0).ZG707A3  OK                 02299300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02299400
&ZMS                  SETC  '"VERSCOMPARE'                              02299500
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02299600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02299700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02299800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02299900
.ZG707A3              ANOP  ,                                           02300000
.*-------------------------------------------------------------------   02300100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02300200
.ZG708                ANOP  ,                                           02300300
&ZTLC                 SETC 'YES'                                        02300400
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG717        02300500
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02300600
                      AIF   (N'&VERSCOMPARE LE 1).ZG708A  CK NUM        02300700
&ZMS                  SETC  '"VERSCOMPARE='                             02300800
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02300900
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02301000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02301100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02301200
.ZG708A               ANOP  ,                                           02301300
.*----------------------------------------------------------------***   02301400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02301500
                      AIF   (N'&VERSCOMP LE 1).ZG710A  CK NUM           02301600
&ZMS                  SETC  '"VERSCOMP='                                02301700
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02301800
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02301900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02302000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02302100
.ZG710A               ANOP  ,                                           02302200
.*-------------------------------------------------------------------   02302300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02302400
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02302500
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02302600
                      AIF   (N'&VERSCOMP GT 1).ZG710B  MULTI            02302700
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02302800
.ZG710B               AIF   (K'&VERSCOMP(1) GT 0).ZG710C                02302900
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02303000
&ZMS                  SETC  ' '                                         02303100
&ZMS                  SETC  '&ZMS "VERSCOMP" KEY AND ITS'               02303200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02303300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02303400
.ZG710C               ANOP  ,                                           02303500
.*-------------------------------------------------------------------   02303600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02303700
                      AIF   (K'&ZXVERSCOMP LE 0).ZG710R  NOT I/O        02303800
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG710R           02303900
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02304000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG710P               02304100
                      AIF   (K'&ZCGPR GT 2).ZG710Q                      02304200
                      AIF   ('&ZCGPR' EQ '0').ZG710Q                    02304300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02304400
                      AIF   (T'&ZCGPR NE 'N').ZG710Q  INVALID REG NAME  02304500
.ZG710P               ANOP  ,                                           02304600
                      AIF   (T'&ZCGPR NE 'N').ZG710R  NON NUMERIC       02304700
                      AIF   ('&ZCGPR' LT '2').ZG710Q                    02304800
                      AIF   ('&ZCGPR' LE '12').ZG710R                   02304900
.ZG710Q               ANOP  ,                                           02305000
&ZMS                  SETC  '"VERSCOMP='                                02305100
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02305200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02305300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02305400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02305500
.ZG710R               ANOP  ,                                           02305600
.*----------------------------------------------------------------***   02305700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02305800
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG712A  CK NUM       02305900
&ZMS                  SETC  '"VERSCOMPTYPE='                            02306000
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02306100
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02306200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02306300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02306400
.ZG712A               ANOP  ,                                           02306500
.*-------------------------------------------------------------------   02306600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02306700
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02306800
.ZG713A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG714A                  02306900
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02307000
.*-------------------------------------------------------------------   02307100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02307200
.ZG714A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG715A            02307300
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02307400
.*-------------------------------------------------------------------   02307500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02307600
.ZG715A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG715C  KEYWORD     02307700
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG715B            02307800
&ZMS                  SETC  '"VERSCOMPTYPE='                            02307900
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02308000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02308100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02308200
&ZMS                  SETC  '&ZMS "EQUAL"'                              02308300
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02308400
                      MNOTE 8,' &ZMS '                                  02308500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02308600
.ZG715B               ANOP  ,                                           02308700
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02308800
.ZG715C               ANOP  ,                                           02308900
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02309000
.*-------------------------------------------------------------------   02309100
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02309200
                      AIF   (K'&VERSCOMP(1) GT 0).ZG715D  KEY           02309300
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG715D  PARM      02309400
&ZMS                  SETC  '"VERSCOMPTYPE'                             02309500
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02309600
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02309700
&ZMS                  SETC  '&ZMS '                                     02309800
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02309900
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02310000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02310100
.ZG715D               ANOP  ,                                           02310200
.*------------------------------------------------------------------    02310300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02310400
.ZG717                ANOP  ,                                           02310500
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02310600
                      AIF   (K'&XVERSCOMPARE GT 0).ZG717E  VALID ARG    02310700
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG717D  OMITTED     02310800
&ZASYSLNDX            SETA  0                                           02310900
.ZG717A               ANOP  ,           POSITIONAL MACRO KEY            02311000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02311100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG717C           02311200
&ZTLC                 SETC 'VERSCOMPARE'                                02311300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG717A  02311400
.ZG717B               ANOP  ,                                           02311500
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02311600
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'                     02311700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02311800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02311900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02312000
                      AGO   .ZG717E                                     02312100
.ZG717C               ANOP  ,                                           02312200
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02312300
&ZMS                  SETC  '"VERSCOMPARE='                             02312400
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02312500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02312600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02312700
&ZMS                  SETC  '&ZMS "NO"'                                 02312800
&ZMS                  SETC  '&ZMS OR "YES".'                            02312900
                      MNOTE 8,' &ZMS '                                  02313000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02313100
                      AGO   .ZG717E                                     02313200
.ZG717D               ANOP  ,                                           02313300
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02313400
.ZG717E               ANOP  ,                                           02313500
.*-------------------------------------------------------------------   02313600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02313700
.ZG718                ANOP  ,                                           02313800
&ZTLC                 SETC 'READ_MULT'                                  02313900
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG846            02314000
&XREQUEST             SETC  'READ_MULT'         SET KEYWORD             02314100
                      AIF   (N'&REQUEST LE 1).ZG718A  CK NUM            02314200
&ZMS                  SETC  '"REQUEST='                                 02314300
&ZMS                  SETC  '&ZMS.&REQUEST"'                            02314400
&ZMS                  SETC  '&ZMS "REQUEST"'                            02314500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02314600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02314700
.ZG718A               ANOP  ,                                           02314800
.*------------------------------------------------------------------    02314900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02315000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02315100
.ZG718A0              AIF   (K'&DIRECTION LE 0).ZG718A1  OK             02315200
&ZCVAL                SETC '&ZCVAL DIRECTION'   INCORRECT KEY USED      02315300
.ZG718A1              AIF   (K'&LOCATOR LE 0).ZG718A2  OK               02315400
&ZCVAL                SETC '&ZCVAL LOCATOR'     INCORRECT KEY USED      02315500
.ZG718A2              AIF   (K'&KEYSCANTYPE LE 0).ZG718A3  OK           02315600
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02315700
.ZG718A3              AIF   (K'&ENTRYID LE 0).ZG718A4  OK               02315800
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02315900
.ZG718A4              AIF   (K'&ENTRYNAME LE 0).ZG718A5  OK             02316000
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02316100
.ZG718A5              AIF   (K'&KEYTYPE LE 0).ZG718A6  OK               02316200
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02316300
.ZG718A6              AIF   (K'&FIRSTELEM LE 0).ZG718A7  OK             02316400
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      02316500
.ZG718A7              AIF   (K'&LASTELEM LE 0).ZG718A8  OK              02316600
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      02316700
.ZG718A8              AIF   (K'&MISCOMPARE LE 0).ZG718A9  OK            02316800
&ZCVAL                SETC '&ZCVAL MISCOMPARE'  INCORRECT KEY USED      02316900
.ZG718A9              AIF   (K'&LISTTYPE LE 0).ZG718A10  OK             02317000
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      02317100
.ZG718A10             AIF   (K'&MOVETOKEY LE 0).ZG718A11  OK            02317200
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      02317300
.ZG718A11             AIF   (K'&LISTKEYINC LE 0).ZG718A12  OK           02317400
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02317500
.ZG718A12             AIF   (K'&LISTKEYAREA LE 0).ZG718A13  OK          02317600
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02317700
.ZG718A13             AIF   (K'&MOVETOSKEY LE 0).ZG718A14  OK           02317800
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      02317900
.ZG718A14             AIF   (K'&BUFINCRNUM LE 0).ZG718A15  OK           02318000
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      02318100
.ZG718A15             AIF   (K'&ZCVAL LE 0).ZG718A16  OK                02318200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02318300
&ZMS                  SETC  '"REQUEST'                                  02318400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           02318500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02318600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02318700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02318800
.ZG718A16             ANOP  ,                                           02318900
.*-------------------------------------------------------------------   02319000
.***AG.KKWRD07 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          02319100
&ZI                   SETA  0           XVARIABLE ARRAY INDEX           02319200
&ZJ                   SETA  0           SUBLIST INDEX                   02319300
.ZG720A               ANOP  ,                                           02319400
&ZJ                   SETA  &ZJ+1       NEXT SUBLIST                    02319500
                      AIF   (&ZJ GT N'&TYPE).ZG720C  DONE               02319600
                      AIF   (K'&TYPE(&ZJ) LE 0).ZG720A  NULL            02319700
&ZI                   SETA  &ZI+1       NEXT ARRAY ENTRY                02319800
&XTYPE(&ZI)   SETC  ''                  NULL ENTRY                      02319900
&XTYPE(&ZI+1) SETC  ''                  NULL AT ARRAY END               02320000
.ZG721B  AIF   ('&TYPE(&ZJ)' NE 'ENTDATA').ZG722B                       02320100
&XTYPE(&ZI)   SETC  'ENTDATA'           SET KEYWORD                     02320200
.ZG722B  AIF   ('&TYPE(&ZJ)' NE 'ADJDATA').ZG723B                       02320300
&XTYPE(&ZI)   SETC  'ADJDATA'           SET KEYWORD                     02320400
.ZG723B  AIF   ('&TYPE(&ZJ)' NE 'ECONTROLS').ZG724B                     02320500
&XTYPE(&ZI)   SETC  'ECONTROLS'         SET KEYWORD                     02320600
.ZG724B               AIF   ('&XTYPE(&ZI)' NE '').ZG720A                02320700
&ZI                   SETA  &ZI-1       BACKUP ARRAY                    02320800
&ZMS                  SETC  '"TYPE='                                    02320900
&ZMS                  SETC  '&ZMS.&TYPE"'                               02321000
&ZMS                  SETC  '&ZMS ARGUMENT &ZJ'                         02321100
&ZMS                  SETC  '&ZMS IS AN UNKNOWN KEYWORD. '              02321200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02321300
&ZMS                  SETC  '&ZMS "ENTDATA",'                           02321400
&ZMS                  SETC  '&ZMS "ADJDATA",'                           02321500
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      02321600
                      MNOTE 8,' &ZMS '                                  02321700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02321800
                      AGO   .ZG720A                                     02321900
.*-------------------------------------------------------------------   02322000
.***AG.KKWRD09 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          02322100
.ZG720C               AIF   (&ZI GT 0).ZG720D   VALID                   02322200
&ZXTYPE               SETC  ''          RESET IN/OUTPUT                 02322300
&XTYPE(1)  SETC  'ENTDATA'              SET DEFAULT KEYWORD             02322400
&XTYPE(2)  SETC  ''   NULL AT ARRAY END                                 02322500
&ZMS                  SETC  'THE'                                       02322600
&ZMS                  SETC  '&ZMS "TYPE" KEY AND ITS'                   02322700
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               02322800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02322900
&ZMS                  SETC  '&ZMS "ENTDATA",'                           02323000
&ZMS                  SETC  '&ZMS "ADJDATA",'                           02323100
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      02323200
                      MNOTE 8,' &ZMS '                                  02323300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02323400
.ZG720D               ANOP  ,                                           02323500
.*----------------------------------------------------------------***   02323600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02323700
                      AIF   (N'&ADJAREA LE 1).ZG726A  CK NUM            02323800
&ZMS                  SETC  '"ADJAREA='                                 02323900
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            02324000
&ZMS                  SETC  '&ZMS "ADJAREA"'                            02324100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02324200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02324300
.ZG726A               ANOP  ,                                           02324400
.*-------------------------------------------------------------------   02324500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02324600
&ZXADJAREA            SETC  'INPUT'     SET IN/OUTPUT                   02324700
&XADJAREA             SETC  'NO_ADJAREA'                                02324800
                      AIF   (K'&ADJAREA(1) LE 0).ZG726B  PARM           02324900
&XADJAREA             SETC  '&ADJAREA(1)'       SET XVARIABLE           02325000
                      AIF   (N'&ADJAREA GT 1).ZG726B  MULTI             02325100
&XADJAREA             SETC  '&ADJAREA'  SET XVARIABLE                   02325200
.ZG726B               ANOP  ,                                           02325300
.*-------------------------------------------------------------------   02325400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02325500
                      AIF   (K'&ZXADJAREA LE 0).ZG726R  NOT I/O         02325600
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA').ZG726R                     02325700
                      AIF   ('&XADJAREA'(1,1) NE '(').ZG726R            02325800
&ZCGPR                SETC  '&XADJAREA'(2,K'&XADJAREA-2)                02325900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG726P               02326000
                      AIF   (K'&ZCGPR GT 2).ZG726Q                      02326100
                      AIF   ('&ZCGPR' EQ '0').ZG726Q                    02326200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02326300
                      AIF   (T'&ZCGPR NE 'N').ZG726Q  INVALID REG NAME  02326400
.ZG726P               ANOP  ,                                           02326500
                      AIF   (T'&ZCGPR NE 'N').ZG726R  NON NUMERIC       02326600
                      AIF   ('&ZCGPR' LT '2').ZG726Q                    02326700
                      AIF   ('&ZCGPR' LE '12').ZG726R                   02326800
.ZG726Q               ANOP  ,                                           02326900
&ZMS                  SETC  '"ADJAREA='                                 02327000
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            02327100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02327200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02327300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02327400
.ZG726R               ANOP  ,                                           02327500
.*----------------------------------------------------------------***   02327600
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      02327700
&XRESTARTTOKEN        SETC  ''          INITIALIZE XVARIABLE            02327800
                      AIF   (K'&RESTOKEN LE 0).ZG729C                   02327900
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02328000
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET XVARIABLE                   02328100
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   02328200
&XRESTOKEN            SETC  '&RESTOKEN(1)'      SET XVARIABLE PARM      02328300
                      AIF   (N'&RESTOKEN GT 1).ZG729A                   02328400
&XRESTOKEN            SETC  '&RESTOKEN'         SET XVARIABLE PARM      02328500
.ZG729A               AIF   (N'&RESTOKEN LE 1).ZG729B  CK NUM           02328600
&ZMS                  SETC  '"RESTOKEN='                                02328700
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           02328800
&ZMS                  SETC  '&ZMS "RESTOKEN"'                           02328900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02329000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02329100
.ZG729B               AIF   (K'&XRESTOKEN GT 0).ZG729C  ONE PARM        02329200
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 02329300
&ZXRESTOKEN           SETC  ''          RESET IN/OUTPUT                 02329400
&ZMS                  SETC  ' '                                         02329500
&ZMS                  SETC  '&ZMS "RESTOKEN" KEY AND ITS'               02329600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02329700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02329800
.ZG729C               ANOP  ,                                           02329900
.*----------------------------------------------------------------***   02330000
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      02330100
                      AIF   (K'&EXTRESTOKEN LE 0).ZG730D  NO ME KEY     02330200
                      AIF   (N'&EXTRESTOKEN LE 1).ZG730A  CK NUM        02330300
&ZMS                  SETC  '"EXTRESTOKEN='                             02330400
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02330500
&ZMS                  SETC  '&ZMS "EXTRESTOKEN"'                        02330600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02330700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02330800
.ZG730A               AIF   (K'&XRESTARTTOKEN LE 0).ZG730B              02330900
&ZMS                  SETC  '"EXTRESTOKEN'                              02331000
&ZMS                  SETC  '&ZMS.=&EXTRESTOKEN"'                       02331100
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02331200
&ZMS                  SETC  '&ZMS "&XRESTARTTOKEN"'                     02331300
                      MNOTE 8,' &ZMS KEY.'                              02331400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02331500
                      AGO   .ZG730D                                     02331600
.*                                                                      02331700
.ZG730B               ANOP  ,                                           02331800
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02331900
&XRESTARTTOKEN        SETC  'EXTRESTOKEN'       SET XVARIABLE           02332000
&ZXEXTRESTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   02332100
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN(1)'   SET XVARIABLE PARM      02332200
                      AIF   (N'&EXTRESTOKEN GT 1).ZG730C                02332300
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN'      SET XVARIABLE PARM      02332400
.ZG730C               AIF   (K'&XEXTRESTOKEN GT 0).ZG730D  ONE PARM     02332500
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 02332600
&ZXEXTRESTOKEN        SETC  ''          RESET IN/OUTPUT                 02332700
&ZMS                  SETC  ' '                                         02332800
&ZMS                  SETC  '&ZMS "EXTRESTOKEN" KEY AND ITS'            02332900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02333000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02333100
.ZG730D               ANOP  ,                                           02333200
.*------------------------------------------------------------------    02333300
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           02333400
                      AIF   (K'&XRESTARTTOKEN GT 0).ZG731B              02333500
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02333600
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET DEFAULT                     02333700
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   02333800
&XRESTOKEN            SETC  'NO_RESTOKEN'       SET DEFAULT PARM        02333900
.ZG731B               ANOP  ,                                           02334000
.*-------------------------------------------------------------------   02334100
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02334200
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG731R  NOT I/O     02334300
         AIF   ('&XEXTRESTOKEN' EQ 'NO_RESTOKEN').ZG731R                02334400
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG731R        02334500
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        02334600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG731P               02334700
                      AIF   (K'&ZCGPR GT 2).ZG731Q                      02334800
                      AIF   ('&ZCGPR' EQ '0').ZG731Q                    02334900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02335000
                      AIF   (T'&ZCGPR NE 'N').ZG731Q  INVALID REG NAME  02335100
.ZG731P               ANOP  ,                                           02335200
                      AIF   (T'&ZCGPR NE 'N').ZG731R  NON NUMERIC       02335300
                      AIF   ('&ZCGPR' LT '2').ZG731Q                    02335400
                      AIF   ('&ZCGPR' LE '12').ZG731R                   02335500
.ZG731Q               ANOP  ,                                           02335600
&ZMS                  SETC  '"EXTRESTOKEN='                             02335700
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02335800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02335900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02336000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02336100
.ZG731R               ANOP  ,                                           02336200
.*-------------------------------------------------------------------   02336300
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           02336400
.ZG729ZY  AIF    ('&XRESTARTTOKEN' NE 'RESTOKEN').ZG730ZY               02336500
.*-------------------------------------------------------------------   02336600
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02336700
                      AIF   (K'&ZXRESTOKEN LE 0).ZG729R  NOT I/O        02336800
         AIF   ('&XRESTOKEN' EQ 'NO_RESTOKEN').ZG729R                   02336900
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZG729R           02337000
&ZCGPR                SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)              02337100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG729P               02337200
                      AIF   (K'&ZCGPR GT 2).ZG729Q                      02337300
                      AIF   ('&ZCGPR' EQ '0').ZG729Q                    02337400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02337500
                      AIF   (T'&ZCGPR NE 'N').ZG729Q  INVALID REG NAME  02337600
.ZG729P               ANOP  ,                                           02337700
                      AIF   (T'&ZCGPR NE 'N').ZG729R  NON NUMERIC       02337800
                      AIF   ('&ZCGPR' LT '2').ZG729Q                    02337900
                      AIF   ('&ZCGPR' LE '12').ZG729R                   02338000
.ZG729Q               ANOP  ,                                           02338100
&ZMS                  SETC  '"RESTOKEN='                                02338200
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           02338300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02338400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02338500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02338600
.ZG729R               ANOP  ,                                           02338700
.*-------------------------------------------------------------------   02338800
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           02338900
.ZG730ZY  AIF    ('&XRESTARTTOKEN' NE 'EXTRESTOKEN').ZG731ZY            02339000
.*-------------------------------------------------------------------   02339100
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02339200
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG730R  NOT I/O     02339300
         AIF   ('&XEXTRESTOKEN' EQ 'NO_EXTRESTOKEN').ZG730R             02339400
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG730R        02339500
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        02339600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG730P               02339700
                      AIF   (K'&ZCGPR GT 2).ZG730Q                      02339800
                      AIF   ('&ZCGPR' EQ '0').ZG730Q                    02339900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02340000
                      AIF   (T'&ZCGPR NE 'N').ZG730Q  INVALID REG NAME  02340100
.ZG730P               ANOP  ,                                           02340200
                      AIF   (T'&ZCGPR NE 'N').ZG730R  NON NUMERIC       02340300
                      AIF   ('&ZCGPR' LT '2').ZG730Q                    02340400
                      AIF   ('&ZCGPR' LE '12').ZG730R                   02340500
.ZG730Q               ANOP  ,                                           02340600
&ZMS                  SETC  '"EXTRESTOKEN='                             02340700
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02340800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02340900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02341000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02341100
.ZG730R               ANOP  ,                                           02341200
.*-------------------------------------------------------------------   02341300
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            02341400
.ZG731ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     02341500
.*------------------------------------------------------------------    02341600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02341700
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02341800
.*-------------------------------------------------------------------   02341900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02342000
.ZG734                ANOP  ,                                           02342100
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG734A             02342200
&ZTLC                 SETC 'NO'                                         02342300
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG735        02342400
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02342500
                      AIF   (N'&LISTCOMPARE LE 1).ZG734A  CK NUM        02342600
&ZMS                  SETC  '"LISTCOMPARE='                             02342700
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02342800
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02342900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02343000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02343100
.ZG734A               ANOP  ,                                           02343200
.*------------------------------------------------------------------    02343300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02343400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02343500
.ZG734A0              AIF   (K'&LISTNUM LE 0).ZG734A1  OK               02343600
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02343700
.ZG734A1              AIF   (K'&AUTHCOMPARE LE 0).ZG734A2  OK           02343800
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02343900
.ZG734A2              AIF   (K'&AUTHCOMP LE 0).ZG734A3  OK              02344000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02344100
.ZG734A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG734A4  OK          02344200
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02344300
.ZG734A4              AIF   (K'&ZCVAL LE 0).ZG734A5  OK                 02344400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02344500
&ZMS                  SETC  '"LISTCOMPARE'                              02344600
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02344700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02344800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02344900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02345000
.ZG734A5              ANOP  ,                                           02345100
.*-------------------------------------------------------------------   02345200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02345300
.ZG735                ANOP  ,                                           02345400
&ZTLC                 SETC 'YES'                                        02345500
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG752        02345600
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02345700
                      AIF   (N'&LISTCOMPARE LE 1).ZG735A  CK NUM        02345800
&ZMS                  SETC  '"LISTCOMPARE='                             02345900
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02346000
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02346100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02346200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02346300
.ZG735A               ANOP  ,                                           02346400
.*----------------------------------------------------------------***   02346500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02346600
                      AIF   (N'&LISTNUM LE 1).ZG737A  CK NUM            02346700
&ZMS                  SETC  '"LISTNUM='                                 02346800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02346900
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02347000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02347100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02347200
.ZG737A               ANOP  ,                                           02347300
.*-------------------------------------------------------------------   02347400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02347500
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02347600
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02347700
                      AIF   (N'&LISTNUM GT 1).ZG737B  MULTI             02347800
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02347900
.ZG737B               AIF   (K'&LISTNUM(1) GT 0).ZG737C                 02348000
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02348100
&ZMS                  SETC  ' '                                         02348200
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02348300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02348400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02348500
.ZG737C               ANOP  ,                                           02348600
.*-------------------------------------------------------------------   02348700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02348800
                      AIF   (K'&ZXLISTNUM LE 0).ZG737R  NOT I/O         02348900
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG737R            02349000
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02349100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG737P               02349200
                      AIF   (K'&ZCGPR GT 2).ZG737Q                      02349300
                      AIF   ('&ZCGPR' EQ '0').ZG737Q                    02349400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02349500
                      AIF   (T'&ZCGPR NE 'N').ZG737Q  INVALID REG NAME  02349600
.ZG737P               ANOP  ,                                           02349700
                      AIF   (T'&ZCGPR NE 'N').ZG737R  NON NUMERIC       02349800
                      AIF   ('&ZCGPR' LT '2').ZG737Q                    02349900
                      AIF   ('&ZCGPR' LE '12').ZG737R                   02350000
.ZG737Q               ANOP  ,                                           02350100
&ZMS                  SETC  '"LISTNUM='                                 02350200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02350300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02350400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02350500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02350600
.ZG737R               ANOP  ,                                           02350700
.*------------------------------------------------------------------    02350800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02350900
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02351000
.*-------------------------------------------------------------------   02351100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02351200
.ZG741                ANOP  ,                                           02351300
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG741A             02351400
&ZTLC                 SETC 'NO'                                         02351500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG742        02351600
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02351700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG741A  CK NUM        02351800
&ZMS                  SETC  '"AUTHCOMPARE='                             02351900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02352000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02352100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02352200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02352300
.ZG741A               ANOP  ,                                           02352400
.*------------------------------------------------------------------    02352500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02352600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02352700
.ZG741A0              AIF   (K'&AUTHCOMP LE 0).ZG741A1  OK              02352800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02352900
.ZG741A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG741A2  OK          02353000
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02353100
.ZG741A2              AIF   (K'&ZCVAL LE 0).ZG741A3  OK                 02353200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02353300
&ZMS                  SETC  '"AUTHCOMPARE'                              02353400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02353500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02353600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02353700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02353800
.ZG741A3              ANOP  ,                                           02353900
.*-------------------------------------------------------------------   02354000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02354100
.ZG742                ANOP  ,                                           02354200
&ZTLC                 SETC 'YES'                                        02354300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG751        02354400
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02354500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG742A  CK NUM        02354600
&ZMS                  SETC  '"AUTHCOMPARE='                             02354700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02354800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02354900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02355000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02355100
.ZG742A               ANOP  ,                                           02355200
.*----------------------------------------------------------------***   02355300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02355400
                      AIF   (N'&AUTHCOMP LE 1).ZG744A  CK NUM           02355500
&ZMS                  SETC  '"AUTHCOMP='                                02355600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02355700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02355800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02355900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02356000
.ZG744A               ANOP  ,                                           02356100
.*-------------------------------------------------------------------   02356200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02356300
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02356400
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02356500
                      AIF   (N'&AUTHCOMP GT 1).ZG744B  MULTI            02356600
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02356700
.ZG744B               AIF   (K'&AUTHCOMP(1) GT 0).ZG744C                02356800
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02356900
&ZMS                  SETC  ' '                                         02357000
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02357100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02357200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02357300
.ZG744C               ANOP  ,                                           02357400
.*-------------------------------------------------------------------   02357500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02357600
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG744R  NOT I/O        02357700
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG744R           02357800
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02357900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG744P               02358000
                      AIF   (K'&ZCGPR GT 2).ZG744Q                      02358100
                      AIF   ('&ZCGPR' EQ '0').ZG744Q                    02358200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02358300
                      AIF   (T'&ZCGPR NE 'N').ZG744Q  INVALID REG NAME  02358400
.ZG744P               ANOP  ,                                           02358500
                      AIF   (T'&ZCGPR NE 'N').ZG744R  NON NUMERIC       02358600
                      AIF   ('&ZCGPR' LT '2').ZG744Q                    02358700
                      AIF   ('&ZCGPR' LE '12').ZG744R                   02358800
.ZG744Q               ANOP  ,                                           02358900
&ZMS                  SETC  '"AUTHCOMP='                                02359000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02359100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02359200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02359300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02359400
.ZG744R               ANOP  ,                                           02359500
.*----------------------------------------------------------------***   02359600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02359700
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG746A  CK NUM       02359800
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02359900
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02360000
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02360100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02360200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02360300
.ZG746A               ANOP  ,                                           02360400
.*-------------------------------------------------------------------   02360500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02360600
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02360700
.ZG747A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG748A                  02360800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02360900
.*-------------------------------------------------------------------   02361000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02361100
.ZG748A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG749A            02361200
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02361300
.*-------------------------------------------------------------------   02361400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02361500
.ZG749A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG749C  KEYWORD     02361600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG749B            02361700
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02361800
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02361900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02362000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02362100
&ZMS                  SETC  '&ZMS "EQUAL"'                              02362200
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02362300
                      MNOTE 8,' &ZMS '                                  02362400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02362500
.ZG749B               ANOP  ,                                           02362600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02362700
.ZG749C               ANOP  ,                                           02362800
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02362900
.*-------------------------------------------------------------------   02363000
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02363100
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG749D  KEY           02363200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG749D  PARM      02363300
&ZMS                  SETC  '"AUTHCOMPTYPE'                             02363400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02363500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02363600
&ZMS                  SETC  '&ZMS '                                     02363700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02363800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02363900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02364000
.ZG749D               ANOP  ,                                           02364100
.*------------------------------------------------------------------    02364200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02364300
.ZG751                ANOP  ,                                           02364400
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02364500
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG751E  VALID ARG    02364600
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG751D  OMITTED     02364700
&ZASYSLNDX            SETA  0                                           02364800
.ZG751A               ANOP  ,           POSITIONAL MACRO KEY            02364900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02365000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG751C           02365100
&ZTLC                 SETC 'AUTHCOMPARE'                                02365200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG751A  02365300
.ZG751B               ANOP  ,                                           02365400
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02365500
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     02365600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02365700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02365800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02365900
                      AGO   .ZG751E                                     02366000
.ZG751C               ANOP  ,                                           02366100
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02366200
&ZMS                  SETC  '"AUTHCOMPARE='                             02366300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02366400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02366500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02366600
&ZMS                  SETC  '&ZMS "NO"'                                 02366700
&ZMS                  SETC  '&ZMS OR "YES".'                            02366800
                      MNOTE 8,' &ZMS '                                  02366900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02367000
                      AGO   .ZG751E                                     02367100
.ZG751D               ANOP  ,                                           02367200
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02367300
.ZG751E               ANOP  ,                                           02367400
.*------------------------------------------------------------------    02367500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02367600
.ZG752                ANOP  ,                                           02367700
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02367800
                      AIF   (K'&XLISTCOMPARE GT 0).ZG752E  VALID ARG    02367900
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG752D  OMITTED     02368000
&ZASYSLNDX            SETA  0                                           02368100
.ZG752A               ANOP  ,           POSITIONAL MACRO KEY            02368200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02368300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG752C           02368400
&ZTLC                 SETC 'LISTCOMPARE'                                02368500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG752A  02368600
.ZG752B               ANOP  ,                                           02368700
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02368800
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'                     02368900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02369000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02369100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02369200
                      AGO   .ZG752E                                     02369300
.ZG752C               ANOP  ,                                           02369400
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02369500
&ZMS                  SETC  '"LISTCOMPARE='                             02369600
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02369700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02369800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02369900
&ZMS                  SETC  '&ZMS "NO"'                                 02370000
&ZMS                  SETC  '&ZMS OR "YES".'                            02370100
                      MNOTE 8,' &ZMS '                                  02370200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02370300
                      AGO   .ZG752E                                     02370400
.ZG752D               ANOP  ,                                           02370500
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02370600
.ZG752E               ANOP  ,                                           02370700
.*------------------------------------------------------------------    02370800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02370900
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02371000
.*-------------------------------------------------------------------   02371100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02371200
.ZG755                ANOP  ,                                           02371300
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG755A              02371400
&ZTLC                 SETC 'NO'                                         02371500
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG756         02371600
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02371700
                      AIF   (N'&KEYCOMPARE LE 1).ZG755A  CK NUM         02371800
&ZMS                  SETC  '"KEYCOMPARE='                              02371900
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02372000
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02372100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02372200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02372300
.ZG755A               ANOP  ,                                           02372400
.*------------------------------------------------------------------    02372500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02372600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02372700
.ZG755A0              AIF   (K'&ENTRYKEY LE 0).ZG755A1  OK              02372800
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02372900
.ZG755A1              AIF   (K'&KEYREQTYPE LE 0).ZG755A2  OK            02373000
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02373100
.ZG755A2              AIF   (K'&KEYRANGEEND LE 0).ZG755A3  OK           02373200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02373300
.ZG755A3              AIF   (K'&ZCVAL LE 0).ZG755A4  OK                 02373400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02373500
&ZMS                  SETC  '"KEYCOMPARE'                               02373600
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02373700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02373800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02373900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02374000
.ZG755A4              ANOP  ,                                           02374100
.*-------------------------------------------------------------------   02374200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02374300
.ZG756                ANOP  ,                                           02374400
&ZTLC                 SETC 'YES'                                        02374500
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG770         02374600
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02374700
                      AIF   (N'&KEYCOMPARE LE 1).ZG756A  CK NUM         02374800
&ZMS                  SETC  '"KEYCOMPARE='                              02374900
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02375000
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02375100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02375200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02375300
.ZG756A               ANOP  ,                                           02375400
.*----------------------------------------------------------------***   02375500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02375600
                      AIF   (N'&ENTRYKEY LE 1).ZG758A  CK NUM           02375700
&ZMS                  SETC  '"ENTRYKEY='                                02375800
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02375900
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02376000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02376100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02376200
.ZG758A               ANOP  ,                                           02376300
.*-------------------------------------------------------------------   02376400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02376500
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02376600
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02376700
                      AIF   (N'&ENTRYKEY GT 1).ZG758B  MULTI            02376800
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02376900
.ZG758B               AIF   (K'&ENTRYKEY(1) GT 0).ZG758C                02377000
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02377100
&ZMS                  SETC  ' '                                         02377200
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02377300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02377400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02377500
.ZG758C               ANOP  ,                                           02377600
.*-------------------------------------------------------------------   02377700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02377800
                      AIF   (K'&ZXENTRYKEY LE 0).ZG758R  NOT I/O        02377900
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG758R           02378000
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02378100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG758P               02378200
                      AIF   (K'&ZCGPR GT 2).ZG758Q                      02378300
                      AIF   ('&ZCGPR' EQ '0').ZG758Q                    02378400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02378500
                      AIF   (T'&ZCGPR NE 'N').ZG758Q  INVALID REG NAME  02378600
.ZG758P               ANOP  ,                                           02378700
                      AIF   (T'&ZCGPR NE 'N').ZG758R  NON NUMERIC       02378800
                      AIF   ('&ZCGPR' LT '2').ZG758Q                    02378900
                      AIF   ('&ZCGPR' LE '12').ZG758R                   02379000
.ZG758Q               ANOP  ,                                           02379100
&ZMS                  SETC  '"ENTRYKEY='                                02379200
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02379300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02379400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02379500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02379600
.ZG758R               ANOP  ,                                           02379700
.*------------------------------------------------------------------    02379800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02379900
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02380000
.*-------------------------------------------------------------------   02380100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02380200
.ZG762                ANOP  ,                                           02380300
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG762A              02380400
&ZTLC                 SETC 'EQUAL'                                      02380500
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG763         02380600
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02380700
                      AIF   (N'&KEYREQTYPE LE 1).ZG762A  CK NUM         02380800
&ZMS                  SETC  '"KEYREQTYPE='                              02380900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02381000
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02381100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02381200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02381300
.ZG762A               ANOP  ,                                           02381400
.*------------------------------------------------------------------    02381500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02381600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02381700
.ZG762A0              AIF   (K'&KEYRANGEEND LE 0).ZG762A1  OK           02381800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02381900
.ZG762A1              AIF   (K'&ZCVAL LE 0).ZG762A2  OK                 02382000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02382100
&ZMS                  SETC  '"KEYREQTYPE'                               02382200
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02382300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02382400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02382500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02382600
.ZG762A2              ANOP  ,                                           02382700
.*-------------------------------------------------------------------   02382800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02382900
.ZG763                ANOP  ,                                           02383000
&ZTLC                 SETC 'LESSOREQUAL'                                02383100
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG764         02383200
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02383300
                      AIF   (N'&KEYREQTYPE LE 1).ZG763A  CK NUM         02383400
&ZMS                  SETC  '"KEYREQTYPE='                              02383500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02383600
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02383700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02383800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02383900
.ZG763A               ANOP  ,                                           02384000
.*------------------------------------------------------------------    02384100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02384200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02384300
.ZG763A0              AIF   (K'&KEYRANGEEND LE 0).ZG763A1  OK           02384400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02384500
.ZG763A1              AIF   (K'&ZCVAL LE 0).ZG763A2  OK                 02384600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02384700
&ZMS                  SETC  '"KEYREQTYPE'                               02384800
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02384900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02385000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02385100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02385200
.ZG763A2              ANOP  ,                                           02385300
.*-------------------------------------------------------------------   02385400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02385500
.ZG764                ANOP  ,                                           02385600
&ZTLC                 SETC 'GREATEROREQUAL'                             02385700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG765         02385800
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02385900
                      AIF   (N'&KEYREQTYPE LE 1).ZG764A  CK NUM         02386000
&ZMS                  SETC  '"KEYREQTYPE='                              02386100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02386200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02386300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02386400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02386500
.ZG764A               ANOP  ,                                           02386600
.*------------------------------------------------------------------    02386700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02386800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02386900
.ZG764A0              AIF   (K'&KEYRANGEEND LE 0).ZG764A1  OK           02387000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02387100
.ZG764A1              AIF   (K'&ZCVAL LE 0).ZG764A2  OK                 02387200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02387300
&ZMS                  SETC  '"KEYREQTYPE'                               02387400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02387500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02387600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02387700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02387800
.ZG764A2              ANOP  ,                                           02387900
.*-------------------------------------------------------------------   02388000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02388100
.ZG765                ANOP  ,                                           02388200
&ZTLC                 SETC 'RANGE'                                      02388300
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG769         02388400
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02388500
                      AIF   (N'&KEYREQTYPE LE 1).ZG765A  CK NUM         02388600
&ZMS                  SETC  '"KEYREQTYPE='                              02388700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02388800
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02388900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02389000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02389100
.ZG765A               ANOP  ,                                           02389200
.*----------------------------------------------------------------***   02389300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02389400
                      AIF   (N'&KEYRANGEEND LE 1).ZG767A  CK NUM        02389500
&ZMS                  SETC  '"KEYRANGEEND='                             02389600
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02389700
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02389800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02389900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02390000
.ZG767A               ANOP  ,                                           02390100
.*-------------------------------------------------------------------   02390200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02390300
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02390400
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02390500
                      AIF   (N'&KEYRANGEEND GT 1).ZG767B  MULTI         02390600
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02390700
.ZG767B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG767C             02390800
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02390900
&ZMS                  SETC  ' '                                         02391000
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02391100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02391200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02391300
.ZG767C               ANOP  ,                                           02391400
.*-------------------------------------------------------------------   02391500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02391600
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG767R  NOT I/O     02391700
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG767R        02391800
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02391900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG767P               02392000
                      AIF   (K'&ZCGPR GT 2).ZG767Q                      02392100
                      AIF   ('&ZCGPR' EQ '0').ZG767Q                    02392200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02392300
                      AIF   (T'&ZCGPR NE 'N').ZG767Q  INVALID REG NAME  02392400
.ZG767P               ANOP  ,                                           02392500
                      AIF   (T'&ZCGPR NE 'N').ZG767R  NON NUMERIC       02392600
                      AIF   ('&ZCGPR' LT '2').ZG767Q                    02392700
                      AIF   ('&ZCGPR' LE '12').ZG767R                   02392800
.ZG767Q               ANOP  ,                                           02392900
&ZMS                  SETC  '"KEYRANGEEND='                             02393000
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02393100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02393200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02393300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02393400
.ZG767R               ANOP  ,                                           02393500
.*------------------------------------------------------------------    02393600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02393700
.ZG769                ANOP  ,                                           02393800
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02393900
                      AIF   (K'&XKEYREQTYPE GT 0).ZG769E  VALID ARG     02394000
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG769D  OMITTED      02394100
&ZASYSLNDX            SETA  0                                           02394200
.ZG769A               ANOP  ,           POSITIONAL MACRO KEY            02394300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02394400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG769C           02394500
&ZTLC                 SETC 'KEYREQTYPE'                                 02394600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG769A  02394700
.ZG769B               ANOP  ,                                           02394800
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02394900
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      02395000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02395100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02395200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02395300
                      AGO   .ZG769E                                     02395400
.ZG769C               ANOP  ,                                           02395500
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02395600
&ZMS                  SETC  '"KEYREQTYPE='                              02395700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02395800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02395900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02396000
&ZMS                  SETC  '&ZMS "EQUAL",'                             02396100
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02396200
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02396300
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02396400
                      MNOTE 8,' &ZMS '                                  02396500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02396600
                      AGO   .ZG769E                                     02396700
.ZG769D               ANOP  ,                                           02396800
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02396900
.ZG769E               ANOP  ,                                           02397000
.*------------------------------------------------------------------    02397100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02397200
.ZG770                ANOP  ,                                           02397300
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02397400
                      AIF   (K'&XKEYCOMPARE GT 0).ZG770E  VALID ARG     02397500
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG770D  OMITTED      02397600
&ZASYSLNDX            SETA  0                                           02397700
.ZG770A               ANOP  ,           POSITIONAL MACRO KEY            02397800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02397900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG770C           02398000
&ZTLC                 SETC 'KEYCOMPARE'                                 02398100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG770A  02398200
.ZG770B               ANOP  ,                                           02398300
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02398400
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      02398500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02398600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02398700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02398800
                      AGO   .ZG770E                                     02398900
.ZG770C               ANOP  ,                                           02399000
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02399100
&ZMS                  SETC  '"KEYCOMPARE='                              02399200
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02399300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02399400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02399500
&ZMS                  SETC  '&ZMS "NO"'                                 02399600
&ZMS                  SETC  '&ZMS OR "YES".'                            02399700
                      MNOTE 8,' &ZMS '                                  02399800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02399900
                      AGO   .ZG770E                                     02400000
.ZG770D               ANOP  ,                                           02400100
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02400200
.ZG770E               ANOP  ,                                           02400300
.*------------------------------------------------------------------    02400400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02400500
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02400600
.*-------------------------------------------------------------------   02400700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02400800
.ZG773                ANOP  ,                                           02400900
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG773A             02401000
&ZTLC                 SETC 'NO'                                         02401100
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG774        02401200
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02401300
                      AIF   (N'&SKEYCOMPARE LE 1).ZG773A  CK NUM        02401400
&ZMS                  SETC  '"SKEYCOMPARE='                             02401500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02401600
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02401700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02401800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02401900
.ZG773A               ANOP  ,                                           02402000
.*------------------------------------------------------------------    02402100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02402200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02402300
.ZG773A0              AIF   (K'&SECONDARYKEY LE 0).ZG773A1  OK          02402400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02402500
.ZG773A1              AIF   (K'&SKEYREQTYPE LE 0).ZG773A2  OK           02402600
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02402700
.ZG773A2              AIF   (K'&SKEYRANGEEND LE 0).ZG773A3  OK          02402800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02402900
.ZG773A3              AIF   (K'&ZCVAL LE 0).ZG773A4  OK                 02403000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02403100
&ZMS                  SETC  '"SKEYCOMPARE'                              02403200
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02403300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02403400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02403500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02403600
.ZG773A4              ANOP  ,                                           02403700
.*-------------------------------------------------------------------   02403800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02403900
.ZG774                ANOP  ,                                           02404000
&ZTLC                 SETC 'YES'                                        02404100
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG788        02404200
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02404300
                      AIF   (N'&SKEYCOMPARE LE 1).ZG774A  CK NUM        02404400
&ZMS                  SETC  '"SKEYCOMPARE='                             02404500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02404600
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02404700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02404800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02404900
.ZG774A               ANOP  ,                                           02405000
.*----------------------------------------------------------------***   02405100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02405200
                      AIF   (N'&SECONDARYKEY LE 1).ZG776A  CK NUM       02405300
&ZMS                  SETC  '"SECONDARYKEY='                            02405400
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02405500
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02405600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02405700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02405800
.ZG776A               ANOP  ,                                           02405900
.*-------------------------------------------------------------------   02406000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02406100
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02406200
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02406300
                      AIF   (N'&SECONDARYKEY GT 1).ZG776B  MULTI        02406400
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02406500
.ZG776B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG776C            02406600
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02406700
&ZMS                  SETC  ' '                                         02406800
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02406900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02407000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02407100
.ZG776C               ANOP  ,                                           02407200
.*-------------------------------------------------------------------   02407300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02407400
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG776R  NOT I/O    02407500
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG776R       02407600
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02407700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG776P               02407800
                      AIF   (K'&ZCGPR GT 2).ZG776Q                      02407900
                      AIF   ('&ZCGPR' EQ '0').ZG776Q                    02408000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02408100
                      AIF   (T'&ZCGPR NE 'N').ZG776Q  INVALID REG NAME  02408200
.ZG776P               ANOP  ,                                           02408300
                      AIF   (T'&ZCGPR NE 'N').ZG776R  NON NUMERIC       02408400
                      AIF   ('&ZCGPR' LT '2').ZG776Q                    02408500
                      AIF   ('&ZCGPR' LE '12').ZG776R                   02408600
.ZG776Q               ANOP  ,                                           02408700
&ZMS                  SETC  '"SECONDARYKEY='                            02408800
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02408900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02409000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02409100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02409200
.ZG776R               ANOP  ,                                           02409300
.*------------------------------------------------------------------    02409400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02409500
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02409600
.*-------------------------------------------------------------------   02409700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02409800
.ZG780                ANOP  ,                                           02409900
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG780A             02410000
&ZTLC                 SETC 'EQUAL'                                      02410100
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG781        02410200
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02410300
                      AIF   (N'&SKEYREQTYPE LE 1).ZG780A  CK NUM        02410400
&ZMS                  SETC  '"SKEYREQTYPE='                             02410500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02410600
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02410700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02410800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02410900
.ZG780A               ANOP  ,                                           02411000
.*------------------------------------------------------------------    02411100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02411200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02411300
.ZG780A0              AIF   (K'&SKEYRANGEEND LE 0).ZG780A1  OK          02411400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02411500
.ZG780A1              AIF   (K'&ZCVAL LE 0).ZG780A2  OK                 02411600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02411700
&ZMS                  SETC  '"SKEYREQTYPE'                              02411800
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02411900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02412000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02412100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02412200
.ZG780A2              ANOP  ,                                           02412300
.*-------------------------------------------------------------------   02412400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02412500
.ZG781                ANOP  ,                                           02412600
&ZTLC                 SETC 'LESSOREQUAL'                                02412700
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG782        02412800
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02412900
                      AIF   (N'&SKEYREQTYPE LE 1).ZG781A  CK NUM        02413000
&ZMS                  SETC  '"SKEYREQTYPE='                             02413100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02413200
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02413300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02413400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02413500
.ZG781A               ANOP  ,                                           02413600
.*------------------------------------------------------------------    02413700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02413800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02413900
.ZG781A0              AIF   (K'&SKEYRANGEEND LE 0).ZG781A1  OK          02414000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02414100
.ZG781A1              AIF   (K'&ZCVAL LE 0).ZG781A2  OK                 02414200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02414300
&ZMS                  SETC  '"SKEYREQTYPE'                              02414400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02414500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02414600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02414700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02414800
.ZG781A2              ANOP  ,                                           02414900
.*-------------------------------------------------------------------   02415000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02415100
.ZG782                ANOP  ,                                           02415200
&ZTLC                 SETC 'GREATEROREQUAL'                             02415300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG783        02415400
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02415500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG782A  CK NUM        02415600
&ZMS                  SETC  '"SKEYREQTYPE='                             02415700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02415800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02415900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02416000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02416100
.ZG782A               ANOP  ,                                           02416200
.*------------------------------------------------------------------    02416300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02416400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02416500
.ZG782A0              AIF   (K'&SKEYRANGEEND LE 0).ZG782A1  OK          02416600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02416700
.ZG782A1              AIF   (K'&ZCVAL LE 0).ZG782A2  OK                 02416800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02416900
&ZMS                  SETC  '"SKEYREQTYPE'                              02417000
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02417100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02417200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02417300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02417400
.ZG782A2              ANOP  ,                                           02417500
.*-------------------------------------------------------------------   02417600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02417700
.ZG783                ANOP  ,                                           02417800
&ZTLC                 SETC 'RANGE'                                      02417900
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG787        02418000
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02418100
                      AIF   (N'&SKEYREQTYPE LE 1).ZG783A  CK NUM        02418200
&ZMS                  SETC  '"SKEYREQTYPE='                             02418300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02418400
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02418500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02418600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02418700
.ZG783A               ANOP  ,                                           02418800
.*----------------------------------------------------------------***   02418900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02419000
                      AIF   (N'&SKEYRANGEEND LE 1).ZG785A  CK NUM       02419100
&ZMS                  SETC  '"SKEYRANGEEND='                            02419200
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02419300
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02419400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02419500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02419600
.ZG785A               ANOP  ,                                           02419700
.*-------------------------------------------------------------------   02419800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02419900
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02420000
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02420100
                      AIF   (N'&SKEYRANGEEND GT 1).ZG785B  MULTI        02420200
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02420300
.ZG785B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG785C            02420400
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02420500
&ZMS                  SETC  ' '                                         02420600
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02420700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02420800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02420900
.ZG785C               ANOP  ,                                           02421000
.*-------------------------------------------------------------------   02421100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02421200
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG785R  NOT I/O    02421300
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG785R       02421400
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02421500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG785P               02421600
                      AIF   (K'&ZCGPR GT 2).ZG785Q                      02421700
                      AIF   ('&ZCGPR' EQ '0').ZG785Q                    02421800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02421900
                      AIF   (T'&ZCGPR NE 'N').ZG785Q  INVALID REG NAME  02422000
.ZG785P               ANOP  ,                                           02422100
                      AIF   (T'&ZCGPR NE 'N').ZG785R  NON NUMERIC       02422200
                      AIF   ('&ZCGPR' LT '2').ZG785Q                    02422300
                      AIF   ('&ZCGPR' LE '12').ZG785R                   02422400
.ZG785Q               ANOP  ,                                           02422500
&ZMS                  SETC  '"SKEYRANGEEND='                            02422600
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02422700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02422800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02422900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02423000
.ZG785R               ANOP  ,                                           02423100
.*------------------------------------------------------------------    02423200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02423300
.ZG787                ANOP  ,                                           02423400
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02423500
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG787E  VALID ARG    02423600
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG787D  OMITTED     02423700
&ZASYSLNDX            SETA  0                                           02423800
.ZG787A               ANOP  ,           POSITIONAL MACRO KEY            02423900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02424000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG787C           02424100
&ZTLC                 SETC 'SKEYREQTYPE'                                02424200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG787A  02424300
.ZG787B               ANOP  ,                                           02424400
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02424500
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     02424600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02424700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02424800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02424900
                      AGO   .ZG787E                                     02425000
.ZG787C               ANOP  ,                                           02425100
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02425200
&ZMS                  SETC  '"SKEYREQTYPE='                             02425300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02425400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02425500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02425600
&ZMS                  SETC  '&ZMS "EQUAL",'                             02425700
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02425800
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02425900
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02426000
                      MNOTE 8,' &ZMS '                                  02426100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02426200
                      AGO   .ZG787E                                     02426300
.ZG787D               ANOP  ,                                           02426400
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02426500
.ZG787E               ANOP  ,                                           02426600
.*------------------------------------------------------------------    02426700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02426800
.ZG788                ANOP  ,                                           02426900
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02427000
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG788E  VALID ARG    02427100
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG788D  OMITTED     02427200
&ZASYSLNDX            SETA  0                                           02427300
.ZG788A               ANOP  ,           POSITIONAL MACRO KEY            02427400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02427500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG788C           02427600
&ZTLC                 SETC 'SKEYCOMPARE'                                02427700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG788A  02427800
.ZG788B               ANOP  ,                                           02427900
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02428000
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     02428100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02428200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02428300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02428400
                      AGO   .ZG788E                                     02428500
.ZG788C               ANOP  ,                                           02428600
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02428700
&ZMS                  SETC  '"SKEYCOMPARE='                             02428800
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02428900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02429000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02429100
&ZMS                  SETC  '&ZMS "NO"'                                 02429200
&ZMS                  SETC  '&ZMS OR "YES".'                            02429300
                      MNOTE 8,' &ZMS '                                  02429400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02429500
                      AGO   .ZG788E                                     02429600
.ZG788D               ANOP  ,                                           02429700
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02429800
.ZG788E               ANOP  ,                                           02429900
.*------------------------------------------------------------------    02430000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02430100
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02430200
.*-------------------------------------------------------------------   02430300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02430400
.ZG791                ANOP  ,                                           02430500
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG791A             02430600
&ZTLC                 SETC 'NO'                                         02430700
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG792        02430800
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02430900
                      AIF   (N'&VERSCOMPARE LE 1).ZG791A  CK NUM        02431000
&ZMS                  SETC  '"VERSCOMPARE='                             02431100
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02431200
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02431300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02431400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02431500
.ZG791A               ANOP  ,                                           02431600
.*------------------------------------------------------------------    02431700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02431800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02431900
.ZG791A0              AIF   (K'&VERSCOMP LE 0).ZG791A1  OK              02432000
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02432100
.ZG791A1              AIF   (K'&VERSCOMPTYPE LE 0).ZG791A2  OK          02432200
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02432300
.ZG791A2              AIF   (K'&ZCVAL LE 0).ZG791A3  OK                 02432400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02432500
&ZMS                  SETC  '"VERSCOMPARE'                              02432600
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02432700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02432800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02432900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02433000
.ZG791A3              ANOP  ,                                           02433100
.*-------------------------------------------------------------------   02433200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02433300
.ZG792                ANOP  ,                                           02433400
&ZTLC                 SETC 'YES'                                        02433500
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG801        02433600
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02433700
                      AIF   (N'&VERSCOMPARE LE 1).ZG792A  CK NUM        02433800
&ZMS                  SETC  '"VERSCOMPARE='                             02433900
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02434000
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02434100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02434200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02434300
.ZG792A               ANOP  ,                                           02434400
.*----------------------------------------------------------------***   02434500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02434600
                      AIF   (N'&VERSCOMP LE 1).ZG794A  CK NUM           02434700
&ZMS                  SETC  '"VERSCOMP='                                02434800
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02434900
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02435000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02435100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02435200
.ZG794A               ANOP  ,                                           02435300
.*-------------------------------------------------------------------   02435400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02435500
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02435600
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02435700
                      AIF   (N'&VERSCOMP GT 1).ZG794B  MULTI            02435800
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02435900
.ZG794B               AIF   (K'&VERSCOMP(1) GT 0).ZG794C                02436000
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02436100
&ZMS                  SETC  ' '                                         02436200
&ZMS                  SETC  '&ZMS "VERSCOMP" KEY AND ITS'               02436300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02436400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02436500
.ZG794C               ANOP  ,                                           02436600
.*-------------------------------------------------------------------   02436700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02436800
                      AIF   (K'&ZXVERSCOMP LE 0).ZG794R  NOT I/O        02436900
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG794R           02437000
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02437100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG794P               02437200
                      AIF   (K'&ZCGPR GT 2).ZG794Q                      02437300
                      AIF   ('&ZCGPR' EQ '0').ZG794Q                    02437400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02437500
                      AIF   (T'&ZCGPR NE 'N').ZG794Q  INVALID REG NAME  02437600
.ZG794P               ANOP  ,                                           02437700
                      AIF   (T'&ZCGPR NE 'N').ZG794R  NON NUMERIC       02437800
                      AIF   ('&ZCGPR' LT '2').ZG794Q                    02437900
                      AIF   ('&ZCGPR' LE '12').ZG794R                   02438000
.ZG794Q               ANOP  ,                                           02438100
&ZMS                  SETC  '"VERSCOMP='                                02438200
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02438300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02438400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02438500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02438600
.ZG794R               ANOP  ,                                           02438700
.*----------------------------------------------------------------***   02438800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02438900
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG796A  CK NUM       02439000
&ZMS                  SETC  '"VERSCOMPTYPE='                            02439100
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02439200
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02439300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02439400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02439500
.ZG796A               ANOP  ,                                           02439600
.*-------------------------------------------------------------------   02439700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02439800
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02439900
.ZG797A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG798A                  02440000
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02440100
.*-------------------------------------------------------------------   02440200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02440300
.ZG798A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG799A            02440400
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02440500
.*-------------------------------------------------------------------   02440600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02440700
.ZG799A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG799C  KEYWORD     02440800
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG799B            02440900
&ZMS                  SETC  '"VERSCOMPTYPE='                            02441000
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02441100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02441200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02441300
&ZMS                  SETC  '&ZMS "EQUAL"'                              02441400
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02441500
                      MNOTE 8,' &ZMS '                                  02441600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02441700
.ZG799B               ANOP  ,                                           02441800
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02441900
.ZG799C               ANOP  ,                                           02442000
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02442100
.*-------------------------------------------------------------------   02442200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02442300
                      AIF   (K'&VERSCOMP(1) GT 0).ZG799D  KEY           02442400
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG799D  PARM      02442500
&ZMS                  SETC  '"VERSCOMPTYPE'                             02442600
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02442700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02442800
&ZMS                  SETC  '&ZMS '                                     02442900
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02443000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02443100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02443200
.ZG799D               ANOP  ,                                           02443300
.*------------------------------------------------------------------    02443400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02443500
.ZG801                ANOP  ,                                           02443600
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02443700
                      AIF   (K'&XVERSCOMPARE GT 0).ZG801E  VALID ARG    02443800
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG801D  OMITTED     02443900
&ZASYSLNDX            SETA  0                                           02444000
.ZG801A               ANOP  ,           POSITIONAL MACRO KEY            02444100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02444200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG801C           02444300
&ZTLC                 SETC 'VERSCOMPARE'                                02444400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG801A  02444500
.ZG801B               ANOP  ,                                           02444600
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02444700
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'                     02444800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02444900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02445000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02445100
                      AGO   .ZG801E                                     02445200
.ZG801C               ANOP  ,                                           02445300
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02445400
&ZMS                  SETC  '"VERSCOMPARE='                             02445500
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02445600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02445700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02445800
&ZMS                  SETC  '&ZMS "NO"'                                 02445900
&ZMS                  SETC  '&ZMS OR "YES".'                            02446000
                      MNOTE 8,' &ZMS '                                  02446100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02446200
                      AGO   .ZG801E                                     02446300
.ZG801D               ANOP  ,                                           02446400
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02446500
.ZG801E               ANOP  ,                                           02446600
.*----------------------------------------------------------------***   02446700
.***AG.KMEKY01 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     02446800
&XDATAREA3            SETC  ''          INITIALIZE XVARIABLE            02446900
                      AIF   (K'&BUFLIST LE 0).ZG803C                    02447000
&ZXDATAREA3           SETC  'OUTPUT'    SET IN/OUTPUT                   02447100
&XDATAREA3            SETC  'BUFLIST'   SET XVARIABLE                   02447200
&ZXBUFLIST            SETC  'OUTPUT'    SET IN/OUTPUT                   02447300
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      02447400
                      AIF   (N'&BUFLIST GT 1).ZG803A                    02447500
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              02447600
.ZG803A               AIF   (N'&BUFLIST LE 1).ZG803B  CK NUM            02447700
&ZMS                  SETC  '"BUFLIST='                                 02447800
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02447900
&ZMS                  SETC  '&ZMS "BUFLIST"'                            02448000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02448100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02448200
.ZG803B               AIF   (K'&XBUFLIST GT 0).ZG803C  ONE PARM         02448300
&ZXDATAREA3           SETC  ''          RESET IN/OUTPUT                 02448400
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02448500
&ZMS                  SETC  ' '                                         02448600
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                02448700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02448800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02448900
.ZG803C               ANOP  ,                                           02449000
.*----------------------------------------------------------------***   02449100
.***AG.KMEKY02 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     02449200
                      AIF   (K'&BUFFER LE 0).ZG833D  NO ME KEY          02449300
                      AIF   (N'&BUFFER LE 1).ZG833A  CK NUM             02449400
&ZMS                  SETC  '"BUFFER='                                  02449500
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02449600
&ZMS                  SETC  '&ZMS "BUFFER"'                             02449700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02449800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02449900
.ZG833A               AIF   (K'&XDATAREA3 LE 0).ZG833B                  02450000
&ZMS                  SETC  '"BUFFER'                                   02450100
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02450200
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02450300
&ZMS                  SETC  '&ZMS "&XDATAREA3"'                         02450400
                      MNOTE 8,' &ZMS KEY.'                              02450500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02450600
                      AGO   .ZG833D                                     02450700
.*                                                                      02450800
.ZG833B               ANOP  ,                                           02450900
&ZXDATAREA3           SETC  'OUTPUT'    SET IN/OUTPUT                   02451000
&XDATAREA3            SETC  'BUFFER'    SET XVARIABLE                   02451100
&ZXBUFFER             SETC  'OUTPUT'    SET IN/OUTPUT                   02451200
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      02451300
                      AIF   (N'&BUFFER GT 1).ZG833C                     02451400
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              02451500
.ZG833C               AIF   (K'&XBUFFER GT 0).ZG833D  ONE PARM          02451600
&ZXDATAREA3           SETC  ''          RESET IN/OUTPUT                 02451700
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 02451800
&ZMS                  SETC  ' '                                         02451900
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 02452000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02452100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02452200
.ZG833D               ANOP  ,                                           02452300
.*------------------------------------------------------------------    02452400
.***AG.KME4Y09 NAME, RQD OUTPUT, ME KEYS -CHECK IF KEY ENTERED          02452500
                      AIF   (K'&XDATAREA3 GT 0).ZG845B                  02452600
&ZXDATAREA3           SETC  ''          RESET IN/OUTPUT                 02452700
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02452800
&XDATAREA3            SETC  ''          ENSURE NULL                     02452900
&XBUFLIST             SETC  ''          ENSURE NULL                     02453000
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      02453100
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         02453200
&ZMS                  SETC  '&ZMS REQUIRED:'                            02453300
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            02453400
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           02453500
                      MNOTE 8,' &ZMS '                                  02453600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02453700
.ZG845B               ANOP  ,                                           02453800
.*-------------------------------------------------------------------   02453900
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          02454000
.ZG803ZY  AIF    ('&XDATAREA3' NE 'BUFLIST').ZG833ZY                    02454100
.*-------------------------------------------------------------------   02454200
.***AG.KMEKY14 NAME, RQD OUTPUT, ME KEYS -DISALLOWED KEYS               02454300
&ZCVAL                SETC ''           ERROR KEY FIELD                 02454400
.ZG803I0              AIF   (K'&BUFSIZE LE 0).ZG803I1                   02454500
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          02454600
.ZG803I1              AIF   (K'&ZCVAL LE 0).ZG803J  KEY                 02454700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02454800
&ZMS                  SETC  '"BUFLIST'                                  02454900
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           02455000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02455100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02455200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02455300
.ZG803J               ANOP  ,                                           02455400
.*-------------------------------------------------------------------   02455500
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                02455600
                      AIF   (K'&ZXBUFLIST LE 0).ZG803R  NOT I/O         02455700
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG803R            02455800
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                02455900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG803P               02456000
                      AIF   (K'&ZCGPR GT 2).ZG803Q                      02456100
                      AIF   ('&ZCGPR' EQ '0').ZG803Q                    02456200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02456300
                      AIF   (T'&ZCGPR NE 'N').ZG803Q  INVALID REG NAME  02456400
.ZG803P               ANOP  ,                                           02456500
                      AIF   (T'&ZCGPR NE 'N').ZG803R  NON NUMERIC       02456600
                      AIF   ('&ZCGPR' LT '2').ZG803Q                    02456700
                      AIF   ('&ZCGPR' LE '12').ZG803R                   02456800
.ZG803Q               ANOP  ,                                           02456900
&ZMS                  SETC  '"BUFLIST='                                 02457000
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02457100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02457200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02457300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02457400
.ZG803R               ANOP  ,                                           02457500
.*------------------------------------------------------------------    02457600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02457700
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            02457800
.*-------------------------------------------------------------------   02457900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02458000
.ZG806                ANOP  ,                                           02458100
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG806A             02458200
&ZTLC                 SETC 'VIRTUAL'                                    02458300
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG823        02458400
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     02458500
                      AIF   (N'&BUFADDRTYPE LE 1).ZG806A  CK NUM        02458600
&ZMS                  SETC  '"BUFADDRTYPE='                             02458700
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02458800
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02458900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02459000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02459100
.ZG806A               ANOP  ,                                           02459200
.*------------------------------------------------------------------    02459300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02459400
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02459500
.*-------------------------------------------------------------------   02459600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02459700
.ZG809                ANOP  ,                                           02459800
                      AIF   (K'&PAGEABLE(1) LE 0).ZG809A                02459900
&ZTLC                 SETC 'YES'                                        02460000
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG813           02460100
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02460200
                      AIF   (N'&PAGEABLE LE 1).ZG809A  CK NUM           02460300
&ZMS                  SETC  '"PAGEABLE='                                02460400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02460500
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02460600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02460700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02460800
.ZG809A               ANOP  ,                                           02460900
.*----------------------------------------------------------------***   02461000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02461100
                      AIF   (N'&BUFSTGKEY LE 1).ZG811A  CK NUM          02461200
&ZMS                  SETC  '"BUFSTGKEY='                               02461300
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02461400
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02461500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02461600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02461700
.ZG811A               ANOP  ,                                           02461800
.*-------------------------------------------------------------------   02461900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02462000
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02462100
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02462200
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG811B  PARM         02462300
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02462400
                      AIF   (N'&BUFSTGKEY GT 1).ZG811B  MULTI           02462500
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02462600
.ZG811B               ANOP  ,                                           02462700
.*-------------------------------------------------------------------   02462800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02462900
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG811R  NOT I/O       02463000
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG811R                  02463100
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG811R          02463200
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02463300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG811P               02463400
                      AIF   (K'&ZCGPR GT 2).ZG811Q                      02463500
                      AIF   ('&ZCGPR' EQ '0').ZG811Q                    02463600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02463700
                      AIF   (T'&ZCGPR NE 'N').ZG811Q  INVALID REG NAME  02463800
.ZG811P               ANOP  ,                                           02463900
                      AIF   (T'&ZCGPR NE 'N').ZG811R  NON NUMERIC       02464000
                      AIF   ('&ZCGPR' LT '2').ZG811Q                    02464100
                      AIF   ('&ZCGPR' LE '12').ZG811R                   02464200
.ZG811Q               ANOP  ,                                           02464300
&ZMS                  SETC  '"BUFSTGKEY='                               02464400
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02464500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02464600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02464700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02464800
.ZG811R               ANOP  ,                                           02464900
.*-------------------------------------------------------------------   02465000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02465100
.ZG813                ANOP  ,                                           02465200
&ZTLC                 SETC 'NO'                                         02465300
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG814           02465400
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02465500
                      AIF   (N'&PAGEABLE LE 1).ZG813A  CK NUM           02465600
&ZMS                  SETC  '"PAGEABLE='                                02465700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02465800
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02465900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02466000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02466100
.ZG813A               ANOP  ,                                           02466200
.*------------------------------------------------------------------    02466300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02466400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02466500
.ZG813A0              AIF   (K'&BUFSTGKEY LE 0).ZG813A1  OK             02466600
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02466700
.ZG813A1              AIF   (K'&ZCVAL LE 0).ZG813A2  OK                 02466800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02466900
&ZMS                  SETC  '"PAGEABLE'                                 02467000
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02467100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02467200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02467300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02467400
.ZG813A2              ANOP  ,                                           02467500
.*------------------------------------------------------------------    02467600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02467700
.ZG814                ANOP  ,                                           02467800
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02467900
                      AIF   (K'&XPAGEABLE GT 0).ZG814E  VALID ARG       02468000
                      AIF   (T'&PAGEABLE EQ 'O').ZG814D  OMITTED        02468100
&ZASYSLNDX            SETA  0                                           02468200
.ZG814A               ANOP  ,           POSITIONAL MACRO KEY            02468300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02468400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG814C           02468500
&ZTLC                 SETC 'PAGEABLE'                                   02468600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG814A  02468700
.ZG814B               ANOP  ,                                           02468800
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02468900
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        02469000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02469100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02469200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02469300
                      AGO   .ZG814E                                     02469400
.ZG814C               ANOP  ,                                           02469500
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02469600
&ZMS                  SETC  '"PAGEABLE='                                02469700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02469800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02469900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02470000
&ZMS                  SETC  '&ZMS "YES"'                                02470100
&ZMS                  SETC  '&ZMS OR "NO".'                             02470200
                      MNOTE 8,' &ZMS '                                  02470300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02470400
                      AGO   .ZG814E                                     02470500
.ZG814D               ANOP  ,                                           02470600
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02470700
.ZG814E               ANOP  ,                                           02470800
.*----------------------------------------------------------------***   02470900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02471000
                      AIF   (N'&BUFALET LE 1).ZG816A  CK NUM            02471100
&ZMS                  SETC  '"BUFALET='                                 02471200
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02471300
&ZMS                  SETC  '&ZMS "BUFALET"'                            02471400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02471500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02471600
.ZG816A               ANOP  ,                                           02471700
.*-------------------------------------------------------------------   02471800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02471900
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   02472000
&XBUFALET             SETC  'NO_BUFALET'                                02472100
                      AIF   (K'&BUFALET(1) LE 0).ZG816B  PARM           02472200
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           02472300
                      AIF   (N'&BUFALET GT 1).ZG816B  MULTI             02472400
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   02472500
.ZG816B               ANOP  ,                                           02472600
.*-------------------------------------------------------------------   02472700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02472800
                      AIF   (K'&ZXBUFALET LE 0).ZG816R  NOT I/O         02472900
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG816R                     02473000
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG816R            02473100
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                02473200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG816P               02473300
                      AIF   (K'&ZCGPR GT 2).ZG816Q                      02473400
                      AIF   ('&ZCGPR' EQ '0').ZG816Q                    02473500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02473600
                      AIF   (T'&ZCGPR NE 'N').ZG816Q  INVALID REG NAME  02473700
.ZG816P               ANOP  ,                                           02473800
                      AIF   (T'&ZCGPR NE 'N').ZG816R  NON NUMERIC       02473900
                      AIF   ('&ZCGPR' LT '2').ZG816Q                    02474000
                      AIF   ('&ZCGPR' LE '12').ZG816R                   02474100
.ZG816Q               ANOP  ,                                           02474200
&ZMS                  SETC  '"BUFALET='                                 02474300
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02474400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02474500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02474600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02474700
.ZG816R               ANOP  ,                                           02474800
.*------------------------------------------------------------------    02474900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02475000
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            02475100
.*-------------------------------------------------------------------   02475200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02475300
.ZG820                ANOP  ,                                           02475400
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG820A             02475500
&ZTLC                 SETC '31'                                         02475600
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG821        02475700
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     02475800
                      AIF   (N'&BUFADDRSIZE LE 1).ZG820A  CK NUM        02475900
&ZMS                  SETC  '"BUFADDRSIZE='                             02476000
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02476100
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02476200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02476300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02476400
.ZG820A               ANOP  ,                                           02476500
.*-------------------------------------------------------------------   02476600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02476700
.ZG821                ANOP  ,                                           02476800
&ZTLC                 SETC '64'                                         02476900
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG822        02477000
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     02477100
                      AIF   (N'&BUFADDRSIZE LE 1).ZG821A  CK NUM        02477200
&ZMS                  SETC  '"BUFADDRSIZE='                             02477300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02477400
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02477500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02477600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02477700
.ZG821A               ANOP  ,                                           02477800
.*------------------------------------------------------------------    02477900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02478000
.ZG822                ANOP  ,                                           02478100
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   02478200
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG822E  VALID ARG    02478300
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG822D  OMITTED     02478400
&ZASYSLNDX            SETA  0                                           02478500
.ZG822A               ANOP  ,           POSITIONAL MACRO KEY            02478600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02478700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG822C           02478800
&ZTLC                 SETC 'BUFADDRSIZE'                                02478900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG822A  02479000
.ZG822B               ANOP  ,                                           02479100
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02479200
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     02479300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02479400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02479500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02479600
                      AGO   .ZG822E                                     02479700
.ZG822C               ANOP  ,                                           02479800
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02479900
&ZMS                  SETC  '"BUFADDRSIZE='                             02480000
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02480100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02480200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02480300
&ZMS                  SETC  '&ZMS "31"'                                 02480400
&ZMS                  SETC  '&ZMS OR "64".'                             02480500
                      MNOTE 8,' &ZMS '                                  02480600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02480700
                      AGO   .ZG822E                                     02480800
.ZG822D               ANOP  ,                                           02480900
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             02481000
.ZG822E               ANOP  ,                                           02481100
.*-------------------------------------------------------------------   02481200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02481300
.ZG823                ANOP  ,                                           02481400
&ZTLC                 SETC 'REAL'                                       02481500
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG829        02481600
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     02481700
                      AIF   (N'&BUFADDRTYPE LE 1).ZG823A  CK NUM        02481800
&ZMS                  SETC  '"BUFADDRTYPE='                             02481900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02482000
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02482100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02482200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02482300
.ZG823A               ANOP  ,                                           02482400
.*------------------------------------------------------------------    02482500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02482600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02482700
.ZG823A0              AIF   (K'&PAGEABLE LE 0).ZG823A1  OK              02482800
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      02482900
.ZG823A1              AIF   (K'&BUFSTGKEY LE 0).ZG823A2  OK             02483000
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02483100
.ZG823A2              AIF   (K'&BUFALET LE 0).ZG823A3  OK               02483200
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      02483300
.ZG823A3              AIF   (K'&ZCVAL LE 0).ZG823A4  OK                 02483400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02483500
&ZMS                  SETC  '"BUFADDRTYPE'                              02483600
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       02483700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02483800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02483900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02484000
.ZG823A4              ANOP  ,                                           02484100
.*------------------------------------------------------------------    02484200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02484300
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            02484400
.*-------------------------------------------------------------------   02484500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02484600
.ZG826                ANOP  ,                                           02484700
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG826A             02484800
&ZTLC                 SETC '31'                                         02484900
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG827        02485000
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     02485100
                      AIF   (N'&BUFADDRSIZE LE 1).ZG826A  CK NUM        02485200
&ZMS                  SETC  '"BUFADDRSIZE='                             02485300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02485400
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02485500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02485600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02485700
.ZG826A               ANOP  ,                                           02485800
.*-------------------------------------------------------------------   02485900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02486000
.ZG827                ANOP  ,                                           02486100
&ZTLC                 SETC '64'                                         02486200
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG828        02486300
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     02486400
                      AIF   (N'&BUFADDRSIZE LE 1).ZG827A  CK NUM        02486500
&ZMS                  SETC  '"BUFADDRSIZE='                             02486600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02486700
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02486800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02486900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02487000
.ZG827A               ANOP  ,                                           02487100
.*------------------------------------------------------------------    02487200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02487300
.ZG828                ANOP  ,                                           02487400
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   02487500
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG828E  VALID ARG    02487600
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG828D  OMITTED     02487700
&ZASYSLNDX            SETA  0                                           02487800
.ZG828A               ANOP  ,           POSITIONAL MACRO KEY            02487900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02488000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG828C           02488100
&ZTLC                 SETC 'BUFADDRSIZE'                                02488200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG828A  02488300
.ZG828B               ANOP  ,                                           02488400
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02488500
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     02488600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02488700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02488800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02488900
                      AGO   .ZG828E                                     02489000
.ZG828C               ANOP  ,                                           02489100
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02489200
&ZMS                  SETC  '"BUFADDRSIZE='                             02489300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02489400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02489500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02489600
&ZMS                  SETC  '&ZMS "31"'                                 02489700
&ZMS                  SETC  '&ZMS OR "64".'                             02489800
                      MNOTE 8,' &ZMS '                                  02489900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02490000
                      AGO   .ZG828E                                     02490100
.ZG828D               ANOP  ,                                           02490200
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             02490300
.ZG828E               ANOP  ,                                           02490400
.*------------------------------------------------------------------    02490500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02490600
.ZG829                ANOP  ,                                           02490700
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02490800
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG829E  VALID ARG    02490900
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG829D  OMITTED     02491000
&ZASYSLNDX            SETA  0                                           02491100
.ZG829A               ANOP  ,           POSITIONAL MACRO KEY            02491200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02491300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG829C           02491400
&ZTLC                 SETC 'BUFADDRTYPE'                                02491500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG829A  02491600
.ZG829B               ANOP  ,                                           02491700
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 02491800
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     02491900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02492000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02492100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02492200
                      AGO   .ZG829E                                     02492300
.ZG829C               ANOP  ,                                           02492400
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 02492500
&ZMS                  SETC  '"BUFADDRTYPE='                             02492600
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02492700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02492800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02492900
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            02493000
&ZMS                  SETC  '&ZMS OR "REAL".'                           02493100
                      MNOTE 8,' &ZMS '                                  02493200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02493300
                      AGO   .ZG829E                                     02493400
.ZG829D               ANOP  ,                                           02493500
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             02493600
.ZG829E               ANOP  ,                                           02493700
.*----------------------------------------------------------------***   02493800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02493900
                      AIF   (N'&BUFNUM LE 1).ZG831A  CK NUM             02494000
&ZMS                  SETC  '"BUFNUM='                                  02494100
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             02494200
&ZMS                  SETC  '&ZMS "BUFNUM"'                             02494300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02494400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02494500
.ZG831A               ANOP  ,                                           02494600
.*-------------------------------------------------------------------   02494700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02494800
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   02494900
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           02495000
                      AIF   (N'&BUFNUM GT 1).ZG831B  MULTI              02495100
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   02495200
.ZG831B               AIF   (K'&BUFNUM(1) GT 0).ZG831C                  02495300
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 02495400
&ZMS                  SETC  ' '                                         02495500
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 02495600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02495700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02495800
.ZG831C               ANOP  ,                                           02495900
.*-------------------------------------------------------------------   02496000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02496100
                      AIF   (K'&ZXBUFNUM LE 0).ZG831R  NOT I/O          02496200
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG831R             02496300
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  02496400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG831P               02496500
                      AIF   (K'&ZCGPR GT 2).ZG831Q                      02496600
                      AIF   ('&ZCGPR' EQ '0').ZG831Q                    02496700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02496800
                      AIF   (T'&ZCGPR NE 'N').ZG831Q  INVALID REG NAME  02496900
.ZG831P               ANOP  ,                                           02497000
                      AIF   (T'&ZCGPR NE 'N').ZG831R  NON NUMERIC       02497100
                      AIF   ('&ZCGPR' LT '2').ZG831Q                    02497200
                      AIF   ('&ZCGPR' LE '12').ZG831R                   02497300
.ZG831Q               ANOP  ,                                           02497400
&ZMS                  SETC  '"BUFNUM='                                  02497500
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             02497600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02497700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02497800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02497900
.ZG831R               ANOP  ,                                           02498000
.*-------------------------------------------------------------------   02498100
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          02498200
.ZG833ZY  AIF    ('&XDATAREA3' NE 'BUFFER').ZG845ZY                     02498300
.*-------------------------------------------------------------------   02498400
.***AG.KMEKY14 NAME, RQD OUTPUT, ME KEYS -DISALLOWED KEYS               02498500
&ZCVAL                SETC ''           ERROR KEY FIELD                 02498600
.ZG833I0              AIF   (K'&BUFADDRTYPE LE 0).ZG833I1               02498700
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         02498800
.ZG833I1              AIF   (K'&BUFALET LE 0).ZG833I2                   02498900
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          02499000
.ZG833I2              AIF   (K'&BUFADDRSIZE LE 0).ZG833I3               02499100
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         02499200
.ZG833I3              AIF   (K'&BUFNUM LE 0).ZG833I4                    02499300
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          02499400
.ZG833I4              AIF   (K'&ZCVAL LE 0).ZG833J  KEY                 02499500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02499600
&ZMS                  SETC  '"BUFFER'                                   02499700
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02499800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02499900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02500000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02500100
.ZG833J               ANOP  ,                                           02500200
.*-------------------------------------------------------------------   02500300
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                02500400
                      AIF   (K'&ZXBUFFER LE 0).ZG833R  NOT I/O          02500500
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG833R             02500600
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  02500700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG833P               02500800
                      AIF   (K'&ZCGPR GT 2).ZG833Q                      02500900
                      AIF   ('&ZCGPR' EQ '0').ZG833Q                    02501000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02501100
                      AIF   (T'&ZCGPR NE 'N').ZG833Q  INVALID REG NAME  02501200
.ZG833P               ANOP  ,                                           02501300
                      AIF   (T'&ZCGPR NE 'N').ZG833R  NON NUMERIC       02501400
                      AIF   ('&ZCGPR' LT '2').ZG833Q                    02501500
                      AIF   ('&ZCGPR' LE '12').ZG833R                   02501600
.ZG833Q               ANOP  ,                                           02501700
&ZMS                  SETC  '"BUFFER='                                  02501800
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02501900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02502000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02502100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02502200
.ZG833R               ANOP  ,                                           02502300
.*------------------------------------------------------------------    02502400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02502500
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02502600
.*-------------------------------------------------------------------   02502700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02502800
.ZG836                ANOP  ,                                           02502900
                      AIF   (K'&PAGEABLE(1) LE 0).ZG836A                02503000
&ZTLC                 SETC 'YES'                                        02503100
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG840           02503200
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02503300
                      AIF   (N'&PAGEABLE LE 1).ZG836A  CK NUM           02503400
&ZMS                  SETC  '"PAGEABLE='                                02503500
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02503600
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02503700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02503800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02503900
.ZG836A               ANOP  ,                                           02504000
.*----------------------------------------------------------------***   02504100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02504200
                      AIF   (N'&BUFSTGKEY LE 1).ZG838A  CK NUM          02504300
&ZMS                  SETC  '"BUFSTGKEY='                               02504400
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02504500
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02504600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02504700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02504800
.ZG838A               ANOP  ,                                           02504900
.*-------------------------------------------------------------------   02505000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02505100
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02505200
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02505300
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG838B  PARM         02505400
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02505500
                      AIF   (N'&BUFSTGKEY GT 1).ZG838B  MULTI           02505600
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02505700
.ZG838B               ANOP  ,                                           02505800
.*-------------------------------------------------------------------   02505900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02506000
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG838R  NOT I/O       02506100
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG838R                  02506200
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG838R          02506300
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02506400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG838P               02506500
                      AIF   (K'&ZCGPR GT 2).ZG838Q                      02506600
                      AIF   ('&ZCGPR' EQ '0').ZG838Q                    02506700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02506800
                      AIF   (T'&ZCGPR NE 'N').ZG838Q  INVALID REG NAME  02506900
.ZG838P               ANOP  ,                                           02507000
                      AIF   (T'&ZCGPR NE 'N').ZG838R  NON NUMERIC       02507100
                      AIF   ('&ZCGPR' LT '2').ZG838Q                    02507200
                      AIF   ('&ZCGPR' LE '12').ZG838R                   02507300
.ZG838Q               ANOP  ,                                           02507400
&ZMS                  SETC  '"BUFSTGKEY='                               02507500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02507600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02507700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02507800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02507900
.ZG838R               ANOP  ,                                           02508000
.*-------------------------------------------------------------------   02508100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02508200
.ZG840                ANOP  ,                                           02508300
&ZTLC                 SETC 'NO'                                         02508400
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG841           02508500
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02508600
                      AIF   (N'&PAGEABLE LE 1).ZG840A  CK NUM           02508700
&ZMS                  SETC  '"PAGEABLE='                                02508800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02508900
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02509000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02509100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02509200
.ZG840A               ANOP  ,                                           02509300
.*------------------------------------------------------------------    02509400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02509500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02509600
.ZG840A0              AIF   (K'&BUFSTGKEY LE 0).ZG840A1  OK             02509700
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02509800
.ZG840A1              AIF   (K'&ZCVAL LE 0).ZG840A2  OK                 02509900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02510000
&ZMS                  SETC  '"PAGEABLE'                                 02510100
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02510200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02510300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02510400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02510500
.ZG840A2              ANOP  ,                                           02510600
.*------------------------------------------------------------------    02510700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02510800
.ZG841                ANOP  ,                                           02510900
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02511000
                      AIF   (K'&XPAGEABLE GT 0).ZG841E  VALID ARG       02511100
                      AIF   (T'&PAGEABLE EQ 'O').ZG841D  OMITTED        02511200
&ZASYSLNDX            SETA  0                                           02511300
.ZG841A               ANOP  ,           POSITIONAL MACRO KEY            02511400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02511500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG841C           02511600
&ZTLC                 SETC 'PAGEABLE'                                   02511700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG841A  02511800
.ZG841B               ANOP  ,                                           02511900
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02512000
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        02512100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02512200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02512300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02512400
                      AGO   .ZG841E                                     02512500
.ZG841C               ANOP  ,                                           02512600
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02512700
&ZMS                  SETC  '"PAGEABLE='                                02512800
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02512900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02513000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02513100
&ZMS                  SETC  '&ZMS "YES"'                                02513200
&ZMS                  SETC  '&ZMS OR "NO".'                             02513300
                      MNOTE 8,' &ZMS '                                  02513400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02513500
                      AGO   .ZG841E                                     02513600
.ZG841D               ANOP  ,                                           02513700
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02513800
.ZG841E               ANOP  ,                                           02513900
.*----------------------------------------------------------------***   02514000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02514100
                      AIF   (N'&BUFSIZE LE 1).ZG843A  CK NUM            02514200
&ZMS                  SETC  '"BUFSIZE='                                 02514300
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            02514400
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            02514500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02514600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02514700
.ZG843A               ANOP  ,                                           02514800
.*-------------------------------------------------------------------   02514900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02515000
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   02515100
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           02515200
                      AIF   (N'&BUFSIZE GT 1).ZG843B  MULTI             02515300
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   02515400
.ZG843B               AIF   (K'&BUFSIZE(1) GT 0).ZG843C                 02515500
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 02515600
&ZMS                  SETC  ' '                                         02515700
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                02515800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02515900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02516000
.ZG843C               ANOP  ,                                           02516100
.*-------------------------------------------------------------------   02516200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02516300
                      AIF   (K'&ZXBUFSIZE LE 0).ZG843R  NOT I/O         02516400
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG843R            02516500
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                02516600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG843P               02516700
                      AIF   (K'&ZCGPR GT 2).ZG843Q                      02516800
                      AIF   ('&ZCGPR' EQ '0').ZG843Q                    02516900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02517000
                      AIF   (T'&ZCGPR NE 'N').ZG843Q  INVALID REG NAME  02517100
.ZG843P               ANOP  ,                                           02517200
                      AIF   (T'&ZCGPR NE 'N').ZG843R  NON NUMERIC       02517300
                      AIF   ('&ZCGPR' LT '2').ZG843Q                    02517400
                      AIF   ('&ZCGPR' LE '12').ZG843R                   02517500
.ZG843Q               ANOP  ,                                           02517600
&ZMS                  SETC  '"BUFSIZE='                                 02517700
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            02517800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02517900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02518000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02518100
.ZG843R               ANOP  ,                                           02518200
.*-------------------------------------------------------------------   02518300
.***AG.KMEKY15 NAME, RQD OUTPUT, ME KEYS -END                           02518400
.ZG845ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     02518500
.*-------------------------------------------------------------------   02518600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02518700
.ZG846                ANOP  ,                                           02518800
&ZTLC                 SETC 'DELETE_MULT'                                02518900
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG921            02519000
&XREQUEST             SETC  'DELETE_MULT'       SET KEYWORD             02519100
                      AIF   (N'&REQUEST LE 1).ZG846A  CK NUM            02519200
&ZMS                  SETC  '"REQUEST='                                 02519300
&ZMS                  SETC  '&ZMS.&REQUEST"'                            02519400
&ZMS                  SETC  '&ZMS "REQUEST"'                            02519500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02519600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02519700
.ZG846A               ANOP  ,                                           02519800
.*------------------------------------------------------------------    02519900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02520000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02520100
.ZG846A0              AIF   (K'&TYPE LE 0).ZG846A1  OK                  02520200
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      02520300
.ZG846A1              AIF   (K'&ADJAREA LE 0).ZG846A2  OK               02520400
&ZCVAL                SETC '&ZCVAL ADJAREA'     INCORRECT KEY USED      02520500
.ZG846A2              AIF   (K'&DIRECTION LE 0).ZG846A3  OK             02520600
&ZCVAL                SETC '&ZCVAL DIRECTION'   INCORRECT KEY USED      02520700
.ZG846A3              AIF   (K'&LOCATOR LE 0).ZG846A4  OK               02520800
&ZCVAL                SETC '&ZCVAL LOCATOR'     INCORRECT KEY USED      02520900
.ZG846A4              AIF   (K'&KEYSCANTYPE LE 0).ZG846A5  OK           02521000
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02521100
.ZG846A5              AIF   (K'&ENTRYID LE 0).ZG846A6  OK               02521200
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02521300
.ZG846A6              AIF   (K'&ENTRYNAME LE 0).ZG846A7  OK             02521400
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02521500
.ZG846A7              AIF   (K'&KEYTYPE LE 0).ZG846A8  OK               02521600
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02521700
.ZG846A8              AIF   (K'&BUFLIST LE 0).ZG846A9  OK               02521800
&ZCVAL                SETC '&ZCVAL BUFLIST'     INCORRECT KEY USED      02521900
.ZG846A9              AIF   (K'&BUFADDRTYPE LE 0).ZG846A10  OK          02522000
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  INCORRECT KEY USED     02522100
.ZG846A10             AIF   (K'&PAGEABLE LE 0).ZG846A11  OK             02522200
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      02522300
.ZG846A11             AIF   (K'&BUFSTGKEY LE 0).ZG846A12  OK            02522400
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02522500
.ZG846A12             AIF   (K'&BUFALET LE 0).ZG846A13  OK              02522600
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      02522700
.ZG846A13             AIF   (K'&BUFADDRSIZE LE 0).ZG846A14  OK          02522800
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  INCORRECT KEY USED     02522900
.ZG846A14             AIF   (K'&BUFNUM LE 0).ZG846A15  OK               02523000
&ZCVAL                SETC '&ZCVAL BUFNUM'      INCORRECT KEY USED      02523100
.ZG846A15             AIF   (K'&BUFFER LE 0).ZG846A16  OK               02523200
&ZCVAL                SETC '&ZCVAL BUFFER'      INCORRECT KEY USED      02523300
.ZG846A16             AIF   (K'&BUFSIZE LE 0).ZG846A17  OK              02523400
&ZCVAL                SETC '&ZCVAL BUFSIZE'     INCORRECT KEY USED      02523500
.ZG846A17             AIF   (K'&FIRSTELEM LE 0).ZG846A18  OK            02523600
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      02523700
.ZG846A18             AIF   (K'&LASTELEM LE 0).ZG846A19  OK             02523800
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      02523900
.ZG846A19             AIF   (K'&MISCOMPARE LE 0).ZG846A20  OK           02524000
&ZCVAL                SETC '&ZCVAL MISCOMPARE'  INCORRECT KEY USED      02524100
.ZG846A20             AIF   (K'&LISTTYPE LE 0).ZG846A21  OK             02524200
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      02524300
.ZG846A21             AIF   (K'&MOVETOKEY LE 0).ZG846A22  OK            02524400
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      02524500
.ZG846A22             AIF   (K'&LISTKEYINC LE 0).ZG846A23  OK           02524600
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02524700
.ZG846A23             AIF   (K'&LISTKEYAREA LE 0).ZG846A24  OK          02524800
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02524900
.ZG846A24             AIF   (K'&MOVETOSKEY LE 0).ZG846A25  OK           02525000
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      02525100
.ZG846A25             AIF   (K'&BUFINCRNUM LE 0).ZG846A26  OK           02525200
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  INCORRECT KEY USED      02525300
.ZG846A26             AIF   (K'&ZCVAL LE 0).ZG846A27  OK                02525400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02525500
                      AIF  (K'&ZCVAL LE 160).ZG846A27A                  02525600
&ZCVAL                SETC '&ZCVAL'(1,160)                              02525700
&ZCVAL                SETC '&ZCVAL....'                                 02525800
.ZG846A27A            ANOP                                              02525900
&ZMS                  SETC  '"REQUEST'                                  02526000
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           02526100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02526200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02526300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02526400
.ZG846A27             ANOP  ,                                           02526500
.*----------------------------------------------------------------***   02526600
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      02526700
&XRESTARTTOKEN        SETC  ''          INITIALIZE XVARIABLE            02526800
                      AIF   (K'&RESTOKEN LE 0).ZG848C                   02526900
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02527000
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET XVARIABLE                   02527100
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   02527200
&XRESTOKEN            SETC  '&RESTOKEN(1)'      SET XVARIABLE PARM      02527300
                      AIF   (N'&RESTOKEN GT 1).ZG848A                   02527400
&XRESTOKEN            SETC  '&RESTOKEN'         SET XVARIABLE PARM      02527500
.ZG848A               AIF   (N'&RESTOKEN LE 1).ZG848B  CK NUM           02527600
&ZMS                  SETC  '"RESTOKEN='                                02527700
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           02527800
&ZMS                  SETC  '&ZMS "RESTOKEN"'                           02527900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02528000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02528100
.ZG848B               AIF   (K'&XRESTOKEN GT 0).ZG848C  ONE PARM        02528200
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 02528300
&ZXRESTOKEN           SETC  ''          RESET IN/OUTPUT                 02528400
&ZMS                  SETC  ' '                                         02528500
&ZMS                  SETC  '&ZMS "RESTOKEN" KEY AND ITS'               02528600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02528700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02528800
.ZG848C               ANOP  ,                                           02528900
.*----------------------------------------------------------------***   02529000
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      02529100
                      AIF   (K'&EXTRESTOKEN LE 0).ZG849D  NO ME KEY     02529200
                      AIF   (N'&EXTRESTOKEN LE 1).ZG849A  CK NUM        02529300
&ZMS                  SETC  '"EXTRESTOKEN='                             02529400
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02529500
&ZMS                  SETC  '&ZMS "EXTRESTOKEN"'                        02529600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02529700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02529800
.ZG849A               AIF   (K'&XRESTARTTOKEN LE 0).ZG849B              02529900
&ZMS                  SETC  '"EXTRESTOKEN'                              02530000
&ZMS                  SETC  '&ZMS.=&EXTRESTOKEN"'                       02530100
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02530200
&ZMS                  SETC  '&ZMS "&XRESTARTTOKEN"'                     02530300
                      MNOTE 8,' &ZMS KEY.'                              02530400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02530500
                      AGO   .ZG849D                                     02530600
.*                                                                      02530700
.ZG849B               ANOP  ,                                           02530800
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02530900
&XRESTARTTOKEN        SETC  'EXTRESTOKEN'       SET XVARIABLE           02531000
&ZXEXTRESTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   02531100
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN(1)'   SET XVARIABLE PARM      02531200
                      AIF   (N'&EXTRESTOKEN GT 1).ZG849C                02531300
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN'      SET XVARIABLE PARM      02531400
.ZG849C               AIF   (K'&XEXTRESTOKEN GT 0).ZG849D  ONE PARM     02531500
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 02531600
&ZXEXTRESTOKEN        SETC  ''          RESET IN/OUTPUT                 02531700
&ZMS                  SETC  ' '                                         02531800
&ZMS                  SETC  '&ZMS "EXTRESTOKEN" KEY AND ITS'            02531900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02532000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02532100
.ZG849D               ANOP  ,                                           02532200
.*------------------------------------------------------------------    02532300
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           02532400
                      AIF   (K'&XRESTARTTOKEN GT 0).ZG850B              02532500
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   02532600
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET DEFAULT                     02532700
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   02532800
&XRESTOKEN            SETC  'NO_RESTOKEN'       SET DEFAULT PARM        02532900
.ZG850B               ANOP  ,                                           02533000
.*-------------------------------------------------------------------   02533100
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02533200
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG850R  NOT I/O     02533300
         AIF   ('&XEXTRESTOKEN' EQ 'NO_RESTOKEN').ZG850R                02533400
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG850R        02533500
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        02533600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG850P               02533700
                      AIF   (K'&ZCGPR GT 2).ZG850Q                      02533800
                      AIF   ('&ZCGPR' EQ '0').ZG850Q                    02533900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02534000
                      AIF   (T'&ZCGPR NE 'N').ZG850Q  INVALID REG NAME  02534100
.ZG850P               ANOP  ,                                           02534200
                      AIF   (T'&ZCGPR NE 'N').ZG850R  NON NUMERIC       02534300
                      AIF   ('&ZCGPR' LT '2').ZG850Q                    02534400
                      AIF   ('&ZCGPR' LE '12').ZG850R                   02534500
.ZG850Q               ANOP  ,                                           02534600
&ZMS                  SETC  '"EXTRESTOKEN='                             02534700
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02534800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02534900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02535000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02535100
.ZG850R               ANOP  ,                                           02535200
.*-------------------------------------------------------------------   02535300
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           02535400
.ZG848ZY  AIF    ('&XRESTARTTOKEN' NE 'RESTOKEN').ZG849ZY               02535500
.*-------------------------------------------------------------------   02535600
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02535700
                      AIF   (K'&ZXRESTOKEN LE 0).ZG848R  NOT I/O        02535800
         AIF   ('&XRESTOKEN' EQ 'NO_RESTOKEN').ZG848R                   02535900
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZG848R           02536000
&ZCGPR                SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)              02536100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG848P               02536200
                      AIF   (K'&ZCGPR GT 2).ZG848Q                      02536300
                      AIF   ('&ZCGPR' EQ '0').ZG848Q                    02536400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02536500
                      AIF   (T'&ZCGPR NE 'N').ZG848Q  INVALID REG NAME  02536600
.ZG848P               ANOP  ,                                           02536700
                      AIF   (T'&ZCGPR NE 'N').ZG848R  NON NUMERIC       02536800
                      AIF   ('&ZCGPR' LT '2').ZG848Q                    02536900
                      AIF   ('&ZCGPR' LE '12').ZG848R                   02537000
.ZG848Q               ANOP  ,                                           02537100
&ZMS                  SETC  '"RESTOKEN='                                02537200
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           02537300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02537400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02537500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02537600
.ZG848R               ANOP  ,                                           02537700
.*-------------------------------------------------------------------   02537800
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           02537900
.ZG849ZY  AIF    ('&XRESTARTTOKEN' NE 'EXTRESTOKEN').ZG850ZY            02538000
.*-------------------------------------------------------------------   02538100
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 02538200
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG849R  NOT I/O     02538300
         AIF   ('&XEXTRESTOKEN' EQ 'NO_EXTRESTOKEN').ZG849R             02538400
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG849R        02538500
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        02538600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG849P               02538700
                      AIF   (K'&ZCGPR GT 2).ZG849Q                      02538800
                      AIF   ('&ZCGPR' EQ '0').ZG849Q                    02538900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02539000
                      AIF   (T'&ZCGPR NE 'N').ZG849Q  INVALID REG NAME  02539100
.ZG849P               ANOP  ,                                           02539200
                      AIF   (T'&ZCGPR NE 'N').ZG849R  NON NUMERIC       02539300
                      AIF   ('&ZCGPR' LT '2').ZG849Q                    02539400
                      AIF   ('&ZCGPR' LE '12').ZG849R                   02539500
.ZG849Q               ANOP  ,                                           02539600
&ZMS                  SETC  '"EXTRESTOKEN='                             02539700
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        02539800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02539900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02540000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02540100
.ZG849R               ANOP  ,                                           02540200
.*-------------------------------------------------------------------   02540300
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            02540400
.ZG850ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     02540500
.*------------------------------------------------------------------    02540600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02540700
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02540800
.*-------------------------------------------------------------------   02540900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02541000
.ZG853                ANOP  ,                                           02541100
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG853A             02541200
&ZTLC                 SETC 'NO'                                         02541300
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG854        02541400
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02541500
                      AIF   (N'&LISTCOMPARE LE 1).ZG853A  CK NUM        02541600
&ZMS                  SETC  '"LISTCOMPARE='                             02541700
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02541800
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02541900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02542000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02542100
.ZG853A               ANOP  ,                                           02542200
.*------------------------------------------------------------------    02542300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02542400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02542500
.ZG853A0              AIF   (K'&LISTNUM LE 0).ZG853A1  OK               02542600
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02542700
.ZG853A1              AIF   (K'&AUTHCOMPARE LE 0).ZG853A2  OK           02542800
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02542900
.ZG853A2              AIF   (K'&AUTHCOMP LE 0).ZG853A3  OK              02543000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02543100
.ZG853A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG853A4  OK          02543200
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02543300
.ZG853A4              AIF   (K'&ZCVAL LE 0).ZG853A5  OK                 02543400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02543500
&ZMS                  SETC  '"LISTCOMPARE'                              02543600
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02543700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02543800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02543900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02544000
.ZG853A5              ANOP  ,                                           02544100
.*-------------------------------------------------------------------   02544200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02544300
.ZG854                ANOP  ,                                           02544400
&ZTLC                 SETC 'YES'                                        02544500
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG871        02544600
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02544700
                      AIF   (N'&LISTCOMPARE LE 1).ZG854A  CK NUM        02544800
&ZMS                  SETC  '"LISTCOMPARE='                             02544900
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02545000
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02545100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02545200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02545300
.ZG854A               ANOP  ,                                           02545400
.*----------------------------------------------------------------***   02545500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02545600
                      AIF   (N'&LISTNUM LE 1).ZG856A  CK NUM            02545700
&ZMS                  SETC  '"LISTNUM='                                 02545800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02545900
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02546000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02546100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02546200
.ZG856A               ANOP  ,                                           02546300
.*-------------------------------------------------------------------   02546400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02546500
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02546600
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02546700
                      AIF   (N'&LISTNUM GT 1).ZG856B  MULTI             02546800
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02546900
.ZG856B               AIF   (K'&LISTNUM(1) GT 0).ZG856C                 02547000
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02547100
&ZMS                  SETC  ' '                                         02547200
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02547300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02547400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02547500
.ZG856C               ANOP  ,                                           02547600
.*-------------------------------------------------------------------   02547700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02547800
                      AIF   (K'&ZXLISTNUM LE 0).ZG856R  NOT I/O         02547900
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG856R            02548000
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02548100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG856P               02548200
                      AIF   (K'&ZCGPR GT 2).ZG856Q                      02548300
                      AIF   ('&ZCGPR' EQ '0').ZG856Q                    02548400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02548500
                      AIF   (T'&ZCGPR NE 'N').ZG856Q  INVALID REG NAME  02548600
.ZG856P               ANOP  ,                                           02548700
                      AIF   (T'&ZCGPR NE 'N').ZG856R  NON NUMERIC       02548800
                      AIF   ('&ZCGPR' LT '2').ZG856Q                    02548900
                      AIF   ('&ZCGPR' LE '12').ZG856R                   02549000
.ZG856Q               ANOP  ,                                           02549100
&ZMS                  SETC  '"LISTNUM='                                 02549200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02549300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02549400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02549500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02549600
.ZG856R               ANOP  ,                                           02549700
.*------------------------------------------------------------------    02549800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02549900
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02550000
.*-------------------------------------------------------------------   02550100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02550200
.ZG860                ANOP  ,                                           02550300
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG860A             02550400
&ZTLC                 SETC 'NO'                                         02550500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG861        02550600
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02550700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG860A  CK NUM        02550800
&ZMS                  SETC  '"AUTHCOMPARE='                             02550900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02551000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02551100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02551200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02551300
.ZG860A               ANOP  ,                                           02551400
.*------------------------------------------------------------------    02551500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02551600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02551700
.ZG860A0              AIF   (K'&AUTHCOMP LE 0).ZG860A1  OK              02551800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02551900
.ZG860A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG860A2  OK          02552000
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02552100
.ZG860A2              AIF   (K'&ZCVAL LE 0).ZG860A3  OK                 02552200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02552300
&ZMS                  SETC  '"AUTHCOMPARE'                              02552400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02552500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02552600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02552700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02552800
.ZG860A3              ANOP  ,                                           02552900
.*-------------------------------------------------------------------   02553000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02553100
.ZG861                ANOP  ,                                           02553200
&ZTLC                 SETC 'YES'                                        02553300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG870        02553400
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02553500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG861A  CK NUM        02553600
&ZMS                  SETC  '"AUTHCOMPARE='                             02553700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02553800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02553900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02554000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02554100
.ZG861A               ANOP  ,                                           02554200
.*----------------------------------------------------------------***   02554300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02554400
                      AIF   (N'&AUTHCOMP LE 1).ZG863A  CK NUM           02554500
&ZMS                  SETC  '"AUTHCOMP='                                02554600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02554700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02554800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02554900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02555000
.ZG863A               ANOP  ,                                           02555100
.*-------------------------------------------------------------------   02555200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02555300
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02555400
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02555500
                      AIF   (N'&AUTHCOMP GT 1).ZG863B  MULTI            02555600
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02555700
.ZG863B               AIF   (K'&AUTHCOMP(1) GT 0).ZG863C                02555800
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02555900
&ZMS                  SETC  ' '                                         02556000
&ZMS                  SETC  '&ZMS "AUTHCOMP" KEY AND ITS'               02556100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02556200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02556300
.ZG863C               ANOP  ,                                           02556400
.*-------------------------------------------------------------------   02556500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02556600
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG863R  NOT I/O        02556700
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG863R           02556800
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02556900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG863P               02557000
                      AIF   (K'&ZCGPR GT 2).ZG863Q                      02557100
                      AIF   ('&ZCGPR' EQ '0').ZG863Q                    02557200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02557300
                      AIF   (T'&ZCGPR NE 'N').ZG863Q  INVALID REG NAME  02557400
.ZG863P               ANOP  ,                                           02557500
                      AIF   (T'&ZCGPR NE 'N').ZG863R  NON NUMERIC       02557600
                      AIF   ('&ZCGPR' LT '2').ZG863Q                    02557700
                      AIF   ('&ZCGPR' LE '12').ZG863R                   02557800
.ZG863Q               ANOP  ,                                           02557900
&ZMS                  SETC  '"AUTHCOMP='                                02558000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02558100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02558200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02558300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02558400
.ZG863R               ANOP  ,                                           02558500
.*----------------------------------------------------------------***   02558600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02558700
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG865A  CK NUM       02558800
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02558900
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02559000
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02559100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02559200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02559300
.ZG865A               ANOP  ,                                           02559400
.*-------------------------------------------------------------------   02559500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02559600
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02559700
.ZG866A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG867A                  02559800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02559900
.*-------------------------------------------------------------------   02560000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02560100
.ZG867A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG868A            02560200
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02560300
.*-------------------------------------------------------------------   02560400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02560500
.ZG868A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG868C  KEYWORD     02560600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG868B            02560700
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02560800
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02560900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02561000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02561100
&ZMS                  SETC  '&ZMS "EQUAL"'                              02561200
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02561300
                      MNOTE 8,' &ZMS '                                  02561400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02561500
.ZG868B               ANOP  ,                                           02561600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02561700
.ZG868C               ANOP  ,                                           02561800
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02561900
.*-------------------------------------------------------------------   02562000
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02562100
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG868D  KEY           02562200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG868D  PARM      02562300
&ZMS                  SETC  '"AUTHCOMPTYPE'                             02562400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02562500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02562600
&ZMS                  SETC  '&ZMS '                                     02562700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02562800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02562900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02563000
.ZG868D               ANOP  ,                                           02563100
.*------------------------------------------------------------------    02563200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02563300
.ZG870                ANOP  ,                                           02563400
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02563500
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG870E  VALID ARG    02563600
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG870D  OMITTED     02563700
&ZASYSLNDX            SETA  0                                           02563800
.ZG870A               ANOP  ,           POSITIONAL MACRO KEY            02563900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02564000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG870C           02564100
&ZTLC                 SETC 'AUTHCOMPARE'                                02564200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG870A  02564300
.ZG870B               ANOP  ,                                           02564400
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02564500
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     02564600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02564700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02564800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02564900
                      AGO   .ZG870E                                     02565000
.ZG870C               ANOP  ,                                           02565100
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02565200
&ZMS                  SETC  '"AUTHCOMPARE='                             02565300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02565400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02565500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02565600
&ZMS                  SETC  '&ZMS "NO"'                                 02565700
&ZMS                  SETC  '&ZMS OR "YES".'                            02565800
                      MNOTE 8,' &ZMS '                                  02565900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02566000
                      AGO   .ZG870E                                     02566100
.ZG870D               ANOP  ,                                           02566200
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02566300
.ZG870E               ANOP  ,                                           02566400
.*------------------------------------------------------------------    02566500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02566600
.ZG871                ANOP  ,                                           02566700
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02566800
                      AIF   (K'&XLISTCOMPARE GT 0).ZG871E  VALID ARG    02566900
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG871D  OMITTED     02567000
&ZASYSLNDX            SETA  0                                           02567100
.ZG871A               ANOP  ,           POSITIONAL MACRO KEY            02567200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02567300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG871C           02567400
&ZTLC                 SETC 'LISTCOMPARE'                                02567500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG871A  02567600
.ZG871B               ANOP  ,                                           02567700
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02567800
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'                     02567900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02568000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02568100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02568200
                      AGO   .ZG871E                                     02568300
.ZG871C               ANOP  ,                                           02568400
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02568500
&ZMS                  SETC  '"LISTCOMPARE='                             02568600
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02568700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02568800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02568900
&ZMS                  SETC  '&ZMS "NO"'                                 02569000
&ZMS                  SETC  '&ZMS OR "YES".'                            02569100
                      MNOTE 8,' &ZMS '                                  02569200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02569300
                      AGO   .ZG871E                                     02569400
.ZG871D               ANOP  ,                                           02569500
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02569600
.ZG871E               ANOP  ,                                           02569700
.*------------------------------------------------------------------    02569800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02569900
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02570000
.*-------------------------------------------------------------------   02570100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02570200
.ZG874                ANOP  ,                                           02570300
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG874A              02570400
&ZTLC                 SETC 'NO'                                         02570500
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG875         02570600
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02570700
                      AIF   (N'&KEYCOMPARE LE 1).ZG874A  CK NUM         02570800
&ZMS                  SETC  '"KEYCOMPARE='                              02570900
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02571000
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02571100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02571200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02571300
.ZG874A               ANOP  ,                                           02571400
.*------------------------------------------------------------------    02571500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02571600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02571700
.ZG874A0              AIF   (K'&ENTRYKEY LE 0).ZG874A1  OK              02571800
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02571900
.ZG874A1              AIF   (K'&KEYREQTYPE LE 0).ZG874A2  OK            02572000
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02572100
.ZG874A2              AIF   (K'&KEYRANGEEND LE 0).ZG874A3  OK           02572200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02572300
.ZG874A3              AIF   (K'&ZCVAL LE 0).ZG874A4  OK                 02572400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02572500
&ZMS                  SETC  '"KEYCOMPARE'                               02572600
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02572700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02572800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02572900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02573000
.ZG874A4              ANOP  ,                                           02573100
.*-------------------------------------------------------------------   02573200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02573300
.ZG875                ANOP  ,                                           02573400
&ZTLC                 SETC 'YES'                                        02573500
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG889         02573600
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02573700
                      AIF   (N'&KEYCOMPARE LE 1).ZG875A  CK NUM         02573800
&ZMS                  SETC  '"KEYCOMPARE='                              02573900
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02574000
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02574100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02574200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02574300
.ZG875A               ANOP  ,                                           02574400
.*----------------------------------------------------------------***   02574500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02574600
                      AIF   (N'&ENTRYKEY LE 1).ZG877A  CK NUM           02574700
&ZMS                  SETC  '"ENTRYKEY='                                02574800
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02574900
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02575000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02575100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02575200
.ZG877A               ANOP  ,                                           02575300
.*-------------------------------------------------------------------   02575400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02575500
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02575600
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02575700
                      AIF   (N'&ENTRYKEY GT 1).ZG877B  MULTI            02575800
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02575900
.ZG877B               AIF   (K'&ENTRYKEY(1) GT 0).ZG877C                02576000
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02576100
&ZMS                  SETC  ' '                                         02576200
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02576300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02576400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02576500
.ZG877C               ANOP  ,                                           02576600
.*-------------------------------------------------------------------   02576700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02576800
                      AIF   (K'&ZXENTRYKEY LE 0).ZG877R  NOT I/O        02576900
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG877R           02577000
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02577100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG877P               02577200
                      AIF   (K'&ZCGPR GT 2).ZG877Q                      02577300
                      AIF   ('&ZCGPR' EQ '0').ZG877Q                    02577400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02577500
                      AIF   (T'&ZCGPR NE 'N').ZG877Q  INVALID REG NAME  02577600
.ZG877P               ANOP  ,                                           02577700
                      AIF   (T'&ZCGPR NE 'N').ZG877R  NON NUMERIC       02577800
                      AIF   ('&ZCGPR' LT '2').ZG877Q                    02577900
                      AIF   ('&ZCGPR' LE '12').ZG877R                   02578000
.ZG877Q               ANOP  ,                                           02578100
&ZMS                  SETC  '"ENTRYKEY='                                02578200
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02578300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02578400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02578500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02578600
.ZG877R               ANOP  ,                                           02578700
.*------------------------------------------------------------------    02578800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02578900
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02579000
.*-------------------------------------------------------------------   02579100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02579200
.ZG881                ANOP  ,                                           02579300
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG881A              02579400
&ZTLC                 SETC 'EQUAL'                                      02579500
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG882         02579600
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02579700
                      AIF   (N'&KEYREQTYPE LE 1).ZG881A  CK NUM         02579800
&ZMS                  SETC  '"KEYREQTYPE='                              02579900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02580000
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02580100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02580200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02580300
.ZG881A               ANOP  ,                                           02580400
.*------------------------------------------------------------------    02580500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02580600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02580700
.ZG881A0              AIF   (K'&KEYRANGEEND LE 0).ZG881A1  OK           02580800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02580900
.ZG881A1              AIF   (K'&ZCVAL LE 0).ZG881A2  OK                 02581000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02581100
&ZMS                  SETC  '"KEYREQTYPE'                               02581200
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02581300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02581400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02581500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02581600
.ZG881A2              ANOP  ,                                           02581700
.*-------------------------------------------------------------------   02581800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02581900
.ZG882                ANOP  ,                                           02582000
&ZTLC                 SETC 'LESSOREQUAL'                                02582100
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG883         02582200
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02582300
                      AIF   (N'&KEYREQTYPE LE 1).ZG882A  CK NUM         02582400
&ZMS                  SETC  '"KEYREQTYPE='                              02582500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02582600
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02582700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02582800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02582900
.ZG882A               ANOP  ,                                           02583000
.*------------------------------------------------------------------    02583100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02583200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02583300
.ZG882A0              AIF   (K'&KEYRANGEEND LE 0).ZG882A1  OK           02583400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02583500
.ZG882A1              AIF   (K'&ZCVAL LE 0).ZG882A2  OK                 02583600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02583700
&ZMS                  SETC  '"KEYREQTYPE'                               02583800
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02583900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02584000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02584100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02584200
.ZG882A2              ANOP  ,                                           02584300
.*-------------------------------------------------------------------   02584400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02584500
.ZG883                ANOP  ,                                           02584600
&ZTLC                 SETC 'GREATEROREQUAL'                             02584700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG884         02584800
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02584900
                      AIF   (N'&KEYREQTYPE LE 1).ZG883A  CK NUM         02585000
&ZMS                  SETC  '"KEYREQTYPE='                              02585100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02585200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02585300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02585400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02585500
.ZG883A               ANOP  ,                                           02585600
.*------------------------------------------------------------------    02585700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02585800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02585900
.ZG883A0              AIF   (K'&KEYRANGEEND LE 0).ZG883A1  OK           02586000
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02586100
.ZG883A1              AIF   (K'&ZCVAL LE 0).ZG883A2  OK                 02586200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02586300
&ZMS                  SETC  '"KEYREQTYPE'                               02586400
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02586500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02586600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02586700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02586800
.ZG883A2              ANOP  ,                                           02586900
.*-------------------------------------------------------------------   02587000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02587100
.ZG884                ANOP  ,                                           02587200
&ZTLC                 SETC 'RANGE'                                      02587300
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG888         02587400
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02587500
                      AIF   (N'&KEYREQTYPE LE 1).ZG884A  CK NUM         02587600
&ZMS                  SETC  '"KEYREQTYPE='                              02587700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02587800
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02587900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02588000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02588100
.ZG884A               ANOP  ,                                           02588200
.*----------------------------------------------------------------***   02588300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02588400
                      AIF   (N'&KEYRANGEEND LE 1).ZG886A  CK NUM        02588500
&ZMS                  SETC  '"KEYRANGEEND='                             02588600
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02588700
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02588800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02588900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02589000
.ZG886A               ANOP  ,                                           02589100
.*-------------------------------------------------------------------   02589200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02589300
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02589400
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02589500
                      AIF   (N'&KEYRANGEEND GT 1).ZG886B  MULTI         02589600
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02589700
.ZG886B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG886C             02589800
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02589900
&ZMS                  SETC  ' '                                         02590000
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02590100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02590200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02590300
.ZG886C               ANOP  ,                                           02590400
.*-------------------------------------------------------------------   02590500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02590600
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG886R  NOT I/O     02590700
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG886R        02590800
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02590900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG886P               02591000
                      AIF   (K'&ZCGPR GT 2).ZG886Q                      02591100
                      AIF   ('&ZCGPR' EQ '0').ZG886Q                    02591200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02591300
                      AIF   (T'&ZCGPR NE 'N').ZG886Q  INVALID REG NAME  02591400
.ZG886P               ANOP  ,                                           02591500
                      AIF   (T'&ZCGPR NE 'N').ZG886R  NON NUMERIC       02591600
                      AIF   ('&ZCGPR' LT '2').ZG886Q                    02591700
                      AIF   ('&ZCGPR' LE '12').ZG886R                   02591800
.ZG886Q               ANOP  ,                                           02591900
&ZMS                  SETC  '"KEYRANGEEND='                             02592000
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02592100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02592200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02592300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02592400
.ZG886R               ANOP  ,                                           02592500
.*------------------------------------------------------------------    02592600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02592700
.ZG888                ANOP  ,                                           02592800
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02592900
                      AIF   (K'&XKEYREQTYPE GT 0).ZG888E  VALID ARG     02593000
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG888D  OMITTED      02593100
&ZASYSLNDX            SETA  0                                           02593200
.ZG888A               ANOP  ,           POSITIONAL MACRO KEY            02593300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02593400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG888C           02593500
&ZTLC                 SETC 'KEYREQTYPE'                                 02593600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG888A  02593700
.ZG888B               ANOP  ,                                           02593800
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02593900
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      02594000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02594100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02594200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02594300
                      AGO   .ZG888E                                     02594400
.ZG888C               ANOP  ,                                           02594500
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02594600
&ZMS                  SETC  '"KEYREQTYPE='                              02594700
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02594800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02594900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02595000
&ZMS                  SETC  '&ZMS "EQUAL",'                             02595100
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02595200
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02595300
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02595400
                      MNOTE 8,' &ZMS '                                  02595500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02595600
                      AGO   .ZG888E                                     02595700
.ZG888D               ANOP  ,                                           02595800
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02595900
.ZG888E               ANOP  ,                                           02596000
.*------------------------------------------------------------------    02596100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02596200
.ZG889                ANOP  ,                                           02596300
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02596400
                      AIF   (K'&XKEYCOMPARE GT 0).ZG889E  VALID ARG     02596500
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG889D  OMITTED      02596600
&ZASYSLNDX            SETA  0                                           02596700
.ZG889A               ANOP  ,           POSITIONAL MACRO KEY            02596800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02596900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG889C           02597000
&ZTLC                 SETC 'KEYCOMPARE'                                 02597100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG889A  02597200
.ZG889B               ANOP  ,                                           02597300
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02597400
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      02597500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02597600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02597700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02597800
                      AGO   .ZG889E                                     02597900
.ZG889C               ANOP  ,                                           02598000
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02598100
&ZMS                  SETC  '"KEYCOMPARE='                              02598200
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02598300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02598400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02598500
&ZMS                  SETC  '&ZMS "NO"'                                 02598600
&ZMS                  SETC  '&ZMS OR "YES".'                            02598700
                      MNOTE 8,' &ZMS '                                  02598800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02598900
                      AGO   .ZG889E                                     02599000
.ZG889D               ANOP  ,                                           02599100
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02599200
.ZG889E               ANOP  ,                                           02599300
.*------------------------------------------------------------------    02599400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02599500
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02599600
.*-------------------------------------------------------------------   02599700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02599800
.ZG892                ANOP  ,                                           02599900
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG892A             02600000
&ZTLC                 SETC 'NO'                                         02600100
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG893        02600200
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02600300
                      AIF   (N'&SKEYCOMPARE LE 1).ZG892A  CK NUM        02600400
&ZMS                  SETC  '"SKEYCOMPARE='                             02600500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02600600
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02600700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02600800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02600900
.ZG892A               ANOP  ,                                           02601000
.*------------------------------------------------------------------    02601100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02601200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02601300
.ZG892A0              AIF   (K'&SECONDARYKEY LE 0).ZG892A1  OK          02601400
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02601500
.ZG892A1              AIF   (K'&SKEYREQTYPE LE 0).ZG892A2  OK           02601600
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02601700
.ZG892A2              AIF   (K'&SKEYRANGEEND LE 0).ZG892A3  OK          02601800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02601900
.ZG892A3              AIF   (K'&ZCVAL LE 0).ZG892A4  OK                 02602000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02602100
&ZMS                  SETC  '"SKEYCOMPARE'                              02602200
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02602300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02602400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02602500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02602600
.ZG892A4              ANOP  ,                                           02602700
.*-------------------------------------------------------------------   02602800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02602900
.ZG893                ANOP  ,                                           02603000
&ZTLC                 SETC 'YES'                                        02603100
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG907        02603200
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02603300
                      AIF   (N'&SKEYCOMPARE LE 1).ZG893A  CK NUM        02603400
&ZMS                  SETC  '"SKEYCOMPARE='                             02603500
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02603600
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02603700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02603800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02603900
.ZG893A               ANOP  ,                                           02604000
.*----------------------------------------------------------------***   02604100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02604200
                      AIF   (N'&SECONDARYKEY LE 1).ZG895A  CK NUM       02604300
&ZMS                  SETC  '"SECONDARYKEY='                            02604400
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02604500
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02604600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02604700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02604800
.ZG895A               ANOP  ,                                           02604900
.*-------------------------------------------------------------------   02605000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02605100
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02605200
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02605300
                      AIF   (N'&SECONDARYKEY GT 1).ZG895B  MULTI        02605400
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02605500
.ZG895B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG895C            02605600
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02605700
&ZMS                  SETC  ' '                                         02605800
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02605900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02606000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02606100
.ZG895C               ANOP  ,                                           02606200
.*-------------------------------------------------------------------   02606300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02606400
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG895R  NOT I/O    02606500
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG895R       02606600
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02606700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG895P               02606800
                      AIF   (K'&ZCGPR GT 2).ZG895Q                      02606900
                      AIF   ('&ZCGPR' EQ '0').ZG895Q                    02607000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02607100
                      AIF   (T'&ZCGPR NE 'N').ZG895Q  INVALID REG NAME  02607200
.ZG895P               ANOP  ,                                           02607300
                      AIF   (T'&ZCGPR NE 'N').ZG895R  NON NUMERIC       02607400
                      AIF   ('&ZCGPR' LT '2').ZG895Q                    02607500
                      AIF   ('&ZCGPR' LE '12').ZG895R                   02607600
.ZG895Q               ANOP  ,                                           02607700
&ZMS                  SETC  '"SECONDARYKEY='                            02607800
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02607900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02608000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02608100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02608200
.ZG895R               ANOP  ,                                           02608300
.*------------------------------------------------------------------    02608400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02608500
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02608600
.*-------------------------------------------------------------------   02608700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02608800
.ZG899                ANOP  ,                                           02608900
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG899A             02609000
&ZTLC                 SETC 'EQUAL'                                      02609100
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG900        02609200
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02609300
                      AIF   (N'&SKEYREQTYPE LE 1).ZG899A  CK NUM        02609400
&ZMS                  SETC  '"SKEYREQTYPE='                             02609500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02609600
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02609700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02609800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02609900
.ZG899A               ANOP  ,                                           02610000
.*------------------------------------------------------------------    02610100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02610200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02610300
.ZG899A0              AIF   (K'&SKEYRANGEEND LE 0).ZG899A1  OK          02610400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02610500
.ZG899A1              AIF   (K'&ZCVAL LE 0).ZG899A2  OK                 02610600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02610700
&ZMS                  SETC  '"SKEYREQTYPE'                              02610800
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02610900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02611000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02611100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02611200
.ZG899A2              ANOP  ,                                           02611300
.*-------------------------------------------------------------------   02611400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02611500
.ZG900                ANOP  ,                                           02611600
&ZTLC                 SETC 'LESSOREQUAL'                                02611700
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG901        02611800
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02611900
                      AIF   (N'&SKEYREQTYPE LE 1).ZG900A  CK NUM        02612000
&ZMS                  SETC  '"SKEYREQTYPE='                             02612100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02612200
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02612300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02612400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02612500
.ZG900A               ANOP  ,                                           02612600
.*------------------------------------------------------------------    02612700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02612800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02612900
.ZG900A0              AIF   (K'&SKEYRANGEEND LE 0).ZG900A1  OK          02613000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02613100
.ZG900A1              AIF   (K'&ZCVAL LE 0).ZG900A2  OK                 02613200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02613300
&ZMS                  SETC  '"SKEYREQTYPE'                              02613400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02613500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02613600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02613700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02613800
.ZG900A2              ANOP  ,                                           02613900
.*-------------------------------------------------------------------   02614000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02614100
.ZG901                ANOP  ,                                           02614200
&ZTLC                 SETC 'GREATEROREQUAL'                             02614300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG902        02614400
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02614500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG901A  CK NUM        02614600
&ZMS                  SETC  '"SKEYREQTYPE='                             02614700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02614800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02614900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02615000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02615100
.ZG901A               ANOP  ,                                           02615200
.*------------------------------------------------------------------    02615300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02615400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02615500
.ZG901A0              AIF   (K'&SKEYRANGEEND LE 0).ZG901A1  OK          02615600
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02615700
.ZG901A1              AIF   (K'&ZCVAL LE 0).ZG901A2  OK                 02615800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02615900
&ZMS                  SETC  '"SKEYREQTYPE'                              02616000
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02616100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02616200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02616300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02616400
.ZG901A2              ANOP  ,                                           02616500
.*-------------------------------------------------------------------   02616600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02616700
.ZG902                ANOP  ,                                           02616800
&ZTLC                 SETC 'RANGE'                                      02616900
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG906        02617000
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02617100
                      AIF   (N'&SKEYREQTYPE LE 1).ZG902A  CK NUM        02617200
&ZMS                  SETC  '"SKEYREQTYPE='                             02617300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02617400
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02617500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02617600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02617700
.ZG902A               ANOP  ,                                           02617800
.*----------------------------------------------------------------***   02617900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02618000
                      AIF   (N'&SKEYRANGEEND LE 1).ZG904A  CK NUM       02618100
&ZMS                  SETC  '"SKEYRANGEEND='                            02618200
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02618300
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02618400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02618500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02618600
.ZG904A               ANOP  ,                                           02618700
.*-------------------------------------------------------------------   02618800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02618900
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02619000
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02619100
                      AIF   (N'&SKEYRANGEEND GT 1).ZG904B  MULTI        02619200
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02619300
.ZG904B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG904C            02619400
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02619500
&ZMS                  SETC  ' '                                         02619600
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02619700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02619800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02619900
.ZG904C               ANOP  ,                                           02620000
.*-------------------------------------------------------------------   02620100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02620200
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG904R  NOT I/O    02620300
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG904R       02620400
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02620500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG904P               02620600
                      AIF   (K'&ZCGPR GT 2).ZG904Q                      02620700
                      AIF   ('&ZCGPR' EQ '0').ZG904Q                    02620800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02620900
                      AIF   (T'&ZCGPR NE 'N').ZG904Q  INVALID REG NAME  02621000
.ZG904P               ANOP  ,                                           02621100
                      AIF   (T'&ZCGPR NE 'N').ZG904R  NON NUMERIC       02621200
                      AIF   ('&ZCGPR' LT '2').ZG904Q                    02621300
                      AIF   ('&ZCGPR' LE '12').ZG904R                   02621400
.ZG904Q               ANOP  ,                                           02621500
&ZMS                  SETC  '"SKEYRANGEEND='                            02621600
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02621700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02621800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02621900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02622000
.ZG904R               ANOP  ,                                           02622100
.*------------------------------------------------------------------    02622200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02622300
.ZG906                ANOP  ,                                           02622400
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02622500
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG906E  VALID ARG    02622600
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG906D  OMITTED     02622700
&ZASYSLNDX            SETA  0                                           02622800
.ZG906A               ANOP  ,           POSITIONAL MACRO KEY            02622900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02623000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG906C           02623100
&ZTLC                 SETC 'SKEYREQTYPE'                                02623200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG906A  02623300
.ZG906B               ANOP  ,                                           02623400
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02623500
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     02623600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02623700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02623800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02623900
                      AGO   .ZG906E                                     02624000
.ZG906C               ANOP  ,                                           02624100
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02624200
&ZMS                  SETC  '"SKEYREQTYPE='                             02624300
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02624400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02624500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02624600
&ZMS                  SETC  '&ZMS "EQUAL",'                             02624700
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02624800
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02624900
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02625000
                      MNOTE 8,' &ZMS '                                  02625100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02625200
                      AGO   .ZG906E                                     02625300
.ZG906D               ANOP  ,                                           02625400
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02625500
.ZG906E               ANOP  ,                                           02625600
.*------------------------------------------------------------------    02625700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02625800
.ZG907                ANOP  ,                                           02625900
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02626000
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG907E  VALID ARG    02626100
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG907D  OMITTED     02626200
&ZASYSLNDX            SETA  0                                           02626300
.ZG907A               ANOP  ,           POSITIONAL MACRO KEY            02626400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02626500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG907C           02626600
&ZTLC                 SETC 'SKEYCOMPARE'                                02626700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG907A  02626800
.ZG907B               ANOP  ,                                           02626900
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02627000
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     02627100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02627200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02627300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02627400
                      AGO   .ZG907E                                     02627500
.ZG907C               ANOP  ,                                           02627600
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02627700
&ZMS                  SETC  '"SKEYCOMPARE='                             02627800
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02627900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02628000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02628100
&ZMS                  SETC  '&ZMS "NO"'                                 02628200
&ZMS                  SETC  '&ZMS OR "YES".'                            02628300
                      MNOTE 8,' &ZMS '                                  02628400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02628500
                      AGO   .ZG907E                                     02628600
.ZG907D               ANOP  ,                                           02628700
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02628800
.ZG907E               ANOP  ,                                           02628900
.*------------------------------------------------------------------    02629000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02629100
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02629200
.*-------------------------------------------------------------------   02629300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02629400
.ZG910                ANOP  ,                                           02629500
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG910A             02629600
&ZTLC                 SETC 'NO'                                         02629700
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG911        02629800
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02629900
                      AIF   (N'&VERSCOMPARE LE 1).ZG910A  CK NUM        02630000
&ZMS                  SETC  '"VERSCOMPARE='                             02630100
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02630200
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02630300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02630400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02630500
.ZG910A               ANOP  ,                                           02630600
.*------------------------------------------------------------------    02630700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02630800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02630900
.ZG910A0              AIF   (K'&VERSCOMP LE 0).ZG910A1  OK              02631000
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02631100
.ZG910A1              AIF   (K'&VERSCOMPTYPE LE 0).ZG910A2  OK          02631200
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02631300
.ZG910A2              AIF   (K'&ZCVAL LE 0).ZG910A3  OK                 02631400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02631500
&ZMS                  SETC  '"VERSCOMPARE'                              02631600
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02631700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02631800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02631900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02632000
.ZG910A3              ANOP  ,                                           02632100
.*-------------------------------------------------------------------   02632200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02632300
.ZG911                ANOP  ,                                           02632400
&ZTLC                 SETC 'YES'                                        02632500
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG920        02632600
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02632700
                      AIF   (N'&VERSCOMPARE LE 1).ZG911A  CK NUM        02632800
&ZMS                  SETC  '"VERSCOMPARE='                             02632900
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02633000
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02633100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02633200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02633300
.ZG911A               ANOP  ,                                           02633400
.*----------------------------------------------------------------***   02633500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02633600
                      AIF   (N'&VERSCOMP LE 1).ZG913A  CK NUM           02633700
&ZMS                  SETC  '"VERSCOMP='                                02633800
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02633900
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02634000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02634100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02634200
.ZG913A               ANOP  ,                                           02634300
.*-------------------------------------------------------------------   02634400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02634500
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02634600
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02634700
                      AIF   (N'&VERSCOMP GT 1).ZG913B  MULTI            02634800
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02634900
.ZG913B               AIF   (K'&VERSCOMP(1) GT 0).ZG913C                02635000
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02635100
&ZMS                  SETC  ' '                                         02635200
&ZMS                  SETC  '&ZMS "VERSCOMP" KEY AND ITS'               02635300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02635400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02635500
.ZG913C               ANOP  ,                                           02635600
.*-------------------------------------------------------------------   02635700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02635800
                      AIF   (K'&ZXVERSCOMP LE 0).ZG913R  NOT I/O        02635900
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG913R           02636000
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02636100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG913P               02636200
                      AIF   (K'&ZCGPR GT 2).ZG913Q                      02636300
                      AIF   ('&ZCGPR' EQ '0').ZG913Q                    02636400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02636500
                      AIF   (T'&ZCGPR NE 'N').ZG913Q  INVALID REG NAME  02636600
.ZG913P               ANOP  ,                                           02636700
                      AIF   (T'&ZCGPR NE 'N').ZG913R  NON NUMERIC       02636800
                      AIF   ('&ZCGPR' LT '2').ZG913Q                    02636900
                      AIF   ('&ZCGPR' LE '12').ZG913R                   02637000
.ZG913Q               ANOP  ,                                           02637100
&ZMS                  SETC  '"VERSCOMP='                                02637200
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02637300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02637400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02637500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02637600
.ZG913R               ANOP  ,                                           02637700
.*----------------------------------------------------------------***   02637800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02637900
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG915A  CK NUM       02638000
&ZMS                  SETC  '"VERSCOMPTYPE='                            02638100
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02638200
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02638300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02638400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02638500
.ZG915A               ANOP  ,                                           02638600
.*-------------------------------------------------------------------   02638700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02638800
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02638900
.ZG916A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG917A                  02639000
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02639100
.*-------------------------------------------------------------------   02639200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02639300
.ZG917A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG918A            02639400
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02639500
.*-------------------------------------------------------------------   02639600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02639700
.ZG918A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG918C  KEYWORD     02639800
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG918B            02639900
&ZMS                  SETC  '"VERSCOMPTYPE='                            02640000
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02640100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02640200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02640300
&ZMS                  SETC  '&ZMS "EQUAL"'                              02640400
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02640500
                      MNOTE 8,' &ZMS '                                  02640600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02640700
.ZG918B               ANOP  ,                                           02640800
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02640900
.ZG918C               ANOP  ,                                           02641000
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02641100
.*-------------------------------------------------------------------   02641200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02641300
                      AIF   (K'&VERSCOMP(1) GT 0).ZG918D  KEY           02641400
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG918D  PARM      02641500
&ZMS                  SETC  '"VERSCOMPTYPE'                             02641600
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02641700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02641800
&ZMS                  SETC  '&ZMS '                                     02641900
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02642000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02642100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02642200
.ZG918D               ANOP  ,                                           02642300
.*------------------------------------------------------------------    02642400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02642500
.ZG920                ANOP  ,                                           02642600
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02642700
                      AIF   (K'&XVERSCOMPARE GT 0).ZG920E  VALID ARG    02642800
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG920D  OMITTED     02642900
&ZASYSLNDX            SETA  0                                           02643000
.ZG920A               ANOP  ,           POSITIONAL MACRO KEY            02643100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02643200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG920C           02643300
&ZTLC                 SETC 'VERSCOMPARE'                                02643400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG920A  02643500
.ZG920B               ANOP  ,                                           02643600
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02643700
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'                     02643800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02643900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02644000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02644100
                      AGO   .ZG920E                                     02644200
.ZG920C               ANOP  ,                                           02644300
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02644400
&ZMS                  SETC  '"VERSCOMPARE='                             02644500
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02644600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02644700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02644800
&ZMS                  SETC  '&ZMS "NO"'                                 02644900
&ZMS                  SETC  '&ZMS OR "YES".'                            02645000
                      MNOTE 8,' &ZMS '                                  02645100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02645200
                      AGO   .ZG920E                                     02645300
.ZG920D               ANOP  ,                                           02645400
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02645500
.ZG920E               ANOP  ,                                           02645600
.*-------------------------------------------------------------------   02645700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02645800
.ZG921                ANOP  ,                                           02645900
&ZTLC                 SETC 'MOVE_ENTRYLIST'                             02646000
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG1073           02646100
&XREQUEST             SETC  'MOVE_ENTRYLIST'    SET KEYWORD             02646200
                      AIF   (N'&REQUEST LE 1).ZG921A  CK NUM            02646300
&ZMS                  SETC  '"REQUEST='                                 02646400
&ZMS                  SETC  '&ZMS.&REQUEST"'                            02646500
&ZMS                  SETC  '&ZMS "REQUEST"'                            02646600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02646700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02646800
.ZG921A               ANOP  ,                                           02646900
.*------------------------------------------------------------------    02647000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02647100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02647200
.ZG921A0              AIF   (K'&TYPE LE 0).ZG921A1  OK                  02647300
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      02647400
.ZG921A1              AIF   (K'&ADJAREA LE 0).ZG921A2  OK               02647500
&ZCVAL                SETC '&ZCVAL ADJAREA'     INCORRECT KEY USED      02647600
.ZG921A2              AIF   (K'&DIRECTION LE 0).ZG921A3  OK             02647700
&ZCVAL                SETC '&ZCVAL DIRECTION'   INCORRECT KEY USED      02647800
.ZG921A3              AIF   (K'&LOCATOR LE 0).ZG921A4  OK               02647900
&ZCVAL                SETC '&ZCVAL LOCATOR'     INCORRECT KEY USED      02648000
.ZG921A4              AIF   (K'&KEYSCANTYPE LE 0).ZG921A5  OK           02648100
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02648200
.ZG921A5              AIF   (K'&ENTRYID LE 0).ZG921A6  OK               02648300
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02648400
.ZG921A6              AIF   (K'&ENTRYNAME LE 0).ZG921A7  OK             02648500
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02648600
.ZG921A7              AIF   (K'&KEYTYPE LE 0).ZG921A8  OK               02648700
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02648800
.ZG921A8              AIF   (K'&RESTOKEN LE 0).ZG921A9  OK              02648900
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      02649000
.ZG921A9              AIF   (K'&EXTRESTOKEN LE 0).ZG921A10  OK          02649100
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     02649200
.ZG921A10             AIF   (K'&ZCVAL LE 0).ZG921A11  OK                02649300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02649400
&ZMS                  SETC  '"REQUEST'                                  02649500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           02649600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02649700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02649800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02649900
.ZG921A11             ANOP  ,                                           02650000
.*----------------------------------------------------------------***   02650100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02650200
                      AIF   (N'&FIRSTELEM LE 1).ZG923A  CK NUM          02650300
&ZMS                  SETC  '"FIRSTELEM='                               02650400
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          02650500
&ZMS                  SETC  '&ZMS "FIRSTELEM"'                          02650600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02650700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02650800
.ZG923A               ANOP  ,                                           02650900
.*-------------------------------------------------------------------   02651000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02651100
&ZXFIRSTELEM          SETC  'INPUT'     SET IN/OUTPUT                   02651200
&XFIRSTELEM           SETC  '1'                                         02651300
                      AIF   (K'&FIRSTELEM(1) LE 0).ZG923B  PARM         02651400
&XFIRSTELEM           SETC  '&FIRSTELEM(1)'     SET XVARIABLE           02651500
                      AIF   (N'&FIRSTELEM GT 1).ZG923B  MULTI           02651600
&XFIRSTELEM           SETC  '&FIRSTELEM'        SET XVARIABLE           02651700
.ZG923B               ANOP  ,                                           02651800
.*-------------------------------------------------------------------   02651900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02652000
                      AIF   (K'&ZXFIRSTELEM LE 0).ZG923R  NOT I/O       02652100
                      AIF   ('&XFIRSTELEM'(1,1) NE '(').ZG923R          02652200
&ZCGPR                SETC  '&XFIRSTELEM'(2,K'&XFIRSTELEM-2)            02652300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG923P               02652400
                      AIF   (K'&ZCGPR GT 2).ZG923Q                      02652500
                      AIF   ('&ZCGPR' EQ '0').ZG923Q                    02652600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02652700
                      AIF   (T'&ZCGPR NE 'N').ZG923Q  INVALID REG NAME  02652800
.ZG923P               ANOP  ,                                           02652900
                      AIF   (T'&ZCGPR NE 'N').ZG923R  NON NUMERIC       02653000
                      AIF   ('&ZCGPR' LT '2').ZG923Q                    02653100
                      AIF   ('&ZCGPR' LE '12').ZG923R                   02653200
.ZG923Q               ANOP  ,                                           02653300
&ZMS                  SETC  '"FIRSTELEM='                               02653400
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          02653500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02653600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02653700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02653800
.ZG923R               ANOP  ,                                           02653900
.*----------------------------------------------------------------***   02654000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02654100
                      AIF   (N'&LASTELEM LE 1).ZG926A  CK NUM           02654200
&ZMS                  SETC  '"LASTELEM='                                02654300
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           02654400
&ZMS                  SETC  '&ZMS "LASTELEM"'                           02654500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02654600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02654700
.ZG926A               ANOP  ,                                           02654800
.*-------------------------------------------------------------------   02654900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02655000
&ZXLASTELEM           SETC  'INPUT'     SET IN/OUTPUT                   02655100
&XLASTELEM            SETC  '&LASTELEM(1)'      SET XVARIABLE           02655200
                      AIF   (N'&LASTELEM GT 1).ZG926B  MULTI            02655300
&XLASTELEM            SETC  '&LASTELEM'         SET XVARIABLE           02655400
.ZG926B               AIF   (K'&LASTELEM(1) GT 0).ZG926C                02655500
&ZXLASTELEM           SETC  ''          RESET IN/OUTPUT                 02655600
&ZMS                  SETC  ' '                                         02655700
&ZMS                  SETC  '&ZMS "LASTELEM" KEY AND ITS'               02655800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02655900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02656000
.ZG926C               ANOP  ,                                           02656100
.*-------------------------------------------------------------------   02656200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02656300
                      AIF   (K'&ZXLASTELEM LE 0).ZG926R  NOT I/O        02656400
                      AIF   ('&XLASTELEM'(1,1) NE '(').ZG926R           02656500
&ZCGPR                SETC  '&XLASTELEM'(2,K'&XLASTELEM-2)              02656600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG926P               02656700
                      AIF   (K'&ZCGPR GT 2).ZG926Q                      02656800
                      AIF   ('&ZCGPR' EQ '0').ZG926Q                    02656900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02657000
                      AIF   (T'&ZCGPR NE 'N').ZG926Q  INVALID REG NAME  02657100
.ZG926P               ANOP  ,                                           02657200
                      AIF   (T'&ZCGPR NE 'N').ZG926R  NON NUMERIC       02657300
                      AIF   ('&ZCGPR' LT '2').ZG926Q                    02657400
                      AIF   ('&ZCGPR' LE '12').ZG926R                   02657500
.ZG926Q               ANOP  ,                                           02657600
&ZMS                  SETC  '"LASTELEM='                                02657700
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           02657800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02657900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02658000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02658100
.ZG926R               ANOP  ,                                           02658200
.*----------------------------------------------------------------***   02658300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02658400
                      AIF   (N'&MISCOMPARE LE 1).ZG929A  CK NUM         02658500
&ZMS                  SETC  '"MISCOMPARE='                              02658600
&ZMS                  SETC  '&ZMS.&MISCOMPARE"'                         02658700
&ZMS                  SETC  '&ZMS "MISCOMPARE"'                         02658800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02658900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02659000
.ZG929A               ANOP  ,                                           02659100
.*-------------------------------------------------------------------   02659200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02659300
&XMISCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02659400
.ZG930A   AIF   ('&MISCOMPARE(1)' NE 'CONTINUE').ZG931A                 02659500
&XMISCOMPARE          SETC  'CONTINUE'  SET KEYWORD                     02659600
.*-------------------------------------------------------------------   02659700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02659800
.ZG931A   AIF   ('&MISCOMPARE(1)' NE 'HALT').ZG932A                     02659900
&XMISCOMPARE          SETC  'HALT'      SET KEYWORD                     02660000
.*-------------------------------------------------------------------   02660100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02660200
.ZG932A               AIF   (K'&XMISCOMPARE GT 0).ZG932C  KEYWORD       02660300
                      AIF   (K'&MISCOMPARE(1) LE 0).ZG932B              02660400
&ZMS                  SETC  '"MISCOMPARE='                              02660500
&ZMS                  SETC  '&ZMS.&MISCOMPARE"'                         02660600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02660700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02660800
&ZMS                  SETC  '&ZMS "CONTINUE"'                           02660900
&ZMS                  SETC  '&ZMS OR "HALT".'                           02661000
                      MNOTE 8,' &ZMS '                                  02661100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02661200
.ZG932B               ANOP  ,                                           02661300
&XMISCOMPARE          SETC  'CONTINUE'  SET DEFAULT KEYWORD             02661400
.ZG932C               ANOP  ,                                           02661500
&ZXMISCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02661600
.*------------------------------------------------------------------    02661700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02661800
&XLISTTYPE            SETC  ''          INITIALIZE XVARIABLE            02661900
.*-------------------------------------------------------------------   02662000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02662100
.ZG935                ANOP  ,                                           02662200
                      AIF   (K'&LISTTYPE(1) LE 0).ZG935A                02662300
&ZTLC                 SETC 'NAMELIST'                                   02662400
                      AIF   ('&LISTTYPE(1)' NE '&ZTLC').ZG936           02662500
&XLISTTYPE            SETC  'NAMELIST'  SET KEYWORD                     02662600
                      AIF   (N'&LISTTYPE LE 1).ZG935A  CK NUM           02662700
&ZMS                  SETC  '"LISTTYPE='                                02662800
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02662900
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           02663000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02663100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02663200
.ZG935A               ANOP  ,                                           02663300
.*------------------------------------------------------------------    02663400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02663500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02663600
.ZG935A0              AIF   (K'&KEYCOMPARE LE 0).ZG935A1  OK            02663700
&ZCVAL                SETC '&ZCVAL KEYCOMPARE'  INCORRECT KEY USED      02663800
.ZG935A1              AIF   (K'&ENTRYKEY LE 0).ZG935A2  OK              02663900
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02664000
.ZG935A2              AIF   (K'&KEYREQTYPE LE 0).ZG935A3  OK            02664100
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02664200
.ZG935A3              AIF   (K'&KEYRANGEEND LE 0).ZG935A4  OK           02664300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02664400
.ZG935A4              AIF   (K'&SKEYCOMPARE LE 0).ZG935A5  OK           02664500
&ZCVAL                SETC '&ZCVAL SKEYCOMPARE'  INCORRECT KEY USED     02664600
.ZG935A5              AIF   (K'&SECONDARYKEY LE 0).ZG935A6  OK          02664700
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02664800
.ZG935A6              AIF   (K'&SKEYREQTYPE LE 0).ZG935A7  OK           02664900
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02665000
.ZG935A7              AIF   (K'&SKEYRANGEEND LE 0).ZG935A8  OK          02665100
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02665200
.ZG935A8              AIF   (K'&MOVETOKEY LE 0).ZG935A9  OK             02665300
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      02665400
.ZG935A9              AIF   (K'&LISTKEYINC LE 0).ZG935A10  OK           02665500
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02665600
.ZG935A10             AIF   (K'&LISTKEYAREA LE 0).ZG935A11  OK          02665700
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02665800
.ZG935A11             AIF   (K'&MOVETOSKEY LE 0).ZG935A12  OK           02665900
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      02666000
.ZG935A12             AIF   (K'&ZCVAL LE 0).ZG935A13  OK                02666100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02666200
&ZMS                  SETC  '"LISTTYPE'                                 02666300
&ZMS                  SETC  '&ZMS.=&LISTTYPE"'                          02666400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02666500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02666600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02666700
.ZG935A13             ANOP  ,                                           02666800
.*-------------------------------------------------------------------   02666900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02667000
.ZG936                ANOP  ,                                           02667100
&ZTLC                 SETC 'IDLIST'                                     02667200
                      AIF   ('&LISTTYPE(1)' NE '&ZTLC').ZG990           02667300
&XLISTTYPE            SETC  'IDLIST'    SET KEYWORD                     02667400
                      AIF   (N'&LISTTYPE LE 1).ZG936A  CK NUM           02667500
&ZMS                  SETC  '"LISTTYPE='                                02667600
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02667700
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           02667800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02667900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02668000
.ZG936A               ANOP  ,                                           02668100
.*------------------------------------------------------------------    02668200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02668300
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02668400
.*-------------------------------------------------------------------   02668500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02668600
.ZG939                ANOP  ,                                           02668700
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG939A              02668800
&ZTLC                 SETC 'NO'                                         02668900
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG940         02669000
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02669100
                      AIF   (N'&KEYCOMPARE LE 1).ZG939A  CK NUM         02669200
&ZMS                  SETC  '"KEYCOMPARE='                              02669300
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02669400
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02669500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02669600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02669700
.ZG939A               ANOP  ,                                           02669800
.*------------------------------------------------------------------    02669900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02670000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02670100
.ZG939A0              AIF   (K'&ENTRYKEY LE 0).ZG939A1  OK              02670200
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02670300
.ZG939A1              AIF   (K'&KEYREQTYPE LE 0).ZG939A2  OK            02670400
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02670500
.ZG939A2              AIF   (K'&KEYRANGEEND LE 0).ZG939A3  OK           02670600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02670700
.ZG939A3              AIF   (K'&ZCVAL LE 0).ZG939A4  OK                 02670800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02670900
&ZMS                  SETC  '"KEYCOMPARE'                               02671000
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02671100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02671200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02671300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02671400
.ZG939A4              ANOP  ,                                           02671500
.*-------------------------------------------------------------------   02671600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02671700
.ZG940                ANOP  ,                                           02671800
&ZTLC                 SETC 'YES'                                        02671900
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG954         02672000
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02672100
                      AIF   (N'&KEYCOMPARE LE 1).ZG940A  CK NUM         02672200
&ZMS                  SETC  '"KEYCOMPARE='                              02672300
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02672400
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02672500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02672600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02672700
.ZG940A               ANOP  ,                                           02672800
.*----------------------------------------------------------------***   02672900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02673000
                      AIF   (N'&ENTRYKEY LE 1).ZG942A  CK NUM           02673100
&ZMS                  SETC  '"ENTRYKEY='                                02673200
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02673300
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02673400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02673500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02673600
.ZG942A               ANOP  ,                                           02673700
.*-------------------------------------------------------------------   02673800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02673900
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02674000
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02674100
                      AIF   (N'&ENTRYKEY GT 1).ZG942B  MULTI            02674200
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02674300
.ZG942B               AIF   (K'&ENTRYKEY(1) GT 0).ZG942C                02674400
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02674500
&ZMS                  SETC  ' '                                         02674600
&ZMS                  SETC  '&ZMS "ENTRYKEY" KEY AND ITS'               02674700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02674800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02674900
.ZG942C               ANOP  ,                                           02675000
.*-------------------------------------------------------------------   02675100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02675200
                      AIF   (K'&ZXENTRYKEY LE 0).ZG942R  NOT I/O        02675300
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG942R           02675400
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02675500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG942P               02675600
                      AIF   (K'&ZCGPR GT 2).ZG942Q                      02675700
                      AIF   ('&ZCGPR' EQ '0').ZG942Q                    02675800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02675900
                      AIF   (T'&ZCGPR NE 'N').ZG942Q  INVALID REG NAME  02676000
.ZG942P               ANOP  ,                                           02676100
                      AIF   (T'&ZCGPR NE 'N').ZG942R  NON NUMERIC       02676200
                      AIF   ('&ZCGPR' LT '2').ZG942Q                    02676300
                      AIF   ('&ZCGPR' LE '12').ZG942R                   02676400
.ZG942Q               ANOP  ,                                           02676500
&ZMS                  SETC  '"ENTRYKEY='                                02676600
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02676700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02676800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02676900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02677000
.ZG942R               ANOP  ,                                           02677100
.*------------------------------------------------------------------    02677200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02677300
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02677400
.*-------------------------------------------------------------------   02677500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02677600
.ZG946                ANOP  ,                                           02677700
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG946A              02677800
&ZTLC                 SETC 'EQUAL'                                      02677900
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG947         02678000
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02678100
                      AIF   (N'&KEYREQTYPE LE 1).ZG946A  CK NUM         02678200
&ZMS                  SETC  '"KEYREQTYPE='                              02678300
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02678400
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02678500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02678600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02678700
.ZG946A               ANOP  ,                                           02678800
.*------------------------------------------------------------------    02678900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02679000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02679100
.ZG946A0              AIF   (K'&KEYRANGEEND LE 0).ZG946A1  OK           02679200
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02679300
.ZG946A1              AIF   (K'&ZCVAL LE 0).ZG946A2  OK                 02679400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02679500
&ZMS                  SETC  '"KEYREQTYPE'                               02679600
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02679700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02679800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02679900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02680000
.ZG946A2              ANOP  ,                                           02680100
.*-------------------------------------------------------------------   02680200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02680300
.ZG947                ANOP  ,                                           02680400
&ZTLC                 SETC 'LESSOREQUAL'                                02680500
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG948         02680600
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02680700
                      AIF   (N'&KEYREQTYPE LE 1).ZG947A  CK NUM         02680800
&ZMS                  SETC  '"KEYREQTYPE='                              02680900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02681000
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02681100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02681200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02681300
.ZG947A               ANOP  ,                                           02681400
.*------------------------------------------------------------------    02681500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02681600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02681700
.ZG947A0              AIF   (K'&KEYRANGEEND LE 0).ZG947A1  OK           02681800
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02681900
.ZG947A1              AIF   (K'&ZCVAL LE 0).ZG947A2  OK                 02682000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02682100
&ZMS                  SETC  '"KEYREQTYPE'                               02682200
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02682300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02682400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02682500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02682600
.ZG947A2              ANOP  ,                                           02682700
.*-------------------------------------------------------------------   02682800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02682900
.ZG948                ANOP  ,                                           02683000
&ZTLC                 SETC 'GREATEROREQUAL'                             02683100
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG949         02683200
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02683300
                      AIF   (N'&KEYREQTYPE LE 1).ZG948A  CK NUM         02683400
&ZMS                  SETC  '"KEYREQTYPE='                              02683500
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02683600
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02683700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02683800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02683900
.ZG948A               ANOP  ,                                           02684000
.*------------------------------------------------------------------    02684100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02684200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02684300
.ZG948A0              AIF   (K'&KEYRANGEEND LE 0).ZG948A1  OK           02684400
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02684500
.ZG948A1              AIF   (K'&ZCVAL LE 0).ZG948A2  OK                 02684600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02684700
&ZMS                  SETC  '"KEYREQTYPE'                               02684800
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02684900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02685000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02685100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02685200
.ZG948A2              ANOP  ,                                           02685300
.*-------------------------------------------------------------------   02685400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02685500
.ZG949                ANOP  ,                                           02685600
&ZTLC                 SETC 'RANGE'                                      02685700
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG953         02685800
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02685900
                      AIF   (N'&KEYREQTYPE LE 1).ZG949A  CK NUM         02686000
&ZMS                  SETC  '"KEYREQTYPE='                              02686100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02686200
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02686300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02686400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02686500
.ZG949A               ANOP  ,                                           02686600
.*----------------------------------------------------------------***   02686700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02686800
                      AIF   (N'&KEYRANGEEND LE 1).ZG951A  CK NUM        02686900
&ZMS                  SETC  '"KEYRANGEEND='                             02687000
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02687100
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02687200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02687300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02687400
.ZG951A               ANOP  ,                                           02687500
.*-------------------------------------------------------------------   02687600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02687700
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02687800
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02687900
                      AIF   (N'&KEYRANGEEND GT 1).ZG951B  MULTI         02688000
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02688100
.ZG951B               AIF   (K'&KEYRANGEEND(1) GT 0).ZG951C             02688200
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02688300
&ZMS                  SETC  ' '                                         02688400
&ZMS                  SETC  '&ZMS "KEYRANGEEND" KEY AND ITS'            02688500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02688600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02688700
.ZG951C               ANOP  ,                                           02688800
.*-------------------------------------------------------------------   02688900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02689000
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG951R  NOT I/O     02689100
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG951R        02689200
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02689300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG951P               02689400
                      AIF   (K'&ZCGPR GT 2).ZG951Q                      02689500
                      AIF   ('&ZCGPR' EQ '0').ZG951Q                    02689600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02689700
                      AIF   (T'&ZCGPR NE 'N').ZG951Q  INVALID REG NAME  02689800
.ZG951P               ANOP  ,                                           02689900
                      AIF   (T'&ZCGPR NE 'N').ZG951R  NON NUMERIC       02690000
                      AIF   ('&ZCGPR' LT '2').ZG951Q                    02690100
                      AIF   ('&ZCGPR' LE '12').ZG951R                   02690200
.ZG951Q               ANOP  ,                                           02690300
&ZMS                  SETC  '"KEYRANGEEND='                             02690400
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02690500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02690600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02690700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02690800
.ZG951R               ANOP  ,                                           02690900
.*------------------------------------------------------------------    02691000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02691100
.ZG953                ANOP  ,                                           02691200
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02691300
                      AIF   (K'&XKEYREQTYPE GT 0).ZG953E  VALID ARG     02691400
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG953D  OMITTED      02691500
&ZASYSLNDX            SETA  0                                           02691600
.ZG953A               ANOP  ,           POSITIONAL MACRO KEY            02691700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02691800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG953C           02691900
&ZTLC                 SETC 'KEYREQTYPE'                                 02692000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG953A  02692100
.ZG953B               ANOP  ,                                           02692200
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02692300
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      02692400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02692500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02692600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02692700
                      AGO   .ZG953E                                     02692800
.ZG953C               ANOP  ,                                           02692900
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02693000
&ZMS                  SETC  '"KEYREQTYPE='                              02693100
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02693200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02693300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02693400
&ZMS                  SETC  '&ZMS "EQUAL",'                             02693500
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02693600
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02693700
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02693800
                      MNOTE 8,' &ZMS '                                  02693900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02694000
                      AGO   .ZG953E                                     02694100
.ZG953D               ANOP  ,                                           02694200
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02694300
.ZG953E               ANOP  ,                                           02694400
.*------------------------------------------------------------------    02694500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02694600
.ZG954                ANOP  ,                                           02694700
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02694800
                      AIF   (K'&XKEYCOMPARE GT 0).ZG954E  VALID ARG     02694900
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG954D  OMITTED      02695000
&ZASYSLNDX            SETA  0                                           02695100
.ZG954A               ANOP  ,           POSITIONAL MACRO KEY            02695200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02695300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG954C           02695400
&ZTLC                 SETC 'KEYCOMPARE'                                 02695500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG954A  02695600
.ZG954B               ANOP  ,                                           02695700
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02695800
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      02695900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02696000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02696100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02696200
                      AGO   .ZG954E                                     02696300
.ZG954C               ANOP  ,                                           02696400
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02696500
&ZMS                  SETC  '"KEYCOMPARE='                              02696600
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02696700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02696800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02696900
&ZMS                  SETC  '&ZMS "NO"'                                 02697000
&ZMS                  SETC  '&ZMS OR "YES".'                            02697100
                      MNOTE 8,' &ZMS '                                  02697200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02697300
                      AGO   .ZG954E                                     02697400
.ZG954D               ANOP  ,                                           02697500
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02697600
.ZG954E               ANOP  ,                                           02697700
.*------------------------------------------------------------------    02697800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02697900
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02698000
.*-------------------------------------------------------------------   02698100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02698200
.ZG957                ANOP  ,                                           02698300
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG957A             02698400
&ZTLC                 SETC 'NO'                                         02698500
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG958        02698600
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02698700
                      AIF   (N'&SKEYCOMPARE LE 1).ZG957A  CK NUM        02698800
&ZMS                  SETC  '"SKEYCOMPARE='                             02698900
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02699000
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02699100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02699200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02699300
.ZG957A               ANOP  ,                                           02699400
.*------------------------------------------------------------------    02699500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02699600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02699700
.ZG957A0              AIF   (K'&SECONDARYKEY LE 0).ZG957A1  OK          02699800
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02699900
.ZG957A1              AIF   (K'&SKEYREQTYPE LE 0).ZG957A2  OK           02700000
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02700100
.ZG957A2              AIF   (K'&SKEYRANGEEND LE 0).ZG957A3  OK          02700200
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02700300
.ZG957A3              AIF   (K'&ZCVAL LE 0).ZG957A4  OK                 02700400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02700500
&ZMS                  SETC  '"SKEYCOMPARE'                              02700600
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02700700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02700800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02700900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02701000
.ZG957A4              ANOP  ,                                           02701100
.*-------------------------------------------------------------------   02701200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02701300
.ZG958                ANOP  ,                                           02701400
&ZTLC                 SETC 'YES'                                        02701500
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG972        02701600
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02701700
                      AIF   (N'&SKEYCOMPARE LE 1).ZG958A  CK NUM        02701800
&ZMS                  SETC  '"SKEYCOMPARE='                             02701900
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02702000
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02702100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02702200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02702300
.ZG958A               ANOP  ,                                           02702400
.*----------------------------------------------------------------***   02702500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02702600
                      AIF   (N'&SECONDARYKEY LE 1).ZG960A  CK NUM       02702700
&ZMS                  SETC  '"SECONDARYKEY='                            02702800
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02702900
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02703000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02703100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02703200
.ZG960A               ANOP  ,                                           02703300
.*-------------------------------------------------------------------   02703400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02703500
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02703600
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02703700
                      AIF   (N'&SECONDARYKEY GT 1).ZG960B  MULTI        02703800
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02703900
.ZG960B               AIF   (K'&SECONDARYKEY(1) GT 0).ZG960C            02704000
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02704100
&ZMS                  SETC  ' '                                         02704200
&ZMS                  SETC  '&ZMS "SECONDARYKEY" KEY AND ITS'           02704300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02704400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02704500
.ZG960C               ANOP  ,                                           02704600
.*-------------------------------------------------------------------   02704700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02704800
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG960R  NOT I/O    02704900
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG960R       02705000
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02705100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG960P               02705200
                      AIF   (K'&ZCGPR GT 2).ZG960Q                      02705300
                      AIF   ('&ZCGPR' EQ '0').ZG960Q                    02705400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02705500
                      AIF   (T'&ZCGPR NE 'N').ZG960Q  INVALID REG NAME  02705600
.ZG960P               ANOP  ,                                           02705700
                      AIF   (T'&ZCGPR NE 'N').ZG960R  NON NUMERIC       02705800
                      AIF   ('&ZCGPR' LT '2').ZG960Q                    02705900
                      AIF   ('&ZCGPR' LE '12').ZG960R                   02706000
.ZG960Q               ANOP  ,                                           02706100
&ZMS                  SETC  '"SECONDARYKEY='                            02706200
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02706300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02706400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02706500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02706600
.ZG960R               ANOP  ,                                           02706700
.*------------------------------------------------------------------    02706800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02706900
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02707000
.*-------------------------------------------------------------------   02707100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02707200
.ZG964                ANOP  ,                                           02707300
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG964A             02707400
&ZTLC                 SETC 'EQUAL'                                      02707500
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG965        02707600
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02707700
                      AIF   (N'&SKEYREQTYPE LE 1).ZG964A  CK NUM        02707800
&ZMS                  SETC  '"SKEYREQTYPE='                             02707900
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02708000
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02708100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02708200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02708300
.ZG964A               ANOP  ,                                           02708400
.*------------------------------------------------------------------    02708500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02708600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02708700
.ZG964A0              AIF   (K'&SKEYRANGEEND LE 0).ZG964A1  OK          02708800
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02708900
.ZG964A1              AIF   (K'&ZCVAL LE 0).ZG964A2  OK                 02709000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02709100
&ZMS                  SETC  '"SKEYREQTYPE'                              02709200
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02709300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02709400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02709500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02709600
.ZG964A2              ANOP  ,                                           02709700
.*-------------------------------------------------------------------   02709800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02709900
.ZG965                ANOP  ,                                           02710000
&ZTLC                 SETC 'LESSOREQUAL'                                02710100
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG966        02710200
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02710300
                      AIF   (N'&SKEYREQTYPE LE 1).ZG965A  CK NUM        02710400
&ZMS                  SETC  '"SKEYREQTYPE='                             02710500
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02710600
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02710700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02710800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02710900
.ZG965A               ANOP  ,                                           02711000
.*------------------------------------------------------------------    02711100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02711200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02711300
.ZG965A0              AIF   (K'&SKEYRANGEEND LE 0).ZG965A1  OK          02711400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02711500
.ZG965A1              AIF   (K'&ZCVAL LE 0).ZG965A2  OK                 02711600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02711700
&ZMS                  SETC  '"SKEYREQTYPE'                              02711800
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02711900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02712000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02712100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02712200
.ZG965A2              ANOP  ,                                           02712300
.*-------------------------------------------------------------------   02712400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02712500
.ZG966                ANOP  ,                                           02712600
&ZTLC                 SETC 'GREATEROREQUAL'                             02712700
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG967        02712800
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02712900
                      AIF   (N'&SKEYREQTYPE LE 1).ZG966A  CK NUM        02713000
&ZMS                  SETC  '"SKEYREQTYPE='                             02713100
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02713200
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02713300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02713400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02713500
.ZG966A               ANOP  ,                                           02713600
.*------------------------------------------------------------------    02713700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02713800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02713900
.ZG966A0              AIF   (K'&SKEYRANGEEND LE 0).ZG966A1  OK          02714000
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02714100
.ZG966A1              AIF   (K'&ZCVAL LE 0).ZG966A2  OK                 02714200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02714300
&ZMS                  SETC  '"SKEYREQTYPE'                              02714400
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02714500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02714600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02714700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02714800
.ZG966A2              ANOP  ,                                           02714900
.*-------------------------------------------------------------------   02715000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02715100
.ZG967                ANOP  ,                                           02715200
&ZTLC                 SETC 'RANGE'                                      02715300
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG971        02715400
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02715500
                      AIF   (N'&SKEYREQTYPE LE 1).ZG967A  CK NUM        02715600
&ZMS                  SETC  '"SKEYREQTYPE='                             02715700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02715800
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02715900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02716000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02716100
.ZG967A               ANOP  ,                                           02716200
.*----------------------------------------------------------------***   02716300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02716400
                      AIF   (N'&SKEYRANGEEND LE 1).ZG969A  CK NUM       02716500
&ZMS                  SETC  '"SKEYRANGEEND='                            02716600
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02716700
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02716800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02716900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02717000
.ZG969A               ANOP  ,                                           02717100
.*-------------------------------------------------------------------   02717200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02717300
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02717400
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02717500
                      AIF   (N'&SKEYRANGEEND GT 1).ZG969B  MULTI        02717600
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02717700
.ZG969B               AIF   (K'&SKEYRANGEEND(1) GT 0).ZG969C            02717800
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02717900
&ZMS                  SETC  ' '                                         02718000
&ZMS                  SETC  '&ZMS "SKEYRANGEEND" KEY AND ITS'           02718100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02718200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02718300
.ZG969C               ANOP  ,                                           02718400
.*-------------------------------------------------------------------   02718500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02718600
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG969R  NOT I/O    02718700
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG969R       02718800
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02718900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG969P               02719000
                      AIF   (K'&ZCGPR GT 2).ZG969Q                      02719100
                      AIF   ('&ZCGPR' EQ '0').ZG969Q                    02719200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02719300
                      AIF   (T'&ZCGPR NE 'N').ZG969Q  INVALID REG NAME  02719400
.ZG969P               ANOP  ,                                           02719500
                      AIF   (T'&ZCGPR NE 'N').ZG969R  NON NUMERIC       02719600
                      AIF   ('&ZCGPR' LT '2').ZG969Q                    02719700
                      AIF   ('&ZCGPR' LE '12').ZG969R                   02719800
.ZG969Q               ANOP  ,                                           02719900
&ZMS                  SETC  '"SKEYRANGEEND='                            02720000
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02720100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02720200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02720300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02720400
.ZG969R               ANOP  ,                                           02720500
.*------------------------------------------------------------------    02720600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02720700
.ZG971                ANOP  ,                                           02720800
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02720900
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG971E  VALID ARG    02721000
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG971D  OMITTED     02721100
&ZASYSLNDX            SETA  0                                           02721200
.ZG971A               ANOP  ,           POSITIONAL MACRO KEY            02721300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02721400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG971C           02721500
&ZTLC                 SETC 'SKEYREQTYPE'                                02721600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG971A  02721700
.ZG971B               ANOP  ,                                           02721800
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02721900
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     02722000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02722100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02722200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02722300
                      AGO   .ZG971E                                     02722400
.ZG971C               ANOP  ,                                           02722500
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02722600
&ZMS                  SETC  '"SKEYREQTYPE='                             02722700
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02722800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02722900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02723000
&ZMS                  SETC  '&ZMS "EQUAL",'                             02723100
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02723200
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02723300
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02723400
                      MNOTE 8,' &ZMS '                                  02723500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02723600
                      AGO   .ZG971E                                     02723700
.ZG971D               ANOP  ,                                           02723800
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02723900
.ZG971E               ANOP  ,                                           02724000
.*------------------------------------------------------------------    02724100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02724200
.ZG972                ANOP  ,                                           02724300
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02724400
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG972E  VALID ARG    02724500
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG972D  OMITTED     02724600
&ZASYSLNDX            SETA  0                                           02724700
.ZG972A               ANOP  ,           POSITIONAL MACRO KEY            02724800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02724900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG972C           02725000
&ZTLC                 SETC 'SKEYCOMPARE'                                02725100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG972A  02725200
.ZG972B               ANOP  ,                                           02725300
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02725400
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     02725500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02725600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02725700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02725800
                      AGO   .ZG972E                                     02725900
.ZG972C               ANOP  ,                                           02726000
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02726100
&ZMS                  SETC  '"SKEYCOMPARE='                             02726200
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02726300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02726400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02726500
&ZMS                  SETC  '&ZMS "NO"'                                 02726600
&ZMS                  SETC  '&ZMS OR "YES".'                            02726700
                      MNOTE 8,' &ZMS '                                  02726800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02726900
                      AGO   .ZG972E                                     02727000
.ZG972D               ANOP  ,                                           02727100
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02727200
.ZG972E               ANOP  ,                                           02727300
.*------------------------------------------------------------------    02727400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02727500
&XMOVETOKEY           SETC  ''          INITIALIZE XVARIABLE            02727600
.*-------------------------------------------------------------------   02727700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02727800
.ZG975                ANOP  ,                                           02727900
                      AIF   (K'&MOVETOKEY(1) LE 0).ZG975A               02728000
&ZTLC                 SETC 'UNCHANGED'                                  02728100
                      AIF   ('&MOVETOKEY(1)' NE '&ZTLC').ZG976          02728200
&XMOVETOKEY           SETC  'UNCHANGED'         SET KEYWORD             02728300
                      AIF   (N'&MOVETOKEY LE 1).ZG975A  CK NUM          02728400
&ZMS                  SETC  '"MOVETOKEY='                               02728500
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          02728600
&ZMS                  SETC  '&ZMS "MOVETOKEY"'                          02728700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02728800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02728900
.ZG975A               ANOP  ,                                           02729000
.*------------------------------------------------------------------    02729100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02729200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02729300
.ZG975A0              AIF   (K'&LISTKEYINC LE 0).ZG975A1  OK            02729400
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02729500
.ZG975A1              AIF   (K'&LISTKEYAREA LE 0).ZG975A2  OK           02729600
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02729700
.ZG975A2              AIF   (K'&ZCVAL LE 0).ZG975A3  OK                 02729800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02729900
&ZMS                  SETC  '"MOVETOKEY'                                02730000
&ZMS                  SETC  '&ZMS.=&MOVETOKEY"'                         02730100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02730200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02730300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02730400
.ZG975A3              ANOP  ,                                           02730500
.*-------------------------------------------------------------------   02730600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02730700
.ZG976                ANOP  ,                                           02730800
&ZTLC                 SETC 'TARGETKEY'                                  02730900
                      AIF   ('&MOVETOKEY(1)' NE '&ZTLC').ZG977          02731000
&XMOVETOKEY           SETC  'TARGETKEY'         SET KEYWORD             02731100
                      AIF   (N'&MOVETOKEY LE 1).ZG976A  CK NUM          02731200
&ZMS                  SETC  '"MOVETOKEY='                               02731300
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          02731400
&ZMS                  SETC  '&ZMS "MOVETOKEY"'                          02731500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02731600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02731700
.ZG976A               ANOP  ,                                           02731800
.*------------------------------------------------------------------    02731900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02732000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02732100
.ZG976A0              AIF   (K'&LISTKEYINC LE 0).ZG976A1  OK            02732200
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02732300
.ZG976A1              AIF   (K'&LISTKEYAREA LE 0).ZG976A2  OK           02732400
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02732500
.ZG976A2              AIF   (K'&ZCVAL LE 0).ZG976A3  OK                 02732600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02732700
&ZMS                  SETC  '"MOVETOKEY'                                02732800
&ZMS                  SETC  '&ZMS.=&MOVETOKEY"'                         02732900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02733000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02733100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02733200
.ZG976A3              ANOP  ,                                           02733300
.*-------------------------------------------------------------------   02733400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02733500
.ZG977                ANOP  ,                                           02733600
&ZTLC                 SETC 'LISTKEY'                                    02733700
                      AIF   ('&MOVETOKEY(1)' NE '&ZTLC').ZG984          02733800
&XMOVETOKEY           SETC  'LISTKEY'   SET KEYWORD                     02733900
                      AIF   (N'&MOVETOKEY LE 1).ZG977A  CK NUM          02734000
&ZMS                  SETC  '"MOVETOKEY='                               02734100
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          02734200
&ZMS                  SETC  '&ZMS "MOVETOKEY"'                          02734300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02734400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02734500
.ZG977A               ANOP  ,                                           02734600
.*----------------------------------------------------------------***   02734700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02734800
                      AIF   (N'&LISTKEYINC LE 1).ZG979A  CK NUM         02734900
&ZMS                  SETC  '"LISTKEYINC='                              02735000
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         02735100
&ZMS                  SETC  '&ZMS "LISTKEYINC"'                         02735200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02735300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02735400
.ZG979A               ANOP  ,                                           02735500
.*-------------------------------------------------------------------   02735600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02735700
&ZXLISTKEYINC         SETC  'INPUT'     SET IN/OUTPUT                   02735800
&XLISTKEYINC          SETC  'NO'                                        02735900
                      AIF   (K'&LISTKEYINC(1) LE 0).ZG979B  PARM        02736000
&XLISTKEYINC          SETC  '&LISTKEYINC(1)'    SET XVARIABLE           02736100
                      AIF   (N'&LISTKEYINC GT 1).ZG979B  MULTI          02736200
&XLISTKEYINC          SETC  '&LISTKEYINC'       SET XVARIABLE           02736300
.ZG979B               ANOP  ,                                           02736400
.*-------------------------------------------------------------------   02736500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02736600
                      AIF   (K'&ZXLISTKEYINC LE 0).ZG979R  NOT I/O      02736700
         AIF   ('&XLISTKEYINC' EQ 'NO').ZG979R                          02736800
                      AIF   ('&XLISTKEYINC'(1,1) NE '(').ZG979R         02736900
&ZCGPR                SETC  '&XLISTKEYINC'(2,K'&XLISTKEYINC-2)          02737000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG979P               02737100
                      AIF   (K'&ZCGPR GT 2).ZG979Q                      02737200
                      AIF   ('&ZCGPR' EQ '0').ZG979Q                    02737300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02737400
                      AIF   (T'&ZCGPR NE 'N').ZG979Q  INVALID REG NAME  02737500
.ZG979P               ANOP  ,                                           02737600
                      AIF   (T'&ZCGPR NE 'N').ZG979R  NON NUMERIC       02737700
                      AIF   ('&ZCGPR' LT '2').ZG979Q                    02737800
                      AIF   ('&ZCGPR' LE '12').ZG979R                   02737900
.ZG979Q               ANOP  ,                                           02738000
&ZMS                  SETC  '"LISTKEYINC='                              02738100
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         02738200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02738300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02738400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02738500
.ZG979R               ANOP  ,                                           02738600
.*----------------------------------------------------------------***   02738700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02738800
                      AIF   (N'&LISTKEYAREA LE 1).ZG982A  CK NUM        02738900
&ZMS                  SETC  '"LISTKEYAREA='                             02739000
&ZMS                  SETC  '&ZMS.&LISTKEYAREA"'                        02739100
&ZMS                  SETC  '&ZMS "LISTKEYAREA"'                        02739200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02739300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02739400
.ZG982A               ANOP  ,                                           02739500
.*-------------------------------------------------------------------   02739600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02739700
&ZXLISTKEYAREA        SETC  'INPUT'     SET IN/OUTPUT                   02739800
&XLISTKEYAREA         SETC  'NO'                                        02739900
                      AIF   (K'&LISTKEYAREA(1) LE 0).ZG982B  PARM       02740000
&XLISTKEYAREA         SETC  '&LISTKEYAREA(1)'   SET XVARIABLE           02740100
                      AIF   (N'&LISTKEYAREA GT 1).ZG982B  MULTI         02740200
&XLISTKEYAREA         SETC  '&LISTKEYAREA'      SET XVARIABLE           02740300
.ZG982B               ANOP  ,                                           02740400
.*-------------------------------------------------------------------   02740500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02740600
                      AIF   (K'&ZXLISTKEYAREA LE 0).ZG982R  NOT I/O     02740700
         AIF   ('&XLISTKEYAREA' EQ 'NO').ZG982R                         02740800
                      AIF   ('&XLISTKEYAREA'(1,1) NE '(').ZG982R        02740900
&ZCGPR                SETC  '&XLISTKEYAREA'(2,K'&XLISTKEYAREA-2)        02741000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG982P               02741100
                      AIF   (K'&ZCGPR GT 2).ZG982Q                      02741200
                      AIF   ('&ZCGPR' EQ '0').ZG982Q                    02741300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02741400
                      AIF   (T'&ZCGPR NE 'N').ZG982Q  INVALID REG NAME  02741500
.ZG982P               ANOP  ,                                           02741600
                      AIF   (T'&ZCGPR NE 'N').ZG982R  NON NUMERIC       02741700
                      AIF   ('&ZCGPR' LT '2').ZG982Q                    02741800
                      AIF   ('&ZCGPR' LE '12').ZG982R                   02741900
.ZG982Q               ANOP  ,                                           02742000
&ZMS                  SETC  '"LISTKEYAREA='                             02742100
&ZMS                  SETC  '&ZMS.&LISTKEYAREA"'                        02742200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02742300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02742400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02742500
.ZG982R               ANOP  ,                                           02742600
.*------------------------------------------------------------------    02742700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02742800
.ZG984                ANOP  ,                                           02742900
&ZXMOVETOKEY          SETC  'INPUT'     SET IN/OUTPUT                   02743000
                      AIF   (K'&XMOVETOKEY GT 0).ZG984E  VALID ARG      02743100
                      AIF   (T'&MOVETOKEY EQ 'O').ZG984D  OMITTED       02743200
&ZASYSLNDX            SETA  0                                           02743300
.ZG984A               ANOP  ,           POSITIONAL MACRO KEY            02743400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02743500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG984C           02743600
&ZTLC                 SETC 'MOVETOKEY'                                  02743700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG984A  02743800
.ZG984B               ANOP  ,                                           02743900
&ZXMOVETOKEY          SETC  ''          RESET IN/OUTPUT                 02744000
&ZMS                  SETC  'THE "MOVETOKEY" KEY'                       02744100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02744200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02744300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02744400
                      AGO   .ZG984E                                     02744500
.ZG984C               ANOP  ,                                           02744600
&ZXMOVETOKEY          SETC  ''          RESET IN/OUTPUT                 02744700
&ZMS                  SETC  '"MOVETOKEY='                               02744800
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          02744900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02745000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02745100
&ZMS                  SETC  '&ZMS "UNCHANGED",'                         02745200
&ZMS                  SETC  '&ZMS "TARGETKEY",'                         02745300
&ZMS                  SETC  '&ZMS OR "LISTKEY".'                        02745400
                      MNOTE 8,' &ZMS '                                  02745500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02745600
                      AGO   .ZG984E                                     02745700
.ZG984D               ANOP  ,                                           02745800
&XMOVETOKEY           SETC  'UNCHANGED'         SET DEFAULT KEYWORD     02745900
.ZG984E               ANOP  ,                                           02746000
.*------------------------------------------------------------------    02746100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02746200
&XMOVETOSKEY          SETC  ''          INITIALIZE XVARIABLE            02746300
.*-------------------------------------------------------------------   02746400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02746500
.ZG987                ANOP  ,                                           02746600
                      AIF   (K'&MOVETOSKEY(1) LE 0).ZG987A              02746700
&ZTLC                 SETC 'UNCHANGED'                                  02746800
                      AIF   ('&MOVETOSKEY(1)' NE '&ZTLC').ZG988         02746900
&XMOVETOSKEY          SETC  'UNCHANGED'         SET KEYWORD             02747000
                      AIF   (N'&MOVETOSKEY LE 1).ZG987A  CK NUM         02747100
&ZMS                  SETC  '"MOVETOSKEY='                              02747200
&ZMS                  SETC  '&ZMS.&MOVETOSKEY"'                         02747300
&ZMS                  SETC  '&ZMS "MOVETOSKEY"'                         02747400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02747500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02747600
.ZG987A               ANOP  ,                                           02747700
.*-------------------------------------------------------------------   02747800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02747900
.ZG988                ANOP  ,                                           02748000
&ZTLC                 SETC 'TARGETKEY'                                  02748100
                      AIF   ('&MOVETOSKEY(1)' NE '&ZTLC').ZG989         02748200
&XMOVETOSKEY          SETC  'TARGETKEY'         SET KEYWORD             02748300
                      AIF   (N'&MOVETOSKEY LE 1).ZG988A  CK NUM         02748400
&ZMS                  SETC  '"MOVETOSKEY='                              02748500
&ZMS                  SETC  '&ZMS.&MOVETOSKEY"'                         02748600
&ZMS                  SETC  '&ZMS "MOVETOSKEY"'                         02748700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02748800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02748900
.ZG988A               ANOP  ,                                           02749000
.*------------------------------------------------------------------    02749100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02749200
.ZG989                ANOP  ,                                           02749300
&ZXMOVETOSKEY         SETC  'INPUT'     SET IN/OUTPUT                   02749400
                      AIF   (K'&XMOVETOSKEY GT 0).ZG989E  VALID ARG     02749500
                      AIF   (T'&MOVETOSKEY EQ 'O').ZG989D  OMITTED      02749600
&ZASYSLNDX            SETA  0                                           02749700
.ZG989A               ANOP  ,           POSITIONAL MACRO KEY            02749800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02749900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG989C           02750000
&ZTLC                 SETC 'MOVETOSKEY'                                 02750100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG989A  02750200
.ZG989B               ANOP  ,                                           02750300
&ZXMOVETOSKEY         SETC  ''          RESET IN/OUTPUT                 02750400
&ZMS                  SETC  'THE "MOVETOSKEY" KEY'                      02750500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02750600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02750700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02750800
                      AGO   .ZG989E                                     02750900
.ZG989C               ANOP  ,                                           02751000
&ZXMOVETOSKEY         SETC  ''          RESET IN/OUTPUT                 02751100
&ZMS                  SETC  '"MOVETOSKEY='                              02751200
&ZMS                  SETC  '&ZMS.&MOVETOSKEY"'                         02751300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02751400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02751500
&ZMS                  SETC  '&ZMS "UNCHANGED"'                          02751600
&ZMS                  SETC  '&ZMS OR "TARGETKEY".'                      02751700
                      MNOTE 8,' &ZMS '                                  02751800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02751900
                      AGO   .ZG989E                                     02752000
.ZG989D               ANOP  ,                                           02752100
&XMOVETOSKEY          SETC  'UNCHANGED'         SET DEFAULT KEYWORD     02752200
.ZG989E               ANOP  ,                                           02752300
.*------------------------------------------------------------------    02752400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02752500
.ZG990                ANOP  ,                                           02752600
&ZXLISTTYPE           SETC  'INPUT'     SET IN/OUTPUT                   02752700
                      AIF   (K'&XLISTTYPE GT 0).ZG990E  VALID ARG       02752800
                      AIF   (T'&LISTTYPE EQ 'O').ZG990D  OMITTED        02752900
&ZASYSLNDX            SETA  0                                           02753000
.ZG990A               ANOP  ,           POSITIONAL MACRO KEY            02753100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02753200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG990C           02753300
&ZTLC                 SETC 'LISTTYPE'                                   02753400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG990A  02753500
.ZG990B               ANOP  ,                                           02753600
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02753700
&ZMS                  SETC  'THE "LISTTYPE" KEY'                        02753800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02753900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02754000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02754100
                      AGO   .ZG990E                                     02754200
.ZG990C               ANOP  ,                                           02754300
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02754400
&ZMS                  SETC  '"LISTTYPE='                                02754500
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02754600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02754700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02754800
&ZMS                  SETC  '&ZMS "NAMELIST"'                           02754900
&ZMS                  SETC  '&ZMS OR "IDLIST".'                         02755000
                      MNOTE 8,' &ZMS '                                  02755100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02755200
                      AGO   .ZG990E                                     02755300
.ZG990D               ANOP  ,                                           02755400
&XLISTTYPE            SETC  'NAMELIST'  SET DEFAULT KEYWORD             02755500
.ZG990E               ANOP  ,                                           02755600
.*------------------------------------------------------------------    02755700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02755800
                      AIF   (K'&LISTTYPE(1) GT 0).ZG990F  PARM          02755900
&XLISTTYPE            SETC  ''          ENSURE NULL KEYWORD             02756000
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02756100
&ZMS                  SETC  'THE'                                       02756200
&ZMS                  SETC  '&ZMS "LISTTYPE" KEY AND ITS'               02756300
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               02756400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02756500
&ZMS                  SETC  '&ZMS "NAMELIST"'                           02756600
&ZMS                  SETC  '&ZMS OR "IDLIST".'                         02756700
                      MNOTE 8,' &ZMS '                                  02756800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02756900
.ZG990F               ANOP  ,                                           02757000
.*------------------------------------------------------------------    02757100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02757200
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02757300
.*-------------------------------------------------------------------   02757400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02757500
.ZG993                ANOP  ,                                           02757600
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG993A             02757700
&ZTLC                 SETC 'NO'                                         02757800
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG994        02757900
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02758000
                      AIF   (N'&LISTCOMPARE LE 1).ZG993A  CK NUM        02758100
&ZMS                  SETC  '"LISTCOMPARE='                             02758200
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02758300
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02758400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02758500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02758600
.ZG993A               ANOP  ,                                           02758700
.*------------------------------------------------------------------    02758800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02758900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02759000
.ZG993A0              AIF   (K'&LISTNUM LE 0).ZG993A1  OK               02759100
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02759200
.ZG993A1              AIF   (K'&AUTHCOMPARE LE 0).ZG993A2  OK           02759300
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02759400
.ZG993A2              AIF   (K'&AUTHCOMP LE 0).ZG993A3  OK              02759500
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02759600
.ZG993A3              AIF   (K'&AUTHCOMPTYPE LE 0).ZG993A4  OK          02759700
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02759800
.ZG993A4              AIF   (K'&ZCVAL LE 0).ZG993A5  OK                 02759900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02760000
&ZMS                  SETC  '"LISTCOMPARE'                              02760100
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02760200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02760300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02760400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02760500
.ZG993A5              ANOP  ,                                           02760600
.*-------------------------------------------------------------------   02760700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02760800
.ZG994                ANOP  ,                                           02760900
&ZTLC                 SETC 'YES'                                        02761000
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG1011       02761100
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02761200
                      AIF   (N'&LISTCOMPARE LE 1).ZG994A  CK NUM        02761300
&ZMS                  SETC  '"LISTCOMPARE='                             02761400
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02761500
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02761600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02761700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02761800
.ZG994A               ANOP  ,                                           02761900
.*----------------------------------------------------------------***   02762000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02762100
                      AIF   (N'&LISTNUM LE 1).ZG996A  CK NUM            02762200
&ZMS                  SETC  '"LISTNUM='                                 02762300
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02762400
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02762500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02762600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02762700
.ZG996A               ANOP  ,                                           02762800
.*-------------------------------------------------------------------   02762900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02763000
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02763100
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02763200
                      AIF   (N'&LISTNUM GT 1).ZG996B  MULTI             02763300
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02763400
.ZG996B               AIF   (K'&LISTNUM(1) GT 0).ZG996C                 02763500
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02763600
&ZMS                  SETC  ' '                                         02763700
&ZMS                  SETC  '&ZMS "LISTNUM" KEY AND ITS'                02763800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02763900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02764000
.ZG996C               ANOP  ,                                           02764100
.*-------------------------------------------------------------------   02764200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02764300
                      AIF   (K'&ZXLISTNUM LE 0).ZG996R  NOT I/O         02764400
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG996R            02764500
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02764600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG996P               02764700
                      AIF   (K'&ZCGPR GT 2).ZG996Q                      02764800
                      AIF   ('&ZCGPR' EQ '0').ZG996Q                    02764900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02765000
                      AIF   (T'&ZCGPR NE 'N').ZG996Q  INVALID REG NAME  02765100
.ZG996P               ANOP  ,                                           02765200
                      AIF   (T'&ZCGPR NE 'N').ZG996R  NON NUMERIC       02765300
                      AIF   ('&ZCGPR' LT '2').ZG996Q                    02765400
                      AIF   ('&ZCGPR' LE '12').ZG996R                   02765500
.ZG996Q               ANOP  ,                                           02765600
&ZMS                  SETC  '"LISTNUM='                                 02765700
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02765800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02765900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02766000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02766100
.ZG996R               ANOP  ,                                           02766200
.*------------------------------------------------------------------    02766300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02766400
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02766500
.*-------------------------------------------------------------------   02766600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02766700
.ZG999                ANOP  ,                                           02766800
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG999A             02766900
&ZTLC                 SETC 'NO'                                         02767000
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG1000       02767100
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02767200
                      AIF   (N'&AUTHCOMPARE LE 1).ZG999A  CK NUM        02767300
&ZMS                  SETC  '"AUTHCOMPARE='                             02767400
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02767500
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02767600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02767700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02767800
.ZG999A               ANOP  ,                                           02767900
.*------------------------------------------------------------------    02768000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02768100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02768200
.ZG999A0              AIF   (K'&AUTHCOMP LE 0).ZG999A1  OK              02768300
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02768400
.ZG999A1              AIF   (K'&AUTHCOMPTYPE LE 0).ZG999A2  OK          02768500
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02768600
.ZG999A2              AIF   (K'&ZCVAL LE 0).ZG999A3  OK                 02768700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02768800
&ZMS                  SETC  '"AUTHCOMPARE'                              02768900
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02769000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02769100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02769200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02769300
.ZG999A3              ANOP  ,                                           02769400
.*-------------------------------------------------------------------   02769500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02769600
.ZG1000               ANOP  ,                                           02769700
&ZTLC                 SETC 'YES'                                        02769800
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG1009       02769900
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02770000
                      AIF   (N'&AUTHCOMPARE LE 1).ZG1000A  CK NUM       02770100
&ZMS                  SETC  '"AUTHCOMPARE='                             02770200
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02770300
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02770400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02770500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02770600
.ZG1000A              ANOP  ,                                           02770700
.*----------------------------------------------------------------***   02770800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02770900
                      AIF   (N'&AUTHCOMP LE 1).ZG1002A  CK NUM          02771000
&ZMS                  SETC  '"AUTHCOMP='                                02771100
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02771200
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02771300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02771400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02771500
.ZG1002A              ANOP  ,                                           02771600
.*-------------------------------------------------------------------   02771700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02771800
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02771900
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02772000
                      AIF   (N'&AUTHCOMP GT 1).ZG1002B  MULTI           02772100
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02772200
.ZG1002B              AIF   (K'&AUTHCOMP(1) GT 0).ZG1002C               02772300
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02772400
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   02772500
&ZMS                  SETC  '&ZMS , "AUTHCOMP" KEY AND ITS'             02772600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02772700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02772800
.ZG1002C              ANOP  ,                                           02772900
.*-------------------------------------------------------------------   02773000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02773100
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG1002R  NOT I/O       02773200
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG1002R          02773300
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02773400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1002P              02773500
                      AIF   (K'&ZCGPR GT 2).ZG1002Q                     02773600
                      AIF   ('&ZCGPR' EQ '0').ZG1002Q                   02773700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02773800
                      AIF   (T'&ZCGPR NE 'N').ZG1002Q  INVALID REG NAME 02773900
.ZG1002P              ANOP  ,                                           02774000
                      AIF   (T'&ZCGPR NE 'N').ZG1002R  NON NUMERIC      02774100
                      AIF   ('&ZCGPR' LT '2').ZG1002Q                   02774200
                      AIF   ('&ZCGPR' LE '12').ZG1002R                  02774300
.ZG1002Q              ANOP  ,                                           02774400
&ZMS                  SETC  '"AUTHCOMP='                                02774500
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02774600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02774700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02774800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02774900
.ZG1002R              ANOP  ,                                           02775000
.*----------------------------------------------------------------***   02775100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02775200
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG1004A  CK NUM      02775300
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02775400
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02775500
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02775600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02775700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02775800
.ZG1004A              ANOP  ,                                           02775900
.*-------------------------------------------------------------------   02776000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02776100
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02776200
.ZG1005A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG1006A                02776300
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02776400
.*-------------------------------------------------------------------   02776500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02776600
.ZG1006A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG1007A          02776700
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02776800
.*-------------------------------------------------------------------   02776900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02777000
.ZG1007A              AIF   (K'&XAUTHCOMPTYPE GT 0).ZG1007C  KEYWORD    02777100
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG1007B           02777200
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02777300
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02777400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02777500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02777600
&ZMS                  SETC  '&ZMS "EQUAL"'                              02777700
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02777800
                      MNOTE 8,' &ZMS '                                  02777900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02778000
.ZG1007B              ANOP  ,                                           02778100
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02778200
.ZG1007C              ANOP  ,                                           02778300
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02778400
.*-------------------------------------------------------------------   02778500
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02778600
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG1007D  KEY          02778700
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG1007D  PARM     02778800
&ZMS                  SETC  '"AUTHCOMPTYPE'                             02778900
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02779000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02779100
&ZMS                  SETC  '&ZMS '                                     02779200
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02779300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02779400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02779500
.ZG1007D              ANOP  ,                                           02779600
.*------------------------------------------------------------------    02779700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02779800
.ZG1009               ANOP  ,                                           02779900
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02780000
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG1009E  VALID ARG   02780100
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG1009D  OMITTED    02780200
&ZASYSLNDX            SETA  0                                           02780300
.ZG1009A              ANOP  ,           POSITIONAL MACRO KEY            02780400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02780500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1009C          02780600
&ZTLC                 SETC 'AUTHCOMPARE'                                02780700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1009A 02780800
.ZG1009B              ANOP  ,                                           02780900
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02781000
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     02781100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02781200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02781300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02781400
                      AGO   .ZG1009E                                    02781500
.ZG1009C              ANOP  ,                                           02781600
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02781700
&ZMS                  SETC  '"AUTHCOMPARE='                             02781800
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02781900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02782000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02782100
&ZMS                  SETC  '&ZMS "NO"'                                 02782200
&ZMS                  SETC  '&ZMS OR "YES".'                            02782300
                      MNOTE 8,' &ZMS '                                  02782400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02782500
                      AGO   .ZG1009E                                    02782600
.ZG1009D              ANOP  ,                                           02782700
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02782800
.ZG1009E              ANOP  ,                                           02782900
.*------------------------------------------------------------------    02783000
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02783100
                      AIF   (K'&LISTNUM(1) GT 0).ZG1009F  KEY           02783200
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG1009F  PARM      02783300
&ZMS                  SETC  '"AUTHCOMPARE'                              02783400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02783500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02783600
&ZMS                  SETC  '&ZMS '                                     02783700
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02783800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02783900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02784000
.ZG1009F              ANOP  ,                                           02784100
.*------------------------------------------------------------------    02784200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02784300
.ZG1011               ANOP  ,                                           02784400
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02784500
                      AIF   (K'&XLISTCOMPARE GT 0).ZG1011E  VALID ARG   02784600
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG1011D  OMITTED    02784700
&ZASYSLNDX            SETA  0                                           02784800
.ZG1011A              ANOP  ,           POSITIONAL MACRO KEY            02784900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02785000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1011C          02785100
&ZTLC                 SETC 'LISTCOMPARE'                                02785200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1011A 02785300
.ZG1011B              ANOP  ,                                           02785400
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02785500
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'                     02785600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02785700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02785800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02785900
                      AGO   .ZG1011E                                    02786000
.ZG1011C              ANOP  ,                                           02786100
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02786200
&ZMS                  SETC  '"LISTCOMPARE='                             02786300
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02786400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02786500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02786600
&ZMS                  SETC  '&ZMS "NO"'                                 02786700
&ZMS                  SETC  '&ZMS OR "YES".'                            02786800
                      MNOTE 8,' &ZMS '                                  02786900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02787000
                      AGO   .ZG1011E                                    02787100
.ZG1011D              ANOP  ,                                           02787200
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02787300
.ZG1011E              ANOP  ,                                           02787400
.*------------------------------------------------------------------    02787500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02787600
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02787700
.*-------------------------------------------------------------------   02787800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02787900
.ZG1014               ANOP  ,                                           02788000
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG1014A            02788100
&ZTLC                 SETC 'NO'                                         02788200
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1015       02788300
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     02788400
                      AIF   (N'&VERSCOMPARE LE 1).ZG1014A  CK NUM       02788500
&ZMS                  SETC  '"VERSCOMPARE='                             02788600
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02788700
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02788800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02788900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02789000
.ZG1014A              ANOP  ,                                           02789100
.*------------------------------------------------------------------    02789200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02789300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02789400
.ZG1014A0             AIF   (K'&VERSCOMP LE 0).ZG1014A1  OK             02789500
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02789600
.ZG1014A1             AIF   (K'&VERSCOMPTYPE LE 0).ZG1014A2  OK         02789700
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02789800
.ZG1014A2             AIF   (K'&ZCVAL LE 0).ZG1014A3  OK                02789900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02790000
&ZMS                  SETC  '"VERSCOMPARE'                              02790100
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02790200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02790300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02790400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02790500
.ZG1014A3             ANOP  ,                                           02790600
.*-------------------------------------------------------------------   02790700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02790800
.ZG1015               ANOP  ,                                           02790900
&ZTLC                 SETC 'BYENTRY'                                    02791000
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1016       02791100
&XVERSCOMPARE         SETC  'BYENTRY'   SET KEYWORD                     02791200
                      AIF   (N'&VERSCOMPARE LE 1).ZG1015A  CK NUM       02791300
&ZMS                  SETC  '"VERSCOMPARE='                             02791400
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02791500
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02791600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02791700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02791800
.ZG1015A              ANOP  ,                                           02791900
.*------------------------------------------------------------------    02792000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02792100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02792200
.ZG1015A0             AIF   (K'&VERSCOMP LE 0).ZG1015A1  OK             02792300
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      02792400
.ZG1015A1             AIF   (K'&VERSCOMPTYPE LE 0).ZG1015A2  OK         02792500
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    02792600
.ZG1015A2             AIF   (K'&ZCVAL LE 0).ZG1015A3  OK                02792700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02792800
&ZMS                  SETC  '"VERSCOMPARE'                              02792900
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       02793000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02793100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02793200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02793300
.ZG1015A3             ANOP  ,                                           02793400
.*-------------------------------------------------------------------   02793500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02793600
.ZG1016               ANOP  ,                                           02793700
&ZTLC                 SETC 'YES'                                        02793800
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1025       02793900
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     02794000
                      AIF   (N'&VERSCOMPARE LE 1).ZG1016A  CK NUM       02794100
&ZMS                  SETC  '"VERSCOMPARE='                             02794200
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02794300
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        02794400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02794500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02794600
.ZG1016A              ANOP  ,                                           02794700
.*----------------------------------------------------------------***   02794800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02794900
                      AIF   (N'&VERSCOMP LE 1).ZG1018A  CK NUM          02795000
&ZMS                  SETC  '"VERSCOMP='                                02795100
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02795200
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02795300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02795400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02795500
.ZG1018A              ANOP  ,                                           02795600
.*-------------------------------------------------------------------   02795700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02795800
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02795900
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           02796000
                      AIF   (N'&VERSCOMP GT 1).ZG1018B  MULTI           02796100
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           02796200
.ZG1018B              AIF   (K'&VERSCOMP(1) GT 0).ZG1018C               02796300
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 02796400
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   02796500
&ZMS                  SETC  '&ZMS , "VERSCOMP" KEY AND ITS'             02796600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02796700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02796800
.ZG1018C              ANOP  ,                                           02796900
.*-------------------------------------------------------------------   02797000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02797100
                      AIF   (K'&ZXVERSCOMP LE 0).ZG1018R  NOT I/O       02797200
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG1018R          02797300
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              02797400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1018P              02797500
                      AIF   (K'&ZCGPR GT 2).ZG1018Q                     02797600
                      AIF   ('&ZCGPR' EQ '0').ZG1018Q                   02797700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02797800
                      AIF   (T'&ZCGPR NE 'N').ZG1018Q  INVALID REG NAME 02797900
.ZG1018P              ANOP  ,                                           02798000
                      AIF   (T'&ZCGPR NE 'N').ZG1018R  NON NUMERIC      02798100
                      AIF   ('&ZCGPR' LT '2').ZG1018Q                   02798200
                      AIF   ('&ZCGPR' LE '12').ZG1018R                  02798300
.ZG1018Q              ANOP  ,                                           02798400
&ZMS                  SETC  '"VERSCOMP='                                02798500
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           02798600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02798700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02798800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02798900
.ZG1018R              ANOP  ,                                           02799000
.*----------------------------------------------------------------***   02799100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02799200
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG1020A  CK NUM      02799300
&ZMS                  SETC  '"VERSCOMPTYPE='                            02799400
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02799500
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       02799600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02799700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02799800
.ZG1020A              ANOP  ,                                           02799900
.*-------------------------------------------------------------------   02800000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02800100
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02800200
.ZG1021A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG1022A                02800300
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02800400
.*-------------------------------------------------------------------   02800500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02800600
.ZG1022A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG1023A          02800700
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02800800
.*-------------------------------------------------------------------   02800900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02801000
.ZG1023A              AIF   (K'&XVERSCOMPTYPE GT 0).ZG1023C  KEYWORD    02801100
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG1023B           02801200
&ZMS                  SETC  '"VERSCOMPTYPE='                            02801300
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       02801400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02801500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02801600
&ZMS                  SETC  '&ZMS "EQUAL"'                              02801700
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02801800
                      MNOTE 8,' &ZMS '                                  02801900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02802000
.ZG1023B              ANOP  ,                                           02802100
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02802200
.ZG1023C              ANOP  ,                                           02802300
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02802400
.*-------------------------------------------------------------------   02802500
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02802600
                      AIF   (K'&VERSCOMP(1) GT 0).ZG1023D  KEY          02802700
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG1023D  PARM     02802800
&ZMS                  SETC  '"VERSCOMPTYPE'                             02802900
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      02803000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02803100
&ZMS                  SETC  '&ZMS '                                     02803200
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           02803300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02803400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02803500
.ZG1023D              ANOP  ,                                           02803600
.*------------------------------------------------------------------    02803700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02803800
.ZG1025               ANOP  ,                                           02803900
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02804000
                      AIF   (K'&XVERSCOMPARE GT 0).ZG1025E  VALID ARG   02804100
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG1025D  OMITTED    02804200
&ZASYSLNDX            SETA  0                                           02804300
.ZG1025A              ANOP  ,           POSITIONAL MACRO KEY            02804400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02804500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1025C          02804600
&ZTLC                 SETC 'VERSCOMPARE'                                02804700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1025A 02804800
.ZG1025B              ANOP  ,                                           02804900
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02805000
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'                     02805100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02805200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02805300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02805400
                      AGO   .ZG1025E                                    02805500
.ZG1025C              ANOP  ,                                           02805600
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 02805700
&ZMS                  SETC  '"VERSCOMPARE='                             02805800
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        02805900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02806000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02806100
&ZMS                  SETC  '&ZMS "NO",'                                02806200
&ZMS                  SETC  '&ZMS "BYENTRY",'                           02806300
&ZMS                  SETC  '&ZMS OR "YES".'                            02806400
                      MNOTE 8,' &ZMS '                                  02806500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02806600
                      AGO   .ZG1025E                                    02806700
.ZG1025D              ANOP  ,                                           02806800
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02806900
.ZG1025E              ANOP  ,                                           02807000
.*----------------------------------------------------------------***   02807100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02807200
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            02807300
                      AIF   (K'&BUFLIST LE 0).ZG1027C                   02807400
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   02807500
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   02807600
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   02807700
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      02807800
                      AIF   (N'&BUFLIST GT 1).ZG1027A                   02807900
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              02808000
.ZG1027A              AIF   (N'&BUFLIST LE 1).ZG1027B  CK NUM           02808100
&ZMS                  SETC  '"BUFLIST='                                 02808200
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02808300
&ZMS                  SETC  '&ZMS "BUFLIST"'                            02808400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02808500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02808600
.ZG1027B              AIF   (K'&XBUFLIST GT 0).ZG1027C  ONE PARM        02808700
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02808800
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02808900
&ZMS                  SETC  ' '                                         02809000
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                02809100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02809200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02809300
.ZG1027C              ANOP  ,                                           02809400
.*----------------------------------------------------------------***   02809500
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02809600
                      AIF   (K'&BUFFER LE 0).ZG1060D  NO ME KEY         02809700
                      AIF   (N'&BUFFER LE 1).ZG1060A  CK NUM            02809800
&ZMS                  SETC  '"BUFFER='                                  02809900
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02810000
&ZMS                  SETC  '&ZMS "BUFFER"'                             02810100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02810200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02810300
.ZG1060A              AIF   (K'&XDATAREA LE 0).ZG1060B                  02810400
&ZMS                  SETC  '"BUFFER'                                   02810500
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02810600
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       02810700
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          02810800
                      MNOTE 8,' &ZMS KEY.'                              02810900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02811000
                      AGO   .ZG1060D                                    02811100
.*                                                                      02811200
.ZG1060B              ANOP  ,                                           02811300
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   02811400
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   02811500
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   02811600
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      02811700
                      AIF   (N'&BUFFER GT 1).ZG1060C                    02811800
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              02811900
.ZG1060C              AIF   (K'&XBUFFER GT 0).ZG1060D  ONE PARM         02812000
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02812100
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 02812200
&ZMS                  SETC  ' '                                         02812300
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 02812400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02812500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02812600
.ZG1060D              ANOP  ,                                           02812700
.*------------------------------------------------------------------    02812800
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           02812900
                      AIF   (K'&XDATAREA GT 0).ZG1072B                  02813000
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 02813100
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 02813200
&XDATAREA             SETC  ''          ENSURE NULL                     02813300
&XBUFLIST             SETC  ''          ENSURE NULL                     02813400
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      02813500
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         02813600
&ZMS                  SETC  '&ZMS REQUIRED:'                            02813700
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            02813800
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           02813900
                      MNOTE 8,' &ZMS '                                  02814000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02814100
.ZG1072B              ANOP  ,                                           02814200
.*-------------------------------------------------------------------   02814300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02814400
                      AIF   (T'&BUFLIST  EQ 'O').ZG1060ZY               02814500
.ZG1027ZY  AIF    ('&XDATAREA' NE 'BUFLIST').ZG1060ZY                   02814600
.*-------------------------------------------------------------------   02814700
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                02814800
&ZCVAL                SETC ''           ERROR KEY FIELD                 02814900
.ZG1027I0             AIF   (K'&BUFSIZE LE 0).ZG1027I1                  02815000
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          02815100
.ZG1027I1             AIF   (K'&ZCVAL LE 0).ZG1027J  KEY                02815200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02815300
&ZMS                  SETC  '"BUFLIST'                                  02815400
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           02815500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02815600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02815700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02815800
.ZG1027J              ANOP  ,                                           02815900
.*-------------------------------------------------------------------   02816000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02816100
                      AIF   (K'&ZXBUFLIST LE 0).ZG1027R  NOT I/O        02816200
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG1027R           02816300
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                02816400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1027P              02816500
                      AIF   (K'&ZCGPR GT 2).ZG1027Q                     02816600
                      AIF   ('&ZCGPR' EQ '0').ZG1027Q                   02816700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02816800
                      AIF   (T'&ZCGPR NE 'N').ZG1027Q  INVALID REG NAME 02816900
.ZG1027P              ANOP  ,                                           02817000
                      AIF   (T'&ZCGPR NE 'N').ZG1027R  NON NUMERIC      02817100
                      AIF   ('&ZCGPR' LT '2').ZG1027Q                   02817200
                      AIF   ('&ZCGPR' LE '12').ZG1027R                  02817300
.ZG1027Q              ANOP  ,                                           02817400
&ZMS                  SETC  '"BUFLIST='                                 02817500
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            02817600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02817700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02817800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02817900
.ZG1027R              ANOP  ,                                           02818000
.*------------------------------------------------------------------    02818100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02818200
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            02818300
.*-------------------------------------------------------------------   02818400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02818500
.ZG1030               ANOP  ,                                           02818600
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG1030A            02818700
&ZTLC                 SETC 'VIRTUAL'                                    02818800
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG1047       02818900
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     02819000
                      AIF   (N'&BUFADDRTYPE LE 1).ZG1030A  CK NUM       02819100
&ZMS                  SETC  '"BUFADDRTYPE='                             02819200
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02819300
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02819400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02819500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02819600
.ZG1030A              ANOP  ,                                           02819700
.*------------------------------------------------------------------    02819800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02819900
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02820000
.*-------------------------------------------------------------------   02820100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02820200
.ZG1033               ANOP  ,                                           02820300
                      AIF   (K'&PAGEABLE(1) LE 0).ZG1033A               02820400
&ZTLC                 SETC 'YES'                                        02820500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1037          02820600
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02820700
                      AIF   (N'&PAGEABLE LE 1).ZG1033A  CK NUM          02820800
&ZMS                  SETC  '"PAGEABLE='                                02820900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02821000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02821100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02821200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02821300
.ZG1033A              ANOP  ,                                           02821400
.*----------------------------------------------------------------***   02821500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02821600
                      AIF   (N'&BUFSTGKEY LE 1).ZG1035A  CK NUM         02821700
&ZMS                  SETC  '"BUFSTGKEY='                               02821800
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02821900
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02822000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02822100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02822200
.ZG1035A              ANOP  ,                                           02822300
.*-------------------------------------------------------------------   02822400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02822500
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02822600
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02822700
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG1035B  PARM        02822800
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02822900
                      AIF   (N'&BUFSTGKEY GT 1).ZG1035B  MULTI          02823000
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02823100
.ZG1035B              ANOP  ,                                           02823200
.*-------------------------------------------------------------------   02823300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02823400
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG1035R  NOT I/O      02823500
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG1035R                 02823600
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG1035R         02823700
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02823800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1035P              02823900
                      AIF   (K'&ZCGPR GT 2).ZG1035Q                     02824000
                      AIF   ('&ZCGPR' EQ '0').ZG1035Q                   02824100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02824200
                      AIF   (T'&ZCGPR NE 'N').ZG1035Q  INVALID REG NAME 02824300
.ZG1035P              ANOP  ,                                           02824400
                      AIF   (T'&ZCGPR NE 'N').ZG1035R  NON NUMERIC      02824500
                      AIF   ('&ZCGPR' LT '2').ZG1035Q                   02824600
                      AIF   ('&ZCGPR' LE '12').ZG1035R                  02824700
.ZG1035Q              ANOP  ,                                           02824800
&ZMS                  SETC  '"BUFSTGKEY='                               02824900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02825000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02825100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02825200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02825300
.ZG1035R              ANOP  ,                                           02825400
.*-------------------------------------------------------------------   02825500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02825600
.ZG1037               ANOP  ,                                           02825700
&ZTLC                 SETC 'NO'                                         02825800
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1038          02825900
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02826000
                      AIF   (N'&PAGEABLE LE 1).ZG1037A  CK NUM          02826100
&ZMS                  SETC  '"PAGEABLE='                                02826200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02826300
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02826400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02826500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02826600
.ZG1037A              ANOP  ,                                           02826700
.*------------------------------------------------------------------    02826800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02826900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02827000
.ZG1037A0             AIF   (K'&BUFSTGKEY LE 0).ZG1037A1  OK            02827100
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02827200
.ZG1037A1             AIF   (K'&ZCVAL LE 0).ZG1037A2  OK                02827300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02827400
&ZMS                  SETC  '"PAGEABLE'                                 02827500
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02827600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02827700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02827800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02827900
.ZG1037A2             ANOP  ,                                           02828000
.*------------------------------------------------------------------    02828100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02828200
.ZG1038               ANOP  ,                                           02828300
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02828400
                      AIF   (K'&XPAGEABLE GT 0).ZG1038E  VALID ARG      02828500
                      AIF   (T'&PAGEABLE EQ 'O').ZG1038D  OMITTED       02828600
&ZASYSLNDX            SETA  0                                           02828700
.ZG1038A              ANOP  ,           POSITIONAL MACRO KEY            02828800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02828900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1038C          02829000
&ZTLC                 SETC 'PAGEABLE'                                   02829100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1038A 02829200
.ZG1038B              ANOP  ,                                           02829300
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02829400
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        02829500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02829600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02829700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02829800
                      AGO   .ZG1038E                                    02829900
.ZG1038C              ANOP  ,                                           02830000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02830100
&ZMS                  SETC  '"PAGEABLE='                                02830200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02830300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02830400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02830500
&ZMS                  SETC  '&ZMS "YES"'                                02830600
&ZMS                  SETC  '&ZMS OR "NO".'                             02830700
                      MNOTE 8,' &ZMS '                                  02830800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02830900
                      AGO   .ZG1038E                                    02831000
.ZG1038D              ANOP  ,                                           02831100
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02831200
.ZG1038E              ANOP  ,                                           02831300
.*----------------------------------------------------------------***   02831400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02831500
                      AIF   (N'&BUFALET LE 1).ZG1040A  CK NUM           02831600
&ZMS                  SETC  '"BUFALET='                                 02831700
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02831800
&ZMS                  SETC  '&ZMS "BUFALET"'                            02831900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02832000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02832100
.ZG1040A              ANOP  ,                                           02832200
.*-------------------------------------------------------------------   02832300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02832400
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   02832500
&XBUFALET             SETC  'NO_BUFALET'                                02832600
                      AIF   (K'&BUFALET(1) LE 0).ZG1040B  PARM          02832700
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           02832800
                      AIF   (N'&BUFALET GT 1).ZG1040B  MULTI            02832900
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   02833000
.ZG1040B              ANOP  ,                                           02833100
.*-------------------------------------------------------------------   02833200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02833300
                      AIF   (K'&ZXBUFALET LE 0).ZG1040R  NOT I/O        02833400
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG1040R                    02833500
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG1040R           02833600
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                02833700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1040P              02833800
                      AIF   (K'&ZCGPR GT 2).ZG1040Q                     02833900
                      AIF   ('&ZCGPR' EQ '0').ZG1040Q                   02834000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02834100
                      AIF   (T'&ZCGPR NE 'N').ZG1040Q  INVALID REG NAME 02834200
.ZG1040P              ANOP  ,                                           02834300
                      AIF   (T'&ZCGPR NE 'N').ZG1040R  NON NUMERIC      02834400
                      AIF   ('&ZCGPR' LT '2').ZG1040Q                   02834500
                      AIF   ('&ZCGPR' LE '12').ZG1040R                  02834600
.ZG1040Q              ANOP  ,                                           02834700
&ZMS                  SETC  '"BUFALET='                                 02834800
&ZMS                  SETC  '&ZMS.&BUFALET"'                            02834900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02835000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02835100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02835200
.ZG1040R              ANOP  ,                                           02835300
.*------------------------------------------------------------------    02835400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02835500
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            02835600
.*-------------------------------------------------------------------   02835700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02835800
.ZG1044               ANOP  ,                                           02835900
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG1044A            02836000
&ZTLC                 SETC '31'                                         02836100
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1045       02836200
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     02836300
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1044A  CK NUM       02836400
&ZMS                  SETC  '"BUFADDRSIZE='                             02836500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02836600
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02836700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02836800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02836900
.ZG1044A              ANOP  ,                                           02837000
.*-------------------------------------------------------------------   02837100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02837200
.ZG1045               ANOP  ,                                           02837300
&ZTLC                 SETC '64'                                         02837400
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1046       02837500
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     02837600
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1045A  CK NUM       02837700
&ZMS                  SETC  '"BUFADDRSIZE='                             02837800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02837900
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02838000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02838100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02838200
.ZG1045A              ANOP  ,                                           02838300
.*------------------------------------------------------------------    02838400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02838500
.ZG1046               ANOP  ,                                           02838600
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   02838700
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG1046E  VALID ARG   02838800
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG1046D  OMITTED    02838900
&ZASYSLNDX            SETA  0                                           02839000
.ZG1046A              ANOP  ,           POSITIONAL MACRO KEY            02839100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02839200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1046C          02839300
&ZTLC                 SETC 'BUFADDRSIZE'                                02839400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1046A 02839500
.ZG1046B              ANOP  ,                                           02839600
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02839700
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     02839800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02839900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02840000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02840100
                      AGO   .ZG1046E                                    02840200
.ZG1046C              ANOP  ,                                           02840300
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02840400
&ZMS                  SETC  '"BUFADDRSIZE='                             02840500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02840600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02840700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02840800
&ZMS                  SETC  '&ZMS "31"'                                 02840900
&ZMS                  SETC  '&ZMS OR "64".'                             02841000
                      MNOTE 8,' &ZMS '                                  02841100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02841200
                      AGO   .ZG1046E                                    02841300
.ZG1046D              ANOP  ,                                           02841400
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             02841500
.ZG1046E              ANOP  ,                                           02841600
.*-------------------------------------------------------------------   02841700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02841800
.ZG1047               ANOP  ,                                           02841900
&ZTLC                 SETC 'REAL'                                       02842000
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG1053       02842100
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     02842200
                      AIF   (N'&BUFADDRTYPE LE 1).ZG1047A  CK NUM       02842300
&ZMS                  SETC  '"BUFADDRTYPE='                             02842400
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02842500
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        02842600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02842700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02842800
.ZG1047A              ANOP  ,                                           02842900
.*------------------------------------------------------------------    02843000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02843100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02843200
.ZG1047A0             AIF   (K'&PAGEABLE LE 0).ZG1047A1  OK             02843300
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      02843400
.ZG1047A1             AIF   (K'&BUFSTGKEY LE 0).ZG1047A2  OK            02843500
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02843600
.ZG1047A2             AIF   (K'&BUFALET LE 0).ZG1047A3  OK              02843700
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      02843800
.ZG1047A3             AIF   (K'&ZCVAL LE 0).ZG1047A4  OK                02843900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02844000
&ZMS                  SETC  '"BUFADDRTYPE'                              02844100
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       02844200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02844300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02844400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02844500
.ZG1047A4             ANOP  ,                                           02844600
.*------------------------------------------------------------------    02844700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02844800
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            02844900
.*-------------------------------------------------------------------   02845000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02845100
.ZG1050               ANOP  ,                                           02845200
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG1050A            02845300
&ZTLC                 SETC '31'                                         02845400
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1051       02845500
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     02845600
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1050A  CK NUM       02845700
&ZMS                  SETC  '"BUFADDRSIZE='                             02845800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02845900
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02846000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02846100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02846200
.ZG1050A              ANOP  ,                                           02846300
.*-------------------------------------------------------------------   02846400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02846500
.ZG1051               ANOP  ,                                           02846600
&ZTLC                 SETC '64'                                         02846700
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1052       02846800
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     02846900
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1051A  CK NUM       02847000
&ZMS                  SETC  '"BUFADDRSIZE='                             02847100
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02847200
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        02847300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02847400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02847500
.ZG1051A              ANOP  ,                                           02847600
.*------------------------------------------------------------------    02847700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02847800
.ZG1052               ANOP  ,                                           02847900
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   02848000
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG1052E  VALID ARG   02848100
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG1052D  OMITTED    02848200
&ZASYSLNDX            SETA  0                                           02848300
.ZG1052A              ANOP  ,           POSITIONAL MACRO KEY            02848400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02848500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1052C          02848600
&ZTLC                 SETC 'BUFADDRSIZE'                                02848700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1052A 02848800
.ZG1052B              ANOP  ,                                           02848900
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02849000
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     02849100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02849200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02849300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02849400
                      AGO   .ZG1052E                                    02849500
.ZG1052C              ANOP  ,                                           02849600
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 02849700
&ZMS                  SETC  '"BUFADDRSIZE='                             02849800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        02849900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02850000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02850100
&ZMS                  SETC  '&ZMS "31"'                                 02850200
&ZMS                  SETC  '&ZMS OR "64".'                             02850300
                      MNOTE 8,' &ZMS '                                  02850400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02850500
                      AGO   .ZG1052E                                    02850600
.ZG1052D              ANOP  ,                                           02850700
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             02850800
.ZG1052E              ANOP  ,                                           02850900
.*------------------------------------------------------------------    02851000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02851100
.ZG1053               ANOP  ,                                           02851200
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02851300
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG1053E  VALID ARG   02851400
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG1053D  OMITTED    02851500
&ZASYSLNDX            SETA  0                                           02851600
.ZG1053A              ANOP  ,           POSITIONAL MACRO KEY            02851700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02851800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1053C          02851900
&ZTLC                 SETC 'BUFADDRTYPE'                                02852000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1053A 02852100
.ZG1053B              ANOP  ,                                           02852200
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 02852300
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     02852400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02852500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02852600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02852700
                      AGO   .ZG1053E                                    02852800
.ZG1053C              ANOP  ,                                           02852900
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 02853000
&ZMS                  SETC  '"BUFADDRTYPE='                             02853100
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        02853200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02853300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02853400
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            02853500
&ZMS                  SETC  '&ZMS OR "REAL".'                           02853600
                      MNOTE 8,' &ZMS '                                  02853700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02853800
                      AGO   .ZG1053E                                    02853900
.ZG1053D              ANOP  ,                                           02854000
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             02854100
.ZG1053E              ANOP  ,                                           02854200
.*----------------------------------------------------------------***   02854300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02854400
                      AIF   (N'&BUFNUM LE 1).ZG1055A  CK NUM            02854500
&ZMS                  SETC  '"BUFNUM='                                  02854600
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             02854700
&ZMS                  SETC  '&ZMS "BUFNUM"'                             02854800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02854900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02855000
.ZG1055A              ANOP  ,                                           02855100
.*-------------------------------------------------------------------   02855200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02855300
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   02855400
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           02855500
                      AIF   (N'&BUFNUM GT 1).ZG1055B  MULTI             02855600
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   02855700
.ZG1055B              AIF   (K'&BUFNUM(1) GT 0).ZG1055C                 02855800
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 02855900
&ZMS                  SETC  ' '                                         02856000
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 02856100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02856200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02856300
.ZG1055C              ANOP  ,                                           02856400
.*-------------------------------------------------------------------   02856500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02856600
                      AIF   (K'&ZXBUFNUM LE 0).ZG1055R  NOT I/O         02856700
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG1055R            02856800
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  02856900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1055P              02857000
                      AIF   (K'&ZCGPR GT 2).ZG1055Q                     02857100
                      AIF   ('&ZCGPR' EQ '0').ZG1055Q                   02857200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02857300
                      AIF   (T'&ZCGPR NE 'N').ZG1055Q  INVALID REG NAME 02857400
.ZG1055P              ANOP  ,                                           02857500
                      AIF   (T'&ZCGPR NE 'N').ZG1055R  NON NUMERIC      02857600
                      AIF   ('&ZCGPR' LT '2').ZG1055Q                   02857700
                      AIF   ('&ZCGPR' LE '12').ZG1055R                  02857800
.ZG1055Q              ANOP  ,                                           02857900
&ZMS                  SETC  '"BUFNUM='                                  02858000
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             02858100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02858200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02858300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02858400
.ZG1055R              ANOP  ,                                           02858500
.*----------------------------------------------------------------***   02858600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02858700
                      AIF   (N'&BUFINCRNUM LE 1).ZG1058A  CK NUM        02858800
&ZMS                  SETC  '"BUFINCRNUM='                              02858900
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         02859000
&ZMS                  SETC  '&ZMS "BUFINCRNUM"'                         02859100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02859200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02859300
.ZG1058A              ANOP  ,                                           02859400
.*-------------------------------------------------------------------   02859500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02859600
&ZXBUFINCRNUM         SETC  'INPUT'     SET IN/OUTPUT                   02859700
&XBUFINCRNUM          SETC  '16'                                        02859800
                      AIF   (K'&BUFINCRNUM(1) LE 0).ZG1058B  PARM       02859900
&XBUFINCRNUM          SETC  '&BUFINCRNUM(1)'    SET XVARIABLE           02860000
                      AIF   (N'&BUFINCRNUM GT 1).ZG1058B  MULTI         02860100
&XBUFINCRNUM          SETC  '&BUFINCRNUM'       SET XVARIABLE           02860200
.ZG1058B              ANOP  ,                                           02860300
.*-------------------------------------------------------------------   02860400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02860500
                      AIF   (K'&ZXBUFINCRNUM LE 0).ZG1058R  NOT I/O     02860600
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG1058R        02860700
&ZCGPR                SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)          02860800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1058P              02860900
                      AIF   (K'&ZCGPR GT 2).ZG1058Q                     02861000
                      AIF   ('&ZCGPR' EQ '0').ZG1058Q                   02861100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02861200
                      AIF   (T'&ZCGPR NE 'N').ZG1058Q  INVALID REG NAME 02861300
.ZG1058P              ANOP  ,                                           02861400
                      AIF   (T'&ZCGPR NE 'N').ZG1058R  NON NUMERIC      02861500
                      AIF   ('&ZCGPR' LT '2').ZG1058Q                   02861600
                      AIF   ('&ZCGPR' LE '12').ZG1058R                  02861700
.ZG1058Q              ANOP  ,                                           02861800
&ZMS                  SETC  '"BUFINCRNUM='                              02861900
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         02862000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02862100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02862200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02862300
.ZG1058R              ANOP  ,                                           02862400
.*-------------------------------------------------------------------   02862500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02862600
.ZG1060ZY  AIF    ('&XDATAREA' NE 'BUFFER').ZG1072ZY                    02862700
.*-------------------------------------------------------------------   02862800
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                02862900
&ZCVAL                SETC ''           ERROR KEY FIELD                 02863000
.ZG1060I0             AIF   (K'&BUFADDRTYPE LE 0).ZG1060I1              02863100
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         02863200
.ZG1060I1             AIF   (K'&BUFALET LE 0).ZG1060I2                  02863300
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          02863400
.ZG1060I2             AIF   (K'&BUFADDRSIZE LE 0).ZG1060I3              02863500
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         02863600
.ZG1060I3             AIF   (K'&BUFNUM LE 0).ZG1060I4                   02863700
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          02863800
.ZG1060I4             AIF   (K'&BUFINCRNUM LE 0).ZG1060I5               02863900
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  DISALLOWED KEY          02864000
.ZG1060I5             AIF   (K'&ZCVAL LE 0).ZG1060J  KEY                02864100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02864200
&ZMS                  SETC  '"BUFFER'                                   02864300
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            02864400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02864500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02864600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02864700
.ZG1060J              ANOP  ,                                           02864800
.*-------------------------------------------------------------------   02864900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02865000
                      AIF   (K'&ZXBUFFER LE 0).ZG1060R  NOT I/O         02865100
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG1060R            02865200
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  02865300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1060P              02865400
                      AIF   (K'&ZCGPR GT 2).ZG1060Q                     02865500
                      AIF   ('&ZCGPR' EQ '0').ZG1060Q                   02865600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02865700
                      AIF   (T'&ZCGPR NE 'N').ZG1060Q  INVALID REG NAME 02865800
.ZG1060P              ANOP  ,                                           02865900
                      AIF   (T'&ZCGPR NE 'N').ZG1060R  NON NUMERIC      02866000
                      AIF   ('&ZCGPR' LT '2').ZG1060Q                   02866100
                      AIF   ('&ZCGPR' LE '12').ZG1060R                  02866200
.ZG1060Q              ANOP  ,                                           02866300
&ZMS                  SETC  '"BUFFER='                                  02866400
&ZMS                  SETC  '&ZMS.&BUFFER"'                             02866500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02866600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02866700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02866800
.ZG1060R              ANOP  ,                                           02866900
.*------------------------------------------------------------------    02867000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02867100
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            02867200
.*-------------------------------------------------------------------   02867300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02867400
.ZG1063               ANOP  ,                                           02867500
                      AIF   (K'&PAGEABLE(1) LE 0).ZG1063A               02867600
&ZTLC                 SETC 'YES'                                        02867700
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1067          02867800
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     02867900
                      AIF   (N'&PAGEABLE LE 1).ZG1063A  CK NUM          02868000
&ZMS                  SETC  '"PAGEABLE='                                02868100
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02868200
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02868300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02868400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02868500
.ZG1063A              ANOP  ,                                           02868600
.*----------------------------------------------------------------***   02868700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02868800
                      AIF   (N'&BUFSTGKEY LE 1).ZG1065A  CK NUM         02868900
&ZMS                  SETC  '"BUFSTGKEY='                               02869000
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02869100
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          02869200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02869300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02869400
.ZG1065A              ANOP  ,                                           02869500
.*-------------------------------------------------------------------   02869600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02869700
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   02869800
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               02869900
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG1065B  PARM        02870000
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           02870100
                      AIF   (N'&BUFSTGKEY GT 1).ZG1065B  MULTI          02870200
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           02870300
.ZG1065B              ANOP  ,                                           02870400
.*-------------------------------------------------------------------   02870500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02870600
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG1065R  NOT I/O      02870700
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG1065R                 02870800
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG1065R         02870900
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            02871000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1065P              02871100
                      AIF   (K'&ZCGPR GT 2).ZG1065Q                     02871200
                      AIF   ('&ZCGPR' EQ '0').ZG1065Q                   02871300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02871400
                      AIF   (T'&ZCGPR NE 'N').ZG1065Q  INVALID REG NAME 02871500
.ZG1065P              ANOP  ,                                           02871600
                      AIF   (T'&ZCGPR NE 'N').ZG1065R  NON NUMERIC      02871700
                      AIF   ('&ZCGPR' LT '2').ZG1065Q                   02871800
                      AIF   ('&ZCGPR' LE '12').ZG1065R                  02871900
.ZG1065Q              ANOP  ,                                           02872000
&ZMS                  SETC  '"BUFSTGKEY='                               02872100
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          02872200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02872300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02872400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02872500
.ZG1065R              ANOP  ,                                           02872600
.*-------------------------------------------------------------------   02872700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02872800
.ZG1067               ANOP  ,                                           02872900
&ZTLC                 SETC 'NO'                                         02873000
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1068          02873100
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     02873200
                      AIF   (N'&PAGEABLE LE 1).ZG1067A  CK NUM          02873300
&ZMS                  SETC  '"PAGEABLE='                                02873400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02873500
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           02873600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02873700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02873800
.ZG1067A              ANOP  ,                                           02873900
.*------------------------------------------------------------------    02874000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02874100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02874200
.ZG1067A0             AIF   (K'&BUFSTGKEY LE 0).ZG1067A1  OK            02874300
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      02874400
.ZG1067A1             AIF   (K'&ZCVAL LE 0).ZG1067A2  OK                02874500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02874600
&ZMS                  SETC  '"PAGEABLE'                                 02874700
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          02874800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02874900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02875000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02875100
.ZG1067A2             ANOP  ,                                           02875200
.*------------------------------------------------------------------    02875300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02875400
.ZG1068               ANOP  ,                                           02875500
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   02875600
                      AIF   (K'&XPAGEABLE GT 0).ZG1068E  VALID ARG      02875700
                      AIF   (T'&PAGEABLE EQ 'O').ZG1068D  OMITTED       02875800
&ZASYSLNDX            SETA  0                                           02875900
.ZG1068A              ANOP  ,           POSITIONAL MACRO KEY            02876000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02876100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1068C          02876200
&ZTLC                 SETC 'PAGEABLE'                                   02876300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1068A 02876400
.ZG1068B              ANOP  ,                                           02876500
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02876600
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        02876700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02876800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02876900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02877000
                      AGO   .ZG1068E                                    02877100
.ZG1068C              ANOP  ,                                           02877200
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 02877300
&ZMS                  SETC  '"PAGEABLE='                                02877400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           02877500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02877600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02877700
&ZMS                  SETC  '&ZMS "YES"'                                02877800
&ZMS                  SETC  '&ZMS OR "NO".'                             02877900
                      MNOTE 8,' &ZMS '                                  02878000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02878100
                      AGO   .ZG1068E                                    02878200
.ZG1068D              ANOP  ,                                           02878300
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             02878400
.ZG1068E              ANOP  ,                                           02878500
.*----------------------------------------------------------------***   02878600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02878700
                      AIF   (N'&BUFSIZE LE 1).ZG1070A  CK NUM           02878800
&ZMS                  SETC  '"BUFSIZE='                                 02878900
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            02879000
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            02879100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02879200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02879300
.ZG1070A              ANOP  ,                                           02879400
.*-------------------------------------------------------------------   02879500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02879600
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   02879700
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           02879800
                      AIF   (N'&BUFSIZE GT 1).ZG1070B  MULTI            02879900
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   02880000
.ZG1070B              AIF   (K'&BUFSIZE(1) GT 0).ZG1070C                02880100
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 02880200
&ZMS                  SETC  ' '                                         02880300
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                02880400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02880500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02880600
.ZG1070C              ANOP  ,                                           02880700
.*-------------------------------------------------------------------   02880800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02880900
                      AIF   (K'&ZXBUFSIZE LE 0).ZG1070R  NOT I/O        02881000
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG1070R           02881100
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                02881200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1070P              02881300
                      AIF   (K'&ZCGPR GT 2).ZG1070Q                     02881400
                      AIF   ('&ZCGPR' EQ '0').ZG1070Q                   02881500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02881600
                      AIF   (T'&ZCGPR NE 'N').ZG1070Q  INVALID REG NAME 02881700
.ZG1070P              ANOP  ,                                           02881800
                      AIF   (T'&ZCGPR NE 'N').ZG1070R  NON NUMERIC      02881900
                      AIF   ('&ZCGPR' LT '2').ZG1070Q                   02882000
                      AIF   ('&ZCGPR' LE '12').ZG1070R                  02882100
.ZG1070Q              ANOP  ,                                           02882200
&ZMS                  SETC  '"BUFSIZE='                                 02882300
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            02882400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02882500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02882600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02882700
.ZG1070R              ANOP  ,                                           02882800
.*-------------------------------------------------------------------   02882900
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            02883000
.ZG1072ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS     02883100
.*-------------------------------------------------------------------   02883200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02883300
.ZG1073               ANOP  ,                                           02883400
&ZTLC                 SETC 'DELETE_ENTRYLIST'                           02883500
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG1208           02883600
&XREQUEST             SETC  'DELETE_ENTRYLIST'  SET KEYWORD             02883700
                      AIF   (N'&REQUEST LE 1).ZG1073A  CK NUM           02883800
&ZMS                  SETC  '"REQUEST='                                 02883900
&ZMS                  SETC  '&ZMS.&REQUEST"'                            02884000
&ZMS                  SETC  '&ZMS "REQUEST"'                            02884100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02884200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02884300
.ZG1073A              ANOP  ,                                           02884400
.*------------------------------------------------------------------    02884500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02884600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02884700
.ZG1073A0             AIF   (K'&TYPE LE 0).ZG1073A1  OK                 02884800
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      02884900
.ZG1073A1             AIF   (K'&ADJAREA LE 0).ZG1073A2  OK              02885000
&ZCVAL                SETC '&ZCVAL ADJAREA'     INCORRECT KEY USED      02885100
.ZG1073A2             AIF   (K'&DIRECTION LE 0).ZG1073A3  OK            02885200
&ZCVAL                SETC '&ZCVAL DIRECTION'   INCORRECT KEY USED      02885300
.ZG1073A3             AIF   (K'&LOCATOR LE 0).ZG1073A4  OK              02885400
&ZCVAL                SETC '&ZCVAL LOCATOR'     INCORRECT KEY USED      02885500
.ZG1073A4             AIF   (K'&KEYSCANTYPE LE 0).ZG1073A5  OK          02885600
&ZCVAL                SETC '&ZCVAL KEYSCANTYPE'  INCORRECT KEY USED     02885700
.ZG1073A5             AIF   (K'&ENTRYID LE 0).ZG1073A6  OK              02885800
&ZCVAL                SETC '&ZCVAL ENTRYID'     INCORRECT KEY USED      02885900
.ZG1073A6             AIF   (K'&ENTRYNAME LE 0).ZG1073A7  OK            02886000
&ZCVAL                SETC '&ZCVAL ENTRYNAME'   INCORRECT KEY USED      02886100
.ZG1073A7             AIF   (K'&KEYTYPE LE 0).ZG1073A8  OK              02886200
&ZCVAL                SETC '&ZCVAL KEYTYPE'     INCORRECT KEY USED      02886300
.ZG1073A8             AIF   (K'&RESTOKEN LE 0).ZG1073A9  OK             02886400
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      02886500
.ZG1073A9             AIF   (K'&EXTRESTOKEN LE 0).ZG1073A10  OK         02886600
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     02886700
.ZG1073A10            AIF   (K'&MOVETOKEY LE 0).ZG1073A11  OK           02886800
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      02886900
.ZG1073A11            AIF   (K'&LISTKEYINC LE 0).ZG1073A12  OK          02887000
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      02887100
.ZG1073A12            AIF   (K'&LISTKEYAREA LE 0).ZG1073A13  OK         02887200
&ZCVAL                SETC '&ZCVAL LISTKEYAREA'  INCORRECT KEY USED     02887300
.ZG1073A13            AIF   (K'&MOVETOSKEY LE 0).ZG1073A14  OK          02887400
&ZCVAL                SETC '&ZCVAL MOVETOSKEY'  INCORRECT KEY USED      02887500
.ZG1073A14            AIF   (K'&ZCVAL LE 0).ZG1073A15  OK               02887600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02887700
&ZMS                  SETC  '"REQUEST'                                  02887800
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           02887900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02888000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02888100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02888200
.ZG1073A15            ANOP  ,                                           02888300
.*----------------------------------------------------------------***   02888400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02888500
                      AIF   (N'&FIRSTELEM LE 1).ZG1075A  CK NUM         02888600
&ZMS                  SETC  '"FIRSTELEM='                               02888700
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          02888800
&ZMS                  SETC  '&ZMS "FIRSTELEM"'                          02888900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02889000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02889100
.ZG1075A              ANOP  ,                                           02889200
.*-------------------------------------------------------------------   02889300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02889400
&ZXFIRSTELEM          SETC  'INPUT'     SET IN/OUTPUT                   02889500
&XFIRSTELEM           SETC  '1'                                         02889600
                      AIF   (K'&FIRSTELEM(1) LE 0).ZG1075B  PARM        02889700
&XFIRSTELEM           SETC  '&FIRSTELEM(1)'     SET XVARIABLE           02889800
                      AIF   (N'&FIRSTELEM GT 1).ZG1075B  MULTI          02889900
&XFIRSTELEM           SETC  '&FIRSTELEM'        SET XVARIABLE           02890000
.ZG1075B              ANOP  ,                                           02890100
.*-------------------------------------------------------------------   02890200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02890300
                      AIF   (K'&ZXFIRSTELEM LE 0).ZG1075R  NOT I/O      02890400
                      AIF   ('&XFIRSTELEM'(1,1) NE '(').ZG1075R         02890500
&ZCGPR                SETC  '&XFIRSTELEM'(2,K'&XFIRSTELEM-2)            02890600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1075P              02890700
                      AIF   (K'&ZCGPR GT 2).ZG1075Q                     02890800
                      AIF   ('&ZCGPR' EQ '0').ZG1075Q                   02890900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02891000
                      AIF   (T'&ZCGPR NE 'N').ZG1075Q  INVALID REG NAME 02891100
.ZG1075P              ANOP  ,                                           02891200
                      AIF   (T'&ZCGPR NE 'N').ZG1075R  NON NUMERIC      02891300
                      AIF   ('&ZCGPR' LT '2').ZG1075Q                   02891400
                      AIF   ('&ZCGPR' LE '12').ZG1075R                  02891500
.ZG1075Q              ANOP  ,                                           02891600
&ZMS                  SETC  '"FIRSTELEM='                               02891700
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          02891800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02891900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02892000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02892100
.ZG1075R              ANOP  ,                                           02892200
.*----------------------------------------------------------------***   02892300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02892400
                      AIF   (N'&LASTELEM LE 1).ZG1078A  CK NUM          02892500
&ZMS                  SETC  '"LASTELEM='                                02892600
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           02892700
&ZMS                  SETC  '&ZMS "LASTELEM"'                           02892800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02892900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02893000
.ZG1078A              ANOP  ,                                           02893100
.*-------------------------------------------------------------------   02893200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02893300
&ZXLASTELEM           SETC  'INPUT'     SET IN/OUTPUT                   02893400
&XLASTELEM            SETC  '&LASTELEM(1)'      SET XVARIABLE           02893500
                      AIF   (N'&LASTELEM GT 1).ZG1078B  MULTI           02893600
&XLASTELEM            SETC  '&LASTELEM'         SET XVARIABLE           02893700
.ZG1078B              AIF   (K'&LASTELEM(1) GT 0).ZG1078C               02893800
&ZXLASTELEM           SETC  ''          RESET IN/OUTPUT                 02893900
&ZMS                  SETC  ' '                                         02894000
&ZMS                  SETC  '&ZMS "LASTELEM" KEY AND ITS'               02894100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02894200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02894300
.ZG1078C              ANOP  ,                                           02894400
.*-------------------------------------------------------------------   02894500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02894600
                      AIF   (K'&ZXLASTELEM LE 0).ZG1078R  NOT I/O       02894700
                      AIF   ('&XLASTELEM'(1,1) NE '(').ZG1078R          02894800
&ZCGPR                SETC  '&XLASTELEM'(2,K'&XLASTELEM-2)              02894900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1078P              02895000
                      AIF   (K'&ZCGPR GT 2).ZG1078Q                     02895100
                      AIF   ('&ZCGPR' EQ '0').ZG1078Q                   02895200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02895300
                      AIF   (T'&ZCGPR NE 'N').ZG1078Q  INVALID REG NAME 02895400
.ZG1078P              ANOP  ,                                           02895500
                      AIF   (T'&ZCGPR NE 'N').ZG1078R  NON NUMERIC      02895600
                      AIF   ('&ZCGPR' LT '2').ZG1078Q                   02895700
                      AIF   ('&ZCGPR' LE '12').ZG1078R                  02895800
.ZG1078Q              ANOP  ,                                           02895900
&ZMS                  SETC  '"LASTELEM='                                02896000
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           02896100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02896200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02896300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02896400
.ZG1078R              ANOP  ,                                           02896500
.*----------------------------------------------------------------***   02896600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02896700
                      AIF   (N'&MISCOMPARE LE 1).ZG1081A  CK NUM        02896800
&ZMS                  SETC  '"MISCOMPARE='                              02896900
&ZMS                  SETC  '&ZMS.&MISCOMPARE"'                         02897000
&ZMS                  SETC  '&ZMS "MISCOMPARE"'                         02897100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02897200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02897300
.ZG1081A              ANOP  ,                                           02897400
.*-------------------------------------------------------------------   02897500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02897600
&XMISCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02897700
.ZG1082A   AIF   ('&MISCOMPARE(1)' NE 'CONTINUE').ZG1083A               02897800
&XMISCOMPARE          SETC  'CONTINUE'  SET KEYWORD                     02897900
.*-------------------------------------------------------------------   02898000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02898100
.ZG1083A   AIF   ('&MISCOMPARE(1)' NE 'HALT').ZG1084A                   02898200
&XMISCOMPARE          SETC  'HALT'      SET KEYWORD                     02898300
.*-------------------------------------------------------------------   02898400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02898500
.ZG1084A              AIF   (K'&XMISCOMPARE GT 0).ZG1084C  KEYWORD      02898600
                      AIF   (K'&MISCOMPARE(1) LE 0).ZG1084B             02898700
&ZMS                  SETC  '"MISCOMPARE='                              02898800
&ZMS                  SETC  '&ZMS.&MISCOMPARE"'                         02898900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02899000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02899100
&ZMS                  SETC  '&ZMS "CONTINUE"'                           02899200
&ZMS                  SETC  '&ZMS OR "HALT".'                           02899300
                      MNOTE 8,' &ZMS '                                  02899400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02899500
.ZG1084B              ANOP  ,                                           02899600
&XMISCOMPARE          SETC  'CONTINUE'  SET DEFAULT KEYWORD             02899700
.ZG1084C              ANOP  ,                                           02899800
&ZXMISCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02899900
.*------------------------------------------------------------------    02900000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02900100
&XLISTTYPE            SETC  ''          INITIALIZE XVARIABLE            02900200
.*-------------------------------------------------------------------   02900300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02900400
.ZG1087               ANOP  ,                                           02900500
                      AIF   (K'&LISTTYPE(1) LE 0).ZG1087A               02900600
&ZTLC                 SETC 'NAMELIST'                                   02900700
                      AIF   ('&LISTTYPE(1)' NE '&ZTLC').ZG1088          02900800
&XLISTTYPE            SETC  'NAMELIST'  SET KEYWORD                     02900900
                      AIF   (N'&LISTTYPE LE 1).ZG1087A  CK NUM          02901000
&ZMS                  SETC  '"LISTTYPE='                                02901100
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02901200
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           02901300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02901400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02901500
.ZG1087A              ANOP  ,                                           02901600
.*------------------------------------------------------------------    02901700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02901800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02901900
.ZG1087A0             AIF   (K'&KEYCOMPARE LE 0).ZG1087A1  OK           02902000
&ZCVAL                SETC '&ZCVAL KEYCOMPARE'  INCORRECT KEY USED      02902100
.ZG1087A1             AIF   (K'&ENTRYKEY LE 0).ZG1087A2  OK             02902200
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02902300
.ZG1087A2             AIF   (K'&KEYREQTYPE LE 0).ZG1087A3  OK           02902400
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02902500
.ZG1087A3             AIF   (K'&KEYRANGEEND LE 0).ZG1087A4  OK          02902600
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02902700
.ZG1087A4             AIF   (K'&SKEYCOMPARE LE 0).ZG1087A5  OK          02902800
&ZCVAL                SETC '&ZCVAL SKEYCOMPARE'  INCORRECT KEY USED     02902900
.ZG1087A5             AIF   (K'&SECONDARYKEY LE 0).ZG1087A6  OK         02903000
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02903100
.ZG1087A6             AIF   (K'&SKEYREQTYPE LE 0).ZG1087A7  OK          02903200
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02903300
.ZG1087A7             AIF   (K'&SKEYRANGEEND LE 0).ZG1087A8  OK         02903400
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02903500
.ZG1087A8             AIF   (K'&ZCVAL LE 0).ZG1087A9  OK                02903600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02903700
&ZMS                  SETC  '"LISTTYPE'                                 02903800
&ZMS                  SETC  '&ZMS.=&LISTTYPE"'                          02903900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02904000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02904100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02904200
.ZG1087A9             ANOP  ,                                           02904300
.*-------------------------------------------------------------------   02904400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02904500
.ZG1088               ANOP  ,                                           02904600
&ZTLC                 SETC 'IDLIST'                                     02904700
                      AIF   ('&LISTTYPE(1)' NE '&ZTLC').ZG1125          02904800
&XLISTTYPE            SETC  'IDLIST'    SET KEYWORD                     02904900
                      AIF   (N'&LISTTYPE LE 1).ZG1088A  CK NUM          02905000
&ZMS                  SETC  '"LISTTYPE='                                02905100
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02905200
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           02905300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02905400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02905500
.ZG1088A              ANOP  ,                                           02905600
.*------------------------------------------------------------------    02905700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02905800
&XKEYCOMPARE          SETC  ''          INITIALIZE XVARIABLE            02905900
.*-------------------------------------------------------------------   02906000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02906100
.ZG1091               ANOP  ,                                           02906200
                      AIF   (K'&KEYCOMPARE(1) LE 0).ZG1091A             02906300
&ZTLC                 SETC 'NO'                                         02906400
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG1092        02906500
&XKEYCOMPARE          SETC  'NO'        SET KEYWORD                     02906600
                      AIF   (N'&KEYCOMPARE LE 1).ZG1091A  CK NUM        02906700
&ZMS                  SETC  '"KEYCOMPARE='                              02906800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02906900
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02907000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02907100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02907200
.ZG1091A              ANOP  ,                                           02907300
.*------------------------------------------------------------------    02907400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02907500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02907600
.ZG1091A0             AIF   (K'&ENTRYKEY LE 0).ZG1091A1  OK             02907700
&ZCVAL                SETC '&ZCVAL ENTRYKEY'    INCORRECT KEY USED      02907800
.ZG1091A1             AIF   (K'&KEYREQTYPE LE 0).ZG1091A2  OK           02907900
&ZCVAL                SETC '&ZCVAL KEYREQTYPE'  INCORRECT KEY USED      02908000
.ZG1091A2             AIF   (K'&KEYRANGEEND LE 0).ZG1091A3  OK          02908100
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02908200
.ZG1091A3             AIF   (K'&ZCVAL LE 0).ZG1091A4  OK                02908300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02908400
&ZMS                  SETC  '"KEYCOMPARE'                               02908500
&ZMS                  SETC  '&ZMS.=&KEYCOMPARE"'                        02908600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02908700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02908800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02908900
.ZG1091A4             ANOP  ,                                           02909000
.*-------------------------------------------------------------------   02909100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02909200
.ZG1092               ANOP  ,                                           02909300
&ZTLC                 SETC 'YES'                                        02909400
                      AIF   ('&KEYCOMPARE(1)' NE '&ZTLC').ZG1106        02909500
&XKEYCOMPARE          SETC  'YES'       SET KEYWORD                     02909600
                      AIF   (N'&KEYCOMPARE LE 1).ZG1092A  CK NUM        02909700
&ZMS                  SETC  '"KEYCOMPARE='                              02909800
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02909900
&ZMS                  SETC  '&ZMS "KEYCOMPARE"'                         02910000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02910100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02910200
.ZG1092A              ANOP  ,                                           02910300
.*----------------------------------------------------------------***   02910400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02910500
                      AIF   (N'&ENTRYKEY LE 1).ZG1094A  CK NUM          02910600
&ZMS                  SETC  '"ENTRYKEY='                                02910700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02910800
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           02910900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02911000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02911100
.ZG1094A              ANOP  ,                                           02911200
.*-------------------------------------------------------------------   02911300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02911400
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   02911500
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           02911600
                      AIF   (N'&ENTRYKEY GT 1).ZG1094B  MULTI           02911700
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           02911800
.ZG1094B              AIF   (K'&ENTRYKEY(1) GT 0).ZG1094C               02911900
&ZXENTRYKEY           SETC  ''          RESET IN/OUTPUT                 02912000
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   02912100
&ZMS                  SETC  '&ZMS , "ENTRYKEY" KEY AND ITS'             02912200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02912300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02912400
.ZG1094C              ANOP  ,                                           02912500
.*-------------------------------------------------------------------   02912600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02912700
                      AIF   (K'&ZXENTRYKEY LE 0).ZG1094R  NOT I/O       02912800
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG1094R          02912900
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              02913000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1094P              02913100
                      AIF   (K'&ZCGPR GT 2).ZG1094Q                     02913200
                      AIF   ('&ZCGPR' EQ '0').ZG1094Q                   02913300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02913400
                      AIF   (T'&ZCGPR NE 'N').ZG1094Q  INVALID REG NAME 02913500
.ZG1094P              ANOP  ,                                           02913600
                      AIF   (T'&ZCGPR NE 'N').ZG1094R  NON NUMERIC      02913700
                      AIF   ('&ZCGPR' LT '2').ZG1094Q                   02913800
                      AIF   ('&ZCGPR' LE '12').ZG1094R                  02913900
.ZG1094Q              ANOP  ,                                           02914000
&ZMS                  SETC  '"ENTRYKEY='                                02914100
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           02914200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02914300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02914400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02914500
.ZG1094R              ANOP  ,                                           02914600
.*------------------------------------------------------------------    02914700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02914800
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            02914900
.*-------------------------------------------------------------------   02915000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02915100
.ZG1098               ANOP  ,                                           02915200
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG1098A             02915300
&ZTLC                 SETC 'EQUAL'                                      02915400
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG1099        02915500
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     02915600
                      AIF   (N'&KEYREQTYPE LE 1).ZG1098A  CK NUM        02915700
&ZMS                  SETC  '"KEYREQTYPE='                              02915800
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02915900
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02916000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02916100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02916200
.ZG1098A              ANOP  ,                                           02916300
.*------------------------------------------------------------------    02916400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02916500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02916600
.ZG1098A0             AIF   (K'&KEYRANGEEND LE 0).ZG1098A1  OK          02916700
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02916800
.ZG1098A1             AIF   (K'&ZCVAL LE 0).ZG1098A2  OK                02916900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02917000
&ZMS                  SETC  '"KEYREQTYPE'                               02917100
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02917200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02917300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02917400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02917500
.ZG1098A2             ANOP  ,                                           02917600
.*-------------------------------------------------------------------   02917700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02917800
.ZG1099               ANOP  ,                                           02917900
&ZTLC                 SETC 'LESSOREQUAL'                                02918000
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG1100        02918100
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             02918200
                      AIF   (N'&KEYREQTYPE LE 1).ZG1099A  CK NUM        02918300
&ZMS                  SETC  '"KEYREQTYPE='                              02918400
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02918500
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02918600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02918700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02918800
.ZG1099A              ANOP  ,                                           02918900
.*------------------------------------------------------------------    02919000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02919100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02919200
.ZG1099A0             AIF   (K'&KEYRANGEEND LE 0).ZG1099A1  OK          02919300
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02919400
.ZG1099A1             AIF   (K'&ZCVAL LE 0).ZG1099A2  OK                02919500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02919600
&ZMS                  SETC  '"KEYREQTYPE'                               02919700
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02919800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02919900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02920000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02920100
.ZG1099A2             ANOP  ,                                           02920200
.*-------------------------------------------------------------------   02920300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02920400
.ZG1100               ANOP  ,                                           02920500
&ZTLC                 SETC 'GREATEROREQUAL'                             02920600
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG1101        02920700
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             02920800
                      AIF   (N'&KEYREQTYPE LE 1).ZG1100A  CK NUM        02920900
&ZMS                  SETC  '"KEYREQTYPE='                              02921000
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02921100
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02921200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02921300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02921400
.ZG1100A              ANOP  ,                                           02921500
.*------------------------------------------------------------------    02921600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02921700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02921800
.ZG1100A0             AIF   (K'&KEYRANGEEND LE 0).ZG1100A1  OK          02921900
&ZCVAL                SETC '&ZCVAL KEYRANGEEND'  INCORRECT KEY USED     02922000
.ZG1100A1             AIF   (K'&ZCVAL LE 0).ZG1100A2  OK                02922100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02922200
&ZMS                  SETC  '"KEYREQTYPE'                               02922300
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        02922400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02922500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02922600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02922700
.ZG1100A2             ANOP  ,                                           02922800
.*-------------------------------------------------------------------   02922900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02923000
.ZG1101               ANOP  ,                                           02923100
&ZTLC                 SETC 'RANGE'                                      02923200
                      AIF   ('&KEYREQTYPE(1)' NE '&ZTLC').ZG1105        02923300
&XKEYREQTYPE          SETC  'RANGE'     SET KEYWORD                     02923400
                      AIF   (N'&KEYREQTYPE LE 1).ZG1101A  CK NUM        02923500
&ZMS                  SETC  '"KEYREQTYPE='                              02923600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02923700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         02923800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02923900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02924000
.ZG1101A              ANOP  ,                                           02924100
.*----------------------------------------------------------------***   02924200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02924300
                      AIF   (N'&KEYRANGEEND LE 1).ZG1103A  CK NUM       02924400
&ZMS                  SETC  '"KEYRANGEEND='                             02924500
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02924600
&ZMS                  SETC  '&ZMS "KEYRANGEEND"'                        02924700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02924800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02924900
.ZG1103A              ANOP  ,                                           02925000
.*-------------------------------------------------------------------   02925100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02925200
&ZXKEYRANGEEND        SETC  'INPUT'     SET IN/OUTPUT                   02925300
&XKEYRANGEEND         SETC  '&KEYRANGEEND(1)'   SET XVARIABLE           02925400
                      AIF   (N'&KEYRANGEEND GT 1).ZG1103B  MULTI        02925500
&XKEYRANGEEND         SETC  '&KEYRANGEEND'      SET XVARIABLE           02925600
.ZG1103B              AIF   (K'&KEYRANGEEND(1) GT 0).ZG1103C            02925700
&ZXKEYRANGEEND        SETC  ''          RESET IN/OUTPUT                 02925800
&ZMS                  SETC  'WHEN "RANGE" IS SPECIFIED'                 02925900
&ZMS                  SETC  '&ZMS , "KEYRANGEEND" KEY AND ITS'          02926000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02926100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02926200
.ZG1103C              ANOP  ,                                           02926300
.*-------------------------------------------------------------------   02926400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02926500
                      AIF   (K'&ZXKEYRANGEEND LE 0).ZG1103R  NOT I/O    02926600
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZG1103R       02926700
&ZCGPR                SETC  '&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2)        02926800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1103P              02926900
                      AIF   (K'&ZCGPR GT 2).ZG1103Q                     02927000
                      AIF   ('&ZCGPR' EQ '0').ZG1103Q                   02927100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02927200
                      AIF   (T'&ZCGPR NE 'N').ZG1103Q  INVALID REG NAME 02927300
.ZG1103P              ANOP  ,                                           02927400
                      AIF   (T'&ZCGPR NE 'N').ZG1103R  NON NUMERIC      02927500
                      AIF   ('&ZCGPR' LT '2').ZG1103Q                   02927600
                      AIF   ('&ZCGPR' LE '12').ZG1103R                  02927700
.ZG1103Q              ANOP  ,                                           02927800
&ZMS                  SETC  '"KEYRANGEEND='                             02927900
&ZMS                  SETC  '&ZMS.&KEYRANGEEND"'                        02928000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02928100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02928200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02928300
.ZG1103R              ANOP  ,                                           02928400
.*------------------------------------------------------------------    02928500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02928600
.ZG1105               ANOP  ,                                           02928700
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   02928800
                      AIF   (K'&XKEYREQTYPE GT 0).ZG1105E  VALID ARG    02928900
                      AIF   (T'&KEYREQTYPE EQ 'O').ZG1105D  OMITTED     02929000
&ZASYSLNDX            SETA  0                                           02929100
.ZG1105A              ANOP  ,           POSITIONAL MACRO KEY            02929200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02929300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1105C          02929400
&ZTLC                 SETC 'KEYREQTYPE'                                 02929500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1105A 02929600
.ZG1105B              ANOP  ,                                           02929700
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02929800
&ZMS                  SETC  'THE "KEYREQTYPE" KEY'                      02929900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02930000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02930100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02930200
                      AGO   .ZG1105E                                    02930300
.ZG1105C              ANOP  ,                                           02930400
&ZXKEYREQTYPE         SETC  ''          RESET IN/OUTPUT                 02930500
&ZMS                  SETC  '"KEYREQTYPE='                              02930600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         02930700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02930800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02930900
&ZMS                  SETC  '&ZMS "EQUAL",'                             02931000
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02931100
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02931200
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02931300
                      MNOTE 8,' &ZMS '                                  02931400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02931500
                      AGO   .ZG1105E                                    02931600
.ZG1105D              ANOP  ,                                           02931700
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             02931800
.ZG1105E              ANOP  ,                                           02931900
.*------------------------------------------------------------------    02932000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02932100
.ZG1106               ANOP  ,                                           02932200
&ZXKEYCOMPARE         SETC  'INPUT'     SET IN/OUTPUT                   02932300
                      AIF   (K'&XKEYCOMPARE GT 0).ZG1106E  VALID ARG    02932400
                      AIF   (T'&KEYCOMPARE EQ 'O').ZG1106D  OMITTED     02932500
&ZASYSLNDX            SETA  0                                           02932600
.ZG1106A              ANOP  ,           POSITIONAL MACRO KEY            02932700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02932800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1106C          02932900
&ZTLC                 SETC 'KEYCOMPARE'                                 02933000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1106A 02933100
.ZG1106B              ANOP  ,                                           02933200
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02933300
&ZMS                  SETC  'THE "KEYCOMPARE" KEY'                      02933400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02933500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02933600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02933700
                      AGO   .ZG1106E                                    02933800
.ZG1106C              ANOP  ,                                           02933900
&ZXKEYCOMPARE         SETC  ''          RESET IN/OUTPUT                 02934000
&ZMS                  SETC  '"KEYCOMPARE='                              02934100
&ZMS                  SETC  '&ZMS.&KEYCOMPARE"'                         02934200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02934300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02934400
&ZMS                  SETC  '&ZMS "NO"'                                 02934500
&ZMS                  SETC  '&ZMS OR "YES".'                            02934600
                      MNOTE 8,' &ZMS '                                  02934700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02934800
                      AGO   .ZG1106E                                    02934900
.ZG1106D              ANOP  ,                                           02935000
&XKEYCOMPARE          SETC  'NO'        SET DEFAULT KEYWORD             02935100
.ZG1106E              ANOP  ,                                           02935200
.*------------------------------------------------------------------    02935300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02935400
&XSKEYCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02935500
.*-------------------------------------------------------------------   02935600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02935700
.ZG1109               ANOP  ,                                           02935800
                      AIF   (K'&SKEYCOMPARE(1) LE 0).ZG1109A            02935900
&ZTLC                 SETC 'NO'                                         02936000
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG1110       02936100
&XSKEYCOMPARE         SETC  'NO'        SET KEYWORD                     02936200
                      AIF   (N'&SKEYCOMPARE LE 1).ZG1109A  CK NUM       02936300
&ZMS                  SETC  '"SKEYCOMPARE='                             02936400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02936500
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02936600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02936700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02936800
.ZG1109A              ANOP  ,                                           02936900
.*------------------------------------------------------------------    02937000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02937100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02937200
.ZG1109A0             AIF   (K'&SECONDARYKEY LE 0).ZG1109A1  OK         02937300
&ZCVAL                SETC '&ZCVAL SECONDARYKEY'  INCORRECT KEY USED    02937400
.ZG1109A1             AIF   (K'&SKEYREQTYPE LE 0).ZG1109A2  OK          02937500
&ZCVAL                SETC '&ZCVAL SKEYREQTYPE'  INCORRECT KEY USED     02937600
.ZG1109A2             AIF   (K'&SKEYRANGEEND LE 0).ZG1109A3  OK         02937700
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02937800
.ZG1109A3             AIF   (K'&ZCVAL LE 0).ZG1109A4  OK                02937900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02938000
&ZMS                  SETC  '"SKEYCOMPARE'                              02938100
&ZMS                  SETC  '&ZMS.=&SKEYCOMPARE"'                       02938200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02938300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02938400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02938500
.ZG1109A4             ANOP  ,                                           02938600
.*-------------------------------------------------------------------   02938700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02938800
.ZG1110               ANOP  ,                                           02938900
&ZTLC                 SETC 'YES'                                        02939000
                      AIF   ('&SKEYCOMPARE(1)' NE '&ZTLC').ZG1124       02939100
&XSKEYCOMPARE         SETC  'YES'       SET KEYWORD                     02939200
                      AIF   (N'&SKEYCOMPARE LE 1).ZG1110A  CK NUM       02939300
&ZMS                  SETC  '"SKEYCOMPARE='                             02939400
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02939500
&ZMS                  SETC  '&ZMS "SKEYCOMPARE"'                        02939600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02939700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02939800
.ZG1110A              ANOP  ,                                           02939900
.*----------------------------------------------------------------***   02940000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02940100
                      AIF   (N'&SECONDARYKEY LE 1).ZG1112A  CK NUM      02940200
&ZMS                  SETC  '"SECONDARYKEY='                            02940300
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02940400
&ZMS                  SETC  '&ZMS "SECONDARYKEY"'                       02940500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02940600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02940700
.ZG1112A              ANOP  ,                                           02940800
.*-------------------------------------------------------------------   02940900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02941000
&ZXSECONDARYKEY       SETC  'INPUT'     SET IN/OUTPUT                   02941100
&XSECONDARYKEY        SETC  '&SECONDARYKEY(1)'  SET XVARIABLE           02941200
                      AIF   (N'&SECONDARYKEY GT 1).ZG1112B  MULTI       02941300
&XSECONDARYKEY        SETC  '&SECONDARYKEY'     SET XVARIABLE           02941400
.ZG1112B              AIF   (K'&SECONDARYKEY(1) GT 0).ZG1112C           02941500
&ZXSECONDARYKEY       SETC  ''          RESET IN/OUTPUT                 02941600
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   02941700
&ZMS                  SETC  '&ZMS , "SECONDARYKEY" KEY AND ITS'         02941800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02941900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02942000
.ZG1112C              ANOP  ,                                           02942100
.*-------------------------------------------------------------------   02942200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02942300
                      AIF   (K'&ZXSECONDARYKEY LE 0).ZG1112R  NOT I/O   02942400
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZG1112R      02942500
&ZCGPR                SETC  '&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2)      02942600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1112P              02942700
                      AIF   (K'&ZCGPR GT 2).ZG1112Q                     02942800
                      AIF   ('&ZCGPR' EQ '0').ZG1112Q                   02942900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02943000
                      AIF   (T'&ZCGPR NE 'N').ZG1112Q  INVALID REG NAME 02943100
.ZG1112P              ANOP  ,                                           02943200
                      AIF   (T'&ZCGPR NE 'N').ZG1112R  NON NUMERIC      02943300
                      AIF   ('&ZCGPR' LT '2').ZG1112Q                   02943400
                      AIF   ('&ZCGPR' LE '12').ZG1112R                  02943500
.ZG1112Q              ANOP  ,                                           02943600
&ZMS                  SETC  '"SECONDARYKEY='                            02943700
&ZMS                  SETC  '&ZMS.&SECONDARYKEY"'                       02943800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02943900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02944000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02944100
.ZG1112R              ANOP  ,                                           02944200
.*------------------------------------------------------------------    02944300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02944400
&XSKEYREQTYPE         SETC  ''          INITIALIZE XVARIABLE            02944500
.*-------------------------------------------------------------------   02944600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02944700
.ZG1116               ANOP  ,                                           02944800
                      AIF   (K'&SKEYREQTYPE(1) LE 0).ZG1116A            02944900
&ZTLC                 SETC 'EQUAL'                                      02945000
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG1117       02945100
&XSKEYREQTYPE         SETC  'EQUAL'     SET KEYWORD                     02945200
                      AIF   (N'&SKEYREQTYPE LE 1).ZG1116A  CK NUM       02945300
&ZMS                  SETC  '"SKEYREQTYPE='                             02945400
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02945500
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02945600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02945700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02945800
.ZG1116A              ANOP  ,                                           02945900
.*------------------------------------------------------------------    02946000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02946100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02946200
.ZG1116A0             AIF   (K'&SKEYRANGEEND LE 0).ZG1116A1  OK         02946300
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02946400
.ZG1116A1             AIF   (K'&ZCVAL LE 0).ZG1116A2  OK                02946500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02946600
&ZMS                  SETC  '"SKEYREQTYPE'                              02946700
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02946800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02946900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02947000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02947100
.ZG1116A2             ANOP  ,                                           02947200
.*-------------------------------------------------------------------   02947300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02947400
.ZG1117               ANOP  ,                                           02947500
&ZTLC                 SETC 'LESSOREQUAL'                                02947600
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG1118       02947700
&XSKEYREQTYPE         SETC  'LESSOREQUAL'       SET KEYWORD             02947800
                      AIF   (N'&SKEYREQTYPE LE 1).ZG1117A  CK NUM       02947900
&ZMS                  SETC  '"SKEYREQTYPE='                             02948000
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02948100
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02948200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02948300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02948400
.ZG1117A              ANOP  ,                                           02948500
.*------------------------------------------------------------------    02948600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02948700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02948800
.ZG1117A0             AIF   (K'&SKEYRANGEEND LE 0).ZG1117A1  OK         02948900
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02949000
.ZG1117A1             AIF   (K'&ZCVAL LE 0).ZG1117A2  OK                02949100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02949200
&ZMS                  SETC  '"SKEYREQTYPE'                              02949300
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02949400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02949500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02949600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02949700
.ZG1117A2             ANOP  ,                                           02949800
.*-------------------------------------------------------------------   02949900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02950000
.ZG1118               ANOP  ,                                           02950100
&ZTLC                 SETC 'GREATEROREQUAL'                             02950200
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG1119       02950300
&XSKEYREQTYPE         SETC  'GREATEROREQUAL'    SET KEYWORD             02950400
                      AIF   (N'&SKEYREQTYPE LE 1).ZG1118A  CK NUM       02950500
&ZMS                  SETC  '"SKEYREQTYPE='                             02950600
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02950700
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02950800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02950900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02951000
.ZG1118A              ANOP  ,                                           02951100
.*------------------------------------------------------------------    02951200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02951300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02951400
.ZG1118A0             AIF   (K'&SKEYRANGEEND LE 0).ZG1118A1  OK         02951500
&ZCVAL                SETC '&ZCVAL SKEYRANGEEND'  INCORRECT KEY USED    02951600
.ZG1118A1             AIF   (K'&ZCVAL LE 0).ZG1118A2  OK                02951700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02951800
&ZMS                  SETC  '"SKEYREQTYPE'                              02951900
&ZMS                  SETC  '&ZMS.=&SKEYREQTYPE"'                       02952000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02952100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02952200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02952300
.ZG1118A2             ANOP  ,                                           02952400
.*-------------------------------------------------------------------   02952500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02952600
.ZG1119               ANOP  ,                                           02952700
&ZTLC                 SETC 'RANGE'                                      02952800
                      AIF   ('&SKEYREQTYPE(1)' NE '&ZTLC').ZG1123       02952900
&XSKEYREQTYPE         SETC  'RANGE'     SET KEYWORD                     02953000
                      AIF   (N'&SKEYREQTYPE LE 1).ZG1119A  CK NUM       02953100
&ZMS                  SETC  '"SKEYREQTYPE='                             02953200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02953300
&ZMS                  SETC  '&ZMS "SKEYREQTYPE"'                        02953400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02953500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02953600
.ZG1119A              ANOP  ,                                           02953700
.*----------------------------------------------------------------***   02953800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02953900
                      AIF   (N'&SKEYRANGEEND LE 1).ZG1121A  CK NUM      02954000
&ZMS                  SETC  '"SKEYRANGEEND='                            02954100
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02954200
&ZMS                  SETC  '&ZMS "SKEYRANGEEND"'                       02954300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02954400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02954500
.ZG1121A              ANOP  ,                                           02954600
.*-------------------------------------------------------------------   02954700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02954800
&ZXSKEYRANGEEND       SETC  'INPUT'     SET IN/OUTPUT                   02954900
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND(1)'  SET XVARIABLE           02955000
                      AIF   (N'&SKEYRANGEEND GT 1).ZG1121B  MULTI       02955100
&XSKEYRANGEEND        SETC  '&SKEYRANGEEND'     SET XVARIABLE           02955200
.ZG1121B              AIF   (K'&SKEYRANGEEND(1) GT 0).ZG1121C           02955300
&ZXSKEYRANGEEND       SETC  ''          RESET IN/OUTPUT                 02955400
&ZMS                  SETC  'WHEN "RANGE" IS SPECIFIED'                 02955500
&ZMS                  SETC  '&ZMS , "SKEYRANGEEND" KEY AND ITS'         02955600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02955700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02955800
.ZG1121C              ANOP  ,                                           02955900
.*-------------------------------------------------------------------   02956000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02956100
                      AIF   (K'&ZXSKEYRANGEEND LE 0).ZG1121R  NOT I/O   02956200
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZG1121R      02956300
&ZCGPR                SETC  '&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2)      02956400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1121P              02956500
                      AIF   (K'&ZCGPR GT 2).ZG1121Q                     02956600
                      AIF   ('&ZCGPR' EQ '0').ZG1121Q                   02956700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02956800
                      AIF   (T'&ZCGPR NE 'N').ZG1121Q  INVALID REG NAME 02956900
.ZG1121P              ANOP  ,                                           02957000
                      AIF   (T'&ZCGPR NE 'N').ZG1121R  NON NUMERIC      02957100
                      AIF   ('&ZCGPR' LT '2').ZG1121Q                   02957200
                      AIF   ('&ZCGPR' LE '12').ZG1121R                  02957300
.ZG1121Q              ANOP  ,                                           02957400
&ZMS                  SETC  '"SKEYRANGEEND='                            02957500
&ZMS                  SETC  '&ZMS.&SKEYRANGEEND"'                       02957600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02957700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02957800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02957900
.ZG1121R              ANOP  ,                                           02958000
.*------------------------------------------------------------------    02958100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02958200
.ZG1123               ANOP  ,                                           02958300
&ZXSKEYREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                   02958400
                      AIF   (K'&XSKEYREQTYPE GT 0).ZG1123E  VALID ARG   02958500
                      AIF   (T'&SKEYREQTYPE EQ 'O').ZG1123D  OMITTED    02958600
&ZASYSLNDX            SETA  0                                           02958700
.ZG1123A              ANOP  ,           POSITIONAL MACRO KEY            02958800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02958900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1123C          02959000
&ZTLC                 SETC 'SKEYREQTYPE'                                02959100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1123A 02959200
.ZG1123B              ANOP  ,                                           02959300
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02959400
&ZMS                  SETC  'THE "SKEYREQTYPE" KEY'                     02959500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02959600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02959700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02959800
                      AGO   .ZG1123E                                    02959900
.ZG1123C              ANOP  ,                                           02960000
&ZXSKEYREQTYPE        SETC  ''          RESET IN/OUTPUT                 02960100
&ZMS                  SETC  '"SKEYREQTYPE='                             02960200
&ZMS                  SETC  '&ZMS.&SKEYREQTYPE"'                        02960300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02960400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02960500
&ZMS                  SETC  '&ZMS "EQUAL",'                             02960600
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       02960700
&ZMS                  SETC  '&ZMS "GREATEROREQUAL",'                    02960800
&ZMS                  SETC  '&ZMS OR "RANGE".'                          02960900
                      MNOTE 8,' &ZMS '                                  02961000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02961100
                      AGO   .ZG1123E                                    02961200
.ZG1123D              ANOP  ,                                           02961300
&XSKEYREQTYPE         SETC  'EQUAL'     SET DEFAULT KEYWORD             02961400
.ZG1123E              ANOP  ,                                           02961500
.*------------------------------------------------------------------    02961600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02961700
.ZG1124               ANOP  ,                                           02961800
&ZXSKEYCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02961900
                      AIF   (K'&XSKEYCOMPARE GT 0).ZG1124E  VALID ARG   02962000
                      AIF   (T'&SKEYCOMPARE EQ 'O').ZG1124D  OMITTED    02962100
&ZASYSLNDX            SETA  0                                           02962200
.ZG1124A              ANOP  ,           POSITIONAL MACRO KEY            02962300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02962400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1124C          02962500
&ZTLC                 SETC 'SKEYCOMPARE'                                02962600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1124A 02962700
.ZG1124B              ANOP  ,                                           02962800
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02962900
&ZMS                  SETC  'THE "SKEYCOMPARE" KEY'                     02963000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02963100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02963200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02963300
                      AGO   .ZG1124E                                    02963400
.ZG1124C              ANOP  ,                                           02963500
&ZXSKEYCOMPARE        SETC  ''          RESET IN/OUTPUT                 02963600
&ZMS                  SETC  '"SKEYCOMPARE='                             02963700
&ZMS                  SETC  '&ZMS.&SKEYCOMPARE"'                        02963800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02963900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02964000
&ZMS                  SETC  '&ZMS "NO"'                                 02964100
&ZMS                  SETC  '&ZMS OR "YES".'                            02964200
                      MNOTE 8,' &ZMS '                                  02964300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02964400
                      AGO   .ZG1124E                                    02964500
.ZG1124D              ANOP  ,                                           02964600
&XSKEYCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02964700
.ZG1124E              ANOP  ,                                           02964800
.*------------------------------------------------------------------    02964900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02965000
.ZG1125               ANOP  ,                                           02965100
&ZXLISTTYPE           SETC  'INPUT'     SET IN/OUTPUT                   02965200
                      AIF   (K'&XLISTTYPE GT 0).ZG1125E  VALID ARG      02965300
                      AIF   (T'&LISTTYPE EQ 'O').ZG1125D  OMITTED       02965400
&ZASYSLNDX            SETA  0                                           02965500
.ZG1125A              ANOP  ,           POSITIONAL MACRO KEY            02965600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02965700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1125C          02965800
&ZTLC                 SETC 'LISTTYPE'                                   02965900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1125A 02966000
.ZG1125B              ANOP  ,                                           02966100
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02966200
&ZMS                  SETC  'THE "LISTTYPE" KEY'                        02966300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02966400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02966500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02966600
                      AGO   .ZG1125E                                    02966700
.ZG1125C              ANOP  ,                                           02966800
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02966900
&ZMS                  SETC  '"LISTTYPE='                                02967000
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           02967100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02967200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02967300
&ZMS                  SETC  '&ZMS "NAMELIST"'                           02967400
&ZMS                  SETC  '&ZMS OR "IDLIST".'                         02967500
                      MNOTE 8,' &ZMS '                                  02967600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02967700
                      AGO   .ZG1125E                                    02967800
.ZG1125D              ANOP  ,                                           02967900
&XLISTTYPE            SETC  'NAMELIST'  SET DEFAULT KEYWORD             02968000
.ZG1125E              ANOP  ,                                           02968100
.*------------------------------------------------------------------    02968200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02968300
                      AIF   (K'&LISTTYPE(1) GT 0).ZG1125F  PARM         02968400
&XLISTTYPE            SETC  ''          ENSURE NULL KEYWORD             02968500
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 02968600
&ZMS                  SETC  'THE'                                       02968700
&ZMS                  SETC  '&ZMS "LISTTYPE" KEY AND ITS'               02968800
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               02968900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02969000
&ZMS                  SETC  '&ZMS "NAMELIST"'                           02969100
&ZMS                  SETC  '&ZMS OR "IDLIST".'                         02969200
                      MNOTE 8,' &ZMS '                                  02969300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02969400
.ZG1125F              ANOP  ,                                           02969500
.*------------------------------------------------------------------    02969600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02969700
&XLISTCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02969800
.*-------------------------------------------------------------------   02969900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02970000
.ZG1128               ANOP  ,                                           02970100
                      AIF   (K'&LISTCOMPARE(1) LE 0).ZG1128A            02970200
&ZTLC                 SETC 'NO'                                         02970300
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG1129       02970400
&XLISTCOMPARE         SETC  'NO'        SET KEYWORD                     02970500
                      AIF   (N'&LISTCOMPARE LE 1).ZG1128A  CK NUM       02970600
&ZMS                  SETC  '"LISTCOMPARE='                             02970700
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02970800
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02970900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02971000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02971100
.ZG1128A              ANOP  ,                                           02971200
.*------------------------------------------------------------------    02971300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02971400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02971500
.ZG1128A0             AIF   (K'&LISTNUM LE 0).ZG1128A1  OK              02971600
&ZCVAL                SETC '&ZCVAL LISTNUM'     INCORRECT KEY USED      02971700
.ZG1128A1             AIF   (K'&AUTHCOMPARE LE 0).ZG1128A2  OK          02971800
&ZCVAL                SETC '&ZCVAL AUTHCOMPARE'  INCORRECT KEY USED     02971900
.ZG1128A2             AIF   (K'&AUTHCOMP LE 0).ZG1128A3  OK             02972000
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02972100
.ZG1128A3             AIF   (K'&AUTHCOMPTYPE LE 0).ZG1128A4  OK         02972200
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02972300
.ZG1128A4             AIF   (K'&ZCVAL LE 0).ZG1128A5  OK                02972400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02972500
&ZMS                  SETC  '"LISTCOMPARE'                              02972600
&ZMS                  SETC  '&ZMS.=&LISTCOMPARE"'                       02972700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02972800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02972900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02973000
.ZG1128A5             ANOP  ,                                           02973100
.*-------------------------------------------------------------------   02973200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02973300
.ZG1129               ANOP  ,                                           02973400
&ZTLC                 SETC 'YES'                                        02973500
                      AIF   ('&LISTCOMPARE(1)' NE '&ZTLC').ZG1146       02973600
&XLISTCOMPARE         SETC  'YES'       SET KEYWORD                     02973700
                      AIF   (N'&LISTCOMPARE LE 1).ZG1129A  CK NUM       02973800
&ZMS                  SETC  '"LISTCOMPARE='                             02973900
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02974000
&ZMS                  SETC  '&ZMS "LISTCOMPARE"'                        02974100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02974200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02974300
.ZG1129A              ANOP  ,                                           02974400
.*----------------------------------------------------------------***   02974500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02974600
                      AIF   (N'&LISTNUM LE 1).ZG1131A  CK NUM           02974700
&ZMS                  SETC  '"LISTNUM='                                 02974800
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02974900
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02975000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02975100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02975200
.ZG1131A              ANOP  ,                                           02975300
.*-------------------------------------------------------------------   02975400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02975500
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   02975600
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           02975700
                      AIF   (N'&LISTNUM GT 1).ZG1131B  MULTI            02975800
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   02975900
.ZG1131B              AIF   (K'&LISTNUM(1) GT 0).ZG1131C                02976000
&ZXLISTNUM            SETC  ''          RESET IN/OUTPUT                 02976100
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   02976200
&ZMS                  SETC  '&ZMS , "LISTNUM" KEY AND ITS'              02976300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02976400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02976500
.ZG1131C              ANOP  ,                                           02976600
.*-------------------------------------------------------------------   02976700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02976800
                      AIF   (K'&ZXLISTNUM LE 0).ZG1131R  NOT I/O        02976900
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG1131R           02977000
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                02977100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1131P              02977200
                      AIF   (K'&ZCGPR GT 2).ZG1131Q                     02977300
                      AIF   ('&ZCGPR' EQ '0').ZG1131Q                   02977400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02977500
                      AIF   (T'&ZCGPR NE 'N').ZG1131Q  INVALID REG NAME 02977600
.ZG1131P              ANOP  ,                                           02977700
                      AIF   (T'&ZCGPR NE 'N').ZG1131R  NON NUMERIC      02977800
                      AIF   ('&ZCGPR' LT '2').ZG1131Q                   02977900
                      AIF   ('&ZCGPR' LE '12').ZG1131R                  02978000
.ZG1131Q              ANOP  ,                                           02978100
&ZMS                  SETC  '"LISTNUM='                                 02978200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            02978300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02978400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02978500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02978600
.ZG1131R              ANOP  ,                                           02978700
.*------------------------------------------------------------------    02978800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02978900
&XAUTHCOMPARE         SETC  ''          INITIALIZE XVARIABLE            02979000
.*-------------------------------------------------------------------   02979100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02979200
.ZG1134               ANOP  ,                                           02979300
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG1134A            02979400
&ZTLC                 SETC 'NO'                                         02979500
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG1135       02979600
&XAUTHCOMPARE         SETC  'NO'        SET KEYWORD                     02979700
                      AIF   (N'&AUTHCOMPARE LE 1).ZG1134A  CK NUM       02979800
&ZMS                  SETC  '"AUTHCOMPARE='                             02979900
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02980000
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02980100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02980200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02980300
.ZG1134A              ANOP  ,                                           02980400
.*------------------------------------------------------------------    02980500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02980600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     02980700
.ZG1134A0             AIF   (K'&AUTHCOMP LE 0).ZG1134A1  OK             02980800
&ZCVAL                SETC '&ZCVAL AUTHCOMP'    INCORRECT KEY USED      02980900
.ZG1134A1             AIF   (K'&AUTHCOMPTYPE LE 0).ZG1134A2  OK         02981000
&ZCVAL                SETC '&ZCVAL AUTHCOMPTYPE'  INCORRECT KEY USED    02981100
.ZG1134A2             AIF   (K'&ZCVAL LE 0).ZG1134A3  OK                02981200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       02981300
&ZMS                  SETC  '"AUTHCOMPARE'                              02981400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02981500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        02981600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        02981700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02981800
.ZG1134A3             ANOP  ,                                           02981900
.*-------------------------------------------------------------------   02982000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02982100
.ZG1135               ANOP  ,                                           02982200
&ZTLC                 SETC 'YES'                                        02982300
                      AIF   ('&AUTHCOMPARE(1)' NE '&ZTLC').ZG1144       02982400
&XAUTHCOMPARE         SETC  'YES'       SET KEYWORD                     02982500
                      AIF   (N'&AUTHCOMPARE LE 1).ZG1135A  CK NUM       02982600
&ZMS                  SETC  '"AUTHCOMPARE='                             02982700
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02982800
&ZMS                  SETC  '&ZMS "AUTHCOMPARE"'                        02982900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02983000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02983100
.ZG1135A              ANOP  ,                                           02983200
.*----------------------------------------------------------------***   02983300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 02983400
                      AIF   (N'&AUTHCOMP LE 1).ZG1137A  CK NUM          02983500
&ZMS                  SETC  '"AUTHCOMP='                                02983600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02983700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02983800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02983900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02984000
.ZG1137A              ANOP  ,                                           02984100
.*-------------------------------------------------------------------   02984200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     02984300
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   02984400
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           02984500
                      AIF   (N'&AUTHCOMP GT 1).ZG1137B  MULTI           02984600
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           02984700
.ZG1137B              AIF   (K'&AUTHCOMP(1) GT 0).ZG1137C               02984800
&ZXAUTHCOMP           SETC  ''          RESET IN/OUTPUT                 02984900
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   02985000
&ZMS                  SETC  '&ZMS , "AUTHCOMP" KEY AND ITS'             02985100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            02985200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02985300
.ZG1137C              ANOP  ,                                           02985400
.*-------------------------------------------------------------------   02985500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                02985600
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG1137R  NOT I/O       02985700
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG1137R          02985800
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              02985900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1137P              02986000
                      AIF   (K'&ZCGPR GT 2).ZG1137Q                     02986100
                      AIF   ('&ZCGPR' EQ '0').ZG1137Q                   02986200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               02986300
                      AIF   (T'&ZCGPR NE 'N').ZG1137Q  INVALID REG NAME 02986400
.ZG1137P              ANOP  ,                                           02986500
                      AIF   (T'&ZCGPR NE 'N').ZG1137R  NON NUMERIC      02986600
                      AIF   ('&ZCGPR' LT '2').ZG1137Q                   02986700
                      AIF   ('&ZCGPR' LE '12').ZG1137R                  02986800
.ZG1137Q              ANOP  ,                                           02986900
&ZMS                  SETC  '"AUTHCOMP='                                02987000
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           02987100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   02987200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            02987300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02987400
.ZG1137R              ANOP  ,                                           02987500
.*----------------------------------------------------------------***   02987600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02987700
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG1139A  CK NUM      02987800
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02987900
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02988000
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       02988100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         02988200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02988300
.ZG1139A              ANOP  ,                                           02988400
.*-------------------------------------------------------------------   02988500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02988600
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            02988700
.ZG1140A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG1141A                02988800
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     02988900
.*-------------------------------------------------------------------   02989000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02989100
.ZG1141A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG1142A          02989200
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             02989300
.*-------------------------------------------------------------------   02989400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02989500
.ZG1142A              AIF   (K'&XAUTHCOMPTYPE GT 0).ZG1142C  KEYWORD    02989600
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG1142B           02989700
&ZMS                  SETC  '"AUTHCOMPTYPE='                            02989800
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       02989900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02990000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02990100
&ZMS                  SETC  '&ZMS "EQUAL"'                              02990200
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    02990300
                      MNOTE 8,' &ZMS '                                  02990400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02990500
.ZG1142B              ANOP  ,                                           02990600
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             02990700
.ZG1142C              ANOP  ,                                           02990800
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   02990900
.*-------------------------------------------------------------------   02991000
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02991100
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG1142D  KEY          02991200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG1142D  PARM     02991300
&ZMS                  SETC  '"AUTHCOMPTYPE'                             02991400
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      02991500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02991600
&ZMS                  SETC  '&ZMS '                                     02991700
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           02991800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02991900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02992000
.ZG1142D              ANOP  ,                                           02992100
.*------------------------------------------------------------------    02992200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02992300
.ZG1144               ANOP  ,                                           02992400
&ZXAUTHCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02992500
                      AIF   (K'&XAUTHCOMPARE GT 0).ZG1144E  VALID ARG   02992600
                      AIF   (T'&AUTHCOMPARE EQ 'O').ZG1144D  OMITTED    02992700
&ZASYSLNDX            SETA  0                                           02992800
.ZG1144A              ANOP  ,           POSITIONAL MACRO KEY            02992900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02993000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1144C          02993100
&ZTLC                 SETC 'AUTHCOMPARE'                                02993200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1144A 02993300
.ZG1144B              ANOP  ,                                           02993400
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02993500
&ZMS                  SETC  'THE "AUTHCOMPARE" KEY'                     02993600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02993700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02993800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02993900
                      AGO   .ZG1144E                                    02994000
.ZG1144C              ANOP  ,                                           02994100
&ZXAUTHCOMPARE        SETC  ''          RESET IN/OUTPUT                 02994200
&ZMS                  SETC  '"AUTHCOMPARE='                             02994300
&ZMS                  SETC  '&ZMS.&AUTHCOMPARE"'                        02994400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02994500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02994600
&ZMS                  SETC  '&ZMS "NO"'                                 02994700
&ZMS                  SETC  '&ZMS OR "YES".'                            02994800
                      MNOTE 8,' &ZMS '                                  02994900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02995000
                      AGO   .ZG1144E                                    02995100
.ZG1144D              ANOP  ,                                           02995200
&XAUTHCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02995300
.ZG1144E              ANOP  ,                                           02995400
.*------------------------------------------------------------------    02995500
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02995600
                      AIF   (K'&LISTNUM(1) GT 0).ZG1144F  KEY           02995700
                      AIF   (K'&AUTHCOMPARE(1) LE 0).ZG1144F  PARM      02995800
&ZMS                  SETC  '"AUTHCOMPARE'                              02995900
&ZMS                  SETC  '&ZMS.=&AUTHCOMPARE"'                       02996000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             02996100
&ZMS                  SETC  '&ZMS '                                     02996200
&ZMS                  SETC  '&ZMS "LISTNUM"'                            02996300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                02996400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02996500
.ZG1144F              ANOP  ,                                           02996600
.*------------------------------------------------------------------    02996700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02996800
.ZG1146               ANOP  ,                                           02996900
&ZXLISTCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   02997000
                      AIF   (K'&XLISTCOMPARE GT 0).ZG1146E  VALID ARG   02997100
                      AIF   (T'&LISTCOMPARE EQ 'O').ZG1146D  OMITTED    02997200
&ZASYSLNDX            SETA  0                                           02997300
.ZG1146A              ANOP  ,           POSITIONAL MACRO KEY            02997400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                02997500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1146C          02997600
&ZTLC                 SETC 'LISTCOMPARE'                                02997700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1146A 02997800
.ZG1146B              ANOP  ,                                           02997900
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02998000
&ZMS                  SETC  'THE "LISTCOMPARE" KEY'                     02998100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     02998200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            02998300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02998400
                      AGO   .ZG1146E                                    02998500
.ZG1146C              ANOP  ,                                           02998600
&ZXLISTCOMPARE        SETC  ''          RESET IN/OUTPUT                 02998700
&ZMS                  SETC  '"LISTCOMPARE='                             02998800
&ZMS                  SETC  '&ZMS.&LISTCOMPARE"'                        02998900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   02999000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         02999100
&ZMS                  SETC  '&ZMS "NO"'                                 02999200
&ZMS                  SETC  '&ZMS OR "YES".'                            02999300
                      MNOTE 8,' &ZMS '                                  02999400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     02999500
                      AGO   .ZG1146E                                    02999600
.ZG1146D              ANOP  ,                                           02999700
&XLISTCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             02999800
.ZG1146E              ANOP  ,                                           02999900
.*------------------------------------------------------------------    03000000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03000100
&XVERSCOMPARE         SETC  ''          INITIALIZE XVARIABLE            03000200
.*-------------------------------------------------------------------   03000300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03000400
.ZG1149               ANOP  ,                                           03000500
                      AIF   (K'&VERSCOMPARE(1) LE 0).ZG1149A            03000600
&ZTLC                 SETC 'NO'                                         03000700
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1150       03000800
&XVERSCOMPARE         SETC  'NO'        SET KEYWORD                     03000900
                      AIF   (N'&VERSCOMPARE LE 1).ZG1149A  CK NUM       03001000
&ZMS                  SETC  '"VERSCOMPARE='                             03001100
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        03001200
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        03001300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03001400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03001500
.ZG1149A              ANOP  ,                                           03001600
.*------------------------------------------------------------------    03001700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03001800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03001900
.ZG1149A0             AIF   (K'&VERSCOMP LE 0).ZG1149A1  OK             03002000
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      03002100
.ZG1149A1             AIF   (K'&VERSCOMPTYPE LE 0).ZG1149A2  OK         03002200
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    03002300
.ZG1149A2             AIF   (K'&ZCVAL LE 0).ZG1149A3  OK                03002400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03002500
&ZMS                  SETC  '"VERSCOMPARE'                              03002600
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       03002700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03002800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03002900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03003000
.ZG1149A3             ANOP  ,                                           03003100
.*-------------------------------------------------------------------   03003200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03003300
.ZG1150               ANOP  ,                                           03003400
&ZTLC                 SETC 'BYENTRY'                                    03003500
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1151       03003600
&XVERSCOMPARE         SETC  'BYENTRY'   SET KEYWORD                     03003700
                      AIF   (N'&VERSCOMPARE LE 1).ZG1150A  CK NUM       03003800
&ZMS                  SETC  '"VERSCOMPARE='                             03003900
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        03004000
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        03004100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03004200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03004300
.ZG1150A              ANOP  ,                                           03004400
.*------------------------------------------------------------------    03004500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03004600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03004700
.ZG1150A0             AIF   (K'&VERSCOMP LE 0).ZG1150A1  OK             03004800
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      03004900
.ZG1150A1             AIF   (K'&VERSCOMPTYPE LE 0).ZG1150A2  OK         03005000
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    03005100
.ZG1150A2             AIF   (K'&ZCVAL LE 0).ZG1150A3  OK                03005200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03005300
&ZMS                  SETC  '"VERSCOMPARE'                              03005400
&ZMS                  SETC  '&ZMS.=&VERSCOMPARE"'                       03005500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03005600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03005700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03005800
.ZG1150A3             ANOP  ,                                           03005900
.*-------------------------------------------------------------------   03006000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03006100
.ZG1151               ANOP  ,                                           03006200
&ZTLC                 SETC 'YES'                                        03006300
                      AIF   ('&VERSCOMPARE(1)' NE '&ZTLC').ZG1160       03006400
&XVERSCOMPARE         SETC  'YES'       SET KEYWORD                     03006500
                      AIF   (N'&VERSCOMPARE LE 1).ZG1151A  CK NUM       03006600
&ZMS                  SETC  '"VERSCOMPARE='                             03006700
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        03006800
&ZMS                  SETC  '&ZMS "VERSCOMPARE"'                        03006900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03007000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03007100
.ZG1151A              ANOP  ,                                           03007200
.*----------------------------------------------------------------***   03007300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03007400
                      AIF   (N'&VERSCOMP LE 1).ZG1153A  CK NUM          03007500
&ZMS                  SETC  '"VERSCOMP='                                03007600
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           03007700
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           03007800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03007900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03008000
.ZG1153A              ANOP  ,                                           03008100
.*-------------------------------------------------------------------   03008200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03008300
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   03008400
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           03008500
                      AIF   (N'&VERSCOMP GT 1).ZG1153B  MULTI           03008600
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           03008700
.ZG1153B              AIF   (K'&VERSCOMP(1) GT 0).ZG1153C               03008800
&ZXVERSCOMP           SETC  ''          RESET IN/OUTPUT                 03008900
&ZMS                  SETC  'WHEN "YES" IS SPECIFIED'                   03009000
&ZMS                  SETC  '&ZMS , "VERSCOMP" KEY AND ITS'             03009100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03009200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03009300
.ZG1153C              ANOP  ,                                           03009400
.*-------------------------------------------------------------------   03009500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03009600
                      AIF   (K'&ZXVERSCOMP LE 0).ZG1153R  NOT I/O       03009700
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG1153R          03009800
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              03009900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1153P              03010000
                      AIF   (K'&ZCGPR GT 2).ZG1153Q                     03010100
                      AIF   ('&ZCGPR' EQ '0').ZG1153Q                   03010200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03010300
                      AIF   (T'&ZCGPR NE 'N').ZG1153Q  INVALID REG NAME 03010400
.ZG1153P              ANOP  ,                                           03010500
                      AIF   (T'&ZCGPR NE 'N').ZG1153R  NON NUMERIC      03010600
                      AIF   ('&ZCGPR' LT '2').ZG1153Q                   03010700
                      AIF   ('&ZCGPR' LE '12').ZG1153R                  03010800
.ZG1153Q              ANOP  ,                                           03010900
&ZMS                  SETC  '"VERSCOMP='                                03011000
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           03011100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03011200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03011300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03011400
.ZG1153R              ANOP  ,                                           03011500
.*----------------------------------------------------------------***   03011600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03011700
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG1155A  CK NUM      03011800
&ZMS                  SETC  '"VERSCOMPTYPE='                            03011900
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       03012000
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       03012100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03012200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03012300
.ZG1155A              ANOP  ,                                           03012400
.*-------------------------------------------------------------------   03012500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03012600
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            03012700
.ZG1156A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG1157A                03012800
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     03012900
.*-------------------------------------------------------------------   03013000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03013100
.ZG1157A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG1158A          03013200
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             03013300
.*-------------------------------------------------------------------   03013400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03013500
.ZG1158A              AIF   (K'&XVERSCOMPTYPE GT 0).ZG1158C  KEYWORD    03013600
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG1158B           03013700
&ZMS                  SETC  '"VERSCOMPTYPE='                            03013800
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       03013900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03014000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03014100
&ZMS                  SETC  '&ZMS "EQUAL"'                              03014200
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    03014300
                      MNOTE 8,' &ZMS '                                  03014400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03014500
.ZG1158B              ANOP  ,                                           03014600
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             03014700
.ZG1158C              ANOP  ,                                           03014800
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   03014900
.*-------------------------------------------------------------------   03015000
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03015100
                      AIF   (K'&VERSCOMP(1) GT 0).ZG1158D  KEY          03015200
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG1158D  PARM     03015300
&ZMS                  SETC  '"VERSCOMPTYPE'                             03015400
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      03015500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03015600
&ZMS                  SETC  '&ZMS '                                     03015700
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           03015800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03015900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03016000
.ZG1158D              ANOP  ,                                           03016100
.*------------------------------------------------------------------    03016200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03016300
.ZG1160               ANOP  ,                                           03016400
&ZXVERSCOMPARE        SETC  'INPUT'     SET IN/OUTPUT                   03016500
                      AIF   (K'&XVERSCOMPARE GT 0).ZG1160E  VALID ARG   03016600
                      AIF   (T'&VERSCOMPARE EQ 'O').ZG1160D  OMITTED    03016700
&ZASYSLNDX            SETA  0                                           03016800
.ZG1160A              ANOP  ,           POSITIONAL MACRO KEY            03016900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03017000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1160C          03017100
&ZTLC                 SETC 'VERSCOMPARE'                                03017200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1160A 03017300
.ZG1160B              ANOP  ,                                           03017400
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 03017500
&ZMS                  SETC  'THE "VERSCOMPARE" KEY'                     03017600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03017700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03017800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03017900
                      AGO   .ZG1160E                                    03018000
.ZG1160C              ANOP  ,                                           03018100
&ZXVERSCOMPARE        SETC  ''          RESET IN/OUTPUT                 03018200
&ZMS                  SETC  '"VERSCOMPARE='                             03018300
&ZMS                  SETC  '&ZMS.&VERSCOMPARE"'                        03018400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03018500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03018600
&ZMS                  SETC  '&ZMS "NO",'                                03018700
&ZMS                  SETC  '&ZMS "BYENTRY",'                           03018800
&ZMS                  SETC  '&ZMS OR "YES".'                            03018900
                      MNOTE 8,' &ZMS '                                  03019000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03019100
                      AGO   .ZG1160E                                    03019200
.ZG1160D              ANOP  ,                                           03019300
&XVERSCOMPARE         SETC  'NO'        SET DEFAULT KEYWORD             03019400
.ZG1160E              ANOP  ,                                           03019500
.*----------------------------------------------------------------***   03019600
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      03019700
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            03019800
                      AIF   (K'&BUFLIST LE 0).ZG1162C                   03019900
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   03020000
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   03020100
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   03020200
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      03020300
                      AIF   (N'&BUFLIST GT 1).ZG1162A                   03020400
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              03020500
.ZG1162A              AIF   (N'&BUFLIST LE 1).ZG1162B  CK NUM           03020600
&ZMS                  SETC  '"BUFLIST='                                 03020700
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            03020800
&ZMS                  SETC  '&ZMS "BUFLIST"'                            03020900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03021000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03021100
.ZG1162B              AIF   (K'&XBUFLIST GT 0).ZG1162C  ONE PARM        03021200
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 03021300
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 03021400
&ZMS                  SETC  ' '                                         03021500
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                03021600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03021700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03021800
.ZG1162C              ANOP  ,                                           03021900
.*----------------------------------------------------------------***   03022000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      03022100
                      AIF   (K'&BUFFER LE 0).ZG1195D  NO ME KEY         03022200
                      AIF   (N'&BUFFER LE 1).ZG1195A  CK NUM            03022300
&ZMS                  SETC  '"BUFFER='                                  03022400
&ZMS                  SETC  '&ZMS.&BUFFER"'                             03022500
&ZMS                  SETC  '&ZMS "BUFFER"'                             03022600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03022700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03022800
.ZG1195A              AIF   (K'&XDATAREA LE 0).ZG1195B                  03022900
&ZMS                  SETC  '"BUFFER'                                   03023000
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            03023100
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       03023200
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          03023300
                      MNOTE 8,' &ZMS KEY.'                              03023400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03023500
                      AGO   .ZG1195D                                    03023600
.*                                                                      03023700
.ZG1195B              ANOP  ,                                           03023800
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   03023900
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   03024000
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   03024100
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      03024200
                      AIF   (N'&BUFFER GT 1).ZG1195C                    03024300
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              03024400
.ZG1195C              AIF   (K'&XBUFFER GT 0).ZG1195D  ONE PARM         03024500
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 03024600
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 03024700
&ZMS                  SETC  ' '                                         03024800
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 03024900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03025000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03025100
.ZG1195D              ANOP  ,                                           03025200
.*------------------------------------------------------------------    03025300
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           03025400
                      AIF   (K'&XDATAREA GT 0).ZG1207B                  03025500
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 03025600
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 03025700
&XDATAREA             SETC  ''          ENSURE NULL                     03025800
&XBUFLIST             SETC  ''          ENSURE NULL                     03025900
&ZMS                  SETC  'ONE OF THE FOLLOWING'                      03026000
&ZMS                  SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'         03026100
&ZMS                  SETC  '&ZMS REQUIRED:'                            03026200
&ZMS                  SETC  '&ZMS "BUFLIST"'    VALID ME KEY            03026300
&ZMS                  SETC  '&ZMS OR "BUFFER".'  VALID ME KEY           03026400
                      MNOTE 8,' &ZMS '                                  03026500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03026600
.ZG1207B              ANOP  ,                                           03026700
.*-------------------------------------------------------------------   03026800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           03026900
                      AIF   (T'&BUFLIST  EQ 'O').ZG1195ZY               03027000
.ZG1162ZY  AIF    ('&XDATAREA' NE 'BUFLIST').ZG1195ZY                   03027100
.*-------------------------------------------------------------------   03027200
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                03027300
&ZCVAL                SETC ''           ERROR KEY FIELD                 03027400
.ZG1162I0             AIF   (K'&BUFSIZE LE 0).ZG1162I1                  03027500
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          03027600
.ZG1162I1             AIF   (K'&ZCVAL LE 0).ZG1162J  KEY                03027700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03027800
&ZMS                  SETC  '"BUFLIST'                                  03027900
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           03028000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03028100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03028200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03028300
.ZG1162J              ANOP  ,                                           03028400
.*-------------------------------------------------------------------   03028500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 03028600
                      AIF   (K'&ZXBUFLIST LE 0).ZG1162R  NOT I/O        03028700
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG1162R           03028800
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                03028900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1162P              03029000
                      AIF   (K'&ZCGPR GT 2).ZG1162Q                     03029100
                      AIF   ('&ZCGPR' EQ '0').ZG1162Q                   03029200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03029300
                      AIF   (T'&ZCGPR NE 'N').ZG1162Q  INVALID REG NAME 03029400
.ZG1162P              ANOP  ,                                           03029500
                      AIF   (T'&ZCGPR NE 'N').ZG1162R  NON NUMERIC      03029600
                      AIF   ('&ZCGPR' LT '2').ZG1162Q                   03029700
                      AIF   ('&ZCGPR' LE '12').ZG1162R                  03029800
.ZG1162Q              ANOP  ,                                           03029900
&ZMS                  SETC  '"BUFLIST='                                 03030000
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            03030100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03030200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03030300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03030400
.ZG1162R              ANOP  ,                                           03030500
.*------------------------------------------------------------------    03030600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03030700
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            03030800
.*-------------------------------------------------------------------   03030900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03031000
.ZG1165               ANOP  ,                                           03031100
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG1165A            03031200
&ZTLC                 SETC 'VIRTUAL'                                    03031300
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG1182       03031400
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     03031500
                      AIF   (N'&BUFADDRTYPE LE 1).ZG1165A  CK NUM       03031600
&ZMS                  SETC  '"BUFADDRTYPE='                             03031700
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        03031800
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        03031900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03032000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03032100
.ZG1165A              ANOP  ,                                           03032200
.*------------------------------------------------------------------    03032300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03032400
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            03032500
.*-------------------------------------------------------------------   03032600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03032700
.ZG1168               ANOP  ,                                           03032800
                      AIF   (K'&PAGEABLE(1) LE 0).ZG1168A               03032900
&ZTLC                 SETC 'YES'                                        03033000
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1172          03033100
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     03033200
                      AIF   (N'&PAGEABLE LE 1).ZG1168A  CK NUM          03033300
&ZMS                  SETC  '"PAGEABLE='                                03033400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03033500
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           03033600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03033700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03033800
.ZG1168A              ANOP  ,                                           03033900
.*----------------------------------------------------------------***   03034000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03034100
                      AIF   (N'&BUFSTGKEY LE 1).ZG1170A  CK NUM         03034200
&ZMS                  SETC  '"BUFSTGKEY='                               03034300
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          03034400
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          03034500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03034600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03034700
.ZG1170A              ANOP  ,                                           03034800
.*-------------------------------------------------------------------   03034900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03035000
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   03035100
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               03035200
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG1170B  PARM        03035300
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           03035400
                      AIF   (N'&BUFSTGKEY GT 1).ZG1170B  MULTI          03035500
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           03035600
.ZG1170B              ANOP  ,                                           03035700
.*-------------------------------------------------------------------   03035800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03035900
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG1170R  NOT I/O      03036000
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG1170R                 03036100
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG1170R         03036200
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            03036300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1170P              03036400
                      AIF   (K'&ZCGPR GT 2).ZG1170Q                     03036500
                      AIF   ('&ZCGPR' EQ '0').ZG1170Q                   03036600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03036700
                      AIF   (T'&ZCGPR NE 'N').ZG1170Q  INVALID REG NAME 03036800
.ZG1170P              ANOP  ,                                           03036900
                      AIF   (T'&ZCGPR NE 'N').ZG1170R  NON NUMERIC      03037000
                      AIF   ('&ZCGPR' LT '2').ZG1170Q                   03037100
                      AIF   ('&ZCGPR' LE '12').ZG1170R                  03037200
.ZG1170Q              ANOP  ,                                           03037300
&ZMS                  SETC  '"BUFSTGKEY='                               03037400
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          03037500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03037600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03037700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03037800
.ZG1170R              ANOP  ,                                           03037900
.*-------------------------------------------------------------------   03038000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03038100
.ZG1172               ANOP  ,                                           03038200
&ZTLC                 SETC 'NO'                                         03038300
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1173          03038400
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     03038500
                      AIF   (N'&PAGEABLE LE 1).ZG1172A  CK NUM          03038600
&ZMS                  SETC  '"PAGEABLE='                                03038700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03038800
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           03038900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03039000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03039100
.ZG1172A              ANOP  ,                                           03039200
.*------------------------------------------------------------------    03039300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03039400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03039500
.ZG1172A0             AIF   (K'&BUFSTGKEY LE 0).ZG1172A1  OK            03039600
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      03039700
.ZG1172A1             AIF   (K'&ZCVAL LE 0).ZG1172A2  OK                03039800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03039900
&ZMS                  SETC  '"PAGEABLE'                                 03040000
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          03040100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03040200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03040300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03040400
.ZG1172A2             ANOP  ,                                           03040500
.*------------------------------------------------------------------    03040600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03040700
.ZG1173               ANOP  ,                                           03040800
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   03040900
                      AIF   (K'&XPAGEABLE GT 0).ZG1173E  VALID ARG      03041000
                      AIF   (T'&PAGEABLE EQ 'O').ZG1173D  OMITTED       03041100
&ZASYSLNDX            SETA  0                                           03041200
.ZG1173A              ANOP  ,           POSITIONAL MACRO KEY            03041300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03041400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1173C          03041500
&ZTLC                 SETC 'PAGEABLE'                                   03041600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1173A 03041700
.ZG1173B              ANOP  ,                                           03041800
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 03041900
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        03042000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03042100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03042200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03042300
                      AGO   .ZG1173E                                    03042400
.ZG1173C              ANOP  ,                                           03042500
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 03042600
&ZMS                  SETC  '"PAGEABLE='                                03042700
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03042800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03042900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03043000
&ZMS                  SETC  '&ZMS "YES"'                                03043100
&ZMS                  SETC  '&ZMS OR "NO".'                             03043200
                      MNOTE 8,' &ZMS '                                  03043300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03043400
                      AGO   .ZG1173E                                    03043500
.ZG1173D              ANOP  ,                                           03043600
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             03043700
.ZG1173E              ANOP  ,                                           03043800
.*----------------------------------------------------------------***   03043900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03044000
                      AIF   (N'&BUFALET LE 1).ZG1175A  CK NUM           03044100
&ZMS                  SETC  '"BUFALET='                                 03044200
&ZMS                  SETC  '&ZMS.&BUFALET"'                            03044300
&ZMS                  SETC  '&ZMS "BUFALET"'                            03044400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03044500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03044600
.ZG1175A              ANOP  ,                                           03044700
.*-------------------------------------------------------------------   03044800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03044900
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   03045000
&XBUFALET             SETC  'NO_BUFALET'                                03045100
                      AIF   (K'&BUFALET(1) LE 0).ZG1175B  PARM          03045200
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           03045300
                      AIF   (N'&BUFALET GT 1).ZG1175B  MULTI            03045400
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   03045500
.ZG1175B              ANOP  ,                                           03045600
.*-------------------------------------------------------------------   03045700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03045800
                      AIF   (K'&ZXBUFALET LE 0).ZG1175R  NOT I/O        03045900
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG1175R                    03046000
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG1175R           03046100
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                03046200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1175P              03046300
                      AIF   (K'&ZCGPR GT 2).ZG1175Q                     03046400
                      AIF   ('&ZCGPR' EQ '0').ZG1175Q                   03046500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03046600
                      AIF   (T'&ZCGPR NE 'N').ZG1175Q  INVALID REG NAME 03046700
.ZG1175P              ANOP  ,                                           03046800
                      AIF   (T'&ZCGPR NE 'N').ZG1175R  NON NUMERIC      03046900
                      AIF   ('&ZCGPR' LT '2').ZG1175Q                   03047000
                      AIF   ('&ZCGPR' LE '12').ZG1175R                  03047100
.ZG1175Q              ANOP  ,                                           03047200
&ZMS                  SETC  '"BUFALET='                                 03047300
&ZMS                  SETC  '&ZMS.&BUFALET"'                            03047400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03047500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03047600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03047700
.ZG1175R              ANOP  ,                                           03047800
.*------------------------------------------------------------------    03047900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03048000
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            03048100
.*-------------------------------------------------------------------   03048200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03048300
.ZG1179               ANOP  ,                                           03048400
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG1179A            03048500
&ZTLC                 SETC '31'                                         03048600
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1180       03048700
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     03048800
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1179A  CK NUM       03048900
&ZMS                  SETC  '"BUFADDRSIZE='                             03049000
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03049100
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        03049200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03049300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03049400
.ZG1179A              ANOP  ,                                           03049500
.*-------------------------------------------------------------------   03049600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03049700
.ZG1180               ANOP  ,                                           03049800
&ZTLC                 SETC '64'                                         03049900
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1181       03050000
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     03050100
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1180A  CK NUM       03050200
&ZMS                  SETC  '"BUFADDRSIZE='                             03050300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03050400
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        03050500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03050600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03050700
.ZG1180A              ANOP  ,                                           03050800
.*------------------------------------------------------------------    03050900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03051000
.ZG1181               ANOP  ,                                           03051100
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   03051200
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG1181E  VALID ARG   03051300
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG1181D  OMITTED    03051400
&ZASYSLNDX            SETA  0                                           03051500
.ZG1181A              ANOP  ,           POSITIONAL MACRO KEY            03051600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03051700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1181C          03051800
&ZTLC                 SETC 'BUFADDRSIZE'                                03051900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1181A 03052000
.ZG1181B              ANOP  ,                                           03052100
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 03052200
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     03052300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03052400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03052500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03052600
                      AGO   .ZG1181E                                    03052700
.ZG1181C              ANOP  ,                                           03052800
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 03052900
&ZMS                  SETC  '"BUFADDRSIZE='                             03053000
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03053100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03053200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03053300
&ZMS                  SETC  '&ZMS "31"'                                 03053400
&ZMS                  SETC  '&ZMS OR "64".'                             03053500
                      MNOTE 8,' &ZMS '                                  03053600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03053700
                      AGO   .ZG1181E                                    03053800
.ZG1181D              ANOP  ,                                           03053900
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             03054000
.ZG1181E              ANOP  ,                                           03054100
.*-------------------------------------------------------------------   03054200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03054300
.ZG1182               ANOP  ,                                           03054400
&ZTLC                 SETC 'REAL'                                       03054500
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG1188       03054600
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     03054700
                      AIF   (N'&BUFADDRTYPE LE 1).ZG1182A  CK NUM       03054800
&ZMS                  SETC  '"BUFADDRTYPE='                             03054900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        03055000
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        03055100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03055200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03055300
.ZG1182A              ANOP  ,                                           03055400
.*------------------------------------------------------------------    03055500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03055600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03055700
.ZG1182A0             AIF   (K'&PAGEABLE LE 0).ZG1182A1  OK             03055800
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      03055900
.ZG1182A1             AIF   (K'&BUFSTGKEY LE 0).ZG1182A2  OK            03056000
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      03056100
.ZG1182A2             AIF   (K'&BUFALET LE 0).ZG1182A3  OK              03056200
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      03056300
.ZG1182A3             AIF   (K'&ZCVAL LE 0).ZG1182A4  OK                03056400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03056500
&ZMS                  SETC  '"BUFADDRTYPE'                              03056600
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       03056700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03056800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03056900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03057000
.ZG1182A4             ANOP  ,                                           03057100
.*------------------------------------------------------------------    03057200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03057300
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            03057400
.*-------------------------------------------------------------------   03057500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03057600
.ZG1185               ANOP  ,                                           03057700
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG1185A            03057800
&ZTLC                 SETC '31'                                         03057900
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1186       03058000
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     03058100
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1185A  CK NUM       03058200
&ZMS                  SETC  '"BUFADDRSIZE='                             03058300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03058400
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        03058500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03058600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03058700
.ZG1185A              ANOP  ,                                           03058800
.*-------------------------------------------------------------------   03058900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03059000
.ZG1186               ANOP  ,                                           03059100
&ZTLC                 SETC '64'                                         03059200
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG1187       03059300
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     03059400
                      AIF   (N'&BUFADDRSIZE LE 1).ZG1186A  CK NUM       03059500
&ZMS                  SETC  '"BUFADDRSIZE='                             03059600
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03059700
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        03059800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03059900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03060000
.ZG1186A              ANOP  ,                                           03060100
.*------------------------------------------------------------------    03060200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03060300
.ZG1187               ANOP  ,                                           03060400
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   03060500
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG1187E  VALID ARG   03060600
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG1187D  OMITTED    03060700
&ZASYSLNDX            SETA  0                                           03060800
.ZG1187A              ANOP  ,           POSITIONAL MACRO KEY            03060900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03061000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1187C          03061100
&ZTLC                 SETC 'BUFADDRSIZE'                                03061200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1187A 03061300
.ZG1187B              ANOP  ,                                           03061400
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 03061500
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     03061600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03061700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03061800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03061900
                      AGO   .ZG1187E                                    03062000
.ZG1187C              ANOP  ,                                           03062100
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 03062200
&ZMS                  SETC  '"BUFADDRSIZE='                             03062300
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        03062400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03062500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03062600
&ZMS                  SETC  '&ZMS "31"'                                 03062700
&ZMS                  SETC  '&ZMS OR "64".'                             03062800
                      MNOTE 8,' &ZMS '                                  03062900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03063000
                      AGO   .ZG1187E                                    03063100
.ZG1187D              ANOP  ,                                           03063200
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             03063300
.ZG1187E              ANOP  ,                                           03063400
.*------------------------------------------------------------------    03063500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03063600
.ZG1188               ANOP  ,                                           03063700
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   03063800
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG1188E  VALID ARG   03063900
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG1188D  OMITTED    03064000
&ZASYSLNDX            SETA  0                                           03064100
.ZG1188A              ANOP  ,           POSITIONAL MACRO KEY            03064200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03064300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1188C          03064400
&ZTLC                 SETC 'BUFADDRTYPE'                                03064500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1188A 03064600
.ZG1188B              ANOP  ,                                           03064700
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 03064800
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     03064900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03065000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03065100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03065200
                      AGO   .ZG1188E                                    03065300
.ZG1188C              ANOP  ,                                           03065400
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 03065500
&ZMS                  SETC  '"BUFADDRTYPE='                             03065600
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        03065700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03065800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03065900
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            03066000
&ZMS                  SETC  '&ZMS OR "REAL".'                           03066100
                      MNOTE 8,' &ZMS '                                  03066200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03066300
                      AGO   .ZG1188E                                    03066400
.ZG1188D              ANOP  ,                                           03066500
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             03066600
.ZG1188E              ANOP  ,                                           03066700
.*----------------------------------------------------------------***   03066800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03066900
                      AIF   (N'&BUFNUM LE 1).ZG1190A  CK NUM            03067000
&ZMS                  SETC  '"BUFNUM='                                  03067100
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             03067200
&ZMS                  SETC  '&ZMS "BUFNUM"'                             03067300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03067400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03067500
.ZG1190A              ANOP  ,                                           03067600
.*-------------------------------------------------------------------   03067700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03067800
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   03067900
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           03068000
                      AIF   (N'&BUFNUM GT 1).ZG1190B  MULTI             03068100
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   03068200
.ZG1190B              AIF   (K'&BUFNUM(1) GT 0).ZG1190C                 03068300
&ZXBUFNUM             SETC  ''          RESET IN/OUTPUT                 03068400
&ZMS                  SETC  ' '                                         03068500
&ZMS                  SETC  '&ZMS "BUFNUM" KEY AND ITS'                 03068600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03068700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03068800
.ZG1190C              ANOP  ,                                           03068900
.*-------------------------------------------------------------------   03069000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03069100
                      AIF   (K'&ZXBUFNUM LE 0).ZG1190R  NOT I/O         03069200
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG1190R            03069300
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  03069400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1190P              03069500
                      AIF   (K'&ZCGPR GT 2).ZG1190Q                     03069600
                      AIF   ('&ZCGPR' EQ '0').ZG1190Q                   03069700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03069800
                      AIF   (T'&ZCGPR NE 'N').ZG1190Q  INVALID REG NAME 03069900
.ZG1190P              ANOP  ,                                           03070000
                      AIF   (T'&ZCGPR NE 'N').ZG1190R  NON NUMERIC      03070100
                      AIF   ('&ZCGPR' LT '2').ZG1190Q                   03070200
                      AIF   ('&ZCGPR' LE '12').ZG1190R                  03070300
.ZG1190Q              ANOP  ,                                           03070400
&ZMS                  SETC  '"BUFNUM='                                  03070500
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             03070600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03070700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03070800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03070900
.ZG1190R              ANOP  ,                                           03071000
.*----------------------------------------------------------------***   03071100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03071200
                      AIF   (N'&BUFINCRNUM LE 1).ZG1193A  CK NUM        03071300
&ZMS                  SETC  '"BUFINCRNUM='                              03071400
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         03071500
&ZMS                  SETC  '&ZMS "BUFINCRNUM"'                         03071600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03071700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03071800
.ZG1193A              ANOP  ,                                           03071900
.*-------------------------------------------------------------------   03072000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03072100
&ZXBUFINCRNUM         SETC  'INPUT'     SET IN/OUTPUT                   03072200
&XBUFINCRNUM          SETC  '16'                                        03072300
                      AIF   (K'&BUFINCRNUM(1) LE 0).ZG1193B  PARM       03072400
&XBUFINCRNUM          SETC  '&BUFINCRNUM(1)'    SET XVARIABLE           03072500
                      AIF   (N'&BUFINCRNUM GT 1).ZG1193B  MULTI         03072600
&XBUFINCRNUM          SETC  '&BUFINCRNUM'       SET XVARIABLE           03072700
.ZG1193B              ANOP  ,                                           03072800
.*-------------------------------------------------------------------   03072900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03073000
                      AIF   (K'&ZXBUFINCRNUM LE 0).ZG1193R  NOT I/O     03073100
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG1193R        03073200
&ZCGPR                SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)          03073300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1193P              03073400
                      AIF   (K'&ZCGPR GT 2).ZG1193Q                     03073500
                      AIF   ('&ZCGPR' EQ '0').ZG1193Q                   03073600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03073700
                      AIF   (T'&ZCGPR NE 'N').ZG1193Q  INVALID REG NAME 03073800
.ZG1193P              ANOP  ,                                           03073900
                      AIF   (T'&ZCGPR NE 'N').ZG1193R  NON NUMERIC      03074000
                      AIF   ('&ZCGPR' LT '2').ZG1193Q                   03074100
                      AIF   ('&ZCGPR' LE '12').ZG1193R                  03074200
.ZG1193Q              ANOP  ,                                           03074300
&ZMS                  SETC  '"BUFINCRNUM='                              03074400
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         03074500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03074600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03074700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03074800
.ZG1193R              ANOP  ,                                           03074900
.*-------------------------------------------------------------------   03075000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           03075100
.ZG1195ZY  AIF    ('&XDATAREA' NE 'BUFFER').ZG1207ZY                    03075200
.*-------------------------------------------------------------------   03075300
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                03075400
&ZCVAL                SETC ''           ERROR KEY FIELD                 03075500
.ZG1195I0             AIF   (K'&BUFADDRTYPE LE 0).ZG1195I1              03075600
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         03075700
.ZG1195I1             AIF   (K'&BUFALET LE 0).ZG1195I2                  03075800
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          03075900
.ZG1195I2             AIF   (K'&BUFADDRSIZE LE 0).ZG1195I3              03076000
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         03076100
.ZG1195I3             AIF   (K'&BUFNUM LE 0).ZG1195I4                   03076200
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          03076300
.ZG1195I4             AIF   (K'&BUFINCRNUM LE 0).ZG1195I5               03076400
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  DISALLOWED KEY          03076500
.ZG1195I5             AIF   (K'&ZCVAL LE 0).ZG1195J  KEY                03076600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03076700
&ZMS                  SETC  '"BUFFER'                                   03076800
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            03076900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03077000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03077100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03077200
.ZG1195J              ANOP  ,                                           03077300
.*-------------------------------------------------------------------   03077400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 03077500
                      AIF   (K'&ZXBUFFER LE 0).ZG1195R  NOT I/O         03077600
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG1195R            03077700
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  03077800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1195P              03077900
                      AIF   (K'&ZCGPR GT 2).ZG1195Q                     03078000
                      AIF   ('&ZCGPR' EQ '0').ZG1195Q                   03078100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03078200
                      AIF   (T'&ZCGPR NE 'N').ZG1195Q  INVALID REG NAME 03078300
.ZG1195P              ANOP  ,                                           03078400
                      AIF   (T'&ZCGPR NE 'N').ZG1195R  NON NUMERIC      03078500
                      AIF   ('&ZCGPR' LT '2').ZG1195Q                   03078600
                      AIF   ('&ZCGPR' LE '12').ZG1195R                  03078700
.ZG1195Q              ANOP  ,                                           03078800
&ZMS                  SETC  '"BUFFER='                                  03078900
&ZMS                  SETC  '&ZMS.&BUFFER"'                             03079000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03079100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03079200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03079300
.ZG1195R              ANOP  ,                                           03079400
.*------------------------------------------------------------------    03079500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03079600
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            03079700
.*-------------------------------------------------------------------   03079800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03079900
.ZG1198               ANOP  ,                                           03080000
                      AIF   (K'&PAGEABLE(1) LE 0).ZG1198A               03080100
&ZTLC                 SETC 'YES'                                        03080200
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1202          03080300
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     03080400
                      AIF   (N'&PAGEABLE LE 1).ZG1198A  CK NUM          03080500
&ZMS                  SETC  '"PAGEABLE='                                03080600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03080700
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           03080800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03080900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03081000
.ZG1198A              ANOP  ,                                           03081100
.*----------------------------------------------------------------***   03081200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03081300
                      AIF   (N'&BUFSTGKEY LE 1).ZG1200A  CK NUM         03081400
&ZMS                  SETC  '"BUFSTGKEY='                               03081500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          03081600
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          03081700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03081800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03081900
.ZG1200A              ANOP  ,                                           03082000
.*-------------------------------------------------------------------   03082100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03082200
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   03082300
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               03082400
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG1200B  PARM        03082500
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           03082600
                      AIF   (N'&BUFSTGKEY GT 1).ZG1200B  MULTI          03082700
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           03082800
.ZG1200B              ANOP  ,                                           03082900
.*-------------------------------------------------------------------   03083000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03083100
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG1200R  NOT I/O      03083200
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG1200R                 03083300
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG1200R         03083400
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            03083500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1200P              03083600
                      AIF   (K'&ZCGPR GT 2).ZG1200Q                     03083700
                      AIF   ('&ZCGPR' EQ '0').ZG1200Q                   03083800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03083900
                      AIF   (T'&ZCGPR NE 'N').ZG1200Q  INVALID REG NAME 03084000
.ZG1200P              ANOP  ,                                           03084100
                      AIF   (T'&ZCGPR NE 'N').ZG1200R  NON NUMERIC      03084200
                      AIF   ('&ZCGPR' LT '2').ZG1200Q                   03084300
                      AIF   ('&ZCGPR' LE '12').ZG1200R                  03084400
.ZG1200Q              ANOP  ,                                           03084500
&ZMS                  SETC  '"BUFSTGKEY='                               03084600
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          03084700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03084800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03084900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03085000
.ZG1200R              ANOP  ,                                           03085100
.*-------------------------------------------------------------------   03085200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03085300
.ZG1202               ANOP  ,                                           03085400
&ZTLC                 SETC 'NO'                                         03085500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG1203          03085600
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     03085700
                      AIF   (N'&PAGEABLE LE 1).ZG1202A  CK NUM          03085800
&ZMS                  SETC  '"PAGEABLE='                                03085900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03086000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           03086100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03086200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03086300
.ZG1202A              ANOP  ,                                           03086400
.*------------------------------------------------------------------    03086500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03086600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03086700
.ZG1202A0             AIF   (K'&BUFSTGKEY LE 0).ZG1202A1  OK            03086800
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      03086900
.ZG1202A1             AIF   (K'&ZCVAL LE 0).ZG1202A2  OK                03087000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03087100
&ZMS                  SETC  '"PAGEABLE'                                 03087200
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          03087300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03087400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03087500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03087600
.ZG1202A2             ANOP  ,                                           03087700
.*------------------------------------------------------------------    03087800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03087900
.ZG1203               ANOP  ,                                           03088000
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   03088100
                      AIF   (K'&XPAGEABLE GT 0).ZG1203E  VALID ARG      03088200
                      AIF   (T'&PAGEABLE EQ 'O').ZG1203D  OMITTED       03088300
&ZASYSLNDX            SETA  0                                           03088400
.ZG1203A              ANOP  ,           POSITIONAL MACRO KEY            03088500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03088600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1203C          03088700
&ZTLC                 SETC 'PAGEABLE'                                   03088800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1203A 03088900
.ZG1203B              ANOP  ,                                           03089000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 03089100
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        03089200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03089300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03089400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03089500
                      AGO   .ZG1203E                                    03089600
.ZG1203C              ANOP  ,                                           03089700
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 03089800
&ZMS                  SETC  '"PAGEABLE='                                03089900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           03090000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03090100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03090200
&ZMS                  SETC  '&ZMS "YES"'                                03090300
&ZMS                  SETC  '&ZMS OR "NO".'                             03090400
                      MNOTE 8,' &ZMS '                                  03090500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03090600
                      AGO   .ZG1203E                                    03090700
.ZG1203D              ANOP  ,                                           03090800
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             03090900
.ZG1203E              ANOP  ,                                           03091000
.*----------------------------------------------------------------***   03091100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03091200
                      AIF   (N'&BUFSIZE LE 1).ZG1205A  CK NUM           03091300
&ZMS                  SETC  '"BUFSIZE='                                 03091400
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            03091500
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            03091600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03091700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03091800
.ZG1205A              ANOP  ,                                           03091900
.*-------------------------------------------------------------------   03092000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03092100
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   03092200
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           03092300
                      AIF   (N'&BUFSIZE GT 1).ZG1205B  MULTI            03092400
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   03092500
.ZG1205B              AIF   (K'&BUFSIZE(1) GT 0).ZG1205C                03092600
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 03092700
&ZMS                  SETC  ' '                                         03092800
&ZMS                  SETC  '&ZMS "BUFSIZE" KEY AND ITS'                03092900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03093000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03093100
.ZG1205C              ANOP  ,                                           03093200
.*-------------------------------------------------------------------   03093300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03093400
                      AIF   (K'&ZXBUFSIZE LE 0).ZG1205R  NOT I/O        03093500
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG1205R           03093600
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                03093700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1205P              03093800
                      AIF   (K'&ZCGPR GT 2).ZG1205Q                     03093900
                      AIF   ('&ZCGPR' EQ '0').ZG1205Q                   03094000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03094100
                      AIF   (T'&ZCGPR NE 'N').ZG1205Q  INVALID REG NAME 03094200
.ZG1205P              ANOP  ,                                           03094300
                      AIF   (T'&ZCGPR NE 'N').ZG1205R  NON NUMERIC      03094400
                      AIF   ('&ZCGPR' LT '2').ZG1205Q                   03094500
                      AIF   ('&ZCGPR' LE '12').ZG1205R                  03094600
.ZG1205Q              ANOP  ,                                           03094700
&ZMS                  SETC  '"BUFSIZE='                                 03094800
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            03094900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03095000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03095100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03095200
.ZG1205R              ANOP  ,                                           03095300
.*-------------------------------------------------------------------   03095400
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            03095500
.ZG1207ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS     03095600
.*------------------------------------------------------------------    03095700
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03095800
.ZG1208               ANOP  ,                                           03095900
&ZXREQUEST            SETC  'INPUT'     SET IN/OUTPUT                   03096000
                      AIF   (K'&XREQUEST GT 0).ZG1208E  VALID ARG       03096100
                      AIF   (T'&REQUEST EQ 'O').ZG1208D  OMITTED        03096200
&ZASYSLNDX            SETA  0                                           03096300
.ZG1208A              ANOP  ,           POSITIONAL MACRO KEY            03096400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03096500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1208C          03096600
&ZTLC                 SETC 'REQUEST'                                    03096700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1208A 03096800
.ZG1208B              ANOP  ,                                           03096900
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 03097000
&ZMS                  SETC  'THE "REQUEST" KEY'                         03097100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03097200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03097300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03097400
                      AGO   .ZG1208E                                    03097500
.ZG1208C              ANOP  ,                                           03097600
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 03097700
&ZMS                  SETC  '"REQUEST='                                 03097800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            03097900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03098000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03098100
&ZMS                  SETC  '&ZMS "READ_LIST",'                         03098200
&ZMS                  SETC  '&ZMS "DELETE_LIST",'                       03098300
&ZMS                  SETC  '&ZMS "READ_MULT",'                         03098400
&ZMS                  SETC  '&ZMS "DELETE_MULT",'                       03098500
&ZMS                  SETC  '&ZMS "MOVE_ENTRYLIST",'                    03098600
&ZMS                  SETC  '&ZMS OR "DELETE_ENTRYLIST".'               03098700
                      MNOTE 8,' &ZMS '                                  03098800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03098900
                      AGO   .ZG1208E                                    03099000
.ZG1208D              ANOP  ,                                           03099100
&XREQUEST             SETC  'READ_LIST'         SET DEFAULT KEYWORD     03099200
.ZG1208E              ANOP  ,                                           03099300
.*------------------------------------------------------------------    03099400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03099500
                      AIF   (K'&REQUEST(1) GT 0).ZG1208F  PARM          03099600
&XREQUEST             SETC  ''          ENSURE NULL KEYWORD             03099700
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 03099800
&ZMS                  SETC  'THE'                                       03099900
&ZMS                  SETC  '&ZMS "REQUEST" KEY AND ITS'                03100000
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               03100100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03100200
&ZMS                  SETC  '&ZMS "READ_LIST",'                         03100300
&ZMS                  SETC  '&ZMS "DELETE_LIST",'                       03100400
&ZMS                  SETC  '&ZMS "READ_MULT",'                         03100500
&ZMS                  SETC  '&ZMS "DELETE_MULT",'                       03100600
&ZMS                  SETC  '&ZMS "MOVE_ENTRYLIST",'                    03100700
&ZMS                  SETC  '&ZMS OR "DELETE_ENTRYLIST".'               03100800
                      MNOTE 8,' &ZMS '                                  03100900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03101000
.ZG1208F              ANOP  ,                                           03101100
.*----------------------------------------------------------------***   03101200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03101300
                      AIF   (N'&LOCKINDEX LE 1).ZG1210A  CK NUM         03101400
&ZMS                  SETC  '"LOCKINDEX='                               03101500
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          03101600
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          03101700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03101800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03101900
.ZG1210A              ANOP  ,                                           03102000
.*-------------------------------------------------------------------   03102100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03102200
&ZXLOCKINDEX          SETC  'INPUT'     SET IN/OUTPUT                   03102300
&XLOCKINDEX           SETC  'NO_LOCKINDEX'                              03102400
                      AIF   (K'&LOCKINDEX(1) LE 0).ZG1210B  PARM        03102500
&XLOCKINDEX           SETC  '&LOCKINDEX(1)'     SET XVARIABLE           03102600
                      AIF   (N'&LOCKINDEX GT 1).ZG1210B  MULTI          03102700
&XLOCKINDEX           SETC  '&LOCKINDEX'        SET XVARIABLE           03102800
.ZG1210B              ANOP  ,                                           03102900
.*-------------------------------------------------------------------   03103000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03103100
                      AIF   (K'&ZXLOCKINDEX LE 0).ZG1210R  NOT I/O      03103200
         AIF   ('&XLOCKINDEX' EQ 'NO_LOCKINDEX').ZG1210R                03103300
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZG1210R         03103400
&ZCGPR                SETC  '&XLOCKINDEX'(2,K'&XLOCKINDEX-2)            03103500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1210P              03103600
                      AIF   (K'&ZCGPR GT 2).ZG1210Q                     03103700
                      AIF   ('&ZCGPR' EQ '0').ZG1210Q                   03103800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03103900
                      AIF   (T'&ZCGPR NE 'N').ZG1210Q  INVALID REG NAME 03104000
.ZG1210P              ANOP  ,                                           03104100
                      AIF   (T'&ZCGPR NE 'N').ZG1210R  NON NUMERIC      03104200
                      AIF   ('&ZCGPR' LT '2').ZG1210Q                   03104300
                      AIF   ('&ZCGPR' LE '12').ZG1210R                  03104400
.ZG1210Q              ANOP  ,                                           03104500
&ZMS                  SETC  '"LOCKINDEX='                               03104600
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          03104700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03104800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03104900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03105000
.ZG1210R              ANOP  ,                                           03105100
.*------------------------------------------------------------------    03105200
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03105300
&XLOCKOPER            SETC  ''          INITIALIZE XVARIABLE            03105400
.*-------------------------------------------------------------------   03105500
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03105600
.ZG1213               ANOP  ,                                           03105700
                      AIF   (K'&LOCKOPER(1) LE 0).ZG1213A               03105800
&ZTLC                 SETC 'NOTHELD'                                    03105900
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG1214          03106000
&XLOCKOPER            SETC  'NOTHELD'   SET KEYWORD                     03106100
                      AIF   (N'&LOCKOPER LE 1).ZG1213A  CK NUM          03106200
&ZMS                  SETC  '"LOCKOPER='                                03106300
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           03106400
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           03106500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03106600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03106700
.ZG1213A              ANOP  ,                                           03106800
.*------------------------------------------------------------------    03106900
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03107000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03107100
.ZG1213A0             AIF   (K'&LOCKCOMP LE 0).ZG1213A1  OK             03107200
&ZCVAL                SETC '&ZCVAL LOCKCOMP'    INCORRECT KEY USED      03107300
.ZG1213A1             AIF   (K'&ZCVAL LE 0).ZG1213A2  OK                03107400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03107500
&ZMS                  SETC  '"LOCKOPER'                                 03107600
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          03107700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03107800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03107900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03108000
.ZG1213A2             ANOP  ,                                           03108100
.*-------------------------------------------------------------------   03108200
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03108300
.ZG1214               ANOP  ,                                           03108400
&ZTLC                 SETC 'HELDBY'                                     03108500
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG1218          03108600
&XLOCKOPER            SETC  'HELDBY'    SET KEYWORD                     03108700
                      AIF   (N'&LOCKOPER LE 1).ZG1214A  CK NUM          03108800
&ZMS                  SETC  '"LOCKOPER='                                03108900
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           03109000
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           03109100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03109200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03109300
.ZG1214A              ANOP  ,                                           03109400
.*----------------------------------------------------------------***   03109500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03109600
                      AIF   (N'&LOCKCOMP LE 1).ZG1216A  CK NUM          03109700
&ZMS                  SETC  '"LOCKCOMP='                                03109800
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           03109900
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           03110000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03110100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03110200
.ZG1216A              ANOP  ,                                           03110300
.*-------------------------------------------------------------------   03110400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03110500
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   03110600
&XLOCKCOMP            SETC  'NO_LOCKCOMP'                               03110700
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG1216B  PARM         03110800
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           03110900
                      AIF   (N'&LOCKCOMP GT 1).ZG1216B  MULTI           03111000
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           03111100
.ZG1216B              ANOP  ,                                           03111200
.*-------------------------------------------------------------------   03111300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03111400
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG1216R  NOT I/O       03111500
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG1216R                  03111600
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG1216R          03111700
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              03111800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1216P              03111900
                      AIF   (K'&ZCGPR GT 2).ZG1216Q                     03112000
                      AIF   ('&ZCGPR' EQ '0').ZG1216Q                   03112100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03112200
                      AIF   (T'&ZCGPR NE 'N').ZG1216Q  INVALID REG NAME 03112300
.ZG1216P              ANOP  ,                                           03112400
                      AIF   (T'&ZCGPR NE 'N').ZG1216R  NON NUMERIC      03112500
                      AIF   ('&ZCGPR' LT '2').ZG1216Q                   03112600
                      AIF   ('&ZCGPR' LE '12').ZG1216R                  03112700
.ZG1216Q              ANOP  ,                                           03112800
&ZMS                  SETC  '"LOCKCOMP='                                03112900
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           03113000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03113100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03113200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03113300
.ZG1216R              ANOP  ,                                           03113400
.*------------------------------------------------------------------    03113500
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03113600
.ZG1218               ANOP  ,                                           03113700
&ZXLOCKOPER           SETC  'INPUT'     SET IN/OUTPUT                   03113800
                      AIF   (K'&XLOCKOPER GT 0).ZG1218E  VALID ARG      03113900
                      AIF   (T'&LOCKOPER EQ 'O').ZG1218D  OMITTED       03114000
&ZASYSLNDX            SETA  0                                           03114100
.ZG1218A              ANOP  ,           POSITIONAL MACRO KEY            03114200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03114300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1218C          03114400
&ZTLC                 SETC 'LOCKOPER'                                   03114500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1218A 03114600
.ZG1218B              ANOP  ,                                           03114700
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 03114800
&ZMS                  SETC  'THE "LOCKOPER" KEY'                        03114900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03115000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03115100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03115200
                      AGO   .ZG1218E                                    03115300
.ZG1218C              ANOP  ,                                           03115400
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 03115500
&ZMS                  SETC  '"LOCKOPER='                                03115600
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           03115700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03115800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03115900
&ZMS                  SETC  '&ZMS "NOTHELD"'                            03116000
&ZMS                  SETC  '&ZMS OR "HELDBY".'                         03116100
                      MNOTE 8,' &ZMS '                                  03116200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03116300
                      AGO   .ZG1218E                                    03116400
.ZG1218D              ANOP  ,                                           03116500
&XLOCKOPER            SETC  'NOTHELD'   SET DEFAULT KEYWORD             03116600
.ZG1218E              ANOP  ,                                           03116700
.*------------------------------------------------------------------    03116800
.***AG.KKCTL06 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       03116900
                      AIF   (K'&LOCKINDEX(1) GT 0).ZG1218F  KEY         03117000
                      AIF   (K'&LOCKOPER(1) LE 0).ZG1218G  PARM         03117100
&ZMS                  SETC  '"LOCKOPER'                                 03117200
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          03117300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03117400
&ZMS                  SETC  '&ZMS '                                     03117500
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          03117600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03117700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03117800
                      AGO   .ZG1218G                                    03117900
.*                                                                      03118000
.ZG1218F              ANOP  ,                                           03118100
                      AIF   (K'&LOCKOPER(1) GT 0).ZG1218G  PARM         03118200
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 03118300
&XLOCKOPER            SETC  ''          ENSURE NULL KEYWORD             03118400
&ZMS                  SETC  'WHEN "LOCKINDEX" IS SPECIFIED, THE'        03118500
&ZMS                  SETC  '&ZMS "LOCKOPER" KEY AND ITS'               03118600
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               03118700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03118800
&ZMS                  SETC  '&ZMS "NOTHELD"'                            03118900
&ZMS                  SETC  '&ZMS OR "HELDBY".'                         03119000
                      MNOTE 8,' &ZMS '                                  03119100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03119200
.ZG1218G              ANOP  ,                                           03119300
.*------------------------------------------------------------------    03119400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03119500
&XMODE                SETC  ''          INITIALIZE XVARIABLE            03119600
.*-------------------------------------------------------------------   03119700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03119800
.ZG1222               ANOP  ,                                           03119900
                      AIF   (K'&MODE(1) LE 0).ZG1222A                   03120000
&ZTLC                 SETC 'SYNCSUSPEND'                                03120100
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1229              03120200
&XMODE                SETC  'SYNCSUSPEND'       SET KEYWORD             03120300
                      AIF   (N'&MODE LE 1).ZG1222A  CK NUM              03120400
&ZMS                  SETC  '"MODE='                                    03120500
&ZMS                  SETC  '&ZMS.&MODE"'                               03120600
&ZMS                  SETC  '&ZMS "MODE"'                               03120700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03120800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03120900
.ZG1222A              ANOP  ,                                           03121000
.*------------------------------------------------------------------    03121100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03121200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03121300
.ZG1222A0             AIF   (K'&REQECB LE 0).ZG1222A1  OK               03121400
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03121500
.ZG1222A1             AIF   (K'&REQDATA LE 0).ZG1222A2  OK              03121600
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03121700
.ZG1222A2             AIF   (K'&REQTOKEN LE 0).ZG1222A3  OK             03121800
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03121900
.ZG1222A3             AIF   (K'&ZCVAL LE 0).ZG1222A4  OK                03122000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03122100
&ZMS                  SETC  '"MODE'                                     03122200
&ZMS                  SETC  '&ZMS.=&MODE"'                              03122300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03122400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03122500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03122600
.ZG1222A4             ANOP  ,                                           03122700
.*----------------------------------------------------------------***   03122800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03122900
                      AIF   (N'&ANSAREA LE 1).ZG1224A  CK NUM           03123000
&ZMS                  SETC  '"ANSAREA='                                 03123100
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03123200
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03123300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03123400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03123500
.ZG1224A              ANOP  ,                                           03123600
.*-------------------------------------------------------------------   03123700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03123800
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03123900
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03124000
                      AIF   (N'&ANSAREA GT 1).ZG1224B  MULTI            03124100
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03124200
.ZG1224B              AIF   (K'&ANSAREA(1) GT 0).ZG1224C                03124300
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03124400
&ZMS                  SETC  'WHEN "SYNCSUSPEND" IS SPECIFIED'           03124500
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03124600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03124700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03124800
.ZG1224C              ANOP  ,                                           03124900
.*-------------------------------------------------------------------   03125000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03125100
                      AIF   (K'&ZXANSAREA LE 0).ZG1224R  NOT I/O        03125200
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1224R           03125300
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03125400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1224P              03125500
                      AIF   (K'&ZCGPR GT 2).ZG1224Q                     03125600
                      AIF   ('&ZCGPR' EQ '0').ZG1224Q                   03125700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03125800
                      AIF   (T'&ZCGPR NE 'N').ZG1224Q  INVALID REG NAME 03125900
.ZG1224P              ANOP  ,                                           03126000
                      AIF   (T'&ZCGPR NE 'N').ZG1224R  NON NUMERIC      03126100
                      AIF   ('&ZCGPR' LT '2').ZG1224Q                   03126200
                      AIF   ('&ZCGPR' LE '12').ZG1224R                  03126300
.ZG1224Q              ANOP  ,                                           03126400
&ZMS                  SETC  '"ANSAREA='                                 03126500
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03126600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03126700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03126800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03126900
.ZG1224R              ANOP  ,                                           03127000
.*----------------------------------------------------------------***   03127100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03127200
                      AIF   (N'&ANSLEN LE 1).ZG1226A  CK NUM            03127300
&ZMS                  SETC  '"ANSLEN='                                  03127400
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03127500
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03127600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03127700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03127800
.ZG1226A              ANOP  ,                                           03127900
.*-------------------------------------------------------------------   03128000
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03128100
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03128200
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03128300
                      AIF   (N'&ANSLEN GT 1).ZG1226B  MULTI             03128400
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03128500
.ZG1226B              AIF   (K'&ANSAREA(1) GT 0).ZG1226C  KEY           03128600
                      AIF   (K'&ANSLEN(1) LE 0).ZG1226D  PARM           03128700
&ZMS                  SETC  '"ANSLEN'                                   03128800
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03128900
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03129000
&ZMS                  SETC  '&ZMS '                                     03129100
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03129200
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03129300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03129400
                      AGO   .ZG1226E                                    03129500
.*                                                                      03129600
.ZG1226C              AIF   (K'&ANSLEN(1) GT 0).ZG1226E  PARM           03129700
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03129800
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               03129900
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03130000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03130100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03130200
.ZG1226D              ANOP  ,                                           03130300
&XANSLEN              SETC  '0'         SET DEFAULT                     03130400
.ZG1226E              ANOP  ,                                           03130500
.*-------------------------------------------------------------------   03130600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03130700
                      AIF   (K'&ZXANSLEN LE 0).ZG1226R  NOT I/O         03130800
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1226R            03130900
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03131000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1226P              03131100
                      AIF   (K'&ZCGPR GT 2).ZG1226Q                     03131200
                      AIF   ('&ZCGPR' EQ '0').ZG1226Q                   03131300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03131400
                      AIF   (T'&ZCGPR NE 'N').ZG1226Q  INVALID REG NAME 03131500
.ZG1226P              ANOP  ,                                           03131600
                      AIF   (T'&ZCGPR NE 'N').ZG1226R  NON NUMERIC      03131700
                      AIF   ('&ZCGPR' LT '2').ZG1226Q                   03131800
                      AIF   ('&ZCGPR' LE '12').ZG1226R                  03131900
.ZG1226Q              ANOP  ,                                           03132000
&ZMS                  SETC  '"ANSLEN='                                  03132100
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03132200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03132300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03132400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03132500
.ZG1226R              ANOP  ,                                           03132600
.*-------------------------------------------------------------------   03132700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03132800
.ZG1229               ANOP  ,                                           03132900
&ZTLC                 SETC 'SYNCECB'                                    03133000
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1239              03133100
&XMODE                SETC  'SYNCECB'   SET KEYWORD                     03133200
                      AIF   (N'&MODE LE 1).ZG1229A  CK NUM              03133300
&ZMS                  SETC  '"MODE='                                    03133400
&ZMS                  SETC  '&ZMS.&MODE"'                               03133500
&ZMS                  SETC  '&ZMS "MODE"'                               03133600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03133700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03133800
.ZG1229A              ANOP  ,                                           03133900
.*------------------------------------------------------------------    03134000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03134100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03134200
.ZG1229A0             AIF   (K'&REQDATA LE 0).ZG1229A1  OK              03134300
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03134400
.ZG1229A1             AIF   (K'&REQTOKEN LE 0).ZG1229A2  OK             03134500
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03134600
.ZG1229A2             AIF   (K'&ZCVAL LE 0).ZG1229A3  OK                03134700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03134800
&ZMS                  SETC  '"MODE'                                     03134900
&ZMS                  SETC  '&ZMS.=&MODE"'                              03135000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03135100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03135200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03135300
.ZG1229A3             ANOP  ,                                           03135400
.*----------------------------------------------------------------***   03135500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03135600
                      AIF   (N'&ANSAREA LE 1).ZG1231A  CK NUM           03135700
&ZMS                  SETC  '"ANSAREA='                                 03135800
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03135900
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03136000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03136100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03136200
.ZG1231A              ANOP  ,                                           03136300
.*-------------------------------------------------------------------   03136400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03136500
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03136600
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03136700
                      AIF   (N'&ANSAREA GT 1).ZG1231B  MULTI            03136800
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03136900
.ZG1231B              AIF   (K'&ANSAREA(1) GT 0).ZG1231C                03137000
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03137100
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'               03137200
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03137300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03137400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03137500
.ZG1231C              ANOP  ,                                           03137600
.*-------------------------------------------------------------------   03137700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03137800
                      AIF   (K'&ZXANSAREA LE 0).ZG1231R  NOT I/O        03137900
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1231R           03138000
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03138100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1231P              03138200
                      AIF   (K'&ZCGPR GT 2).ZG1231Q                     03138300
                      AIF   ('&ZCGPR' EQ '0').ZG1231Q                   03138400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03138500
                      AIF   (T'&ZCGPR NE 'N').ZG1231Q  INVALID REG NAME 03138600
.ZG1231P              ANOP  ,                                           03138700
                      AIF   (T'&ZCGPR NE 'N').ZG1231R  NON NUMERIC      03138800
                      AIF   ('&ZCGPR' LT '2').ZG1231Q                   03138900
                      AIF   ('&ZCGPR' LE '12').ZG1231R                  03139000
.ZG1231Q              ANOP  ,                                           03139100
&ZMS                  SETC  '"ANSAREA='                                 03139200
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03139300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03139400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03139500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03139600
.ZG1231R              ANOP  ,                                           03139700
.*----------------------------------------------------------------***   03139800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03139900
                      AIF   (N'&ANSLEN LE 1).ZG1233A  CK NUM            03140000
&ZMS                  SETC  '"ANSLEN='                                  03140100
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03140200
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03140300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03140400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03140500
.ZG1233A              ANOP  ,                                           03140600
.*-------------------------------------------------------------------   03140700
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03140800
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03140900
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03141000
                      AIF   (N'&ANSLEN GT 1).ZG1233B  MULTI             03141100
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03141200
.ZG1233B              AIF   (K'&ANSAREA(1) GT 0).ZG1233C  KEY           03141300
                      AIF   (K'&ANSLEN(1) LE 0).ZG1233D  PARM           03141400
&ZMS                  SETC  '"ANSLEN'                                   03141500
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03141600
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03141700
&ZMS                  SETC  '&ZMS '                                     03141800
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03141900
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03142000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03142100
                      AGO   .ZG1233E                                    03142200
.*                                                                      03142300
.ZG1233C              AIF   (K'&ANSLEN(1) GT 0).ZG1233E  PARM           03142400
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03142500
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               03142600
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03142700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03142800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03142900
.ZG1233D              ANOP  ,                                           03143000
&XANSLEN              SETC  '0'         SET DEFAULT                     03143100
.ZG1233E              ANOP  ,                                           03143200
.*-------------------------------------------------------------------   03143300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03143400
                      AIF   (K'&ZXANSLEN LE 0).ZG1233R  NOT I/O         03143500
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1233R            03143600
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03143700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1233P              03143800
                      AIF   (K'&ZCGPR GT 2).ZG1233Q                     03143900
                      AIF   ('&ZCGPR' EQ '0').ZG1233Q                   03144000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03144100
                      AIF   (T'&ZCGPR NE 'N').ZG1233Q  INVALID REG NAME 03144200
.ZG1233P              ANOP  ,                                           03144300
                      AIF   (T'&ZCGPR NE 'N').ZG1233R  NON NUMERIC      03144400
                      AIF   ('&ZCGPR' LT '2').ZG1233Q                   03144500
                      AIF   ('&ZCGPR' LE '12').ZG1233R                  03144600
.ZG1233Q              ANOP  ,                                           03144700
&ZMS                  SETC  '"ANSLEN='                                  03144800
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03144900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03145000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03145100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03145200
.ZG1233R              ANOP  ,                                           03145300
.*----------------------------------------------------------------***   03145400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03145500
                      AIF   (N'&REQECB LE 1).ZG1237A  CK NUM            03145600
&ZMS                  SETC  '"REQECB='                                  03145700
&ZMS                  SETC  '&ZMS.&REQECB"'                             03145800
&ZMS                  SETC  '&ZMS "REQECB"'                             03145900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03146000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03146100
.ZG1237A              ANOP  ,                                           03146200
.*-------------------------------------------------------------------   03146300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03146400
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   03146500
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           03146600
                      AIF   (N'&REQECB GT 1).ZG1237B  MULTI             03146700
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   03146800
.ZG1237B              AIF   (K'&REQECB(1) GT 0).ZG1237C                 03146900
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 03147000
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'               03147100
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               03147200
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03147300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03147400
.ZG1237C              ANOP  ,                                           03147500
.*-------------------------------------------------------------------   03147600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03147700
                      AIF   (K'&ZXREQECB LE 0).ZG1237R  NOT I/O         03147800
                      AIF   ('&XREQECB'(1,1) NE '(').ZG1237R            03147900
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  03148000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1237P              03148100
                      AIF   (K'&ZCGPR GT 2).ZG1237Q                     03148200
                      AIF   ('&ZCGPR' EQ '0').ZG1237Q                   03148300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03148400
                      AIF   (T'&ZCGPR NE 'N').ZG1237Q  INVALID REG NAME 03148500
.ZG1237P              ANOP  ,                                           03148600
                      AIF   (T'&ZCGPR NE 'N').ZG1237R  NON NUMERIC      03148700
                      AIF   ('&ZCGPR' LT '2').ZG1237Q                   03148800
                      AIF   ('&ZCGPR' LE '12').ZG1237R                  03148900
.ZG1237Q              ANOP  ,                                           03149000
&ZMS                  SETC  '"REQECB='                                  03149100
&ZMS                  SETC  '&ZMS.&REQECB"'                             03149200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03149300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03149400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03149500
.ZG1237R              ANOP  ,                                           03149600
.*-------------------------------------------------------------------   03149700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03149800
.ZG1239               ANOP  ,                                           03149900
&ZTLC                 SETC 'SYNCEXIT'                                   03150000
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1249              03150100
&XMODE                SETC  'SYNCEXIT'  SET KEYWORD                     03150200
                      AIF   (N'&MODE LE 1).ZG1239A  CK NUM              03150300
&ZMS                  SETC  '"MODE='                                    03150400
&ZMS                  SETC  '&ZMS.&MODE"'                               03150500
&ZMS                  SETC  '&ZMS "MODE"'                               03150600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03150700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03150800
.ZG1239A              ANOP  ,                                           03150900
.*------------------------------------------------------------------    03151000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03151100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03151200
.ZG1239A0             AIF   (K'&REQECB LE 0).ZG1239A1  OK               03151300
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03151400
.ZG1239A1             AIF   (K'&REQTOKEN LE 0).ZG1239A2  OK             03151500
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03151600
.ZG1239A2             AIF   (K'&ZCVAL LE 0).ZG1239A3  OK                03151700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03151800
&ZMS                  SETC  '"MODE'                                     03151900
&ZMS                  SETC  '&ZMS.=&MODE"'                              03152000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03152100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03152200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03152300
.ZG1239A3             ANOP  ,                                           03152400
.*----------------------------------------------------------------***   03152500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03152600
                      AIF   (N'&ANSAREA LE 1).ZG1241A  CK NUM           03152700
&ZMS                  SETC  '"ANSAREA='                                 03152800
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03152900
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03153000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03153100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03153200
.ZG1241A              ANOP  ,                                           03153300
.*-------------------------------------------------------------------   03153400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03153500
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03153600
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03153700
                      AIF   (N'&ANSAREA GT 1).ZG1241B  MULTI            03153800
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03153900
.ZG1241B              AIF   (K'&ANSAREA(1) GT 0).ZG1241C                03154000
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03154100
&ZMS                  SETC  'WHEN "SYNCEXIT" IS SPECIFIED'              03154200
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03154300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03154400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03154500
.ZG1241C              ANOP  ,                                           03154600
.*-------------------------------------------------------------------   03154700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03154800
                      AIF   (K'&ZXANSAREA LE 0).ZG1241R  NOT I/O        03154900
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1241R           03155000
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03155100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1241P              03155200
                      AIF   (K'&ZCGPR GT 2).ZG1241Q                     03155300
                      AIF   ('&ZCGPR' EQ '0').ZG1241Q                   03155400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03155500
                      AIF   (T'&ZCGPR NE 'N').ZG1241Q  INVALID REG NAME 03155600
.ZG1241P              ANOP  ,                                           03155700
                      AIF   (T'&ZCGPR NE 'N').ZG1241R  NON NUMERIC      03155800
                      AIF   ('&ZCGPR' LT '2').ZG1241Q                   03155900
                      AIF   ('&ZCGPR' LE '12').ZG1241R                  03156000
.ZG1241Q              ANOP  ,                                           03156100
&ZMS                  SETC  '"ANSAREA='                                 03156200
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03156300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03156400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03156500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03156600
.ZG1241R              ANOP  ,                                           03156700
.*----------------------------------------------------------------***   03156800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03156900
                      AIF   (N'&ANSLEN LE 1).ZG1243A  CK NUM            03157000
&ZMS                  SETC  '"ANSLEN='                                  03157100
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03157200
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03157300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03157400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03157500
.ZG1243A              ANOP  ,                                           03157600
.*-------------------------------------------------------------------   03157700
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03157800
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03157900
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03158000
                      AIF   (N'&ANSLEN GT 1).ZG1243B  MULTI             03158100
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03158200
.ZG1243B              AIF   (K'&ANSAREA(1) GT 0).ZG1243C  KEY           03158300
                      AIF   (K'&ANSLEN(1) LE 0).ZG1243D  PARM           03158400
&ZMS                  SETC  '"ANSLEN'                                   03158500
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03158600
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03158700
&ZMS                  SETC  '&ZMS '                                     03158800
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03158900
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03159000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03159100
                      AGO   .ZG1243E                                    03159200
.*                                                                      03159300
.ZG1243C              AIF   (K'&ANSLEN(1) GT 0).ZG1243E  PARM           03159400
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03159500
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               03159600
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03159700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03159800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03159900
.ZG1243D              ANOP  ,                                           03160000
&XANSLEN              SETC  '0'         SET DEFAULT                     03160100
.ZG1243E              ANOP  ,                                           03160200
.*-------------------------------------------------------------------   03160300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03160400
                      AIF   (K'&ZXANSLEN LE 0).ZG1243R  NOT I/O         03160500
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1243R            03160600
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03160700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1243P              03160800
                      AIF   (K'&ZCGPR GT 2).ZG1243Q                     03160900
                      AIF   ('&ZCGPR' EQ '0').ZG1243Q                   03161000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03161100
                      AIF   (T'&ZCGPR NE 'N').ZG1243Q  INVALID REG NAME 03161200
.ZG1243P              ANOP  ,                                           03161300
                      AIF   (T'&ZCGPR NE 'N').ZG1243R  NON NUMERIC      03161400
                      AIF   ('&ZCGPR' LT '2').ZG1243Q                   03161500
                      AIF   ('&ZCGPR' LE '12').ZG1243R                  03161600
.ZG1243Q              ANOP  ,                                           03161700
&ZMS                  SETC  '"ANSLEN='                                  03161800
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03161900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03162000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03162100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03162200
.ZG1243R              ANOP  ,                                           03162300
.*----------------------------------------------------------------***   03162400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03162500
                      AIF   (N'&REQDATA LE 1).ZG1247A  CK NUM           03162600
&ZMS                  SETC  '"REQDATA='                                 03162700
&ZMS                  SETC  '&ZMS.&REQDATA"'                            03162800
&ZMS                  SETC  '&ZMS "REQDATA"'                            03162900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03163000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03163100
.ZG1247A              ANOP  ,                                           03163200
.*-------------------------------------------------------------------   03163300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03163400
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   03163500
&XREQDATA             SETC  'NO_REQDATA'                                03163600
                      AIF   (K'&REQDATA(1) LE 0).ZG1247B  PARM          03163700
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           03163800
                      AIF   (N'&REQDATA GT 1).ZG1247B  MULTI            03163900
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   03164000
.ZG1247B              ANOP  ,                                           03164100
.*-------------------------------------------------------------------   03164200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03164300
                      AIF   (K'&ZXREQDATA LE 0).ZG1247R  NOT I/O        03164400
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG1247R                    03164500
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG1247R           03164600
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                03164700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1247P              03164800
                      AIF   (K'&ZCGPR GT 2).ZG1247Q                     03164900
                      AIF   ('&ZCGPR' EQ '0').ZG1247Q                   03165000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03165100
                      AIF   (T'&ZCGPR NE 'N').ZG1247Q  INVALID REG NAME 03165200
.ZG1247P              ANOP  ,                                           03165300
                      AIF   (T'&ZCGPR NE 'N').ZG1247R  NON NUMERIC      03165400
                      AIF   ('&ZCGPR' LT '2').ZG1247Q                   03165500
                      AIF   ('&ZCGPR' LE '12').ZG1247R                  03165600
.ZG1247Q              ANOP  ,                                           03165700
&ZMS                  SETC  '"REQDATA='                                 03165800
&ZMS                  SETC  '&ZMS.&REQDATA"'                            03165900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03166000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03166100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03166200
.ZG1247R              ANOP  ,                                           03166300
.*-------------------------------------------------------------------   03166400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03166500
.ZG1249               ANOP  ,                                           03166600
&ZTLC                 SETC 'SYNCTOKEN'                                  03166700
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1259              03166800
&XMODE                SETC  'SYNCTOKEN'         SET KEYWORD             03166900
                      AIF   (N'&MODE LE 1).ZG1249A  CK NUM              03167000
&ZMS                  SETC  '"MODE='                                    03167100
&ZMS                  SETC  '&ZMS.&MODE"'                               03167200
&ZMS                  SETC  '&ZMS "MODE"'                               03167300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03167400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03167500
.ZG1249A              ANOP  ,                                           03167600
.*------------------------------------------------------------------    03167700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03167800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03167900
.ZG1249A0             AIF   (K'&REQECB LE 0).ZG1249A1  OK               03168000
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03168100
.ZG1249A1             AIF   (K'&REQDATA LE 0).ZG1249A2  OK              03168200
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03168300
.ZG1249A2             AIF   (K'&ZCVAL LE 0).ZG1249A3  OK                03168400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03168500
&ZMS                  SETC  '"MODE'                                     03168600
&ZMS                  SETC  '&ZMS.=&MODE"'                              03168700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03168800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03168900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03169000
.ZG1249A3             ANOP  ,                                           03169100
.*----------------------------------------------------------------***   03169200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03169300
                      AIF   (N'&ANSAREA LE 1).ZG1251A  CK NUM           03169400
&ZMS                  SETC  '"ANSAREA='                                 03169500
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03169600
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03169700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03169800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03169900
.ZG1251A              ANOP  ,                                           03170000
.*-------------------------------------------------------------------   03170100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03170200
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03170300
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03170400
                      AIF   (N'&ANSAREA GT 1).ZG1251B  MULTI            03170500
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03170600
.ZG1251B              AIF   (K'&ANSAREA(1) GT 0).ZG1251C                03170700
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03170800
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'             03170900
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03171000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03171100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03171200
.ZG1251C              ANOP  ,                                           03171300
.*-------------------------------------------------------------------   03171400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03171500
                      AIF   (K'&ZXANSAREA LE 0).ZG1251R  NOT I/O        03171600
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1251R           03171700
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03171800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1251P              03171900
                      AIF   (K'&ZCGPR GT 2).ZG1251Q                     03172000
                      AIF   ('&ZCGPR' EQ '0').ZG1251Q                   03172100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03172200
                      AIF   (T'&ZCGPR NE 'N').ZG1251Q  INVALID REG NAME 03172300
.ZG1251P              ANOP  ,                                           03172400
                      AIF   (T'&ZCGPR NE 'N').ZG1251R  NON NUMERIC      03172500
                      AIF   ('&ZCGPR' LT '2').ZG1251Q                   03172600
                      AIF   ('&ZCGPR' LE '12').ZG1251R                  03172700
.ZG1251Q              ANOP  ,                                           03172800
&ZMS                  SETC  '"ANSAREA='                                 03172900
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03173000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03173100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03173200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03173300
.ZG1251R              ANOP  ,                                           03173400
.*----------------------------------------------------------------***   03173500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03173600
                      AIF   (N'&ANSLEN LE 1).ZG1253A  CK NUM            03173700
&ZMS                  SETC  '"ANSLEN='                                  03173800
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03173900
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03174000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03174100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03174200
.ZG1253A              ANOP  ,                                           03174300
.*-------------------------------------------------------------------   03174400
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03174500
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03174600
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03174700
                      AIF   (N'&ANSLEN GT 1).ZG1253B  MULTI             03174800
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03174900
.ZG1253B              AIF   (K'&ANSAREA(1) GT 0).ZG1253C  KEY           03175000
                      AIF   (K'&ANSLEN(1) LE 0).ZG1253D  PARM           03175100
&ZMS                  SETC  '"ANSLEN'                                   03175200
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03175300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03175400
&ZMS                  SETC  '&ZMS '                                     03175500
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03175600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03175700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03175800
                      AGO   .ZG1253E                                    03175900
.*                                                                      03176000
.ZG1253C              AIF   (K'&ANSLEN(1) GT 0).ZG1253E  PARM           03176100
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03176200
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               03176300
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03176400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03176500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03176600
.ZG1253D              ANOP  ,                                           03176700
&XANSLEN              SETC  '0'         SET DEFAULT                     03176800
.ZG1253E              ANOP  ,                                           03176900
.*-------------------------------------------------------------------   03177000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03177100
                      AIF   (K'&ZXANSLEN LE 0).ZG1253R  NOT I/O         03177200
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1253R            03177300
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03177400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1253P              03177500
                      AIF   (K'&ZCGPR GT 2).ZG1253Q                     03177600
                      AIF   ('&ZCGPR' EQ '0').ZG1253Q                   03177700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03177800
                      AIF   (T'&ZCGPR NE 'N').ZG1253Q  INVALID REG NAME 03177900
.ZG1253P              ANOP  ,                                           03178000
                      AIF   (T'&ZCGPR NE 'N').ZG1253R  NON NUMERIC      03178100
                      AIF   ('&ZCGPR' LT '2').ZG1253Q                   03178200
                      AIF   ('&ZCGPR' LE '12').ZG1253R                  03178300
.ZG1253Q              ANOP  ,                                           03178400
&ZMS                  SETC  '"ANSLEN='                                  03178500
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03178600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03178700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03178800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03178900
.ZG1253R              ANOP  ,                                           03179000
.*----------------------------------------------------------------***   03179100
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                03179200
                      AIF   (N'&REQTOKEN LE 1).ZG1257A  CK NUM          03179300
&ZMS                  SETC  '"REQTOKEN='                                03179400
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           03179500
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           03179600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03179700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03179800
.ZG1257A              ANOP  ,                                           03179900
.*-------------------------------------------------------------------   03180000
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    03180100
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   03180200
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           03180300
                      AIF   (N'&REQTOKEN GT 1).ZG1257B  MULTI           03180400
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           03180500
.ZG1257B              AIF   (K'&REQTOKEN(1) GT 0).ZG1257C               03180600
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 03180700
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'             03180800
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             03180900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03181000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03181100
.ZG1257C              ANOP  ,                                           03181200
.*-------------------------------------------------------------------   03181300
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               03181400
                      AIF   (K'&ZXREQTOKEN LE 0).ZG1257R  NOT I/O       03181500
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG1257R          03181600
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              03181700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1257P              03181800
                      AIF   (K'&ZCGPR GT 2).ZG1257Q                     03181900
                      AIF   ('&ZCGPR' EQ '0').ZG1257Q                   03182000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03182100
                      AIF   (T'&ZCGPR NE 'N').ZG1257Q  INVALID REG NAME 03182200
.ZG1257P              ANOP  ,                                           03182300
                      AIF   (T'&ZCGPR NE 'N').ZG1257R  NON NUMERIC      03182400
                      AIF   ('&ZCGPR' LT '2').ZG1257Q                   03182500
                      AIF   ('&ZCGPR' LE '12').ZG1257R                  03182600
.ZG1257Q              ANOP  ,                                           03182700
&ZMS                  SETC  '"REQTOKEN='                                03182800
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           03182900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03183000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03183100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03183200
.ZG1257R              ANOP  ,                                           03183300
.*-------------------------------------------------------------------   03183400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03183500
.ZG1259               ANOP  ,                                           03183600
&ZTLC                 SETC 'ASYNCECB'                                   03183700
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1269              03183800
&XMODE                SETC  'ASYNCECB'  SET KEYWORD                     03183900
                      AIF   (N'&MODE LE 1).ZG1259A  CK NUM              03184000
&ZMS                  SETC  '"MODE='                                    03184100
&ZMS                  SETC  '&ZMS.&MODE"'                               03184200
&ZMS                  SETC  '&ZMS "MODE"'                               03184300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03184400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03184500
.ZG1259A              ANOP  ,                                           03184600
.*------------------------------------------------------------------    03184700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03184800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03184900
.ZG1259A0             AIF   (K'&REQDATA LE 0).ZG1259A1  OK              03185000
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03185100
.ZG1259A1             AIF   (K'&REQTOKEN LE 0).ZG1259A2  OK             03185200
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03185300
.ZG1259A2             AIF   (K'&ZCVAL LE 0).ZG1259A3  OK                03185400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03185500
&ZMS                  SETC  '"MODE'                                     03185600
&ZMS                  SETC  '&ZMS.=&MODE"'                              03185700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03185800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03185900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03186000
.ZG1259A3             ANOP  ,                                           03186100
.*----------------------------------------------------------------***   03186200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03186300
                      AIF   (N'&ANSAREA LE 1).ZG1261A  CK NUM           03186400
&ZMS                  SETC  '"ANSAREA='                                 03186500
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03186600
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03186700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03186800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03186900
.ZG1261A              ANOP  ,                                           03187000
.*-------------------------------------------------------------------   03187100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03187200
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03187300
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03187400
                      AIF   (N'&ANSAREA GT 1).ZG1261B  MULTI            03187500
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03187600
.ZG1261B              AIF   (K'&ANSAREA(1) GT 0).ZG1261C                03187700
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03187800
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'              03187900
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03188000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03188100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03188200
.ZG1261C              ANOP  ,                                           03188300
.*-------------------------------------------------------------------   03188400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03188500
                      AIF   (K'&ZXANSAREA LE 0).ZG1261R  NOT I/O        03188600
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1261R           03188700
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03188800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1261P              03188900
                      AIF   (K'&ZCGPR GT 2).ZG1261Q                     03189000
                      AIF   ('&ZCGPR' EQ '0').ZG1261Q                   03189100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03189200
                      AIF   (T'&ZCGPR NE 'N').ZG1261Q  INVALID REG NAME 03189300
.ZG1261P              ANOP  ,                                           03189400
                      AIF   (T'&ZCGPR NE 'N').ZG1261R  NON NUMERIC      03189500
                      AIF   ('&ZCGPR' LT '2').ZG1261Q                   03189600
                      AIF   ('&ZCGPR' LE '12').ZG1261R                  03189700
.ZG1261Q              ANOP  ,                                           03189800
&ZMS                  SETC  '"ANSAREA='                                 03189900
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03190000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03190100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03190200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03190300
.ZG1261R              ANOP  ,                                           03190400
.*----------------------------------------------------------------***   03190500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03190600
                      AIF   (N'&ANSLEN LE 1).ZG1263A  CK NUM            03190700
&ZMS                  SETC  '"ANSLEN='                                  03190800
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03190900
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03191000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03191100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03191200
.ZG1263A              ANOP  ,                                           03191300
.*-------------------------------------------------------------------   03191400
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03191500
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03191600
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03191700
                      AIF   (N'&ANSLEN GT 1).ZG1263B  MULTI             03191800
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03191900
.ZG1263B              AIF   (K'&ANSAREA(1) GT 0).ZG1263C  KEY           03192000
                      AIF   (K'&ANSLEN(1) LE 0).ZG1263D  PARM           03192100
&ZMS                  SETC  '"ANSLEN'                                   03192200
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03192300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03192400
&ZMS                  SETC  '&ZMS '                                     03192500
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03192600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03192700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03192800
                      AGO   .ZG1263E                                    03192900
.*                                                                      03193000
.ZG1263C              AIF   (K'&ANSLEN(1) GT 0).ZG1263E  PARM           03193100
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03193200
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               03193300
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03193400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03193500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03193600
.ZG1263D              ANOP  ,                                           03193700
&XANSLEN              SETC  '0'         SET DEFAULT                     03193800
.ZG1263E              ANOP  ,                                           03193900
.*-------------------------------------------------------------------   03194000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03194100
                      AIF   (K'&ZXANSLEN LE 0).ZG1263R  NOT I/O         03194200
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1263R            03194300
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03194400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1263P              03194500
                      AIF   (K'&ZCGPR GT 2).ZG1263Q                     03194600
                      AIF   ('&ZCGPR' EQ '0').ZG1263Q                   03194700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03194800
                      AIF   (T'&ZCGPR NE 'N').ZG1263Q  INVALID REG NAME 03194900
.ZG1263P              ANOP  ,                                           03195000
                      AIF   (T'&ZCGPR NE 'N').ZG1263R  NON NUMERIC      03195100
                      AIF   ('&ZCGPR' LT '2').ZG1263Q                   03195200
                      AIF   ('&ZCGPR' LE '12').ZG1263R                  03195300
.ZG1263Q              ANOP  ,                                           03195400
&ZMS                  SETC  '"ANSLEN='                                  03195500
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03195600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03195700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03195800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03195900
.ZG1263R              ANOP  ,                                           03196000
.*----------------------------------------------------------------***   03196100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03196200
                      AIF   (N'&REQECB LE 1).ZG1267A  CK NUM            03196300
&ZMS                  SETC  '"REQECB='                                  03196400
&ZMS                  SETC  '&ZMS.&REQECB"'                             03196500
&ZMS                  SETC  '&ZMS "REQECB"'                             03196600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03196700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03196800
.ZG1267A              ANOP  ,                                           03196900
.*-------------------------------------------------------------------   03197000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03197100
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   03197200
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           03197300
                      AIF   (N'&REQECB GT 1).ZG1267B  MULTI             03197400
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   03197500
.ZG1267B              AIF   (K'&REQECB(1) GT 0).ZG1267C                 03197600
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 03197700
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'              03197800
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               03197900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03198000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03198100
.ZG1267C              ANOP  ,                                           03198200
.*-------------------------------------------------------------------   03198300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03198400
                      AIF   (K'&ZXREQECB LE 0).ZG1267R  NOT I/O         03198500
                      AIF   ('&XREQECB'(1,1) NE '(').ZG1267R            03198600
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  03198700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1267P              03198800
                      AIF   (K'&ZCGPR GT 2).ZG1267Q                     03198900
                      AIF   ('&ZCGPR' EQ '0').ZG1267Q                   03199000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03199100
                      AIF   (T'&ZCGPR NE 'N').ZG1267Q  INVALID REG NAME 03199200
.ZG1267P              ANOP  ,                                           03199300
                      AIF   (T'&ZCGPR NE 'N').ZG1267R  NON NUMERIC      03199400
                      AIF   ('&ZCGPR' LT '2').ZG1267Q                   03199500
                      AIF   ('&ZCGPR' LE '12').ZG1267R                  03199600
.ZG1267Q              ANOP  ,                                           03199700
&ZMS                  SETC  '"REQECB='                                  03199800
&ZMS                  SETC  '&ZMS.&REQECB"'                             03199900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03200000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03200100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03200200
.ZG1267R              ANOP  ,                                           03200300
.*-------------------------------------------------------------------   03200400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03200500
.ZG1269               ANOP  ,                                           03200600
&ZTLC                 SETC 'ASYNCEXIT'                                  03200700
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1279              03200800
&XMODE                SETC  'ASYNCEXIT'         SET KEYWORD             03200900
                      AIF   (N'&MODE LE 1).ZG1269A  CK NUM              03201000
&ZMS                  SETC  '"MODE='                                    03201100
&ZMS                  SETC  '&ZMS.&MODE"'                               03201200
&ZMS                  SETC  '&ZMS "MODE"'                               03201300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03201400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03201500
.ZG1269A              ANOP  ,                                           03201600
.*------------------------------------------------------------------    03201700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03201800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03201900
.ZG1269A0             AIF   (K'&REQECB LE 0).ZG1269A1  OK               03202000
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03202100
.ZG1269A1             AIF   (K'&REQTOKEN LE 0).ZG1269A2  OK             03202200
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03202300
.ZG1269A2             AIF   (K'&ZCVAL LE 0).ZG1269A3  OK                03202400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03202500
&ZMS                  SETC  '"MODE'                                     03202600
&ZMS                  SETC  '&ZMS.=&MODE"'                              03202700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03202800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03202900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03203000
.ZG1269A3             ANOP  ,                                           03203100
.*----------------------------------------------------------------***   03203200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03203300
                      AIF   (N'&ANSAREA LE 1).ZG1271A  CK NUM           03203400
&ZMS                  SETC  '"ANSAREA='                                 03203500
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03203600
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03203700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03203800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03203900
.ZG1271A              ANOP  ,                                           03204000
.*-------------------------------------------------------------------   03204100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03204200
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03204300
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03204400
                      AIF   (N'&ANSAREA GT 1).ZG1271B  MULTI            03204500
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03204600
.ZG1271B              AIF   (K'&ANSAREA(1) GT 0).ZG1271C                03204700
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03204800
&ZMS                  SETC  'WHEN "ASYNCEXIT" IS SPECIFIED'             03204900
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03205000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03205100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03205200
.ZG1271C              ANOP  ,                                           03205300
.*-------------------------------------------------------------------   03205400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03205500
                      AIF   (K'&ZXANSAREA LE 0).ZG1271R  NOT I/O        03205600
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1271R           03205700
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03205800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1271P              03205900
                      AIF   (K'&ZCGPR GT 2).ZG1271Q                     03206000
                      AIF   ('&ZCGPR' EQ '0').ZG1271Q                   03206100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03206200
                      AIF   (T'&ZCGPR NE 'N').ZG1271Q  INVALID REG NAME 03206300
.ZG1271P              ANOP  ,                                           03206400
                      AIF   (T'&ZCGPR NE 'N').ZG1271R  NON NUMERIC      03206500
                      AIF   ('&ZCGPR' LT '2').ZG1271Q                   03206600
                      AIF   ('&ZCGPR' LE '12').ZG1271R                  03206700
.ZG1271Q              ANOP  ,                                           03206800
&ZMS                  SETC  '"ANSAREA='                                 03206900
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03207000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03207100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03207200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03207300
.ZG1271R              ANOP  ,                                           03207400
.*----------------------------------------------------------------***   03207500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03207600
                      AIF   (N'&ANSLEN LE 1).ZG1273A  CK NUM            03207700
&ZMS                  SETC  '"ANSLEN='                                  03207800
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03207900
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03208000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03208100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03208200
.ZG1273A              ANOP  ,                                           03208300
.*-------------------------------------------------------------------   03208400
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03208500
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03208600
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03208700
                      AIF   (N'&ANSLEN GT 1).ZG1273B  MULTI             03208800
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03208900
.ZG1273B              AIF   (K'&ANSAREA(1) GT 0).ZG1273C  KEY           03209000
                      AIF   (K'&ANSLEN(1) LE 0).ZG1273D  PARM           03209100
&ZMS                  SETC  '"ANSLEN'                                   03209200
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03209300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03209400
&ZMS                  SETC  '&ZMS '                                     03209500
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03209600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03209700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03209800
                      AGO   .ZG1273E                                    03209900
.*                                                                      03210000
.ZG1273C              AIF   (K'&ANSLEN(1) GT 0).ZG1273E  PARM           03210100
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03210200
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               03210300
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03210400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03210500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03210600
.ZG1273D              ANOP  ,                                           03210700
&XANSLEN              SETC  '0'         SET DEFAULT                     03210800
.ZG1273E              ANOP  ,                                           03210900
.*-------------------------------------------------------------------   03211000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03211100
                      AIF   (K'&ZXANSLEN LE 0).ZG1273R  NOT I/O         03211200
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1273R            03211300
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03211400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1273P              03211500
                      AIF   (K'&ZCGPR GT 2).ZG1273Q                     03211600
                      AIF   ('&ZCGPR' EQ '0').ZG1273Q                   03211700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03211800
                      AIF   (T'&ZCGPR NE 'N').ZG1273Q  INVALID REG NAME 03211900
.ZG1273P              ANOP  ,                                           03212000
                      AIF   (T'&ZCGPR NE 'N').ZG1273R  NON NUMERIC      03212100
                      AIF   ('&ZCGPR' LT '2').ZG1273Q                   03212200
                      AIF   ('&ZCGPR' LE '12').ZG1273R                  03212300
.ZG1273Q              ANOP  ,                                           03212400
&ZMS                  SETC  '"ANSLEN='                                  03212500
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03212600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03212700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03212800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03212900
.ZG1273R              ANOP  ,                                           03213000
.*----------------------------------------------------------------***   03213100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03213200
                      AIF   (N'&REQDATA LE 1).ZG1277A  CK NUM           03213300
&ZMS                  SETC  '"REQDATA='                                 03213400
&ZMS                  SETC  '&ZMS.&REQDATA"'                            03213500
&ZMS                  SETC  '&ZMS "REQDATA"'                            03213600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03213700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03213800
.ZG1277A              ANOP  ,                                           03213900
.*-------------------------------------------------------------------   03214000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03214100
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   03214200
&XREQDATA             SETC  'NO_REQDATA'                                03214300
                      AIF   (K'&REQDATA(1) LE 0).ZG1277B  PARM          03214400
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           03214500
                      AIF   (N'&REQDATA GT 1).ZG1277B  MULTI            03214600
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   03214700
.ZG1277B              ANOP  ,                                           03214800
.*-------------------------------------------------------------------   03214900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03215000
                      AIF   (K'&ZXREQDATA LE 0).ZG1277R  NOT I/O        03215100
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG1277R                    03215200
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG1277R           03215300
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                03215400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1277P              03215500
                      AIF   (K'&ZCGPR GT 2).ZG1277Q                     03215600
                      AIF   ('&ZCGPR' EQ '0').ZG1277Q                   03215700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03215800
                      AIF   (T'&ZCGPR NE 'N').ZG1277Q  INVALID REG NAME 03215900
.ZG1277P              ANOP  ,                                           03216000
                      AIF   (T'&ZCGPR NE 'N').ZG1277R  NON NUMERIC      03216100
                      AIF   ('&ZCGPR' LT '2').ZG1277Q                   03216200
                      AIF   ('&ZCGPR' LE '12').ZG1277R                  03216300
.ZG1277Q              ANOP  ,                                           03216400
&ZMS                  SETC  '"REQDATA='                                 03216500
&ZMS                  SETC  '&ZMS.&REQDATA"'                            03216600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03216700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03216800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03216900
.ZG1277R              ANOP  ,                                           03217000
.*-------------------------------------------------------------------   03217100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03217200
.ZG1279               ANOP  ,                                           03217300
&ZTLC                 SETC 'ASYNCTOKEN'                                 03217400
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1289              03217500
&XMODE                SETC  'ASYNCTOKEN'        SET KEYWORD             03217600
                      AIF   (N'&MODE LE 1).ZG1279A  CK NUM              03217700
&ZMS                  SETC  '"MODE='                                    03217800
&ZMS                  SETC  '&ZMS.&MODE"'                               03217900
&ZMS                  SETC  '&ZMS "MODE"'                               03218000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03218100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03218200
.ZG1279A              ANOP  ,                                           03218300
.*------------------------------------------------------------------    03218400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03218500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03218600
.ZG1279A0             AIF   (K'&REQECB LE 0).ZG1279A1  OK               03218700
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03218800
.ZG1279A1             AIF   (K'&REQDATA LE 0).ZG1279A2  OK              03218900
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03219000
.ZG1279A2             AIF   (K'&ZCVAL LE 0).ZG1279A3  OK                03219100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03219200
&ZMS                  SETC  '"MODE'                                     03219300
&ZMS                  SETC  '&ZMS.=&MODE"'                              03219400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03219500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03219600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03219700
.ZG1279A3             ANOP  ,                                           03219800
.*----------------------------------------------------------------***   03219900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03220000
                      AIF   (N'&ANSAREA LE 1).ZG1281A  CK NUM           03220100
&ZMS                  SETC  '"ANSAREA='                                 03220200
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03220300
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03220400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03220500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03220600
.ZG1281A              ANOP  ,                                           03220700
.*-------------------------------------------------------------------   03220800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03220900
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   03221000
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           03221100
                      AIF   (N'&ANSAREA GT 1).ZG1281B  MULTI            03221200
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   03221300
.ZG1281B              AIF   (K'&ANSAREA(1) GT 0).ZG1281C                03221400
&ZXANSAREA            SETC  ''          RESET IN/OUTPUT                 03221500
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'            03221600
&ZMS                  SETC  '&ZMS , "ANSAREA" KEY AND ITS'              03221700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03221800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03221900
.ZG1281C              ANOP  ,                                           03222000
.*-------------------------------------------------------------------   03222100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03222200
                      AIF   (K'&ZXANSAREA LE 0).ZG1281R  NOT I/O        03222300
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG1281R           03222400
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                03222500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1281P              03222600
                      AIF   (K'&ZCGPR GT 2).ZG1281Q                     03222700
                      AIF   ('&ZCGPR' EQ '0').ZG1281Q                   03222800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03222900
                      AIF   (T'&ZCGPR NE 'N').ZG1281Q  INVALID REG NAME 03223000
.ZG1281P              ANOP  ,                                           03223100
                      AIF   (T'&ZCGPR NE 'N').ZG1281R  NON NUMERIC      03223200
                      AIF   ('&ZCGPR' LT '2').ZG1281Q                   03223300
                      AIF   ('&ZCGPR' LE '12').ZG1281R                  03223400
.ZG1281Q              ANOP  ,                                           03223500
&ZMS                  SETC  '"ANSAREA='                                 03223600
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            03223700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03223800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03223900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03224000
.ZG1281R              ANOP  ,                                           03224100
.*----------------------------------------------------------------***   03224200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 03224300
                      AIF   (N'&ANSLEN LE 1).ZG1283A  CK NUM            03224400
&ZMS                  SETC  '"ANSLEN='                                  03224500
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03224600
&ZMS                  SETC  '&ZMS "ANSLEN"'                             03224700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03224800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03224900
.ZG1283A              ANOP  ,                                           03225000
.*-------------------------------------------------------------------   03225100
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     03225200
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   03225300
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           03225400
                      AIF   (N'&ANSLEN GT 1).ZG1283B  MULTI             03225500
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   03225600
.ZG1283B              AIF   (K'&ANSAREA(1) GT 0).ZG1283C  KEY           03225700
                      AIF   (K'&ANSLEN(1) LE 0).ZG1283D  PARM           03225800
&ZMS                  SETC  '"ANSLEN'                                   03225900
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            03226000
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             03226100
&ZMS                  SETC  '&ZMS '                                     03226200
&ZMS                  SETC  '&ZMS "ANSAREA"'                            03226300
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                03226400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03226500
                      AGO   .ZG1283E                                    03226600
.*                                                                      03226700
.ZG1283C              AIF   (K'&ANSLEN(1) GT 0).ZG1283E  PARM           03226800
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 03226900
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               03227000
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               03227100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03227200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03227300
.ZG1283D              ANOP  ,                                           03227400
&XANSLEN              SETC  '0'         SET DEFAULT                     03227500
.ZG1283E              ANOP  ,                                           03227600
.*-------------------------------------------------------------------   03227700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                03227800
                      AIF   (K'&ZXANSLEN LE 0).ZG1283R  NOT I/O         03227900
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG1283R            03228000
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  03228100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1283P              03228200
                      AIF   (K'&ZCGPR GT 2).ZG1283Q                     03228300
                      AIF   ('&ZCGPR' EQ '0').ZG1283Q                   03228400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03228500
                      AIF   (T'&ZCGPR NE 'N').ZG1283Q  INVALID REG NAME 03228600
.ZG1283P              ANOP  ,                                           03228700
                      AIF   (T'&ZCGPR NE 'N').ZG1283R  NON NUMERIC      03228800
                      AIF   ('&ZCGPR' LT '2').ZG1283Q                   03228900
                      AIF   ('&ZCGPR' LE '12').ZG1283R                  03229000
.ZG1283Q              ANOP  ,                                           03229100
&ZMS                  SETC  '"ANSLEN='                                  03229200
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             03229300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03229400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03229500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03229600
.ZG1283R              ANOP  ,                                           03229700
.*----------------------------------------------------------------***   03229800
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                03229900
                      AIF   (N'&REQTOKEN LE 1).ZG1287A  CK NUM          03230000
&ZMS                  SETC  '"REQTOKEN='                                03230100
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           03230200
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           03230300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03230400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03230500
.ZG1287A              ANOP  ,                                           03230600
.*-------------------------------------------------------------------   03230700
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    03230800
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   03230900
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           03231000
                      AIF   (N'&REQTOKEN GT 1).ZG1287B  MULTI           03231100
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           03231200
.ZG1287B              AIF   (K'&REQTOKEN(1) GT 0).ZG1287C               03231300
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 03231400
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'            03231500
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             03231600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            03231700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03231800
.ZG1287C              ANOP  ,                                           03231900
.*-------------------------------------------------------------------   03232000
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               03232100
                      AIF   (K'&ZXREQTOKEN LE 0).ZG1287R  NOT I/O       03232200
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG1287R          03232300
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              03232400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1287P              03232500
                      AIF   (K'&ZCGPR GT 2).ZG1287Q                     03232600
                      AIF   ('&ZCGPR' EQ '0').ZG1287Q                   03232700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03232800
                      AIF   (T'&ZCGPR NE 'N').ZG1287Q  INVALID REG NAME 03232900
.ZG1287P              ANOP  ,                                           03233000
                      AIF   (T'&ZCGPR NE 'N').ZG1287R  NON NUMERIC      03233100
                      AIF   ('&ZCGPR' LT '2').ZG1287Q                   03233200
                      AIF   ('&ZCGPR' LE '12').ZG1287R                  03233300
.ZG1287Q              ANOP  ,                                           03233400
&ZMS                  SETC  '"REQTOKEN='                                03233500
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           03233600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03233700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            03233800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03233900
.ZG1287R              ANOP  ,                                           03234000
.*-------------------------------------------------------------------   03234100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03234200
.ZG1289               ANOP  ,                                           03234300
&ZTLC                 SETC 'ASYNCNORESPONSE'                            03234400
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG1290              03234500
&XMODE                SETC  'ASYNCNORESPONSE'   SET KEYWORD             03234600
                      AIF   (N'&MODE LE 1).ZG1289A  CK NUM              03234700
&ZMS                  SETC  '"MODE='                                    03234800
&ZMS                  SETC  '&ZMS.&MODE"'                               03234900
&ZMS                  SETC  '&ZMS "MODE"'                               03235000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03235100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03235200
.ZG1289A              ANOP  ,                                           03235300
.*------------------------------------------------------------------    03235400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03235500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     03235600
.ZG1289A0             AIF   (K'&ANSAREA LE 0).ZG1289A1  OK              03235700
&ZCVAL                SETC '&ZCVAL ANSAREA'     INCORRECT KEY USED      03235800
.ZG1289A1             AIF   (K'&ANSLEN LE 0).ZG1289A2  OK               03235900
&ZCVAL                SETC '&ZCVAL ANSLEN'      INCORRECT KEY USED      03236000
.ZG1289A2             AIF   (K'&REQECB LE 0).ZG1289A3  OK               03236100
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      03236200
.ZG1289A3             AIF   (K'&REQDATA LE 0).ZG1289A4  OK              03236300
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      03236400
.ZG1289A4             AIF   (K'&REQTOKEN LE 0).ZG1289A5  OK             03236500
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      03236600
.ZG1289A5             AIF   (K'&ZCVAL LE 0).ZG1289A6  OK                03236700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       03236800
&ZMS                  SETC  '"MODE'                                     03236900
&ZMS                  SETC  '&ZMS.=&MODE"'                              03237000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        03237100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        03237200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03237300
.ZG1289A6             ANOP  ,                                           03237400
.*------------------------------------------------------------------    03237500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           03237600
.ZG1290               ANOP  ,                                           03237700
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   03237800
                      AIF   (K'&XMODE GT 0).ZG1290E  VALID ARG          03237900
                      AIF   (T'&MODE EQ 'O').ZG1290D  OMITTED           03238000
&ZASYSLNDX            SETA  0                                           03238100
.ZG1290A              ANOP  ,           POSITIONAL MACRO KEY            03238200
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                03238300
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG1290C          03238400
&ZTLC                 SETC 'MODE'                                       03238500
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG1290A 03238600
.ZG1290B              ANOP  ,                                           03238700
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 03238800
&ZMS                  SETC  'THE "MODE" KEY'                            03238900
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     03239000
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            03239100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03239200
                      AGO   .ZG1290E                                    03239300
.ZG1290C              ANOP  ,                                           03239400
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 03239500
&ZMS                  SETC  '"MODE='                                    03239600
&ZMS                  SETC  '&ZMS.&MODE"'                               03239700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   03239800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         03239900
&ZMS                  SETC  '&ZMS "SYNCSUSPEND",'                       03240000
&ZMS                  SETC  '&ZMS "SYNCECB",'                           03240100
&ZMS                  SETC  '&ZMS "SYNCEXIT",'                          03240200
&ZMS                  SETC  '&ZMS "SYNCTOKEN",'                         03240300
&ZMS                  SETC  '&ZMS "ASYNCECB",'                          03240400
&ZMS                  SETC  '&ZMS "ASYNCEXIT",'                         03240500
&ZMS                  SETC  '&ZMS "ASYNCTOKEN",'                        03240600
&ZMS                  SETC  '&ZMS OR "ASYNCNORESPONSE".'                03240700
                      MNOTE 8,' &ZMS '                                  03240800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03240900
                      AGO   .ZG1290E                                    03241000
.ZG1290D              ANOP  ,                                           03241100
&XMODE                SETC  'SYNCSUSPEND'       SET DEFAULT KEYWORD     03241200
.ZG1290E              ANOP  ,                                           03241300
.*----------------------------------------------------------------***   03241400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    03241500
                      AIF   (N'&RETCODE LE 1).ZG1292A  CK NUM           03241600
&ZMS                  SETC  '"RETCODE='                                 03241700
&ZMS                  SETC  '&ZMS.&RETCODE"'                            03241800
&ZMS                  SETC  '&ZMS "RETCODE"'                            03241900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03242000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03242100
.ZG1292A              ANOP  ,                                           03242200
.*-------------------------------------------------------------------   03242300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        03242400
                      AIF   (K'&RETCODE(1) LE 0).ZG1292C  NO PARM       03242500
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      03242600
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           03242700
                      AIF   (N'&RETCODE GT 1).ZG1292C                   03242800
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   03242900
.ZG1292C              ANOP  ,                                           03243000
.*-------------------------------------------------------------------   03243100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   03243200
                      AIF   (K'&ZXRETCODE LE 0).ZG1292R  NOT I/O        03243300
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG1292R           03243400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                03243500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1292P              03243600
                      AIF   (K'&ZCGPR GT 2).ZG1292Q                     03243700
                      AIF   ('&ZCGPR' EQ '0').ZG1292Q                   03243800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03243900
                      AIF   (T'&ZCGPR NE 'N').ZG1292Q  INVALID REG NAME 03244000
.ZG1292P              ANOP  ,                                           03244100
                      AIF   (T'&ZCGPR NE 'N').ZG1292R  NON NUMERIC      03244200
                      AIF   ('&ZCGPR' EQ '15').ZG1292R                  03244300
                      AIF   ('&ZCGPR' LT '2').ZG1292Q                   03244400
                      AIF   ('&ZCGPR' LE '12').ZG1292R                  03244500
.ZG1292Q              ANOP  ,                                           03244600
&ZMS                  SETC  '"RETCODE='                                 03244700
&ZMS                  SETC  '&ZMS.&RETCODE"'                            03244800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03244900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'    03245000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03245100
.ZG1292R              ANOP  ,                                           03245200
.*----------------------------------------------------------------***   03245300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    03245400
                      AIF   (N'&RSNCODE LE 1).ZG1295A  CK NUM           03245500
&ZMS                  SETC  '"RSNCODE='                                 03245600
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            03245700
&ZMS                  SETC  '&ZMS "RSNCODE"'                            03245800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         03245900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03246000
.ZG1295A              ANOP  ,                                           03246100
.*-------------------------------------------------------------------   03246200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        03246300
                      AIF   (K'&RSNCODE(1) LE 0).ZG1295C  NO PARM       03246400
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      03246500
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           03246600
                      AIF   (N'&RSNCODE GT 1).ZG1295C                   03246700
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   03246800
.ZG1295C              ANOP  ,                                           03246900
.*-------------------------------------------------------------------   03247000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   03247100
                      AIF   (K'&ZXRSNCODE LE 0).ZG1295R  NOT I/O        03247200
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG1295R           03247300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                03247400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG1295P              03247500
                      AIF   (K'&ZCGPR GT 2).ZG1295Q                     03247600
                      AIF   ('&ZCGPR' EQ '0').ZG1295R                   03247700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               03247800
                      AIF   (T'&ZCGPR NE 'N').ZG1295Q  INVALID REG NAME 03247900
.ZG1295P              ANOP  ,                                           03248000
                      AIF   (T'&ZCGPR NE 'N').ZG1295R  NON NUMERIC      03248100
                      AIF   ('&ZCGPR' EQ '0').ZG1295R                   03248200
                      AIF   ('&ZCGPR' LT '2').ZG1295Q                   03248300
                      AIF   ('&ZCGPR' LE '12').ZG1295R                  03248400
.ZG1295Q              ANOP  ,                                           03248500
&ZMS                  SETC  '"RSNCODE='                                 03248600
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            03248700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   03248800
                      MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'     03248900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03249000
.ZG1295R              ANOP  ,                                           03249100
.******************************************************************     03249200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        03249300
.******************************************************************     03249400
                      ACTR  10000                                       03249500
.*----------------------------------------------------------------***   03249600
.***AH.P02 EXTRA POSITIONALS                                            03249700
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        03249800
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        03249900
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    03250000
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     03250100
.ZGLISTX1             ANOP  ,                                           03250200
&ZCVAL                SETC  ''          ERROR FIELD                     03250300
&ZAWRK                SETA  0           POSITIONAL NUMBER               03250400
.ZGLIST2              ANOP  ,                                           03250500
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 03250600
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        03250700
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             03250800
                      AGO   .ZGLIST2                                    03250900
.*                                                                      03251000
.ZGLIST3              ANOP  ,                                           03251100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          03251200
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'                   03251300
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             03251400
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      03251500
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              03251600
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      03251700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     03251800
.ZGLISTX              ANOP  ,                                           03251900
&ZASYSLNDX            SETA  0                                           03252000
.*-------------------------------------------------------------------   03252100
.***AG.MF04 MF=(SLE)                                                    03252200
.ZGMFX                ANOP  ,           END OF FULL SYNTAX CHECK        03252300
.*******************************************************************    03252400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       03252500
.*******************************************************************    03252600
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        03252700
.*******************************************************************    03252800
.***AE.01  START OF IXLLSTM MACRO CODE                                  03252900
.*******************************************************************    03253000
                      LCLC  &M0M0001                 NAME               03253100
&M0M0001              SETC  '&XLABEL'                SET NAME           03253200
                      AIF   (K'&XLABEL NE 0).XLAB2                      03253300
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       03253400
.*                                                                      03253500
.XLAB2                ANOP  ,                                           03253600
                      AIF   ('&XMF' EQ 'L').XLAB3                       03253700
&M0M0001 DS    0H                             IXLLSTM-4                 03253800
.XLAB3                ANOP  ,                                           03253900
.*******************************************************************    03254000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              03254100
.*******************************************************************    03254200
              PUSH  PRINT                                               03254300
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  03254400
                      PRINT OFF         ++ PR01                         03254500
                      AGO   .ZPRNTXX                                    03254600
.ZPRINTX              PRINT ON                                          03254700
.ZPRNTXX              ANOP  ,                                           03254800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  03254900
.**------------------------------------------------------------------** 03255000
.**  Start of user macasm code                                       ** 03255100
.**------------------------------------------------------------------** 03255200
.*                                                                      03255300
.**------------------------------------------------------------------** 03255400
.**  Start of code to remove "*" defaults                        @L1A** 03255500
.**                                                                  ** 03255600
.**  This code removes "NO_keyname" values.  Keywords with these     ** 03255700
.**  default values should be treated as if they were not specified. ** 03255800
.**  Removing the values makes it look as if they were not specified ** 03255900
.**  and avoids failure of mutual exclusivity checks.                ** 03256000
.**                                                                  ** 03256100
.**  Some other default values also need to be removed.  These       ** 03256200
.**  values are removed to make the invocation look consistent       ** 03256300
.**  to the checking code.                                           ** 03256400
.**                                                                  ** 03256500
.**------------------------------------------------------------------** 03256600
.*                                                                      03256700
.**------------------------------------------------------------------** 03256800
.**  Remove defaults for ResToken                                @L1A** 03256900
.**------------------------------------------------------------------** 03257000
         AIF   ('&XRESTOKEN'  NE 'NO_RESTOKEN').DELDEFRESTOKEN     @L1A 03257100
&XRESTOKEN     SETC ''                                             @L1A 03257200
&ZXRESTOKEN    SETC ''                                             @L1A 03257300
.DELDEFRESTOKEN ANOP ,                                             @L1A 03257400
.*                                                                      03257500
.**------------------------------------------------------------------** 03257600
.**  Remove defaults for ExtResToken                             @L1A** 03257700
.**------------------------------------------------------------------** 03257800
         AIF   ('&XEXTRESTOKEN'  NE 'NO_EXTRESTOKEN').DELDEFEXTRESTOKEN 03257900
.*                                                                 @L1A 03258000
&XEXTRESTOKEN     SETC ''                                          @L1A 03258100
&ZXEXTRESTOKEN    SETC ''                                          @L1A 03258200
.DELDEFEXTRESTOKEN ANOP ,                                          @L1A 03258300
.*                                                                      03258400
.**------------------------------------------------------------------** 03258500
.**  Remove defaults for AuthCompType                                ** 03258600
.**------------------------------------------------------------------** 03258700
.*                                                                      03258800
         AIF   ('&AUTHCOMPTYPE(1)' NE '').DEFAUTHCOMPTYPESPEC           03258900
.*                                                                      03259000
         AIF   ('&AUTHCOMP(1)' NE '').DEFACTYPESKIPREMOVE               03259100
&XAUTHCOMPTYPE  SETC ''                                                 03259200
&ZXAUTHCOMPTYPE SETC ''                                                 03259300
.DEFACTYPESKIPREMOVE ANOP ,                                             03259400
.DEFAUTHCOMPTYPESPEC ANOP ,                                             03259500
.*                                                                      03259600
         AIF   ('&LOCKINDEX(1)' NE '' AND                              *03259700
                '&LOCKINDEX(1)' NE 'NO_LOCKINDEX').DELDEFLOCKINDEX      03259800
&XLOCKINDEX    SETC ''                                                  03259900
&ZXLOCKINDEX   SETC ''                                                  03260000
&XLOCKOPER     SETC ''                                                  03260100
&ZXLOCKOPER    SETC ''                                                  03260200
.DELDEFLOCKINDEX ANOP ,                                                 03260300
.*                                                                      03260400
.**------------------------------------------------------------------** 03260500
.**  Start of code to validity check parameters                      ** 03260600
.**                                                                  ** 03260700
.**  This code is needed in addition to the checks which AMG         ** 03260800
.**  produces because we did not repeat keys in all places where     ** 03260900
.**  they could be used.                                             ** 03261000
.**                                                                  ** 03261100
.**  Validity checking for mutually exclusive keys, required keys,   ** 03261200
.**  and dependent keys is performed for the standard and execute    ** 03261300
.**  forms.                                                          ** 03261400
.**                                                                  ** 03261500
.**------------------------------------------------------------------** 03261600
.*                                                                      03261700
.* Skip all validity checking for MF=L                                  03261800
.*                                                                      03261900
         AIF   ('&MF(1)' EQ 'L').ENDPARMVALIDATION                      03262000
.*                                                                      03262100
.**------------------------------------------------------------------** 03262200
.**  Validity checking for AdjArea                                   ** 03262300
.**                                                                  ** 03262400
.**     AdjArea is required if Type(AdjData) is specified            ** 03262500
.**                                                                  ** 03262600
.**   If request is read_list or read_mult                           ** 03262700
.**      If type(adjdata) is specified                               ** 03262800
.**        If adjarea is not specified                               ** 03262900
.**          Issue MNOTE                                             ** 03263000
.**                                                                  ** 03263100
.*                                                                      03263200
         AIF   ('&XREQUEST' NE 'READ_LIST' AND                         *03263300
                '&XREQUEST' NE 'READ_MULT').REQUESTNOTREAD              03263400
&ZCVAL   SETC  'NO'                                                     03263500
&ZI      SETA  0                                                        03263600
.*                                                                      03263700
.ADJFINDREQ ANOP ,                                                      03263800
.*                                                                      03263900
&ZI      SETA  &ZI+1                                                    03264000
.*                                                                      03264100
         AIF   (K'&XTYPE(&ZI) LE 0).ADJFINDREQNOVALUE                   03264200
.*                                                                      03264300
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').ADJFINDREQ                  03264400
.*                                                                      03264500
&ZCVAL   SETC  'YES'                                                    03264600
.*                                                                      03264700
.ADJFINDREQNOVALUE ANOP ,                                               03264800
.*                                                                      03264900
         AIF   ('&ZCVAL' NE 'YES').ADJDATANOTSPEC                       03265000
         AIF   ('&XADJAREA' NE 'NO_ADJAREA' AND                        *03265100
                '&XADJAREA' NE '').ADJAREASPEC                          03265200
         MNOTE 8,'IXLLSTM ---> The ADJAREA key is required for REQUEST=*03265300
               &XREQUEST when TYPE=ADJDATA is specified'                03265400
&ZMACRET SETA  8                                                        03265500
.ADJAREAERROR001 ANOP ,                                                 03265600
.*                                                                      03265700
.*                                                                      03265800
.ADJAREASPEC ANOP ,                                                     03265900
.ADJDATANOTSPEC ANOP ,                                                  03266000
.REQUESTNOTREAD ANOP ,                                                  03266100
.**                                                                  ** 03266200
.**  End of validity checking for AdjArea                            ** 03266300
.**------------------------------------------------------------------** 03266400
.**------------------------------------------------------------------** 03266500
.**  Validity checking for Mode                                      ** 03266600
.**                                                                  ** 03266700
.**    Mode(AsyncNoResponse) is mutually exclusive with Buffer       ** 03266800
.**    and Buflist                                                   ** 03266900
.**                                                                  ** 03267000
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ASYNCNORESPONSENOTSPEC   03267100
.*                                                                      03267200
         AIF   ('&XBUFFER'  EQ ''  AND                                 *03267300
                '&XBUFLIST' EQ '').MODEERROR001                         03267400
         MNOTE 8,'IXLLSTM ---> MODE=&XMODE is mutually exclusive with t*03267500
               he BUFFER and BUFLIST keys'                              03267600
&ZMACRET SETA  8                                                        03267700
.MODEERROR001 ANOP ,                                                    03267800
.*                                                                      03267900
.ASYNCNORESPONSENOTSPEC ANOP ,                                          03268000
.**                                                                  ** 03268100
.**  End of validity checking for Mode                               ** 03268200
.**------------------------------------------------------------------** 03268300
.**------------------------------------------------------------------** 03268400
.**  Validity checking for KeyCompare                                ** 03268500
.**                                                                  ** 03268600
.**    For a REQUEST(Read_List) or REQUEST(Delete_List)              ** 03268700
.**      If LOCATOR(KEYPOS) and KEYREQTYPE(RANGE) Then               ** 03268800
.**        KEYCOMPARE(YES) must be specified                         ** 03268900
.**                                                                  ** 03269000
.**                                                                  ** 03269100
.**                                                                  ** 03269200
         AIF (('&XREQUEST' NE 'READ_LIST' AND                          *03269300
               '&XREQUEST' NE 'DELETE_LIST') OR                        *03269400
               '&XLOCATOR' NE 'KEYPOS' OR                              *03269500
               '&XKEYREQTYPE' NE 'RANGE' OR                            *03269600
               '&XKEYCOMPARE' EQ 'YES').VALIDKEYCOMPARE                 03269700
         MNOTE 8,'IXLLSTM ---> KEYCOMPARE=YES is required when LOCATOR=*03269800
               KEYPOS and KEYREQTYPE=RANGE is specified with REQUEST=&x*03269900
               request'                                                 03270000
&ZMACRET SETA  8                                                        03270100
.VALIDKEYCOMPARE ANOP ,                                                 03270200
.**                                                                     03270300
.**  End of validity checking for KeyCompare                         ** 03270400
.**------------------------------------------------------------------** 03270500
.**------------------------------------------------------------------** 03270600
.**  Validity checking for SKeyCompare                               ** 03270700
.**                                                                  ** 03270800
.**    For a REQUEST(Read_List) or REQUEST(Delete_List)              ** 03270900
.**      If LOCATOR(KEYPOS) and SKEYREQTYPE(RANGE) Then              ** 03271000
.**        SKEYCOMPARE(YES) must be specified                        ** 03271100
.**                                                                  ** 03271200
.**                                                                  ** 03271300
.**                                                                  ** 03271400
         AIF (('&XREQUEST' NE 'READ_LIST' AND                          *03271500
               '&XREQUEST' NE 'DELETE_LIST') OR                        *03271600
               '&XLOCATOR' NE 'KEYPOS' OR                              *03271700
               '&XSKEYREQTYPE' NE 'RANGE' OR                           *03271800
               '&XSKEYCOMPARE' EQ 'YES').VALIDSKEYCOMPARE               03271900
         MNOTE 8,'IXLLSTM ---> SKEYCOMPARE=YES is required when LOCATOR*03272000
               =KEYPOS and SKEYREQTYPE=RANGE is specified with REQUEST=*03272100
               &xrequest'                                               03272200
&ZMACRET SETA  8                                                        03272300
.VALIDSKEYCOMPARE ANOP ,                                                03272400
.**                                                                     03272500
.**  End of validity checking for KeyCompare                         ** 03272600
.**------------------------------------------------------------------** 03272700
.**------------------------------------------------------------------** 03272800
.**  Validity checking for LockIndex                                 ** 03272900
.**                                                                  ** 03273000
.**   LockIndex and Mode(AsyncNoResponse) are mutually exclusive     ** 03273100
.**                                                                  ** 03273200
         AIF   ('&XLOCKINDEX' EQ '').LOCKINDEXNOTSPEC                   03273300
.*                                                                      03273400
.*                                                                      03273500
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').LOCKINDEXERROR001        03273600
         MNOTE 8,'IXLLSTM ---> The LOCKINDEX key is mutually exclusive *03273700
               with MODE=&XMODE'                                        03273800
&ZMACRET SETA  8                                                        03273900
.LOCKINDEXERROR001 ANOP ,                                               03274000
.*                                                                      03274100
.LOCKINDEXNOTSPEC ANOP ,                                                03274200
.*                                                                      03274300
.**                                                                  ** 03274400
.**  End of validity checking for LockIndex                          ** 03274500
.**------------------------------------------------------------------** 03274600
.**------------------------------------------------------------------** 03274700
.**  Start of validity checking for LockIndex=NO_LOCKINDEX           ** 03274800
.**                                                                  ** 03274900
.**  LOCKINDEX=NO_LOCKINDEX with LOCKOPER is invalid                 ** 03275000
.**                                                                  ** 03275100
.** if lockIndex^=NO_LOCKINDEX                                          03275200
.** then                                                                03275300
.**   branch to label LockIndexSpec                                     03275400
.** else (lockIndex=NO_LOCKINDEX)                                       03275500
.**   if LOCKOPER was not specified                                     03275600
.**   then                                                              03275700
.**     branch to label NOLOCKOPERSPEC                                  03275800
.**   else                                                              03275900
.**     issue an MNOTE to inform the user that a value must be          03276000
.**       specified for LockIndex when LOCKOPER is specified            03276100
.**                                                                     03276200
         AIF   ('&LOCKINDEX(1)' NE 'NO_LOCKINDEX').LOCKINDEXSPEC        03276300
         AIF   ('&LOCKOPER(1)' EQ '').NOLOCKOPERSPEC                    03276400
         MNOTE 8,'IXLLSTM ---> A value other than NO_LOCKINDEX must be *03276500
               specified for LOCKINDEX when LOCKOPER is specified'      03276600
&ZMACRET SETA  8                                                        03276700
.LOCKINDEXSPEC      ANOP ,                                              03276800
.NOLOCKOPERSPEC     ANOP ,                                              03276900
.*                                                                      03277000
.**                                                                  ** 03277100
.**  End of validity checking for LockIndex=NO_LOCKINDEX             ** 03277200
.**------------------------------------------------------------------** 03277300
.*                                                                      03277400
.ENDPARMVALIDATION ANOP ,                                               03277500
.*                                                                      03277600
.**------------------------------------------------------------------** 03277700
.**  End of code to validity check parameters                        ** 03277800
.**------------------------------------------------------------------** 03277900
.*                                                                      03278000
.**------------------------------------------------------------------** 03278100
.**  Determine the parameter list version                        @P1A** 03278200
.**                                                                  ** 03278300
.**  Note that AMG has already set &XPLISTVER to the highest value   ** 03278400
.**  of either the user specified value, or the value specified by   ** 03278500
.**  macplver on any keys that were specified. The following code    ** 03278600
.**  will set &XPLISTVER to a higher value if needed depending on    ** 03278700
.**  an analysis of special case keys that AMG does not handle.      ** 03278800
.**                                                                  ** 03278900
.**  Note that each of the new macros, IXLLSTC, IXLLSTE, and IXLLSTM,** 03279000
.**  provide a subset of the function originally provided for in     ** 03279100
.**  IXLLIST. As such, the parmlist version is set to the same       ** 03279200
.**  parmlist version that would have resulted had the request       ** 03279300
.**  been coded with IXLLIST. This is done to ensure that the        ** 03279400
.**  new macros can directly replace any of the IXLLIST invocations  ** 03279500
.**  compatibly. Since each macro provides a subset of IXLLIST       ** 03279600
.**  function, the possible parmlist version numbers in each macro   ** 03279700
.**  are not necessarily contiguous. Furthermore, the new macros     ** 03279800
.**  will have parmlist version numbers higher than those of         ** 03279900
.**  IXLLIST since the new macros add new function. In all cases,    ** 03280000
.**  the purpose of the parmlist version number is to ensure that    ** 03280100
.**  any new function is rejected on a downlevel system that does    ** 03280200
.**  not yet recognize the new function.                             ** 03280300
.**                                                                  ** 03280400
.**------------------------------------------------------------------** 03280500
.*                                                                      03280600
         LCLA  &LISTPLVERS                                         @P1A 03280700
.*                                                                      03280800
.* initialize the plist version to zero                            @P1A 03280900
&LISTPLVERS SETA  0                                                @P1A 03281000
.*                                                                      03281100
.* determine if plist version 1 should be used                     @P1A 03281200
         AIF    ('&XAUTHCOMPARE' EQ 'YES' OR                           *03281300
                 '&XVERSCOMPTYPE' EQ 'LESSOREQUAL').SETPLVERSONE   @P1A 03281400
.*                                                                      03281500
         AGO   .SETPLVERSONEEND                                    @P1A 03281600
.*                                                                      03281700
.SETPLVERSONE ANOP ,                                               @P1A 03281800
&LISTPLVERS SETA  1                                                @P1A 03281900
.*                                                                      03282000
.SETPLVERSONEEND ANOP ,                                            @P1A 03282100
.*                                                                      03282200
.* note that no version 2 or 3 checking is done here               @P1A 03282300
.*                                                                      03282400
.* determine if plist version 4 should be used                     @P1A 03282500
.********************************************************************   03282600
.*  Version 4 unique keywords that AMG will not cover for us:           03282700
.*      * - Request(Delete_List)                                        03282800
.*      * - Request(Move_EntryList)                                     03282900
.*      * - KeyScanType(Secondary)                                      03283000
.*      * - KeyReqType(LessOrEqual) Request(^Read_List)                 03283100
.*      * - KeyReqType(GreaterOrEqual) Request(^Read_List)              03283200
.*      * - KeyReqType(Range)                                           03283300
.*      * - VersCompare(ByEntry)                                        03283400
.* Note - Assembler AIF is coded as a two part negitive test            03283500
.*        (Non-version 4 branches around the setting of version 4)      03283600
.********************************************************************   03283700
         AIF  ('&XREQUEST' NE 'DELETE_LIST' AND                        *03283800
               '&XREQUEST' NE 'MOVE_ENTRYLIST' AND                     *03283900
               '&XKEYSCANTYPE' NE 'SECONDARY' AND                      *03284000
               '&XKEYREQTYPE' NE 'RANGE' AND                           *03284100
               '&XVERSCOMPARE' NE 'BYENTRY').SETPLVERSFOURENDA          03284200
.*                                                                      03284300
&LISTPLVERS SETA  4                                                     03284400
         AGO .SETPLVERSFOURENDB                                         03284500
.*                                                                      03284600
.SETPLVERSFOURENDA ANOP ,                                               03284700
         AIF  (('&XKEYREQTYPE' NE 'LESSOREQUAL' AND                    *03284800
                '&XKEYREQTYPE' NE 'GREATEROREQUAL') OR                 *03284900
               '&XREQUEST' EQ 'READ_LIST').SETPLVERSFOURENDB            03285000
&LISTPLVERS SETA  4                                                     03285100
.SETPLVERSFOURENDB ANOP ,                                               03285200
.*                                                                      03285300
.* if AMG already set a higher plist version when it did its       @P1A 03285400
.* keyword analysis (based on the macplver specification), or      @P1A 03285500
.* if the user specified a higher plist version,                   @P1A 03285600
.* then use the highest version found so far                       @P1A 03285700
         AIF   (&XPLISTVER LE &LISTPLVERS).SETLISTPLVERSEND        @P1A 03285800
.*                                                                      03285900
&LISTPLVERS SETA  &XPLISTVER                                       @P1A 03286000
.*                                                                      03286100
.SETLISTPLVERSEND ANOP ,                                           @P1A 03286200
.*                                                                      03286300
.* if the user specified a plist version less than the version     @P1A 03286400
.* that was determined based on the specified keywords then        @P1A 03286500
.* issue an MNOTE                                                  @P1A 03286600
         AIF   (K'&PLISTVER(1) LE 0                      OR            *03286700
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *03286800
                '&PLISTVER(1)' EQ 'MAX'                  OR            *03286900
                &XPLISTVER     GE &LISTPLVERS).SETPLVERSUPDATE     @P1A 03287000
         MNOTE 8,'IXLLSTM ---> PLISTVER=&PLISTVER(1), BUT PLISTVER OF  *03287100
               &LISTPLVERS IS REQUIRED'                                 03287200
.*                                                                      03287300
&ZMACRET SETA  8                                                   @P1A 03287400
         AGO   .SETPLVERSEND                                       @P1A 03287500
.*                                                                      03287600
.SETPLVERSUPDATE ANOP ,                                            @P1A 03287700
&XPLISTVER  SETA  &LISTPLVERS                                      @P1A 03287800
.SETPLVERSEND ANOP ,                                               @P1A 03287900
.*                                                                      03288000
.**------------------------------------------------------------------** 03288100
.**  End determine the parameter list version                    @P1A** 03288200
.**------------------------------------------------------------------** 03288300
.*                                                                      03288400
.*                                                                      03288500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  03288600
.********************************************************************   03288700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     03288800
.********************************************************************   03288900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       03289000
                      LCLA  &ZOPN1         INVOCATION INDEX             03289100
                      LCLC  &ZOPL(4095)    LABEL                        03289200
                      LCLC  &ZOPO(4095)    OPERATION                    03289300
                      LCLC  &ZOPV(4095)    VALUE                        03289400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  03289500
.*                                                                      03289600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     03289700
.******************************************************************     03289800
.***AL.L10 IXLLSTM FMT=LIST MF=S!L PARAMETERS                           03289900
.******************************************************************     03290000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     03290100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     03290200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          03290300
&XMFATTR              SETC  '0D'                                        03290400
.*                                                                      03290500
&ZOPN                 SETA  &ZOPN+1                                     03290600
&ZOPL(&ZOPN)          SETC  ' '                                         03290700
                      AIF   (&SYSALVL NE 0).ZALVL6A                     03290800
&ZOPO(&ZOPN)          SETC  'B'                                         03290900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                03291000
                      AGO   .ZALVL6B                                    03291100
.ZALVL6A              ANOP                                              03291200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      03291300
&ZOPV(&ZOPN)          SETC  '4,8'                                       03291400
&ZOPN                 SETA  &ZOPN+1                                     03291500
&ZOPL(&ZOPN)          SETC  ' '                                         03291600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      03291700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              03291800
.ZALVL6B              ANOP                                              03291900
&ZOPD(&ZOPN)          SETC  '++ IXLLSTM ARG PARMS'                      03292000
.*                                                                      03292100
&ZOPN                 SETA  &ZOPN+1                                     03292200
&ZOPL(&ZOPN)          SETC  ' '                                         03292300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     03292400
&ZOPV(&ZOPN)          SETC  '1'                                         03292500
&ZOPD(&ZOPN)          SETC  ' '                                         03292600
.*                                                                      03292700
.ZLMFSL2              ANOP  ,                                           03292800
.*-------------------------------------------------------------------   03292900
.***AM.L00  IXLLSTM FMT=LIST name                                       03293000
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    03293100
&ZOPN                 SETA &ZOPN+1                                      03293200
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   03293300
&ZOPO(&ZOPN)          SETC 'EQU'                                        03293400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   03293500
&ZOPD(&ZOPN)          SETC '++ IXLLSTM NAME'                            03293600
.ZLMFSL2M             ANOP  ,                                           03293700
.*-------------------------------------------------------------------   03293800
.***AM.L01  IXLLSTM FMT=LIST PARAMETERS                                 03293900
&ZOPN                 SETA &ZOPN+1                                      03294000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   03294100
&ZOPO(&ZOPN)          SETC 'DS'                                         03294200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   03294300
&ZOPD(&ZOPN)          SETC '++ IXLLSTM PARM LIST'                       03294400
.*-------------------------------------------------------------------   03294500
.***AM.L09  XSHL_DATA CL96                                              03294600
&ZOPN                 SETA &ZOPN+1                                      03294700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHL_DATA'                        03294800
&ZOPO(&ZOPN)          SETC 'DS'                                         03294900
&ZOPV(&ZOPN)          SETC 'CL96'                                       03295000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03295100
.*-------------------------------------------------------------------   03295200
.***AM.L09  XMOB_DATA CL4                                               03295300
&ZOPN                 SETA &ZOPN+1                                      03295400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOB_DATA'                        03295500
&ZOPO(&ZOPN)          SETC 'DS'                                         03295600
&ZOPV(&ZOPN)          SETC 'CL4'                                        03295700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03295800
.*-------------------------------------------------------------------   03295900
.***AM.L09  XMCB_DATA1 CL112                                            03296000
&ZOPN                 SETA &ZOPN+1                                      03296100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA1'                       03296200
&ZOPO(&ZOPN)          SETC 'DS'                                         03296300
&ZOPV(&ZOPN)          SETC 'CL112'                                      03296400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03296500
.*-------------------------------------------------------------------   03296600
.***AM.L09  XMCB_DATA2 CL20                                             03296700
&ZOPN                 SETA &ZOPN+1                                      03296800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA2'                       03296900
&ZOPO(&ZOPN)          SETC 'DS'                                         03297000
&ZOPV(&ZOPN)          SETC 'CL20'                                       03297100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03297200
.*-------------------------------------------------------------------   03297300
.***AM.MLM2 SAVED LOCATION COUNTER                                      03297400
                      AIF  (&XPLISTVER GE 1).ZL5LA                      03297500
                      AIF  ('&ZENDBASEPL' NE '').ZL5LA                  03297600
&ZENDBASEPL           SETC 'YES'                                        03297700
&ZOPN                 SETA &ZOPN+1                                      03297800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           03297900
&ZOPO(&ZOPN)          SETC 'EQU'                                        03298000
&ZOPV(&ZOPN)          SETC '*'                                          03298100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       03298200
.ZL5LA                ANOP  ,                                           03298300
.*-------------------------------------------------------------------   03298400
.***AM.LVER1                                                            03298500
                      AIF  (&XPLISTVER LT 1).ZL5L                       03298600
.*-------------------------------------------------------------------   03298700
.*-------------------------------------------------------------------   03298800
.***AM.L09  XMCB_DATA3 CL44                                             03298900
&ZOPN                 SETA &ZOPN+1                                      03299000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA3'                       03299100
&ZOPO(&ZOPN)          SETC 'DS'                                         03299200
&ZOPV(&ZOPN)          SETC 'CL44'                                       03299300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03299400
.*-------------------------------------------------------------------   03299500
.***AM.LVER2                                                            03299600
.ZL5L                 ANOP  ,                                           03299700
.*-------------------------------------------------------------------   03299800
.*-------------------------------------------------------------------   03299900
.***AM.MLM2 SAVED LOCATION COUNTER                                      03300000
                      AIF  (&XPLISTVER GE 4).ZL6LA                      03300100
                      AIF  ('&ZENDBASEPL' NE '').ZL6LA                  03300200
&ZENDBASEPL           SETC 'YES'                                        03300300
&ZOPN                 SETA &ZOPN+1                                      03300400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           03300500
&ZOPO(&ZOPN)          SETC 'EQU'                                        03300600
&ZOPV(&ZOPN)          SETC '*'                                          03300700
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       03300800
.ZL6LA                ANOP  ,                                           03300900
.*-------------------------------------------------------------------   03301000
.***AM.LVER1                                                            03301100
                      AIF  (&XPLISTVER LT 4).ZL6L                       03301200
.*-------------------------------------------------------------------   03301300
.*-------------------------------------------------------------------   03301400
.***AM.L09  XMCB_DATA4 CL64                                             03301500
&ZOPN                 SETA &ZOPN+1                                      03301600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA4'                       03301700
&ZOPO(&ZOPN)          SETC 'DS'                                         03301800
&ZOPV(&ZOPN)          SETC 'CL64'                                       03301900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03302000
.*-------------------------------------------------------------------   03302100
.***AM.LVER2                                                            03302200
.ZL6L                 ANOP  ,                                           03302300
.*-------------------------------------------------------------------   03302400
.*-------------------------------------------------------------------   03302500
.***AM.LVER1                                                            03302600
                      AIF  (&XPLISTVER LT 1).ZL7L                       03302700
.*-------------------------------------------------------------------   03302800
.*-------------------------------------------------------------------   03302900
.***AM.MLM1 SAVED LOCATION COUNTER                                      03303000
                      AIF  ('&ZENDBASEPL' NE '').ZL7LB                  03303100
&ZENDBASEPL           SETC 'YES'                                        03303200
&ZOPN                 SETA &ZOPN+1                                      03303300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           03303400
&ZOPO(&ZOPN)          SETC 'EQU'                                        03303500
&ZOPV(&ZOPN)          SETC '*'                                          03303600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       03303700
.ZL7LB                ANOP  ,                                           03303800
.*-------------------------------------------------------------------   03303900
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       03304000
&ZOPN                 SETA &ZOPN+1                                      03304100
&ZOPL(&ZOPN)          SETC ' '                                          03304200
&ZOPO(&ZOPN)          SETC 'ORG'                                        03304300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              03304400
&ZOPD(&ZOPN)          SETC ' '                                          03304500
.*-------------------------------------------------------------------   03304600
.***AM.LVER2                                                            03304700
.ZL7L                 ANOP  ,                                           03304800
.*-------------------------------------------------------------------   03304900
.*-------------------------------------------------------------------   03305000
.***AM.LVER1                                                            03305100
                      AIF  (&XPLISTVER LT 1).ZL8L                       03305200
.*-------------------------------------------------------------------   03305300
.*-------------------------------------------------------------------   03305400
.***AM.L09  XMCB_DATA CL176                                             03305500
&ZOPN                 SETA &ZOPN+1                                      03305600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA'                        03305700
&ZOPO(&ZOPN)          SETC 'DS'                                         03305800
&ZOPV(&ZOPN)          SETC 'CL176'                                      03305900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03306000
.*-------------------------------------------------------------------   03306100
.***AM.LVER2                                                            03306200
.ZL8L                 ANOP  ,                                           03306300
.*-------------------------------------------------------------------   03306400
.*-------------------------------------------------------------------   03306500
.***AM.LVER1                                                            03306600
                      AIF  (&XPLISTVER LT 4).ZL9L                       03306700
.*-------------------------------------------------------------------   03306800
.*-------------------------------------------------------------------   03306900
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       03307000
&ZOPN                 SETA &ZOPN+1                                      03307100
&ZOPL(&ZOPN)          SETC ' '                                          03307200
&ZOPO(&ZOPN)          SETC 'ORG'                                        03307300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              03307400
&ZOPD(&ZOPN)          SETC ' '                                          03307500
.*-------------------------------------------------------------------   03307600
.***AM.LVER2                                                            03307700
.ZL9L                 ANOP  ,                                           03307800
.*-------------------------------------------------------------------   03307900
.*-------------------------------------------------------------------   03308000
.***AM.LVER1                                                            03308100
                      AIF  (&XPLISTVER LT 4).ZL10L                      03308200
.*-------------------------------------------------------------------   03308300
.*-------------------------------------------------------------------   03308400
.***AM.L09  XMCB_DATAL CL240                                            03308500
&ZOPN                 SETA &ZOPN+1                                      03308600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATAL'                       03308700
&ZOPO(&ZOPN)          SETC 'DS'                                         03308800
&ZOPV(&ZOPN)          SETC 'CL240'                                      03308900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03309000
.*-------------------------------------------------------------------   03309100
.***AM.LVER2                                                            03309200
.ZL10L                ANOP  ,                                           03309300
.*-------------------------------------------------------------------   03309400
.*-------------------------------------------------------------------   03309500
.***AM.PJR1 DEFINED ON XSHL_DATA                                        03309600
&ZOPN                 SETA &ZOPN+1                                      03309700
&ZOPL(&ZOPN)          SETC ' '                                          03309800
&ZOPO(&ZOPN)          SETC 'ORG'                                        03309900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+0'                                03310000
&ZOPD(&ZOPN)          SETC ' '                                          03310100
.*-------------------------------------------------------------------   03310200
.***AM.L02 XVERSION XL1                                                 03310300
&ZOPN                 SETA &ZOPN+1                                      03310400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         03310500
&ZOPO(&ZOPN)          SETC 'DS'                                         03310600
&ZOPV(&ZOPN)          SETC 'XL1'                                        03310700
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          03310800
.*-------------------------------------------------------------------   03310900
.***AM.L09  XCMDCODE XL1                                                03311000
&ZOPN                 SETA &ZOPN+1                                      03311100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDCODE'                         03311200
&ZOPO(&ZOPN)          SETC 'DS'                                         03311300
&ZOPV(&ZOPN)          SETC 'XL1'                                        03311400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03311500
.*-------------------------------------------------------------------   03311600
.***AM.L09  XSHLFLGS CL4                                                03311700
&ZOPN                 SETA &ZOPN+1                                      03311800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS'                         03311900
&ZOPO(&ZOPN)          SETC 'DS'                                         03312000
&ZOPV(&ZOPN)          SETC 'CL4'                                        03312100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03312200
.*-------------------------------------------------------------------   03312300
.***AM.L09  XRSV0101 CL2                                                03312400
&ZOPN                 SETA &ZOPN+1                                      03312500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0101'                         03312600
&ZOPO(&ZOPN)          SETC 'DS'                                         03312700
&ZOPV(&ZOPN)          SETC 'CL2'                                        03312800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03312900
.*-------------------------------------------------------------------   03313000
.***AM.L09  XCOMPCONID XL1                                              03313100
&ZOPN                 SETA &ZOPN+1                                      03313200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPCONID'                       03313300
&ZOPO(&ZOPN)          SETC 'DS'                                         03313400
&ZOPV(&ZOPN)          SETC 'XL1'                                        03313500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03313600
.*-------------------------------------------------------------------   03313700
.***AM.L09  XBUFSTGKEY BL.8                                             03313800
&ZOPN                 SETA &ZOPN+1                                      03313900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSTGKEY'                       03314000
&ZOPO(&ZOPN)          SETC 'DS'                                         03314100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03314200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSTGKEY '                           03314300
.*-------------------------------------------------------------------   03314400
.***AM.L09  XANSLEN XL2                                                 03314500
&ZOPN                 SETA &ZOPN+1                                      03314600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          03314700
&ZOPO(&ZOPN)          SETC 'DS'                                         03314800
&ZOPV(&ZOPN)          SETC 'XL2'                                        03314900
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              03315000
.*-------------------------------------------------------------------   03315100
.***AM.L09  XCONTOKEN CL16                                              03315200
&ZOPN                 SETA &ZOPN+1                                      03315300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        03315400
&ZOPO(&ZOPN)          SETC 'DS'                                         03315500
&ZOPV(&ZOPN)          SETC 'CL16'                                       03315600
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN '                            03315700
.*-------------------------------------------------------------------   03315800
.***AM.L09  XDATADDR CL12                                               03315900
&ZOPN                 SETA &ZOPN+1                                      03316000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADDR'                         03316100
&ZOPO(&ZOPN)          SETC 'DS'                                         03316200
&ZOPV(&ZOPN)          SETC 'CL12'                                       03316300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03316400
.*-------------------------------------------------------------------   03316500
.***AM.L09  XADJADDR CL8                                                03316600
&ZOPN                 SETA &ZOPN+1                                      03316700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJADDR'                         03316800
&ZOPO(&ZOPN)          SETC 'DS'                                         03316900
&ZOPV(&ZOPN)          SETC 'CL8'                                        03317000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03317100
.*-------------------------------------------------------------------   03317200
.***AM.L09  XANSADDR CL8                                                03317300
&ZOPN                 SETA &ZOPN+1                                      03317400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSADDR'                         03317500
&ZOPO(&ZOPN)          SETC 'DS'                                         03317600
&ZOPV(&ZOPN)          SETC 'CL8'                                        03317700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03317800
.*-------------------------------------------------------------------   03317900
.***AM.L09  XREQDATA CL8                                                03318000
&ZOPN                 SETA &ZOPN+1                                      03318100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQDATA'                         03318200
&ZOPO(&ZOPN)          SETC 'DS'                                         03318300
&ZOPV(&ZOPN)          SETC 'CL8'                                        03318400
&ZOPD(&ZOPN)          SETC '++ &ZXREQDATA '                             03318500
.*-------------------------------------------------------------------   03318600
.***AM.L09  XREQID CL8                                                  03318700
&ZOPN                 SETA &ZOPN+1                                      03318800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQID'                           03318900
&ZOPO(&ZOPN)          SETC 'DS'                                         03319000
&ZOPV(&ZOPN)          SETC 'CL8'                                        03319100
&ZOPD(&ZOPN)          SETC '++ &ZXREQID '                               03319200
.*-------------------------------------------------------------------   03319300
.***AM.L09  XOPTIONALDATA CL16                                          03319400
&ZOPN                 SETA &ZOPN+1                                      03319500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONALDATA'                    03319600
&ZOPO(&ZOPN)          SETC 'DS'                                         03319700
&ZOPV(&ZOPN)          SETC 'CL16'                                       03319800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03319900
.*-------------------------------------------------------------------   03320000
.***AM.L09  XSHLFLGSA CL4                                               03320100
&ZOPN                 SETA &ZOPN+1                                      03320200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA'                        03320300
&ZOPO(&ZOPN)          SETC 'DS'                                         03320400
&ZOPV(&ZOPN)          SETC 'CL4'                                        03320500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03320600
.*-------------------------------------------------------------------   03320700
.***AM.L09  XRSV0102 CL4                                                03320800
&ZOPN                 SETA &ZOPN+1                                      03320900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0102'                         03321000
&ZOPO(&ZOPN)          SETC 'DS'                                         03321100
&ZOPV(&ZOPN)          SETC 'CL4'                                        03321200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03321300
.*-------------------------------------------------------------------   03321400
.***AM.PJR1 DEFINED ON XSHLFLGS                                         03321500
&ZOPN                 SETA &ZOPN+1                                      03321600
&ZOPL(&ZOPN)          SETC ' '                                          03321700
&ZOPO(&ZOPN)          SETC 'ORG'                                        03321800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                03321900
&ZOPD(&ZOPN)          SETC ' '                                          03322000
.*-------------------------------------------------------------------   03322100
.***AM.L03 XSHLFLGS1 BL.8                                               03322200
&ZOPN                 SETA &ZOPN+1                                      03322300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS1'                        03322400
&ZOPO(&ZOPN)          SETC 'DS'                                         03322500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03322600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03322700
.*                                                                      03322800
&ZOPN                 SETA  &ZOPN+1                                     03322900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFFER'                  03323000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03323100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03323200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03323300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER'                       03323400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03323500
.*                                                                      03323600
&ZOPN                 SETA  &ZOPN+1                                     03323700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFLIST'                 03323800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03323900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03324000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03324100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFLIST'                      03324200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03324300
.*                                                                      03324400
&ZOPN                 SETA  &ZOPN+1                                     03324500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ADJAREA'                 03324600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03324700
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03324800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03324900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADJAREA'                      03325000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03325100
.*                                                                      03325200
&ZOPN                 SETA  &ZOPN+1                                     03325300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ANSAREA'                 03325400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03325500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03325600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03325700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANSAREA'                      03325800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03325900
.*                                                                      03326000
&ZOPN                 SETA  &ZOPN+1                                     03326100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAGEABLE_NO'                    03326200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03326300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03326400
&ZOPD(&ZOPN)          SETC  '++ XPAGEABLE.'                             03326500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           03326600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03326700
.*                                                                      03326800
&ZOPN                 SETA  &ZOPN+1                                     03326900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFSTGKEY'               03327000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03327100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03327200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03327300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFSTGKEY'                    03327400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03327500
.*                                                                      03327600
&ZOPN                 SETA  &ZOPN+1                                     03327700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRTYPE_REAL'               03327800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03327900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             03328000
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRTYPE.'                          03328100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REAL'                         03328200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03328300
.*                                                                      03328400
&ZOPN                 SETA  &ZOPN+1                                     03328500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTKEYAREA'             03328600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03328700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             03328800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03328900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTKEYAREA'                  03329000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03329100
.*-------------------------------------------------------------------   03329200
.***AM.L03 XSHLFLGS2 BL.8                                               03329300
&ZOPN                 SETA &ZOPN+1                                      03329400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS2'                        03329500
&ZOPO(&ZOPN)          SETC 'DS'                                         03329600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03329700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03329800
.*                                                                      03329900
&ZOPN                 SETA  &ZOPN+1                                     03330000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCECB'                   03330100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03330200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03330300
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03330400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCECB'                      03330500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03330600
.*                                                                      03330700
&ZOPN                 SETA  &ZOPN+1                                     03330800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  03330900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03331000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03331100
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03331200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     03331300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03331400
.*                                                                      03331500
&ZOPN                 SETA  &ZOPN+1                                     03331600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCTOKEN'                 03331700
&ZOPO(&ZOPN)          SETC  'EQU'                                       03331800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03331900
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03332000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCTOKEN'                    03332100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03332200
.*                                                                      03332300
&ZOPN                 SETA  &ZOPN+1                                     03332400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCECB'                  03332500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03332600
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03332700
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03332800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCECB'                     03332900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03333000
.*                                                                      03333100
&ZOPN                 SETA  &ZOPN+1                                     03333200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCEXIT'                 03333300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03333400
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03333500
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03333600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCEXIT'                    03333700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03333800
.*                                                                      03333900
&ZOPN                 SETA  &ZOPN+1                                     03334000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCTOKEN'                03334100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03334200
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03334300
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03334400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCTOKEN'                   03334500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03334600
.*                                                                      03334700
&ZOPN                 SETA  &ZOPN+1                                     03334800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCNORESPONSE'           03334900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03335000
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             03335100
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 03335200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCNORESPONSE'              03335300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03335400
.*-------------------------------------------------------------------   03335500
.***AM.L03 XSHLFLGS3 BL.8                                               03335600
&ZOPN                 SETA &ZOPN+1                                      03335700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS3'                        03335800
&ZOPO(&ZOPN)          SETC 'DS'                                         03335900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03336000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03336100
.*                                                                      03336200
&ZOPN                 SETA  &ZOPN+1                                     03336300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_HELDBY'                03336400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03336500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03336600
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             03336700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HELDBY'                       03336800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03336900
.*                                                                      03337000
&ZOPN                 SETA  &ZOPN+1                                     03337100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LOCKCOMP'                03337200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03337300
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             03337400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03337500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCKCOMP'                     03337600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03337700
.*-------------------------------------------------------------------   03337800
.***AM.L03 XSHLFLGS4 BL.8                                               03337900
&ZOPN                 SETA &ZOPN+1                                      03338000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS4'                        03338100
&ZOPO(&ZOPN)          SETC 'DS'                                         03338200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03338300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03338400
.*                                                                      03338500
&ZOPN                 SETA  &ZOPN+1                                     03338600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_EXTRESTOKEN'             03338700
&ZOPO(&ZOPN)          SETC  'EQU'                                       03338800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03338900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03339000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXTRESTOKEN'                  03339100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03339200
.*                                                                      03339300
&ZOPN                 SETA  &ZOPN+1                                     03339400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRSIZE_64'                 03339500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03339600
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03339700
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRSIZE.'                          03339800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).64'                           03339900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03340000
.*                                                                      03340100
&ZOPN                 SETA  &ZOPN+1                                     03340200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYREQASYNC'                   03340300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03340400
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             03340500
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               03340600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LIST'                         03340700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03340800
.*-------------------------------------------------------------------   03340900
.***AM.PJR1 DEFINED ON XCONTOKEN                                        03341000
&ZOPN                 SETA &ZOPN+1                                      03341100
&ZOPL(&ZOPN)          SETC ' '                                          03341200
&ZOPO(&ZOPN)          SETC 'ORG'                                        03341300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+12'                               03341400
&ZOPD(&ZOPN)          SETC ' '                                          03341500
.*-------------------------------------------------------------------   03341600
.***AM.L09  XRSV0201 CL13                                               03341700
&ZOPN                 SETA &ZOPN+1                                      03341800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0201'                         03341900
&ZOPO(&ZOPN)          SETC 'DS'                                         03342000
&ZOPV(&ZOPN)          SETC 'CL13'                                       03342100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03342200
.*-------------------------------------------------------------------   03342300
.***AM.L09  XCONID XL1                                                  03342400
&ZOPN                 SETA &ZOPN+1                                      03342500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           03342600
&ZOPO(&ZOPN)          SETC 'DS'                                         03342700
&ZOPV(&ZOPN)          SETC 'XL1'                                        03342800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03342900
.*-------------------------------------------------------------------   03343000
.***AM.L09  XRSV0202 CL2                                                03343100
&ZOPN                 SETA &ZOPN+1                                      03343200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0202'                         03343300
&ZOPO(&ZOPN)          SETC 'DS'                                         03343400
&ZOPV(&ZOPN)          SETC 'CL2'                                        03343500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03343600
.*-------------------------------------------------------------------   03343700
.***AM.PJR1 DEFINED ON XDATADDR                                         03343800
&ZOPN                 SETA &ZOPN+1                                      03343900
&ZOPL(&ZOPN)          SETC ' '                                          03344000
&ZOPO(&ZOPN)          SETC 'ORG'                                        03344100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               03344200
&ZOPD(&ZOPN)          SETC ' '                                          03344300
.*-------------------------------------------------------------------   03344400
.***AM.L09 ALET XBUFFER F                                               03344500
&ZOPN                 SETA &ZOPN+1                                      03344600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ALET'                     03344700
&ZOPO(&ZOPN)          SETC 'DS'                                         03344800
&ZOPV(&ZOPN)          SETC 'F'                                          03344900
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ALET'                          03345000
.*-------------------------------------------------------------------   03345100
.***AM.L09  XBUFSIZE F                                                  03345200
&ZOPN                 SETA &ZOPN+1                                      03345300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         03345400
&ZOPO(&ZOPN)          SETC 'DS'                                         03345500
&ZOPV(&ZOPN)          SETC 'F'                                          03345600
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE '                             03345700
.*-------------------------------------------------------------------   03345800
.***AM.L09  XBUFFER A                                                   03345900
&ZOPN                 SETA &ZOPN+1                                      03346000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER'                          03346100
&ZOPO(&ZOPN)          SETC 'DS'                                         03346200
&ZOPV(&ZOPN)          SETC 'A'                                          03346300
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER '                              03346400
.*-------------------------------------------------------------------   03346500
.***AM.PJR1 DEFINED ON XDATADDR                                         03346600
&ZOPN                 SETA &ZOPN+1                                      03346700
&ZOPL(&ZOPN)          SETC ' '                                          03346800
&ZOPO(&ZOPN)          SETC 'ORG'                                        03346900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               03347000
&ZOPD(&ZOPN)          SETC ' '                                          03347100
.*-------------------------------------------------------------------   03347200
.***AM.L09  XBUFALET F                                                  03347300
&ZOPN                 SETA &ZOPN+1                                      03347400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFALET'                         03347500
&ZOPO(&ZOPN)          SETC 'DS'                                         03347600
&ZOPV(&ZOPN)          SETC 'F'                                          03347700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFALET '                             03347800
.*-------------------------------------------------------------------   03347900
.***AM.L09 ALET XBUFLIST F                                              03348000
&ZOPN                 SETA &ZOPN+1                                      03348100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST_ALET'                    03348200
&ZOPO(&ZOPN)          SETC 'DS'                                         03348300
&ZOPV(&ZOPN)          SETC 'F'                                          03348400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST ALET'                         03348500
.*-------------------------------------------------------------------   03348600
.***AM.L09  XBUFLIST A                                                  03348700
&ZOPN                 SETA &ZOPN+1                                      03348800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         03348900
&ZOPO(&ZOPN)          SETC 'DS'                                         03349000
&ZOPV(&ZOPN)          SETC 'A'                                          03349100
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST '                             03349200
.*-------------------------------------------------------------------   03349300
.***AM.PJR1 DEFINED ON XADJADDR                                         03349400
&ZOPN                 SETA &ZOPN+1                                      03349500
&ZOPL(&ZOPN)          SETC ' '                                          03349600
&ZOPO(&ZOPN)          SETC 'ORG'                                        03349700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               03349800
&ZOPD(&ZOPN)          SETC ' '                                          03349900
.*-------------------------------------------------------------------   03350000
.***AM.L09 ALET XADJAREA F                                              03350100
&ZOPN                 SETA &ZOPN+1                                      03350200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA_ALET'                    03350300
&ZOPO(&ZOPN)          SETC 'DS'                                         03350400
&ZOPV(&ZOPN)          SETC 'F'                                          03350500
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA ALET'                         03350600
.*-------------------------------------------------------------------   03350700
.***AM.L09  XADJAREA A                                                  03350800
&ZOPN                 SETA &ZOPN+1                                      03350900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA'                         03351000
&ZOPO(&ZOPN)          SETC 'DS'                                         03351100
&ZOPV(&ZOPN)          SETC 'A'                                          03351200
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA '                             03351300
.*-------------------------------------------------------------------   03351400
.***AM.PJR1 DEFINED ON XANSADDR                                         03351500
&ZOPN                 SETA &ZOPN+1                                      03351600
&ZOPL(&ZOPN)          SETC ' '                                          03351700
&ZOPO(&ZOPN)          SETC 'ORG'                                        03351800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+48'                               03351900
&ZOPD(&ZOPN)          SETC ' '                                          03352000
.*-------------------------------------------------------------------   03352100
.***AM.L09 ALET XANSAREA F                                              03352200
&ZOPN                 SETA &ZOPN+1                                      03352300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    03352400
&ZOPO(&ZOPN)          SETC 'DS'                                         03352500
&ZOPV(&ZOPN)          SETC 'F'                                          03352600
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         03352700
.*-------------------------------------------------------------------   03352800
.***AM.L09  XANSAREA A                                                  03352900
&ZOPN                 SETA &ZOPN+1                                      03353000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA'                         03353100
&ZOPO(&ZOPN)          SETC 'DS'                                         03353200
&ZOPV(&ZOPN)          SETC 'A'                                          03353300
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA '                             03353400
.*-------------------------------------------------------------------   03353500
.***AM.PJR1 DEFINED ON XREQDATA                                         03353600
&ZOPN                 SETA &ZOPN+1                                      03353700
&ZOPL(&ZOPN)          SETC ' '                                          03353800
&ZOPO(&ZOPN)          SETC 'ORG'                                        03353900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               03354000
&ZOPD(&ZOPN)          SETC ' '                                          03354100
.*-------------------------------------------------------------------   03354200
.***AM.L09  XREQECB A                                                   03354300
&ZOPN                 SETA &ZOPN+1                                      03354400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQECB'                          03354500
&ZOPO(&ZOPN)          SETC 'DS'                                         03354600
&ZOPV(&ZOPN)          SETC 'A'                                          03354700
&ZOPD(&ZOPN)          SETC '++ &ZXREQECB '                              03354800
.*-------------------------------------------------------------------   03354900
.***AM.L09  XRSV0203 CL4                                                03355000
&ZOPN                 SETA &ZOPN+1                                      03355100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0203'                         03355200
&ZOPO(&ZOPN)          SETC 'DS'                                         03355300
&ZOPV(&ZOPN)          SETC 'CL4'                                        03355400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03355500
.*-------------------------------------------------------------------   03355600
.***AM.PJR1 DEFINED ON XREQDATA                                         03355700
&ZOPN                 SETA &ZOPN+1                                      03355800
&ZOPL(&ZOPN)          SETC ' '                                          03355900
&ZOPO(&ZOPN)          SETC 'ORG'                                        03356000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               03356100
&ZOPD(&ZOPN)          SETC ' '                                          03356200
.*-------------------------------------------------------------------   03356300
.***AM.L09 ALET XREQTOKEN F                                             03356400
&ZOPN                 SETA &ZOPN+1                                      03356500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN_ALET'                   03356600
&ZOPO(&ZOPN)          SETC 'DS'                                         03356700
&ZOPV(&ZOPN)          SETC 'F'                                          03356800
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN ALET'                        03356900
.*-------------------------------------------------------------------   03357000
.***AM.L09  XREQTOKEN A                                                 03357100
&ZOPN                 SETA &ZOPN+1                                      03357200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        03357300
&ZOPO(&ZOPN)          SETC 'DS'                                         03357400
&ZOPV(&ZOPN)          SETC 'A'                                          03357500
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN '                            03357600
.*-------------------------------------------------------------------   03357700
.***AM.PJR1 DEFINED ON XOPTIONALDATA                                    03357800
&ZOPN                 SETA &ZOPN+1                                      03357900
&ZOPL(&ZOPN)          SETC ' '                                          03358000
&ZOPO(&ZOPN)          SETC 'ORG'                                        03358100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               03358200
&ZOPD(&ZOPN)          SETC ' '                                          03358300
.*-------------------------------------------------------------------   03358400
.***AM.L09 ALET XLISTKEYAREA F                                          03358500
&ZOPN                 SETA &ZOPN+1                                      03358600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYAREA_ALET'                03358700
&ZOPO(&ZOPN)          SETC 'DS'                                         03358800
&ZOPV(&ZOPN)          SETC 'F'                                          03358900
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEYAREA ALET'                     03359000
.*-------------------------------------------------------------------   03359100
.***AM.L09  XLISTKEYAREA A                                              03359200
&ZOPN                 SETA &ZOPN+1                                      03359300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYAREA'                     03359400
&ZOPO(&ZOPN)          SETC 'DS'                                         03359500
&ZOPV(&ZOPN)          SETC 'A'                                          03359600
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEYAREA '                         03359700
.*-------------------------------------------------------------------   03359800
.***AM.PJR1 DEFINED ON XSHLFLGSA                                        03359900
&ZOPN                 SETA &ZOPN+1                                      03360000
&ZOPL(&ZOPN)          SETC ' '                                          03360100
&ZOPO(&ZOPN)          SETC 'ORG'                                        03360200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+88'                               03360300
&ZOPD(&ZOPN)          SETC ' '                                          03360400
.*-------------------------------------------------------------------   03360500
.***AM.L03 XSHLFLGSA1 BL.8                                              03360600
&ZOPN                 SETA &ZOPN+1                                      03360700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA1'                       03360800
&ZOPO(&ZOPN)          SETC 'DS'                                         03360900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03361000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03361100
.*                                                                      03361200
&ZOPN                 SETA  &ZOPN+1                                     03361300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTC'                 03361400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03361500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03361600
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               03361700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTC'                      03361800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03361900
.*                                                                      03362000
&ZOPN                 SETA  &ZOPN+1                                     03362100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTE'                 03362200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03362300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03362400
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               03362500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTE'                      03362600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03362700
.*                                                                      03362800
&ZOPN                 SETA  &ZOPN+1                                     03362900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTM'                 03363000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03363100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03363200
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               03363300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTM'                      03363400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03363500
.*-------------------------------------------------------------------   03363600
.***AM.L09  XSHLFLGSA2 BL.8                                             03363700
&ZOPN                 SETA &ZOPN+1                                      03363800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA2'                       03363900
&ZOPO(&ZOPN)          SETC 'DS'                                         03364000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03364100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03364200
.*-------------------------------------------------------------------   03364300
.***AM.PJR1 DEFINED ON XOPTIONALDATA                                    03364400
&ZOPN                 SETA &ZOPN+1                                      03364500
&ZOPL(&ZOPN)          SETC ' '                                          03364600
&ZOPO(&ZOPN)          SETC 'ORG'                                        03364700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               03364800
&ZOPD(&ZOPN)          SETC ' '                                          03364900
.*-------------------------------------------------------------------   03365000
.***AM.L09  XLISTKEYADDR CL8                                            03365100
&ZOPN                 SETA &ZOPN+1                                      03365200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYADDR'                     03365300
&ZOPO(&ZOPN)          SETC 'DS'                                         03365400
&ZOPV(&ZOPN)          SETC 'CL8'                                        03365500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03365600
.*-------------------------------------------------------------------   03365700
.***AM.PJR1 DEFINED ON XOPTIONALDATA                                    03365800
&ZOPN                 SETA &ZOPN+1                                      03365900
&ZOPL(&ZOPN)          SETC ' '                                          03366000
&ZOPO(&ZOPN)          SETC 'ORG'                                        03366100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               03366200
&ZOPD(&ZOPN)          SETC ' '                                          03366300
.*-------------------------------------------------------------------   03366400
.***AM.L09  XEXTRESTOKEN CL16                                           03366500
&ZOPN                 SETA &ZOPN+1                                      03366600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKEN'                     03366700
&ZOPO(&ZOPN)          SETC 'DS'                                         03366800
&ZOPV(&ZOPN)          SETC 'CL16'                                       03366900
&ZOPD(&ZOPN)          SETC '++ &ZXEXTRESTOKEN '                         03367000
.*-------------------------------------------------------------------   03367100
.***AM.PJR1 DEFINED ON XEXTRESTOKEN                                     03367200
&ZOPN                 SETA &ZOPN+1                                      03367300
&ZOPL(&ZOPN)          SETC ' '                                          03367400
&ZOPO(&ZOPN)          SETC 'ORG'                                        03367500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               03367600
&ZOPD(&ZOPN)          SETC ' '                                          03367700
.*-------------------------------------------------------------------   03367800
.***AM.L09  XEXTRESTOKENTKN CL8                                         03367900
&ZOPN                 SETA &ZOPN+1                                      03368000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENTKN'                  03368100
&ZOPO(&ZOPN)          SETC 'DS'                                         03368200
&ZOPV(&ZOPN)          SETC 'CL8'                                        03368300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03368400
.*-------------------------------------------------------------------   03368500
.***AM.L09  XEXTRESTOKENPSVN CL8                                        03368600
&ZOPN                 SETA &ZOPN+1                                      03368700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENPSVN'                 03368800
&ZOPO(&ZOPN)          SETC 'DS'                                         03368900
&ZOPV(&ZOPN)          SETC 'CL8'                                        03369000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03369100
.*-------------------------------------------------------------------   03369200
.***AM.PJR1 DEFINED ON XMOB_DATA                                        03369300
&ZOPN                 SETA &ZOPN+1                                      03369400
&ZOPL(&ZOPN)          SETC ' '                                          03369500
&ZOPO(&ZOPN)          SETC 'ORG'                                        03369600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               03369700
&ZOPD(&ZOPN)          SETC ' '                                          03369800
.*-------------------------------------------------------------------   03369900
.***AM.L09  XCMDLEN XL2                                                 03370000
&ZOPN                 SETA &ZOPN+1                                      03370100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDLEN'                          03370200
&ZOPO(&ZOPN)          SETC 'DS'                                         03370300
&ZOPV(&ZOPN)          SETC 'XL2'                                        03370400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03370500
.*-------------------------------------------------------------------   03370600
.***AM.L09  XBUFNUM XL1                                                 03370700
&ZOPN                 SETA &ZOPN+1                                      03370800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          03370900
&ZOPO(&ZOPN)          SETC 'DS'                                         03371000
&ZOPV(&ZOPN)          SETC 'XL1'                                        03371100
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM '                              03371200
.*-------------------------------------------------------------------   03371300
.***AM.L09  XBUFINCRNUM XL1                                             03371400
&ZOPN                 SETA &ZOPN+1                                      03371500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFINCRNUM'                      03371600
&ZOPO(&ZOPN)          SETC 'DS'                                         03371700
&ZOPV(&ZOPN)          SETC 'XL1'                                        03371800
&ZOPD(&ZOPN)          SETC '++ &ZXBUFINCRNUM '                          03371900
.*-------------------------------------------------------------------   03372000
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       03372100
&ZOPN                 SETA &ZOPN+1                                      03372200
&ZOPL(&ZOPN)          SETC ' '                                          03372300
&ZOPO(&ZOPN)          SETC 'ORG'                                        03372400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              03372500
&ZOPD(&ZOPN)          SETC ' '                                          03372600
.*-------------------------------------------------------------------   03372700
.***AM.L09  XCCA CL1                                                    03372800
&ZOPN                 SETA &ZOPN+1                                      03372900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCA'                             03373000
&ZOPO(&ZOPN)          SETC 'DS'                                         03373100
&ZOPV(&ZOPN)          SETC 'CL1'                                        03373200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03373300
.*-------------------------------------------------------------------   03373400
.***AM.L09  XCCB CL1                                                    03373500
&ZOPN                 SETA &ZOPN+1                                      03373600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCB'                             03373700
&ZOPO(&ZOPN)          SETC 'DS'                                         03373800
&ZOPV(&ZOPN)          SETC 'CL1'                                        03373900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03374000
.*-------------------------------------------------------------------   03374100
.***AM.L09  XRSV0501 CL2                                                03374200
&ZOPN                 SETA &ZOPN+1                                      03374300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0501'                         03374400
&ZOPO(&ZOPN)          SETC 'DS'                                         03374500
&ZOPV(&ZOPN)          SETC 'CL2'                                        03374600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03374700
.*-------------------------------------------------------------------   03374800
.***AM.L09  XCMDFLGS1 BL.32                                             03374900
&ZOPN                 SETA &ZOPN+1                                      03375000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1'                        03375100
&ZOPO(&ZOPN)          SETC 'DS'                                         03375200
&ZOPV(&ZOPN)          SETC 'BL.32'                                      03375300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03375400
.*-------------------------------------------------------------------   03375500
.***AM.L09  XRSV0502 CL3                                                03375600
&ZOPN                 SETA &ZOPN+1                                      03375700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0502'                         03375800
&ZOPO(&ZOPN)          SETC 'DS'                                         03375900
&ZOPV(&ZOPN)          SETC 'CL3'                                        03376000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03376100
.*-------------------------------------------------------------------   03376200
.***AM.L09  XCGLM CL1                                                   03376300
&ZOPN                 SETA &ZOPN+1                                      03376400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCGLM'                            03376500
&ZOPO(&ZOPN)          SETC 'DS'                                         03376600
&ZOPV(&ZOPN)          SETC 'CL1'                                        03376700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03376800
.*-------------------------------------------------------------------   03376900
.***AM.L09  XLOCKINDEX F                                                03377000
&ZOPN                 SETA &ZOPN+1                                      03377100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKINDEX'                       03377200
&ZOPO(&ZOPN)          SETC 'DS'                                         03377300
&ZOPV(&ZOPN)          SETC 'F'                                          03377400
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKINDEX '                           03377500
.*-------------------------------------------------------------------   03377600
.***AM.L09  XLISTNUM F                                                  03377700
&ZOPN                 SETA &ZOPN+1                                      03377800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUM'                         03377900
&ZOPO(&ZOPN)          SETC 'DS'                                         03378000
&ZOPV(&ZOPN)          SETC 'F'                                          03378100
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUM '                             03378200
.*-------------------------------------------------------------------   03378300
.***AM.L09  XENTRYID CL12                                               03378400
&ZOPN                 SETA &ZOPN+1                                      03378500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYID'                         03378600
&ZOPO(&ZOPN)          SETC 'DS'                                         03378700
&ZOPV(&ZOPN)          SETC 'CL12'                                       03378800
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYID '                             03378900
.*-------------------------------------------------------------------   03379000
.***AM.L09  XRSV0503 CL8                                                03379100
&ZOPN                 SETA &ZOPN+1                                      03379200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0503'                         03379300
&ZOPO(&ZOPN)          SETC 'DS'                                         03379400
&ZOPV(&ZOPN)          SETC 'CL8'                                        03379500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03379600
.*-------------------------------------------------------------------   03379700
.***AM.L09  XVERSCOMP CL8                                               03379800
&ZOPN                 SETA &ZOPN+1                                      03379900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP'                        03380000
&ZOPO(&ZOPN)          SETC 'DS'                                         03380100
&ZOPV(&ZOPN)          SETC 'CL8'                                        03380200
&ZOPD(&ZOPN)          SETC '++ &ZXVERSCOMP '                            03380300
.*-------------------------------------------------------------------   03380400
.***AM.L09  XCOMPDATA1 CL16                                             03380500
&ZOPN                 SETA &ZOPN+1                                      03380600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPDATA1'                       03380700
&ZOPO(&ZOPN)          SETC 'DS'                                         03380800
&ZOPV(&ZOPN)          SETC 'CL16'                                       03380900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03381000
.*-------------------------------------------------------------------   03381100
.***AM.L09  XCOMPDATA2 CL8                                              03381200
&ZOPN                 SETA &ZOPN+1                                      03381300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPDATA2'                       03381400
&ZOPO(&ZOPN)          SETC 'DS'                                         03381500
&ZOPV(&ZOPN)          SETC 'CL8'                                        03381600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03381700
.*-------------------------------------------------------------------   03381800
.***AM.L09  XRSV0504 CL4                                                03381900
&ZOPN                 SETA &ZOPN+1                                      03382000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0504'                         03382100
&ZOPO(&ZOPN)          SETC 'DS'                                         03382200
&ZOPV(&ZOPN)          SETC 'CL4'                                        03382300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03382400
.*-------------------------------------------------------------------   03382500
.***AM.L09  XCMDFLGS2 BL.32                                             03382600
&ZOPN                 SETA &ZOPN+1                                      03382700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS2'                        03382800
&ZOPO(&ZOPN)          SETC 'DS'                                         03382900
&ZOPV(&ZOPN)          SETC 'BL.32'                                      03383000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03383100
.*-------------------------------------------------------------------   03383200
.***AM.L09  XUID1 CL1                                                   03383300
&ZOPN                 SETA &ZOPN+1                                      03383400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID1'                            03383500
&ZOPO(&ZOPN)          SETC 'DS'                                         03383600
&ZOPV(&ZOPN)          SETC 'CL1'                                        03383700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03383800
.*-------------------------------------------------------------------   03383900
.***AM.L09  XRSV0505 CL15                                               03384000
&ZOPN                 SETA &ZOPN+1                                      03384100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0505'                         03384200
&ZOPO(&ZOPN)          SETC 'DS'                                         03384300
&ZOPV(&ZOPN)          SETC 'CL15'                                       03384400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03384500
.*-------------------------------------------------------------------   03384600
.***AM.L09  XKEYRANGEEND CL16                                           03384700
&ZOPN                 SETA &ZOPN+1                                      03384800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYRANGEEND'                     03384900
&ZOPO(&ZOPN)          SETC 'DS'                                         03385000
&ZOPV(&ZOPN)          SETC 'CL16'                                       03385100
&ZOPD(&ZOPN)          SETC '++ &ZXKEYRANGEEND '                         03385200
.*-------------------------------------------------------------------   03385300
.***AM.PJR1 DEFINED ON XCMDFLGS1                                        03385400
&ZOPN                 SETA &ZOPN+1                                      03385500
&ZOPL(&ZOPN)          SETC ' '                                          03385600
&ZOPO(&ZOPN)          SETC 'ORG'                                        03385700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              03385800
&ZOPD(&ZOPN)          SETC ' '                                          03385900
.*-------------------------------------------------------------------   03386000
.***AM.L09  XDBS BL.8                                                   03386100
&ZOPN                 SETA &ZOPN+1                                      03386200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS'                             03386300
&ZOPO(&ZOPN)          SETC 'DS'                                         03386400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03386500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03386600
.*-------------------------------------------------------------------   03386700
.***AM.L03 XCMDFLGS1B BL.8                                              03386800
&ZOPN                 SETA &ZOPN+1                                      03386900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1B'                       03387000
&ZOPO(&ZOPN)          SETC 'DS'                                         03387100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03387200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03387300
.*                                                                      03387400
&ZOPN                 SETA  &ZOPN+1                                     03387500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYCOMPARE_YES'                 03387600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03387700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03387800
&ZOPD(&ZOPN)          SETC  '++ XKEYCOMPARE.'                           03387900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          03388000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03388100
.*                                                                      03388200
&ZOPN                 SETA  &ZOPN+1                                     03388300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVERSCOMPTYPE_LESSOREQUAL'       03388400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03388500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03388600
&ZOPD(&ZOPN)          SETC  '++ XVERSCOMPTYPE.'                         03388700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LESSOREQUAL'                  03388800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03388900
.*                                                                      03389000
&ZOPN                 SETA  &ZOPN+1                                     03389100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYREQTYPE_GREATEROREQUAL'      03389200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03389300
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             03389400
&ZOPD(&ZOPN)          SETC  '++ XKEYREQTYPE.'                           03389500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GREATEROREQUAL'               03389600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03389700
.*                                                                      03389800
&ZOPN                 SETA  &ZOPN+1                                     03389900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYREQTYPE_LESSOREQUAL'         03390000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03390100
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             03390200
&ZOPD(&ZOPN)          SETC  '++ XKEYREQTYPE.'                           03390300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LESSOREQUAL'                  03390400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03390500
.*-------------------------------------------------------------------   03390600
.***AM.L03 XCMDFLGS1C BL.8                                              03390700
&ZOPN                 SETA &ZOPN+1                                      03390800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1C'                       03390900
&ZOPO(&ZOPN)          SETC 'DS'                                         03391000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03391100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03391200
.*                                                                      03391300
&ZOPN                 SETA  &ZOPN+1                                     03391400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDIRECTION_TAILTOHEAD'           03391500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03391600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03391700
&ZOPD(&ZOPN)          SETC  '++ XDIRECTION.'                            03391800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TAILTOHEAD'                   03391900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03392000
.*                                                                      03392100
&ZOPN                 SETA  &ZOPN+1                                     03392200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVERSCOMPARE_BYENTRY'            03392300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03392400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03392500
&ZOPD(&ZOPN)          SETC  '++ XVERSCOMPARE.'                          03392600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BYENTRY'                      03392700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03392800
.*                                                                      03392900
&ZOPN                 SETA  &ZOPN+1                                     03393000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMISCOMPARE_HALT'                03393100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03393200
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03393300
&ZOPD(&ZOPN)          SETC  '++ XMISCOMPARE.'                           03393400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HALT'                         03393500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03393600
.*                                                                      03393700
&ZOPN                 SETA  &ZOPN+1                                     03393800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTTYPE_NAMELIST'              03393900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03394000
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03394100
&ZOPD(&ZOPN)          SETC  '++ XLISTTYPE.'                             03394200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NAMELIST'                     03394300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03394400
.*                                                                      03394500
&ZOPN                 SETA  &ZOPN+1                                     03394600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTCOMPARE_YES'                03394700
&ZOPO(&ZOPN)          SETC  'EQU'                                       03394800
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03394900
&ZOPD(&ZOPN)          SETC  '++ XLISTCOMPARE.'                          03395000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          03395100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03395200
.*                                                                      03395300
&ZOPN                 SETA  &ZOPN+1                                     03395400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVERSCOMPARE_YES'                03395500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03395600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03395700
&ZOPD(&ZOPN)          SETC  '++ XVERSCOMPARE.'                          03395800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          03395900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03396000
.*-------------------------------------------------------------------   03396100
.***AM.PJR1 DEFINED ON XCMDFLGS1C                                       03396200
&ZOPN                 SETA &ZOPN+1                                      03396300
&ZOPL(&ZOPN)          SETC ' '                                          03396400
&ZOPO(&ZOPN)          SETC 'ORG'                                        03396500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              03396600
&ZOPD(&ZOPN)          SETC ' '                                          03396700
.*-------------------------------------------------------------------   03396800
.***AM.L03 XCMDFLGS1C1 BL.8                                             03396900
&ZOPN                 SETA &ZOPN+1                                      03397000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1C1'                      03397100
&ZOPO(&ZOPN)          SETC 'DS'                                         03397200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03397300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03397400
.*                                                                      03397500
&ZOPN                 SETA  &ZOPN+1                                     03397600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCATOR_CURSOR'                 03397700
&ZOPO(&ZOPN)          SETC  'EQU'                                       03397800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03397900
&ZOPD(&ZOPN)          SETC  '++ XLOCATOR.'                              03398000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CURSOR'                       03398100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03398200
.*                                                                      03398300
&ZOPN                 SETA  &ZOPN+1                                     03398400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCATOR_ENTRYID'                03398500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03398600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03398700
&ZOPD(&ZOPN)          SETC  '++ XLOCATOR.'                              03398800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRYID'                      03398900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03399000
.*                                                                      03399100
&ZOPN                 SETA  &ZOPN+1                                     03399200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCATOR_KEYPOS'                 03399300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03399400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03399500
&ZOPD(&ZOPN)          SETC  '++ XLOCATOR.'                              03399600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEYPOS'                       03399700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03399800
.*-------------------------------------------------------------------   03399900
.***AM.L03 XCMDFLGS1D BL.8                                              03400000
&ZOPN                 SETA &ZOPN+1                                      03400100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1D'                       03400200
&ZOPO(&ZOPN)          SETC 'DS'                                         03400300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03400400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03400500
.*                                                                      03400600
&ZOPN                 SETA  &ZOPN+1                                     03400700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMOVETOSKEY_TARGETKEY'           03400800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03400900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03401000
&ZOPD(&ZOPN)          SETC  '++ XMOVETOSKEY.'                           03401100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TARGETKEY'                    03401200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03401300
.*                                                                      03401400
&ZOPN                 SETA  &ZOPN+1                                     03401500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMOVETOKEY_TARGETKEY'            03401600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03401700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03401800
&ZOPD(&ZOPN)          SETC  '++ XMOVETOKEY.'                            03401900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TARGETKEY'                    03402000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03402100
.*                                                                      03402200
&ZOPN                 SETA  &ZOPN+1                                     03402300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ECONTROLS'                 03402400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03402500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03402600
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 03402700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ECONTROLS'                    03402800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03402900
.*                                                                      03403000
&ZOPN                 SETA  &ZOPN+1                                     03403100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ENTDATA'                   03403200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03403300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03403400
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 03403500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTDATA'                      03403600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03403700
.*                                                                      03403800
&ZOPN                 SETA  &ZOPN+1                                     03403900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ADJDATA'                   03404000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03404100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03404200
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 03404300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADJDATA'                      03404400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03404500
.*-------------------------------------------------------------------   03404600
.***AM.PJR1 DEFINED ON XCOMPDATA1                                       03404700
&ZOPN                 SETA &ZOPN+1                                      03404800
&ZOPL(&ZOPN)          SETC ' '                                          03404900
&ZOPO(&ZOPN)          SETC 'ORG'                                        03405000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              03405100
&ZOPD(&ZOPN)          SETC ' '                                          03405200
.*-------------------------------------------------------------------   03405300
.***AM.L09  XENTRYNAME CL16                                             03405400
&ZOPN                 SETA &ZOPN+1                                      03405500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYNAME'                       03405600
&ZOPO(&ZOPN)          SETC 'DS'                                         03405700
&ZOPV(&ZOPN)          SETC 'CL16'                                       03405800
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYNAME '                           03405900
.*-------------------------------------------------------------------   03406000
.***AM.PJR1 DEFINED ON XCOMPDATA1                                       03406100
&ZOPN                 SETA &ZOPN+1                                      03406200
&ZOPL(&ZOPN)          SETC ' '                                          03406300
&ZOPO(&ZOPN)          SETC 'ORG'                                        03406400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              03406500
&ZOPD(&ZOPN)          SETC ' '                                          03406600
.*-------------------------------------------------------------------   03406700
.***AM.L09  XENTRYKEY CL16                                              03406800
&ZOPN                 SETA &ZOPN+1                                      03406900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEY'                        03407000
&ZOPO(&ZOPN)          SETC 'DS'                                         03407100
&ZOPV(&ZOPN)          SETC 'CL16'                                       03407200
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYKEY '                            03407300
.*-------------------------------------------------------------------   03407400
.***AM.PJR1 DEFINED ON XCOMPDATA2                                       03407500
&ZOPN                 SETA &ZOPN+1                                      03407600
&ZOPL(&ZOPN)          SETC ' '                                          03407700
&ZOPO(&ZOPN)          SETC 'ORG'                                        03407800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+164'                              03407900
&ZOPD(&ZOPN)          SETC ' '                                          03408000
.*-------------------------------------------------------------------   03408100
.***AM.L09  XFIRSTELEM XL2                                              03408200
&ZOPN                 SETA &ZOPN+1                                      03408300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFIRSTELEM'                       03408400
&ZOPO(&ZOPN)          SETC 'DS'                                         03408500
&ZOPV(&ZOPN)          SETC 'XL2'                                        03408600
&ZOPD(&ZOPN)          SETC '++ &ZXFIRSTELEM '                           03408700
.*-------------------------------------------------------------------   03408800
.***AM.L09  XLASTELEM XL2                                               03408900
&ZOPN                 SETA &ZOPN+1                                      03409000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLASTELEM'                        03409100
&ZOPO(&ZOPN)          SETC 'DS'                                         03409200
&ZOPV(&ZOPN)          SETC 'XL2'                                        03409300
&ZOPD(&ZOPN)          SETC '++ &ZXLASTELEM '                            03409400
.*-------------------------------------------------------------------   03409500
.***AM.PJR1 DEFINED ON XCOMPDATA2                                       03409600
&ZOPN                 SETA &ZOPN+1                                      03409700
&ZOPL(&ZOPN)          SETC ' '                                          03409800
&ZOPO(&ZOPN)          SETC 'ORG'                                        03409900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+164'                              03410000
&ZOPD(&ZOPN)          SETC ' '                                          03410100
.*-------------------------------------------------------------------   03410200
.***AM.L09  XRESTOKEN CL8                                               03410300
&ZOPN                 SETA &ZOPN+1                                      03410400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTOKEN'                        03410500
&ZOPO(&ZOPN)          SETC 'DS'                                         03410600
&ZOPV(&ZOPN)          SETC 'CL8'                                        03410700
&ZOPD(&ZOPN)          SETC '++ &ZXRESTOKEN '                            03410800
.*-------------------------------------------------------------------   03410900
.***AM.PJR1 DEFINED ON XCMDFLGS2                                        03411000
&ZOPN                 SETA &ZOPN+1                                      03411100
&ZOPL(&ZOPN)          SETC ' '                                          03411200
&ZOPO(&ZOPN)          SETC 'ORG'                                        03411300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+176'                              03411400
&ZOPD(&ZOPN)          SETC ' '                                          03411500
.*-------------------------------------------------------------------   03411600
.***AM.L03 XCMDFLGS2A BL.8                                              03411700
&ZOPN                 SETA &ZOPN+1                                      03411800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS2A'                       03411900
&ZOPO(&ZOPN)          SETC 'DS'                                         03412000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03412100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03412200
.*                                                                      03412300
&ZOPN                 SETA  &ZOPN+1                                     03412400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMOVETOKEY_LISTKEY'              03412500
&ZOPO(&ZOPN)          SETC  'EQU'                                       03412600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             03412700
&ZOPD(&ZOPN)          SETC  '++ XMOVETOKEY.'                            03412800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTKEY'                      03412900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03413000
.*                                                                      03413100
&ZOPN                 SETA  &ZOPN+1                                     03413200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LISTKEYINC'              03413300
&ZOPO(&ZOPN)          SETC  'EQU'                                       03413400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03413500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               03413600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTKEYINC'                   03413700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03413800
.*                                                                      03413900
&ZOPN                 SETA  &ZOPN+1                                     03414000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAUTHCOMPTYPE_LESSOREQUAL'       03414100
&ZOPO(&ZOPN)          SETC  'EQU'                                       03414200
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03414300
&ZOPD(&ZOPN)          SETC  '++ XAUTHCOMPTYPE.'                         03414400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LESSOREQUAL'                  03414500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03414600
.*                                                                      03414700
&ZOPN                 SETA  &ZOPN+1                                     03414800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAUTHCOMPTYPE_EQUAL'             03414900
&ZOPO(&ZOPN)          SETC  'EQU'                                       03415000
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03415100
&ZOPD(&ZOPN)          SETC  '++ XAUTHCOMPTYPE.'                         03415200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EQUAL'                        03415300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03415400
.*-------------------------------------------------------------------   03415500
.***AM.L03 XCMDFLGS2B BL.8                                              03415600
&ZOPN                 SETA &ZOPN+1                                      03415700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS2B'                       03415800
&ZOPO(&ZOPN)          SETC 'DS'                                         03415900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       03416000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             03416100
.*                                                                      03416200
&ZOPN                 SETA  &ZOPN+1                                     03416300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYTYPE_SECONDARY'              03416400
&ZOPO(&ZOPN)          SETC  'EQU'                                       03416500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             03416600
&ZOPD(&ZOPN)          SETC  '++ XKEYTYPE.'                              03416700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARY'                    03416800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03416900
.*                                                                      03417000
&ZOPN                 SETA  &ZOPN+1                                     03417100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSKEYCOMPARE_YES'                03417200
&ZOPO(&ZOPN)          SETC  'EQU'                                       03417300
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             03417400
&ZOPD(&ZOPN)          SETC  '++ XSKEYCOMPARE.'                          03417500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          03417600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03417700
.*                                                                      03417800
&ZOPN                 SETA  &ZOPN+1                                     03417900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSKEYREQTYPE_GREATEROREQUAL'     03418000
&ZOPO(&ZOPN)          SETC  'EQU'                                       03418100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             03418200
&ZOPD(&ZOPN)          SETC  '++ XSKEYREQTYPE.'                          03418300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GREATEROREQUAL'               03418400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03418500
.*                                                                      03418600
&ZOPN                 SETA  &ZOPN+1                                     03418700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSKEYREQTYPE_LESSOREQUAL'        03418800
&ZOPO(&ZOPN)          SETC  'EQU'                                       03418900
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             03419000
&ZOPD(&ZOPN)          SETC  '++ XSKEYREQTYPE.'                          03419100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LESSOREQUAL'                  03419200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03419300
.*                                                                      03419400
&ZOPN                 SETA  &ZOPN+1                                     03419500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEYSCANTYPE_SECONDARY'          03419600
&ZOPO(&ZOPN)          SETC  'EQU'                                       03419700
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             03419800
&ZOPD(&ZOPN)          SETC  '++ XKEYSCANTYPE.'                          03419900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARY'                    03420000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      03420100
.*-------------------------------------------------------------------   03420200
.***AM.L09  XRSV0601 CL2                                                03420300
&ZOPN                 SETA &ZOPN+1                                      03420400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0601'                         03420500
&ZOPO(&ZOPN)          SETC 'DS'                                         03420600
&ZOPV(&ZOPN)          SETC 'CL2'                                        03420700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03420800
.*-------------------------------------------------------------------   03420900
.***AM.LVER1                                                            03421000
                      AIF  (&XPLISTVER LT 1).ZL163L                     03421100
.*-------------------------------------------------------------------   03421200
.*-------------------------------------------------------------------   03421300
.***AM.PJR1 DEFINED ON XMCB_DATA                                        03421400
&ZOPN                 SETA &ZOPN+1                                      03421500
&ZOPL(&ZOPN)          SETC ' '                                          03421600
&ZOPO(&ZOPN)          SETC 'ORG'                                        03421700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              03421800
&ZOPD(&ZOPN)          SETC ' '                                          03421900
.*-------------------------------------------------------------------   03422000
.***AM.LVER2                                                            03422100
.ZL163L               ANOP  ,                                           03422200
.*-------------------------------------------------------------------   03422300
.*-------------------------------------------------------------------   03422400
.***AM.LVER1                                                            03422500
                      AIF  (&XPLISTVER LT 1).ZL164L                     03422600
.*-------------------------------------------------------------------   03422700
.*-------------------------------------------------------------------   03422800
.***AM.L09  XRSV0701 CL112                                              03422900
&ZOPN                 SETA &ZOPN+1                                      03423000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0701'                         03423100
&ZOPO(&ZOPN)          SETC 'DS'                                         03423200
&ZOPV(&ZOPN)          SETC 'CL112'                                      03423300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03423400
.*-------------------------------------------------------------------   03423500
.***AM.LVER2                                                            03423600
.ZL164L               ANOP  ,                                           03423700
.*-------------------------------------------------------------------   03423800
.*-------------------------------------------------------------------   03423900
.***AM.LVER1                                                            03424000
                      AIF  (&XPLISTVER LT 1).ZL165L                     03424100
.*-------------------------------------------------------------------   03424200
.*-------------------------------------------------------------------   03424300
.***AM.L09  XRSV0702 CL16                                               03424400
&ZOPN                 SETA &ZOPN+1                                      03424500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0702'                         03424600
&ZOPO(&ZOPN)          SETC 'DS'                                         03424700
&ZOPV(&ZOPN)          SETC 'CL16'                                       03424800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03424900
.*-------------------------------------------------------------------   03425000
.***AM.LVER2                                                            03425100
.ZL165L               ANOP  ,                                           03425200
.*-------------------------------------------------------------------   03425300
.*-------------------------------------------------------------------   03425400
.***AM.LVER1                                                            03425500
                      AIF  (&XPLISTVER LT 1).ZL166L                     03425600
.*-------------------------------------------------------------------   03425700
.*-------------------------------------------------------------------   03425800
.***AM.L09  XAUTHCOMP1 CL16                                             03425900
&ZOPN                 SETA &ZOPN+1                                      03426000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAUTHCOMP1'                       03426100
&ZOPO(&ZOPN)          SETC 'DS'                                         03426200
&ZOPV(&ZOPN)          SETC 'CL16'                                       03426300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            03426400
.*-------------------------------------------------------------------   03426500
.***AM.LVER2                                                            03426600
.ZL166L               ANOP  ,                                           03426700
.*-------------------------------------------------------------------   03426800
.*-------------------------------------------------------------------   03426900
.***AM.LVER1                                                            03427000
                      AIF  (&XPLISTVER LT 1).ZL167L                     03427100
.*-------------------------------------------------------------------   03427200
.*-------------------------------------------------------------------   03427300
.***AM.L09  XRSV0703 CL28                                               03427400
&ZOPN                 SETA &ZOPN+1                                      03427500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0703'                         03427600
&ZOPO(&ZOPN)          SETC 'DS'                                         03427700
&ZOPV(&ZOPN)          SETC 'CL28'                                       03427800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               03427900
.*-------------------------------------------------------------------   03428000
.***AM.LVER2                                                            03428100
.ZL167L               ANOP  ,                                           03428200
.*-------------------------------------------------------------------   03428300
.*-------------------------------------------------------------------   03428400
.***AM.LVER1                                                            03428500
                      AIF  (&XPLISTVER LT 1).ZL168L                     03428600
.*-------------------------------------------------------------------   03428700
.*-------------------------------------------------------------------   03428800
.***AM.L09  XLISTKEYINC F                                               03428900
&ZOPN                 SETA &ZOPN+1                                      03429000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYINC'                      03429100
&ZOPO(&ZOPN)          SETC 'DS'                                         03429200
&ZOPV(&ZOPN)          SETC 'F'                                          03429300
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEYINC '                          03429400
.*-------------------------------------------------------------------   03429500
.***AM.LVER2                                                            03429600
.ZL168L               ANOP  ,                                           03429700
.*-------------------------------------------------------------------   03429800
.*-------------------------------------------------------------------   03429900
.***AM.LVER1                                                            03430000
                      AIF  (&XPLISTVER LT 4).ZL169L                     03430100
.*-------------------------------------------------------------------   03430200
.*-------------------------------------------------------------------   03430300
.***AM.PJR1 DEFINED ON XMCB_DATA4                                       03430400
&ZOPN                 SETA &ZOPN+1                                      03430500
&ZOPL(&ZOPN)          SETC ' '                                          03430600
&ZOPO(&ZOPN)          SETC 'ORG'                                        03430700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+276'                              03430800
&ZOPD(&ZOPN)          SETC ' '                                          03430900
.*-------------------------------------------------------------------   03431000
.***AM.LVER2                                                            03431100
.ZL169L               ANOP  ,                                           03431200
.*-------------------------------------------------------------------   03431300
.*-------------------------------------------------------------------   03431400
.***AM.LVER1                                                            03431500
                      AIF  (&XPLISTVER LT 4).ZL170L                     03431600
.*-------------------------------------------------------------------   03431700
.*-------------------------------------------------------------------   03431800
.***AM.L09  XSECONDARYKEY CL32                                          03431900
&ZOPN                 SETA &ZOPN+1                                      03432000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECONDARYKEY'                    03432100
&ZOPO(&ZOPN)          SETC 'DS'                                         03432200
&ZOPV(&ZOPN)          SETC 'CL32'                                       03432300
&ZOPD(&ZOPN)          SETC '++ &ZXSECONDARYKEY '                        03432400
.*-------------------------------------------------------------------   03432500
.***AM.LVER2                                                            03432600
.ZL170L               ANOP  ,                                           03432700
.*-------------------------------------------------------------------   03432800
.*-------------------------------------------------------------------   03432900
.***AM.LVER1                                                            03433000
                      AIF  (&XPLISTVER LT 4).ZL171L                     03433100
.*-------------------------------------------------------------------   03433200
.*-------------------------------------------------------------------   03433300
.***AM.L09  XSKEYRANGEEND CL32                                          03433400
&ZOPN                 SETA &ZOPN+1                                      03433500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSKEYRANGEEND'                    03433600
&ZOPO(&ZOPN)          SETC 'DS'                                         03433700
&ZOPV(&ZOPN)          SETC 'CL32'                                       03433800
&ZOPD(&ZOPN)          SETC '++ &ZXSKEYRANGEEND '                        03433900
.*-------------------------------------------------------------------   03434000
.***AM.LVER2                                                            03434100
.ZL171L               ANOP  ,                                           03434200
.*-------------------------------------------------------------------   03434300
&ZOPN                 SETA &ZOPN+1                                      03434400
&ZOPL(&ZOPN)          SETC ' '                                          03434500
&ZOPO(&ZOPN)          SETC 'ORG'                                        03434600
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           03434700
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     03434800
.*-------------------------------------------------------------------   03434900
.***AM.L10 END OF IXLLSTM LIST PARAMETERS                               03435000
&ZOPN                 SETA &ZOPN+1                                      03435100
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 03435200
&ZOPO(&ZOPN)          SETC 'EQU'                                        03435300
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 03435400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         03435500
.*                                                                      03435600
&ZOPN                 SETA &ZOPN+1                                      03435700
&ZOPL(&ZOPN)          SETC ' '                                          03435800
&ZOPO(&ZOPN)          SETC 'SPACE'                                      03435900
&ZOPV(&ZOPN)          SETC '1'                                          03436000
&ZOPD(&ZOPN)          SETC ' '                                          03436100
.*-------------------------------------------------------------------   03436200
.***AL.L12 IXLLSTM FMT=LIST MF=S!L PARAMETERS                           03436300
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         03436400
.*                                                                      03436500
&ZOPN                 SETA  &ZOPN+1                                     03436600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                03436700
&ZOPO(&ZOPN)          SETC  'DC'                                        03436800
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   03436900
&ZOPD(&ZOPN)          SETC  '++ IXLLSTM ARG PARMS'                      03437000
.*                                                                      03437100
.ZLMFSLX              ANOP  ,                                           03437200
.*-------------------------------------------------------------------   03437300
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          03437400
&ZPLLEN               SETA 232                                          03437500
.*                                                                      03437600
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    03437700
&ZPLLEN               SETA 276                                          03437800
.ZLLEN2Z              ANOP  ,                                           03437900
.*                                                                      03438000
                      AIF  (&XPLISTVER LT 4).ZLLEN3Z                    03438100
&ZPLLEN               SETA 340                                          03438200
.ZLLEN3Z              ANOP  ,                                           03438300
.*                                                                      03438400
.******************************************************************     03438500
.***AI.L01 IXLLSTM FMT=LIST FILL IN PARAMETER AREA                      03438600
.******************************************************************     03438700
                      ACTR  10000                                       03438800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               03438900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    03439000
&ZCVAL                SETC  'LAE'          XAX MODE                     03439100
.ZIMFXA               ANOP ,                                            03439200
.*                                                                      03439300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    03439400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         03439500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 03439600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                03439700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 03439800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                03439900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   03440000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    03440100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   03440200
&ZOPN                 SETA  &ZOPN+1                                     03440300
&ZOPL(&ZOPN)          SETC  ' '                                         03440400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03440500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              03440600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       03440700
                      AGO   .ZIMFNX                                     03440800
.*                                                                      03440900
.ZIMFN2               ANOP ,                                            03441000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     03441100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     03441200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  03441300
&ZOPN                 SETA  &ZOPN+1                                     03441400
&ZOPL(&ZOPN)          SETC  ' '                                         03441500
&ZOPO(&ZOPN)          SETC  'LAE'                                       03441600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  03441700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       03441800
                      AGO   .ZIMFNX                                     03441900
.ZIMFNX1              ANOP ,                                            03442000
&ZOPN                 SETA  &ZOPN+1                                     03442100
&ZOPL(&ZOPN)          SETC  ' '                                         03442200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03442300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                03442400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       03442500
.ZIMFNX               ANOP ,                                            03442600
.********************************************************************   03442700
.***AI.L02 IXLLSTM FMT=LIST INITIALIZE PARAMETER AREA                   03442800
.********************************************************************   03442900
.***AI.L03 MF=(SLE)                                                     03443000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      03443100
&ZAWRK                SETA  0                                           03443200
&ZN                   SETA  &ZPLLEN                                     03443300
.ZCLRCONT             AIF   (&ZN LE 256).ZCLRX                          03443400
.*                                                                      03443500
&ZOPN                 SETA  &ZOPN+1                                     03443600
&ZOPL(&ZOPN)          SETC  ' '                                         03443700
&ZOPO(&ZOPN)          SETC  'XC'                                        03443800
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(256,1),&ZAWRK.(1)'                 03443900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             03444000
.*                                                                      03444100
&ZAWRK                SETA &ZAWRK+256                                   03444200
&ZN                   SETA  &ZN-256                                     03444300
                      AGO   .ZCLRCONT                                   03444400
.*                                                                      03444500
.ZCLRX                ANOP  ,                                           03444600
.*                                                                      03444700
&ZOPN                 SETA  &ZOPN+1                                     03444800
&ZOPL(&ZOPN)          SETC  ' '                                         03444900
&ZOPO(&ZOPN)          SETC  'XC'                                        03445000
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(&ZN,1),&ZAWRK.(1)'                 03445100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             03445200
.ZIMFLX               ANOP  ,                                           03445300
.*-------------------------------------------------------------------   03445400
.***AI.LVER01                                                           03445500
                      AIF  (&XPLISTVER LT 1).ZI5Z                       03445600
.*-------------------------------------------------------------------   03445700
.***AI.LVER02                                                           03445800
.ZI5Z                 ANOP  ,                                           03445900
.*-------------------------------------------------------------------   03446000
.***AI.LVER01                                                           03446100
                      AIF  (&XPLISTVER LT 4).ZI6Z                       03446200
.*-------------------------------------------------------------------   03446300
.***AI.LVER02                                                           03446400
.ZI6Z                 ANOP  ,                                           03446500
.*-------------------------------------------------------------------   03446600
.***AI.LVER01                                                           03446700
                      AIF  (&XPLISTVER LT 1).ZI8Z                       03446800
.*-------------------------------------------------------------------   03446900
.***AI.LVER02                                                           03447000
.ZI8Z                 ANOP  ,                                           03447100
.*-------------------------------------------------------------------   03447200
.***AI.LVER01                                                           03447300
                      AIF  (&XPLISTVER LT 4).ZI10Z                      03447400
.*-------------------------------------------------------------------   03447500
.***AI.LVER02                                                           03447600
.ZI10Z                ANOP  ,                                           03447700
.*-------------------------------------------------------------------   03447800
.***AI.L04B XVERSION XL1                                                03447900
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    03448000
&ZOPN                 SETA  &ZOPN+1                                     03448100
&ZOPL(&ZOPN)          SETC  ' '                                         03448200
&ZOPO(&ZOPN)          SETC  'MVI'                                       03448300
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           03448400
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     03448500
.ZIMFVZ               ANOP  ,                                           03448600
.*-------------------------------------------------------------------   03448700
.***AI.L18  XBUFSTGKEY XL1                                              03448800
         AIF   ('&XBUFSTGKEY' NE 'CALLERS_KEY').ZI17                    03448900
&ZXBUFSTGKEY          SETC  ''             RESET INPUT/OUTPUT           03449000
.ZI17                 ANOP  ,                                           03449100
.*-------------------------------------------------------------------   03449200
.***AI.L25  XBUFSTGKEY XL1                                              03449300
                      AIF   ('&ZXBUFSTGKEY' EQ '').ZI17E                03449400
                      AIF   ('&ZXBUFSTGKEY' EQ 'OUTPUT').ZI17E          03449500
&ZCGPR                SETC  '&XBUFSTGKEY'                               03449600
.*                                                                      03449700
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZI17B           03449800
&ZCGPR   SETC  '0('.'&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2).')'                03449900
                      AGO   .ZI17D                                      03450000
.ZI17B                ANOP  ,                                           03450100
.*                                                                      03450200
&ZC                   SETC  '&XBUFSTGKEY'(1,1)                          03450300
                      AIF   (T'&ZC NE 'N').ZI17D                        03450400
&ZC                   SETC  '&XBUFSTGKEY'                               03450500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI17D               03450600
&ZCGPR                SETC  '=BL1''&XBUFSTGKEY'''                       03450700
.*                                                                      03450800
.ZI17D                ANOP  ,                                           03450900
.*                                                                      03451000
&ZOPN                 SETA  &ZOPN+1                                     03451100
&ZOPL(&ZOPN)          SETC  ' '                                         03451200
&ZOPO(&ZOPN)          SETC  'MVC'                                       03451300
&ZOPV(&ZOPN)          SETC  '9(1,1),&ZCGPR'                             03451400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSTGKEY XBUFSTGKEY'                03451500
.*                                                                      03451600
.ZI17E                ANOP  ,                                           03451700
.*-------------------------------------------------------------------   03451800
.***AI.L25  XANSLEN XL2                                                 03451900
                      AIF   ('&ZXANSLEN' EQ '').ZI18E                   03452000
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI18E             03452100
&ZCGPR                SETC  '&XANSLEN'                                  03452200
.*                                                                      03452300
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI18B              03452400
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      03452500
                      AGO   .ZI18D                                      03452600
.ZI18B                ANOP  ,                                           03452700
.*                                                                      03452800
&ZC                   SETC  '&XANSLEN'(1,1)                             03452900
                      AIF   (T'&ZC NE 'N').ZI18D                        03453000
&ZC                   SETC  '&XANSLEN'                                  03453100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI18D               03453200
&ZCGPR                SETC  '=AL2(&XANSLEN)'                            03453300
.*                                                                      03453400
.ZI18D                ANOP  ,                                           03453500
.*                                                                      03453600
&ZOPN                 SETA  &ZOPN+1                                     03453700
&ZOPL(&ZOPN)          SETC  ' '                                         03453800
&ZOPO(&ZOPN)          SETC  'MVC'                                       03453900
&ZOPV(&ZOPN)          SETC  '10(2,1),&ZCGPR'                            03454000
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      03454100
.*                                                                      03454200
.ZI18E                ANOP  ,                                           03454300
.*-------------------------------------------------------------------   03454400
.***AI.L25  XCONTOKEN CL16                                              03454500
                      AIF   ('&ZXCONTOKEN' EQ '').ZI19E                 03454600
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI19E           03454700
&ZCGPR                SETC  '&XCONTOKEN'                                03454800
.*                                                                      03454900
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI19B            03455000
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  03455100
.ZI19B                ANOP  ,                                           03455200
.*                                                                      03455300
&ZOPN                 SETA  &ZOPN+1                                     03455400
&ZOPL(&ZOPN)          SETC  ' '                                         03455500
&ZOPO(&ZOPN)          SETC  'MVC'                                       03455600
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           03455700
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  03455800
.*                                                                      03455900
.ZI19E                ANOP  ,                                           03456000
.*-------------------------------------------------------------------   03456100
.***AI.L18  XREQDATA CL8                                                03456200
         AIF   ('&XREQDATA' NE 'NO_REQDATA').ZI23                       03456300
&ZXREQDATA            SETC  ''             RESET INPUT/OUTPUT           03456400
.ZI23                 ANOP  ,                                           03456500
.*-------------------------------------------------------------------   03456600
.***AI.L25  XREQDATA CL8                                                03456700
                      AIF   ('&ZXREQDATA' EQ '').ZI23E                  03456800
                      AIF   ('&ZXREQDATA' EQ 'OUTPUT').ZI23E            03456900
&ZCGPR                SETC  '&XREQDATA'                                 03457000
.*                                                                      03457100
                      AIF   ('&XREQDATA'(1,1) NE '(').ZI23B             03457200
&ZCGPR   SETC  '0('.'&XREQDATA'(2,K'&XREQDATA-2).')'                    03457300
.ZI23B                ANOP  ,                                           03457400
.*                                                                      03457500
&ZOPN                 SETA  &ZOPN+1                                     03457600
&ZOPL(&ZOPN)          SETC  ' '                                         03457700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03457800
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            03457900
&ZOPD(&ZOPN)          SETC  '++ &ZXREQDATA XREQDATA'                    03458000
.*                                                                      03458100
.ZI23E                ANOP  ,                                           03458200
.*-------------------------------------------------------------------   03458300
.***AI.L18  XREQID CL8                                                  03458400
         AIF   ('&XREQID' NE 'NO_REQID').ZI24                           03458500
&ZXREQID              SETC  ''             RESET INPUT/OUTPUT           03458600
.ZI24                 ANOP  ,                                           03458700
.*-------------------------------------------------------------------   03458800
.***AI.L25  XREQID CL8                                                  03458900
                      AIF   ('&ZXREQID' EQ '').ZI24E                    03459000
                      AIF   ('&ZXREQID' EQ 'OUTPUT').ZI24E              03459100
&ZCGPR                SETC  '&XREQID'                                   03459200
.*                                                                      03459300
                      AIF   ('&XREQID'(1,1) NE '(').ZI24B               03459400
&ZCGPR   SETC  '0('.'&XREQID'(2,K'&XREQID-2).')'                        03459500
.ZI24B                ANOP  ,                                           03459600
.*                                                                      03459700
&ZOPN                 SETA  &ZOPN+1                                     03459800
&ZOPL(&ZOPN)          SETC  ' '                                         03459900
&ZOPO(&ZOPN)          SETC  'MVC'                                       03460000
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            03460100
&ZOPD(&ZOPN)          SETC  '++ &ZXREQID XREQID'                        03460200
.*                                                                      03460300
.ZI24E                ANOP  ,                                           03460400
.*-------------------------------------------------------------------   03460500
.***AI.L05 XSHLFLGS1 BL1                                                03460600
&ZW                   SETC  ''                                          03460700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03460800
.*-------------------------------------------------------------------   03460900
.***AI.L08 XSHLFLGS1 "BUFFER"                                           03461000
.***      BL1'1XXXXXXX'                                                 03461100
         AIF   ('&BUFFER' EQ '').ZI30A                                  03461200
&ZW                   SETC  '&ZW.1'                                     03461300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03461400
                      AGO   .ZI30C                                      03461500
.*                                                                      03461600
.ZI30A                ANOP  ,                                           03461700
&ZW                   SETC  '&ZW.0'                                     03461800
.ZI30C                ANOP  ,                                           03461900
.*-------------------------------------------------------------------   03462000
.***AI.L08 XSHLFLGS1 "BUFLIST"                                          03462100
.***      BL1'X1XXXXXX'                                                 03462200
         AIF   ('&BUFLIST' EQ '').ZI31A                                 03462300
&ZW                   SETC  '&ZW.1'                                     03462400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03462500
                      AGO   .ZI31C                                      03462600
.*                                                                      03462700
.ZI31A                ANOP  ,                                           03462800
&ZW                   SETC  '&ZW.0'                                     03462900
.ZI31C                ANOP  ,                                           03463000
.*-------------------------------------------------------------------   03463100
.***AI.L08 XSHLFLGS1 "ADJAREA"                                          03463200
.***      BL1'XX1XXXXX'                                                 03463300
         AIF   ('&ADJAREA' EQ '').ZI32A                                 03463400
&ZW                   SETC  '&ZW.1'                                     03463500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03463600
                      AGO   .ZI32C                                      03463700
.*                                                                      03463800
.ZI32A                ANOP  ,                                           03463900
&ZW                   SETC  '&ZW.0'                                     03464000
.ZI32C                ANOP  ,                                           03464100
.*-------------------------------------------------------------------   03464200
.***AI.L08 XSHLFLGS1 "ANSAREA"                                          03464300
.***      BL1'XXX1XXXX'                                                 03464400
         AIF   ('&ANSAREA' EQ '').ZI33A                                 03464500
         AIF   ('&ANSAREA' EQ '').ZI33A                                 03464600
&ZW                   SETC  '&ZW.1'                                     03464700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03464800
                      AGO   .ZI33C                                      03464900
.*                                                                      03465000
.ZI33A                ANOP  ,                                           03465100
&ZW                   SETC  '&ZW.0'                                     03465200
.ZI33C                ANOP  ,                                           03465300
.*-------------------------------------------------------------------   03465400
.***AI.L08 XSHLFLGS1 "NO"                                               03465500
.***      BL1'XXXX1XXX'                                                 03465600
         AIF   ('&XPAGEABLE' NE 'NO').ZI34A                             03465700
&ZW                   SETC  '&ZW.1'                                     03465800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03465900
                      AGO   .ZI34C                                      03466000
.*                                                                      03466100
.ZI34A                ANOP  ,                                           03466200
&ZW                   SETC  '&ZW.0'                                     03466300
.ZI34C                ANOP  ,                                           03466400
.*-------------------------------------------------------------------   03466500
.***AI.L08 XSHLFLGS1 "BUFSTGKEY"                                        03466600
.***      BL1'XXXXX1XX'                                                 03466700
         AIF   ('&BUFSTGKEY' EQ '').ZI35A                               03466800
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03466900
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03467000
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03467100
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03467200
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03467300
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03467400
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03467500
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI35A                    03467600
&ZW                   SETC  '&ZW.1'                                     03467700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03467800
                      AGO   .ZI35C                                      03467900
.*                                                                      03468000
.ZI35A                ANOP  ,                                           03468100
&ZW                   SETC  '&ZW.0'                                     03468200
.ZI35C                ANOP  ,                                           03468300
.*-------------------------------------------------------------------   03468400
.***AI.L08 XSHLFLGS1 "REAL"                                             03468500
.***      BL1'XXXXXX1X'                                                 03468600
         AIF   ('&XBUFADDRTYPE' NE 'REAL').ZI36A                        03468700
&ZW                   SETC  '&ZW.1'                                     03468800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03468900
                      AGO   .ZI36C                                      03469000
.*                                                                      03469100
.ZI36A                ANOP  ,                                           03469200
&ZW                   SETC  '&ZW.0'                                     03469300
.ZI36C                ANOP  ,                                           03469400
.*-------------------------------------------------------------------   03469500
.***AI.L08 XSHLFLGS1 "LISTKEYAREA"                                      03469600
.***      BL1'XXXXXXX1'                                                 03469700
         AIF   ('&LISTKEYAREA' EQ '').ZI37A                             03469800
         AIF   ('&LISTKEYAREA' EQ 'NO').ZI37A                           03469900
&ZW                   SETC  '&ZW.1'                                     03470000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03470100
                      AGO   .ZI37C                                      03470200
.*                                                                      03470300
.ZI37A                ANOP  ,                                           03470400
&ZW                   SETC  '&ZW.0'                                     03470500
.ZI37C                ANOP  ,                                           03470600
.*-------------------------------------------------------------------   03470700
.***AI.L11 XSHLFLGS1 BL1                                                03470800
                      AIF   ('&ZCLNG' NE 'YES').ZI37E  ALL ZERO BITS    03470900
&ZOPN                 SETA  &ZOPN+1                                     03471000
&ZOPL(&ZOPN)          SETC  ' '                                         03471100
&ZOPO(&ZOPN)          SETC  'OI'                                        03471200
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             03471300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03471400
.ZI37E                ANOP  ,                                           03471500
.*-------------------------------------------------------------------   03471600
.***AI.L05 XSHLFLGS2 BL1                                                03471700
&ZW                   SETC  ''                                          03471800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03471900
.*-------------------------------------------------------------------   03472000
.***AI.L08 XSHLFLGS2 "SYNCECB"                                          03472100
.***      BL1'1XXXXXXX'                                                 03472200
         AIF   ('&XMODE' NE 'SYNCECB').ZI39A                            03472300
&ZW                   SETC  '&ZW.1'                                     03472400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03472500
                      AGO   .ZI39C                                      03472600
.*                                                                      03472700
.ZI39A                ANOP  ,                                           03472800
&ZW                   SETC  '&ZW.0'                                     03472900
.ZI39C                ANOP  ,                                           03473000
.*-------------------------------------------------------------------   03473100
.***AI.L08 XSHLFLGS2 "SYNCEXIT"                                         03473200
.***      BL1'X1XXXXXX'                                                 03473300
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI40A                           03473400
&ZW                   SETC  '&ZW.1'                                     03473500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03473600
                      AGO   .ZI40C                                      03473700
.*                                                                      03473800
.ZI40A                ANOP  ,                                           03473900
&ZW                   SETC  '&ZW.0'                                     03474000
.ZI40C                ANOP  ,                                           03474100
.*-------------------------------------------------------------------   03474200
.***AI.L08 XSHLFLGS2 "SYNCTOKEN"                                        03474300
.***      BL1'XX1XXXXX'                                                 03474400
         AIF   ('&XMODE' NE 'SYNCTOKEN').ZI41A                          03474500
&ZW                   SETC  '&ZW.1'                                     03474600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03474700
                      AGO   .ZI41C                                      03474800
.*                                                                      03474900
.ZI41A                ANOP  ,                                           03475000
&ZW                   SETC  '&ZW.0'                                     03475100
.ZI41C                ANOP  ,                                           03475200
.*-------------------------------------------------------------------   03475300
.***AI.L08 XSHLFLGS2 "ASYNCECB"                                         03475400
.***      BL1'XXX1XXXX'                                                 03475500
         AIF   ('&XMODE' NE 'ASYNCECB').ZI42A                           03475600
&ZW                   SETC  '&ZW.1'                                     03475700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03475800
                      AGO   .ZI42C                                      03475900
.*                                                                      03476000
.ZI42A                ANOP  ,                                           03476100
&ZW                   SETC  '&ZW.0'                                     03476200
.ZI42C                ANOP  ,                                           03476300
.*-------------------------------------------------------------------   03476400
.***AI.L08 XSHLFLGS2 "ASYNCEXIT"                                        03476500
.***      BL1'XXXX1XXX'                                                 03476600
         AIF   ('&XMODE' NE 'ASYNCEXIT').ZI43A                          03476700
&ZW                   SETC  '&ZW.1'                                     03476800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03476900
                      AGO   .ZI43C                                      03477000
.*                                                                      03477100
.ZI43A                ANOP  ,                                           03477200
&ZW                   SETC  '&ZW.0'                                     03477300
.ZI43C                ANOP  ,                                           03477400
.*-------------------------------------------------------------------   03477500
.***AI.L08 XSHLFLGS2 "ASYNCTOKEN"                                       03477600
.***      BL1'XXXXX1XX'                                                 03477700
         AIF   ('&XMODE' NE 'ASYNCTOKEN').ZI44A                         03477800
&ZW                   SETC  '&ZW.1'                                     03477900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03478000
                      AGO   .ZI44C                                      03478100
.*                                                                      03478200
.ZI44A                ANOP  ,                                           03478300
&ZW                   SETC  '&ZW.0'                                     03478400
.ZI44C                ANOP  ,                                           03478500
.*-------------------------------------------------------------------   03478600
.***AI.L08 XSHLFLGS2 "ASYNCNORESPONSE"                                  03478700
.***      BL1'XXXXXX1X'                                                 03478800
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ZI45A                    03478900
&ZW                   SETC  '&ZW.10'                                    03479000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03479100
                      AGO   .ZI45C                                      03479200
.*                                                                      03479300
.ZI45A                ANOP  ,                                           03479400
&ZW                   SETC  '&ZW.00'                                    03479500
.ZI45C                ANOP  ,                                           03479600
.*-------------------------------------------------------------------   03479700
.***AI.L11 XSHLFLGS2 BL1                                                03479800
                      AIF   ('&ZCLNG' NE 'YES').ZI45E  ALL ZERO BITS    03479900
&ZOPN                 SETA  &ZOPN+1                                     03480000
&ZOPL(&ZOPN)          SETC  ' '                                         03480100
&ZOPO(&ZOPN)          SETC  'OI'                                        03480200
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             03480300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03480400
.ZI45E                ANOP  ,                                           03480500
.*-------------------------------------------------------------------   03480600
.***AI.L05 XSHLFLGS3 BL1                                                03480700
&ZW                   SETC  ''                                          03480800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03480900
.*-------------------------------------------------------------------   03481000
.***AI.L08 XSHLFLGS3 "HELDBY"                                           03481100
.***      BL1'XXX1XXXX'                                                 03481200
         AIF   ('&XLOCKOPER' NE 'HELDBY').ZI47A                         03481300
&ZW                   SETC  '&ZW.0001'                                  03481400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03481500
                      AGO   .ZI47C                                      03481600
.*                                                                      03481700
.ZI47A                ANOP  ,                                           03481800
&ZW                   SETC  '&ZW.0000'                                  03481900
.ZI47C                ANOP  ,                                           03482000
.*-------------------------------------------------------------------   03482100
.***AI.L08 XSHLFLGS3 "LOCKCOMP"                                         03482200
.***      BL1'XXXXXXX1'                                                 03482300
         AIF   ('&LOCKCOMP' EQ '').ZI48A                                03482400
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI48A                     03482500
&ZW                   SETC  '&ZW.0001'                                  03482600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03482700
                      AGO   .ZI48C                                      03482800
.*                                                                      03482900
.ZI48A                ANOP  ,                                           03483000
&ZW                   SETC  '&ZW.0000'                                  03483100
.ZI48C                ANOP  ,                                           03483200
.*-------------------------------------------------------------------   03483300
.***AI.L11 XSHLFLGS3 BL1                                                03483400
                      AIF   ('&ZCLNG' NE 'YES').ZI48E  ALL ZERO BITS    03483500
&ZOPN                 SETA  &ZOPN+1                                     03483600
&ZOPL(&ZOPN)          SETC  ' '                                         03483700
&ZOPO(&ZOPN)          SETC  'OI'                                        03483800
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             03483900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03484000
.ZI48E                ANOP  ,                                           03484100
.*-------------------------------------------------------------------   03484200
.***AI.L05 XSHLFLGS4 BL1                                                03484300
&ZW                   SETC  ''                                          03484400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03484500
.*-------------------------------------------------------------------   03484600
.***AI.L08 XSHLFLGS4 "EXTRESTOKEN"                                      03484700
.***      BL1'XX1XXXXX'                                                 03484800
         AIF   ('&EXTRESTOKEN' EQ '').ZI50A                             03484900
&ZW                   SETC  '&ZW.001'                                   03485000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03485100
                      AGO   .ZI50C                                      03485200
.*                                                                      03485300
.ZI50A                ANOP  ,                                           03485400
&ZW                   SETC  '&ZW.000'                                   03485500
.ZI50C                ANOP  ,                                           03485600
.*-------------------------------------------------------------------   03485700
.***AI.L08 XSHLFLGS4 "64"                                               03485800
.***      BL1'XXX1XXXX'                                                 03485900
         AIF   ('&XBUFADDRSIZE' NE '64').ZI51A                          03486000
&ZW                   SETC  '&ZW.1'                                     03486100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03486200
                      AGO   .ZI51C                                      03486300
.*                                                                      03486400
.ZI51A                ANOP  ,                                           03486500
&ZW                   SETC  '&ZW.0'                                     03486600
.ZI51C                ANOP  ,                                           03486700
.*-------------------------------------------------------------------   03486800
.***AI.L08 XSHLFLGS4 "LIST"                                             03486900
.***      BL1'XXXXXXX1'                                                 03487000
&ZW                   SETC  '&ZW.0000'                                  03487100
.*-------------------------------------------------------------------   03487200
.***AI.L11 XSHLFLGS4 BL1                                                03487300
                      AIF   ('&ZCLNG' NE 'YES').ZI52E  ALL ZERO BITS    03487400
&ZOPN                 SETA  &ZOPN+1                                     03487500
&ZOPL(&ZOPN)          SETC  ' '                                         03487600
&ZOPO(&ZOPN)          SETC  'OI'                                        03487700
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             03487800
&ZOPD(&ZOPN)          SETC  '++ 1318 BL1'                               03487900
.ZI52E                ANOP  ,                                           03488000
.*-------------------------------------------------------------------   03488100
.***AI.L23 ALET XBUFFER F                                               03488200
         AIF   ('&ZXBUFFER' EQ '').ZI58G                                03488300
         AIF   ('&SYSASCE' EQ 'P').ZI58G   SYSSTATE PRIMARY             03488400
&ZCLNG                SETC  '&XBUFFER'                                  03488500
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI58E  IN AR                    03488600
.*                                                                      03488700
&ZCGPR                SETC  '14'                                        03488800
&ZOPN                 SETA  &ZOPN+1                                     03488900
&ZOPL(&ZOPN)          SETC  ' '                                         03489000
&ZOPO(&ZOPN)          SETC  'LAE'                                       03489100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03489200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      03489300
                      AGO   .ZI58F                                      03489400
.*                                                                      03489500
.ZI58E                ANOP  ,                                           03489600
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               03489700
.*                                                                      03489800
.ZI58F                ANOP  ,                                           03489900
.*                                                                      03490000
&ZOPN                 SETA  &ZOPN+1                                     03490100
&ZOPL(&ZOPN)          SETC  ' '                                         03490200
&ZOPO(&ZOPN)          SETC  'STAM'                                      03490300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,28(1)'                       03490400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      03490500
.*                                                                      03490600
.ZI58G                ANOP  ,                                           03490700
.*-------------------------------------------------------------------   03490800
.***AI.L25  XBUFSIZE F                                                  03490900
                      AIF   ('&ZXBUFSIZE' EQ '').ZI59E                  03491000
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI59E            03491100
&ZCGPR                SETC  '&XBUFSIZE'                                 03491200
.*                                                                      03491300
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI59B             03491400
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    03491500
                      AGO   .ZI59D                                      03491600
.ZI59B                ANOP  ,                                           03491700
.*                                                                      03491800
&ZC                   SETC  '&XBUFSIZE'(1,1)                            03491900
                      AIF   (T'&ZC NE 'N').ZI59D                        03492000
&ZC                   SETC  '&XBUFSIZE'                                 03492100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI59D               03492200
&ZCGPR                SETC  '=AL4(&XBUFSIZE)'                           03492300
.*                                                                      03492400
.ZI59D                ANOP  ,                                           03492500
.*                                                                      03492600
&ZOPN                 SETA  &ZOPN+1                                     03492700
&ZOPL(&ZOPN)          SETC  ' '                                         03492800
&ZOPO(&ZOPN)          SETC  'MVC'                                       03492900
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            03493000
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    03493100
.*                                                                      03493200
.ZI59E                ANOP  ,                                           03493300
.*-------------------------------------------------------------------   03493400
.***AI.L19  XBUFFER A                                                   03493500
                      AIF   ('&ZXBUFFER' EQ '').ZI60H                   03493600
&ZCLNG                SETC  '&XBUFFER'                                  03493700
&ZCGPR                SETC  '14'                                        03493800
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI60F  IN GPR                   03493900
.*                                                                      03494000
&ZOPN                 SETA  &ZOPN+1                                     03494100
&ZOPL(&ZOPN)          SETC  ' '                                         03494200
&ZOPO(&ZOPN)          SETC  'LA'                                        03494300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03494400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      03494500
.*                                                                      03494600
                      AGO   .ZI60G                                      03494700
.*                                                                      03494800
.ZI60F                ANOP  ,                                           03494900
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               03495000
.*                                                                      03495100
.ZI60G                ANOP  ,                                           03495200
.*                                                                      03495300
&ZOPN                 SETA  &ZOPN+1                                     03495400
&ZOPL(&ZOPN)          SETC  ' '                                         03495500
&ZOPO(&ZOPN)          SETC  'ST'                                        03495600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             03495700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      03495800
.*                                                                      03495900
.ZI60H                ANOP  ,                                           03496000
.*-------------------------------------------------------------------   03496100
.***AI.L18  XBUFALET F                                                  03496200
         AIF   ('&XBUFALET' NE 'NO_BUFALET').ZI62                       03496300
&ZXBUFALET            SETC  ''             RESET INPUT/OUTPUT           03496400
.ZI62                 ANOP  ,                                           03496500
.*-------------------------------------------------------------------   03496600
.***AI.L25  XBUFALET F                                                  03496700
                      AIF   ('&ZXBUFALET' EQ '').ZI62E                  03496800
                      AIF   ('&ZXBUFALET' EQ 'OUTPUT').ZI62E            03496900
&ZCGPR                SETC  '&XBUFALET'                                 03497000
.*                                                                      03497100
                      AIF   ('&XBUFALET'(1,1) NE '(').ZI62B             03497200
&ZCGPR   SETC  '0('.'&XBUFALET'(2,K'&XBUFALET-2).')'                    03497300
                      AGO   .ZI62D                                      03497400
.ZI62B                ANOP  ,                                           03497500
.*                                                                      03497600
&ZC                   SETC  '&XBUFALET'(1,1)                            03497700
                      AIF   (T'&ZC NE 'N').ZI62D                        03497800
&ZC                   SETC  '&XBUFALET'                                 03497900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI62D               03498000
&ZCGPR                SETC  '=AL4(&XBUFALET)'                           03498100
.*                                                                      03498200
.ZI62D                ANOP  ,                                           03498300
.*                                                                      03498400
&ZOPN                 SETA  &ZOPN+1                                     03498500
&ZOPL(&ZOPN)          SETC  ' '                                         03498600
&ZOPO(&ZOPN)          SETC  'MVC'                                       03498700
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            03498800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFALET XBUFALET'                    03498900
.*                                                                      03499000
.ZI62E                ANOP  ,                                           03499100
.*-------------------------------------------------------------------   03499200
.***AI.L23 ALET XBUFLIST F                                              03499300
         AIF   ('&ZXBUFLIST' EQ '').ZI63G                               03499400
         AIF   ('&SYSASCE' EQ 'P').ZI63G   SYSSTATE PRIMARY             03499500
&ZCLNG                SETC  '&XBUFLIST'                                 03499600
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI63E  IN AR                   03499700
.*                                                                      03499800
&ZCGPR                SETC  '14'                                        03499900
&ZOPN                 SETA  &ZOPN+1                                     03500000
&ZOPL(&ZOPN)          SETC  ' '                                         03500100
&ZOPO(&ZOPN)          SETC  'LAE'                                       03500200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03500300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    03500400
                      AGO   .ZI63F                                      03500500
.*                                                                      03500600
.ZI63E                ANOP  ,                                           03500700
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             03500800
.*                                                                      03500900
.ZI63F                ANOP  ,                                           03501000
.*                                                                      03501100
&ZOPN                 SETA  &ZOPN+1                                     03501200
&ZOPL(&ZOPN)          SETC  ' '                                         03501300
&ZOPO(&ZOPN)          SETC  'STAM'                                      03501400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,32(1)'                       03501500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    03501600
.*                                                                      03501700
.ZI63G                ANOP  ,                                           03501800
.*-------------------------------------------------------------------   03501900
.***AI.L19  XBUFLIST A                                                  03502000
                      AIF   ('&ZXBUFLIST' EQ '').ZI64H                  03502100
&ZCLNG                SETC  '&XBUFLIST'                                 03502200
&ZCGPR                SETC  '14'                                        03502300
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI64F  IN GPR                  03502400
         AIF   ('&SYSASCE' NE 'P').ZI64G   SYSSTATE PRIMARY             03502500
.*                                                                      03502600
&ZOPN                 SETA  &ZOPN+1                                     03502700
&ZOPL(&ZOPN)          SETC  ' '                                         03502800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03502900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03503000
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    03503100
.*                                                                      03503200
                      AGO   .ZI64G                                      03503300
.*                                                                      03503400
.ZI64F                ANOP  ,                                           03503500
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             03503600
.*                                                                      03503700
.ZI64G                ANOP  ,                                           03503800
.*                                                                      03503900
&ZOPN                 SETA  &ZOPN+1                                     03504000
&ZOPL(&ZOPN)          SETC  ' '                                         03504100
&ZOPO(&ZOPN)          SETC  'ST'                                        03504200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             03504300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    03504400
.*                                                                      03504500
.ZI64H                ANOP  ,                                           03504600
.*-------------------------------------------------------------------   03504700
.***AI.L18 ALET XADJAREA F                                              03504800
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI66                       03504900
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           03505000
.ZI66                 ANOP  ,                                           03505100
.*-------------------------------------------------------------------   03505200
.***AI.L23 ALET XADJAREA F                                              03505300
         AIF   ('&ZXADJAREA' EQ '').ZI66G                               03505400
         AIF   ('&SYSASCE' EQ 'P').ZI66G   SYSSTATE PRIMARY             03505500
&ZCLNG                SETC  '&XADJAREA'                                 03505600
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI66E  IN AR                   03505700
.*                                                                      03505800
&ZCGPR                SETC  '14'                                        03505900
&ZOPN                 SETA  &ZOPN+1                                     03506000
&ZOPL(&ZOPN)          SETC  ' '                                         03506100
&ZOPO(&ZOPN)          SETC  'LAE'                                       03506200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03506300
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    03506400
                      AGO   .ZI66F                                      03506500
.*                                                                      03506600
.ZI66E                ANOP  ,                                           03506700
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             03506800
.*                                                                      03506900
.ZI66F                ANOP  ,                                           03507000
.*                                                                      03507100
&ZOPN                 SETA  &ZOPN+1                                     03507200
&ZOPL(&ZOPN)          SETC  ' '                                         03507300
&ZOPO(&ZOPN)          SETC  'STAM'                                      03507400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       03507500
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    03507600
.*                                                                      03507700
.ZI66G                ANOP  ,                                           03507800
.*-------------------------------------------------------------------   03507900
.***AI.L18  XADJAREA A                                                  03508000
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI67                       03508100
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           03508200
.ZI67                 ANOP  ,                                           03508300
.*-------------------------------------------------------------------   03508400
.***AI.L19  XADJAREA A                                                  03508500
                      AIF   ('&ZXADJAREA' EQ '').ZI67H                  03508600
&ZCLNG                SETC  '&XADJAREA'                                 03508700
&ZCGPR                SETC  '14'                                        03508800
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI67F  IN GPR                  03508900
         AIF   ('&SYSASCE' NE 'P').ZI67G   SYSSTATE PRIMARY             03509000
.*                                                                      03509100
&ZOPN                 SETA  &ZOPN+1                                     03509200
&ZOPL(&ZOPN)          SETC  ' '                                         03509300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03509400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03509500
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    03509600
.*                                                                      03509700
                      AGO   .ZI67G                                      03509800
.*                                                                      03509900
.ZI67F                ANOP  ,                                           03510000
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             03510100
.*                                                                      03510200
.ZI67G                ANOP  ,                                           03510300
.*                                                                      03510400
&ZOPN                 SETA  &ZOPN+1                                     03510500
&ZOPL(&ZOPN)          SETC  ' '                                         03510600
&ZOPO(&ZOPN)          SETC  'ST'                                        03510700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             03510800
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    03510900
.*                                                                      03511000
.ZI67H                ANOP  ,                                           03511100
.*-------------------------------------------------------------------   03511200
.***AI.L23 ALET XANSAREA F                                              03511300
         AIF   ('&ZXANSAREA' EQ '').ZI69G                               03511400
         AIF   ('&SYSASCE' EQ 'P').ZI69G   SYSSTATE PRIMARY             03511500
&ZCLNG                SETC  '&XANSAREA'                                 03511600
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI69E  IN AR                   03511700
.*                                                                      03511800
&ZCGPR                SETC  '14'                                        03511900
&ZOPN                 SETA  &ZOPN+1                                     03512000
&ZOPL(&ZOPN)          SETC  ' '                                         03512100
&ZOPO(&ZOPN)          SETC  'LAE'                                       03512200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03512300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    03512400
                      AGO   .ZI69F                                      03512500
.*                                                                      03512600
.ZI69E                ANOP  ,                                           03512700
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             03512800
.*                                                                      03512900
.ZI69F                ANOP  ,                                           03513000
.*                                                                      03513100
&ZOPN                 SETA  &ZOPN+1                                     03513200
&ZOPL(&ZOPN)          SETC  ' '                                         03513300
&ZOPO(&ZOPN)          SETC  'STAM'                                      03513400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,48(1)'                       03513500
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    03513600
.*                                                                      03513700
.ZI69G                ANOP  ,                                           03513800
.*-------------------------------------------------------------------   03513900
.***AI.L19  XANSAREA A                                                  03514000
                      AIF   ('&ZXANSAREA' EQ '').ZI70H                  03514100
&ZCLNG                SETC  '&XANSAREA'                                 03514200
&ZCGPR                SETC  '14'                                        03514300
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI70F  IN GPR                  03514400
         AIF   ('&SYSASCE' NE 'P').ZI70G   SYSSTATE PRIMARY             03514500
.*                                                                      03514600
&ZOPN                 SETA  &ZOPN+1                                     03514700
&ZOPL(&ZOPN)          SETC  ' '                                         03514800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03514900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03515000
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    03515100
.*                                                                      03515200
                      AGO   .ZI70G                                      03515300
.*                                                                      03515400
.ZI70F                ANOP  ,                                           03515500
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             03515600
.*                                                                      03515700
.ZI70G                ANOP  ,                                           03515800
.*                                                                      03515900
&ZOPN                 SETA  &ZOPN+1                                     03516000
&ZOPL(&ZOPN)          SETC  ' '                                         03516100
&ZOPO(&ZOPN)          SETC  'ST'                                        03516200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             03516300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    03516400
.*                                                                      03516500
.ZI70H                ANOP  ,                                           03516600
.*-------------------------------------------------------------------   03516700
.***AI.L25  XREQECB AL4                                                 03516800
                      AIF   ('&ZXREQECB' EQ '').ZI72E                   03516900
                      AIF   ('&ZXREQECB' EQ 'OUTPUT').ZI72E             03517000
&ZCGPR                SETC  '&XREQECB'                                  03517100
.*                                                                      03517200
                      AIF   ('&XREQECB'(1,1) NE '(').ZI72B              03517300
&ZCGPR   SETC  '0('.'&XREQECB'(2,K'&XREQECB-2).')'                      03517400
                      AGO   .ZI72D                                      03517500
.ZI72B                ANOP  ,                                           03517600
.*                                                                      03517700
&ZC                   SETC  '&XREQECB'(1,1)                             03517800
                      AIF   (T'&ZC NE 'N').ZI72D                        03517900
&ZC                   SETC  '&XREQECB'                                  03518000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI72D               03518100
&ZCGPR                SETC  '=AL4(&XREQECB)'                            03518200
.*                                                                      03518300
.ZI72D                ANOP  ,                                           03518400
.*                                                                      03518500
&ZOPN                 SETA  &ZOPN+1                                     03518600
&ZOPL(&ZOPN)          SETC  ' '                                         03518700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03518800
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            03518900
&ZOPD(&ZOPN)          SETC  '++ &ZXREQECB XREQECB'                      03519000
.*                                                                      03519100
.ZI72E                ANOP  ,                                           03519200
.*-------------------------------------------------------------------   03519300
.***AI.L23 ALET XREQTOKEN F                                             03519400
         AIF   ('&ZXREQTOKEN' EQ '').ZI75G                              03519500
         AIF   ('&SYSASCE' EQ 'P').ZI75G   SYSSTATE PRIMARY             03519600
&ZCLNG                SETC  '&XREQTOKEN'                                03519700
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI75E  IN AR                  03519800
.*                                                                      03519900
&ZCGPR                SETC  '14'                                        03520000
&ZOPN                 SETA  &ZOPN+1                                     03520100
&ZOPL(&ZOPN)          SETC  ' '                                         03520200
&ZOPO(&ZOPN)          SETC  'LAE'                                       03520300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03520400
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  03520500
                      AGO   .ZI75F                                      03520600
.*                                                                      03520700
.ZI75E                ANOP  ,                                           03520800
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           03520900
.*                                                                      03521000
.ZI75F                ANOP  ,                                           03521100
.*                                                                      03521200
&ZOPN                 SETA  &ZOPN+1                                     03521300
&ZOPL(&ZOPN)          SETC  ' '                                         03521400
&ZOPO(&ZOPN)          SETC  'STAM'                                      03521500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       03521600
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  03521700
.*                                                                      03521800
.ZI75G                ANOP  ,                                           03521900
.*-------------------------------------------------------------------   03522000
.***AI.L19  XREQTOKEN A                                                 03522100
                      AIF   ('&ZXREQTOKEN' EQ '').ZI76H                 03522200
&ZCLNG                SETC  '&XREQTOKEN'                                03522300
&ZCGPR                SETC  '14'                                        03522400
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI76F  IN GPR                 03522500
         AIF   ('&SYSASCE' NE 'P').ZI76G   SYSSTATE PRIMARY             03522600
.*                                                                      03522700
&ZOPN                 SETA  &ZOPN+1                                     03522800
&ZOPL(&ZOPN)          SETC  ' '                                         03522900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03523000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03523100
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  03523200
.*                                                                      03523300
                      AGO   .ZI76G                                      03523400
.*                                                                      03523500
.ZI76F                ANOP  ,                                           03523600
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           03523700
.*                                                                      03523800
.ZI76G                ANOP  ,                                           03523900
.*                                                                      03524000
&ZOPN                 SETA  &ZOPN+1                                     03524100
&ZOPL(&ZOPN)          SETC  ' '                                         03524200
&ZOPO(&ZOPN)          SETC  'ST'                                        03524300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             03524400
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  03524500
.*                                                                      03524600
.ZI76H                ANOP  ,                                           03524700
.*-------------------------------------------------------------------   03524800
.***AI.L18 ALET XLISTKEYAREA F                                          03524900
         AIF   ('&XLISTKEYAREA' NE 'NO').ZI78                           03525000
&ZXLISTKEYAREA        SETC  ''             RESET INPUT/OUTPUT           03525100
.ZI78                 ANOP  ,                                           03525200
.*-------------------------------------------------------------------   03525300
.***AI.L23 ALET XLISTKEYAREA F                                          03525400
         AIF   ('&ZXLISTKEYAREA' EQ '').ZI78G                           03525500
         AIF   ('&SYSASCE' EQ 'P').ZI78G   SYSSTATE PRIMARY             03525600
&ZCLNG                SETC  '&XLISTKEYAREA'                             03525700
         AIF   ('&XLISTKEYAREA'(1,1) EQ '(').ZI78E  IN AR               03525800
.*                                                                      03525900
&ZCGPR                SETC  '14'                                        03526000
&ZOPN                 SETA  &ZOPN+1                                     03526100
&ZOPL(&ZOPN)          SETC  ' '                                         03526200
&ZOPO(&ZOPN)          SETC  'LAE'                                       03526300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03526400
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYAREA XLISTKEYAREA'            03526500
                      AGO   .ZI78F                                      03526600
.*                                                                      03526700
.ZI78E                ANOP  ,                                           03526800
&ZCGPR   SETC  '&XLISTKEYAREA'(2,K'&XLISTKEYAREA-2)                     03526900
.*                                                                      03527000
.ZI78F                ANOP  ,                                           03527100
.*                                                                      03527200
&ZOPN                 SETA  &ZOPN+1                                     03527300
&ZOPL(&ZOPN)          SETC  ' '                                         03527400
&ZOPO(&ZOPN)          SETC  'STAM'                                      03527500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,72(1)'                       03527600
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYAREA XLISTKEYAREA'            03527700
.*                                                                      03527800
.ZI78G                ANOP  ,                                           03527900
.*-------------------------------------------------------------------   03528000
.***AI.L18  XLISTKEYAREA A                                              03528100
         AIF   ('&XLISTKEYAREA' NE 'NO').ZI79                           03528200
&ZXLISTKEYAREA        SETC  ''             RESET INPUT/OUTPUT           03528300
.ZI79                 ANOP  ,                                           03528400
.*-------------------------------------------------------------------   03528500
.***AI.L19  XLISTKEYAREA A                                              03528600
                      AIF   ('&ZXLISTKEYAREA' EQ '').ZI79H              03528700
&ZCLNG                SETC  '&XLISTKEYAREA'                             03528800
&ZCGPR                SETC  '14'                                        03528900
         AIF   ('&XLISTKEYAREA'(1,1) EQ '(').ZI79F  IN GPR              03529000
         AIF   ('&SYSASCE' NE 'P').ZI79G   SYSSTATE PRIMARY             03529100
.*                                                                      03529200
&ZOPN                 SETA  &ZOPN+1                                     03529300
&ZOPL(&ZOPN)          SETC  ' '                                         03529400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    03529500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             03529600
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYAREA XLISTKEYAREA'            03529700
.*                                                                      03529800
                      AGO   .ZI79G                                      03529900
.*                                                                      03530000
.ZI79F                ANOP  ,                                           03530100
&ZCGPR   SETC  '&XLISTKEYAREA'(2,K'&XLISTKEYAREA-2)                     03530200
.*                                                                      03530300
.ZI79G                ANOP  ,                                           03530400
.*                                                                      03530500
&ZOPN                 SETA  &ZOPN+1                                     03530600
&ZOPL(&ZOPN)          SETC  ' '                                         03530700
&ZOPO(&ZOPN)          SETC  'ST'                                        03530800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,76(,1)'                             03530900
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYAREA XLISTKEYAREA'            03531000
.*                                                                      03531100
.ZI79H                ANOP  ,                                           03531200
.*-------------------------------------------------------------------   03531300
.***AI.L05 XSHLFLGSA1 BL1                                               03531400
&ZW                   SETC  ''                                          03531500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03531600
.*-------------------------------------------------------------------   03531700
.***AI.L08 XSHLFLGSA1 "IXLLSTC"                                         03531800
.***      BL1'1XXXXXXX'                                                 03531900
&ZW                   SETC  '&ZW.0'                                     03532000
.*-------------------------------------------------------------------   03532100
.***AI.L08 XSHLFLGSA1 "IXLLSTE"                                         03532200
.***      BL1'X1XXXXXX'                                                 03532300
&ZW                   SETC  '&ZW.0'                                     03532400
.*-------------------------------------------------------------------   03532500
.***AI.L08 XSHLFLGSA1 "IXLLSTM"                                         03532600
.***      BL1'XX1XXXXX'                                                 03532700
&ZW                   SETC  '&ZW.100000'                                03532800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03532900
.*-------------------------------------------------------------------   03533000
.***AI.L11 XSHLFLGSA1 BL1                                               03533100
                      AIF   ('&ZCLNG' NE 'YES').ZI84E  ALL ZERO BITS    03533200
&ZOPN                 SETA  &ZOPN+1                                     03533300
&ZOPL(&ZOPN)          SETC  ' '                                         03533400
&ZOPO(&ZOPN)          SETC  'OI'                                        03533500
&ZOPV(&ZOPN)          SETC  '88(1),B''&ZW'''                            03533600
&ZOPD(&ZOPN)          SETC  '++ 1318 BL1'                               03533700
.ZI84E                ANOP  ,                                           03533800
.*-------------------------------------------------------------------   03533900
.***AI.L18  XEXTRESTOKEN CL16                                           03534000
         AIF   ('&XEXTRESTOKEN' NE 'NO_EXTRESTOKEN').ZI89               03534100
&ZXEXTRESTOKEN        SETC  ''             RESET INPUT/OUTPUT           03534200
.ZI89                 ANOP  ,                                           03534300
.*-------------------------------------------------------------------   03534400
.***AI.L25  XEXTRESTOKEN CL16                                           03534500
                      AIF   ('&ZXEXTRESTOKEN' EQ '').ZI89E              03534600
                      AIF   ('&ZXEXTRESTOKEN' EQ 'OUTPUT').ZI89E        03534700
&ZCGPR                SETC  '&XEXTRESTOKEN'                             03534800
.*                                                                      03534900
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZI89B         03535000
&ZCGPR   SETC  '0('.'&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2).')'            03535100
.ZI89B                ANOP  ,                                           03535200
.*                                                                      03535300
&ZOPN                 SETA  &ZOPN+1                                     03535400
&ZOPL(&ZOPN)          SETC  ' '                                         03535500
&ZOPO(&ZOPN)          SETC  'MVC'                                       03535600
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           03535700
&ZOPD(&ZOPN)          SETC  '++ &ZXEXTRESTOKEN XEXTRESTOKEN'            03535800
.*                                                                      03535900
.ZI89E                ANOP  ,                                           03536000
.*-------------------------------------------------------------------   03536100
.***AI.L25  XBUFNUM XL1                                                 03536200
                      AIF   ('&ZXBUFNUM' EQ '').ZI95E                   03536300
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI95E             03536400
&ZCGPR                SETC  '&XBUFNUM'                                  03536500
.*                                                                      03536600
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI95B              03536700
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      03536800
                      AGO   .ZI95D                                      03536900
.ZI95B                ANOP  ,                                           03537000
.*                                                                      03537100
&ZC                   SETC  '&XBUFNUM'(1,1)                             03537200
                      AIF   (T'&ZC NE 'N').ZI95D                        03537300
&ZC                   SETC  '&XBUFNUM'                                  03537400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI95D               03537500
&ZCGPR                SETC  '=AL1(&XBUFNUM)'                            03537600
.*                                                                      03537700
.ZI95D                ANOP  ,                                           03537800
.*                                                                      03537900
&ZOPN                 SETA  &ZOPN+1                                     03538000
&ZOPL(&ZOPN)          SETC  ' '                                         03538100
&ZOPO(&ZOPN)          SETC  'MVC'                                       03538200
&ZOPV(&ZOPN)          SETC  '98(1,1),&ZCGPR'                            03538300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      03538400
.*                                                                      03538500
.ZI95E                ANOP  ,                                           03538600
.*-------------------------------------------------------------------   03538700
.***AI.L25  XBUFINCRNUM XL1                                             03538800
                      AIF   ('&ZXBUFINCRNUM' EQ '').ZI96E               03538900
                      AIF   ('&ZXBUFINCRNUM' EQ 'OUTPUT').ZI96E         03539000
&ZCGPR                SETC  '&XBUFINCRNUM'                              03539100
.*                                                                      03539200
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZI96B          03539300
&ZCGPR   SETC  '0('.'&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2).')'              03539400
                      AGO   .ZI96D                                      03539500
.ZI96B                ANOP  ,                                           03539600
.*                                                                      03539700
&ZC                   SETC  '&XBUFINCRNUM'(1,1)                         03539800
                      AIF   (T'&ZC NE 'N').ZI96D                        03539900
&ZC                   SETC  '&XBUFINCRNUM'                              03540000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI96D               03540100
&ZCGPR                SETC  '=AL1(&XBUFINCRNUM)'                        03540200
.*                                                                      03540300
.ZI96D                ANOP  ,                                           03540400
.*                                                                      03540500
&ZOPN                 SETA  &ZOPN+1                                     03540600
&ZOPL(&ZOPN)          SETC  ' '                                         03540700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03540800
&ZOPV(&ZOPN)          SETC  '99(1,1),&ZCGPR'                            03540900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFINCRNUM XBUFINCRNUM'              03541000
.*                                                                      03541100
.ZI96E                ANOP  ,                                           03541200
.*-------------------------------------------------------------------   03541300
.***AI.L18  XLOCKINDEX F                                                03541400
         AIF   ('&XLOCKINDEX' NE 'NO_LOCKINDEX').ZI104                  03541500
&ZXLOCKINDEX          SETC  ''             RESET INPUT/OUTPUT           03541600
.ZI104                ANOP  ,                                           03541700
.*-------------------------------------------------------------------   03541800
.***AI.L25  XLOCKINDEX F                                                03541900
                      AIF   ('&ZXLOCKINDEX' EQ '').ZI104E               03542000
                      AIF   ('&ZXLOCKINDEX' EQ 'OUTPUT').ZI104E         03542100
&ZCGPR                SETC  '&XLOCKINDEX'                               03542200
.*                                                                      03542300
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZI104B          03542400
&ZCGPR   SETC  '0('.'&XLOCKINDEX'(2,K'&XLOCKINDEX-2).')'                03542500
                      AGO   .ZI104D                                     03542600
.ZI104B               ANOP  ,                                           03542700
.*                                                                      03542800
&ZC                   SETC  '&XLOCKINDEX'(1,1)                          03542900
                      AIF   (T'&ZC NE 'N').ZI104D                       03543000
&ZC                   SETC  '&XLOCKINDEX'                               03543100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI104D              03543200
&ZCGPR                SETC  '=FL4''&XLOCKINDEX'''                       03543300
.*                                                                      03543400
.ZI104D               ANOP  ,                                           03543500
.*                                                                      03543600
&ZOPN                 SETA  &ZOPN+1                                     03543700
&ZOPL(&ZOPN)          SETC  ' '                                         03543800
&ZOPO(&ZOPN)          SETC  'MVC'                                       03543900
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           03544000
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKINDEX XLOCKINDEX'                03544100
.*                                                                      03544200
.ZI104E               ANOP  ,                                           03544300
.*-------------------------------------------------------------------   03544400
.***AI.L25  XLISTNUM F                                                  03544500
                      AIF   ('&ZXLISTNUM' EQ '').ZI105E                 03544600
                      AIF   ('&ZXLISTNUM' EQ 'OUTPUT').ZI105E           03544700
&ZCGPR                SETC  '&XLISTNUM'                                 03544800
.*                                                                      03544900
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZI105B            03545000
&ZCGPR   SETC  '0('.'&XLISTNUM'(2,K'&XLISTNUM-2).')'                    03545100
                      AGO   .ZI105D                                     03545200
.ZI105B               ANOP  ,                                           03545300
.*                                                                      03545400
&ZC                   SETC  '&XLISTNUM'(1,1)                            03545500
                      AIF   (T'&ZC NE 'N').ZI105D                       03545600
&ZC                   SETC  '&XLISTNUM'                                 03545700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI105D              03545800
&ZCGPR                SETC  '=AL4(&XLISTNUM)'                           03545900
.*                                                                      03546000
.ZI105D               ANOP  ,                                           03546100
.*                                                                      03546200
&ZOPN                 SETA  &ZOPN+1                                     03546300
&ZOPL(&ZOPN)          SETC  ' '                                         03546400
&ZOPO(&ZOPN)          SETC  'MVC'                                       03546500
&ZOPV(&ZOPN)          SETC  '116(4,1),&ZCGPR'                           03546600
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUM XLISTNUM'                    03546700
.*                                                                      03546800
.ZI105E               ANOP  ,                                           03546900
.*-------------------------------------------------------------------   03547000
.***AI.L25  XENTRYID CL12                                               03547100
                      AIF   ('&ZXENTRYID' EQ '').ZI106E                 03547200
                      AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZI106E           03547300
&ZCGPR                SETC  '&XENTRYID'                                 03547400
.*                                                                      03547500
                      AIF   ('&XENTRYID'(1,1) NE '(').ZI106B            03547600
&ZCGPR   SETC  '0('.'&XENTRYID'(2,K'&XENTRYID-2).')'                    03547700
.ZI106B               ANOP  ,                                           03547800
.*                                                                      03547900
&ZOPN                 SETA  &ZOPN+1                                     03548000
&ZOPL(&ZOPN)          SETC  ' '                                         03548100
&ZOPO(&ZOPN)          SETC  'MVC'                                       03548200
&ZOPV(&ZOPN)          SETC  '120(12,1),&ZCGPR'                          03548300
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYID XENTRYID'                    03548400
.*                                                                      03548500
.ZI106E               ANOP  ,                                           03548600
.*-------------------------------------------------------------------   03548700
.***AI.L25  XVERSCOMP CL8                                               03548800
                      AIF   ('&ZXVERSCOMP' EQ '').ZI108E                03548900
                      AIF   ('&ZXVERSCOMP' EQ 'OUTPUT').ZI108E          03549000
&ZCGPR                SETC  '&XVERSCOMP'                                03549100
.*                                                                      03549200
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZI108B           03549300
&ZCGPR   SETC  '0('.'&XVERSCOMP'(2,K'&XVERSCOMP-2).')'                  03549400
.ZI108B               ANOP  ,                                           03549500
.*                                                                      03549600
&ZOPN                 SETA  &ZOPN+1                                     03549700
&ZOPL(&ZOPN)          SETC  ' '                                         03549800
&ZOPO(&ZOPN)          SETC  'MVC'                                       03549900
&ZOPV(&ZOPN)          SETC  '140(8,1),&ZCGPR'                           03550000
&ZOPD(&ZOPN)          SETC  '++ &ZXVERSCOMP XVERSCOMP'                  03550100
.*                                                                      03550200
.ZI108E               ANOP  ,                                           03550300
.*-------------------------------------------------------------------   03550400
.***AI.L25  XKEYRANGEEND CL16                                           03550500
                      AIF   ('&ZXKEYRANGEEND' EQ '').ZI115E             03550600
                      AIF   ('&ZXKEYRANGEEND' EQ 'OUTPUT').ZI115E       03550700
&ZCGPR                SETC  '&XKEYRANGEEND'                             03550800
.*                                                                      03550900
                      AIF   ('&XKEYRANGEEND'(1,1) NE '(').ZI115B        03551000
&ZCGPR   SETC  '0('.'&XKEYRANGEEND'(2,K'&XKEYRANGEEND-2).')'            03551100
.ZI115B               ANOP  ,                                           03551200
.*                                                                      03551300
&ZOPN                 SETA  &ZOPN+1                                     03551400
&ZOPL(&ZOPN)          SETC  ' '                                         03551500
&ZOPO(&ZOPN)          SETC  'MVC'                                       03551600
&ZOPV(&ZOPN)          SETC  '196(16,1),&ZCGPR'                          03551700
&ZOPD(&ZOPN)          SETC  '++ &ZXKEYRANGEEND XKEYRANGEEND'            03551800
.*                                                                      03551900
.ZI115E               ANOP  ,                                           03552000
.*-------------------------------------------------------------------   03552100
.***AI.L05 XCMDFLGS1B BL1                                               03552200
&ZW                   SETC  ''                                          03552300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03552400
.*-------------------------------------------------------------------   03552500
.***AI.L08 XCMDFLGS1B "YES"                                             03552600
.***      BL1'XXXX1XXX'                                                 03552700
         AIF   ('&XKEYCOMPARE' NE 'YES').ZI119A                         03552800
&ZW                   SETC  '&ZW.00001'                                 03552900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03553000
                      AGO   .ZI119C                                     03553100
.*                                                                      03553200
.ZI119A               ANOP  ,                                           03553300
&ZW                   SETC  '&ZW.00000'                                 03553400
.ZI119C               ANOP  ,                                           03553500
.*-------------------------------------------------------------------   03553600
.***AI.L08 XCMDFLGS1B "LESSOREQUAL"                                     03553700
.***      BL1'XXXXX1XX'                                                 03553800
         AIF   ('&XVERSCOMPTYPE' NE 'LESSOREQUAL').ZI120A               03553900
&ZW                   SETC  '&ZW.1'                                     03554000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03554100
                      AGO   .ZI120C                                     03554200
.*                                                                      03554300
.ZI120A               ANOP  ,                                           03554400
&ZW                   SETC  '&ZW.0'                                     03554500
.ZI120C               ANOP  ,                                           03554600
.*-------------------------------------------------------------------   03554700
.***AI.L08 XCMDFLGS1B "GREATEROREQUAL"                                  03554800
.***      BL1'XXXXXX1X'                                                 03554900
         AIF   ('&XKEYREQTYPE' NE 'GREATEROREQUAL').ZI121A              03555000
&ZW                   SETC  '&ZW.1'                                     03555100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03555200
                      AGO   .ZI121C                                     03555300
.*                                                                      03555400
.ZI121A               ANOP  ,                                           03555500
&ZW                   SETC  '&ZW.0'                                     03555600
.ZI121C               ANOP  ,                                           03555700
.*-------------------------------------------------------------------   03555800
.***AI.L08 XCMDFLGS1B "LESSOREQUAL"                                     03555900
.***      BL1'XXXXXXX1'                                                 03556000
         AIF   ('&XKEYREQTYPE' NE 'LESSOREQUAL').ZI122A                 03556100
&ZW                   SETC  '&ZW.1'                                     03556200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03556300
                      AGO   .ZI122C                                     03556400
.*                                                                      03556500
.ZI122A               ANOP  ,                                           03556600
&ZW                   SETC  '&ZW.0'                                     03556700
.ZI122C               ANOP  ,                                           03556800
.*-------------------------------------------------------------------   03556900
.***AI.L11 XCMDFLGS1B BL1                                               03557000
                      AIF   ('&ZCLNG' NE 'YES').ZI122E  ALL ZERO BITS   03557100
&ZOPN                 SETA  &ZOPN+1                                     03557200
&ZOPL(&ZOPN)          SETC  ' '                                         03557300
&ZOPO(&ZOPN)          SETC  'OI'                                        03557400
&ZOPV(&ZOPN)          SETC  '105(1),B''&ZW'''                           03557500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03557600
.ZI122E               ANOP  ,                                           03557700
.*-------------------------------------------------------------------   03557800
.***AI.L05 XCMDFLGS1C BL1                                               03557900
&ZW                   SETC  ''                                          03558000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03558100
.*-------------------------------------------------------------------   03558200
.***AI.L08 XCMDFLGS1C "TAILTOHEAD"                                      03558300
.***      BL1'1XXXXXXX'                                                 03558400
         AIF   ('&XDIRECTION' NE 'TAILTOHEAD').ZI124A                   03558500
&ZW                   SETC  '&ZW.1'                                     03558600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03558700
                      AGO   .ZI124C                                     03558800
.*                                                                      03558900
.ZI124A               ANOP  ,                                           03559000
&ZW                   SETC  '&ZW.0'                                     03559100
.ZI124C               ANOP  ,                                           03559200
.*-------------------------------------------------------------------   03559300
.***AI.L08 XCMDFLGS1C "BYENTRY"                                         03559400
.***      BL1'X1XXXXXX'                                                 03559500
         AIF   ('&XVERSCOMPARE' NE 'BYENTRY').ZI125A                    03559600
&ZW                   SETC  '&ZW.1'                                     03559700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03559800
                      AGO   .ZI125C                                     03559900
.*                                                                      03560000
.ZI125A               ANOP  ,                                           03560100
&ZW                   SETC  '&ZW.0'                                     03560200
.ZI125C               ANOP  ,                                           03560300
.*-------------------------------------------------------------------   03560400
.***AI.L08 XCMDFLGS1C "HALT"                                            03560500
.***      BL1'XX1XXXXX'                                                 03560600
         AIF   ('&XMISCOMPARE' NE 'HALT').ZI126A                        03560700
&ZW                   SETC  '&ZW.1'                                     03560800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03560900
                      AGO   .ZI126C                                     03561000
.*                                                                      03561100
.ZI126A               ANOP  ,                                           03561200
&ZW                   SETC  '&ZW.0'                                     03561300
.ZI126C               ANOP  ,                                           03561400
.*-------------------------------------------------------------------   03561500
.***AI.L08 XCMDFLGS1C "NAMELIST"                                        03561600
.***      BL1'XXX1XXXX'                                                 03561700
         AIF   ('&XLISTTYPE' NE 'NAMELIST').ZI127A                      03561800
&ZW                   SETC  '&ZW.1'                                     03561900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03562000
                      AGO   .ZI127C                                     03562100
.*                                                                      03562200
.ZI127A               ANOP  ,                                           03562300
&ZW                   SETC  '&ZW.0'                                     03562400
.ZI127C               ANOP  ,                                           03562500
.*-------------------------------------------------------------------   03562600
.***AI.L08 XCMDFLGS1C "YES"                                             03562700
.***      BL1'XXXX1XXX'                                                 03562800
         AIF   ('&XLISTCOMPARE' NE 'YES').ZI128A                        03562900
&ZW                   SETC  '&ZW.1'                                     03563000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03563100
                      AGO   .ZI128C                                     03563200
.*                                                                      03563300
.ZI128A               ANOP  ,                                           03563400
&ZW                   SETC  '&ZW.0'                                     03563500
.ZI128C               ANOP  ,                                           03563600
.*-------------------------------------------------------------------   03563700
.***AI.L08 XCMDFLGS1C "YES"                                             03563800
.***      BL1'XXXXX1XX'                                                 03563900
         AIF   ('&XVERSCOMPARE' NE 'YES').ZI129A                        03564000
&ZW                   SETC  '&ZW.100'                                   03564100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03564200
                      AGO   .ZI129C                                     03564300
.*                                                                      03564400
.ZI129A               ANOP  ,                                           03564500
&ZW                   SETC  '&ZW.000'                                   03564600
.ZI129C               ANOP  ,                                           03564700
.*-------------------------------------------------------------------   03564800
.***AI.L11 XCMDFLGS1C BL1                                               03564900
                      AIF   ('&ZCLNG' NE 'YES').ZI129E  ALL ZERO BITS   03565000
&ZOPN                 SETA  &ZOPN+1                                     03565100
&ZOPL(&ZOPN)          SETC  ' '                                         03565200
&ZOPO(&ZOPN)          SETC  'OI'                                        03565300
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           03565400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03565500
.ZI129E               ANOP  ,                                           03565600
.*-------------------------------------------------------------------   03565700
.***AI.L05 XCMDFLGS1C1 BL1                                              03565800
&ZW                   SETC  ''                                          03565900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03566000
.*-------------------------------------------------------------------   03566100
.***AI.L08 XCMDFLGS1C1 "CURSOR"                                         03566200
.***      BL1'X1XXXXXX'                                                 03566300
         AIF   ('&XLOCATOR' NE 'CURSOR').ZI132A                         03566400
&ZW                   SETC  '&ZW.01'                                    03566500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03566600
                      AGO   .ZI132C                                     03566700
.*                                                                      03566800
.ZI132A               ANOP  ,                                           03566900
&ZW                   SETC  '&ZW.00'                                    03567000
.ZI132C               ANOP  ,                                           03567100
.*-------------------------------------------------------------------   03567200
.***AI.L08 XCMDFLGS1C1 "ENTRYID"                                        03567300
.***      BL1'XX1XXXXX'                                                 03567400
         AIF   ('&XLOCATOR' NE 'ENTRYID').ZI133A                        03567500
&ZW                   SETC  '&ZW.1'                                     03567600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03567700
                      AGO   .ZI133C                                     03567800
.*                                                                      03567900
.ZI133A               ANOP  ,                                           03568000
&ZW                   SETC  '&ZW.0'                                     03568100
.ZI133C               ANOP  ,                                           03568200
.*-------------------------------------------------------------------   03568300
.***AI.L08 XCMDFLGS1C1 "KEYPOS"                                         03568400
.***      BL1'XXX1XXXX'                                                 03568500
         AIF   ('&XLOCATOR' NE 'KEYPOS').ZI134A                         03568600
&ZW                   SETC  '&ZW.10000'                                 03568700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03568800
                      AGO   .ZI134C                                     03568900
.*                                                                      03569000
.ZI134A               ANOP  ,                                           03569100
&ZW                   SETC  '&ZW.00000'                                 03569200
.ZI134C               ANOP  ,                                           03569300
.*-------------------------------------------------------------------   03569400
.***AI.L11 XCMDFLGS1C1 BL1                                              03569500
                      AIF   ('&ZCLNG' NE 'YES').ZI134E  ALL ZERO BITS   03569600
&ZOPN                 SETA  &ZOPN+1                                     03569700
&ZOPL(&ZOPN)          SETC  ' '                                         03569800
&ZOPO(&ZOPN)          SETC  'OI'                                        03569900
&ZOPV(&ZOPN)          SETC  '106(1),B''&ZW'''                           03570000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03570100
.ZI134E               ANOP  ,                                           03570200
.*-------------------------------------------------------------------   03570300
.***AI.L05 XCMDFLGS1D BL1                                               03570400
&ZW                   SETC  ''                                          03570500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03570600
.*-------------------------------------------------------------------   03570700
.***AI.L08 XCMDFLGS1D "TARGETKEY"                                       03570800
.***      BL1'1XXXXXXX'                                                 03570900
         AIF   ('&XMOVETOSKEY' NE 'TARGETKEY').ZI136A                   03571000
&ZW                   SETC  '&ZW.1'                                     03571100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03571200
                      AGO   .ZI136C                                     03571300
.*                                                                      03571400
.ZI136A               ANOP  ,                                           03571500
&ZW                   SETC  '&ZW.0'                                     03571600
.ZI136C               ANOP  ,                                           03571700
.*-------------------------------------------------------------------   03571800
.***AI.L08 XCMDFLGS1D "TARGETKEY"                                       03571900
.***      BL1'X1XXXXXX'                                                 03572000
         AIF   ('&XMOVETOKEY' NE 'TARGETKEY').ZI137A                    03572100
&ZW                   SETC  '&ZW.1'                                     03572200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03572300
                      AGO   .ZI137C                                     03572400
.*                                                                      03572500
.ZI137A               ANOP  ,                                           03572600
&ZW                   SETC  '&ZW.0'                                     03572700
.ZI137C               ANOP  ,                                           03572800
.*-------------------------------------------------------------------   03572900
.***AI.L09 XCMDFLGS1D "ECONTROLS"                                       03573000
.***      BL1'XXX1XXXX'                                                 03573100
&ZI                   SETA  0              RESET ARRAY INDEX            03573200
.ZI138A               ANOP  ,                                           03573300
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             03573400
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI138B                 03573500
         AIF   ('&XTYPE(&ZI)' NE 'ECONTROLS').ZI138A                    03573600
&ZW                   SETC  '&ZW.01'                                    03573700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03573800
                      AGO   .ZI138C                                     03573900
.*                                                                      03574000
.ZI138B               ANOP  ,                                           03574100
&ZW                   SETC  '&ZW.00'                                    03574200
.ZI138C               ANOP  ,                                           03574300
.*-------------------------------------------------------------------   03574400
.***AI.L09 XCMDFLGS1D "ENTDATA"                                         03574500
.***      BL1'XXXX1XXX'                                                 03574600
&ZI                   SETA  0              RESET ARRAY INDEX            03574700
.ZI139A               ANOP  ,                                           03574800
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             03574900
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI139B                 03575000
         AIF   ('&XTYPE(&ZI)' NE 'ENTDATA').ZI139A                      03575100
&ZW                   SETC  '&ZW.1'                                     03575200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03575300
                      AGO   .ZI139C                                     03575400
.*                                                                      03575500
.ZI139B               ANOP  ,                                           03575600
&ZW                   SETC  '&ZW.0'                                     03575700
.ZI139C               ANOP  ,                                           03575800
.*-------------------------------------------------------------------   03575900
.***AI.L09 XCMDFLGS1D "ADJDATA"                                         03576000
.***      BL1'XXXXX1XX'                                                 03576100
&ZI                   SETA  0              RESET ARRAY INDEX            03576200
.ZI140A               ANOP  ,                                           03576300
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             03576400
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI140B                 03576500
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').ZI140A                      03576600
&ZW                   SETC  '&ZW.100'                                   03576700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03576800
                      AGO   .ZI140C                                     03576900
.*                                                                      03577000
.ZI140B               ANOP  ,                                           03577100
&ZW                   SETC  '&ZW.000'                                   03577200
.ZI140C               ANOP  ,                                           03577300
.*-------------------------------------------------------------------   03577400
.***AI.L11 XCMDFLGS1D BL1                                               03577500
                      AIF   ('&ZCLNG' NE 'YES').ZI140E  ALL ZERO BITS   03577600
&ZOPN                 SETA  &ZOPN+1                                     03577700
&ZOPL(&ZOPN)          SETC  ' '                                         03577800
&ZOPO(&ZOPN)          SETC  'OI'                                        03577900
&ZOPV(&ZOPN)          SETC  '107(1),B''&ZW'''                           03578000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03578100
.ZI140E               ANOP  ,                                           03578200
.*-------------------------------------------------------------------   03578300
.***AI.L25  XENTRYNAME CL16                                             03578400
                      AIF   ('&ZXENTRYNAME' EQ '').ZI142E               03578500
                      AIF   ('&ZXENTRYNAME' EQ 'OUTPUT').ZI142E         03578600
&ZCGPR                SETC  '&XENTRYNAME'                               03578700
.*                                                                      03578800
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZI142B          03578900
&ZCGPR   SETC  '0('.'&XENTRYNAME'(2,K'&XENTRYNAME-2).')'                03579000
.ZI142B               ANOP  ,                                           03579100
.*                                                                      03579200
&ZOPN                 SETA  &ZOPN+1                                     03579300
&ZOPL(&ZOPN)          SETC  ' '                                         03579400
&ZOPO(&ZOPN)          SETC  'MVC'                                       03579500
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          03579600
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYNAME XENTRYNAME'                03579700
.*                                                                      03579800
.ZI142E               ANOP  ,                                           03579900
.*-------------------------------------------------------------------   03580000
.***AI.L25  XENTRYKEY CL16                                              03580100
                      AIF   ('&ZXENTRYKEY' EQ '').ZI144E                03580200
                      AIF   ('&ZXENTRYKEY' EQ 'OUTPUT').ZI144E          03580300
&ZCGPR                SETC  '&XENTRYKEY'                                03580400
.*                                                                      03580500
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZI144B           03580600
&ZCGPR   SETC  '0('.'&XENTRYKEY'(2,K'&XENTRYKEY-2).')'                  03580700
.ZI144B               ANOP  ,                                           03580800
.*                                                                      03580900
&ZOPN                 SETA  &ZOPN+1                                     03581000
&ZOPL(&ZOPN)          SETC  ' '                                         03581100
&ZOPO(&ZOPN)          SETC  'MVC'                                       03581200
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          03581300
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYKEY XENTRYKEY'                  03581400
.*                                                                      03581500
.ZI144E               ANOP  ,                                           03581600
.*-------------------------------------------------------------------   03581700
.***AI.L25  XFIRSTELEM XL2                                              03581800
                      AIF   ('&ZXFIRSTELEM' EQ '').ZI146E               03581900
                      AIF   ('&ZXFIRSTELEM' EQ 'OUTPUT').ZI146E         03582000
&ZCGPR                SETC  '&XFIRSTELEM'                               03582100
.*                                                                      03582200
                      AIF   ('&XFIRSTELEM'(1,1) NE '(').ZI146B          03582300
&ZCGPR   SETC  '0('.'&XFIRSTELEM'(2,K'&XFIRSTELEM-2).')'                03582400
                      AGO   .ZI146D                                     03582500
.ZI146B               ANOP  ,                                           03582600
.*                                                                      03582700
&ZC                   SETC  '&XFIRSTELEM'(1,1)                          03582800
                      AIF   (T'&ZC NE 'N').ZI146D                       03582900
&ZC                   SETC  '&XFIRSTELEM'                               03583000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI146D              03583100
&ZCGPR                SETC  '=AL2(&XFIRSTELEM)'                         03583200
.*                                                                      03583300
.ZI146D               ANOP  ,                                           03583400
.*                                                                      03583500
&ZOPN                 SETA  &ZOPN+1                                     03583600
&ZOPL(&ZOPN)          SETC  ' '                                         03583700
&ZOPO(&ZOPN)          SETC  'MVC'                                       03583800
&ZOPV(&ZOPN)          SETC  '164(2,1),&ZCGPR'                           03583900
&ZOPD(&ZOPN)          SETC  '++ &ZXFIRSTELEM XFIRSTELEM'                03584000
.*                                                                      03584100
.ZI146E               ANOP  ,                                           03584200
.*-------------------------------------------------------------------   03584300
.***AI.L25  XLASTELEM XL2                                               03584400
                      AIF   ('&ZXLASTELEM' EQ '').ZI147E                03584500
                      AIF   ('&ZXLASTELEM' EQ 'OUTPUT').ZI147E          03584600
&ZCGPR                SETC  '&XLASTELEM'                                03584700
.*                                                                      03584800
                      AIF   ('&XLASTELEM'(1,1) NE '(').ZI147B           03584900
&ZCGPR   SETC  '0('.'&XLASTELEM'(2,K'&XLASTELEM-2).')'                  03585000
                      AGO   .ZI147D                                     03585100
.ZI147B               ANOP  ,                                           03585200
.*                                                                      03585300
&ZC                   SETC  '&XLASTELEM'(1,1)                           03585400
                      AIF   (T'&ZC NE 'N').ZI147D                       03585500
&ZC                   SETC  '&XLASTELEM'                                03585600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI147D              03585700
&ZCGPR                SETC  '=AL2(&XLASTELEM)'                          03585800
.*                                                                      03585900
.ZI147D               ANOP  ,                                           03586000
.*                                                                      03586100
&ZOPN                 SETA  &ZOPN+1                                     03586200
&ZOPL(&ZOPN)          SETC  ' '                                         03586300
&ZOPO(&ZOPN)          SETC  'MVC'                                       03586400
&ZOPV(&ZOPN)          SETC  '166(2,1),&ZCGPR'                           03586500
&ZOPD(&ZOPN)          SETC  '++ &ZXLASTELEM XLASTELEM'                  03586600
.*                                                                      03586700
.ZI147E               ANOP  ,                                           03586800
.*-------------------------------------------------------------------   03586900
.***AI.L18  XRESTOKEN CL8                                               03587000
         AIF   ('&XRESTOKEN' NE 'NO_RESTOKEN').ZI149                    03587100
&ZXRESTOKEN           SETC  ''             RESET INPUT/OUTPUT           03587200
.ZI149                ANOP  ,                                           03587300
.*-------------------------------------------------------------------   03587400
.***AI.L25  XRESTOKEN CL8                                               03587500
                      AIF   ('&ZXRESTOKEN' EQ '').ZI149E                03587600
                      AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZI149E          03587700
&ZCGPR                SETC  '&XRESTOKEN'                                03587800
.*                                                                      03587900
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZI149B           03588000
&ZCGPR   SETC  '0('.'&XRESTOKEN'(2,K'&XRESTOKEN-2).')'                  03588100
.ZI149B               ANOP  ,                                           03588200
.*                                                                      03588300
&ZOPN                 SETA  &ZOPN+1                                     03588400
&ZOPL(&ZOPN)          SETC  ' '                                         03588500
&ZOPO(&ZOPN)          SETC  'MVC'                                       03588600
&ZOPV(&ZOPN)          SETC  '164(8,1),&ZCGPR'                           03588700
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTOKEN XRESTOKEN'                  03588800
.*                                                                      03588900
.ZI149E               ANOP  ,                                           03589000
.*-------------------------------------------------------------------   03589100
.***AI.L05 XCMDFLGS2A BL1                                               03589200
&ZW                   SETC  ''                                          03589300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03589400
.*-------------------------------------------------------------------   03589500
.***AI.L08 XCMDFLGS2A "LISTKEY"                                         03589600
.***      BL1'X1XXXXXX'                                                 03589700
         AIF   ('&XMOVETOKEY' NE 'LISTKEY').ZI152A                      03589800
&ZW                   SETC  '&ZW.01'                                    03589900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03590000
                      AGO   .ZI152C                                     03590100
.*                                                                      03590200
.ZI152A               ANOP  ,                                           03590300
&ZW                   SETC  '&ZW.00'                                    03590400
.ZI152C               ANOP  ,                                           03590500
.*-------------------------------------------------------------------   03590600
.***AI.L08 XCMDFLGS2A "LISTKEYINC"                                      03590700
.***      BL1'XX1XXXXX'                                                 03590800
         AIF   ('&LISTKEYINC' EQ '').ZI153A                             03590900
&ZW                   SETC  '&ZW.1'                                     03591000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03591100
                      AGO   .ZI153C                                     03591200
.*                                                                      03591300
.ZI153A               ANOP  ,                                           03591400
&ZW                   SETC  '&ZW.0'                                     03591500
.ZI153C               ANOP  ,                                           03591600
.*-------------------------------------------------------------------   03591700
.***AI.L08 XCMDFLGS2A "LESSOREQUAL"                                     03591800
.***      BL1'XXXX1XXX'                                                 03591900
         AIF   ('&XAUTHCOMPTYPE' NE 'LESSOREQUAL').ZI154A               03592000
&ZW                   SETC  '&ZW.01'                                    03592100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03592200
                      AGO   .ZI154C                                     03592300
.*                                                                      03592400
.ZI154A               ANOP  ,                                           03592500
&ZW                   SETC  '&ZW.00'                                    03592600
.ZI154C               ANOP  ,                                           03592700
.*-------------------------------------------------------------------   03592800
.***AI.L08 XCMDFLGS2A "EQUAL"                                           03592900
.***      BL1'XXXXX1XX'                                                 03593000
         AIF   ('&XAUTHCOMPTYPE' NE 'EQUAL').ZI155A                     03593100
&ZW                   SETC  '&ZW.100'                                   03593200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03593300
                      AGO   .ZI155C                                     03593400
.*                                                                      03593500
.ZI155A               ANOP  ,                                           03593600
&ZW                   SETC  '&ZW.000'                                   03593700
.ZI155C               ANOP  ,                                           03593800
.*-------------------------------------------------------------------   03593900
.***AI.L11 XCMDFLGS2A BL1                                               03594000
                      AIF   ('&ZCLNG' NE 'YES').ZI155E  ALL ZERO BITS   03594100
&ZOPN                 SETA  &ZOPN+1                                     03594200
&ZOPL(&ZOPN)          SETC  ' '                                         03594300
&ZOPO(&ZOPN)          SETC  'OI'                                        03594400
&ZOPV(&ZOPN)          SETC  '176(1),B''&ZW'''                           03594500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03594600
.ZI155E               ANOP  ,                                           03594700
.*-------------------------------------------------------------------   03594800
.***AI.L05 XCMDFLGS2B BL1                                               03594900
&ZW                   SETC  ''                                          03595000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            03595100
.*-------------------------------------------------------------------   03595200
.***AI.L08 XCMDFLGS2B "SECONDARY"                                       03595300
.***      BL1'1XXXXXXX'                                                 03595400
         AIF   ('&XKEYTYPE' NE 'SECONDARY').ZI157A                      03595500
&ZW                   SETC  '&ZW.1'                                     03595600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03595700
                      AGO   .ZI157C                                     03595800
.*                                                                      03595900
.ZI157A               ANOP  ,                                           03596000
&ZW                   SETC  '&ZW.0'                                     03596100
.ZI157C               ANOP  ,                                           03596200
.*-------------------------------------------------------------------   03596300
.***AI.L08 XCMDFLGS2B "YES"                                             03596400
.***      BL1'XX1XXXXX'                                                 03596500
         AIF   ('&XSKEYCOMPARE' NE 'YES').ZI158A                        03596600
&ZW                   SETC  '&ZW.01'                                    03596700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03596800
                      AGO   .ZI158C                                     03596900
.*                                                                      03597000
.ZI158A               ANOP  ,                                           03597100
&ZW                   SETC  '&ZW.00'                                    03597200
.ZI158C               ANOP  ,                                           03597300
.*-------------------------------------------------------------------   03597400
.***AI.L08 XCMDFLGS2B "GREATEROREQUAL"                                  03597500
.***      BL1'XXX1XXXX'                                                 03597600
         AIF   ('&XSKEYREQTYPE' NE 'GREATEROREQUAL').ZI159A             03597700
&ZW                   SETC  '&ZW.1'                                     03597800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03597900
                      AGO   .ZI159C                                     03598000
.*                                                                      03598100
.ZI159A               ANOP  ,                                           03598200
&ZW                   SETC  '&ZW.0'                                     03598300
.ZI159C               ANOP  ,                                           03598400
.*-------------------------------------------------------------------   03598500
.***AI.L08 XCMDFLGS2B "LESSOREQUAL"                                     03598600
.***      BL1'XXXX1XXX'                                                 03598700
         AIF   ('&XSKEYREQTYPE' NE 'LESSOREQUAL').ZI160A                03598800
&ZW                   SETC  '&ZW.1'                                     03598900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03599000
                      AGO   .ZI160C                                     03599100
.*                                                                      03599200
.ZI160A               ANOP  ,                                           03599300
&ZW                   SETC  '&ZW.0'                                     03599400
.ZI160C               ANOP  ,                                           03599500
.*-------------------------------------------------------------------   03599600
.***AI.L08 XCMDFLGS2B "SECONDARY"                                       03599700
.***      BL1'XXXXX1XX'                                                 03599800
         AIF   ('&XKEYSCANTYPE' NE 'SECONDARY').ZI161A                  03599900
&ZW                   SETC  '&ZW.100'                                   03600000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              03600100
                      AGO   .ZI161C                                     03600200
.*                                                                      03600300
.ZI161A               ANOP  ,                                           03600400
&ZW                   SETC  '&ZW.000'                                   03600500
.ZI161C               ANOP  ,                                           03600600
.*-------------------------------------------------------------------   03600700
.***AI.L11 XCMDFLGS2B BL1                                               03600800
                      AIF   ('&ZCLNG' NE 'YES').ZI161E  ALL ZERO BITS   03600900
&ZOPN                 SETA  &ZOPN+1                                     03601000
&ZOPL(&ZOPN)          SETC  ' '                                         03601100
&ZOPO(&ZOPN)          SETC  'OI'                                        03601200
&ZOPV(&ZOPN)          SETC  '177(1),B''&ZW'''                           03601300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              03601400
.ZI161E               ANOP  ,                                           03601500
.*-------------------------------------------------------------------   03601600
.***AI.LVER01                                                           03601700
                      AIF  (&XPLISTVER LT 1).ZI164Z                     03601800
.*-------------------------------------------------------------------   03601900
.***AI.LVER02                                                           03602000
.ZI164Z               ANOP  ,                                           03602100
.*-------------------------------------------------------------------   03602200
.***AI.LVER01                                                           03602300
                      AIF  (&XPLISTVER LT 1).ZI165Z                     03602400
.*-------------------------------------------------------------------   03602500
.***AI.LVER02                                                           03602600
.ZI165Z               ANOP  ,                                           03602700
.*-------------------------------------------------------------------   03602800
.***AI.LVER01                                                           03602900
                      AIF  (&XPLISTVER LT 1).ZI166Z                     03603000
.*-------------------------------------------------------------------   03603100
.***AI.LVER02                                                           03603200
.ZI166Z               ANOP  ,                                           03603300
.*-------------------------------------------------------------------   03603400
.***AI.LVER01                                                           03603500
                      AIF  (&XPLISTVER LT 1).ZI167Z                     03603600
.*-------------------------------------------------------------------   03603700
.***AI.LVER02                                                           03603800
.ZI167Z               ANOP  ,                                           03603900
.*-------------------------------------------------------------------   03604000
.***AI.LVER01                                                           03604100
                      AIF  (&XPLISTVER LT 1).ZI168Z                     03604200
.*-------------------------------------------------------------------   03604300
.***AI.L18  XLISTKEYINC F                                               03604400
         AIF   ('&XLISTKEYINC' NE 'NO').ZI168                           03604500
&ZXLISTKEYINC         SETC  ''             RESET INPUT/OUTPUT           03604600
.ZI168                ANOP  ,                                           03604700
.*-------------------------------------------------------------------   03604800
.***AI.L25  XLISTKEYINC F                                               03604900
                      AIF   ('&ZXLISTKEYINC' EQ '').ZI168E              03605000
                      AIF   ('&ZXLISTKEYINC' EQ 'OUTPUT').ZI168E        03605100
&ZCGPR                SETC  '&XLISTKEYINC'                              03605200
.*                                                                      03605300
                      AIF   ('&XLISTKEYINC'(1,1) NE '(').ZI168B         03605400
&ZCGPR   SETC  '0('.'&XLISTKEYINC'(2,K'&XLISTKEYINC-2).')'              03605500
                      AGO   .ZI168D                                     03605600
.ZI168B               ANOP  ,                                           03605700
.*                                                                      03605800
&ZC                   SETC  '&XLISTKEYINC'(1,1)                         03605900
                      AIF   (T'&ZC NE 'N').ZI168D                       03606000
&ZC                   SETC  '&XLISTKEYINC'                              03606100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI168D              03606200
&ZCGPR                SETC  '=AL4(&XLISTKEYINC)'                        03606300
.*                                                                      03606400
.ZI168D               ANOP  ,                                           03606500
.*                                                                      03606600
&ZOPN                 SETA  &ZOPN+1                                     03606700
&ZOPL(&ZOPN)          SETC  ' '                                         03606800
&ZOPO(&ZOPN)          SETC  'MVC'                                       03606900
&ZOPV(&ZOPN)          SETC  '272(4,1),&ZCGPR'                           03607000
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYINC XLISTKEYINC'              03607100
.*                                                                      03607200
.ZI168E               ANOP  ,                                           03607300
.*-------------------------------------------------------------------   03607400
.***AI.LVER02                                                           03607500
.ZI168Z               ANOP  ,                                           03607600
.*-------------------------------------------------------------------   03607700
.***AI.LVER01                                                           03607800
                      AIF  (&XPLISTVER LT 4).ZI170Z                     03607900
.*-------------------------------------------------------------------   03608000
.***AI.L25  XSECONDARYKEY CL32                                          03608100
                      AIF   ('&ZXSECONDARYKEY' EQ '').ZI170E            03608200
                      AIF   ('&ZXSECONDARYKEY' EQ 'OUTPUT').ZI170E      03608300
&ZCGPR                SETC  '&XSECONDARYKEY'                            03608400
.*                                                                      03608500
                      AIF   ('&XSECONDARYKEY'(1,1) NE '(').ZI170B       03608600
&ZCGPR   SETC  '0('.'&XSECONDARYKEY'(2,K'&XSECONDARYKEY-2).')'          03608700
.ZI170B               ANOP  ,                                           03608800
.*                                                                      03608900
&ZOPN                 SETA  &ZOPN+1                                     03609000
&ZOPL(&ZOPN)          SETC  ' '                                         03609100
&ZOPO(&ZOPN)          SETC  'MVC'                                       03609200
&ZOPV(&ZOPN)          SETC  '276(32,1),&ZCGPR'                          03609300
&ZOPD(&ZOPN)          SETC  '++ &ZXSECONDARYKEY XSECONDARYKEY'          03609400
.*                                                                      03609500
.ZI170E               ANOP  ,                                           03609600
.*-------------------------------------------------------------------   03609700
.***AI.LVER02                                                           03609800
.ZI170Z               ANOP  ,                                           03609900
.*-------------------------------------------------------------------   03610000
.***AI.LVER01                                                           03610100
                      AIF  (&XPLISTVER LT 4).ZI171Z                     03610200
.*-------------------------------------------------------------------   03610300
.***AI.L25  XSKEYRANGEEND CL32                                          03610400
                      AIF   ('&ZXSKEYRANGEEND' EQ '').ZI171E            03610500
                      AIF   ('&ZXSKEYRANGEEND' EQ 'OUTPUT').ZI171E      03610600
&ZCGPR                SETC  '&XSKEYRANGEEND'                            03610700
.*                                                                      03610800
                      AIF   ('&XSKEYRANGEEND'(1,1) NE '(').ZI171B       03610900
&ZCGPR   SETC  '0('.'&XSKEYRANGEEND'(2,K'&XSKEYRANGEEND-2).')'          03611000
.ZI171B               ANOP  ,                                           03611100
.*                                                                      03611200
&ZOPN                 SETA  &ZOPN+1                                     03611300
&ZOPL(&ZOPN)          SETC  ' '                                         03611400
&ZOPO(&ZOPN)          SETC  'MVC'                                       03611500
&ZOPV(&ZOPN)          SETC  '308(32,1),&ZCGPR'                          03611600
&ZOPD(&ZOPN)          SETC  '++ &ZXSKEYRANGEEND XSKEYRANGEEND'          03611700
.*                                                                      03611800
.ZI171E               ANOP  ,                                           03611900
.*-------------------------------------------------------------------   03612000
.***AI.LVER02                                                           03612100
.ZI171Z               ANOP  ,                                           03612200
.*-------------------------------------------------------------------   03612300
&ZOPN1                SETA &ZOPN                                        03612400
.*******************************************************************    03612500
.***  PROCESS IXLLSTM OUTPUT PARAMETERS                                 03612600
.*******************************************************************    03612700
                      ACTR  10000                                       03612800
.*******************************************************************    03612900
.***AO.X02  RETURN CODE PROCESSING                                      03613000
.*******************************************************************    03613100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    03613200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            03613300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             03613400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             03613500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               03613600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                03613700
&ZOPN                 SETA  &ZOPN+1                                     03613800
&ZOPL(&ZOPN)          SETC  ' '                                         03613900
&ZOPO(&ZOPN)          SETC  'ST'                                        03614000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              03614100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        03614200
                      AGO   .ZMRETX                                     03614300
.*                                                                      03614400
.ZMRET2               ANOP  ,                                           03614500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                03614600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                03614700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                03614800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  03614900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   03615000
&ZOPN                 SETA  &ZOPN+1                                     03615100
&ZOPL(&ZOPN)          SETC  ' '                                         03615200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  03615300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 03615400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        03615500
.ZMRETX               ANOP  ,                                           03615600
.*******************************************************************    03615700
.***AO.X03  REASON CODE PROCESSING                                      03615800
.*******************************************************************    03615900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    03616000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            03616100
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              03616200
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             03616300
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              03616400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             03616500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                03616600
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 03616700
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                03616800
&ZOPN                 SETA  &ZOPN+1                                     03616900
&ZOPL(&ZOPN)          SETC  ' '                                         03617000
&ZOPO(&ZOPN)          SETC  'ST'                                        03617100
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               03617200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        03617300
                      AGO   .ZMRSNX                                     03617400
.*                                                                      03617500
.ZMRSN2               ANOP  ,                                           03617600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                03617700
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 03617800
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                03617900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 03618000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                03618100
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   03618200
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    03618300
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   03618400
&ZOPN                 SETA  &ZOPN+1                                     03618500
&ZOPL(&ZOPN)          SETC  ' '                                         03618600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  03618700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  03618800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        03618900
.ZMRSNX               ANOP  ,                                           03619000
.*******************************************************************    03619100
.***AO.X04  LABEL FOR MF=L PROCESSING                                   03619200
.*******************************************************************    03619300
.ZMFLX                ANOP  ,              MF=L PROCESSING              03619400
.*******************************************************************    03619500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               03619600
.*******************************************************************    03619700
                      ACTR  10000                                       03619800
.*                                                                      03619900
                      LCLA  &ZLC           COLUMN POSITION              03620000
                      LCLA  &ZOPX          LIST TABLE INDEX             03620100
                      LCLC  &ZLL           LABEL                        03620200
                      LCLC  &ZLOP          OPERATION                    03620300
                      LCLC  &ZLV           VALUE                        03620400
                      LCLC  &ZLD           DESCRIPTION                  03620500
.*                                                                      03620600
&ZOPX                 SETA  1                                           03620700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            03620800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              03620900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              03621000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              03621100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              03621200
                      AIF   (K'&ZLD LE 0).ZL5                           03621300
&ZLC                  SETA  35             COMMENT COLUMN               03621400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    03621500
&ZLC                  SETA  33             COMMMENT COLUMN              03621600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   03621700
&ZLV                  SETC  '&ZLV'.' '                                  03621800
                      AGO   .ZL3                                        03621900
.*                                                                      03622000
.ZL4                  ANOP  ,                                           03622100
&ZLV                  SETC  '&ZLV'.' '                                  03622200
.ZL5                  ANOP  ,                                           03622300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               03622400
.*                                                                      03622500
&ZLL     &ZLOP &ZLV                                                     03622600
.*                                                                      03622700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               03622800
                      AGO   .ZL2           CONTINUE LOOPING             03622900
.*                                                                      03623000
.ZLX                  ANOP  ,                                           03623100
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                03623200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  03623300
.**------------------------------------------------------------------** 03623400
.**  Start of user maclasm code                                      ** 03623500
.**------------------------------------------------------------------** 03623600
.*                                                                      03623700
.**  Only generate code if no errors have been found                 ** 03623800
.*                                                                      03623900
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            03624000
.*                                                                      03624100
.**------------------------------------------------------------------** 03624200
.**  Declares for macro constants                                    ** 03624300
.**------------------------------------------------------------------** 03624400
.*                                                                      03624500
.**  Command codes                                                   ** 03624600
.*                                                                      03624700
               LCLC  &KLISTCMDRL                                        03624800
               LCLC  &KLISTCMDDL                                        03624900
               LCLC  &KLISTCMDRLS                                       03625000
               LCLC  &KLISTCMDDLS                                       03625100
               LCLC  &KLISTCMDDLES                                      03625200
               LCLC  &KLISTCMDMLES                                      03625300
.*                                                                      03625400
&KLISTCMDRL    SETC  '28'                                               03625500
&KLISTCMDDL    SETC  '88'                                               03625600
&KLISTCMDRLS   SETC  '32'                                               03625700
&KLISTCMDDLS   SETC  '36'                                               03625800
&KLISTCMDDLES  SETC  '40'                                               03625900
&KLISTCMDMLES  SETC  '92'                                               03626000
.*                                                                      03626100
.*                                                                      03626200
.**  List command type                                               ** 03626300
.*                                                                      03626400
               LCLC  &KLISTCMDTYPE                                      03626500
&KLISTCMDTYPE  SETC  'X''03'''                                          03626600
.*                                                                      03626700
.*                                                                      03626800
.**  Command opcodes                                                 ** 03626900
.*                                                                      03627000
               LCLC  &KLISTOPRL                                         03627100
               LCLC  &KLISTOPDL                                         03627200
               LCLC  &KLISTOPRLS                                        03627300
               LCLC  &KLISTOPDLS                                        03627400
               LCLC  &KLISTOPDLES                                       03627500
               LCLC  &KLISTOPMLES                                       03627600
.*                                                                      03627700
&KLISTOPRL     SETC  'X''17'''                                          03627800
&KLISTOPDL     SETC  'X''26'''                                          03627900
&KLISTOPRLS    SETC  'X''18'''                                          03628000
&KLISTOPDLS    SETC  'X''19'''                                          03628100
&KLISTOPDLES   SETC  'X''9A'''                                          03628200
&KLISTOPMLES   SETC  'X''A7'''                                          03628300
.*                                                                      03628400
.*                                                                      03628500
.**  Command lengths                                                 ** 03628600
.*                                                                      03628700
               LCLC  &KLISTRLLEN                                        03628800
               LCLC  &KLISTDLLEN                                        03628900
               LCLC  &KLISTRLSLEN                                       03629000
               LCLC  &KLISTDLSLEN                                       03629100
               LCLC  &KLISTDLESLEN                                      03629200
               LCLC  &KLISTMLESLEN                                      03629300
.*                                                                      03629400
.********************************************************************** 03629500
.* If this is a level 4 (or above) plist,                             * 03629600
.*    Use the new command lengths                                     * 03629700
.* Else (plist 0-3)                                                   * 03629800
.*    Use the old command lengths                                     * 03629900
.********************************************************************** 03630000
         AIF   (&ListPlVers GE 4).SETLONGLNGTHS                         03630100
&KLISTRLLEN    SETC  '160'                                              03630200
.* &KLISTDLLEN    SETC  '256'  * Version 0-3 OF DL does not exist       03630300
&KLISTRLSLEN   SETC  '160'                                              03630400
&KLISTDLSLEN   SETC  '160'                                              03630500
&KLISTDLESLEN  SETC  '160'                                              03630600
.* &KLISTMLESLEN  SETC  '256'  * Version 0-3 of MLES does not exist     03630700
               AGO   .SETLENGTHEND                                      03630800
.SETLONGLNGTHS ANOP ,                                                   03630900
&KLISTRLLEN    SETC  '256'                                              03631000
&KLISTDLLEN    SETC  '256'                                              03631100
&KLISTRLSLEN   SETC  '256'                                              03631200
&KLISTDLSLEN   SETC  '256'                                              03631300
&KLISTDLESLEN  SETC  '256'                                              03631400
&KLISTMLESLEN  SETC  '256'                                              03631500
.*             AGO   .SETLENGTHEND                                      03631600
.SETLENGTHEND  ANOP  ,                                                  03631700
.*                                                                      03631800
.*                                                                      03631900
.**  Parameter list offsets                                          ** 03632000
.*                                                                      03632100
.*  Offsets of parameter list sections                                  03632200
.*                                                                      03632300
                   LCLA  &PLOFF_XSHL_DATA                               03632400
                   LCLA  &PLOFF_XMOB_DATA                               03632500
                   LCLA  &PLOFF_XMCB_DATA                               03632600
.*                                                                      03632700
&PLOFF_XSHL_DATA   SETA  0                                              03632800
&PLOFF_XMOB_DATA   SETA  96                                             03632900
&PLOFF_XMCB_DATA   SETA  100                                            03633000
.*                                                                      03633100
.*  Offsets within the shell data section                               03633200
.*                                                                      03633300
                     LCLA  &PLOFF_XVERSION                              03633400
                     LCLA  &PLOFF_XCMDCODE                              03633500
                     LCLA  &PLOFF_XSHLFLGS2                             03633600
                     LCLA  &PLOFF_XSHLFLGS3                             03633700
                     LCLA  &PLOFF_XSHLFLGS4                             03633800
                     LCLA  &PLOFF_XCOMPCONID                            03633900
                     LCLA  &PLOFF_XCONID                                03634000
                     LCLA  &PLOFF_XBUFSIZE                              03634100
                     LCLA  &PLOFF_XANSAREA_ALET                         03634200
                     LCLA  &PLOFF_XANSAREA                              03634300
                     LCLA  &PLOFF_XEXTRESTOKENTKN                  @L1A 03634400
.*                                                                      03634500
&PLOFF_XVERSION      SETA  &PLOFF_XSHL_DATA+0                           03634600
&PLOFF_XCMDCODE      SETA  &PLOFF_XSHL_DATA+1                           03634700
&PLOFF_XSHLFLGS2     SETA  &PLOFF_XSHL_DATA+3                           03634800
&PLOFF_XSHLFLGS3     SETA  &PLOFF_XSHL_DATA+4                           03634900
&PLOFF_XSHLFLGS4     SETA  &PLOFF_XSHL_DATA+5                           03635000
&PLOFF_XCOMPCONID    SETA  &PLOFF_XSHL_DATA+8                           03635100
&PLOFF_XCONID        SETA  &PLOFF_XSHL_DATA+25                          03635200
&PLOFF_XBUFSIZE      SETA  &PLOFF_XSHL_DATA+32                          03635300
&PLOFF_XANSAREA_ALET SETA  &PLOFF_XSHL_DATA+48                          03635400
&PLOFF_XANSAREA      SETA  &PLOFF_XSHL_DATA+52                          03635500
&PLOFF_XEXTRESTOKENTKN  SETA  &PLOFF_XSHL_DATA+72                  @L1A 03635600
.*                                                                      03635700
.*  Offsets within the MOB section                                      03635800
.*                                                                      03635900
                   LCLA  &PLOFF_XCMDLEN                                 03636000
                   LCLA  &PLOFF_XBUFNUM                                 03636100
                   LCLA  &PLOFF_XBUFINCRNUM                             03636200
.*                                                                      03636300
&PLOFF_XCMDLEN     SETA  &PLOFF_XMOB_DATA+0                             03636400
&PLOFF_XBUFNUM     SETA  &PLOFF_XMOB_DATA+2                             03636500
&PLOFF_XBUFINCRNUM SETA  &PLOFF_XMOB_DATA+3                             03636600
.*                                                                      03636700
.*  Offsets within the MCB section                                      03636800
.*                                                                      03636900
                   LCLA  &PLOFF_XCCA                                    03637000
                   LCLA  &PLOFF_XCCB                                    03637100
                   LCLA  &PLOFF_XDBS                                    03637200
                   LCLA  &PLOFF_XCMDFLGS1B                              03637300
                   LCLA  &PLOFF_XCMDFLGS1C                              03637400
                   LCLA  &PLOFF_XCMDFLGS1D                              03637500
                   LCLA  &PLOFF_XCGLM                                   03637600
                   LCLA  &PLOFF_XENTRYKEY                               03637700
                   LCLA  &PLOFF_XRESTOKEN                          @L1A 03637800
                   LCLA  &PLOFF_XUID1                                   03637900
                   LCLA  &PLOFF_XCMDFLGS2A                              03638000
                   LCLA  &PLOFF_XCMDFLGS2B                              03638100
                   LCLA  &PLOFF_XAUTHCOMP1                              03638200
.*                                                                      03638300
&PLOFF_XCCA        SETA  &PLOFF_XMCB_DATA+0                             03638400
&PLOFF_XCCB        SETA  &PLOFF_XMCB_DATA+1                             03638500
&PLOFF_XDBS        SETA  &PLOFF_XMCB_DATA+4                             03638600
&PLOFF_XCMDFLGS1B  SETA  &PLOFF_XMCB_DATA+5                             03638700
&PLOFF_XCMDFLGS1C  SETA  &PLOFF_XMCB_DATA+6                             03638800
&PLOFF_XCMDFLGS1D  SETA  &PLOFF_XMCB_DATA+7                             03638900
&PLOFF_XCGLM       SETA  &PLOFF_XMCB_DATA+11                            03639000
&PLOFF_XENTRYKEY   SETA  &PLOFF_XMCB_DATA+48                            03639100
&PLOFF_XRESTOKEN   SETA  &PLOFF_XMCB_DATA+64                       @L1A 03639200
&PLOFF_XUID1       SETA  &PLOFF_XMCB_DATA+80                            03639300
&PLOFF_XCMDFLGS2A  SETA  &PLOFF_XMCB_DATA+76                            03639400
&PLOFF_XCMDFLGS2B  SETA  &PLOFF_XMCB_DATA+77                            03639500
&PLOFF_XAUTHCOMP1  SETA  &PLOFF_XMCB_DATA+128                           03639600
.*                                                                      03639700
.**  Answer area offsets                                             ** 03639800
.*                                                                      03639900
                   LCLC  &AAOFF_LEVEL                                   03640000
                   LCLC  &AAOFF_OFFSET                                  03640100
                   LCLC  &AAOFF_LENGTH                                  03640200
                   LCLC  &AAOFF_RETCODE                                 03640300
                   LCLC  &AAOFF_RSNCODE                                 03640400
.*                                                                      03640500
&AAOFF_LEVEL       SETC  '0'                                            03640600
&AAOFF_OFFSET      SETC  '4'                                            03640700
&AAOFF_LENGTH      SETC  '8'                                            03640800
&AAOFF_RETCODE     SETC  '12'                                           03640900
&AAOFF_RSNCODE     SETC  '16'                                           03641000
.*                                                                      03641100
.**  Answer area values                                              ** 03641200
.*                                                                      03641300
                   LCLC  &AAVAL_LEVEL                                   03641400
                   LCLC  &AAVAL_OFFSET                                  03641500
                   LCLC  &AAVAL_LENGTH                                  03641600
                   LCLC  &AAVAL_RETCODE                                 03641700
                   LCLC  &AAVAL_RSNCODE                                 03641800
.*                                                                      03641900
&AAVAL_LEVEL       SETC  '0'                                            03642000
&AAVAL_OFFSET      SETC  '12'                                           03642100
&AAVAL_LENGTH      SETC  '8'                                            03642200
&AAVAL_RETCODE     SETC  '12'                                           03642300
&AAVAL_RSNCODE     SETC  'X''0C13'''                                    03642400
.*                                                                      03642500
.*                                                                      03642600
.**------------------------------------------------------------------** 03642700
.**  Declares for macro variables                                    ** 03642800
.**                                                                  ** 03642900
.**  The following AMG-declared variables are also used in this      ** 03643000
.**  section:                                                        ** 03643100
.**                                                                  ** 03643200
.**    AMG "x" and "zx" variables corresponding to interface keys    ** 03643300
.**    ZCGPR                                                         ** 03643400
.**    ZCLNG                                                         ** 03643500
.**    ZCVAL                                                         ** 03643600
.**    ZMACRET                                                       ** 03643700
.**    ZNDX                                                          ** 03643800
.**    ZPLLEN                                                        ** 03643900
.**    ZPRM                                                          ** 03644000
.**    ZPRMLINE                                                      ** 03644100
.**    ZPRMNUM                                                       ** 03644200
.**    ZW                                                            ** 03644300
.**                                                                  ** 03644400
.**------------------------------------------------------------------** 03644500
.*                                                                      03644600
               LCLC  &LISTCMD                                           03644700
               LCLC  &LISTOPCODE                                        03644800
               LCLC  &LISTCMDLEN                                        03644900
.*                                                                      03645000
.*                                                                      03645100
.**------------------------------------------------------------------** 03645200
.**  Start of code to fill in the parameter list                     ** 03645300
.**------------------------------------------------------------------** 03645400
.*                                                                      03645500
.*                                                                      03645600
.**------------------------------------------------------------------** 03645700
.**  Initialize the answer area                                      ** 03645800
.**------------------------------------------------------------------** 03645900
.*                                                                      03646000
               AIF   ('&ANSAREA' EQ '').SKIPINITANSAREA                 03646100
               AIF   ('&SYSASCE'  EQ 'P').SKIPINITANSALET               03646200
         L     14,&PLOFF_XANSAREA_ALET.(,1)                             03646300
         SAR   14,14                                                    03646400
.SKIPINITANSALET ANOP ,                                                 03646500
         L     14,&PLOFF_XANSAREA.(,1)                                  03646600
         LA    15,&AAVAL_LEVEL.                                         03646700
         ST    15,&AAOFF_LEVEL.(,14)                                    03646800
         LA    15,&AAVAL_OFFSET.                                        03646900
         ST    15,&AAOFF_OFFSET.(,14)                                   03647000
         LA    15,&AAVAL_LENGTH.                                        03647100
         ST    15,&AAOFF_LENGTH.(,14)                                   03647200
         LA    15,&AAVAL_RETCODE.                                       03647300
         ST    15,&AAOFF_RETCODE.(,14)                                  03647400
         LA    15,&AAVAL_RSNCODE.                                       03647500
         ST    15,&AAOFF_RSNCODE.(,14)                                  03647600
.SKIPINITANSAREA ANOP ,                                                 03647700
.*                                                                      03647800
.*                                                                      03647900
.**------------------------------------------------------------------** 03648000
.**  Find the command code, opcode, and length                       ** 03648100
.**                                                                  ** 03648200
.**  The length is set to the maximum length required for the        ** 03648300
.**  specified command.  The command code and opcode are set from    ** 03648400
.**  the combination of keys specified on the invocation.            ** 03648500
.**                                                                  ** 03648600
.**------------------------------------------------------------------** 03648700
.*                                                                      03648800
.*                                                                      03648900
               AIF   ('&XREQUEST' NE 'READ_LIST').LISTCMDNOTREADLIST    03649000
.*                                                                      03649100
&LISTCMD       SETC  '&KLISTCMDRL'                                      03649200
&LISTOPCODE    SETC  '&KLISTOPRL'                                       03649300
&LISTCMDLEN    SETC  '&KLISTRLLEN'                                      03649400
               AGO   .LISTCMDENDSELECT                                  03649500
.*                                                                      03649600
.LISTCMDNOTREADLIST ANOP ,                                              03649700
.*                                                                      03649800
.*                                                                      03649900
               AIF   ('&XREQUEST' NE 'DELETE_LIST').LISTCMDNOTDELETELIS*03650000
               T                                                        03650100
.*                                                                      03650200
&LISTCMD       SETC  '&KLISTCMDDL'                                      03650300
&LISTOPCODE    SETC  '&KLISTOPDL'                                       03650400
&LISTCMDLEN    SETC  '&KLISTDLLEN'                                      03650500
               AGO   .LISTCMDENDSELECT                                  03650600
.*                                                                      03650700
.LISTCMDNOTDELETELIST ANOP ,                                            03650800
.*                                                                      03650900
               AIF   ('&XREQUEST' NE 'READ_MULT').LISTCMDNOTREADMULT    03651000
.*                                                                      03651100
&LISTCMD       SETC  '&KLISTCMDRLS'                                     03651200
&LISTOPCODE    SETC  '&KLISTOPRLS'                                      03651300
&LISTCMDLEN    SETC  '&KLISTRLSLEN'                                     03651400
               AGO   .LISTCMDENDSELECT                                  03651500
.*                                                                      03651600
.LISTCMDNOTREADMULT ANOP ,                                              03651700
.*                                                                      03651800
               AIF   ('&XREQUEST' NE 'DELETE_MULT').LISTCMDNOTDELETEMUL*03651900
               T                                                        03652000
.*                                                                      03652100
&LISTCMD       SETC  '&KLISTCMDDLS'                                     03652200
&LISTOPCODE    SETC  '&KLISTOPDLS'                                      03652300
&LISTCMDLEN    SETC  '&KLISTDLSLEN'                                     03652400
               AGO   .LISTCMDENDSELECT                                  03652500
.*                                                                      03652600
.LISTCMDNOTDELETEMULT ANOP ,                                            03652700
.*                                                                      03652800
               AIF   ('&XREQUEST' NE 'DELETE_ENTRYLIST').LISTCMDNOTDELE*03652900
               TEENTRYLIST                                              03653000
.*                                                                      03653100
&LISTCMD       SETC  '&KLISTCMDDLES'                                    03653200
&LISTOPCODE    SETC  '&KLISTOPDLES'                                     03653300
&LISTCMDLEN    SETC  '&KLISTDLESLEN'                                    03653400
               AGO   .LISTCMDENDSELECT                                  03653500
.*                                                                      03653600
.LISTCMDNOTDELETEENTRYLIST ANOP ,                                       03653700
.*                                                                      03653800
               AIF   ('&XREQUEST' NE 'MOVE_ENTRYLIST').LISTCMDNOTMOVEEN*03653900
               TRYLIST                                                  03654000
.*                                                                      03654100
&LISTCMD       SETC  '&KLISTCMDMLES'                                    03654200
&LISTOPCODE    SETC  '&KLISTOPMLES'                                     03654300
&LISTCMDLEN    SETC  '&KLISTMLESLEN'                                    03654400
               AGO   .LISTCMDENDSELECT                                  03654500
.*                                                                      03654600
.LISTCMDNOTMOVEENTRYLIST ANOP ,                                         03654700
.*                                                                      03654800
         MNOTE 8,'IXLLSTM ---> REQUEST is a required parameter.'        03654900
&ZMACRET SETA  8                                                        03655000
.*                                                                      03655100
.LISTCMDENDSELECT ANOP ,                                                03655200
.*                                                                      03655300
.*                                                                      03655400
.**------------------------------------------------------------------** 03655500
.**  Fill in shell layer parameter fields                            ** 03655600
.**------------------------------------------------------------------** 03655700
.*                                                                      03655800
.**  Set the command code                                            ** 03655900
.*                                                                      03656000
.*   _xCmdCode                                                          03656100
         MVI   &PLOFF_XCMDCODE.(1),&LISTCMD                             03656200
.*                                                                      03656300
.*                                                                      03656400
.**  Set the shell flags third byte                                  ** 03656500
.**------------------------------------------------------------------** 03656600
.**  Handle special case to set LockMode(Cond) bit.                  ** 03656700
.**  Ixllstm does not have a LockMode keyword, but Ixllist does      ** 03656800
.**  and sets the LockMode(COND) bit when LockOper=NotHeld. As such, ** 03656900
.**  the following code will set the Shlflgs3 bits for both          ** 03657000
.**  LockOper=NotHeld and LockMode(Cond) when LockOper=NotHeld       ** 03657100
.**  is specified. Note that AMG will set the bit for                ** 03657200
.**  LockOper=HeldBy when LockOper=HeldBy is specified.              ** 03657300
.**------------------------------------------------------------------** 03657400
         AIF   ('&XLOCKOPER' NE 'NOTHELD').PLLOCKOPERNOTNOTHELD         03657500
.*   _xShlFlgs3                                                         03657600
         OI    &PLOFF_XSHLFLGS3.(1),B'00100010'                         03657700
.PLLOCKOPERNOTNOTHELD ANOP ,                                            03657800
.*                                                                      03657900
.**  Set the shell flags fourth byte                                 ** 03658000
.*                                                                      03658100
&ZW      SETC  ''                                                       03658200
&ZCLNG   SETC  ''                                                       03658300
.*                                                                      03658400
.*                                                                      03658500
         AIF   ('&XREQUEST' NE 'READ_LIST' AND                         *03658600
                '&XREQUEST' NE 'READ_MULT').PLREQNOTREADLISTREADMULT    03658700
.*                                                                      03658800
&ZI      SETA  0                                                        03658900
.*                                                                      03659000
.PLFINDADJDATA ANOP ,                                                   03659100
.*                                                                      03659200
&ZI      SETA  &ZI+1                                                    03659300
.*                                                                      03659400
         AIF   (K'&XTYPE(&ZI) LE 0).PLFINDADJDATANOVALUE                03659500
.*                                                                      03659600
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').PLFINDADJDATA               03659700
.*                                                                      03659800
&ZW      SETC  '&ZW.1'                                                  03659900
&ZCLNG   SETC  'YES'                                                    03660000
         AGO   .PLFINDADJDATAEND                                        03660100
.*                                                                      03660200
.PLFINDADJDATANOVALUE ANOP ,                                            03660300
.*                                                                      03660400
&ZW      SETC  '&ZW.0'                                                  03660500
.*                                                                      03660600
.PLFINDADJDATAEND ANOP ,                                                03660700
.*                                                                      03660800
&ZI      SETA  0                                                        03660900
.*                                                                      03661000
.PLFINDECONTROLS ANOP ,                                                 03661100
.*                                                                      03661200
&ZI      SETA  &ZI+1                                                    03661300
.*                                                                      03661400
         AIF   (K'&XTYPE(&ZI) LE 0).PLFINDECONTROLSNOVALUE              03661500
.*                                                                      03661600
         AIF   ('&XTYPE(&ZI)' NE 'ECONTROLS').PLFINDECONTROLS           03661700
.*                                                                      03661800
&ZW      SETC  '&ZW.1000000'                                            03661900
&ZCLNG   SETC  'YES'                                                    03662000
         AGO   .PLFINDECONTROLSEND                                      03662100
.*                                                                      03662200
.PLFINDECONTROLSNOVALUE ANOP ,                                          03662300
.*                                                                      03662400
&ZW      SETC  '&ZW.0000000'                                            03662500
.*                                                                      03662600
.PLFINDECONTROLSEND ANOP ,                                              03662700
.*                                                                      03662800
.*                                                                      03662900
.PLREQNOTREADLISTREADMULT ANOP ,                                        03663000
.*                                                                      03663100
.*                                                                      03663200
&ZW      SETC  'B''&ZW.'''                                              03663300
.*                                                                      03663400
.*                                                                      03663500
         AIF   ('&ZCLNG' NE 'YES').PLNOSHLFLGS4                         03663600
.*                                                                      03663700
.*   _xShlFlgs4                                                         03663800
         OI    &PLOFF_XSHLFLGS4.(1),&ZW                                 03663900
.*                                                                      03664000
.PLNOSHLFLGS4 ANOP ,                                                    03664100
.*                                                                      03664200
.**------------------------------------------------------------------** 03664300
.**  Fill in MOB parameter fields                                    ** 03664400
.**------------------------------------------------------------------** 03664500
.*                                                                      03664600
.**  Set the command data length                                     ** 03664700
.*                                                                      03664800
         LA    14,&LISTCMDLEN                                           03664900
.*                                                                      03665000
.*   _xCmdLen                                                           03665100
         STH   14,&PLOFF_XCMDLEN.(,1)                                   03665200
.*                                                                      03665300
.**  Set the BufNum value                                            ** 03665400
.*                                                                      03665500
.*                                                                      03665600
.*   _xBufNum                                                           03665700
.*                                                                      03665800
         AIF   ('&XBUFFER' EQ '').SKIPSETBUFNUM1                        03665900
.*                                                                      03666000
.*   _xBufNum                                                           03666100
         L     14,&PLOFF_XBUFSIZE.(0,1)                                 03666200
         SRL   14,12                                                    03666300
         STC   14,&PLOFF_XBUFNUM.(0,1)                                  03666400
.*                                                                      03666500
.SKIPSETBUFNUM1 ANOP ,                                                  03666600
.*                                                                      03666700
.**  Set the BufIncrNum value                                        ** 03666800
.*                                                                      03666900
         AIF   ('&XREQUEST' NE 'READ_LIST'        AND                  *03667000
                '&XREQUEST' NE 'READ_MULT').SKIPSETBUFINUM        @02C  03667100
.*                                                                      03667200
.*   _xBufIncrNum                                                       03667300
         MVI   &PLOFF_XBUFINCRNUM.(1),16                                03667400
.*                                                                      03667500
.SKIPSETBUFINUM ANOP ,                                                  03667600
.*                                                                      03667700
.**  Set the BufIncrNum value for DELETE_ENTRYLIST and MOVE_ENTRYLIST   03667800
.*                                                                      03667900
         AIF   ('&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *03668000
                '&XREQUEST' NE 'MOVE_ENTRYLIST').SKIPSETBUFINU2   @02A  03668100
         AIF   ('&XBUFINCRNUM' NE '').SKIPSETBUFINU2              @02A  03668200
         MVI   &PLOFF_XBUFINCRNUM.(1),16                          @02A  03668300
.SKIPSETBUFINU2 ANOP ,                                            @02A  03668400
.*                                                                      03668500
.*                                                                      03668600
.**------------------------------------------------------------------** 03668700
.**  Fill in MCB parameter fields                                    ** 03668800
.**------------------------------------------------------------------** 03668900
.*                                                                      03669000
.**  Set the command opcode                                          ** 03669100
.**  - The command opcode is stored in two pieces to allow the       ** 03669200
.**    MVI instruction to be used for efficiency.                    ** 03669300
.*                                                                      03669400
.*   _xCcA                                                              03669500
         MVI   &PLOFF_XCCA.(1),&KLISTCMDTYPE                            03669600
.*                                                                      03669700
.*   _xCcB                                                              03669800
         MVI   &PLOFF_XCCB.(1),&LISTOPCODE                              03669900
.*                                                                      03670000
.*                                                                      03670100
.**  Set the DBS                                                     ** 03670200
.*                                                                      03670300
         AIF   ('&XREQUEST' NE 'READ_LIST'        AND                  *03670400
                '&XREQUEST' NE 'READ_MULT').SKIPSETDBS                  03670500
.*                                                                      03670600
.*   _xDbs                                                              03670700
         MVC   &PLOFF_XDBS.(1,1),&PLOFF_XBUFNUM.(1)                     03670800
.*                                                                      03670900
.SKIPSETDBS ANOP ,                                                      03671000
.*                                                                      03671100
.*                                                                      03671200
.**------------------------------------------------------------------** 03671300
.**  Set the command flags                                           ** 03671400
.**  - The command flags are stored as individual bytes to allow the ** 03671500
.**    MVI instruction to be used for efficiency.                    ** 03671600
.*                                                                      03671700
.**  Set the command flags first byte                                ** 03671800
.**  - There are currently no flags in the first byte                ** 03671900
.*                                                                      03672000
.**  Set the command flags second byte                               ** 03672100
.*                                                                      03672200
&ZW      SETC  ''                                                       03672300
&ZCLNG   SETC  ''                                                       03672400
.*                                                                      03672500
.* Bit 0    Local Lock Bit (not used)                                   03672600
&ZW      SETC  '&ZW.0'                                                  03672700
.*                                                                      03672800
.* Bit 1-3  Lock Requst Type                                            03672900
         AIF   ('&LOCKOPER(1)' EQ '').PASTLOCKOPERYES                   03673000
.*                                                                      03673100
.*                                                                      03673200
.*                                                                      03673300
         AIF   ('&XLOCKOPER' NE 'NOTHELD' AND                          *03673400
                '&XLOCKOPER' NE 'HELDBY').PASTLOCKOPERYES               03673500
.*                                                                      03673600
.*                                                                      03673700
&ZW      SETC  '&ZW.100'                                                03673800
&ZCLNG   SETC  'YES'                                                    03673900
         AGO   .PASTLOCKOPERNO                                          03674000
.*                                                                      03674100
.*                                                                      03674200
.PASTLOCKOPERYES ANOP ,                                                 03674300
&ZW      SETC  '&ZW.000'                                                03674400
.*                                                                      03674500
.PASTLOCKOPERNO  ANOP ,                                                 03674600
.*                                                                      03674700
.* Bit 4    Key Compare Type (set correctly by AMG)                     03674800
&ZW      SETC  '&ZW.0'                                                  03674900
.*                                                                      03675000
.* Bit 5    Version Comparison Type (set correctly by AMG)              03675100
&ZW      SETC  '&ZW.0'                                                  03675200
.*                                                                      03675300
.* Bit 6-7  Key Request Type Type                                       03675400
.* Set KEYREQTYPE                                                       03675500
.*                                                                      03675600
.*                                                                      03675700
         AIF   ('&XKEYREQTYPE' NE 'RANGE').NOKEYREQTYPERANGE            03675800
.*                                                                      03675900
.*                                                                      03676000
&ZW      SETC  '&ZW.11'                                                 03676100
&ZCLNG   SETC  'YES'                                                    03676200
         AGO   .PASTKEYREQTYPERANGE                                     03676300
.NOKEYREQTYPERANGE ANOP ,                                               03676400
&ZW      SETC  '&ZW.00'                                                 03676500
.PASTKEYREQTYPERANGE ANOP ,                                             03676600
.*                                                                      03676700
.*   _xCmdFlgs1B                                                        03676800
.*                                                                      03676900
&ZW      SETC  'B''&ZW.'''                                              03677000
.*                                                                      03677100
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1B                        03677200
.*                                                                      03677300
         OI    &PLOFF_XCMDFLGS1B.(1),&ZW.                               03677400
.*                                                                      03677500
.PLNOCMDFLGS1B ANOP ,                                                   03677600
.*                                                                      03677700
.*                                                                      03677800
.**  Set the command flags third byte                                ** 03677900
.*                                                                      03678000
.*                                                                      03678100
&ZW      SETC  ''                                                       03678200
&ZCLNG   SETC  ''                                                       03678300
         AIF   ('&XREQUEST' NE 'DELETE_LIST' AND                       *03678400
                '&XREQUEST' NE 'READ_LIST').PLNOCMDFLGS1C               03678500
.*                                                                      03678600
.*                                                                      03678700
         AIF   ('&XLOCATOR' NE 'ENTRYNAME').PLNOTENTRYNAME              03678800
.*                                                                      03678900
.*   _xCmdFlgs1C                                                        03679000
&ZW      SETC  '&ZW.00110000'                                           03679100
&ZCLNG   SETC  'YES'                                                    03679200
         AGO   .PASTENTRYNAME                                           03679300
.*                                                                      03679400
.PLNOTENTRYNAME ANOP ,                                                  03679500
.*                                                                      03679600
&ZW      SETC  '&ZW.00000000'                                           03679700
.PASTENTRYNAME ANOP ,                                                   03679800
.*                                                                      03679900
&ZW      SETC  'B''&ZW.'''                                              03680000
.*                                                                      03680100
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1C                        03680200
.*                                                                      03680300
         OI    &PLOFF_XCMDFLGS1C.(1),&ZW.                               03680400
.*                                                                      03680500
.PLNOCMDFLGS1C ANOP ,                                                   03680600
.*                                                                      03680700
.* If LOCKOPER^=HELDBY                                                  03680800
.* Then                                                                 03680900
.*   branch to PLLOCKOPERNOTHELDBY                                      03681000
         AIF   ('&XLOCKOPER' NE 'HELDBY').PLLOCKOPERNOTHELDBY           03681100
.*                                                                      03681200
.* Else (LOCKOPER=HELDBY)                                               03681300
.*                                                                      03681400
.* Handle the LockComp specification.                                   03681500
.* There are four ways it can be specified:                             03681600
.*  1) LOCKCOMP=(reg)       --> "reg" contains the address of the value 03681700
.*  2) LOCKCOMP=offset(reg) --> explicit basing specification           03681800
.*  3) LOCKCOMP=name        --> variable name                           03681900
.*  4) LOCKCOMP=value       --> hard-coded value                        03682000
.*                                                                      03682100
         AIF   ('&XLOCKCOMP' EQ ''              OR                     *03682200
                '&XLOCKCOMP' EQ 'NO_LOCKCOMP').PLHELDBYNOLOCKCOMP       03682300
         AIF   ('&XLOCKCOMP'(1,1) NE '(').PLLOCKCOMPNOTREG              03682400
&ZCGPR   SETC  '0('.'&XLOCKCOMP'(2,K'&XLOCKCOMP-2).')'                  03682500
         AGO   .PLENDLOCKCOMPSETUP                                      03682600
.PLLOCKCOMPNOTREG ANOP ,                                                03682700
&ZCGPR   SETC  '&XLOCKCOMP'                                             03682800
&ZC      SETC  '&XLOCKCOMP'(1,1)                                        03682900
         AIF   (T'&ZC NE 'N').PLENDLOCKCOMPSETUP                        03683000
&ZC      SETC  '&XLOCKCOMP'                                             03683100
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDLOCKCOMPSETUP               03683200
&ZCGPR   SETC  '=FL1''&XLOCKCOMP'''                                     03683300
.PLENDLOCKCOMPSETUP ANOP ,                                              03683400
.*                                                                      03683500
.*   _xCglm                                                             03683600
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                                03683700
.*                                                                      03683800
         AGO   .PLHELDBYEND                                             03683900
.*                                                                      03684000
.PLHELDBYNOLOCKCOMP ANOP ,                                              03684100
.*                                                                      03684200
.*   _xCglm, _xConId                                                    03684300
         MVC   &PLOFF_XCGLM.(1,1),&PLOFF_XCONID.(1)                     03684400
.*                                                                      03684500
.PLHELDBYEND ANOP ,                                                     03684600
.*                                                                      03684700
.* LockOper=NotHeld or LockOper not specified                           03684800
.PLLOCKOPERNOTHELDBY ANOP ,                                             03684900
.*                                                                      03685000
.*                                                                      03685100
.**  Set the AuthComp                                                   03685200
.*                                                                      03685300
         AIF   ('&AUTHCOMP(1)' EQ 'NO_AUTHCOMP' OR                     *03685400
                '&AUTHCOMP(1)' EQ '0'           OR                     *03685500
                '&AUTHCOMP(1)' EQ '').PLNOAUTHCOMP                      03685600
.*                                                                      03685700
.* Handle the AuthComp specification.                                   03685800
.* There are four ways it can be specified:                             03685900
.*  1) AUTHCOMP=(reg)       --> "reg" contains the addr of the value    03686000
.*  2) AUTHCOMP=offset(reg) --> explicit basing specification           03686100
.*  3) AUTHCOMP=name        --> variable name                           03686200
.*  4) AUTHCOMP=value       --> hard-coded value                        03686300
.*                                                                      03686400
         AIF   ('&XAUTHCOMP'(1,1) NE '(').PLAUTHCOMPNOTREG              03686500
&ZCGPR   SETC  '0('.'&XAUTHCOMP'(2,K'&XAUTHCOMP-2).')'                  03686600
         AGO   .PLENDAUTHCOMPSETUP                                      03686700
.PLAUTHCOMPNOTREG ANOP ,                                                03686800
&ZCGPR   SETC  '&XAUTHCOMP'                                             03686900
&ZC      SETC  '&XAUTHCOMP'(1,1)                                        03687000
         AIF   (T'&ZC NE 'N').PLENDAUTHCOMPSETUP                        03687100
&ZC      SETC  '&XAUTHCOMP'                                             03687200
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDAUTHCOMPSETUP               03687300
&ZCGPR   SETC  '=CL16''&XAUTHCOMP'''                                    03687400
.PLENDAUTHCOMPSETUP ANOP ,                                              03687500
.*                                                                      03687600
.*                                                                      03687700
.*   _xAuthComp                                                         03687800
         MVC   &PLOFF_XAUTHCOMP1.(16,1),&ZCGPR                          03687900
.*                                                                      03688000
.PLNOAUTHCOMP ANOP ,                                                    03688100
.*                                                                      03688200
.********************************************************************** 03688300
.* Since the extended restart token includes a normal restart token     03688400
.* the normal restart token portion of the extended restart token must  03688500
.* be copied to its own place in the MCB.                               03688600
.********************************************************************** 03688700
.*                                                                      03688800
         AIF   ('&XEXTRESTOKEN' EQ '').PLMULTREQSTNOTSPEC          @L1A 03688900
         MVC   &PLOFF_XRESTOKEN.(8,1),&PLOFF_XEXTRESTOKENTKN.(1)   @L1A 03689000
.*                                                                      03689100
.PLMULTREQSTNOTSPEC ANOP ,                                         @L1A 03689200
.*                                                                      03689300
.*                                                                      03689400
.********************************************************************** 03689500
.* If SKeyReqType=RANGE was specified, the SKRT field in the MCB must   03689600
.* be set by hand (SKRT=11).  Since this is the only field that must be 03689700
.* set by hand (in this byte), we can set it directly.                  03689800
.********************************************************************** 03689900
.*                                                                      03690000
         AIF   ('&XSKEYREQTYPE' NE 'RANGE').NOSKEYREQTYPERANGE          03690100
         OI    &PLOFF_XCMDFLGS2B.(1),B'00011000'                        03690200
.*                                                                      03690300
.NOSKEYREQTYPERANGE ANOP ,                                              03690400
.*                                                                      03690500
.*                                                                      03690600
.**------------------------------------------------------------------** 03690700
.**  Start of user maclasm code                                      ** 03690800
.**------------------------------------------------------------------** 03690900
.*                                                                      03691000
.**  Only generate code if no errors have been found                 ** 03691100
.*                                                                      03691200
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            03691300
.*                                                                      03691400
.*                                                                      03691500
.**------------------------------------------------------------------** 03691600
.**  Ensure AR1 is 0 for primary callers                             ** 03691700
.**------------------------------------------------------------------** 03691800
.*                                                                      03691900
.**  This code is necessary because the entry linkage of the called  ** 03692000
.**  routine needs to reference fields in the parameter list while   ** 03692100
.**  executing in AR mode without knowing the mode of the caller.    ** 03692200
.*                                                                      03692300
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    03692400
         LAE   1,0(1,0)                 Make sure AR1 is cleared        03692500
.CALLSKIPSETAR1 ANOP ,                                                  03692600
.*                                                                      03692700
.*                                                                      03692800
.**------------------------------------------------------------------** 03692900
.**  Generate the linkage to the list routine                        ** 03693000
.**------------------------------------------------------------------** 03693100
.*                                                                      03693200
.**  Note that in the following instructions the index register is   ** 03693300
.**  used instead of the base register so that ALET translation is   ** 03693400
.**  not performed and the code works the same in both primary and   ** 03693500
.**  AR mode.                                                        ** 03693600
.*                                                                      03693700
         L     15,16(0,0)               Get CVT address                 03693800
         L     15,140(15,0)             Get ECVT address                03693900
         L     15,256(15,0)             Get XRAT address                03694000
         L     15,36(15,0)              List mainline routine           03694100
         BALR  14,15                    Branch to routine               03694200
.*                                                                      03694300
.*                                                                      03694400
.ENDGENLINKAGE ANOP ,                                                   03694500
.*                                                                      03694600
.**------------------------------------------------------------------** 03694700
.**  End of user maclasm code                                        ** 03694800
.**------------------------------------------------------------------** 03694900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  03695000
.ZLINKX               ANOP  ,                                           03695100
.*******************************************************************    03695200
.***AP.X01  FORMAT GENERATED CODE                                       03695300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            03695400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              03695500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              03695600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              03695700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              03695800
                      AIF   (K'&ZLD LE 0).ZL51                          03695900
&ZLC                  SETA  35             COMMENT COLUMN               03696000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   03696100
&ZLC                  SETA  33             COMMENT COLUMN               03696200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  03696300
&ZLV                  SETC  '&ZLV'.' '                                  03696400
                      AGO   .ZL31                                       03696500
.*                                                                      03696600
.ZL41                 ANOP  ,                                           03696700
&ZLV                  SETC  '&ZLV'.' '                                  03696800
.ZL51                 ANOP  ,                                           03696900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               03697000
.*                                                                      03697100
&ZLL     &ZLOP &ZLV                                                     03697200
.*                                                                      03697300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               03697400
                      AGO   .ZL21          CONTINUE LOOPING             03697500
.*                                                                      03697600
.ZLX1                 ANOP  ,                                           03697700
.*******************************************************************    03697800
.***AP.X02  END OF IXLLSTM MACRO                                        03697900
&ZIXLLSTM             SETC  'YES'          SET IXLLSTM USED             03698000
         POP   PRINT                                                    03698100
*                                            IXLLSTM-4                  03698200
         SPACE 1                                                        03698300
.ZLX2                 ANOP  ,                                           03698400
         MEND                                                           03698500
**********************************************************************/ 03698600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  03698700
*%IXLLSTM: MACRO KEYS(CONTOKEN,REQID,REQUEST,TYPE,ADJAREA,DIRECTION,    03698800
*                 LOCATOR,LISTNUM,KEYSCANTYPE,AUTHCOMPARE,AUTHCOMP,     03698900
*                 AUTHCOMPTYPE,KEYCOMPARE,ENTRYKEY,KEYREQTYPE,          03699000
*                 KEYRANGEEND,SKEYCOMPARE,SECONDARYKEY,SKEYREQTYPE,     03699100
*                 SKEYRANGEEND,ENTRYID,LISTCOMPARE,ENTRYNAME,KEYTYPE,   03699200
*                 VERSCOMPARE,VERSCOMP,VERSCOMPTYPE,BUFLIST,            03699300
*                 BUFADDRTYPE,PAGEABLE,BUFSTGKEY,BUFALET,BUFADDRSIZE,   03699400
*                 BUFNUM,BUFFER,BUFSIZE,RESTOKEN,EXTRESTOKEN,           03699500
*                 FIRSTELEM,LASTELEM,MISCOMPARE,LISTTYPE,MOVETOKEY,     03699600
*                 LISTKEYINC,LISTKEYAREA,MOVETOSKEY,BUFINCRNUM,         03699700
*                 LOCKINDEX,LOCKOPER,LOCKCOMP,MODE,ANSAREA,ANSLEN,      03699800
*                 REQECB,REQDATA,REQTOKEN,FUNCTION,RETURNDUPFAIL,       03699900
*                 RETCODE,RSNCODE,PLISTVER,MF);                         03700000
*  ANS('?'!!MACLABEL!!' '!!'IXLLSTMP '!!MACLIST!!                       03700100
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              03700200
*%END IXLLSTM;                                                          03700300
