*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLLIST                               -01/13/18-<3> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES List Structure Services                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1993, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLLIST macro provides operations to atomically read,      * 00002100
*      write, move, and delete single entries from/to/within a        * 00002200
*      coupling facility list structure.  Operations to read or       * 00002300
*      delete multiple list entries, perform locking functions,       * 00002400
*      monitor list state changes, and read and write list controls   * 00002500
*      are also provided.                                             * 00002600
*                                                                     * 00002700
*      The list structure is accessed as a set of linked lists where  * 00002800
*      each list is comprised of some number of list entries.  The    * 00002900
*      number of lists is determined via programming interface when   * 00003000
*      the structure is allocated, and is static for the duration of  * 00003100
*      the structure.  IXLLIST facilitates designating the head or    * 00003200
*      tail of any particular list as the source, target, or starting * 00003300
*      point for various list operations.                             * 00003400
*                                                                     * 00003500
*      List entries are comprised of list entry data and/or list      * 00003600
*      adjunct data.  When a non-zero ELEMENTRATIO is specified on    * 00003700
*      IXLCONN then list entries may contain entry data.  The         * 00003800
*      presence or absence of entry data for a given list entry is    * 00003900
*      determined when the entry is created or written.  The          * 00004000
*      existence of adjunct data for all entries in a structure is    * 00004100
*      determined when the structure is allocated.  The areas         * 00004200
*      containing the entry data and adjunct data are referred to as  * 00004300
*      the data area and adjunct area, respectively.                  * 00004400
*                                                                     * 00004500
*      List entry data, when present, is comprised of 1 to 255        * 00004600
*      elements.  The size of an element and the maximum number of    * 00004700
*      elements in an entry is specified when the structure is        * 00004800
*      allocated.  The number of elements in an entry is established  * 00004900
*      when the entry is initially written and may be changed on      * 00005000
*      subsequent writes.  List adjunct data is always 64 bytes in    * 00005100
*      length.                                                        * 00005200
*                                                                     * 00005300
*      Users allocate list entries by invoking IXLLIST to "create" an * 00005400
*      entry.  Individual entries must reside on one linked list, and * 00005500
*      cannot reside on more than one list at a time.  An allocated   * 00005600
*      list entry has a structure assigned entry identifier which is  * 00005700
*      unique within the structure and can be used for subsequent     * 00005800
*      reference or access to that entry.  Structure allocation       * 00005900
*      allows an option to support user defined entry names, which    * 00006000
*      the structure will enforce as unique within the structure on   * 00006100
*      create requests.  Entry names may also be used for subsequent  * 00006200
*      entry reference and access.  Structure allocation also allows  * 00006300
*      optional entry key support, which functions as a mechanism for * 00006400
*      designating relative positions within a specified list other   * 00006500
*      than the list head or tail.  Entry name and entry key support  * 00006600
*      are mutually exclusive options.  A non-optional entry          * 00006700
*      characteristic is the entry version number.  Users determine   * 00006800
*      the version number to be assigned to each entry, and most list * 00006900
*      entry operations permit the setting, incrementing,             * 00007000
*      decrementing, and/or testing of the version number.  A list    * 00007100
*      operation can read from or write to either or both of the      * 00007200
*      entry data area and adjunct area.                              * 00007300
*                                                                     * 00007400
*      A "list cursor" is maintained for each linked list.  This list * 00007500
*      cursor is a list entry identifier corresponding to one of the  * 00007600
*      entries on the linked list.  If the list cursor is not         * 00007700
*      initialized it has a value of all binary zeros.  Many list     * 00007800
*      entry operations permit setting or updating the list cursor,   * 00007900
*      or allow the list cursor to be used in locating a list entry.  * 00008000
*                                                                     * 00008100
*      A list structure may also be allocated to include a lock table * 00008200
*      as part of the structure.  The lock table is comprised of a    * 00008300
*      set of exclusive locks which can be manipulated either         * 00008400
*      independently of or in conjunction with list entry and adjunct * 00008500
*      data.  Locking operations include the setting, resetting, and  * 00008600
*      testing of a specified lock.  List entry and adjunct data      * 00008700
*      operations can be affected by the state of a specified lock.   * 00008800
*      The purpose and scope of each lock is entirely user defined.   * 00008900
*                                                                     * 00009000
*      A connection may optionally have a list notification vector    * 00009100
*      allocated on the attached host CPC.  The notification vector   * 00009200
*      may be used to monitor list state changes from the empty to    * 00009300
*      non-empty state, and vice-versa, for any list in the           * 00009400
*      structure.                                                     * 00009500
*                                                                     * 00009600
*      Similarly,  the notification vector may be used to monitor the * 00009700
*      connector's event queue for state changes from the empty to    * 00009800
*      non-empty state, and vice versa.  The event queue is used to   * 00009900
*      contain event monitor controls (EMCs) for sublists which the   * 00010000
*      user is monitoring and which have become nonempty.  The event  * 00010100
*      queue transitions from empty to nonempty when a monitored      * 00010200
*      sublist becomes nonempty,  causing the event monitor controls  * 00010300
*      associated with the sublist to be queued to the user's event   * 00010400
*      queue.  The event queue transitions from nonempty to empty     * 00010500
*      when the last event monitor controls object is removed from    * 00010600
*      the event queue as a result of either:                         * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*      o   the event monitor controls being dequeued from the event   * 00011000
*          queue by the user                                          * 00011100
*                                                                     * 00011200
*      o   the event monitor controls being withdrawn from the event  * 00011300
*          queue as a result of the corresponding sublist becoming    * 00011400
*          empty                                                      * 00011500
*                                                                     * 00011600
*      o   the user deregistering monitoring interest in the          * 00011700
*          corresponding sublist.                                     * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*      Event queue monitoring should be used in conjunction with      * 00012200
*      sublist monitoring.                                            * 00012300
*                                                                     * 00012400
*      MVS provides a facility,  the IXLVECTR service, for optimized  * 00012500
*      testing of list transitions and/or event queue transitions     * 00012600
*      from empty to non-empty,  by interrogating the status of       * 00012700
*      individual entries in the notification vector which have been  * 00012800
*      associated with a particular list or the user's event queue.   * 00012900
*                                                                     * 00013000
*      Refer to the IXLCONN service description for additional        * 00013100
*      information regarding the allocation of and connection to a    * 00013200
*      list structure.                                                * 00013300
*                                                                     * 00013400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00013500
*                                                                     * 00013600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00013700
*                                                                     * 00013800
*01* ENVIRONMENT:                                                     * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00014200
*                                                                     * 00014300
*      Dispatchable unit mode: Task or SRB mode.                      * 00014400
*                                                                     * 00014500
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00014600
*                                                                     * 00014700
*                        The current primary address space must be    * 00014800
*                        the same as the primary address space at the * 00014900
*                        time the connection service, IXLCONN, was    * 00015000
*                        issued for the structure.  This address      * 00015100
*                        space is referred to as the connector's      * 00015200
*                        address space.                               * 00015300
*                                                                     * 00015400
*                        The requestor's address space refers to the  * 00015500
*                        home address space of the unit of work which * 00015600
*                        is issuing the IXLLIST request.  The         * 00015700
*                        requestor's address space may or may not be  * 00015800
*                        the same as the connector's address space.   * 00015900
*                                                                     * 00016000
*      AMODE:            31-bit.                                      * 00016100
*                                                                     * 00016200
*      ASC mode:         Primary or Access Register.                  * 00016300
*                                                                     * 00016400
*      Interrupt status: Enabled or disabled for I/O and external     * 00016500
*                        interrupts.                                  * 00016600
*                                                                     * 00016700
*      Locks:            Disabled callers must be legally disabled by * 00016800
*                        holding the CPU lock and cannot hold other   * 00016900
*                        disabled locks (invocation by DIE routines   * 00017000
*                        is not supported).  Enabled callers must not * 00017100
*                        hold any locks.  When MODE=SYNCSUSPEND is    * 00017200
*                        specified the caller must be enabled.        * 00017300
*                                                                     * 00017400
*      Control parameters:                                            * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*                        1.  The caller's parameter list must be      * 00017800
*                            addressable in the caller's primary      * 00017900
*                            address space.                           * 00018000
*                                                                     * 00018100
*                        2.  If the caller is running in Access       * 00018200
*                            Register ASC mode and specifies a macro  * 00018300
*                            parameter using explicit register        * 00018400
*                            notation the access register             * 00018500
*                            corresponding to the general register    * 00018600
*                            must appropriately qualify the general   * 00018700
*                            register.                                * 00018800
*                                                                     * 00018900
*                        3.  The virtual storage areas specified by   * 00019000
*                            the ADJAREA, ANSAREA,  and MOSVECTOR     * 00019100
*                            keywords must be addressable in the      * 00019200
*                            caller's primary address space or from   * 00019300
*                            the caller's PASN access list.           * 00019400
*                                                                     * 00019500
*                        4.  All other virtual storage areas          * 00019600
*                            specified on the invocation may be       * 00019700
*                            addressable in the caller's primary,     * 00019800
*                            secondary, or home address spaces, from  * 00019900
*                            the PASN access list, or from the DU     * 00020000
*                            access list.                             * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*01* PROGRAMMING REQUIREMENTS:                                        * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*    1.  Access Register mode invokers must specify SYSSTATE          * 00021000
*        ASCENV=AR prior to invoking this macro.                      * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*01* RESTRICTIONS:                                                    * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*    1.  If the caller is disabled then the parameter list and all    * 00021800
*        storage areas addressed by macro parameters must reside in   * 00021900
*        either non-pageable or disabled reference storage.           * 00022000
*                                                                     * 00022100
*    2.  The caller may not be running as a Disabled Interrupt Exit   * 00022200
*        (DIE).                                                       * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*01* INPUT REGISTER INFORMATION:                                      * 00022700
*                                                                     * 00022800
*    Before issuing the IXLLIST macro, the caller does not have to    * 00022900
*    place any information into any register or AR unless using it in * 00023000
*    register notation for a particular parameter, or using it as a   * 00023100
*    base register.                                                   * 00023200
*                                                                     * 00023300
*01* OUTPUT REGISTER INFORMATION:                                     * 00023400
*                                                                     * 00023500
*    When control returns to the caller, the GPRs contain:            * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*    REGISTER  CONTENTS                                               * 00023900
*                                                                     * 00024000
*    0         Reason code                                            * 00024100
*                                                                     * 00024200
*    1         Used as work registers by the system                   * 00024300
*                                                                     * 00024400
*    2-13      Unchanged                                              * 00024500
*                                                                     * 00024600
*    14        Used as work registers by the system.                  * 00024700
*                                                                     * 00024800
*    15        Return code                                            * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*    When control returns to the caller, the ARs contain:             * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*    REGISTER  CONTENTS                                               * 00025600
*                                                                     * 00025700
*    0-1       Used as work registers by the system                   * 00025800
*                                                                     * 00025900
*    2-13      Unchanged                                              * 00026000
*                                                                     * 00026100
*    14-15     Used as work registers by the system.                  * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*01* PERFORMANCE IMPLICATIONS:                                        * 00026600
*                                                                     * 00026700
*    None.                                                            * 00026800
*                                                                     * 00026900
*01* SYNTAX:                                                          * 00027000
*                                                                     * 00027100
*Ýxlabel¨  IXLLIST  Ð  REQUEST=READ                                   * 00027200
*                   Ô ,REQUEST=READ_LIST                              * 00027300
*                   !     ,TYPE=ENTDATA!ADJDATA!ECONTROLS             * 00027400
*                   Ô ,REQUEST=READ_MULT                              * 00027500
*                   !     ,TYPE=ENTDATA!ADJDATA!ECONTROLS             * 00027600
*                   !   ÐÝ,RESTOKEN                                   * 00027700
*                   !   !           =»xrestoken!NO_RESTOKENº          * 00027800
*                   !   ¿ ,EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨ * 00027900
*                   Ô ,REQUEST=READ_LCONTROLS                         * 00028000
*                   Ô ,REQUEST=READ_EQCONTROLS                        * 00028100
*                   Ô ,REQUEST=READ_EMCONTROLS                        * 00028200
*                   Ô ,REQUEST=DEQ_EVENTQ                             * 00028300
*                   Ô ,REQUEST=WRITE                                  * 00028400
*                   !    Ý,ENTRYTYPE=»ANY!OLD!NEWº¨                   * 00028500
*                   !    Ý,ELEMNUM=»xelemnum!NO_ELEMNUMº¨             * 00028600
*                   Ô ,REQUEST=WRITE_LCONTROLS                        * 00028700
*                   !    Ý,LISTLIMIT=»xlistlimit!NO_LISTLIMITº¨       * 00028800
*                   !    Ý,LISTDESC=»xlistdesc!NO_LISTDESCº¨          * 00028900
*                   !    Ý,LISTKEY=»xlistkey!NO_LISTKEYº¨             * 00029000
*                   !    Ý,MAXLISTKEY=»xmaxlistkey!NO_MAXLISTKEYº¨    * 00029100
*                   !    Ý,SETCURSOR=»HEAD!TAILº¨                     * 00029200
*                   Ô ,REQUEST=MOVE                                   * 00029300
*                   !     ,MOVETOLIST=xmovetolist                     * 00029400
*                   !    Ý,MOVETOKEY=»xmovetokey!NO_MOVETOKEYº¨       * 00029500
*                   !    Ý,MOVETOPOS=»HEAD!TAILº¨                     * 00029600
*                   !   ÐÝ,DATAOPER=NONE¨                             * 00029700
*                   !   ÔÝ,DATAOPER=READ¨                             * 00029800
*                   !   ¿Ý,DATAOPER=WRITE                             * 00029900
*                   !        Ý,ENTRYTYPE=»ANY!OLDº¨                   * 00030000
*                   !        Ý,ELEMNUM=»xelemnum!NO_ELEMNUMº¨¨        * 00030100
*                   Ô ,REQUEST=DELETE                                 * 00030200
*                   !   ÐÝ,DATAOPER=NONE¨                             * 00030300
*                   !   ¿Ý,DATAOPER=READ¨                             * 00030400
*                   Ô ,REQUEST=DELETE_MULT                            * 00030500
*                   !   ÐÝ,RESTOKEN                                   * 00030600
*                   !   !           =»xrestoken!NO_RESTOKENº          * 00030700
*                   !   ¿ ,EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨ * 00030800
*                   Ô ,REQUEST=DELETE_ENTRYLIST                       * 00030900
*                   !     ,LISTTYPE=»IDLIST!NAMELISTº                 * 00031000
*                   !    Ý,FIRSTELEM=»xfirstelem!1º¨                  * 00031100
*                   !     ,LASTELEM=xlastelem                         * 00031200
*                   Ô ,REQUEST=MONITOR_LIST                           * 00031300
*                   !   Ð ,ACTION=START                               * 00031400
*                   !   !     ,VECTORINDEX=xvectorindex               * 00031500
*                   !   !    Ý,DRIVEEXIT=»YES!NOº¨                    * 00031600
*                   !   ¿ ,ACTION=STOP                                * 00031700
*                   Ô ,REQUEST=MONITOR_EVENTQ                         * 00031800
*                   !   Ð ,ACTION=START                               * 00031900
*                   !   !     ,VECTORINDEX=xvectorindex               * 00032000
*                   !   !    Ý,DRIVEEXIT=»YES!NOº¨                    * 00032100
*                   !   ¿ ,ACTION=STOP                                * 00032200
*                   Ô ,REQUEST=MONITOR_SUBLIST                        * 00032300
*                   !   Ð ,ACTION=START                               * 00032400
*                   !   !     ,UNC=xunc                               * 00032500
*                   !   ¿ ,ACTION=STOP                                * 00032600
*                   Ô ,REQUEST=MONITOR_SUBLISTS                       * 00032700
*                   !     ,STARTINDEX=xstartindex                     * 00032800
*                   !     ,ENDINDEX=xendindex                         * 00032900
*                   !     ,MOSVECTOR=xmosvector                       * 00033000
*                   ¿ ,REQUEST=LOCK                                   * 00033100
*                     ,CONTOKEN=xcontoken                             * 00033200
*                    Ý,REQID=»xreqid!NO_REQIDº¨                       * 00033300
*                   ÐÝ,BUFLIST=»xbuflistº                             * 00033400
*                   !   ÐÝ,BUFADDRTYPE=VIRTUAL                        * 00033500
*                   !   !   ÐÝ,PAGEABLE=YES                           * 00033600
*                   !   !   !    Ý,BUFSTGKEY                          * 00033700
*                   !   !   !                =»xbufstgkey!CALLERS_KEY * 00033800
*                   !   !   !                º¨¨                      * 00033900
*                   !   !   ¿Ý,PAGEABLE=NO¨                           * 00034000
*                   !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨¨        * 00034100
*                   !   ¿Ý,BUFADDRTYPE=REAL¨                          * 00034200
*                   !    Ý,BUFNUM=»xbufnum!NO_BUFNUMº¨                * 00034300
*                   !    Ý,BUFINCRNUM=»xbufincrnum!NO_BUFINCRNUMº¨    * 00034400
*                   ¿ ,BUFFER=»xbufferº                               * 00034500
*                       ÐÝ,PAGEABLE=YES                               * 00034600
*                       !    Ý,BUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨   * 00034700
*                       ¿Ý,PAGEABLE=NO¨                               * 00034800
*                        Ý,BUFSIZE=»xbufsize!NO_BUFSIZEº¨¨            * 00034900
*                    Ý,ADJAREA=»xadjarea!NO_ADJAREAº¨                 * 00035000
*                    Ý,LISTNUM=»xlistnum!NO_LISTNUMº                  * 00035100
*                        Ý,LISTPOS=»HEAD!TAILº¨                       * 00035200
*                        Ý,ENTRYKEY=»xentrykey!NO_ENTRYKEYº           * 00035300
*                            Ý,KEYREQTYPE=»EQUAL!LESSOREQUAL!         * 00035400
*                                          GREATEROREQUALº¨¨          * 00035500
*                        Ý,AUTHCOMP=»xauthcomp!NO_AUTHCOMPº           * 00035600
*                            Ý,AUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨¨     * 00035700
*                        Ý,NEWAUTH=»xnewauth!NO_NEWAUTHº¨¨            * 00035800
*                    Ý,ENTRYID=»xentryid!NO_ENTRYIDº¨                 * 00035900
*                    Ý,ENTRYNAME=»xentryname!NO_ENTRYNAMEº¨           * 00036000
*                    Ý,LOCBYCURSOR¨                                   * 00036100
*                   ÐÝ,UPDATECURSOR=NO¨                               * 00036200
*                   ¿Ý,UPDATECURSOR=YES                               * 00036300
*                        Ý,CURSORUPDTYPE=»NEXT!NEXTCOND!CURRENT!      * 00036400
*                                         CURRENTCONDº¨¨              * 00036500
*                    Ý,LISTDIR=»TOTAIL!TOHEADº¨                       * 00036600
*                   ÐÝ,LISTKEYTYPE=NOLISTKEY¨                         * 00036700
*                   ÔÝ,LISTKEYTYPE=MOVE                               * 00036800
*                   !    Ý,LISTKEYINC=»xlistkeyinc!NO_LISTKEYINCº¨¨   * 00036900
*                   ÔÝ,LISTKEYTYPE=CREATE                             * 00037000
*                   !    Ý,LISTKEYINC=»xlistkeyinc!NO_LISTKEYINCº¨¨   * 00037100
*                   ¿Ý,LISTKEYTYPE=ANY                                * 00037200
*                        Ý,LISTKEYINC=»xlistkeyinc!NO_LISTKEYINCº¨¨   * 00037300
*                    Ý,KEYCOMP=»xkeycomp!NO_KEYCOMPº¨                 * 00037400
*                    Ý,VERSCOMP=»xverscomp!NO_VERSCOMPº               * 00037500
*                        Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨         * 00037600
*                   ÐÝ,VERSUPDATE=NONE¨                               * 00037700
*                   ÔÝ,VERSUPDATE=INC¨                                * 00037800
*                   ÔÝ,VERSUPDATE=DEC¨                                * 00037900
*                   ¿Ý,VERSUPDATE=SET                                 * 00038000
*                         ,NEWVERS=xnewvers¨                          * 00038100
*                    Ý,LOCKINDEX=»xlockindex!NO_LOCKINDEXº            * 00038200
*                       Ð ,LOCKOPER=SET                               * 00038300
*                       !    Ý,LOCKMODE=»UNCOND!CONDº¨                * 00038400
*                       !    Ý,LOCKDATA=»xlockdata!NO_LOCKDATAº¨      * 00038500
*                       Ô ,LOCKOPER=RESET                             * 00038600
*                       Ô ,LOCKOPER=NOTHELD                           * 00038700
*                       !    Ý,LOCKMODE=»UNCOND!CONDº¨                * 00038800
*                       Ô ,LOCKOPER=HELDBY                            * 00038900
*                       Ô ,LOCKOPER=TEST                              * 00039000
*                       ¿ ,LOCKOPER=READNEXT                          * 00039100
*                        Ý,LOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨¨         * 00039200
*                   ÐÝ,MODE=SYNCSUSPEND¨                              * 00039300
*                   ÔÝ,MODE=SYNCECB                                   * 00039400
*                   !     ,REQECB=xreqecb¨                            * 00039500
*                   ÔÝ,MODE=SYNCEXIT                                  * 00039600
*                   !    Ý,REQDATA=»xreqdata!NO_REQDATAº¨¨            * 00039700
*                   ÔÝ,MODE=SYNCTOKEN                                 * 00039800
*                   !     ,REQTOKEN=xreqtoken¨                        * 00039900
*                   ÔÝ,MODE=ASYNCECB                                  * 00040000
*                   !     ,REQECB=xreqecb¨                            * 00040100
*                   ÔÝ,MODE=ASYNCEXIT                                 * 00040200
*                   !    Ý,REQDATA=»xreqdata!NO_REQDATAº¨¨            * 00040300
*                   ÔÝ,MODE=ASYNCTOKEN                                * 00040400
*                   !     ,REQTOKEN=xreqtoken¨                        * 00040500
*                   ¿Ý,MODE=ASYNCNORESPONSE¨                          * 00040600
*                    Ý,ANSAREA=»xansarea!NO_ANSAREAº                  * 00040700
*                         ,ANSLEN=xanslen¨                            * 00040800
*                    Ý,RETCODE=xretcode¨                              * 00040900
*                    Ý,RSNCODE=xrsncode¨                              * 00041000
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00041100
*                   ÐÝ,MF=S¨                                          * 00041200
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00041300
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*      Where:                                                         * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*      Ýxlabel¨                                                       * 00042000
*          is an optional symbol, starting in column 1, that is the   * 00042100
*          name on the IXLLIST macro invocation.  The name must       * 00042200
*          conform to the rules for an ordinary assembler language    * 00042300
*          symbol.                                                    * 00042400
*          DEFAULT: No name.                                          * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*      REQUEST=»READ!READ_LIST!READ_MULT!READ_LCONTROLS!READ_EQCONTRO * 00043000
*          LS!READ_EMCONTROLS!DEQ_EVENTQ!WRITE!WRITE_LCONTROLS!MOVE!D * 00043100
*          ELETE!DELETE_MULT!DELETE_ENTRYLIST!MONITOR_LIST!MONITOR_EV * 00043200
*          ENTQ!MONITOR_SUBLIST!...º                                  * 00043300
*          is a required keyword input that specifies the type of     * 00043400
*          operation to be performed on the structure.                * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*          REQUEST=READ                                               * 00043800
*              Read single list entry.  Requests that the entry data  * 00043900
*              and/or adjunct data and/or list entry controls for the * 00044000
*              designated entry be read.                              * 00044100
*                                                                     * 00044200
*              Entry data is to be read into the storage area         * 00044300
*              specified by BUFFER or the buffers specified by        * 00044400
*              BUFLIST.  Adjunct data is to be read into the storage  * 00044500
*              area specified by ADJAREA.  The absence of BUFFER,     * 00044600
*              BUFLIST, and ADJAREA indicates the request is only     * 00044700
*              interested in obtaining the list entry controls in the * 00044800
*              answer area specified by ANSAREA.                      * 00044900
*                                                                     * 00045000
*              In addition, if LOCKINDEX is specified, the lock entry * 00045100
*              designated by LOCKINDEX will be operated on as         * 00045200
*              specified by the LOCKOPER keyword.                     * 00045300
*                                                                     * 00045400
*              When the request completes successfully the list entry * 00045500
*              controls, the number of entries or elements residing   * 00045600
*              on the list, and the total number of allocated entries * 00045700
*              in the structure are returned in the answer area       * 00045800
*              specified by ANSAREA.                                  * 00045900
*                                                                     * 00046000
*              CONTOKEN and at least one of LISTNUM, ENTRYID,         * 00046100
*              ENTRYNAME, and LOCBYCURSOR are required.               * 00046200
*                                                                     * 00046300
*          REQUEST=READ_LIST                                          * 00046400
*              Read list entries.  Requests that the entry data,      * 00046500
*              adjunct data, list entry controls, or any combination  * 00046600
*              of these for the entries on the list containing the    * 00046700
*              designated entry be read into the storage area         * 00046800
*              specified by BUFFER or the buffers specified by        * 00046900
*              BUFLIST.                                               * 00047000
*                                                                     * 00047100
*              When adjunct data is requested the adjunct data for    * 00047200
*              the first entry processed is returned in the storage   * 00047300
*              area specified by ADJAREA.  The adjunct data for all   * 00047400
*              other entries is returned in the BUFFER area or the    * 00047500
*              BUFLIST buffers.  When list entry controls are         * 00047600
*              requested the entry controls for the first entry       * 00047700
*              processed is returned in the answer area specified by  * 00047800
*              ANSAREA.  The entry controls for all other entries is  * 00047900
*              returned in the BUFFER area or the BUFLIST buffers.    * 00048000
*                                                                     * 00048100
*              Processing begins with the designated entry and        * 00048200
*              proceeds sequentially along the list in the direction  * 00048300
*              specified by LISTDIR until the head or tail of the     * 00048400
*              list is reached.                                       * 00048500
*                                                                     * 00048600
*              Specifying LISTNUM causes list number verification for * 00048700
*              the designated starting list entry to precede          * 00048800
*              processing of any list entries.  Specifying AUTHCOMP   * 00048900
*              causes list authority verification for the designated  * 00049000
*              list to precede processing of any list entries.        * 00049100
*              VERSCOMP may be used to restrict processing to those   * 00049200
*              entries with a version number matching that specified. * 00049300
*              The absence of LISTNUM and VERSCOMP indicates no list  * 00049400
*              number or version number criteria is to be applied     * 00049500
*              when selecting entries to be processed.                * 00049600
*                                                                     * 00049700
*              When the request completes successfully the number of  * 00049800
*              entries for which entry data, adjunct data, or list    * 00049900
*              entry controls was read is returned in the answer area * 00050000
*              specified by ANSAREA.                                  * 00050100
*                                                                     * 00050200
*              CONTOKEN and TYPE are required, as is one of BUFFER or * 00050300
*              BUFLIST and at least one of LISTNUM, ENTRYID,          * 00050400
*              ENTRYNAME, and LOCBYCURSOR.  When TYPE=ADJDATA is      * 00050500
*              specified ADJAREA is also required.                    * 00050600
*                                                                     * 00050700
*              A READ_LIST request may complete prematurely due to    * 00050800
*              exhaustion of the storage specified by BUFFER or       * 00050900
*              BUFLIST, or if coupling facility model dependent       * 00051000
*              timeout criteria is exceeded.  In this event           * 00051100
*              indicative return and reason codes are provided, the   * 00051200
*              number of entries for which data has been returned is  * 00051300
*              provided in ANSAREA, and the list entry controls for   * 00051400
*              the next appropriate entry in the list sequence to be  * 00051500
*              processed is returned in ANSAREA.  These list entry    * 00051600
*              controls may be specified as input on a subsequent     * 00051700
*              READ_LIST request to resume processing with the        * 00051800
*              appropriate list entry.  Note, however, that the       * 00051900
*              disposition of this list entry may have changed after  * 00052000
*              completion of the first READ_LIST request and before   * 00052100
*              the invocation of the resuming READ_LIST request.  For * 00052200
*              example, the list entry may have been deleted or moved * 00052300
*              to a different list in the structure.                  * 00052400
*                                                                     * 00052500
*              Resumed requests are processed identically to and must * 00052600
*              meet the same interface requirements as non-resumed    * 00052700
*              requests.  For example, BUFFER area and BUFLIST buffer * 00052800
*              boundary and length requirements are unchanged, and a  * 00052900
*              resumed request may in turn experience premature       * 00053000
*              completion.                                            * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*              TYPE=ENTDATA!ADJDATA!ECONTROLS                         * 00053500
*                  is a required group of keyword input(s) that       * 00053600
*                  specifies the type of information to be read.  Any * 00053700
*                  combination of the three values may be specified.  * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                  TYPE=ENTDATA                                       * 00054200
*                      Indicates that the entry data is to be read.   * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*                  TYPE=ADJDATA                                       * 00054600
*                      Indicates that the adjunct data is to be read. * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                  TYPE=ECONTROLS                                     * 00055000
*                      Indicates that list entry control information  * 00055100
*                      is to be read.                                 * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*                                                                     * 00055800
*          REQUEST=READ_MULT                                          * 00055900
*              Read multiple entries.  Requests that the entry data,  * 00056000
*              the associated adjunct data, or the list entry         * 00056100
*              controls for all allocated entries that meet the       * 00056200
*              criteria specified by LISTNUM and/or VERSCOMP be read  * 00056300
*              into the storage area specified by BUFFER or the       * 00056400
*              buffers specified by BUFLIST.                          * 00056500
*                                                                     * 00056600
*              Specifying LISTNUM and AUTHCOMP causes list authority  * 00056700
*              verification for the designated list to precede        * 00056800
*              processing of any list entries.  The absence of        * 00056900
*              LISTNUM and VERSCOMP indicates all allocated entries   * 00057000
*              are to be processed.  The order of entry processing is * 00057100
*              unpredictable.                                         * 00057200
*                                                                     * 00057300
*              When adjunct data is requested the adjunct data for    * 00057400
*              the first entry processed is returned in the storage   * 00057500
*              area specified by ADJAREA.  The adjunct data for all   * 00057600
*              other entries is returned in the BUFFER area or the    * 00057700
*              BUFLIST buffers.  When list entry controls are         * 00057800
*              requested the entry controls for the first entry       * 00057900
*              processed is returned in the answer area specified by  * 00058000
*              ANSAREA.  The entry controls for all other entries is  * 00058100
*              returned in the BUFFER area or the BUFLIST buffers.    * 00058200
*                                                                     * 00058300
*              When the request completes successfully the number of  * 00058400
*              entries for which entry data, adjunct data, or list    * 00058500
*              entry controls was read is returned in the answer area * 00058600
*              specified by ANSAREA.                                  * 00058700
*                                                                     * 00058800
*              CONTOKEN and TYPE are required, as is one of BUFFER or * 00058900
*              BUFLIST.  When TYPE=ADJDATA is specified ADJAREA is    * 00059000
*              also required.                                         * 00059100
*                                                                     * 00059200
*              A READ_MULT request may complete prematurely due to    * 00059300
*              exhaustion of the storage specified by BUFFER or       * 00059400
*              BUFLIST, or if coupling facility model dependent       * 00059500
*              timeout criteria is exceeded.  In this event           * 00059600
*              indicative return and reason codes are provided, and   * 00059700
*              the number of entries for which data has been returned * 00059800
*              and a restart token is provided in ANSAREA.  The       * 00059900
*              restart token may be specified as input on a           * 00060000
*              subsequent READ_MULT request to resume processing with * 00060100
*              the appropriate list entry.                            * 00060200
*                                                                     * 00060300
*              Except for designation of the starting point, resumed  * 00060400
*              requests are processed identically to and must meet    * 00060500
*              the same interface requirements as non-resumed         * 00060600
*              requests.  For example, BUFFER area and BUFLIST buffer * 00060700
*              boundary and length requirements are unchanged, and a  * 00060800
*              resumed request may in turn experience premature       * 00060900
*              completion.                                            * 00061000
*                                                                     * 00061100
*                                                                     * 00061200
*                                                                     * 00061300
*              TYPE=ENTDATA!ADJDATA!ECONTROLS                         * 00061400
*                  is a required group of keyword input(s) that       * 00061500
*                  specifies the type of information to be read.  Any * 00061600
*                  combination of the three values may be specified.  * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                  TYPE=ENTDATA                                       * 00062100
*                      Indicates that the entry data is to be read.   * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*                  TYPE=ADJDATA                                       * 00062500
*                      Indicates that the adjunct data is to be read. * 00062600
*                                                                     * 00062700
*                                                                     * 00062800
*                  TYPE=ECONTROLS                                     * 00062900
*                      Indicates that list entry control information  * 00063000
*                      is to be read.                                 * 00063100
*                                                                     * 00063200
*                                                                     * 00063300
*                                                                     * 00063400
*                                                                     * 00063500
*                                                                     * 00063600
*                                                                     * 00063700
*              The following is a set of mutually exclusive keys.     * 00063800
*              This set is optional; only one key may be specified.   * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*                  The RESTOKEN and EXTRESTOKEN keywords are input    * 00064200
*                  fields that name a restart token specifying an     * 00064300
*                  appropriate coupling facility indicator for        * 00064400
*                  resuming requests that complete prematurely.       * 00064500
*                                                                     * 00064600
*                  Specifying an input restart token initialized to   * 00064700
*                  all zeros causes the request to consider all       * 00064800
*                  entries as unprocessed.  Specifying an input       * 00064900
*                  restart token other than one returned from a       * 00065000
*                  previous invocation of the request and not fully   * 00065100
*                  initialized to all zeros will produce              * 00065200
*                  unpredictable request results.                     * 00065300
*                                                                     * 00065400
*                  A restart token is returned in the answer area     * 00065500
*                  specified by ANSAREA when the request completes    * 00065600
*                  prematurely, and may be specified on a subsequent  * 00065700
*                  READ_MULT request to resume the request at an      * 00065800
*                  appropriate point.                                 * 00065900
*                                                                     * 00066000
*                  Requestors who specify IXLCONN ALLOWAUTO=YES must  * 00066100
*                  use the 16-byte extended restart token             * 00066200
*                  (EXTRESTOKEN).  Users who specify IXLCONN          * 00066300
*                  ALLOWAUTO=NO must use the standard 8-byte restart  * 00066400
*                  tokens (RESTOKEN).                                 * 00066500
*                                                                     * 00066600
*              ÝRESTOKEN=»xrestoken!NO_RESTOKENº                      * 00066700
*                  belongs to a set of mutually exclusive keys. It is * 00066800
*                  the name (RS-type), or address in register         * 00066900
*                  (2)-(12), of an optional 8 character input field   * 00067000
*                  that contains a restart token specifying an        * 00067100
*                  appropriate coupling facility indicator for        * 00067200
*                  resuming requests that complete prematurely.       * 00067300
*                                                                     * 00067400
*                  A restart token is returned in the LAARESTOKEN     * 00067500
*                  field of the answer area specified by ANSAREA when * 00067600
*                  the request completes prematurely.                 * 00067700
*                                                                     * 00067800
*                  DEFAULT: NO_RESTOKEN                               * 00067900
*                                                                     * 00068000
*              EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨             * 00068100
*                  belongs to a set of mutually exclusive keys. It is * 00068200
*                  the name (RS-type), or address in register         * 00068300
*                  (2)-(12), of an optional 16 character input field  * 00068400
*                  that contains an extended restart token specifying * 00068500
*                  an appropriate coupling facility indicator for     * 00068600
*                  resuming requests that complete prematurely.       * 00068700
*                                                                     * 00068800
*                  A restart token is returned in the LAAEXTRESTOKEN  * 00068900
*                  field of the answer area specified by ANSAREA when * 00069000
*                  the request completes prematurely.                 * 00069100
*                                                                     * 00069200
*                  DEFAULT: NO_EXTRESTOKEN                            * 00069300
*                                                                     * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*              End of a set of mutually exclusive optional keys.      * 00069700
*              DEFAULT: RESTOKEN                                      * 00069800
*                                                                     * 00069900
*                                                                     * 00070000
*          REQUEST=READ_LCONTROLS                                     * 00070100
*              Read list controls.  Requests that control information * 00070200
*              for the list specified by LISTNUM be returned.         * 00070300
*                                                                     * 00070400
*              Information returned in the answer area specified by   * 00070500
*              ANSAREA consists of the total number of entries or     * 00070600
*              elements currently on the list, the maximum number of  * 00070700
*              entries or elements allowed to reside on the list, the * 00070800
*              number of list transitions from the empty to the       * 00070900
*              non-empty state, the user-defined list description and * 00071000
*              list authority, and the number of list monitoring      * 00071100
*              information entries returned.  In addition, the list   * 00071200
*              monitoring information for the list is returned in the * 00071300
*              storage specified by BUFFER or the buffers specified   * 00071400
*              by BUFLIST.  Refer to the IXLYLMI mapping macro for    * 00071500
*              the format of the returned list monitoring             * 00071600
*              information.                                           * 00071700
*                                                                     * 00071800
*              CONTOKEN and LISTNUM are required, as is one of BUFFER * 00071900
*              or BUFLIST.                                            * 00072000
*                                                                     * 00072100
*          REQUEST=READ_EQCONTROLS                                    * 00072200
*              Read event queue controls.  Requests that control      * 00072300
*              information for the requesting user's event queue be   * 00072400
*              returned.                                              * 00072500
*                                                                     * 00072600
*              This request type is valid only when the structure is  * 00072700
*              allocated in a CFLEVEL=3 or higher CF.                 * 00072800
*                                                                     * 00072900
*              Information returned in the answer area specified by   * 00073000
*              ANSAREA consists of the total number of EMCs currently * 00073100
*              on the event queue, the number of times that the event * 00073200
*              queue has transitioned from the empty to the non-empty * 00073300
*              state, the vector index number which is being used to  * 00073400
*              monitor the event queue,  and an indication of whether * 00073500
*              or not the user's list transition exit is to be driven * 00073600
*              for event queue transitions from the empty to          * 00073700
*              non-empty state.                                       * 00073800
*                                                                     * 00073900
*              CONTOKEN is a required keyword.                        * 00074000
*                                                                     * 00074100
*          REQUEST=READ_EMCONTROLS                                    * 00074200
*              Read event monitor controls.  Requests that control    * 00074300
*              information for the requesting user's registered       * 00074400
*              interest in monitoring a particular sublist            * 00074500
*              (designated by LISTNUM and ENTRYKEY) be returned.      * 00074600
*                                                                     * 00074700
*              This request type is valid only when the structure is  * 00074800
*              allocated in a CFLEVEL=3 or higher CF.  The structure  * 00074900
*              must support keyed list entries.                       * 00075000
*                                                                     * 00075100
*              Information returned in the answer area specified by   * 00075200
*              ANSAREA includes the user notification controls (UNC), * 00075300
*              the list number and entry key of the sublist for which * 00075400
*              event monitor controls were read, and an indication of * 00075500
*              whether or not the EMC is currently queued to the      * 00075600
*              user's event queue.                                    * 00075700
*                                                                     * 00075800
*              CONTOKEN, LISTNUM,  and ENTRYKEY are required.         * 00075900
*                                                                     * 00076000
*          REQUEST=DEQ_EVENTQ                                         * 00076100
*              Dequeue event queue EMCs.  Requests that event monitor * 00076200
*              controls be dequeued from the requesting user's event  * 00076300
*              queue.  The contents of the dequeued EMCs are returned * 00076400
*              in the specified BUFFER or BUFLIST area.  Each         * 00076500
*              individual EMC is mapped by the IXLYEMC mapping macro. * 00076600
*              Note that neither the EMCs nor the sublist monitoring  * 00076700
*              interest which they represent is deleted by this       * 00076800
*              request.  Sublist monitoring remains active until it   * 00076900
*              is stopped via a subsequent MONITOR_SUBLIST            * 00077000
*              ACTION=STOP request.                                   * 00077100
*                                                                     * 00077200
*              This request type is valid only when the structure is  * 00077300
*              allocated in a CFLEVEL=3 or higher CF.                 * 00077400
*                                                                     * 00077500
*              The DEQ_EVENTQ request may complete prematurely, that  * 00077600
*              is, without having dequeued all of the EMCs from the   * 00077700
*              user's event queue.  In such a case,  the user is      * 00077800
*              expected to process the EMCs which were returned on    * 00077900
*              the current request and then re-issue the DEQ_EVENTQ   * 00078000
*              request to continue the process of dequeueing the      * 00078100
*              remaining EMCs from the user's event queue.            * 00078200
*                                                                     * 00078300
*              Information returned in the answer area specified by   * 00078400
*              ANSAREA consists of the number of EMCs which were      * 00078500
*              returned,  and the number of EMCs which still remain   * 00078600
*              on the user's event queue.                             * 00078700
*                                                                     * 00078800
*              CONTOKEN, and one of BUFFER or BUFLIST are required.   * 00078900
*                                                                     * 00079000
*          REQUEST=WRITE                                              * 00079100
*              Write single list entry.  Requests that the contents   * 00079200
*              of the storage area specified by BUFFER or the buffers * 00079300
*              specified by BUFLIST, and/or the storage area          * 00079400
*              specified by ADJAREA be written to the designated list * 00079500
*              entry.                                                 * 00079600
*                                                                     * 00079700
*              In some cases this request type results in the         * 00079800
*              creation of a new list entry.  In the event a list     * 00079900
*              entry is created, then:                                * 00080000
*                                                                     * 00080100
*                                                                     * 00080200
*              o   If the structure supports named entries then the   * 00080300
*                  name specified by ENTRYNAME is assigned as the     * 00080400
*                  entry name.                                        * 00080500
*                                                                     * 00080600
*              o   If the structure supports entry data and BUFFER    * 00080700
*                  and BUFLIST are not specified, then the created    * 00080800
*                  entry does not contain any entry data.             * 00080900
*                                                                     * 00081000
*              o   If the structure supports adjunct data and ADJDATA * 00081100
*                  is not specified, then the created entry contains  * 00081200
*                  binary zeros for adjunct data.                     * 00081300
*                                                                     * 00081400
*              o   If the structure supports keyed entries then a key * 00081500
*                  is assigned the newly created entry as follows:    * 00081600
*                                                                     * 00081700
*                                                                     * 00081800
*                  -   If ENTRYKEY was specified then the new entry   * 00081900
*                      is assigned the ENTRYKEY value.                * 00082000
*                                                                     * 00082100
*                  -   If ENTRYKEY was not specified and LISTPOS=HEAD * 00082200
*                      is indicated, the new entry is assigned a key  * 00082300
*                      value of all binary zeros.                     * 00082400
*                                                                     * 00082500
*                  -   If ENTRYKEY was not specified and LISTPOS=TAIL * 00082600
*                      is indicated, the new entry is assigned a key  * 00082700
*                      value of all binary ones.                      * 00082800
*                                                                     * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*                                                                     * 00083300
*              The size of an existing entry may be altered by        * 00083400
*              specifying an ELEMNUM value which is different than    * 00083500
*              the ELEMNUM value used when the entry was created.     * 00083600
*              When the amount of space indicated by ELEMNUM is       * 00083700
*              greater than the amount of data specified for BUFFER   * 00083800
*              or BUFLIST then the entry will be padded with zeros.   * 00083900
*              When the amount of space indicated by ELEMNUM is less  * 00084000
*              than the amount of data specified fo BUFFER or BUFLIST * 00084100
*              then the input data will be truncated.                 * 00084200
*                                                                     * 00084300
*              In addition, if LOCKINDEX is specified, the lock entry * 00084400
*              designated by LOCKINDEX will be operated on as         * 00084500
*              specified by the LOCKOPER keyword.                     * 00084600
*                                                                     * 00084700
*              When the request completes successfully the list entry * 00084800
*              controls, the number of entries or elements residing   * 00084900
*              on the list, and the total number of allocated entries * 00085000
*              in the structure are returned in the answer area       * 00085100
*              specified by ANSAREA.                                  * 00085200
*                                                                     * 00085300
*              Required keywords are CONTOKEN and at least one of     * 00085400
*              LISTNUM, ENTRYID, ENTRYNAME, and LOCBYCURSOR.  When    * 00085500
*              BUFFER or BUFLIST is specified then ELEMNUM is also    * 00085600
*              required.                                              * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*              ÝENTRYTYPE=»ANY!OLD!NEWº¨                              * 00086000
*                  is an optional keyword input that specifies the    * 00086100
*                  disposition of the entry to be written.            * 00086200
*                                                                     * 00086300
*                  DEFAULT: ANY                                       * 00086400
*                                                                     * 00086500
*                                                                     * 00086600
*                  ENTRYTYPE=ANY                                      * 00086700
*                      Requests that if the designated list entry     * 00086800
*                      exists then it's entry data and/or adjunct     * 00086900
*                      data are to be replaced.  If the list entry    * 00087000
*                      does not exist, then a new entry is to be      * 00087100
*                      created.                                       * 00087200
*                                                                     * 00087300
*                      If the entry is designated by keyed position   * 00087400
*                      (i.e., LISTNUM and ENTRYKEY are specified and  * 00087500
*                      ENTRYID is not), then if any such keyed entry  * 00087600
*                      exists an update is performed and no entry is  * 00087700
*                      created.                                       * 00087800
*                                                                     * 00087900
*                      If the structure supports named list entries   * 00088000
*                      then ENTRYNAME must be specified.              * 00088100
*                                                                     * 00088200
*                                                                     * 00088300
*                  ENTRYTYPE=OLD                                      * 00088400
*                      Requests that the data entry and/or adjunct    * 00088500
*                      area contents of an existing list entry be     * 00088600
*                      replaced.  The designated entry must already   * 00088700
*                      exist.                                         * 00088800
*                                                                     * 00088900
*                                                                     * 00089000
*                  ENTRYTYPE=NEW                                      * 00089100
*                      Requests that a new list entry be created.     * 00089200
*                                                                     * 00089300
*                      If the structure supports named list entries   * 00089400
*                      then ENTRYNAME must be specified.  If a list   * 00089500
*                      entry already exists with the specified name   * 00089600
*                      then the request is failed.  If the structure  * 00089700
*                      supports keyed list entries a new list entry   * 00089800
*                      is created even when a list entry with the     * 00089900
*                      same key value resides on the specified list.  * 00090000
*                                                                     * 00090100
*                                                                     * 00090200
*                                                                     * 00090300
*                                                                     * 00090400
*                                                                     * 00090500
*                                                                     * 00090600
*              ÝELEMNUM=»xelemnum!NO_ELEMNUMº¨                        * 00090700
*                  is the name (RS-type), or address in register      * 00090800
*                  (2)-(12), of an optional byte input specifying the * 00090900
*                  number of elements in the entry data of a list     * 00091000
*                  entry being written.                               * 00091100
*                                                                     * 00091200
*                  If the list entry already exists and the number of * 00091300
*                  elements specified by ELEMNUM is greater than the  * 00091400
*                  number of elements currently in the entry then the * 00091500
*                  entry will be expanded to the new size.            * 00091600
*                  Similarly, if the list entry already exists and    * 00091700
*                  the number of elements specified by ELEMNUM is     * 00091800
*                  less than the number of elements currently in the  * 00091900
*                  entry then the entry will be contracted to the new * 00092000
*                  size.  If an ELEMNUM value of zero is specified    * 00092100
*                  the list entry will not contain any entry data.    * 00092200
*                                                                     * 00092300
*                  For structures allocated on CFLEVEL=0 coupling     * 00092400
*                  facilities ELEMNUM values must be in the range of  * 00092500
*                  0 to 16.  For structures allocated on coupling     * 00092600
*                  facilities with a CFLEVEL greater than zero        * 00092700
*                  ELEMNUM values must be in the range of 0 to 255.   * 00092800
*                  ELEMNUM must also be less than or equal to the     * 00092900
*                  value returned in the connect answer area          * 00093000
*                  CONALISTMAXELEMNUM field from the IXLCONN          * 00093100
*                  invocation.                                        * 00093200
*                                                                     * 00093300
*                  The ELEMNUM keyword is required for WRITE requests * 00093400
*                  when BUFFER or BUFLIST is specified.               * 00093500
*                                                                     * 00093600
*                  DEFAULT: NO_ELEMNUM                                * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*          REQUEST=WRITE_LCONTROLS                                    * 00094100
*              Write list controls.  Requests that one or more of the * 00094200
*              list controls for the list specified by LISTNUM be     * 00094300
*              updated.  The list controls which may be updated       * 00094400
*              include the following:                                 * 00094500
*                                                                     * 00094600
*                                                                     * 00094700
*              o   List authority (NEWAUTH)                           * 00094800
*                                                                     * 00094900
*              o   List limit bounding the number of entries or       * 00095000
*                  elements which may reside on the list (LISTLIMIT)  * 00095100
*                                                                     * 00095200
*              o   List description (LISTDESC)                        * 00095300
*                                                                     * 00095400
*              o   List key (LISTKEY)                                 * 00095500
*                                                                     * 00095600
*              o   Maximum list key (MAXLISTKEY)                      * 00095700
*                                                                     * 00095800
*              o   List cursor and list cursor direction (SETCURSOR)  * 00095900
*                                                                     * 00096000
*                                                                     * 00096100
*                                                                     * 00096200
*              CONTOKEN and LISTNUM are required.                     * 00096300
*                                                                     * 00096400
*                                                                     * 00096500
*              ÝLISTLIMIT=»xlistlimit!NO_LISTLIMITº¨                  * 00096600
*                  is the name (RS-type), or address in register      * 00096700
*                  (2)-(12), of an optional fullword input specifying * 00096800
*                  the list limit bounding the number of entries or   * 00096900
*                  elements that may reside on the list.  If          * 00097000
*                  LISTLIMIT is not specified the list limit for the  * 00097100
*                  designated list will remain unchanged.             * 00097200
*                                                                     * 00097300
*                  Note: The default list limit for all lists when    * 00097400
*                  the structure is allocated is the total number of  * 00097500
*                  list entries or elements in the structure.         * 00097600
*                                                                     * 00097700
*                  When an IXLALTER is processed for a list           * 00097800
*                  structure, if the list limit for a list is equal   * 00097900
*                  to the default value then it will be automatically * 00098000
*                  adjusted to the new number of entries or elements. * 00098100
*                  If a list limit is not equal to the default value  * 00098200
*                  then the alter process will not adjust it and it   * 00098300
*                  is the responsibility of the user, if desired, to  * 00098400
*                  set a new limit taking into account the current    * 00098500
*                  entry and element counts for the altered           * 00098600
*                  structure.                                         * 00098700
*                  DEFAULT: NO_LISTLIMIT                              * 00098800
*                                                                     * 00098900
*                                                                     * 00099000
*                                                                     * 00099100
*                                                                     * 00099200
*              ÝLISTDESC=»xlistdesc!NO_LISTDESCº¨                     * 00099300
*                  is the name (RS-type), or address in register      * 00099400
*                  (2)-(12), of an optional 32 character input        * 00099500
*                  specifying the user defined description to be      * 00099600
*                  associated with the list.  If LISTDESC is not      * 00099700
*                  specified the user description for the designated  * 00099800
*                  list will remain unchanged.                        * 00099900
*                                                                     * 00100000
*                  Note: The default list description for all lists   * 00100100
*                  when the structure is allocated is binary zeros.   * 00100200
*                  DEFAULT: NO_LISTDESC                               * 00100300
*                                                                     * 00100400
*                                                                     * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*              ÝLISTKEY=»xlistkey!NO_LISTKEYº¨                        * 00100800
*                  is the name (RS-type), or address in register      * 00100900
*                  (2)-(12), of an optional 16 character input        * 00101000
*                  specifying the list key to be associated with the  * 00101100
*                  list.  This list key value may be assigned to list * 00101200
*                  entries when they are created or moved.            * 00101300
*                                                                     * 00101400
*                  If LISTKEY is not specified the list key for the   * 00101500
*                  designated list will remain unchanged.  LISTKEY is * 00101600
*                  ignored when the structure does not support keyed  * 00101700
*                  entries.                                           * 00101800
*                                                                     * 00101900
*                  Note: The default list key for all lists when the  * 00102000
*                  structure is allocated is binary zeros.            * 00102100
*                                                                     * 00102200
*                  The LISTKEY keyword is only meaningful for list    * 00102300
*                  structures allocated on level 1 or greater         * 00102400
*                  coupling facilities.                               * 00102500
*                  DEFAULT: NO_LISTKEY                                * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*                                                                     * 00102900
*                                                                     * 00103000
*              ÝMAXLISTKEY=»xmaxlistkey!NO_MAXLISTKEYº¨               * 00103100
*                  is the name (RS-type), or address in register      * 00103200
*                  (2)-(12), of an optional 16 character input        * 00103300
*                  specifying the maximum list key value to be        * 00103400
*                  associated with the list.  This value specifies an * 00103500
*                  upper bound for the list key value.                * 00103600
*                                                                     * 00103700
*                  If MAXLISTKEY is not specified the maximum list    * 00103800
*                  key for the designated list will remain unchanged. * 00103900
*                  MAXLISTKEY is ignored when the structure does not  * 00104000
*                  support keyed entries.                             * 00104100
*                                                                     * 00104200
*                  Note: The default maximum list key for all lists   * 00104300
*                  when the structure is allocated is binary zeros.   * 00104400
*                                                                     * 00104500
*                  The MAXLISTKEY keyword is only meaningful for list * 00104600
*                  structures allocated on level 1 or greater         * 00104700
*                  coupling facilities.                               * 00104800
*                  DEFAULT: NO_MAXLISTKEY                             * 00104900
*                                                                     * 00105000
*                                                                     * 00105100
*                                                                     * 00105200
*                                                                     * 00105300
*              ÝSETCURSOR=»HEAD!TAILº¨                                * 00105400
*                  is an optional keyword input which indicates that  * 00105500
*                  the list cursor and the list cursor direction are  * 00105600
*                  to be set.                                         * 00105700
*                                                                     * 00105800
*                  The list cursor direction is only used when        * 00105900
*                  UPDATECURSOR=YES and CURSORUPDTYPE=NEXTCOND are    * 00106000
*                  specifed.                                          * 00106100
*                                                                     * 00106200
*                  When SETCURSOR is not specified the list cursor    * 00106300
*                  and list cursor direction are not changed.         * 00106400
*                                                                     * 00106500
*                  Note: The default list cursor for all lists when   * 00106600
*                  the structure is allocated is binary zeros.  The   * 00106700
*                  default list cursor direction for all lists when   * 00106800
*                  the structure is allocated is a head-to-tail       * 00106900
*                  direction.                                         * 00107000
*                                                                     * 00107100
*                  The SETCURSOR keyword is only meaningful for list  * 00107200
*                  structures allocated on level 1 or greater         * 00107300
*                  coupling facilities.                               * 00107400
*                                                                     * 00107500
*                  DEFAULT: HEAD                                      * 00107600
*                                                                     * 00107700
*                                                                     * 00107800
*                  SETCURSOR=HEAD                                     * 00107900
*                      Indicates that the list cursor is to be set to * 00108000
*                      the entry identifier for the first entry on    * 00108100
*                      the list and the list cursor direction is to   * 00108200
*                      be set in a head-to-tail direction.  If the    * 00108300
*                      list is empty then the list cursor will be     * 00108400
*                      reset to binary zeros.                         * 00108500
*                                                                     * 00108600
*                                                                     * 00108700
*                  SETCURSOR=TAIL                                     * 00108800
*                      Indicates that the list cursor is to be set to * 00108900
*                      the entry identifier for the last entry on the * 00109000
*                      list and the list cursor direction is to be    * 00109100
*                      set in a tail-to-head direction.  If the list  * 00109200
*                      is empty then the list cursor will be reset to * 00109300
*                      binary zeros.                                  * 00109400
*                                                                     * 00109500
*                                                                     * 00109600
*                                                                     * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*          REQUEST=MOVE                                               * 00110000
*              Move single list entry.  Requests that the designated  * 00110100
*              list entry be removed from the list on which it        * 00110200
*              resides and placed at the position specified by the    * 00110300
*              MOVETOLIST, MOVETOKEY, and/or MOVETOPOS keywords.      * 00110400
*                                                                     * 00110500
*              In addition, if LOCKINDEX is specified, the lock entry * 00110600
*              designated by LOCKINDEX will be operated on as         * 00110700
*              specified by the LOCKOPER keyword.                     * 00110800
*                                                                     * 00110900
*              When the request completes successfully the list entry * 00111000
*              controls, the number of entries or elements residing   * 00111100
*              on the target list, and the total number of allocated  * 00111200
*              entries in the structure are returned in the answer    * 00111300
*              area specified by ANSAREA.                             * 00111400
*                                                                     * 00111500
*              Required keywords are CONTOKEN, MOVETOLIST, and at     * 00111600
*              least one of LISTNUM, ENTRYID, ENTRYNAME, and          * 00111700
*              LOCBYCURSOR.  See the DATAOPER options below for       * 00111800
*              additional required keywords.                          * 00111900
*                                                                     * 00112000
*                                                                     * 00112100
*              MOVETOLIST=xmovetolist                                 * 00112200
*                  is the name (RS-type), or address in register      * 00112300
*                  (2)-(12), of a required fullword input that        * 00112400
*                  specifies the number of the target list to which   * 00112500
*                  the entry is to be moved, or perhaps, if           * 00112600
*                  DATAOPER=WRITE and ENTRYTYPE=ANY are specified,    * 00112700
*                  onto which an entry is to be created.              * 00112800
*                                                                     * 00112900
*                  If the structure does not support keyed entries,   * 00113000
*                  then the resultant target position will be the     * 00113100
*                  head or tail of this list, as indicated by         * 00113200
*                  MOVETOPOS.  If the structure supports keyed        * 00113300
*                  entries and MOVETOKEY is specified, then the       * 00113400
*                  resultant target position is the keyed position on * 00113500
*                  this list specified by MOVETOKEY and MOVETOPOS.    * 00113600
*                  If the structure supports keyed entries but        * 00113700
*                  MOVETOKEY is not specified, then the resultant     * 00113800
*                  target position on this list is determined as      * 00113900
*                  follows:                                           * 00114000
*                                                                     * 00114100
*                                                                     * 00114200
*                  o   If the entry already exists then the entry key * 00114300
*                      remains unchanged and, in conjunction with     * 00114400
*                      MOVETOPOS, identifies the target position.     * 00114500
*                                                                     * 00114600
*                  o   If an entry is created and ENTRYKEY was        * 00114700
*                      specified, then ENTRYKEY and MOVETOPOS         * 00114800
*                      identify the target position.                  * 00114900
*                                                                     * 00115000
*                  o   If an entry is created and ENTRYKEY was not    * 00115100
*                      specified, then the target position is the     * 00115200
*                      head or tail of the list, as specified by      * 00115300
*                      MOVETOPOS.                                     * 00115400
*                                                                     * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*                                                                     * 00115900
*                                                                     * 00116000
*              ÝMOVETOKEY=»xmovetokey!NO_MOVETOKEYº¨                  * 00116100
*                  is the name (RS-type), or address in register      * 00116200
*                  (2)-(12), of an optional 16 character input that   * 00116300
*                  partially designates the keyed position on the     * 00116400
*                  list specified by MOVETOLIST.                      * 00116500
*                                                                     * 00116600
*                  If there exists a sublist of one or more entries   * 00116700
*                  with a matching key on the list then the target    * 00116800
*                  position is the head or tail of the sublist, as    * 00116900
*                  specified by MOVETOPOS.  If all existing list      * 00117000
*                  entries have a key greater than that specified by  * 00117100
*                  MOVETOKEY then the target position is at the head  * 00117200
*                  of the list.  Similarly, if the specified          * 00117300
*                  MOVETOKEY exceeds all the list entry keys then the * 00117400
*                  target position is at the tail of the list.  If    * 00117500
*                  none of the list entries has a matching key, and   * 00117600
*                  MOVETOKEY is neither the greatest nor least among  * 00117700
*                  the list entry keys, then the target position is   * 00117800
*                  according to appropriate key sequence for the      * 00117900
*                  list.                                              * 00118000
*                                                                     * 00118100
*                  If MOVETOKEY is not specified then the moved       * 00118200
*                  entry's resultant key (and hence the target list   * 00118300
*                  keyed position) is determined as follows:          * 00118400
*                                                                     * 00118500
*                                                                     * 00118600
*                  o   the existing entry key when the entry already  * 00118700
*                      exists (i.e., is not created by this request). * 00118800
*                                                                     * 00118900
*                  o   ENTRYKEY when it is specified and an entry is  * 00119000
*                      created.                                       * 00119100
*                                                                     * 00119200
*                  o   all binary zeros when an entry is created,     * 00119300
*                      ENTRYKEY is not specified, and MOVETOPOS=HEAD  * 00119400
*                      is specified.                                  * 00119500
*                                                                     * 00119600
*                  o   all binary ones when an entry is created,      * 00119700
*                      ENTRYKEY is not specified, and MOVETOPOS=TAIL  * 00119800
*                      is specified.                                  * 00119900
*                                                                     * 00120000
*                                                                     * 00120100
*                                                                     * 00120200
*                  If an existing list entry being moved has a key    * 00120300
*                  value different than the MOVETOKEY specification,  * 00120400
*                  then the key value will be changed to that         * 00120500
*                  specified by MOVETOKEY as a result of this move    * 00120600
*                  request.                                           * 00120700
*                                                                     * 00120800
*                  This keyword is only applicable for structures     * 00120900
*                  that support keyed entries, and is otherwise       * 00121000
*                  ignored.                                           * 00121100
*                                                                     * 00121200
*                  DEFAULT: NO_MOVETOKEY                              * 00121300
*                                                                     * 00121400
*                                                                     * 00121500
*                                                                     * 00121600
*                                                                     * 00121700
*              ÝMOVETOPOS=»HEAD!TAILº¨                                * 00121800
*                  is an optional keyword input that partially        * 00121900
*                  designates the target position on the list         * 00122000
*                  specified by the MOVETOLIST and MOVETOKEY          * 00122100
*                  keywords.                                          * 00122200
*                                                                     * 00122300
*                  DEFAULT: HEAD                                      * 00122400
*                                                                     * 00122500
*                                                                     * 00122600
*                  MOVETOPOS=HEAD                                     * 00122700
*                      This option has meaning as follows:            * 00122800
*                                                                     * 00122900
*                                                                     * 00123000
*                      o   When keyed entries are not supported or    * 00123100
*                          when an entry is initially allocated and   * 00123200
*                          an entry key key is not specified the      * 00123300
*                          designated target position is the head of  * 00123400
*                          the list.                                  * 00123500
*                                                                     * 00123600
*                      o   Otherwise, the designated target position  * 00123700
*                          is the head of the sublist containing      * 00123800
*                          entries with keys matching the moved       * 00123900
*                          entry's resultant key.                     * 00124000
*                                                                     * 00124100
*                                                                     * 00124200
*                                                                     * 00124300
*                                                                     * 00124400
*                  MOVETOPOS=TAIL                                     * 00124500
*                      This option has meaning as follows:            * 00124600
*                                                                     * 00124700
*                                                                     * 00124800
*                      o   When keyed entries are not supported or    * 00124900
*                          when an entry initially allocated and an   * 00125000
*                          entry key key is not specified the         * 00125100
*                          designated target position is the tail of  * 00125200
*                          the list.                                  * 00125300
*                                                                     * 00125400
*                      o   Otherwise, the designated target position  * 00125500
*                          is the tail of the sublist containing      * 00125600
*                          entries with keys matching the moved       * 00125700
*                          entry's resultant key.                     * 00125800
*                                                                     * 00125900
*                                                                     * 00126000
*                                                                     * 00126100
*                                                                     * 00126200
*                                                                     * 00126300
*                                                                     * 00126400
*                                                                     * 00126500
*                                                                     * 00126600
*              ÝDATAOPER=»NONE!READ!WRITEº¨                           * 00126700
*                  is an optional keyword input that specifies an     * 00126800
*                  operation to be performed on the list entry data   * 00126900
*                  in addition to moving it.                          * 00127000
*                                                                     * 00127100
*                  DEFAULT: NONE                                      * 00127200
*                                                                     * 00127300
*                                                                     * 00127400
*                  ÝDATAOPER=NONE¨                                    * 00127500
*                      keyword that indicates no additional operation * 00127600
*                      is to be performed.                            * 00127700
*                                                                     * 00127800
*                                                                     * 00127900
*                  ÝDATAOPER=READ¨                                    * 00128000
*                      In addition to moving the list entry, the      * 00128100
*                      entry and/or adjunct data is read into the     * 00128200
*                      storage areas specified by BUFFER or BUFLIST   * 00128300
*                      and/or ADJAREA.                                * 00128400
*                                                                     * 00128500
*                      At least one of BUFFER or BUFLIST and ADJAREA  * 00128600
*                      is required when DATAOPER=READ is specified.   * 00128700
*                                                                     * 00128800
*                                                                     * 00128900
*                  ÝDATAOPER=WRITE                                    * 00129000
*                      In addition to moving the list entry, the      * 00129100
*                      contents of the storage area(s) specified by   * 00129200
*                      BUFFER or BUFLIST and/or ADJAREA is written to * 00129300
*                      the list entry.                                * 00129400
*                                                                     * 00129500
*                      The size of an existing entry may be altered   * 00129600
*                      by specifying an ELEMNUM value which is        * 00129700
*                      different than the ELEMNUM value used when the * 00129800
*                      entry was created.  When the amount of space   * 00129900
*                      indicated by ELEMNUM is greater than the       * 00130000
*                      amount of data specified for BUFFER or BUFLIST * 00130100
*                      then the entry will be padded with zeros.      * 00130200
*                      When the amount of space indicated by ELEMNUM  * 00130300
*                      is less than the amount of data specified for  * 00130400
*                      BUFFER or BUFLIST then the input data will be  * 00130500
*                      truncated.                                     * 00130600
*                                                                     * 00130700
*                                                                     * 00130800
*                      ÝENTRYTYPE=»ANY!OLDº¨                          * 00130900
*                          is an optional keyword input that          * 00131000
*                          specifies the disposition of the entry to  * 00131100
*                          be written.                                * 00131200
*                                                                     * 00131300
*                          DEFAULT: ANY                               * 00131400
*                                                                     * 00131500
*                                                                     * 00131600
*                          ENTRYTYPE=ANY                              * 00131700
*                              Requests that if the designated list   * 00131800
*                              entry exists then it's entry data      * 00131900
*                              and/or adjunct data are to be          * 00132000
*                              replaced.  If the list entry does not  * 00132100
*                              exist, then a new entry is to be       * 00132200
*                              created at the designated MOVE target  * 00132300
*                              position.                              * 00132400
*                                                                     * 00132500
*                              If the entry is designated by keyed    * 00132600
*                              position (i.e., LISTNUM and ENTRYKEY   * 00132700
*                              are specified and ENTRYID is not),     * 00132800
*                              then if any such keyed entry exists a  * 00132900
*                              move and entry update is performed,    * 00133000
*                              and no entry is created.               * 00133100
*                                                                     * 00133200
*                              ENTRYNAME is required for this option  * 00133300
*                              if the structure supports named        * 00133400
*                              entries.                               * 00133500
*                                                                     * 00133600
*                                                                     * 00133700
*                          ENTRYTYPE=OLD                              * 00133800
*                              Requests that the contents of the      * 00133900
*                              designated list entry be replaced.     * 00134000
*                              The list entry must already exist.     * 00134100
*                                                                     * 00134200
*                                                                     * 00134300
*                                                                     * 00134400
*                                                                     * 00134500
*                                                                     * 00134600
*                                                                     * 00134700
*                      ÝELEMNUM=»xelemnum!NO_ELEMNUMº¨¨               * 00134800
*                          is the name (RS-type), or address in       * 00134900
*                          register (2)-(12), of an optional byte     * 00135000
*                          input specifying the number of elements in * 00135100
*                          the entry data of a list entry being       * 00135200
*                          written.                                   * 00135300
*                                                                     * 00135400
*                          If the list entry already exists and the   * 00135500
*                          number of elements specified by ELEMNUM is * 00135600
*                          greater than the number of elements        * 00135700
*                          currently in the entry then the entry will * 00135800
*                          be expanded to the new size.  Similarly,   * 00135900
*                          if the list entry already exists and the   * 00136000
*                          number of elements specified by ELEMNUM is * 00136100
*                          less than the number of elements currently * 00136200
*                          in the entry then the entry will be        * 00136300
*                          contracted to the new size.  If an ELEMNUM * 00136400
*                          value of zero is specified the list entry  * 00136500
*                          will not contain any entry data.           * 00136600
*                                                                     * 00136700
*                          For structures allocated on CFLEVEL=0      * 00136800
*                          coupling facilities ELEMNUM values must be * 00136900
*                          in the range of 0 to 16.  For structures   * 00137000
*                          allocated on coupling facilities with a    * 00137100
*                          CFLEVEL greater than zero ELEMNUM values   * 00137200
*                          must be in the range of 0 to 255.  ELEMNUM * 00137300
*                          must also be less than or equal to the     * 00137400
*                          value returned in the connect answer area  * 00137500
*                          CONALISTMAXELEMNUM field from the IXLCONN  * 00137600
*                          invocation.                                * 00137700
*                                                                     * 00137800
*                          The ELEMNUM keyword is required for MOVE   * 00137900
*                          requests with DATAOPER=WRITE when BUFFER   * 00138000
*                          or BUFLIST is specified.                   * 00138100
*                                                                     * 00138200
*                          DEFAULT: NO_ELEMNUM                        * 00138300
*                                                                     * 00138400
*                                                                     * 00138500
*                                                                     * 00138600
*                                                                     * 00138700
*                                                                     * 00138800
*                                                                     * 00138900
*                                                                     * 00139000
*          REQUEST=DELETE                                             * 00139100
*              Delete single list entry.  Requests that the           * 00139200
*              designated list entry be removed from the list on      * 00139300
*              which it resides and returned to the pool of free      * 00139400
*              entries for reuse.  If DATAOPER=READ is specified the  * 00139500
*              list entry data and/or adjunct data will be read into  * 00139600
*              the specified data area(s) prior to deletion.          * 00139700
*                                                                     * 00139800
*              In addition, if LOCKINDEX is specified, the lock entry * 00139900
*              designated by LOCKINDEX will be operated on as         * 00140000
*              specified by the LOCKOPER keyword.                     * 00140100
*                                                                     * 00140200
*              When the request completes successfully the list entry * 00140300
*              controls for the deleted entry, the remaining number   * 00140400
*              of entries or elements residing on the list, and the   * 00140500
*              remaining total number of allocated entries in the     * 00140600
*              structure are returned in the answer area specified by * 00140700
*              ANSAREA.                                               * 00140800
*                                                                     * 00140900
*              Required keywords are CONTOKEN and at least one of     * 00141000
*              LISTNUM, ENTRYID, ENTRYNAME, and LOCBYCURSOR.  When    * 00141100
*              DATAOPER=READ is specified at least one of BUFFER,     * 00141200
*              BUFLIST, or ADJAREA is also required.                  * 00141300
*                                                                     * 00141400
*                                                                     * 00141500
*              ÝDATAOPER=»NONE!READº¨                                 * 00141600
*                  is an optional keyword input that specifies an     * 00141700
*                  operation to be performed on the list entry data   * 00141800
*                  in addition to deleting it.                        * 00141900
*                                                                     * 00142000
*                  DEFAULT: NONE                                      * 00142100
*                                                                     * 00142200
*                                                                     * 00142300
*                  ÝDATAOPER=NONE¨                                    * 00142400
*                      keyword that indicates no additional operation * 00142500
*                      is to be performed.                            * 00142600
*                                                                     * 00142700
*                                                                     * 00142800
*                  ÝDATAOPER=READ¨                                    * 00142900
*                      Before deleting the list entry, the entry      * 00143000
*                      and/or adjunct data is to be read into the     * 00143100
*                      storage areas specified by BUFFER or BUFLIST   * 00143200
*                      and/or ADJAREA.                                * 00143300
*                                                                     * 00143400
*                      At least one of BUFFER or BUFLIST and ADJAREA  * 00143500
*                      is required when DATAOPER=READ is specified.   * 00143600
*                                                                     * 00143700
*                                                                     * 00143800
*                                                                     * 00143900
*                                                                     * 00144000
*                                                                     * 00144100
*          REQUEST=DELETE_MULT                                        * 00144200
*              Delete multiple entries.  Requests that all entries    * 00144300
*              meeting any specified LISTNUM and VERSCOMP criteria be * 00144400
*              removed from whatever list they reside on and returned * 00144500
*              to the pool of free entries for reuse.                 * 00144600
*                                                                     * 00144700
*              Specifying LISTNUM and AUTHCOMP causes list authority  * 00144800
*              verification for the designated list to precede        * 00144900
*              processing of any list entries.  The absence of        * 00145000
*              LISTNUM and VERSCOMP would result in all entries being * 00145100
*              deleted.                                               * 00145200
*                                                                     * 00145300
*              When the request completes successfully the number of  * 00145400
*              entries deleted as a result of this request is         * 00145500
*              returned in the answer area specified by ANSAREA.      * 00145600
*                                                                     * 00145700
*              The CONTOKEN keyword is required.                      * 00145800
*                                                                     * 00145900
*              A DELETE_MULT request may complete prematurely if      * 00146000
*              coupling facility model dependent timeout criteria is  * 00146100
*              exceeded.  In this event indicative return and reason  * 00146200
*              codes are provided, and the number of entries deleted  * 00146300
*              and a restart token is provided in ANSAREA.  This      * 00146400
*              restart token may be specified as input on a           * 00146500
*              subsequent DELETE_MULT request to resume processing    * 00146600
*              with the appropriate list entry.                       * 00146700
*                                                                     * 00146800
*              Except for designation of the starting point, resumed  * 00146900
*              requests are processed identically to and must meet    * 00147000
*              the same interface requirements as non-resumed         * 00147100
*              requests.  A resumed request may in turn experience    * 00147200
*              premature completion.                                  * 00147300
*                                                                     * 00147400
*                                                                     * 00147500
*              The following is a set of mutually exclusive keys.     * 00147600
*              This set is optional; only one key may be specified.   * 00147700
*                                                                     * 00147800
*                                                                     * 00147900
*                  The RESTOKEN and EXTRESTOKEN keywords are input    * 00148000
*                  fields that name a restart token specifying an     * 00148100
*                  appropriate coupling facility indicator for        * 00148200
*                  resuming requests that complete prematurely.       * 00148300
*                                                                     * 00148400
*                  Specifying an input restart token initialized to   * 00148500
*                  all zeros causes the request to consider all       * 00148600
*                  entries as unprocessed.  Specifying an input       * 00148700
*                  restart token other than one returned from a       * 00148800
*                  previous invocation of the request and not fully   * 00148900
*                  initialized to all zeros will produce              * 00149000
*                  unpredictable request results.                     * 00149100
*                                                                     * 00149200
*                  A restart token is returned in the answer area     * 00149300
*                  specified by ANSAREA when the request completes    * 00149400
*                  prematurely, and may be specified on a subsequent  * 00149500
*                  DELETE_MULT request to resume the request at an    * 00149600
*                  appropriate point.                                 * 00149700
*                                                                     * 00149800
*                  Requestors who specify IXLCONN ALLOWAUTO=YES must  * 00149900
*                  use the 16-byte extended restart token             * 00150000
*                  (EXTRESTOKEN).  Users who specify IXLCONN          * 00150100
*                  ALLOWAUTO=NO must use the standard 8-byte restart  * 00150200
*                  tokens (RESTOKEN).                                 * 00150300
*                                                                     * 00150400
*              ÝRESTOKEN=»xrestoken!NO_RESTOKENº                      * 00150500
*                  belongs to a set of mutually exclusive keys. It is * 00150600
*                  the name (RS-type), or address in register         * 00150700
*                  (2)-(12), of an optional 8 character input field   * 00150800
*                  that contains a restart token specifying an        * 00150900
*                  appropriate coupling facility indicator for        * 00151000
*                  resuming requests that complete prematurely.       * 00151100
*                                                                     * 00151200
*                  A restart token is returned in the LAARESTOKEN     * 00151300
*                  field of the answer area specified by ANSAREA when * 00151400
*                  the request completes prematurely.                 * 00151500
*                                                                     * 00151600
*                  DEFAULT: NO_RESTOKEN                               * 00151700
*                                                                     * 00151800
*              EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨             * 00151900
*                  belongs to a set of mutually exclusive keys. It is * 00152000
*                  the name (RS-type), or address in register         * 00152100
*                  (2)-(12), of an optional 16 character input field  * 00152200
*                  that contains an extended restart token specifying * 00152300
*                  an appropriate coupling facility indicator for     * 00152400
*                  resuming requests that complete prematurely.       * 00152500
*                                                                     * 00152600
*                  A restart token is returned in the LAAEXTRESTOKEN  * 00152700
*                  field of the answer area specified by ANSAREA when * 00152800
*                  the request completes prematurely.                 * 00152900
*                                                                     * 00153000
*                  DEFAULT: NO_EXTRESTOKEN                            * 00153100
*                                                                     * 00153200
*                                                                     * 00153300
*                                                                     * 00153400
*              End of a set of mutually exclusive optional keys.      * 00153500
*              DEFAULT: RESTOKEN                                      * 00153600
*                                                                     * 00153700
*                                                                     * 00153800
*          REQUEST=DELETE_ENTRYLIST                                   * 00153900
*              Delete by entry list.  Requests that all entries       * 00154000
*              specified by the list of entry identifiers or entry    * 00154100
*              names in the storage area specified by BUFFER or the   * 00154200
*              buffers specified by BUFLIST be removed from whatever  * 00154300
*              list they reside on and returned to the pool of free   * 00154400
*              entries for reuse.                                     * 00154500
*                                                                     * 00154600
*              LISTNUM and/or VERSCOMP may optionally be specified to * 00154700
*              limit deletion of entries to those residing on the     * 00154800
*              specified list or with a matching version number,      * 00154900
*              respectively.  Specifying LISTNUM and AUTHCOMP causes  * 00155000
*              list authority verification for the designated list to * 00155100
*              precede processing of any list entries.                * 00155200
*                                                                     * 00155300
*              When the request completes successfully the number of  * 00155400
*              entries deleted for this request is returned in the    * 00155500
*              answer area specified by ANSAREA.                      * 00155600
*                                                                     * 00155700
*              If any entry specified in the input list does not      * 00155800
*              exist then processing is halted and the index of the   * 00155900
*              offending entry identifier or name is also returned in * 00156000
*              the answer area.  In this event all specified entries  * 00156100
*              preceding the offending entry have been processed.     * 00156200
*              All succeeding entries have not been processed.        * 00156300
*                                                                     * 00156400
*              CONTOKEN and LASTELEM are required, as is one of       * 00156500
*              BUFFER or BUFLIST.                                     * 00156600
*                                                                     * 00156700
*              A DELETE_ENTRYLIST request may complete prematurely if * 00156800
*              coupling facility model dependent timeout criteria is  * 00156900
*              exceeded.  In this event indicative return and reason  * 00157000
*              codes are provided, and the number of entries deleted  * 00157100
*              thus far and the index of the first unprocessed entry  * 00157200
*              identifier or name is provided in ANSAREA.  The        * 00157300
*              request may subsequently be re-issued for the sublist  * 00157400
*              of remaining unprocessed entry identifiers or names by * 00157500
*              specifying the index returned in the answer area on    * 00157600
*              keyword FIRSTELEM.                                     * 00157700
*                                                                     * 00157800
*              Re-issued requests are processed identically to and    * 00157900
*              must meet the same interface requirements as original  * 00158000
*              requests.  A re-issued request may in turn experience  * 00158100
*              premature completion.                                  * 00158200
*                                                                     * 00158300
*                                                                     * 00158400
*              LISTTYPE=»IDLIST!NAMELISTº                             * 00158500
*                  is a required keyword input that specifies whether * 00158600
*                  the input in the BUFFER area or the BUFLIST        * 00158700
*                  buffers for the DELETE_ENTRYLIST request consists  * 00158800
*                  of a list of list entry identifiers or names.      * 00158900
*                                                                     * 00159000
*                                                                     * 00159100
*                  LISTTYPE=IDLIST                                    * 00159200
*                      The input in the BUFFER area or the BUFLIST    * 00159300
*                      buffers consists of a list of list entry       * 00159400
*                      identifiers.                                   * 00159500
*                                                                     * 00159600
*                  LISTTYPE=NAMELIST                                  * 00159700
*                      The input in the BUFFER area or the BUFLIST    * 00159800
*                      buffers consists of a list of list entry       * 00159900
*                      names.                                         * 00160000
*                                                                     * 00160100
*                      LISTTYPE=NAMELIST is not allowed for           * 00160200
*                      structures that do not support named entries.  * 00160300
*                      LISTTYPE=NAMELIST is mutually exclusive with   * 00160400
*                      the KEYCOMP keyword.                           * 00160500
*                                                                     * 00160600
*                                                                     * 00160700
*                                                                     * 00160800
*                                                                     * 00160900
*                                                                     * 00161000
*                                                                     * 00161100
*              ÝFIRSTELEM=»xfirstelem!1º¨                             * 00161200
*                  is the name (RS-type), or address in register      * 00161300
*                  (2)-(12), of an optional halfword input specifying * 00161400
*                  the index of the first list entry identifier or    * 00161500
*                  name to be processed.                              * 00161600
*                                                                     * 00161700
*                  The value must specify one of the entry            * 00161800
*                  identifiers or names passed in the BUFFER area or  * 00161900
*                  the BUFLIST buffers.  An index value of 1          * 00162000
*                  references the first entry identifier or name in   * 00162100
*                  the BUFFER area or in the first BUFLIST buffer.    * 00162200
*                                                                     * 00162300
*                  DEFAULT: 1                                         * 00162400
*                                                                     * 00162500
*                                                                     * 00162600
*                                                                     * 00162700
*                                                                     * 00162800
*              LASTELEM=xlastelem                                     * 00162900
*                  is the name (RS-type), or address in register      * 00163000
*                  (2)-(12), of a required halfword input specifying  * 00163100
*                  the index of the last list entry identifier or     * 00163200
*                  name to be processed.                              * 00163300
*                                                                     * 00163400
*                  The specified value must be greater than or equal  * 00163500
*                  to the specified FIRSTELEM value and must specify  * 00163600
*                  one of the entry identifiers or names passed in    * 00163700
*                  the BUFFER area or the BUFLIST buffers.            * 00163800
*                                                                     * 00163900
*                                                                     * 00164000
*                                                                     * 00164100
*          REQUEST=MONITOR_LIST                                       * 00164200
*              Monitor a list.  Requests that list notification       * 00164300
*              vector monitoring of the list specified by LISTNUM be  * 00164400
*              started or stopped.                                    * 00164500
*                                                                     * 00164600
*              While list monitoring is in effect for a list the      * 00164700
*              IXLVECTR service may be used to determine whether the  * 00164800
*              list contains any entries.  The IXLVECTR service may   * 00164900
*              also be used to alter the size of the list             * 00165000
*              notification vector, and thus change the number of     * 00165100
*              lists which can be monitored concurrently.  Refer to   * 00165200
*              the IXLVECTR service for more details.                 * 00165300
*                                                                     * 00165400
*              If a list notification vector index is in use for      * 00165500
*              monitoring a list, a request to stop the list          * 00165600
*              monitoring for the list should be performed before     * 00165700
*              using the vector index on another request to start     * 00165800
*              list monitoring.  If a vector index is in use for      * 00165900
*              monitoring a list, a request to start list monitoring  * 00166000
*              for the same list with a different vector index will   * 00166100
*              cause the vector index in use for the list to be       * 00166200
*              replaced by the new vector index.  In this case it is  * 00166300
*              not necessary to stop the list monitoring using the    * 00166400
*              old index before requesting to start list monitoring   * 00166500
*              using the new index.                                   * 00166600
*                                                                     * 00166700
*              CONTOKEN and LISTNUM are required keywords.            * 00166800
*                                                                     * 00166900
*                                                                     * 00167000
*              ACTION=»START!STOPº                                    * 00167100
*                  is a required keyword input that specifies whether * 00167200
*                  list monitoring is to be started or stopped.       * 00167300
*                                                                     * 00167400
*                                                                     * 00167500
*                                                                     * 00167600
*                  ACTION=START                                       * 00167700
*                      Requests that monitoring for the connection    * 00167800
*                      specified by CONTOKEN be started for the list  * 00167900
*                      specified by LISTNUM.                          * 00168000
*                                                                     * 00168100
*                      ACTION=START is mutually exclusive with        * 00168200
*                      MODE=ASYNCNORESPONSE.                          * 00168300
*                                                                     * 00168400
*                                                                     * 00168500
*                      VECTORINDEX=xvectorindex                       * 00168600
*                          is the name (RS-type), or address in       * 00168700
*                          register (2)-(12), of a required fullword  * 00168800
*                          input field which contains the list        * 00168900
*                          notification vector index to be associated * 00169000
*                          with the list specified by LISTNUM.  If    * 00169100
*                          the request completes successfully, this   * 00169200
*                          local notication vector index in the       * 00169300
*                          vector for the connection specified by     * 00169400
*                          CONTOKEN will subsequently reflect the     * 00169500
*                          list empty/non-empty state.                * 00169600
*                                                                     * 00169700
*                                                                     * 00169800
*                                                                     * 00169900
*                                                                     * 00170000
*                      ÝDRIVEEXIT=»YES!NOº¨                           * 00170100
*                          is an optional keyword input that          * 00170200
*                          specifies whether XES should drive the     * 00170300
*                          connection's list transition exit when the * 00170400
*                          state of a list changes from empty to      * 00170500
*                          non-empty.                                 * 00170600
*                                                                     * 00170700
*                          DEFAULT: YES                               * 00170800
*                                                                     * 00170900
*                                                                     * 00171000
*                          DRIVEEXIT=YES                              * 00171100
*                              When the state of a list changes from  * 00171200
*                              empty to non-empty XES will drive the  * 00171300
*                              connection's list transition exit.     * 00171400
*                                                                     * 00171500
*                                                                     * 00171600
*                          DRIVEEXIT=NO                               * 00171700
*                              When the state of a list changes from  * 00171800
*                              empty to non-empty XES will not drive  * 00171900
*                              the connection's list transition exit. * 00172000
*                                                                     * 00172100
*                                                                     * 00172200
*                                                                     * 00172300
*                                                                     * 00172400
*                                                                     * 00172500
*                  ACTION=STOP                                        * 00172600
*                      Requests that monitoring for the connection    * 00172700
*                      specified by CONTOKEN be stopped for the list  * 00172800
*                      specified by LISTNUM.                          * 00172900
*                                                                     * 00173000
*                                                                     * 00173100
*                                                                     * 00173200
*                                                                     * 00173300
*                                                                     * 00173400
*          REQUEST=MONITOR_EVENTQ                                     * 00173500
*              Monitor the user's event queue.  Requests that vector  * 00173600
*              monitoring of the requesting user's event queue be     * 00173700
*              started or stopped.                                    * 00173800
*                                                                     * 00173900
*              This request type is valid only when the structure is  * 00174000
*              allocated in a CFLEVEL=3 or higher CF.  The user must  * 00174100
*              have a local vector associated with his connection to  * 00174200
*              the structure,  and the structure must support keyed   * 00174300
*              list entries.                                          * 00174400
*                                                                     * 00174500
*              While event queue monitoring is in effect for an event * 00174600
*              queue, the IXLVECTR service may be used to determine   * 00174700
*              whether the event queue contains any event monitor     * 00174800
*              controls (EMCs).  These EMCs represent nonempty        * 00174900
*              sublists in which the user has registered sublist      * 00175000
*              monitoring interest.  Refer to the IXLVECTR service    * 00175100
*              for more details.  The user should use event queue     * 00175200
*              monitoring in conjunction with sublist monitoring      * 00175300
*              (MONITOR_SUBLIST and/or MONITOR_SUBLISTS) to process   * 00175400
*              state transitions for monitored sublists.  Queued EMCs * 00175500
*              may be dequeued from the user's event queue,  and      * 00175600
*              their contents read, using the DEQ_EVENTQ request.     * 00175700
*                                                                     * 00175800
*              If event queue monitoring is in effect, a request to   * 00175900
*              start monitoring the event queue with a different      * 00176000
*              VECTORINDEX or DRIVEEXIT specification will cause the  * 00176100
*              old specifications to be immediately replaced by the   * 00176200
*              new specifications.  It is not necessary to stop event * 00176300
*              queue monitoring before requesting to start monitoring * 00176400
*              using the new specifications.  The state of the        * 00176500
*              replaced vector index is not defined.  However,  since * 00176600
*              the replaced vector index is no longer being used to   * 00176700
*              monitor the event queue,  it may be reassigned for     * 00176800
*              other uses (e.g. to monitor a list).                   * 00176900
*                                                                     * 00177000
*              When event queue monitoring is stopped,  the state of  * 00177100
*              the vector index which was previously being used to    * 00177200
*              monitor the event queue is not defined.  However,      * 00177300
*              since the vector index is no longer being used to      * 00177400
*              monitor the event queue,  it may be reassigned for     * 00177500
*              other uses (e.g. to monitor a list).                   * 00177600
*                                                                     * 00177700
*              CONTOKEN is a required keyword.                        * 00177800
*                                                                     * 00177900
*                                                                     * 00178000
*              ACTION=»START!STOPº                                    * 00178100
*                  is a required keyword input that specifies whether * 00178200
*                  event queue monitoring is to be started or         * 00178300
*                  stopped.                                           * 00178400
*                                                                     * 00178500
*                                                                     * 00178600
*                                                                     * 00178700
*                  ACTION=START                                       * 00178800
*                      Requests that event queue monitoring for the   * 00178900
*                      connection specified by CONTOKEN be started.   * 00179000
*                                                                     * 00179100
*                                                                     * 00179200
*                      VECTORINDEX=xvectorindex                       * 00179300
*                          is the name (RS-type), or address in       * 00179400
*                          register (2)-(12), of a required fullword  * 00179500
*                          input field which contains the vector      * 00179600
*                          index to be associated with the monitored  * 00179700
*                          event queue.  If the request completes     * 00179800
*                          successfully, this local vector index in   * 00179900
*                          the vector for the connection specified by * 00180000
*                          CONTOKEN will subsequently reflect the     * 00180100
*                          empty/non-empty state of the user's event  * 00180200
*                          queue.                                     * 00180300
*                                                                     * 00180400
*                                                                     * 00180500
*                                                                     * 00180600
*                                                                     * 00180700
*                      ÝDRIVEEXIT=»YES!NOº¨                           * 00180800
*                          is an optional keyword input that          * 00180900
*                          specifies whether XES should drive the     * 00181000
*                          connection's list transition exit when the * 00181100
*                          state of the user's event queue changes    * 00181200
*                          from empty to non-empty.                   * 00181300
*                                                                     * 00181400
*                          DEFAULT: YES                               * 00181500
*                                                                     * 00181600
*                                                                     * 00181700
*                          DRIVEEXIT=YES                              * 00181800
*                              When the state of the user's event     * 00181900
*                              queue changes from empty to non-empty  * 00182000
*                              XES will drive the connection's list   * 00182100
*                              transition exit.                       * 00182200
*                                                                     * 00182300
*                                                                     * 00182400
*                          DRIVEEXIT=NO                               * 00182500
*                              When the state of the user's event     * 00182600
*                              queue changes from empty to non-empty  * 00182700
*                              XES will not drive the connection's    * 00182800
*                              list transition exit.                  * 00182900
*                                                                     * 00183000
*                                                                     * 00183100
*                                                                     * 00183200
*                                                                     * 00183300
*                                                                     * 00183400
*                  ACTION=STOP                                        * 00183500
*                      Requests that monitoring of the event queue    * 00183600
*                      for the connection specified by CONTOKEN be    * 00183700
*                      stopped.                                       * 00183800
*                                                                     * 00183900
*                                                                     * 00184000
*                                                                     * 00184100
*                                                                     * 00184200
*                                                                     * 00184300
*          REQUEST=MONITOR_SUBLIST                                    * 00184400
*              Monitor a sublist, designated by a list number and     * 00184500
*              entry key, within the list structure.  Requests that   * 00184600
*              monitoring of the designated sublist be started or     * 00184700
*              stopped for the requesting user.                       * 00184800
*                                                                     * 00184900
*              This request type is valid only when the structure is  * 00185000
*              allocated in a CFLEVEL=3 or higher CF.  The user must  * 00185100
*              have a local vector associated with his connection to  * 00185200
*              the structure,  and the structure must support keyed   * 00185300
*              list entries.                                          * 00185400
*                                                                     * 00185500
*              While sublist monitoring is in effect for a sublist,   * 00185600
*              the CF will queue or withdraw event monitor controls   * 00185700
*              (EMCs) to or from the registered user's event queue to * 00185800
*              reflect the empty or nonempty state of the sublist.    * 00185900
*              The user should use sublist monitoring in conjunction  * 00186000
*              with event queue monitoring (MONITOR_EVENTQ)  to       * 00186100
*              process state transitions for monitored sublists.      * 00186200
*              Queued EMCs may be dequeued from the user's event      * 00186300
*              queue,  and their contents read, using the DEQ_EVENTQ  * 00186400
*              request.                                               * 00186500
*                                                                     * 00186600
*              If multiple sublists are to be monitored,  it may be   * 00186700
*              more efficient to start sublist monitoring for those   * 00186800
*              multiple sublists using MONITOR_SUBLISTS.  However,    * 00186900
*              sublist monitoring may only be stopped for one sublist * 00187000
*              at a time via MONITOR_SUBLIST.                         * 00187100
*                                                                     * 00187200
*              If sublist monitoring for a sublist is in effect, a    * 00187300
*              request to start monitoring the sublist with a         * 00187400
*              different UNC specification will cause the old         * 00187500
*              specification to be immediately replaced by the new    * 00187600
*              specification.  It is not necessary to stop sublist    * 00187700
*              monitoring before requesting to start monitoring using * 00187800
*              the new specification.  The replacement of the UNC     * 00187900
*              occurs regardless of whether the EMC representing the  * 00188000
*              sublist monitor is currently queued to the user's      * 00188100
*              event queue.                                           * 00188200
*                                                                     * 00188300
*              When sublist monitoring is stopped,  the EMC           * 00188400
*              representing the sublist monitor is made available for * 00188500
*              reuse.  If the EMC is currently queued to the user's   * 00188600
*              event queue,  it will be dequeued.                     * 00188700
*                                                                     * 00188800
*              CONTOKEN, LISTNUM, and ENTRYKEY are required keywords. * 00188900
*                                                                     * 00189000
*                                                                     * 00189100
*              ACTION=»START!STOPº                                    * 00189200
*                  is a required keyword input that specifies whether * 00189300
*                  sublist monitoring is to be started or stopped.    * 00189400
*                                                                     * 00189500
*                                                                     * 00189600
*                                                                     * 00189700
*                  ACTION=START                                       * 00189800
*                      Requests that sublist monitoring for the       * 00189900
*                      connection specified by CONTOKEN for the       * 00190000
*                      designated sublist be started.                 * 00190100
*                                                                     * 00190200
*                                                                     * 00190300
*                      UNC=xunc                                       * 00190400
*                          is the name (RS-type), or address in       * 00190500
*                          register (2)-(12), of a required 16        * 00190600
*                          character input field which contains the   * 00190700
*                          user notification controls (UNC) which     * 00190800
*                          represent the user's monitoring interest   * 00190900
*                          in the designated sublist.  The user       * 00191000
*                          notification control information resides   * 00191100
*                          in the event monitor controls (EMC),       * 00191200
*                          which is queued to the user's event queue  * 00191300
*                          when the monitored sublist becomes         * 00191400
*                          nonempty,  and is returned along with      * 00191500
*                          other information from the EMC on a        * 00191600
*                          DEQ_EVENTQ request.                        * 00191700
*                                                                     * 00191800
*                                                                     * 00191900
*                                                                     * 00192000
*                  ACTION=STOP                                        * 00192100
*                      Requests that monitoring of the designated     * 00192200
*                      sublist for the connection specified by        * 00192300
*                      CONTOKEN be stopped.                           * 00192400
*                                                                     * 00192500
*                                                                     * 00192600
*                                                                     * 00192700
*                                                                     * 00192800
*                                                                     * 00192900
*          REQUEST=MONITOR_SUBLISTS                                   * 00193000
*              Monitor a set of sublists (designated by list number   * 00193100
*              and entry key) in the list structure.  Requests that   * 00193200
*              monitoring of the designated sublists be started for   * 00193300
*              the requesting user.  MONITOR_SUBLISTS cannot be used  * 00193400
*              to stop sublist monitoring.                            * 00193500
*                                                                     * 00193600
*              This request type is valid only when the structure is  * 00193700
*              allocated in a CFLEVEL=3 or higher CF.  The user must  * 00193800
*              have a local vector associated with his connection to  * 00193900
*              the structure,  and the structure must support keyed   * 00194000
*              list entries.                                          * 00194100
*                                                                     * 00194200
*              While sublist monitoring is in effect for a sublist,   * 00194300
*              the CF will queue or withdraw event monitor controls   * 00194400
*              (EMCs) to or from the registered user's event queue to * 00194500
*              reflect the empty or nonempty state of the sublist.    * 00194600
*              The user should use sublist monitoring in conjunction  * 00194700
*              with event queue monitoring (MONITOR_EVENTQ) to        * 00194800
*              process state transitions for monitored sublists.      * 00194900
*              Queued EMCs may be dequeued from the user's event      * 00195000
*              queue,  and their contents read, using the DEQ_EVENTQ  * 00195100
*              request.                                               * 00195200
*                                                                     * 00195300
*              If sublist monitoring for a sublist is in effect, a    * 00195400
*              request to start monitoring the sublist with a         * 00195500
*              different UNC specification will cause the old         * 00195600
*              specification to be immediately replaced by the new    * 00195700
*              specification.  It is not necessary to stop sublist    * 00195800
*              monitoring before requesting to start monitoring using * 00195900
*              the new specification.  The replacement of the UNC     * 00196000
*              occurs regardless of whether the EMC representing the  * 00196100
*              sublist monitor is currently queued to the user's      * 00196200
*              event queue.                                           * 00196300
*                                                                     * 00196400
*              The BUFFER or BUFLIST contains an input array of       * 00196500
*              entries, each mapped by the IXLYMSRI mapping macro,    * 00196600
*              and each of which contains the information needed to   * 00196700
*              request monitoring for one sublist.  The entries are   * 00196800
*              indexed with the first entry (index 1) starting at     * 00196900
*              offset zero in the BUFFER or BUFLIST area.             * 00197000
*                                                                     * 00197100
*              The STARTINDEX and ENDINDEX keywords contain the       * 00197200
*              starting and ending index numbers of the input         * 00197300
*              IXLYMSRI entries which are requested to be processed.  * 00197400
*              The MONITOR_SUBLISTS request can complete prematurely  * 00197500
*              for various reasons:                                   * 00197600
*                                                                     * 00197700
*                                                                     * 00197800
*              o   Model-dependent timeout - the index number of the  * 00197900
*                  first unprocessed IXLYMSRI entry is returned in    * 00198000
*                  the answer area                                    * 00198100
*                                                                     * 00198200
*              o   Insufficient event monitor control space to        * 00198300
*                  register as a sublist monitor - the index number   * 00198400
*                  of the first IXLYMSRI entry which could not be     * 00198500
*                  processed is returned in the answer area           * 00198600
*                                                                     * 00198700
*              o   Invalid list number specified in an IXLYMSRI entry * 00198800
*                  - the index number of the IXLYMSRI entry           * 00198900
*                  containing the invalid list number is returned in  * 00199000
*                  the answer area                                    * 00199100
*                                                                     * 00199200
*                                                                     * 00199300
*                                                                     * 00199400
*              In all of these premature completion cases, all prior  * 00199500
*              IXLYMSRI  entries were processed successfully.  The    * 00199600
*              user is responsible for performing any necessary       * 00199700
*              processing for the IXLYMSRI entries that were          * 00199800
*              successfully processed by the current request,  taking * 00199900
*              any necessary recovery actions to correct an error     * 00200000
*              condition reported on the current request,  and        * 00200100
*              re-issuing the MONITOR_SUBLISTS request with an        * 00200200
*              updated STARTINDEX value to redrive processing of      * 00200300
*              IXLYMSRI  entries that were not processed on the       * 00200400
*              current request.                                       * 00200500
*                                                                     * 00200600
*              CONTOKEN and one of BUFFER or BUFLIST are required     * 00200700
*              keywords.                                              * 00200800
*                                                                     * 00200900
*                                                                     * 00201000
*              STARTINDEX=xstartindex                                 * 00201100
*                  is the name (RS-type), or address in register      * 00201200
*                  (2)-(12), of a required halfword input field which * 00201300
*                  contains the 1-origin index number of the first    * 00201400
*                  IXLYMSRI entry which is requested to be processed. * 00201500
*                  Valid range is from 1 to the ENDINDEX value,       * 00201600
*                  inclusive.                                         * 00201700
*                                                                     * 00201800
*                                                                     * 00201900
*                                                                     * 00202000
*                                                                     * 00202100
*              ENDINDEX=xendindex                                     * 00202200
*                  is the name (RS-type), or address in register      * 00202300
*                  (2)-(12), of a required halfword input field which * 00202400
*                  contains the 1-origin index number of the last     * 00202500
*                  IXLYMSRI entry which is requested to be processed. * 00202600
*                  Valid range is from the STARTINDEX value to 1024,  * 00202700
*                  inclusive.  The specified index must not imply a   * 00202800
*                  larger buffer size than the user has actually      * 00202900
*                  provided for the BUFFER or BUFLIST.                * 00203000
*                                                                     * 00203100
*                                                                     * 00203200
*                                                                     * 00203300
*                                                                     * 00203400
*              MOSVECTOR=xmosvector                                   * 00203500
*                  is a required output.  It is the name (RS-type),   * 00203600
*                  or address in register (2)-(12), of a 128-byte     * 00203700
*                  virtual storage area which will contain a 1-origin * 00203800
*                  bit string in which each bit represents the        * 00203900
*                  monitored object state (empty or non-empty) of a   * 00204000
*                  particular sublist at the time that the            * 00204100
*                  MONITOR_SUBLISTS request was processed.            * 00204200
*                                                                     * 00204300
*                  The MOSVECTOR bits correspond one-to-one with the  * 00204400
*                  IXLYMSRI entries that were passed as input in the  * 00204500
*                  BUFFER or BUFLIST.  Only the bits corresponding to * 00204600
*                  the IXLYMSRI entries that were actually processed  * 00204700
*                  on the current request (i.e. between STARTINDEX    * 00204800
*                  and ENDINDEX for a request which completed         * 00204900
*                  successfully,  or between STARTINDEX and the       * 00205000
*                  returned index of the first unprocessed entry      * 00205100
*                  minus one for premature completion cases) will     * 00205200
*                  contain valid monitored object state information   * 00205300
*                  for the sublists designated by the corresponding   * 00205400
*                  IXLYMSRI entries.  Bits in the MOSVECTOR which lie * 00205500
*                  outside the valid range are not meaningful.        * 00205600
*                                                                     * 00205700
*                  When a bit in the valid range is on,  the sublist  * 00205800
*                  designated by the corresponding IXLYMSRI entry was * 00205900
*                  nonempty at the time that the request was          * 00206000
*                  processed.  When a bit in the valid range is off,  * 00206100
*                  the sublist designated by the corresponding        * 00206200
*                  IXLYMSRI entry was empty at the time that the      * 00206300
*                  request was processed.                             * 00206400
*                                                                     * 00206500
*                                                                     * 00206600
*                                                                     * 00206700
*          REQUEST=LOCK                                               * 00206800
*              Requests that the lock entry designated by LOCKINDEX   * 00206900
*              be operated on as specified by the LOCKOPER keyword.   * 00207000
*              This request type may only be specified for structures * 00207100
*              that contain a lock table.                             * 00207200
*                                                                     * 00207300
*              Required keywords are LOCKINDEX and LOCKOPER.          * 00207400
*                                                                     * 00207500
*                                                                     * 00207600
*                                                                     * 00207700
*                                                                     * 00207800
*                                                                     * 00207900
*                                                                     * 00208000
*      CONTOKEN=xcontoken                                             * 00208100
*          is the name (RS-type), or address in register (2)-(12), of * 00208200
*          a required 16 character input field that contains the      * 00208300
*          connect token returned by the IXLCONN service.  The        * 00208400
*          CONTOKEN uniquely identifies the user's connection to the  * 00208500
*          list structure.                                            * 00208600
*                                                                     * 00208700
*                                                                     * 00208800
*                                                                     * 00208900
*                                                                     * 00209000
*      ÝREQID=»xreqid!NO_REQIDº¨                                      * 00209100
*          is the name (RS-type), or address in register (2)-(12), of * 00209200
*          an optional 8 character input that contains a user-defined * 00209300
*          request identifier to be associated with the request.      * 00209400
*                                                                     * 00209500
*          Requests that have not been processed may be cancelled     * 00209600
*          using this request identifier.                             * 00209700
*                                                                     * 00209800
*          DEFAULT: NO_REQID                                          * 00209900
*                                                                     * 00210000
*                                                                     * 00210100
*                                                                     * 00210200
*                                                                     * 00210300
*      The following is a set of mutually exclusive keys.  This set   * 00210400
*      is optional; only one key may be specified.                    * 00210500
*                                                                     * 00210600
*                                                                     * 00210700
*      ÝBUFLIST=»xbuflistº                                            * 00210800
*          belongs to a set of mutually exclusive keys. It is an      * 00210900
*          optional input.  It is the name (RS-type), or address in   * 00211000
*          register (2)-(12), of a 128-byte virtual storage area      * 00211100
*          containing a list of addresses of buffers.  These buffers  * 00211200
*          may contain input data for the request or may receive      * 00211300
*          output data from the request, depending on the request     * 00211400
*          specified.  The set of buffers is used as if it were a     * 00211500
*          single contiguous area for purposes of input and output.   * 00211600
*          Only 31-bit addressable (below 2GB) real or virtual        * 00211700
*          storage areas are supported for the BUFLIST specification. * 00211800
*                                                                     * 00211900
*          The format of the list is a set of 8-byte elements.  The   * 00212000
*          first four bytes of each element is reserved space.  The   * 00212100
*          second four bytes of each element contains the address of  * 00212200
*          a buffer.                                                  * 00212300
*                                                                     * 00212400
*          There may be 0 to 16 buffers passed in the list.  Each     * 00212500
*          buffer in the list must be the same size and must reside   * 00212600
*          in the same address space or data space.  Data is fetched  * 00212700
*          from or stored into the buffers in the order specified.    * 00212800
*                                                                     * 00212900
*          For READ, WRITE, MOVE, DELETE,  and MONITOR_SUBLISTS       * 00213000
*          requests, the length of a buffer must be a multiple of 256 * 00213100
*          bytes between 256 and 4096.  Each buffer must start on a   * 00213200
*          256-byte boundary and must not cross a 4096-byte boundary. * 00213300
*          For DELETE_ENTRYLIST, READ_LIST, READ_MULT,                * 00213400
*          READ_LCONTROLS, and DEQ_EVENTQ requests each buffer must   * 00213500
*          be 4096 bytes in length and must start on a 4096-byte      * 00213600
*          boundary.  For READ_LCONTROLS and DEQ_EVENTQ requests,     * 00213700
*          only one buffer may be passed.                             * 00213800
*                                                                     * 00213900
*          For READ and DELETE requests, and for MOVE requests when a * 00214000
*          DATAOPER of READ is also specified BUFLIST defines a set   * 00214100
*          of buffers into which entry data is to be read.            * 00214200
*                                                                     * 00214300
*          For WRITE requests and for MOVE requests when a DATAOPER   * 00214400
*          of WRITE is also specified BUFLIST defines a set of        * 00214500
*          buffers containing data to be written to an entry.         * 00214600
*                                                                     * 00214700
*          For WRITE requests and for MOVE requests when a DATAOPER   * 00214800
*          of WRITE is also specified the size of an existing entry   * 00214900
*          may be altered by specifying an ELEMNUM value which is     * 00215000
*          different than the ELEMNUM value used when the entry was   * 00215100
*          created.                                                   * 00215200
*                                                                     * 00215300
*          At least one of BUFFER, BUFLIST, and ADJAREA must be       * 00215400
*          specified for MOVE and DELETE requests when a DATAOPER of  * 00215500
*          READ is specified.  BUFLIST may optionally be specified on * 00215600
*          READ and WRITE requests, and on MOVE requests when         * 00215700
*          DATAOPER=WRITE is specified.  Failure to specify BUFFER or * 00215800
*          BUFLIST on any of these requests indicates that entry data * 00215900
*          is not to be read or written.  For each of these cases     * 00216000
*          BUFLIST is only functional for structures that support     * 00216100
*          entry data.  If BUFLIST is specified and the structure     * 00216200
*          does not support entry data then the contents of BUFLIST   * 00216300
*          neither affects the request nor is affected by the         * 00216400
*          request.                                                   * 00216500
*                                                                     * 00216600
*          One of BUFFER or BUFLIST is required for DELETE_ENTRYLIST, * 00216700
*          READ_LIST, READ_MULT, READ_LCONTROLS,  MONITOR_SUBLISTS,   * 00216800
*          and DEQ_EVENTQ requests.                                   * 00216900
*                                                                     * 00217000
*          For DELETE_ENTRYLIST requests the BUFLIST buffers are used * 00217100
*          as input and contain a list of list entry identifiers or   * 00217200
*          names to be deleted.  When LISTTYPE=IDLIST is specified    * 00217300
*          the buffers should be formatted into 12-byte elements,     * 00217400
*          where each element contains the list entry identifier for  * 00217500
*          an entry to be deleted.  When LISTTYPE=NAMELIST is         * 00217600
*          specified the buffers should be formatted into 16-byte     * 00217700
*          elements, where each element contains the list entry name  * 00217800
*          for an entry to be deleted.                                * 00217900
*                                                                     * 00218000
*          Upon successful completion of a READ_LIST or READ_MULT     * 00218100
*          request the BUFLIST buffers contain, starting at offset    * 00218200
*          zero in the first buffer, an array of elements each of     * 00218300
*          which is constructed as follows (dependent on request      * 00218400
*          options):                                                  * 00218500
*                                                                     * 00218600
*                                                                     * 00218700
*          o   When TYPE=ENTDATA was specified:                       * 00218800
*                                                                     * 00218900
*              Entry data.                                            * 00219000
*                                                                     * 00219100
*          o   When TYPE=ADJDATA was specified:                       * 00219200
*                                                                     * 00219300
*              Adunct data.                                           * 00219400
*                                                                     * 00219500
*          o   When TYPE=ECONTROLS was specified:                     * 00219600
*                                                                     * 00219700
*              List entry controls.                                   * 00219800
*                                                                     * 00219900
*          o   When TYPE=(ENTDATA,ADJDATA) was specified:             * 00220000
*                                                                     * 00220100
*              Entry data, followed by adjunct data.                  * 00220200
*                                                                     * 00220300
*          o   When TYPE=(ENTDATA,ECONTROLS) was specified:           * 00220400
*                                                                     * 00220500
*              List entry controls, followed by entry data.           * 00220600
*                                                                     * 00220700
*          o   When TYPE=(ADJDATA,ECONTROLS) was specified:           * 00220800
*                                                                     * 00220900
*              List entry controls, followed by adjunct data.         * 00221000
*                                                                     * 00221100
*          o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was specified:   * 00221200
*                                                                     * 00221300
*              List entry controls, followed by entry data, followed  * 00221400
*              by adjunct data.                                       * 00221500
*                                                                     * 00221600
*                                                                     * 00221700
*                                                                     * 00221800
*          When adjunct data is requested on a READ_LIST or READ_MULT * 00221900
*          request the adjunct data for the first entry processed is  * 00222000
*          returned in the storage area specified by ADJAREA.  The    * 00222100
*          adjunct data for all other entries is returned in the      * 00222200
*          BUFLIST buffers.  When list entry controls are requested   * 00222300
*          the entry controls for the first entry processed is        * 00222400
*          returned in the answer area specified by ANSAREA.  The     * 00222500
*          entry controls for all other entries is returned in the    * 00222600
*          BUFLIST buffers.                                           * 00222700
*                                                                     * 00222800
*          One array element is returned for each processed entry.    * 00222900
*          The number of elements returned in the BUFLIST buffers is  * 00223000
*          indicated in the answer area specified by ANSAREA.  An     * 00223100
*          element length may be determined by considering the        * 00223200
*          element make-up, the structure element size, the number of * 00223300
*          elements in the entry, an adjunct data size of 64 bytes,   * 00223400
*          and the length of list entry controls.  The length and     * 00223500
*          contents of list entry controls is defined by mapping      * 00223600
*          macro IXLYLCTL.                                            * 00223700
*                                                                     * 00223800
*          Upon successful completion of a READ_LCONTROLS request,    * 00223900
*          the BUFLIST buffers contain, starting at offset zero in    * 00224000
*          the first buffer, an array of list monitoring information  * 00224100
*          for the specified list.  The relative position of an array * 00224200
*          element associates it with a connection identifier.  The   * 00224300
*          first array element is associated with a connection        * 00224400
*          identifier of zero, and is reserved.  The length and       * 00224500
*          contents of each array element is defined by mapping macro * 00224600
*          IXLYLMI.                                                   * 00224700
*                                                                     * 00224800
*          For a MONITOR_SUBLISTS request,  the BUFLIST is used to    * 00224900
*          input an array of entries, each mapped by IXLYMSRI, and    * 00225000
*          each of which contains the information necessary to        * 00225100
*          register as a sublist monitor for one sublist.             * 00225200
*                                                                     * 00225300
*          Upon successful completion of a DEQ_EVENTQ request, the    * 00225400
*          BUFLIST contains, starting at offset zero in the buffer,   * 00225500
*          an array of event monitor controls that were dequeued from * 00225600
*          the user's event queue.  The length and contents of each   * 00225700
*          array element is defined by mapping macro IXLYEMC.         * 00225800
*                                                                     * 00225900
*          BUFLIST is mutually exclusive with BUFFER and with all     * 00226000
*          requests not described above.                              * 00226100
*                                                                     * 00226200
*                                                                     * 00226300
*          ÝBUFADDRTYPE=»VIRTUAL!REALº¨                               * 00226400
*              is an optional keyword input that specifies whether    * 00226500
*              the buffer addresses specified in the BUFLIST list are * 00226600
*              virtual storage addresses or real storage addresses.   * 00226700
*                                                                     * 00226800
*              DEFAULT: VIRTUAL                                       * 00226900
*                                                                     * 00227000
*                                                                     * 00227100
*              ÝBUFADDRTYPE=VIRTUAL                                   * 00227200
*                  Indicates that the buffer addresses specified in   * 00227300
*                  the BUFLIST list are virtual storage addresses.    * 00227400
*                                                                     * 00227500
*                                                                     * 00227600
*                                                                     * 00227700
*                  ÝPAGEABLE=»YES!NOº¨                                * 00227800
*                      is an optional keyword input that specifies    * 00227900
*                      whether or not the buffers specified by        * 00228000
*                      BUFLIST resides in pageable storage.           * 00228100
*                                                                     * 00228200
*                      DEFAULT: YES                                   * 00228300
*                                                                     * 00228400
*                                                                     * 00228500
*                      ÝPAGEABLE=YES                                  * 00228600
*                          Indicates that the BUFLIST buffers reside  * 00228700
*                          in pageable virtual storage.               * 00228800
*                                                                     * 00228900
*                          This includes disabled reference (DREF)    * 00229000
*                          storage, and may include storage that has  * 00229100
*                          the potential to become pageable during    * 00229200
*                          the processing of a request (for example,  * 00229300
*                          address space storage owned by any         * 00229400
*                          swappable address space, for which a PGSER * 00229500
*                          FIX has been successfully processed,  but  * 00229600
*                          for which the owning address space gets    * 00229700
*                          swapped during processing of an IXLLIST    * 00229800
*                          request). It does not include implicitly   * 00229900
*                          non-pageable storage (such as is obtained  * 00230000
*                          from non-pageable subpools).               * 00230100
*                                                                     * 00230200
*                          The system takes responsibility for        * 00230300
*                          managing binds to pageable central storage * 00230400
*                          for the duration of the IXLLIST request,   * 00230500
*                          regardless of what address space owns the  * 00230600
*                          storage or whether the storage-owning      * 00230700
*                          address space is swappable or              * 00230800
*                          nonswappable.  The storage may be owned by * 00230900
*                          any address space.                         * 00231000
*                                                                     * 00231100
*                                                                     * 00231200
*                                                                     * 00231300
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00231400
*                              is the name (RS-type), or address in   * 00231500
*                              register (2)-(12), of an optional 8    * 00231600
*                              bit input containing the storage key   * 00231700
*                              to be used when referencing the        * 00231800
*                              buffers in the list specified by       * 00231900
*                              BUFLIST.                               * 00232000
*                                                                     * 00232100
*                              The high order nibble contains the     * 00232200
*                              storage key, the low order nibble is   * 00232300
*                              ignored.  For example, set 'kkkk' in   * 00232400
*                              the binary bit string 'kkkkxxxx'B to   * 00232500
*                              correspond to the desired storage key. * 00232600
*                                                                     * 00232700
*                              If BUFSTGKEY is not specified, then    * 00232800
*                              all references to the BUFLIST buffers  * 00232900
*                              are performed using the caller's PSW   * 00233000
*                              key.                                   * 00233100
*                                                                     * 00233200
*                              DEFAULT: CALLERS_KEY                   * 00233300
*                                                                     * 00233400
*                                                                     * 00233500
*                                                                     * 00233600
*                      ÝPAGEABLE=NO¨                                  * 00233700
*                          Indicates that the BUFLIST buffers reside  * 00233800
*                          in non-pageable virtual storage.           * 00233900
*                                                                     * 00234000
*                          This includes implicitly non-pageable      * 00234100
*                          storage areas (such as is obtained from    * 00234200
*                          non-pageable subpools), and may include    * 00234300
*                          storage that has the potential to become   * 00234400
*                          pageable during the processing of an       * 00234500
*                          IXLLIST request (for example, address      * 00234600
*                          space storage owned by a swappable         * 00234700
*                          requestor's or connector's address space,  * 00234800
*                          for which a PGSER FIX  has been            * 00234900
*                          successfully processed,  but for which the * 00235000
*                          owning address space has been swapped      * 00235100
*                          during processing of an IXLLIST request).  * 00235200
*                                                                     * 00235300
*                          The system takes responsibility for        * 00235400
*                          managing binds to non-pageable central     * 00235500
*                          storage for the duration of the request if * 00235600
*                          and only if the storage is owned by either * 00235700
*                          the requestor's address space or the       * 00235800
*                          connector's address space.  If the storage * 00235900
*                          is owned by any other address space, then  * 00236000
*                          the invoker is responsible for ensuring    * 00236100
*                          the virtual storage remains non-pageable   * 00236200
*                          for the duration of the request (including * 00236300
*                          the case where the storage is owned by a   * 00236400
*                          swappable address space which is swapped   * 00236500
*                          during processing of the IXLLIST request). * 00236600
*                          With this proviso, the storage may be      * 00236700
*                          owned by any address space.                * 00236800
*                                                                     * 00236900
*                          If MODE=ASYNCTOKEN is specified or         * 00237000
*                          MODE=SYNCTOKEN is specified and the        * 00237100
*                          request does not complete synchronously,   * 00237200
*                          then the storage must remain non-pageable  * 00237300
*                          until completion of the corresponding      * 00237400
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00237500
*                          specified or MODE=SYNCEXIT is specified    * 00237600
*                          and the request does not complete          * 00237700
*                          synchronously, then the storage must       * 00237800
*                          remain non-pageable until the completion   * 00237900
*                          exit is driven for the request.  If        * 00238000
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00238100
*                          is specified and the request does not      * 00238200
*                          complete synchronously, then the storage   * 00238300
*                          must remain non-pageable until the         * 00238400
*                          specified ECB is posted for the request.   * 00238500
*                                                                     * 00238600
*                                                                     * 00238700
*                                                                     * 00238800
*                                                                     * 00238900
*                                                                     * 00239000
*                                                                     * 00239100
*                  ÝBUFALET=»xbufalet!NO_BUFALETº¨¨                   * 00239200
*                      is the name (RS-type), or address in register  * 00239300
*                      (2)-(12), of an optional fullword input        * 00239400
*                      specifying the ALET value to be used in        * 00239500
*                      referencing all of the buffers specified for   * 00239600
*                      BUFLIST                                        * 00239700
*                                                                     * 00239800
*                      DEFAULT: NO_BUFALET                            * 00239900
*                                                                     * 00240000
*                                                                     * 00240100
*                                                                     * 00240200
*              ÝBUFADDRTYPE=REAL¨                                     * 00240300
*                  Indicates that the buffer addresses specified in   * 00240400
*                  the BUFLIST list are real storage addresses.       * 00240500
*                                                                     * 00240600
*                  The system takes no responsibility for managing    * 00240700
*                  real storage binds when real addresses are         * 00240800
*                  provided.  The invoker is responsible for ensuring * 00240900
*                  the real storage addresses provided remain valid   * 00241000
*                  for the duration of the request (including the     * 00241100
*                  case where the real storage provided is backing    * 00241200
*                  virtual storage owned by a swappable address space * 00241300
*                  which is swapped during processing of the          * 00241400
*                  request).  The virtual storage backed by the real  * 00241500
*                  storage whose addresses are provided may be owned  * 00241600
*                  by any address space.                              * 00241700
*                                                                     * 00241800
*                                                                     * 00241900
*                                                                     * 00242000
*                                                                     * 00242100
*                                                                     * 00242200
*                                                                     * 00242300
*          ÝBUFNUM=»xbufnum!NO_BUFNUMº¨                               * 00242400
*              is the name (RS-type), or address in register          * 00242500
*              (2)-(12), of an optional byte input specifying the     * 00242600
*              number of buffers defined in the BUFLIST list.         * 00242700
*                                                                     * 00242800
*              BUFNUM values must be in the range of 0 to 16.  A      * 00242900
*              BUFNUM value of zero indicates that no structure data  * 00243000
*              is to be read or written into the BUFLIST buffers.     * 00243100
*                                                                     * 00243200
*              BUFNUM is mutually exclusive with                      * 00243300
*              REQUEST=READ_LCONTROLS and DEQ_EVENTQ requests, for    * 00243400
*              which one and only one buffer may be passed.  For all  * 00243500
*              other requests BUFNUM is required when BUFLIST is      * 00243600
*              specified, and is mutually exclusive otherwise.        * 00243700
*                                                                     * 00243800
*              DEFAULT: NO_BUFNUM                                     * 00243900
*                                                                     * 00244000
*                                                                     * 00244100
*                                                                     * 00244200
*                                                                     * 00244300
*          ÝBUFINCRNUM=»xbufincrnum!NO_BUFINCRNUMº¨                   * 00244400
*              is the name (RS-type), or address in register          * 00244500
*              (2)-(12), of an optional byte input specifying the     * 00244600
*              number of 256-byte increments or segments in each      * 00244700
*              buffer in the BUFLIST list.                            * 00244800
*                                                                     * 00244900
*              BUFINCRNUM values must be a power of 2 in the range of * 00245000
*              1 to 16 (1, 2, 4, 8, 16), corresponding to BUFLIST     * 00245100
*              buffer sizes of 256 to 4096 bytes.                     * 00245200
*                                                                     * 00245300
*              BUFINCRNUM is mutually exclusive with REQUEST values   * 00245400
*              of DELETE_ENTRYLIST, READ_LIST, READ_MULT,             * 00245500
*              READ_LCONTROLS, and DEQ_EVENTQ.  For these requests a  * 00245600
*              BUFINCRNUM value of 16 will be used.  For all other    * 00245700
*              requests BUFINCRNUM is required when BUFLIST is        * 00245800
*              specified.                                             * 00245900
*                                                                     * 00246000
*              DEFAULT: NO_BUFINCRNUM                                 * 00246100
*                                                                     * 00246200
*                                                                     * 00246300
*                                                                     * 00246400
*      BUFFER=»xbufferº                                               * 00246500
*          belongs to a set of mutually exclusive keys. It is an      * 00246600
*          optional input.  It is the name (RS-type), or address in   * 00246700
*          register (2)-(12), of a virtual storage area containing    * 00246800
*          input data for the request or to receive output data from  * 00246900
*          the request, depending on the request specified.  The      * 00247000
*          BUFSIZE keyword specifies the size of the buffer.  Only    * 00247100
*          31-bit addressable (below 2GB) virtual storage areas are   * 00247200
*          supported for the BUFFER specification.                    * 00247300
*                                                                     * 00247400
*          For READ, WRITE, MOVE, DELETE,  and MONITOR_SUBLISTS       * 00247500
*          requests, if the length of the buffer is less than or      * 00247600
*          equal to 4096 bytes then the length of the buffer must be  * 00247700
*          a power of 2 between 256 and 4096 bytes (256, 512, 1024,   * 00247800
*          2048, 4096), the buffer must start on a 256-byte boundary, * 00247900
*          and the buffer must not cross a 4096-byte boundary.  If    * 00248000
*          the length of the buffer is greater than 4096 bytes then   * 00248100
*          the length of the buffer must be a multiple of 4096 bytes  * 00248200
*          between 4096 and 65536 and the buffer must start on a      * 00248300
*          4096-byte boundary.                                        * 00248400
*                                                                     * 00248500
*          For DELETE_ENTRYLIST, READ_LIST, and READ_MULT requests    * 00248600
*          the length of the buffer must be a multiple of 4096 bytes  * 00248700
*          between 4096 and 65536 and the buffer must start on a      * 00248800
*          4096-byte boundary.                                        * 00248900
*                                                                     * 00249000
*          For READ_LCONTROLS and DEQ_EVENTQ requests, the buffer     * 00249100
*          must be 4096 bytes on a 4096-byte boundary.                * 00249200
*                                                                     * 00249300
*          For READ and DELETE requests, and for MOVE requests when a * 00249400
*          DATAOPER of READ is also specified BUFFER defines an area  * 00249500
*          into which entry data is to be read.                       * 00249600
*                                                                     * 00249700
*          For WRITE requests and for MOVE requests when a DATAOPER   * 00249800
*          of WRITE is also specified BUFFER defines an area          * 00249900
*          containing data to be written to an entry.                 * 00250000
*                                                                     * 00250100
*          For WRITE requests and for MOVE requests when a DATAOPER   * 00250200
*          of WRITE is also specified the size of an existing entry   * 00250300
*          may be altered by specifying an ELEMNUM value which is     * 00250400
*          different than the ELEMNUM value used when the entry was   * 00250500
*          created.                                                   * 00250600
*                                                                     * 00250700
*          At least one of BUFFER, BUFLIST, and ADJAREA must be       * 00250800
*          specified for MOVE and DELETE requests when DATAOPER=READ  * 00250900
*          is specified.  BUFFER may optionally be specified on READ  * 00251000
*          and WRITE requests, and on MOVE requests when              * 00251100
*          DATAOPER=WRITE is specified.  Failure to specify BUFFER or * 00251200
*          BUFLIST on any of these requests indicates that entry data * 00251300
*          is not to be read or written.  For each of these cases     * 00251400
*          BUFFER is only functional for structures that support      * 00251500
*          entry data.  If BUFFER is specified and the structure does * 00251600
*          not support entry data then the contents of BUFFER neither * 00251700
*          affects the request nor is affected by the request.        * 00251800
*                                                                     * 00251900
*          One of BUFFER or BUFLIST is required for DELETE_ENTRYLIST, * 00252000
*          READ_LIST, READ_MULT, READ_LCONTROLS,  MONITOR_SUBLISTS,   * 00252100
*          and DEQ_EVENTQ requests.                                   * 00252200
*                                                                     * 00252300
*          For DELETE_ENTRYLIST requests the BUFFER area is used as   * 00252400
*          input and contains a list of list entry identifiers or     * 00252500
*          names to be deleted.  When LISTTYPE=IDLIST is specified    * 00252600
*          the buffer should be formatted into 12-byte elements,      * 00252700
*          where each element contains the list entry identifier for  * 00252800
*          an entry to be deleted.  When LISTTYPE=NAMELIST is         * 00252900
*          specified the buffer should be formatted into 16-byte      * 00253000
*          elements, where each element contains the list entry name  * 00253100
*          for an entry to be deleted.                                * 00253200
*                                                                     * 00253300
*          Upon successful completion of a READ_LIST or READ_MULT     * 00253400
*          request the BUFFER area contains, starting at offset zero  * 00253500
*          in the first buffer, an array of elements each of which is * 00253600
*          constructed as follows (dependent on request options):     * 00253700
*                                                                     * 00253800
*                                                                     * 00253900
*          o   When TYPE=ENTDATA was specified:                       * 00254000
*                                                                     * 00254100
*              Entry data.                                            * 00254200
*                                                                     * 00254300
*          o   When TYPE=ADJDATA was specified:                       * 00254400
*                                                                     * 00254500
*              Adunct data.                                           * 00254600
*                                                                     * 00254700
*          o   When TYPE=ECONTROLS was specified:                     * 00254800
*                                                                     * 00254900
*              List entry controls.                                   * 00255000
*                                                                     * 00255100
*          o   When TYPE=(ENTDATA,ADJDATA) was specified:             * 00255200
*                                                                     * 00255300
*              Entry data, followed by adjunct data.                  * 00255400
*                                                                     * 00255500
*          o   When TYPE=(ENTDATA,ECONTROLS) was specified:           * 00255600
*                                                                     * 00255700
*              List entry controls, followed by entry data.           * 00255800
*                                                                     * 00255900
*          o   When TYPE=(ADJDATA,ECONTROLS) was specified:           * 00256000
*                                                                     * 00256100
*              List entry controls, followed by adjunct data.         * 00256200
*                                                                     * 00256300
*          o   When TYPE=(ENTDATA,ADJDATA,ECONTROLS) was specified:   * 00256400
*                                                                     * 00256500
*              List entry controls, followed by entry data, followed  * 00256600
*              by adjunct data.                                       * 00256700
*                                                                     * 00256800
*                                                                     * 00256900
*                                                                     * 00257000
*          When adjunct data is requested on a READ_LIST or READ_MULT * 00257100
*          request the adjunct data for the first entry processed is  * 00257200
*          returned in the storage area specified by ADJAREA.  The    * 00257300
*          adjunct data for all other entries is returned in the      * 00257400
*          BUFFER area.  When list entry controls are requested the   * 00257500
*          entry controls for the first entry processed is returned   * 00257600
*          in the answer area specified by ANSAREA.  The entry        * 00257700
*          controls for all other entries is returned in the BUFFER   * 00257800
*          area.                                                      * 00257900
*                                                                     * 00258000
*          One array element is returned for each processed entry.    * 00258100
*          The number of elements returned in the BUFFER area is      * 00258200
*          indicated in the answer area specified by ANSAREA.  An     * 00258300
*          element length may be determined by considering the        * 00258400
*          element make-up, the structure element size, the number of * 00258500
*          elements in the entry, an adjunct data size of 64 bytes,   * 00258600
*          and the length of list entry controls.  The length and     * 00258700
*          contents of list entry controls is defined by mapping      * 00258800
*          macro IXLYLCTL.                                            * 00258900
*                                                                     * 00259000
*          Upon successful completion of a READ_LCONTROLS request,    * 00259100
*          the BUFFER area contains, starting at offset zero, an      * 00259200
*          array of list monitoring information for the specified     * 00259300
*          list.  The relative position of an array element           * 00259400
*          associates it with a connection identifier.  The first     * 00259500
*          array element is associated with a connection identifier   * 00259600
*          of zero, and is reserved.  The length and contents of each * 00259700
*          array element is defined by mapping macro IXLYLMI.         * 00259800
*                                                                     * 00259900
*          For a MONITOR_SUBLISTS request,  the BUFFER  is used to    * 00260000
*          input an array of entries, each mapped by IXLYMSRI, and    * 00260100
*          each of which contains the information necessary to        * 00260200
*          register as a sublist monitor for one sublist.             * 00260300
*                                                                     * 00260400
*          Upon successful completion of a DEQ_EVENTQ request, the    * 00260500
*          BUFFER area contains, starting at offset zero, an array of * 00260600
*          event monitor controls that were dequeued from the user's  * 00260700
*          event queue.  The length and contents of each array        * 00260800
*          element is defined by mapping macro IXLYEMC.               * 00260900
*                                                                     * 00261000
*          BUFFER is mutually exclusive with BUFLIST and with all     * 00261100
*          requests not described above.                              * 00261200
*                                                                     * 00261300
*                                                                     * 00261400
*          ÝPAGEABLE=»YES!NOº¨                                        * 00261500
*              is an optional keyword input that specifies whether or * 00261600
*              not the storage area specified by BUFFER resides in    * 00261700
*              pageable storage.                                      * 00261800
*                                                                     * 00261900
*              DEFAULT: YES                                           * 00262000
*                                                                     * 00262100
*                                                                     * 00262200
*              ÝPAGEABLE=YES                                          * 00262300
*                  Indicates that the BUFFER area resides in pageable * 00262400
*                  virtual storage.                                   * 00262500
*                                                                     * 00262600
*                  This includes disabled reference (DREF) storage,   * 00262700
*                  and may include storage that has the potential to  * 00262800
*                  become pageable during the processing of a request * 00262900
*                  (for example, address space storage owned by any   * 00263000
*                  swappable address space, for which a PGSER FIX has * 00263100
*                  been successfully processed,  but for which the    * 00263200
*                  owning address space gets swapped during           * 00263300
*                  processing of an IXLLIST request).   It does not   * 00263400
*                  include implicitly non-pageable storage (such as   * 00263500
*                  is obtained from non-pageable subpools).           * 00263600
*                                                                     * 00263700
*                  The system takes responsibility for managing binds * 00263800
*                  to pageable central storage for the duration of    * 00263900
*                  the IXLLIST request,   regardless of what address  * 00264000
*                  space owns the storage or whether the              * 00264100
*                  storage-owning address space is swappable or       * 00264200
*                  nonswappable.  The storage may be owned by any     * 00264300
*                  address space.                                     * 00264400
*                                                                     * 00264500
*                                                                     * 00264600
*                                                                     * 00264700
*                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨              * 00264800
*                      is the name (RS-type), or address in register  * 00264900
*                      (2)-(12), of an optional 8 bit input           * 00265000
*                      containing the storage key to be used when     * 00265100
*                      referencing the storage area specified by      * 00265200
*                      BUFFER.                                        * 00265300
*                                                                     * 00265400
*                      The high order nibble contains the storage     * 00265500
*                      key, the low order nibble is ignored.  For     * 00265600
*                      example, set 'kkkk' in the binary bit string   * 00265700
*                      'kkkkxxxx'B to correspond to the desired       * 00265800
*                      storage key.                                   * 00265900
*                                                                     * 00266000
*                      If BUFSTGKEY is not specified, then all        * 00266100
*                      references to the BUFFER buffer storage are    * 00266200
*                      performed using the caller's PSW key.          * 00266300
*                                                                     * 00266400
*                      DEFAULT: CALLERS_KEY                           * 00266500
*                                                                     * 00266600
*                                                                     * 00266700
*                                                                     * 00266800
*              ÝPAGEABLE=NO¨                                          * 00266900
*                  Indicates that the BUFFER area resides in          * 00267000
*                  non-pageable virtual storage.                      * 00267100
*                                                                     * 00267200
*                  This includes implicitly non-pageable storage      * 00267300
*                  areas (such as is obtained from non-pageable       * 00267400
*                  subpools), and may include storage that has the    * 00267500
*                  potential to become pageable during the processing * 00267600
*                  of an IXLLIST request (for example, address space  * 00267700
*                  storage owned by a swappable requestor's or        * 00267800
*                  connector's address space, for which a PGSER FIX   * 00267900
*                  has been successfully processed,  but for which    * 00268000
*                  the owning address space has been swapped during   * 00268100
*                  processing of an IXLLIST request).                 * 00268200
*                                                                     * 00268300
*                  The system takes responsibility for managing binds * 00268400
*                  to non-pageable central storage for the duration   * 00268500
*                  of the request if and only if the storage is owned * 00268600
*                  by either the requestor's address space or the     * 00268700
*                  connector's address space.  If the storage is      * 00268800
*                  owned by any other address space, then the invoker * 00268900
*                  is responsible for ensuring the virtual storage    * 00269000
*                  remains non-pageable for the duration of the       * 00269100
*                  request (including the case where the storage is   * 00269200
*                  owned by a swappable address space which is        * 00269300
*                  swapped during processing of the IXLLIST request). * 00269400
*                  With this proviso, the storage may be owned by any * 00269500
*                  address space.                                     * 00269600
*                                                                     * 00269700
*                  If MODE=ASYNCTOKEN is specified or MODE=SYNCTOKEN  * 00269800
*                  is specified and the request does not complete     * 00269900
*                  synchronously, then the storage must remain        * 00270000
*                  non-pageable until completion of the corresponding * 00270100
*                  IXLFCOMP request.  If MODE=ASYNCEXIT is specified  * 00270200
*                  or MODE=SYNCEXIT is specified and the request does * 00270300
*                  not complete synchronously, then the storage must  * 00270400
*                  remain non-pageable until the completion exit is   * 00270500
*                  driven for the request.  If MODE=ASYNCECB is       * 00270600
*                  specified or MODE=SYNCECB is specified and the     * 00270700
*                  request does not complete synchronously, then the  * 00270800
*                  storage must remain non-pageable until the         * 00270900
*                  specified ECB is posted for the request.           * 00271000
*                                                                     * 00271100
*                                                                     * 00271200
*                                                                     * 00271300
*                                                                     * 00271400
*                                                                     * 00271500
*                                                                     * 00271600
*          ÝBUFSIZE=»xbufsize!NO_BUFSIZEº¨¨                           * 00271700
*              is the name (RS-type), or address in register          * 00271800
*              (2)-(12), of an optional fullword input specifying the * 00271900
*              length of the virtual storage area specified for       * 00272000
*              BUFFER in bytes.                                       * 00272100
*                                                                     * 00272200
*              Refer to BUFFER for the buffer size requirements for   * 00272300
*              each request type.                                     * 00272400
*                                                                     * 00272500
*              BUFSIZE is mutually exclusive with                     * 00272600
*              REQUEST=READ_LCONTROLS and DEQ_EVENTQ, for which the   * 00272700
*              buffer size must be 4096 bytes.  For all other         * 00272800
*              requests BUFSIZE is required when BUFFER is specified, * 00272900
*              and is mutually exclusive otherwise.                   * 00273000
*                                                                     * 00273100
*              DEFAULT: NO_BUFSIZE                                    * 00273200
*                                                                     * 00273300
*                                                                     * 00273400
*                                                                     * 00273500
*                                                                     * 00273600
*                                                                     * 00273700
*      End of a set of mutually exclusive optional keys.              * 00273800
*      DEFAULT: BUFLIST                                               * 00273900
*                                                                     * 00274000
*                                                                     * 00274100
*                                                                     * 00274200
*      ÝADJAREA=»xadjarea!NO_ADJAREAº¨                                * 00274300
*          is an optional input.  It is the name (RS-type), or        * 00274400
*          address in register (2)-(12), of a 64-byte area in virtual * 00274500
*          storage where entry adjunct data is to be read, or where   * 00274600
*          data to be written to an entry adjunct area resides.       * 00274700
*                                                                     * 00274800
*          At least one of BUFFER, BUFLIST, and ADJAREA must be       * 00274900
*          specified for MOVE and DELETE requests when a DATAOPER of  * 00275000
*          READ is specified.  ADJAREA is required on READ_LIST, and  * 00275100
*          READ_MULT requests when TYPE=ADJDATA is specified.         * 00275200
*          ADJAREA may optionally be specified on READ and WRITE      * 00275300
*          requests, and for MOVE requests when a DATAOPER of WRITE   * 00275400
*          is specified.  Failure to specify ADJAREA on any of these  * 00275500
*          requests indicates that structure adjunct data is not to   * 00275600
*          be read or written.  For each of these cases ADJAREA is    * 00275700
*          only functional for structures that support adjunct data.  * 00275800
*          If ADJAREA is specified and the structure does not support * 00275900
*          adjunct data then the contents of ADJAREA does not affect  * 00276000
*          the request.                                               * 00276100
*                                                                     * 00276200
*          ADJAREA is mutually exclusive with all requests not        * 00276300
*          described above.                                           * 00276400
*                                                                     * 00276500
*          DEFAULT: NO_ADJAREA                                        * 00276600
*                                                                     * 00276700
*                                                                     * 00276800
*                                                                     * 00276900
*                                                                     * 00277000
*      ÝLISTNUM=»xlistnum!NO_LISTNUMº                                 * 00277100
*          is the name (RS-type), or address in register (2)-(12), of * 00277200
*          an optional fullword input specifying the number of the    * 00277300
*          list to be processed, partially designating a sublist to   * 00277400
*          be processed, or designating the number of the list on     * 00277500
*          which the entry (or entries) to be processed reside.       * 00277600
*                                                                     * 00277700
*          LISTNUM may be used as follows:                            * 00277800
*                                                                     * 00277900
*                                                                     * 00278000
*          o   In conjunction with LISTPOS and/or ENTRYKEY to         * 00278100
*              designate an existing list entry as the source of a    * 00278200
*              READ or MOVE request, or the target of a WRITE or      * 00278300
*              DELETE request.                                        * 00278400
*                                                                     * 00278500
*          o   In conjunction with LISTPOS and/or ENTRYKEY or KEYCOMP * 00278600
*              to designate an existing list entry as the starting    * 00278700
*              entry for a READ_LIST request.                         * 00278800
*                                                                     * 00278900
*          o   As a qualifier to ENTRYID or ENTRYNAME on READ, WRITE, * 00279000
*              MOVE, DELETE, and READ_LIST requests to verify the     * 00279100
*              designated list entry resides on the list specified by * 00279200
*              LISTNUM prior to proceeding with processing.           * 00279300
*                                                                     * 00279400
*          o   In conjunction with LOCBYCURSOR to designate a list    * 00279500
*              entry for READ, WRITE, MOVE, DELETE, and READ_LIST     * 00279600
*              requests.                                              * 00279700
*                                                                     * 00279800
*          o   In conjunction with LISTPOS and/or ENTRYKEY to         * 00279900
*              designate a list position for entry creation on a      * 00280000
*              WRITE request when an ENTRYTYPE of ANY or NEW is       * 00280100
*              specified.  When the ENTRYTYPE is ANY then this use of * 00280200
*              LISTNUM is in addition to one of the previously        * 00280300
*              described uses.                                        * 00280400
*                                                                     * 00280500
*          o   As a qualifier on READ_MULT, DELETE_MULT, and          * 00280600
*              DELETE_ENTRYLIST requests to restrict processing to    * 00280700
*              those entries residing on the list specified by        * 00280800
*              LISTNUM.                                               * 00280900
*                                                                     * 00281000
*          o   To designate the list of interest for a                * 00281100
*              READ_LCONTROLS, WRITE_LCONTROLS, or MONITOR_LIST       * 00281200
*              request.                                               * 00281300
*                                                                     * 00281400
*          o   In conjunction with ENTRYKEY to designate a sublist    * 00281500
*              for which the user's event monitor controls are to be  * 00281600
*              read,  for a READ_EMCONTROLS request.                  * 00281700
*                                                                     * 00281800
*          o   In conjunction with ENTRYKEY to designate a sublist    * 00281900
*              for which the user wishes to start or stop sublist     * 00282000
*              monitoring,  for a MONITOR_SUBLIST request.            * 00282100
*                                                                     * 00282200
*                                                                     * 00282300
*                                                                     * 00282400
*          At least one of LISTNUM, ENTRYID, ENTRYNAME, and           * 00282500
*          LOCBYCURSOR must be specified on READ, READ_LIST, MOVE,    * 00282600
*          and DELETE requests, and on WRITE requests when            * 00282700
*          ENTRYTYPE=OLD is specified.  LISTNUM is required for       * 00282800
*          READ_LCONTROLS, WRITE_LCONTROLS, READ_EMCONTROLS,          * 00282900
*          MONITOR_SUBLIST, and MONITOR_LIST requests, and for WRITE  * 00283000
*          requests when an ENTRYTYPE of NEW or ANY is specified.  It * 00283100
*          is also required when LOCBYCURSOR is specified.  LISTNUM   * 00283200
*          may optionally be specified on READ_MULT, DELETE_MULT, and * 00283300
*          DELETE_ENTRYLIST requests.  It is mutually exclusive with  * 00283400
*          all other request types.                                   * 00283500
*                                                                     * 00283600
*          DEFAULT: NO_LISTNUM                                        * 00283700
*                                                                     * 00283800
*                                                                     * 00283900
*          ÝLISTPOS=»HEAD!TAILº¨                                      * 00284000
*              is an optional keyword input that partially designates * 00284100
*              a list entry or position.                              * 00284200
*                                                                     * 00284300
*              LISTPOS is optional on READ, WRITE, MOVE, DELETE, and  * 00284400
*              READ_LIST requests when LISTNUM is also specified.  It * 00284500
*              is also optional on WRITE requests when ENTRYTYPE=ANY  * 00284600
*              is specified.  It is mutually exclusive with all other * 00284700
*              request types.                                         * 00284800
*                                                                     * 00284900
*              LISTPOS is mutually exclusive with ENTRYID, ENTRYNAME, * 00285000
*              and LOCBYCURSOR, except on WRITE requests when an      * 00285100
*              ENTRYTYPE of ANY or NEW is specified.  if an entry is  * 00285200
*              created for a WRITE request then LISTPOS is used to    * 00285300
*              partially designate the position of the new entry.     * 00285400
*              LISTPOS=HEAD is mutually exclusive with                * 00285500
*              LISTDIR=TOHEAD, and LISTPOS=TAIL is mutually exclusive * 00285600
*              with LISTDIR=TOTAIL.                                   * 00285700
*                                                                     * 00285800
*              When LISTDIR is not specified, and when LISTDIR=TOTAIL * 00285900
*              is specified, the default value for LISTPOS is HEAD.   * 00286000
*              When LISTDIR=TOHEAD is specified, the default value    * 00286100
*              for LISTPOS is TAIL.                                   * 00286200
*                                                                     * 00286300
*              DEFAULT: HEAD                                          * 00286400
*                                                                     * 00286500
*                                                                     * 00286600
*              LISTPOS=HEAD                                           * 00286700
*                  This option has meaning as follows:                * 00286800
*                                                                     * 00286900
*                                                                     * 00287000
*                  o   If LISTNUM is specified and ENTRYKEY is not,   * 00287100
*                      then the designated entry or position is the   * 00287200
*                      head of the list.                              * 00287300
*                                                                     * 00287400
*                  o   If ENTRYKEY is specified, the designated entry * 00287500
*                      or position is the head of the sublist         * 00287600
*                      containing entries with a matching key.        * 00287700
*                                                                     * 00287800
*                                                                     * 00287900
*                                                                     * 00288000
*                                                                     * 00288100
*              LISTPOS=TAIL                                           * 00288200
*                  This option has meaning as follows:                * 00288300
*                                                                     * 00288400
*                                                                     * 00288500
*                  o   If LISTNUM is specified and ENTRYKEY is not,   * 00288600
*                      then the designated entry or position is the   * 00288700
*                      tail of the list.                              * 00288800
*                                                                     * 00288900
*                  o   If ENTRYKEY is specified, the designated entry * 00289000
*                      or position is the tail of the sublist         * 00289100
*                      containing entries with a matching key.        * 00289200
*                                                                     * 00289300
*                                                                     * 00289400
*                                                                     * 00289500
*                                                                     * 00289600
*                                                                     * 00289700
*                                                                     * 00289800
*                                                                     * 00289900
*                                                                     * 00290000
*          ÝENTRYKEY=»xentrykey!NO_ENTRYKEYº                          * 00290100
*              is the name (RS-type), or address in register          * 00290200
*              (2)-(12), of an optional 16 character input that       * 00290300
*              specifies the key to be used in conjunction with       * 00290400
*              LISTNUM and LISTPOS to designate an exact list entry   * 00290500
*              or position, or the key to be used in conjunction with * 00290600
*              LISTNUM to designate a sublist.                        * 00290700
*                                                                     * 00290800
*              ENTRYKEY may only be specified for structures that     * 00290900
*              support keyed entries, and may be used as follows:     * 00291000
*                                                                     * 00291100
*                                                                     * 00291200
*              o   To indicate by key which entry on the list         * 00291300
*                  specified by LISTNUM is to be the source of a READ * 00291400
*                  or MOVE request, the target of a DELETE request,   * 00291500
*                  or of a WRITE request when an ENTRYTYPE of ANY or  * 00291600
*                  OLD is specified, or the starting point for a      * 00291700
*                  READ_LIST request.  Except for a WRITE or MOVE     * 00291800
*                  request with ENTRYTYPE=ANY specified, if no such   * 00291900
*                  keyed entry exists on the list then the request    * 00292000
*                  may be failed, dependent upon the value specified  * 00292100
*                  for KEYREQTYPE.  LISTPOS resolves conflicts when   * 00292200
*                  multiple entries with the same key reside on the   * 00292300
*                  list.                                              * 00292400
*                                                                     * 00292500
*              o   To designate a position on the list specified by   * 00292600
*                  LISTNUM for entry creation on WRITE requests when  * 00292700
*                  an ENTRYTYPE of ANY or NEW is also specified.  If  * 00292800
*                  there exists a sublist of one or more entries with * 00292900
*                  a matching key then the created entry is           * 00293000
*                  positioned at the head or tail of the sublist, as  * 00293100
*                  specified by LISTPOS.  If all existing list        * 00293200
*                  entries have a key greater than that specified by  * 00293300
*                  ENTRYKEY then the created entry is positioned at   * 00293400
*                  the head of the list.  Similarly, if the specified * 00293500
*                  ENTRYKEY exceeds all the list entry keys then the  * 00293600
*                  created entry is positioned at the tail of the     * 00293700
*                  list.  If none of the list entries has a matching  * 00293800
*                  key then the created entry is positioned in the    * 00293900
*                  list according to the appropriate key sequence.    * 00294000
*                                                                     * 00294100
*              o   In conjunction with LISTNUM to designate a         * 00294200
*                  particular sublist.                                * 00294300
*                                                                     * 00294400
*                                                                     * 00294500
*                                                                     * 00294600
*              ENTRYKEY is required on READ_EMCONTROLS and            * 00294700
*              MONITOR_SUBLIST requests.                              * 00294800
*                                                                     * 00294900
*              ENTRYKEY is optional on READ, MOVE, DELETE, READ_LIST, * 00295000
*              and WRITE requests when the structure supports keyed   * 00295100
*              entries, and is mutually exclusive with all other      * 00295200
*              request types.  It is always mutually exclusive with   * 00295300
*              ENTRYNAME and KEYCOMP.                                 * 00295400
*                                                                     * 00295500
*              When ENTRYKEY is permissable but not specified then    * 00295600
*              key is not a criteria for selecting an entry for       * 00295700
*              processing or a list position for entry creation.      * 00295800
*              Furthermore, if the structure supports keyed entries   * 00295900
*              and ENTRYKEY is not specified, then for occasions      * 00296000
*              where a list entry is created the key assigned the     * 00296100
*              created entry defaults as follows:                     * 00296200
*                                                                     * 00296300
*                                                                     * 00296400
*              o   to all binary zeros when LISTPOS=HEAD is           * 00296500
*                  specified.                                         * 00296600
*                                                                     * 00296700
*              o   to all binary ones when LISTPOS=TAIL is specified. * 00296800
*                                                                     * 00296900
*                                                                     * 00297000
*                                                                     * 00297100
*              DEFAULT: NO_ENTRYKEY                                   * 00297200
*                                                                     * 00297300
*                                                                     * 00297400
*              ÝKEYREQTYPE=»EQUAL!LESSOREQUAL!GREATEROREQUALº¨¨       * 00297500
*                  is an optional keyword input which specifies how   * 00297600
*                  an existing keyed list entry is located when an    * 00297700
*                  entry is read, written, moved, or deleted.         * 00297800
*                                                                     * 00297900
*                  KEYREQTYPE is optional when ENTRYKEY is specified  * 00298000
*                  on READ, MOVE, DELETE, and READ_LIST requests, and * 00298100
*                  on WRITE requests when an ENTRYTYPE of OLD or ANY  * 00298200
*                  is also specified.  KEYREQTYPE is mutually         * 00298300
*                  exclusive with all other request types, and is     * 00298400
*                  also mutually exclusive with ENTRYID and           * 00298500
*                  LOCBYCURSOR.                                       * 00298600
*                                                                     * 00298700
*                  DEFAULT: EQUAL                                     * 00298800
*                                                                     * 00298900
*                                                                     * 00299000
*                  KEYREQTYPE=EQUAL                                   * 00299100
*                      A list entry must have the specified entry     * 00299200
*                      key.                                           * 00299300
*                                                                     * 00299400
*                      If no such keyed entry exists on the list then * 00299500
*                      the request will be failed or an entry will be * 00299600
*                      allocated, depending on the other options      * 00299700
*                      specifed.                                      * 00299800
*                                                                     * 00299900
*                                                                     * 00300000
*                  KEYREQTYPE=LESSOREQUAL                             * 00300100
*                      A list entry must have an entry key less than  * 00300200
*                      or equal to the specified value.               * 00300300
*                                                                     * 00300400
*                      If no entries on the list have an entry key    * 00300500
*                      value less than or equal to the specified      * 00300600
*                      value the request will be failed or an entry   * 00300700
*                      will be allocated, depending on the other      * 00300800
*                      options specifed.                              * 00300900
*                                                                     * 00301000
*                      If no entries on the list have an entry key    * 00301100
*                      value equal to the specified value, but        * 00301200
*                      entries exists with an entry key value less    * 00301300
*                      than the specified value then the entry with   * 00301400
*                      the largest entry key value less than the      * 00301500
*                      specified value is selected.  When multiple    * 00301600
*                      entries have the same entry key value LISTPOS  * 00301700
*                      is used to resolve whether the first or last   * 00301800
*                      entry with the entry key value is selected.    * 00301900
*                                                                     * 00302000
*                                                                     * 00302100
*                  KEYREQTYPE=GREATEROREQUAL                          * 00302200
*                      A list entry must have an entry key greater    * 00302300
*                      than or equal to the specified value.          * 00302400
*                                                                     * 00302500
*                      If no entries on the list have an entry key    * 00302600
*                      value greater than or equal to the specified   * 00302700
*                      value the request will be failed or an entry   * 00302800
*                      will be allocated, depending on the other      * 00302900
*                      options specifed.                              * 00303000
*                                                                     * 00303100
*                      If no entries on the list have an entry key    * 00303200
*                      value equal to the specified value, but        * 00303300
*                      entries exists with an entry key value greater * 00303400
*                      than the specified value then the entry with   * 00303500
*                      the smallest entry key value greater than the  * 00303600
*                      specified value is selected.  When multiple    * 00303700
*                      entries have the same entry key value LISTPOS  * 00303800
*                      is used to resolve whether the first or last   * 00303900
*                      entry with the entry key value is selected.    * 00304000
*                                                                     * 00304100
*                                                                     * 00304200
*                                                                     * 00304300
*                                                                     * 00304400
*                                                                     * 00304500
*                                                                     * 00304600
*                                                                     * 00304700
*                                                                     * 00304800
*          ÝAUTHCOMP=»xauthcomp!NO_AUTHCOMPº                          * 00304900
*              is the name (RS-type), or address in register          * 00305000
*              (2)-(12), of an optional 16 character input which      * 00305100
*              specifies a value to be compared to the list authority * 00305200
*              value for the designated list.                         * 00305300
*                                                                     * 00305400
*              For WRITE_LCONTROLS requests, if the specified         * 00305500
*              comparitive list authority fails to equal the list     * 00305600
*              authority value for the designated list then the       * 00305700
*              IXLLIST operation is terminated with no resultant      * 00305800
*              change to the structure, and indicative return and     * 00305900
*              reason codes are provided to the invoker.  For all     * 00306000
*              other requests, if the condition specified by          * 00306100
*              AUTHCOMPTYPE is not met then the IXLLIST operation is  * 00306200
*              terminated with no resultant change to the structure,  * 00306300
*              and indicative return and reason codes are provided to * 00306400
*              the invoker.                                           * 00306500
*                                                                     * 00306600
*              AUTHCOMP may only be specified when LISTNUM is also    * 00306700
*              specified.  AUTHCOMP is optional on READ, READ_LIST,   * 00306800
*              READ_MULT, WRITE, WRITE_LCONTROLS, MOVE, DELETE,       * 00306900
*              DELETE_MULT, and DELETE_ENTRYLIST requests and is      * 00307000
*              mutually exclusive with all other request types.       * 00307100
*                                                                     * 00307200
*              For WRITE_LCONTROLS requests, if AUTHCOMP is not       * 00307300
*              specified then a default of binary zeros will be used  * 00307400
*              for the authority comparison.  For all other request   * 00307500
*              types, if AUTHCOMP is not specified then an authority  * 00307600
*              comparison will not be performed.                      * 00307700
*                                                                     * 00307800
*              For all request types other than WRITE_LCONTROLS the   * 00307900
*              AUTHCOMP keyword is only meaningful for list           * 00308000
*              structures allocated on level 1 or greater coupling    * 00308100
*              facilities.                                            * 00308200
*              DEFAULT: NO_AUTHCOMP                                   * 00308300
*                                                                     * 00308400
*                                                                     * 00308500
*              ÝAUTHCOMPTYPE=»EQUAL!LESSOREQUALº¨¨                    * 00308600
*                  is an optional keyword input which specifies how   * 00308700
*                  the list authority comparison is to be performed.  * 00308800
*                                                                     * 00308900
*                  AUTHCOMPTYPE may only be specified when LISTNUM    * 00309000
*                  and AUTHCOMP are also specified.  AUTHCOMPTYPE is  * 00309100
*                  optional on READ, READ_LIST, READ_MULT, WRITE,     * 00309200
*                  MOVE, DELETE, DELETE_MULT, and DELETE_ENTRYLIST    * 00309300
*                  requests and is mutually exclusive with all other  * 00309400
*                  request types.                                     * 00309500
*                                                                     * 00309600
*                  the AUTHCOMPTYPE keyword is only meaningful for    * 00309700
*                  list structures allocated on level 1 or greater    * 00309800
*                  coupling facilities.                               * 00309900
*                                                                     * 00310000
*                  DEFAULT: EQUAL                                     * 00310100
*                                                                     * 00310200
*                                                                     * 00310300
*                  AUTHCOMPTYPE=EQUAL                                 * 00310400
*                      The list authority for the list specified by   * 00310500
*                      LISTNUM must be equal to the value specified   * 00310600
*                      for AUTHCOMP.                                  * 00310700
*                                                                     * 00310800
*                                                                     * 00310900
*                  AUTHCOMPTYPE=LESSOREQUAL                           * 00311000
*                      The list authority for the list specified by   * 00311100
*                      LISTNUM must be less than or equal to the      * 00311200
*                      value specified for AUTHCOMP.                  * 00311300
*                                                                     * 00311400
*                                                                     * 00311500
*                                                                     * 00311600
*                                                                     * 00311700
*                                                                     * 00311800
*                                                                     * 00311900
*                                                                     * 00312000
*                                                                     * 00312100
*          ÝNEWAUTH=»xnewauth!NO_NEWAUTHº¨¨                           * 00312200
*              is the name (RS-type), or address in register          * 00312300
*              (2)-(12), of an optional 16 character input which      * 00312400
*              specifies a new value to be established as the list    * 00312500
*              authority of the designated list.  If NEWAUTH is not   * 00312600
*              specified the list authority for the designated list   * 00312700
*              will remain unchanged.                                 * 00312800
*                                                                     * 00312900
*              NEWAUTH may only be specified when LISTNUM is also     * 00313000
*              specified.  NEWAUTH is optional on READ, WRITE,        * 00313100
*              WRITE_LCONTROLS, MOVE, and DELETE requests and is      * 00313200
*              mutually exclusive with all other request types.       * 00313300
*                                                                     * 00313400
*              Note: The default list authority for all lists when    * 00313500
*              the structure is allocated is binary zeros.            * 00313600
*              DEFAULT: NO_NEWAUTH                                    * 00313700
*                                                                     * 00313800
*                                                                     * 00313900
*                                                                     * 00314000
*                                                                     * 00314100
*                                                                     * 00314200
*                                                                     * 00314300
*      ÝENTRYID=»xentryid!NO_ENTRYIDº¨                                * 00314400
*          is the name (RS-type), or address in register (2)-(12), of * 00314500
*          an optional 12 character input specifying the list entry   * 00314600
*          identifier of the entry to be processed.                   * 00314700
*                                                                     * 00314800
*          ENTRYID may be specified to uniquely identify the source   * 00314900
*          of a READ or MOVE request, the target of a WRITE or DELETE * 00315000
*          request, or the starting point of a READ_LIST request.     * 00315100
*                                                                     * 00315200
*          At least one of ENTRYID, ENTRYNAME, LISTNUM, and           * 00315300
*          LOCBYCURSOR must be specified for READ, MOVE, DELETE, and  * 00315400
*          READ_LIST requests, and for WRITE requests when an         * 00315500
*          ENTRYTYPE of ANY or OLD is also specified.  It is mutually * 00315600
*          exclusive with all other request types.                    * 00315700
*                                                                     * 00315800
*          ENTRYID and LOCBYCURSOR are mutually exclusive.  ENTRYID   * 00315900
*          is mutually exclusive with ENTRYNAME and ENTRYKEY, except  * 00316000
*          on WRITE and MOVE requests when ENTRYTYPE=ANY is           * 00316100
*          specified.  In these cases, if both ENTRYID and one of     * 00316200
*          ENTRYNAME or ENTRYKEY are specified then ENTRYID is used   * 00316300
*          as the criteria to determine if the list entry already     * 00316400
*          exists.                                                    * 00316500
*                                                                     * 00316600
*          Similarly, ENTRYID is mutually exclusive with LISTPOS,     * 00316700
*          except on WRITE and MOVE requests when ENTRYTYPE=ANY is    * 00316800
*          specified.                                                 * 00316900
*                                                                     * 00317000
*          DEFAULT: NO_ENTRYID                                        * 00317100
*                                                                     * 00317200
*                                                                     * 00317300
*                                                                     * 00317400
*                                                                     * 00317500
*      ÝENTRYNAME=»xentryname!NO_ENTRYNAMEº¨                          * 00317600
*          is the name (RS-type), or address in register (2)-(12), of * 00317700
*          an optional 16 character input specifying the list entry   * 00317800
*          name of the entry to be processed, or the name to be       * 00317900
*          assigned a newly created entry.                            * 00318000
*                                                                     * 00318100
*          ENTRYNAME may be specified to uniquely identify the source * 00318200
*          of a READ or MOVE request, the target of a WRITE or DELETE * 00318300
*          request, or the starting point of a READ_LIST request, and * 00318400
*          specifies the name to be assigned a newly created entry on * 00318500
*          WRITE and MOVE requests.                                   * 00318600
*                                                                     * 00318700
*          ENTRYNAME may only be specified for structures that        * 00318800
*          support named entries.  At least one of ENTRYNAME,         * 00318900
*          ENTRYID, LISTNUM, and LOCBYCURSOR must be specified for    * 00319000
*          READ, MOVE, DELETE, and READ_LIST requests, and for WRITE  * 00319100
*          requests when an ENTRYTYPE of ANY or OLD is also           * 00319200
*          specified.  If the structure supports named entries then   * 00319300
*          ENTRYNAME is required for MOVE requests when ENTRYTYPE=ANY * 00319400
*          is specified, and for WRITE requests when an ENTRYTYPE of  * 00319500
*          ANY or NEW is specified.  It is mutually exclusive with    * 00319600
*          all other request types.                                   * 00319700
*                                                                     * 00319800
*          ENTRYNAME is mutually exclusive with ENTRYID and           * 00319900
*          LOCBYCURSOR, except on WRITE and MOVE requests when        * 00320000
*          ENTRYTYPE=ANY is specified.  In these cases, if both are   * 00320100
*          specified then ENTRYID is used as the criteria to          * 00320200
*          determine if the list entry already exists, while          * 00320300
*          ENTRYNAME specifies the name to be assigned to any newly   * 00320400
*          created entry.  The name must be unique within the         * 00320500
*          structure for the request to complete successfully.        * 00320600
*                                                                     * 00320700
*          Similarly, ENTRYNAME is mutually exclusive with LISTPOS,   * 00320800
*          except on WRITE requests when an ENTRYTYPE of ANY or NEW   * 00320900
*          is specified.  When ENTRYTYPE=ANY is specified, if ENTRYID * 00321000
*          is not also specified then ENTRYNAME supercedes LISTPOS in * 00321100
*          determining if the list entry already exists.  Regardless  * 00321200
*          of whether or not ENTRYID is also specified, ENTRYNAME     * 00321300
*          specifies the name to be assigned to any newly created     * 00321400
*          entry.                                                     * 00321500
*                                                                     * 00321600
*          ENTRYNAME is always mutually exclusive with ENTRYKEY,      * 00321700
*          MOVETOKEY, KEYCOMP, and LISTKEYTYPE values of MOVE,        * 00321800
*          CREATE, and ANY.                                           * 00321900
*                                                                     * 00322000
*          DEFAULT: NO_ENTRYNAME                                      * 00322100
*                                                                     * 00322200
*                                                                     * 00322300
*                                                                     * 00322400
*                                                                     * 00322500
*      ÝLOCBYCURSOR¨                                                  * 00322600
*          Keyword specifying that the list cursor should be used to  * 00322700
*          locate the entry to be processed.                          * 00322800
*                                                                     * 00322900
*          The list cursor must be initialized by specifying          * 00323000
*          UPDATECURSOR=YES on a prior request before the LOCBYCURSOR * 00323100
*          option is used.  If the list entry which the list cursor   * 00323200
*          points at is deleted or moved to another list, then the    * 00323300
*          list cursor will be reset to binary zeros.                 * 00323400
*                                                                     * 00323500
*          At least one of LOCBYCURSOR, LISTNUM, ENTRYID, and         * 00323600
*          ENTRYNAME must be specified for READ_LIST, MOVE, and       * 00323700
*          DELETE requests, and for WRITE requests when an ENTRYTYPE  * 00323800
*          of ANY or OLD is specified.  LOCBYCURSOR is mutually       * 00323900
*          exclusive with all other request types.  LOCBYCURSOR is    * 00324000
*          mutually exclusive with ENTRYID.  LOCBYCURSOR is mutually  * 00324100
*          exclusive with ENTRYKEY, ENTRYNAME, and LISTPOS, except on * 00324200
*          WRITE requests with ENTRYTYPE values of ANY or NEW.        * 00324300
*                                                                     * 00324400
*          When LOCBYCURSOR is specified, LISTNUM is required.        * 00324500
*          DEFAULT: NO_LOCBYCURSOR                                    * 00324600
*                                                                     * 00324700
*                                                                     * 00324800
*                                                                     * 00324900
*                                                                     * 00325000
*      ÝUPDATECURSOR=»NO!YESº                                         * 00325100
*          is an optional keyword input which indicates whether the   * 00325200
*          list cursor for the list specified by LISTNUM, or for the  * 00325300
*          list containing the entry specified by ENTRYID or          * 00325400
*          ENTRYNAME, should be updated if the request is successful. * 00325500
*                                                                     * 00325600
*          UPDATECURSOR=YES is optional on READ, WRITE, MOVE, and     * 00325700
*          DELETE requests and is mutually exclusive with all other   * 00325800
*          request types.  UPDATECURSOR=NO may be specified with all  * 00325900
*          requests.                                                  * 00326000
*                                                                     * 00326100
*          DEFAULT: NO                                                * 00326200
*                                                                     * 00326300
*                                                                     * 00326400
*          ÝUPDATECURSOR=NO¨                                          * 00326500
*              Indicates that the list cursor is not to be updated.   * 00326600
*                                                                     * 00326700
*                                                                     * 00326800
*          ÝUPDATECURSOR=YES                                          * 00326900
*              Indicates that the list cursor is to be updated if the * 00327000
*              request is successful.                                 * 00327100
*                                                                     * 00327200
*              If the list entry specified on the request exists,     * 00327300
*              then the list cursor for the list on which the entry   * 00327400
*              resides is updated before the list entry is processed  * 00327500
*              for the request.  If a new list entry is allocated for * 00327600
*              the request, then the list cursor for the list on      * 00327700
*              which the entry is allocated is updated.               * 00327800
*                                                                     * 00327900
*              The CURSORUPDTYPE keyword controls how the list cursor * 00328000
*              is updated.                                            * 00328100
*                                                                     * 00328200
*                                                                     * 00328300
*              ÝCURSORUPDTYPE=»NEXT!NEXTCOND!CURRENT!CURRENTCONDº¨¨   * 00328400
*                                                                     * 00328500
*                  is an optional keyword input which indicates how   * 00328600
*                  the list cursor is to be updated when              * 00328700
*                  UPDATECURSOR=YES is specified.                     * 00328800
*                                                                     * 00328900
*                  The CURSORUPDTYPE values of NEXTCOND, CURRENT, and * 00329000
*                  CURRENTCOND are only meaningful for list           * 00329100
*                  structures allocated on level 1 or greater         * 00329200
*                  coupling facilities.                               * 00329300
*                                                                     * 00329400
*                  DEFAULT: NEXT                                      * 00329500
*                                                                     * 00329600
*                                                                     * 00329700
*                  CURSORUPDTYPE=NEXT                                 * 00329800
*                      Indicates that the list cursor is to be        * 00329900
*                      updated to point to the list entry preceding   * 00330000
*                      or following the entry processed for the       * 00330100
*                      request.                                       * 00330200
*                                                                     * 00330300
*                      For MOVE requests specifying DATAOPER=WRITE    * 00330400
*                      and ENTRYTYPE=ANY which result in the creation * 00330500
*                      of a new entry the cursor for the list         * 00330600
*                      specified by MOVETOLIST is updated and the     * 00330700
*                      direction of the cursor update depends on the  * 00330800
*                      value specified for MOVETOPOS.  For all other  * 00330900
*                      requests the cursor for the list on which the  * 00331000
*                      designated entry resides before the request is * 00331100
*                      processed is updated and the direction of the  * 00331200
*                      cursor update depends on the value specified   * 00331300
*                      for LISTPOS or LISTDIR.                        * 00331400
*                                                                     * 00331500
*                                                                     * 00331600
*                  CURSORUPDTYPE=NEXTCOND                             * 00331700
*                      Indicates that if the list cursor points to    * 00331800
*                      the entry processed for the request, and the   * 00331900
*                      entry is deleted or moved to another list then * 00332000
*                      the cursor is to be updated to point to the    * 00332100
*                      preceding or following list entry, depending   * 00332200
*                      on the list cursor direction.                  * 00332300
*                                                                     * 00332400
*                      If the entry is the last entry on the list and * 00332500
*                      the list cursor direction is set to a          * 00332600
*                      head-to-tail direction, or the entry is the    * 00332700
*                      first entry on the list and the list cursor    * 00332800
*                      direction is set to a tail-to-head direction   * 00332900
*                      then the list cursor will be reset to binary   * 00333000
*                      zeros.                                         * 00333100
*                                                                     * 00333200
*                      The list cursor direction may be set by        * 00333300
*                      specifying SETCURSOR on a WRITE_LCONTROLS      * 00333400
*                      request.                                       * 00333500
*                                                                     * 00333600
*                                                                     * 00333700
*                  CURSORUPDTYPE=CURRENT                              * 00333800
*                      Indicates that the list cursor is to be set to * 00333900
*                      point to the entry processed for the request.  * 00334000
*                                                                     * 00334100
*                      If the entry is deleted or moved to another    * 00334200
*                      list then the list cursor will be reset to     * 00334300
*                      binary zeros.                                  * 00334400
*                                                                     * 00334500
*                                                                     * 00334600
*                  CURSORUPDTYPE=CURRENTCOND                          * 00334700
*                      Indicates that if the list cursor does not     * 00334800
*                      point to an entry then it is to be updated to  * 00334900
*                      point to the entry processed for the request.  * 00335000
*                                                                     * 00335100
*                      If the entry is deleted or moved to another    * 00335200
*                      list then the list cursor will remain binary   * 00335300
*                      zeros.                                         * 00335400
*                                                                     * 00335500
*                                                                     * 00335600
*                                                                     * 00335700
*                                                                     * 00335800
*                                                                     * 00335900
*                                                                     * 00336000
*                                                                     * 00336100
*                                                                     * 00336200
*                                                                     * 00336300
*                                                                     * 00336400
*      ÝLISTDIR=»TOTAIL!TOHEADº¨                                      * 00336500
*          is an optional keyword input which indicates how the list  * 00336600
*          cursor is to be updated when UPDATECURSOR=YES is specified * 00336700
*          with CURSORUPDTYPE=NEXT, or the direction of processing    * 00336800
*          when traversing a given list for a READ_LIST request.      * 00336900
*                                                                     * 00337000
*          LISTDIR is optional on READ_LIST requests and when         * 00337100
*          UPDATECURSOR=YES with CURSORUPDTYPE=NEXT is specified, and * 00337200
*          is mutually exclusive with all other request types.        * 00337300
*          LISTDIR=TOHEAD is mutually exclusive with LISTPOS=HEAD,    * 00337400
*          and LISTDIR=TOTAIL is mutually exclusive with              * 00337500
*          LISTPOS=TAIL.                                              * 00337600
*                                                                     * 00337700
*          When not specified, LISTDIR defaults as follows:           * 00337800
*                                                                     * 00337900
*                                                                     * 00338000
*          o   To TOTAIL when LISTPOS is not specified, and when      * 00338100
*              LISTPOS=HEAD is specified.                             * 00338200
*                                                                     * 00338300
*          o   To TOHEAD when LISTPOS=TAIL is specified.              * 00338400
*                                                                     * 00338500
*                                                                     * 00338600
*                                                                     * 00338700
*          DEFAULT: TOTAIL                                            * 00338800
*                                                                     * 00338900
*                                                                     * 00339000
*          LISTDIR=TOTAIL                                             * 00339100
*              For READ_LIST requests, indicates that processing      * 00339200
*              should begin at the designated entry and proceed       * 00339300
*              toward the tail of the list.                           * 00339400
*                                                                     * 00339500
*              When UPDATECURSOR=YES is specified with                * 00339600
*              CURSORUPDTYPE=NEXT, indicates that the list cursor is  * 00339700
*              to be updated to point to the list entry following the * 00339800
*              entry processed for the request.  If the list cursor   * 00339900
*              points to the last entry on the list then it will be   * 00340000
*              reset to binary zeros.                                 * 00340100
*                                                                     * 00340200
*                                                                     * 00340300
*          LISTDIR=TOHEAD                                             * 00340400
*              For READ_LIST requests, indicates that processing      * 00340500
*              should begin at the designated entry and proceed       * 00340600
*              toward the head of the list.                           * 00340700
*                                                                     * 00340800
*              When UPDATECURSOR=YES is specified, indicates that the * 00340900
*              list cursor is to be updated to point to the list      * 00341000
*              entry preceding the entry processed for the request.   * 00341100
*              If the list cursor points to the first entry on the    * 00341200
*              list then it will be reset to binary zeros.            * 00341300
*                                                                     * 00341400
*                                                                     * 00341500
*                                                                     * 00341600
*                                                                     * 00341700
*                                                                     * 00341800
*                                                                     * 00341900
*      ÝLISTKEYTYPE=»NOLISTKEY!MOVE!CREATE!ANYº¨                      * 00342000
*          is an optional keyword input which indicates the           * 00342100
*          conditions where the entry key for the designated list     * 00342200
*          entry will be set to the current list key value.           * 00342300
*                                                                     * 00342400
*          The entry key for a list entry may be set to the current   * 00342500
*          list key value when the list entry is created or moved.    * 00342600
*          The list key and maximum list key values may be set by     * 00342700
*          using the WRITE_LCONTROLS request.                         * 00342800
*                                                                     * 00342900
*          LISTKEYTYPE is optional on WRITE and MOVE requests, and is * 00343000
*          mutually exclusive with all other request types.           * 00343100
*          LISTKEYTYPE is only meaningful for structures which        * 00343200
*          support entries with keys.                                 * 00343300
*                                                                     * 00343400
*          The LISTKEYTYPE values of MOVE, CREATE, and ANY are        * 00343500
*          mutually exclusive with the ENTRYNAME key and are only     * 00343600
*          meaningful for list structures allocated on level 1 or     * 00343700
*          greater coupling facilities.                               * 00343800
*                                                                     * 00343900
*          DEFAULT: NOLISTKEY                                         * 00344000
*                                                                     * 00344100
*                                                                     * 00344200
*          ÝLISTKEYTYPE=NOLISTKEY¨                                    * 00344300
*              Indicates that the entry key for the designated list   * 00344400
*              entry is not to be set to the current list key value   * 00344500
*              under any conditions.  If the list entry is created or * 00344600
*              moved and the structure supports entries with keys     * 00344700
*              then the other keywords specified will determine the   * 00344800
*              resultant entry key value.                             * 00344900
*                                                                     * 00345000
*                                                                     * 00345100
*          ÝLISTKEYTYPE=MOVE                                          * 00345200
*              Indicates that the entry key for the designated list   * 00345300
*              entry is to be set to the current list key value if    * 00345400
*              the entry is moved by this request.  If the list entry * 00345500
*              is created and the structure supports entries with     * 00345600
*              keys then the other keywords specified will determine  * 00345700
*              the resultant entry key value.                         * 00345800
*                                                                     * 00345900
*                                                                     * 00346000
*              ÝLISTKEYINC=»xlistkeyinc!NO_LISTKEYINCº¨¨              * 00346100
*                  is the name (RS-type), or address in register      * 00346200
*                  (2)-(12), of an optional fullword input which      * 00346300
*                  specifies a value to be added to the list key      * 00346400
*                  after the entry key is set to the list key value.  * 00346500
*                                                                     * 00346600
*                  If the entry key is not set to the list key value  * 00346700
*                  then the list key value will not be changed.  If   * 00346800
*                  the result of adding the value specified by        * 00346900
*                  LISTKEYINC to the list key value is greater than   * 00347000
*                  the maximum list key value then the request will   * 00347100
*                  be failed.                                         * 00347200
*                                                                     * 00347300
*                  DEFAULT: NO_LISTKEYINC                             * 00347400
*                                                                     * 00347500
*                                                                     * 00347600
*                                                                     * 00347700
*          ÝLISTKEYTYPE=CREATE                                        * 00347800
*              Indicates that the entry key for the designated list   * 00347900
*              entry is to be set to the current list key value if    * 00348000
*              the entry is created by this request.  If the list     * 00348100
*              entry is moved and the structure supports entries with * 00348200
*              keys then the other keywords specified will determine  * 00348300
*              the resultant entry key value.                         * 00348400
*                                                                     * 00348500
*                                                                     * 00348600
*              ÝLISTKEYINC=»xlistkeyinc!NO_LISTKEYINCº¨¨              * 00348700
*                  is the name (RS-type), or address in register      * 00348800
*                  (2)-(12), of an optional fullword input which      * 00348900
*                  specifies a value to be added to the list key      * 00349000
*                  after the entry key is set to the list key value.  * 00349100
*                                                                     * 00349200
*                  If the entry key is not set to the list key value  * 00349300
*                  then the list key value will not be changed.  If   * 00349400
*                  the result of adding the value specified by        * 00349500
*                  LISTKEYINC to the list key value is greater than   * 00349600
*                  the maximum list key value then the request will   * 00349700
*                  be failed.                                         * 00349800
*                                                                     * 00349900
*                  DEFAULT: NO_LISTKEYINC                             * 00350000
*                                                                     * 00350100
*                                                                     * 00350200
*                                                                     * 00350300
*          ÝLISTKEYTYPE=ANY                                           * 00350400
*              Indicates that the entry key for the designated list   * 00350500
*              entry is to be set to the current list key value if    * 00350600
*              the entry is created or moved by this request.         * 00350700
*                                                                     * 00350800
*                                                                     * 00350900
*              ÝLISTKEYINC=»xlistkeyinc!NO_LISTKEYINCº¨¨              * 00351000
*                  is the name (RS-type), or address in register      * 00351100
*                  (2)-(12), of an optional fullword input which      * 00351200
*                  specifies a value to be added to the list key      * 00351300
*                  after the entry key is set to the list key value.  * 00351400
*                                                                     * 00351500
*                  If the entry key is not set to the list key value  * 00351600
*                  then the list key value will not be changed.  If   * 00351700
*                  the result of adding the value specified by        * 00351800
*                  LISTKEYINC to the list key value is greater than   * 00351900
*                  the maximum list key value then the request will   * 00352000
*                  be failed.                                         * 00352100
*                                                                     * 00352200
*                  DEFAULT: NO_LISTKEYINC                             * 00352300
*                                                                     * 00352400
*                                                                     * 00352500
*                                                                     * 00352600
*                                                                     * 00352700
*                                                                     * 00352800
*                                                                     * 00352900
*                                                                     * 00353000
*                                                                     * 00353100
*      ÝKEYCOMP=»xkeycomp!NO_KEYCOMPº¨                                * 00353200
*          is the name (RS-type), or address in register (2)-(12), of * 00353300
*          an optional 16 character input which specifies a value to  * 00353400
*          be compared to the entry key of the designated list entry. * 00353500
*                                                                     * 00353600
*          If the current list entry key fails to equal the specified * 00353700
*          comparative key value then no processing is performed for  * 00353800
*          the current entry and processing continues with the next   * 00353900
*          entry to be considered.  KEYCOMP is ignored when the       * 00354000
*          structure does not support entry keys.                     * 00354100
*                                                                     * 00354200
*          KEYCOMP is optional for READ_LIST, READ_MULT, DELETE_MULT, * 00354300
*          and DELETE_ENTRYLIST requests and is mutually exclusive    * 00354400
*          with all other request types.  KEYCOMP is mutually         * 00354500
*          exclusive with ENTRYKEY, ENTRYNAME, and with               * 00354600
*          LISTTYPE=NAMELIST.                                         * 00354700
*                                                                     * 00354800
*          KEYCOMP is only meaningful for list structures allocated   * 00354900
*          on level 1 or greater coupling facilities.                 * 00355000
*                                                                     * 00355100
*          DEFAULT: NO_KEYCOMP                                        * 00355200
*                                                                     * 00355300
*                                                                     * 00355400
*                                                                     * 00355500
*                                                                     * 00355600
*      ÝVERSCOMP=»xverscomp!NO_VERSCOMPº                              * 00355700
*          is the name (RS-type), or address in register (2)-(12), of * 00355800
*          an optional 8 character input which specifies a value to   * 00355900
*          be compared to the version number of the designated list   * 00356000
*          entry.                                                     * 00356100
*                                                                     * 00356200
*          For READ, WRITE, MOVE, and DELETE requests, VERSCOMPTYPE   * 00356300
*          may optionally be specified,  and if the condition         * 00356400
*          specified by VERSCOMPTYPE is not met then the entire       * 00356500
*          IXLLIST operation is terminated with no resultant change   * 00356600
*          to the structure, and indicative return and reason codes   * 00356700
*          are provided to the invoker.                               * 00356800
*                                                                     * 00356900
*          For READ_LIST, READ_MULT, DELETE_MULT, and                 * 00357000
*          DELETE_ENTRYLIST requests, VERSCOMPTYPE may optionally be  * 00357100
*          specified,  and if the condition specified by VERSCOMPTYPE * 00357200
*          is not met for the current list entry then no processing   * 00357300
*          is performed for the current entry and processing          * 00357400
*          continues with the next entry to be considered.            * 00357500
*                                                                     * 00357600
*          VERSCOMP is mutually exclusive with all other request      * 00357700
*          types.                                                     * 00357800
*          DEFAULT: NO_VERSCOMP                                       * 00357900
*                                                                     * 00358000
*                                                                     * 00358100
*          ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨                        * 00358200
*              is an optional keyword input which specifies how the   * 00358300
*              list entry version number comparison is to be          * 00358400
*              performed.                                             * 00358500
*                                                                     * 00358600
*              VERSCOMPTYPE may only be specified when VERSCOMP is    * 00358700
*              also specified.  VERSCOMPTYPE is optional on READ,     * 00358800
*              READ_LIST, READ_MULT, WRITE, MOVE, DELETE,             * 00358900
*              DELETE_MULT, and DELETE_ENTRYLIST requests and is      * 00359000
*              mutually exclusive with all other request types.       * 00359100
*                                                                     * 00359200
*              VERSCOMPTYPE=LESSOREQUAL is only meaningful for list   * 00359300
*              structures allocated on level 1 or greater coupling    * 00359400
*              facilities.                                            * 00359500
*                                                                     * 00359600
*              DEFAULT: EQUAL                                         * 00359700
*                                                                     * 00359800
*                                                                     * 00359900
*              VERSCOMPTYPE=EQUAL                                     * 00360000
*                  The version number for the list entry must be      * 00360100
*                  equal to the value specified for VERSCOMP.         * 00360200
*                                                                     * 00360300
*                                                                     * 00360400
*              VERSCOMPTYPE=LESSOREQUAL                               * 00360500
*                  The version number for the list entry must be less * 00360600
*                  than or equal to the value specified for VERSCOMP. * 00360700
*                                                                     * 00360800
*                                                                     * 00360900
*                                                                     * 00361000
*                                                                     * 00361100
*                                                                     * 00361200
*                                                                     * 00361300
*                                                                     * 00361400
*                                                                     * 00361500
*      ÝVERSUPDATE=»NONE!INC!DEC!SETº¨                                * 00361600
*          is an optional keyword input that specifies how the entry  * 00361700
*          version number will be updated or, for those cases where   * 00361800
*          an entry is created, initialized.                          * 00361900
*                                                                     * 00362000
*          VERSUPDATE may optionally be specified on READ, WRITE, and * 00362100
*          MOVE requests.  VERSUPDATE values of INC, DEC, and SET are * 00362200
*          mutually exclusive with all other request types.           * 00362300
*                                                                     * 00362400
*          DEFAULT: NONE                                              * 00362500
*                                                                     * 00362600
*                                                                     * 00362700
*          ÝVERSUPDATE=NONE¨                                          * 00362800
*              The version number is not updated.                     * 00362900
*                                                                     * 00363000
*              On a request that causes an entry to be created the    * 00363100
*              version number for the created entry is set to contain * 00363200
*              all binary zeros.                                      * 00363300
*                                                                     * 00363400
*                                                                     * 00363500
*          ÝVERSUPDATE=INC¨                                           * 00363600
*              The version number will be incremented.                * 00363700
*                                                                     * 00363800
*              On a request that causes an entry to be created the    * 00363900
*              version number for the created entry is set to contain * 00364000
*              all binary zeros, except for the low order bit which   * 00364100
*              is set to one.                                         * 00364200
*                                                                     * 00364300
*                                                                     * 00364400
*          ÝVERSUPDATE=DEC¨                                           * 00364500
*              The version number will be decremented.                * 00364600
*                                                                     * 00364700
*              On a request that causes an entry to be created the    * 00364800
*              version number for the created entry is set to contain * 00364900
*              all binary ones.                                       * 00365000
*                                                                     * 00365100
*                                                                     * 00365200
*          ÝVERSUPDATE=SET                                            * 00365300
*              The version number will be set to the value specified  * 00365400
*              by NEWVERS, including the case where an entry is       * 00365500
*              created.                                               * 00365600
*                                                                     * 00365700
*                                                                     * 00365800
*              NEWVERS=xnewvers¨                                      * 00365900
*                  is the name (RS-type), or address in register      * 00366000
*                  (2)-(12), of a required 8 character input which    * 00366100
*                  specifies a value for the list entry version       * 00366200
*                  number.                                            * 00366300
*                                                                     * 00366400
*                  DEFAULT: NO_NEWVERS                                * 00366500
*                                                                     * 00366600
*                                                                     * 00366700
*                                                                     * 00366800
*                                                                     * 00366900
*                                                                     * 00367000
*                                                                     * 00367100
*                                                                     * 00367200
*                                                                     * 00367300
*      ÝLOCKINDEX=»xlockindex!NO_LOCKINDEXº                           * 00367400
*          is the name (RS-type), or address in register (2)-(12), of * 00367500
*          an optional fullword input that contains the index of the  * 00367600
*          lock to be operated on within the lock table for the list  * 00367700
*          structure.                                                 * 00367800
*                                                                     * 00367900
*          When specified, the designated lock will be operated on as * 00368000
*          specified by the LOCKOPER keyword.  The specified value    * 00368100
*          must fall within the range 0 to the number of lock table   * 00368200
*          entries minus one, inclusive.                              * 00368300
*                                                                     * 00368400
*          This keyword is required for LOCK requests, and is         * 00368500
*          optional on READ, WRITE, MOVE, DELETE, READ_LIST,          * 00368600
*          READ_MULT, DELETE_MULT, and DELETE_ENTRYLIST requests.  It * 00368700
*          is mutually exclusive with all other request types and     * 00368800
*          with MODE=ASYNCNORESPONSE.                                 * 00368900
*                                                                     * 00369000
*          DEFAULT: NO_LOCKINDEX                                      * 00369100
*                                                                     * 00369200
*                                                                     * 00369300
*          LOCKOPER=»SET!RESET!NOTHELD!HELDBY!TEST!READNEXTº          * 00369400
*              is a required keyword input that specifies the type of * 00369500
*              operation to be performed on the specified lock.       * 00369600
*                                                                     * 00369700
*              When contention resolution is not called for the lock  * 00369800
*              operation and any specified list entry operation are   * 00369900
*              processed together as an atomic operation.             * 00370000
*                                                                     * 00370100
*                                                                     * 00370200
*                                                                     * 00370300
*              LOCKOPER=SET                                           * 00370400
*                  When LOCKCOMP is not specified, requests ownership * 00370500
*                  of the lock for the connection specified by        * 00370600
*                  CONTOKEN.                                          * 00370700
*                                                                     * 00370800
*                  When LOCKCOMP is specified, requests that          * 00370900
*                  ownership of the lock be transferred from the      * 00371000
*                  connection specified by LOCKCOMP to the connection * 00371100
*                  specified by CONTOKEN.  Any outstanding requests   * 00371200
*                  awaiting contention resolution on this lock are    * 00371300
*                  ignored.                                           * 00371400
*                                                                     * 00371500
*                                                                     * 00371600
*                  ÝLOCKMODE=»UNCOND!CONDº¨                           * 00371700
*                      is an optional keyword input that specifies    * 00371800
*                      how contention on the lock should be handled.  * 00371900
*                                                                     * 00372000
*                      This keyword is mutually exclusive with        * 00372100
*                      LOCKCOMP.                                      * 00372200
*                                                                     * 00372300
*                      DEFAULT: UNCOND                                * 00372400
*                                                                     * 00372500
*                                                                     * 00372600
*                      LOCKMODE=UNCOND                                * 00372700
*                          Requests that the lock operation be done   * 00372800
*                          unconditionally.                           * 00372900
*                                                                     * 00373000
*                          If the specified lock is held then the     * 00373100
*                          entire IXLLIST operation will be held up   * 00373200
*                          until it the whole operation can be        * 00373300
*                          processed.  If MODE=SYNCSUSPEND was        * 00373400
*                          specified the caller will be suspended     * 00373500
*                          until the lock becomes available,          * 00373600
*                          otherwise the request will be processed    * 00373700
*                          asynchronously and the requestor will be   * 00373800
*                          notified by the means indicated on the     * 00373900
*                          MODE keyword.                              * 00374000
*                                                                     * 00374100
*                                                                     * 00374200
*                      LOCKMODE=COND                                  * 00374300
*                          Requests that the lock operation be done   * 00374400
*                          conditionally.                             * 00374500
*                                                                     * 00374600
*                          If the specified lock is held then the     * 00374700
*                          entire IXLLIST operation will be           * 00374800
*                          terminated with no resultant change to the * 00374900
*                          structure, and indicative return and       * 00375000
*                          reason codes are provided to the invoker.  * 00375100
*                                                                     * 00375200
*                                                                     * 00375300
*                                                                     * 00375400
*                                                                     * 00375500
*                                                                     * 00375600
*                                                                     * 00375700
*                  ÝLOCKDATA=»xlockdata!NO_LOCKDATAº¨                 * 00375800
*                      is the name (RS-type), or address in register  * 00375900
*                      (2)-(12), of an optional 8 character input     * 00376000
*                      that contains user-specified information to be * 00376100
*                      passed to the NOTIFY exit for the connection   * 00376200
*                      when the lock is held because of this          * 00376300
*                      LOCKOPER=SET request and another connection    * 00376400
*                      issues a request specifying LOCKOPER=SET or    * 00376500
*                      LOCKOPER=NOTHELD with LOCKMODE=UNCOND.         * 00376600
*                                                                     * 00376700
*                      DEFAULT: NO_LOCKDATA                           * 00376800
*                                                                     * 00376900
*                                                                     * 00377000
*                                                                     * 00377100
*              LOCKOPER=RESET                                         * 00377200
*                  When LOCKCOMP is not specified, requests that      * 00377300
*                  ownership of the lock be released if held by the   * 00377400
*                  connection specified by CONTOKEN.                  * 00377500
*                                                                     * 00377600
*                  When LOCKCOMP is specified, requests that          * 00377700
*                  ownership of the lock be released if and only if   * 00377800
*                  its held by the connection specified by LOCKCOMP.  * 00377900
*                                                                     * 00378000
*                  The RESET operation will always be done            * 00378100
*                  unconditionally when LOCKCOMP is not specified and * 00378200
*                  conditionally when LOCKCOMP is specified.          * 00378300
*                                                                     * 00378400
*                                                                     * 00378500
*              LOCKOPER=NOTHELD                                       * 00378600
*                  Requests that the state of the lock be such that   * 00378700
*                  the lock is not held for the duration of the       * 00378800
*                  requested list entry operation.  The lock state    * 00378900
*                  remains unchanged as a result of this option.      * 00379000
*                                                                     * 00379100
*                  This option is mutually exclusive with             * 00379200
*                  REQUEST=LOCK and with LOCKCOMP.                    * 00379300
*                                                                     * 00379400
*                                                                     * 00379500
*                  ÝLOCKMODE=»UNCOND!CONDº¨                           * 00379600
*                      is an optional keyword input that specifies    * 00379700
*                      how contention on the lock should be handled.  * 00379800
*                                                                     * 00379900
*                      For READ, WRITE, MOVE, and DELETE requests the * 00380000
*                      default for LOCKMODE is UNCOND.  For           * 00380100
*                      READ_LIST, READ_MULT, DELETE_MULT, and         * 00380200
*                      DELETE_ENTRYLIST requests the default for      * 00380300
*                      LOCKMODE is COND and the value UNCOND is not   * 00380400
*                      allowed.                                       * 00380500
*                                                                     * 00380600
*                      DEFAULT: UNCOND                                * 00380700
*                                                                     * 00380800
*                                                                     * 00380900
*                      LOCKMODE=UNCOND                                * 00381000
*                          Requests that the lock operation be done   * 00381100
*                          unconditionally.                           * 00381200
*                                                                     * 00381300
*                          If the specified lock is held then the     * 00381400
*                          entire IXLLIST operation will be held up   * 00381500
*                          until it the whole operation can be        * 00381600
*                          processed.  If MODE=SYNCSUSPEND was        * 00381700
*                          specified the caller will be suspended     * 00381800
*                          until the lock becomes available,          * 00381900
*                          otherwise the request will be processed    * 00382000
*                          asynchronously and the requestor will be   * 00382100
*                          notified by the means indicated on the     * 00382200
*                          MODE keyword.                              * 00382300
*                                                                     * 00382400
*                                                                     * 00382500
*                      LOCKMODE=COND                                  * 00382600
*                          Requests that the lock operation be done   * 00382700
*                          conditionally.                             * 00382800
*                                                                     * 00382900
*                          If the specified lock is held then the     * 00383000
*                          entire IXLLIST operation will be           * 00383100
*                          terminated with no resultant change to the * 00383200
*                          structure, and indicative return and       * 00383300
*                          reason codes are provided to the invoker.  * 00383400
*                                                                     * 00383500
*                                                                     * 00383600
*                                                                     * 00383700
*                                                                     * 00383800
*                                                                     * 00383900
*              LOCKOPER=HELDBY                                        * 00384000
*                  When LOCKCOMP is not specified, requests that the  * 00384100
*                  list operation only be performed if the lock is    * 00384200
*                  currently held by the connection specified by      * 00384300
*                  CONTOKEN.                                          * 00384400
*                                                                     * 00384500
*                  When LOCKCOMP is specified, requests that the list * 00384600
*                  operation only be performed if the lock is         * 00384700
*                  currently held by the connection specified by      * 00384800
*                  LOCKCOMP.                                          * 00384900
*                                                                     * 00385000
*                  This option is mutually exclusive with             * 00385100
*                  REQUEST=LOCK.  HELDBY operations must be combined  * 00385200
*                  with a read, write, move, or delete request, and   * 00385300
*                  it is always conditional.                          * 00385400
*                                                                     * 00385500
*                                                                     * 00385600
*              LOCKOPER=TEST                                          * 00385700
*                  When LOCKCOMP is not specified, requests that the  * 00385800
*                  lock be tested to see if it is owned by the        * 00385900
*                  connection specified by CONTOKEN.  If LOCKCOMP is  * 00386000
*                  specified the lock is to be tested to see if is    * 00386100
*                  owned by the LOCKCOMP connection.                  * 00386200
*                                                                     * 00386300
*                  In both cases return code 0 indicates the lock was * 00386400
*                  held, while return code 4 indicates the lock is    * 00386500
*                  either not held or is held by a different          * 00386600
*                  connection.                                        * 00386700
*                                                                     * 00386800
*                  The lock state remains unchanged as a result of    * 00386900
*                  this option.                                       * 00387000
*                                                                     * 00387100
*                  This option may only be specified with             * 00387200
*                  REQUEST=LOCK.  It is mutually exclusive with all   * 00387300
*                  other request types.                               * 00387400
*                                                                     * 00387500
*                                                                     * 00387600
*              LOCKOPER=READNEXT                                      * 00387700
*                  When LOCKCOMP is not specified, requests that the  * 00387800
*                  lock index and connection ID of the owner of the   * 00387900
*                  next owned lock starting at the lock index         * 00388000
*                  specified by LOCKINDEX be returned.                * 00388100
*                                                                     * 00388200
*                  When LOCKCOMP is specified, requests that the lock * 00388300
*                  index of the next lock owned by the LOCKCOMP       * 00388400
*                  connection, starting at the lock index specified   * 00388500
*                  by LOCKINDEX, be returned.                         * 00388600
*                                                                     * 00388700
*                  The lock state remains unchanged as a result of    * 00388800
*                  this option.                                       * 00388900
*                                                                     * 00389000
*                  This option may only be specified with             * 00389100
*                  REQUEST=LOCK.  It is mutually exclusive with all   * 00389200
*                  other request types.                               * 00389300
*                                                                     * 00389400
*                  A request specifying LOCKOPER=READNEXT may         * 00389500
*                  complete prematurely if coupling facility          * 00389600
*                  model-dependent timeout criteria is exceeded.  In  * 00389700
*                  this event indicative return and reason codes are  * 00389800
*                  provided, and the index of the next lock to be     * 00389900
*                  processed is returned in the answer area specified * 00390000
*                  by ANSAREA.  This lock index may be specified on a * 00390100
*                  subsequent LOCKOPER=READNEXT request to resume     * 00390200
*                  processing with the appropriate lock entry.        * 00390300
*                                                                     * 00390400
*                                                                     * 00390500
*                                                                     * 00390600
*                                                                     * 00390700
*                                                                     * 00390800
*                                                                     * 00390900
*          ÝLOCKCOMP=»xlockcomp!NO_LOCKCOMPº¨¨                        * 00391000
*              is the name (RS-type), or address in register          * 00391100
*              (2)-(12), of an optional byte input field containing a * 00391200
*              connection identifier to be verified as the current    * 00391300
*              lock owner as a prerequisite to successful completion  * 00391400
*              of this request.                                       * 00391500
*                                                                     * 00391600
*              When LOCKCOMP is specified the locking operation is    * 00391700
*              always considered to be a conditional operation.  That * 00391800
*              is, if the request experiences lock contention the     * 00391900
*              request will be failed.  The connection identifier is  * 00392000
*              available from the IXLCONN answer area.                * 00392100
*                                                                     * 00392200
*              LOCKCOMP and LOCKMODE are mutually exclusive keywords, * 00392300
*              and LOCKCOMP is mutually exclusive with                * 00392400
*              LOCKOPER=NOTHELD.                                      * 00392500
*                                                                     * 00392600
*              DEFAULT: NO_LOCKCOMP                                   * 00392700
*                                                                     * 00392800
*                                                                     * 00392900
*                                                                     * 00393000
*                                                                     * 00393100
*                                                                     * 00393200
*                                                                     * 00393300
*      ÝMODE=»SYNCSUSPEND!SYNCECB!SYNCEXIT!SYNCTOKEN!ASYNCECB!ASYNCEX * 00393400
*          IT!ASYNCTOKEN!ASYNCNORESPONSEº¨                            * 00393500
*          is an optional keyword input that specifies whether the    * 00393600
*          request is to be performed synchronously or                * 00393700
*          asynchronously.                                            * 00393800
*                                                                     * 00393900
*          DEFAULT: SYNCSUSPEND                                       * 00394000
*                                                                     * 00394100
*                                                                     * 00394200
*          ÝMODE=SYNCSUSPEND¨                                         * 00394300
*              Indicates that the request will be performed           * 00394400
*              synchronously.  Control is not returned to the caller  * 00394500
*              until request processing is complete and the final     * 00394600
*              disposition determined.                                * 00394700
*                                                                     * 00394800
*              If necessary the caller will be suspended until the    * 00394900
*              request completes.  The caller must be executing in an * 00395000
*              enabled state to use this option.                      * 00395100
*                                                                     * 00395200
*                                                                     * 00395300
*          ÝMODE=SYNCECB                                              * 00395400
*              Indicates that the request will be attempted           * 00395500
*              synchronously.  If the request can not be completed    * 00395600
*              synchronously control is returned to the caller prior  * 00395700
*              to completion of the request, and the ECB specified by * 00395800
*              REQECB is posted when the request has completed.       * 00395900
*                                                                     * 00396000
*              When MODE=SYNCECB is specified and the request does    * 00396100
*              not complete synchronously latent XES binds to the     * 00396200
*              storage locations specified by BUFFER, BUFLIST,        * 00396300
*              MOSVECTOR, ADJAREA, and ANSAREA persist until the      * 00396400
*              REQECB ECB is posted.                                  * 00396500
*                                                                     * 00396600
*                                                                     * 00396700
*              REQECB=xreqecb¨                                        * 00396800
*                  is the name (RS-type), or address in register      * 00396900
*                  (2)-(12), of a required 4 byte input that contains * 00397000
*                  the address of an ECB to be posted when the        * 00397100
*                  request has completed.                             * 00397200
*                                                                     * 00397300
*                  The ECB should be initialized by the requestor     * 00397400
*                  prior to use with this service.  The ECB must      * 00397500
*                  reside either in common storage or in the home     * 00397600
*                  address space that existed at the time the         * 00397700
*                  connection service, IXLCONN, was issued for the    * 00397800
*                  structure.  Any task which waits on the ECB must   * 00397900
*                  have the same home address space as existed when   * 00398000
*                  IXLCONN was issued.                                * 00398100
*                                                                     * 00398200
*                                                                     * 00398300
*                                                                     * 00398400
*          ÝMODE=SYNCEXIT                                             * 00398500
*              Indicates that the request will be attempted           * 00398600
*              synchronously.  If the request can not be completed    * 00398700
*              synchronously control is returned to the caller prior  * 00398800
*              to completion of the request.  When the request        * 00398900
*              completes the connection's Complete Exit will be       * 00399000
*              called.                                                * 00399100
*                                                                     * 00399200
*              When MODE=SYNCEXIT is specified and the request does   * 00399300
*              not complete synchronously latent XES binds to the     * 00399400
*              storage locations specified by BUFFER, BUFLIST,        * 00399500
*              MOSVECTOR, ADJAREA, and ANSAREA persist until the      * 00399600
*              connection's Complete Exit is called.                  * 00399700
*                                                                     * 00399800
*                                                                     * 00399900
*              ÝREQDATA=»xreqdata!NO_REQDATAº¨¨                       * 00400000
*                  is the name (RS-type), or address in register      * 00400100
*                  (2)-(12), of an optional 8 character input         * 00400200
*                  variable that contains connected user-defined data * 00400300
*                  for the request to be passed to the Complete Exit  * 00400400
*                  when driven.  The contents of REQDATA has no       * 00400500
*                  meaning to the system.                             * 00400600
*                                                                     * 00400700
*                  DEFAULT: NO_REQDATA                                * 00400800
*                                                                     * 00400900
*                                                                     * 00401000
*                                                                     * 00401100
*          ÝMODE=SYNCTOKEN                                            * 00401200
*              Indicates that the request will be attempted           * 00401300
*              synchronously.  If the request can not be completed    * 00401400
*              synchronously control is returned to the caller prior  * 00401500
*              to completion of the request and a token that uniquely * 00401600
*              identifies the request is returned.                    * 00401700
*                                                                     * 00401800
*              When MODE=SYNCTOKEN is specified and the request does  * 00401900
*              not complete synchronously latent XES binds to the     * 00402000
*              storage locations specified by BUFFER, BUFLIST,        * 00402100
*              MOSVECTOR, ADJAREA, and ANSAREA persist until a        * 00402200
*              subsequent corresponding IXLFCOMP request indicates    * 00402300
*              completion of the original request.                    * 00402400
*                                                                     * 00402500
*                                                                     * 00402600
*              REQTOKEN=xreqtoken¨                                    * 00402700
*                  is a required output.  It is the name (RS-type),   * 00402800
*                  or address in register (2)-(12), of a 16 character * 00402900
*                  field into which is stored a token that uniquely   * 00403000
*                  identifies this request.                           * 00403100
*                                                                     * 00403200
*                  This token must be specified on a subsequent       * 00403300
*                  invocation of IXLFCOMP to force completion of the  * 00403400
*                  request and determine its final disposition.       * 00403500
*                                                                     * 00403600
*                                                                     * 00403700
*                                                                     * 00403800
*          ÝMODE=ASYNCECB                                             * 00403900
*              Indicates that the request is to be initiated and      * 00404000
*              control is to be returned to the caller prior to       * 00404100
*              completion of the request.  When the request completes * 00404200
*              the ECB specified by REQECB will be posted.            * 00404300
*                                                                     * 00404400
*              When MODE=ASYNCECB is specified latent XES binds to    * 00404500
*              the storage locations specified by BUFFER, BUFLIST,    * 00404600
*              MOSVECTOR, ADJAREA, and ANSAREA persist until the      * 00404700
*              REQECB ECB is posted.                                  * 00404800
*                                                                     * 00404900
*                                                                     * 00405000
*              REQECB=xreqecb¨                                        * 00405100
*                  is the name (RS-type), or address in register      * 00405200
*                  (2)-(12), of a required 4 byte input that contains * 00405300
*                  the address of an ECB to be posted when the        * 00405400
*                  request has completed.                             * 00405500
*                                                                     * 00405600
*                  The ECB should be initialized by the requestor     * 00405700
*                  prior to use with this service.  The ECB must      * 00405800
*                  reside either in common storage or in the home     * 00405900
*                  address space that existed at the time the         * 00406000
*                  connection service, IXLCONN, was issued for the    * 00406100
*                  structure.  Any task which waits on the ECB must   * 00406200
*                  have the same home address space as existed when   * 00406300
*                  IXLCONN was issued.                                * 00406400
*                                                                     * 00406500
*                                                                     * 00406600
*                                                                     * 00406700
*          ÝMODE=ASYNCEXIT                                            * 00406800
*              Indicates that the request is to be initiated and      * 00406900
*              control is to be returned to the caller prior to       * 00407000
*              completion of the request.  When the request completes * 00407100
*              the connection's Complete Exit will be called.         * 00407200
*                                                                     * 00407300
*              When MODE=ASYNCEXIT is specified latent XES binds to   * 00407400
*              the storage locations specified by BUFFER, BUFLIST,    * 00407500
*              MOSVECTOR, ADJAREA, and ANSAREA persist until the      * 00407600
*              connection's Complete Exit is called.                  * 00407700
*                                                                     * 00407800
*                                                                     * 00407900
*              ÝREQDATA=»xreqdata!NO_REQDATAº¨¨                       * 00408000
*                  is the name (RS-type), or address in register      * 00408100
*                  (2)-(12), of an optional 8 character input         * 00408200
*                  variable that contains connected user-defined data * 00408300
*                  for the request to be passed to the Complete Exit  * 00408400
*                  when driven.  The contents of REQDATA has no       * 00408500
*                  meaning to the system.                             * 00408600
*                                                                     * 00408700
*                  DEFAULT: NO_REQDATA                                * 00408800
*                                                                     * 00408900
*                                                                     * 00409000
*                                                                     * 00409100
*          ÝMODE=ASYNCTOKEN                                           * 00409200
*              Indicates that the request is to be initiated, a token * 00409300
*              generated that uniquely identifies the request on this * 00409400
*              system, and control returned to the caller prior to    * 00409500
*              completion of the requested operation.                 * 00409600
*                                                                     * 00409700
*              When MODE=ASYNCTOKEN is specified latent XES binds to  * 00409800
*              the storage locations specified by BUFFER, BUFLIST,    * 00409900
*              MOSVECTOR, ADJAREA, and ANSAREA persist until a        * 00410000
*              subsequent corresponding IXLFCOMP request indicates    * 00410100
*              completion of the original request.                    * 00410200
*                                                                     * 00410300
*                                                                     * 00410400
*              REQTOKEN=xreqtoken¨                                    * 00410500
*                  is a required output.  It is the name (RS-type),   * 00410600
*                  or address in register (2)-(12), of a 16 character * 00410700
*                  field into which is stored a token that uniquely   * 00410800
*                  identifies this request.                           * 00410900
*                                                                     * 00411000
*                  This token must be specified on a subsequent       * 00411100
*                  invocation of IXLFCOMP to force completion of the  * 00411200
*                  request and determine its final disposition.       * 00411300
*                                                                     * 00411400
*                                                                     * 00411500
*                                                                     * 00411600
*          ÝMODE=ASYNCNORESPONSE¨                                     * 00411700
*              Indicates that the request is to be initiated and      * 00411800
*              control returned to the caller prior to completion of  * 00411900
*              the requested operation.  No asynchronous request      * 00412000
*              token is returned, hence no external mechanism exists  * 00412100
*              to force completion of the request.                    * 00412200
*                                                                     * 00412300
*              MODE=ASYNCNORESPONSE is mutually exclusive with        * 00412400
*              LOCKINDEX, BUFFER, and BUFLIST.  It is also mutually   * 00412500
*              exclusive with REQUEST=MONITOR_LIST when ACTION=START  * 00412600
*              is specified.  Any request which does not perform a    * 00412700
*              locking operation, does not use a BUFFER area or       * 00412800
*              BUFLIST buffers, and is not a request to start list    * 00412900
*              monitoring may specifiy MODE=ASYNCNORESPONSE.          * 00413000
*                                                                     * 00413100
*                                                                     * 00413200
*                                                                     * 00413300
*                                                                     * 00413400
*                                                                     * 00413500
*                                                                     * 00413600
*      ÝANSAREA=»xansarea!NO_ANSAREAº                                 * 00413700
*          is an optional input.  It is the name (RS-type), or        * 00413800
*          address in register (2)-(12), of a virtual storage area,   * 00413900
*          called the answer area, in which command response          * 00414000
*          information will be placed.  The format of the answer area * 00414100
*          is described by the IXLYLAA mapping macro.                 * 00414200
*                                                                     * 00414300
*          ANSAREA is required when a MODE value of SYNCTOKEN or      * 00414400
*          ASYNCTOKEN is specified.  ANSAREA may be specified in      * 00414500
*          conjunction with any type of IXLLIST request.  Not all     * 00414600
*          fields in the answer area are applicable to all request    * 00414700
*          types.  Request type descriptions indicate what answer     * 00414800
*          area fields are applicable for successful request          * 00414900
*          completion cases.  Return and reason code descriptions     * 00415000
*          indicate what answer area fields are applicable for        * 00415100
*          non-successfully completing requests.                      * 00415200
*                                                                     * 00415300
*          ANSAREA is ignored when MODE=ASYNCNORESPONSE is specified. * 00415400
*                                                                     * 00415500
*          DEFAULT: NO_ANSAREA                                        * 00415600
*                                                                     * 00415700
*                                                                     * 00415800
*          ANSLEN=xanslen¨                                            * 00415900
*              is the name (RS-type), or address in register          * 00416000
*              (2)-(12), of a required halfword input that contains   * 00416100
*              the length in bytes of the virtual storage area        * 00416200
*              provided for ANSAREA.                                  * 00416300
*                                                                     * 00416400
*              The length of the answer area is described by the      * 00416500
*              IXLYLAA mapping macro.                                 * 00416600
*                                                                     * 00416700
*              DEFAULT: NO_ANSLEN                                     * 00416800
*                                                                     * 00416900
*                                                                     * 00417000
*                                                                     * 00417100
*                                                                     * 00417200
*                                                                     * 00417300
*                                                                     * 00417400
*      ÝRETCODE=xretcode¨                                             * 00417500
*          is the name (RS-type) of an optional fullword output       * 00417600
*          variable, or register (2)-(12) or (15), into which the     * 00417700
*          return code is to be copied from GPR 15.  If you specify   * 00417800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00417900
*          the value will be left in GPR 15.                          * 00418000
*                                                                     * 00418100
*                                                                     * 00418200
*                                                                     * 00418300
*                                                                     * 00418400
*      ÝRSNCODE=xrsncode¨                                             * 00418500
*          is the name (RS-type) of an optional fullword output       * 00418600
*          variable into which the reason code is to be copied from   * 00418700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00418800
*          R0 (within or without parentheses), the value will be left * 00418900
*          in GPR 0.                                                  * 00419000
*                                                                     * 00419100
*                                                                     * 00419200
*                                                                     * 00419300
*                                                                     * 00419400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00419500
*          is an optional byte input decimal value in the "0-3" range * 00419600
*          that specifies the macro version.  PLISTVER is the only    * 00419700
*          key allowed on the list form of MF and determines which    * 00419800
*          parameter list is generated.  The macro keys associated    * 00419900
*          with each supported version of the macro are listed in     * 00420000
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00420100
*          instead of a number, and the parameter list will be of the * 00420200
*          largest size currently supported. This size may grow from  * 00420300
*          release to release (thus possibly affecting the amount of  * 00420400
*          storage needed by your program).  If your program can      * 00420500
*          tolerate this, IBM recommends that you always specify MAX  * 00420600
*          when creating the list form parameter list as that will    * 00420700
*          ensure that the list form parameter list is always long    * 00420800
*          enough to hold whatever parameters might be specified on   * 00420900
*          the execute form.                                          * 00421000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00421100
*          default is the lowest version which allows all of the      * 00421200
*          parameters specified on the invocation to be processed.    * 00421300
*                                                                     * 00421400
*                                                                     * 00421500
*                                                                     * 00421600
*                                                                     * 00421700
*      ÝMF=»S!L!Eº¨                                                   * 00421800
*          is an optional keyword input which specifies the macro     * 00421900
*          form.                                                      * 00422000
*          DEFAULT: S                                                 * 00422100
*                                                                     * 00422200
*                                                                     * 00422300
*          ÝMF=S¨                                                     * 00422400
*              specifies the standard form of the macro.  The "S"     * 00422500
*              form generates code to put the parameters into an      * 00422600
*              in-line parameter list and invoke the desired service. * 00422700
*              Full checking for required macro keys is done along    * 00422800
*              with supplying defaults for omitted optional           * 00422900
*              parameters.                                            * 00423000
*                                                                     * 00423100
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00423200
*              specifies the list form of the macro.  The "L" form    * 00423300
*              defines an area to be used for the parameter list.     * 00423400
*              Only the PLISTVER key may be specified on the          * 00423500
*              invocation.  All other macro parameters are flagged as * 00423600
*              errors.  If PLISTVER is not specified, the original    * 00423700
*              parameter list definition is used.                     * 00423800
*                                                                     * 00423900
*            ,xmfctrl                                                 * 00424000
*              is a required input.  It is the name of a storage area * 00424100
*              for the parameter list.                                * 00424200
*                                                                     * 00424300
*            »,xmfattr!0Dº                                            * 00424400
*              is an optional 60 character input string that varies   * 00424500
*              from 1 to 60 characters. Use it to force boundary      * 00424600
*              alignment of the parameter list. Use only 0F or 0D.    * 00424700
*              DEFAULT: 0D which forces the parameter list to a       * 00424800
*              doubleword boundary.                                   * 00424900
*                                                                     * 00425000
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00425100
*              specifies the execute form of the macro.  The "E" form * 00425200
*              generates code to put the parameters into the          * 00425300
*              parameter list specified by xmfctrl and provides full  * 00425400
*              syntax checking with default setting.                  * 00425500
*                                                                     * 00425600
*            ,xmfctrl                                                 * 00425700
*              is a required input.  It is the name (RS-type), or     * 00425800
*              address in register (1)-(12), of a storage area for    * 00425900
*              the parameter list.                                    * 00426000
*                                                                     * 00426100
*            »,COMPLETEº                                              * 00426200
*              is an optional keyword input which specifies the       * 00426300
*              degree of macro parameter syntax checking.             * 00426400
*              DEFAULT: COMPLETE                                      * 00426500
*                                                                     * 00426600
*                                                                     * 00426700
*              COMPLETE                                               * 00426800
*                  Checking for required macro keys is done and       * 00426900
*                  defaults are supplied for omitted optional         * 00427000
*                  parameters.                                        * 00427100
*                                                                     * 00427200
*                                                                     * 00427300
*                                                                     * 00427400
*                                                                     * 00427500
*                                                                     * 00427600
*                                                                     * 00427700
*                                                                     * 00427800
*01* RETURN CODES:                                                    * 00427900
*                                                                     * 00428000
*                                                                     * 00428100
*       0         IxlRetCodeOk:  Successful completion.               * 00428200
*                                                                     * 00428300
*                 If a MODE value of ASYNCECB, ASYNCEXIT, ASYNCTOKEN, * 00428400
*                 or ASYNCNORESPONSE was specified then the request   * 00428500
*                 has been successfully initiated.                    * 00428600
*                                                                     * 00428700
*                 If LOCKOPER=TEST was specified then this return     * 00428800
*                 code indicates the lock is held by the connection   * 00428900
*                 specified by CONTOKEN.                              * 00429000
*                                                                     * 00429100
*                                                                     * 00429200
*       4         IxlRetCodeWarning:  Warning.  The request           * 00429300
*                 completed, but with exceptional circumstances.      * 00429400
*                                                                     * 00429500
*                 HEX REASON  MEANING                                 * 00429600
*                 CODE                                                * 00429700
*                                                                     * 00429800
*                                                                     * 00429900
*                 xxxx0402    IxlRsnCodeAsynch:  The request could    * 00430000
*                             not be completed synchronously.  It     * 00430100
*                             will be completed asynchronously.       * 00430200
*                                                                     * 00430300
*                             If MODE=SYNCECB was specified the ECB   * 00430400
*                             specifed for REQECB will be posted when * 00430500
*                             the request has finished.               * 00430600
*                                                                     * 00430700
*                             If MODE=SYNCEXIT was specified the      * 00430800
*                             connection's completion exit will be    * 00430900
*                             given control when the request has      * 00431000
*                             finished.                               * 00431100
*                                                                     * 00431200
*                             If MODE=SYNCTOKEN was specified the     * 00431300
*                             answer area contains an asynchronous    * 00431400
*                             request token which may be used on the  * 00431500
*                             IXLFCOMP macro to determine when the    * 00431600
*                             request has finished.                   * 00431700
*                                                                     * 00431800
*                 xxxx0409    IxlRsnCodeTimeout:  A READ_LIST,        * 00431900
*                             READ_MULT, DELETE_MULT,                 * 00432000
*                             DELETE_ENTRYLIST,  MONITOR_SUBLISTS,    * 00432100
*                             or DEQ_EVENTQ request, or a LOCK        * 00432200
*                             request specifying LOCKOPER=READNEXT    * 00432300
*                             has completed prematurely due to a      * 00432400
*                             model-dependent timeout condition.      * 00432500
*                                                                     * 00432600
*                             For both READ_LIST and READ_MULT, the   * 00432700
*                             number of output elements returned in   * 00432800
*                             the BUFFER area or BUFLIST buffers has  * 00432900
*                             been returned in the answer area.  For  * 00433000
*                             both DELETE_MULT and DELETE_ENTRYLIST,  * 00433100
*                             the number of deleted structure entries * 00433200
*                             has been returned in the answer area.   * 00433300
*                             For both READ_MULT and DELETE_MULT, a   * 00433400
*                             restart token has been returned in the  * 00433500
*                             answer area.  For READ_LIST, the list   * 00433600
*                             entry controls for the first            * 00433700
*                             unprocessed entry in the list sequence  * 00433800
*                             has been returned in the answer area.   * 00433900
*                             For DELETE_ENTRYLIST, the index of the  * 00434000
*                             first unprocessed entry identifier or   * 00434100
*                             name has been returned in the answer    * 00434200
*                             area.  For MONITOR_SUBLISTS, the index  * 00434300
*                             of the first unprocessed IXLYMSRI entry * 00434400
*                             is returned in the answer area.  All    * 00434500
*                             prior IXLYMSRI entries were processed.  * 00434600
*                             For DEQ_EVENTQ, the number of EMCs that * 00434700
*                             were dequeued from the user's event     * 00434800
*                             queue,  and the number of EMCs that     * 00434900
*                             remain on the user's event queue after  * 00435000
*                             dequeueing those EMCs, are returned in  * 00435100
*                             the answer area.  For LOCK, the index   * 00435200
*                             of the next lock to be processed has    * 00435300
*                             been returned in the answer area.       * 00435400
*                                                                     * 00435500
*                 xxxx040D    IxlRsnCodeBadReadAdjData:  A READ,      * 00435600
*                             MOVE, DELETE, READ_LIST, or READ_MULT   * 00435700
*                             specified that adjunct data was to be   * 00435800
*                             read, but the storage area provided for * 00435900
*                             ADJDATA is not addressable.  All other  * 00436000
*                             requested data was retrieved.  If       * 00436100
*                             supported and requested, the entry data * 00436200
*                             was retrieved.  If this was a MOVE      * 00436300
*                             request, the entry was moved.  If this  * 00436400
*                             was a DELETE request, the entry was     * 00436500
*                             deleted.                                * 00436600
*                                                                     * 00436700
*                 xxxx040E    IxlRsnCodeLockNotHeld:  A LOCKOPER=TEST * 00436800
*                             request determined the specified lock   * 00436900
*                             was not held for the specified          * 00437000
*                             connection.  The connection ID of the   * 00437100
*                             lock owner is returned in the answer    * 00437200
*                             area.                                   * 00437300
*                                                                     * 00437400
*                 xxxx040F    IxlRsnCodeBufferFull:  A READ_LIST or   * 00437500
*                             READ_MULT request has completed         * 00437600
*                             prematurely due to a buffer full        * 00437700
*                             condition.                              * 00437800
*                                                                     * 00437900
*                             For both READ_LIST and READ_MULT, the   * 00438000
*                             number of output elements returned in   * 00438100
*                             the BUFFER area or BUFLIST buffers has  * 00438200
*                             been returned in the answer area.  For  * 00438300
*                             READ_MULT a restart token has been      * 00438400
*                             returned in the answer area.  For       * 00438500
*                             READ_LIST, the list entry controls for  * 00438600
*                             the first unprocessed entry in the list * 00438700
*                             sequence has been returned in the       * 00438800
*                             answer area.                            * 00438900
*                                                                     * 00439000
*                 xxxx0410    IxlRsnCodeLockCond:  For a              * 00439100
*                             LOCKOPER=HELDBY or LOCKMODE=COND        * 00439200
*                             request, or a request that specified    * 00439300
*                             LOCKCOMP, the request could not be      * 00439400
*                             completed successfully because the      * 00439500
*                             specified lock is not currently held as * 00439600
*                             required.  The connection ID of the     * 00439700
*                             lock owner is returned in the answer    * 00439800
*                             area.                                   * 00439900
*                                                                     * 00440000
*                 xxxx0412    IxlRsnCodeLockHeldBySys:  For a         * 00440100
*                             LOCKOPER=HELDBY or LOCKMODE=COND        * 00440200
*                             request, or a request that specified    * 00440300
*                             LOCKCOMP, the request could not be      * 00440400
*                             completed successfully because the      * 00440500
*                             specified lock is not currently held as * 00440600
*                             required.  For a LOCKOPER=READNEXT or   * 00440700
*                             LOCKOPER=TEST request, the lock is not  * 00440800
*                             generally available.  The lock is not   * 00440900
*                             held by any connection, but instead is  * 00441000
*                             held by the system.                     * 00441100
*                                                                     * 00441200
*                 xxxx041F    IxlRsnCodeNoLocksHeld:  An IXLLIST      * 00441300
*                             request specifying LOCKOPER=READNEXT    * 00441400
*                             found no locks held from the LOCKINDEX  * 00441500
*                             lock to the end of the lock table.      * 00441600
*                                                                     * 00441700
*                                                                     * 00441800
*                                                                     * 00441900
*                                                                     * 00442000
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00442100
*                 completed due to a user error.                      * 00442200
*                                                                     * 00442300
*                 HEX REASON  MEANING                                 * 00442400
*                 CODE                                                * 00442500
*                                                                     * 00442600
*                                                                     * 00442700
*                 xxxx0801    IxlRsnCodeBadParmlist:  Either unable   * 00442800
*                             to read or unable to write to the       * 00442900
*                             IXLLIST parameter list.                 * 00443000
*                                                                     * 00443100
*                 xxxx0804    IxlRsnCodeBadVersion#:  The version     * 00443200
*                             number in the parameter list is not     * 00443300
*                             valid.  This usually indicates that the * 00443400
*                             level of the macro is incompatible with * 00443500
*                             the level of the XES service code.      * 00443600
*                                                                     * 00443700
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 00443800
*                             contoken specified.  The contoken is    * 00443900
*                             invalid for one of the following        * 00444000
*                             reasons:  disconnect has occurred, EOT  * 00444100
*                             of the connector's task, input contoken * 00444200
*                             is not the contoken returned from       * 00444300
*                             IXLCONN, the request was issued outside * 00444400
*                             the connector's address space, or the   * 00444500
*                             contoken has been invalidated for       * 00444600
*                             rebuild.                                * 00444700
*                                                                     * 00444800
*                 xxxx0822    IxlRsnCodeBadReadType:  An IXLLIST      * 00444900
*                             READ_LIST or READ_MULT request          * 00445000
*                             specified that either entry or adjunct  * 00445100
*                             data was to be returned, but the list   * 00445200
*                             structure does not contain the          * 00445300
*                             requested component.  No data is        * 00445400
*                             returned.                               * 00445500
*                                                                     * 00445600
*                 xxxx0824    IxlRsnCodeWrongStrType:  The connection * 00445700
*                             specified by CONTOKEN is not to a list  * 00445800
*                             structure.                              * 00445900
*                                                                     * 00446000
*                 xxxx0825    IxlRsnCodeNoEntry:  The designated list * 00446100
*                             entry or event monitor controls object  * 00446200
*                             does not exist, hence request           * 00446300
*                             processing was suppressed.  For a       * 00446400
*                             READ_EMCONTROLS request,  the           * 00446500
*                             designated event monitor controls (EMC) * 00446600
*                             does not exist for the user for the     * 00446700
*                             designated sublist.                     * 00446800
*                                                                     * 00446900
*                 xxxx082B    IxlRsnCodeBadIDIndex:  An invalid value * 00447000
*                             was specified for either FIRSTELEM,     * 00447100
*                             LASTELEM,  STARTINDEX,  or ENDINDEX.    * 00447200
*                             When FIRSTELEM or LASTELEM is invalid,  * 00447300
*                             the index of the first entry identifier * 00447400
*                             or name which was not processed is      * 00447500
*                             returned in the answer area.            * 00447600
*                                                                     * 00447700
*                 xxxx0833    IxlRsnCodeBadPgblAttr:  The storage     * 00447800
*                             area specified by BUFFER, or one of the * 00447900
*                             buffers in the BUFLIST list is          * 00448000
*                             specified as being pageable, but is     * 00448100
*                             not.                                    * 00448200
*                                                                     * 00448300
*                 xxxx0834    IxlRsnCodeBadNonPgblAttr:  The storage  * 00448400
*                             area specified by BUFFER, or one of the * 00448500
*                             buffers in the BUFLIST list is          * 00448600
*                             specified as being non-pageable, but is * 00448700
*                             either pageable or not addressable.     * 00448800
*                                                                     * 00448900
*                 xxxx0835    IxlRsnCodeBadDataAddr:  The storage     * 00449000
*                             area specified by BUFFER or one of the  * 00449100
*                             buffers in the BUFLIST list is not      * 00449200
*                             addressable.                            * 00449300
*                                                                     * 00449400
*                 xxxx0836    IxlRsnCodeBadRealAddr:  Real storage    * 00449500
*                             addresses were provided in a BUFLIST    * 00449600
*                             list.  One of the buffers is not        * 00449700
*                             addressable in central storage.         * 00449800
*                                                                     * 00449900
*                 xxxx0837    IxlRsnCodeBadWriteAdjData:  A WRITE or  * 00450000
*                             MOVE request specified that adjunct     * 00450100
*                             data was to be written, but the         * 00450200
*                             provided storage area for adjunct data  * 00450300
*                             is not addressable.  No entry data was  * 00450400
*                             written.                                * 00450500
*                                                                     * 00450600
*                 xxxx0838    IxlRsnCodeBadAnsArea:  The storage area * 00450700
*                             specified by ANSAREA and ANSLEN is not  * 00450800
*                             addressable.                            * 00450900
*                                                                     * 00451000
*                 xxxx0839    IxlRsnCodeBadReqTokenArea:  The storage * 00451100
*                             area specified by REQTOKEN is not       * 00451200
*                             addressable.                            * 00451300
*                                                                     * 00451400
*                 xxxx083D    IxlRsnCodeBadAnsLen:  The length of the * 00451500
*                             answer area, as specified by ANSLEN, is * 00451600
*                             not sufficient for providing answer     * 00451700
*                             area information.                       * 00451800
*                                                                     * 00451900
*                 xxxx083E    IxlRsnCodeMaxListKey:  The request      * 00452000
*                             failed while trying to assign the list  * 00452100
*                             key to an entry which was being created * 00452200
*                             or moved.  Either the list key or the   * 00452300
*                             list key plus the list key increment    * 00452400
*                             value is greater than the maximum list  * 00452500
*                             key.                                    * 00452600
*                                                                     * 00452700
*                 xxxx083F    IxlRsnCodeBadEntryVersion:  The entry   * 00452800
*                             designated by the specified list entry  * 00452900
*                             controls has a version number which     * 00453000
*                             does not meet the criteria specified by * 00453100
*                             VERSCOMP and VERSCOMPTYPE.  The list    * 00453200
*                             entry controls for the entry are        * 00453300
*                             returned in the answer area.            * 00453400
*                                                                     * 00453500
*                 xxxx0840    IxlRsnCodeBadEntryList:  The entry      * 00453600
*                             designated by the specified list entry  * 00453700
*                             controls does not reside on the list    * 00453800
*                             specified by LISTNUM.  The list entry   * 00453900
*                             controls for the entry are returned in  * 00454000
*                             the answer area.                        * 00454100
*                                                                     * 00454200
*                 xxxx0841    IxlRsnCodeBadEntryName:  The name       * 00454300
*                             specified by ENTRYNAME is not a unique  * 00454400
*                             name within the structure, and hence    * 00454500
*                             entry creation was suppressed.          * 00454600
*                                                                     * 00454700
*                 xxxx0842    IxlRsnCodePersistentLock:  A request    * 00454800
*                             specifying an unconditional SET or      * 00454900
*                             NOTHELD lock operation failed because   * 00455000
*                             the lock was held by a connection in    * 00455100
*                             the failed persistent state.  The       * 00455200
*                             connection ID of the lock owner is      * 00455300
*                             returned in the answer area.            * 00455400
*                                                                     * 00455500
*                 xxxx0843    IxlRsnCodeBadEntryID:  An entry         * 00455600
*                             corresponding to an identifier or name  * 00455700
*                             in either ENTRYIDLIST or NAMELIST,      * 00455800
*                             respectively, does not exist.  The      * 00455900
*                             index of the offending entry identifier * 00456000
*                             or name was returned in the answer      * 00456100
*                             area.                                   * 00456200
*                                                                     * 00456300
*                 xxxx0845    IxlRsnCodeNoNames:  A list entry was    * 00456400
*                             designated by entry name, but the       * 00456500
*                             structure does not support entry names. * 00456600
*                                                                     * 00456700
*                 xxxx0846    IxlRsnCodeBadLockIndex:  The specified  * 00456800
*                             LOCKINDEX exceeds the size of the lock  * 00456900
*                             table for the structure.                * 00457000
*                                                                     * 00457100
*                 xxxx0847    IxlRsnCodeBadListNumber:  The specified * 00457200
*                             LISTNUM exceeds the number of lists for * 00457300
*                             the structure.                          * 00457400
*                                                                     * 00457500
*                 xxxx0848    IxlRsnCodeBadReset:  LOCKOPER=RESET was * 00457600
*                             specified for a lock not currently held * 00457700
*                             by the invoker.                         * 00457800
*                                                                     * 00457900
*                 xxxx0849    IxlRsnCodeBadResToken:  The specified   * 00458000
*                             restart token is not valid.  Possible   * 00458100
*                             causes are:                             * 00458200
*                                                                     * 00458300
*                                                                     * 00458400
*                             o   The specified token does not        * 00458500
*                                 correspond to a previous            * 00458600
*                                 prematurely-completed request.      * 00458700
*                                                                     * 00458800
*                             o   The user specified RESTOKEN when    * 00458900
*                                 EXTRESTOKEN was required.           * 00459000
*                                                                     * 00459100
*                             o   The user specified EXTRESTOKEN when * 00459200
*                                 RESTOKEN was required.              * 00459300
*                                                                     * 00459400
*                                                                     * 00459500
*                                                                     * 00459600
*                 xxxx084A    IxlRsnCodeNoKeys:  The structure does   * 00459700
*                             not support the use of entry keys,  and * 00459800
*                             the request either was a request type   * 00459900
*                             that requires the structure to support  * 00460000
*                             entry keys,  or designated a sublist,   * 00460100
*                             list entry, or list position by list    * 00460200
*                             number and entry key.                   * 00460300
*                                                                     * 00460400
*                 xxxx084B    IxlRsnCodeNoLocks:  A locking operation * 00460500
*                             was requested, but the structure does   * 00460600
*                             not contain a lock table.               * 00460700
*                                                                     * 00460800
*                 xxxx084E    IxlRsnCodeBadMoveToList:  An IXLLIST    * 00460900
*                             request specified a list number for     * 00461000
*                             MOVETOLIST that exceeds the number of   * 00461100
*                             lists defined for the structure.        * 00461200
*                                                                     * 00461300
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 00461400
*                             specifying MODE=SYNCSUSPEND failed      * 00461500
*                             because the caller is disabled and      * 00461600
*                             cannot be suspended.                    * 00461700
*                                                                     * 00461800
*                 xxxx0852    IxlRsnCodeNoListVector:  A              * 00461900
*                             MONITOR_LIST, MONITOR_SUBLIST,          * 00462000
*                             MONITOR_EVENTQ, or MONITOR_SUBLISTS     * 00462100
*                             request failed because no local vector  * 00462200
*                             for monitoring list headers and/or      * 00462300
*                             event queues exists for this            * 00462400
*                             connection.  Either a list notification * 00462500
*                             vector for monitoring list headers      * 00462600
*                             and/or event queues was not requested   * 00462700
*                             for this connection, or the list        * 00462800
*                             notification vector has been deleted.   * 00462900
*                                                                     * 00463000
*                 xxxx0853    IxlRsnCodeInvListVIndex:  An invalid    * 00463100
*                             vector index was specified on a         * 00463200
*                             MONITOR_LIST or MONITOR_EVENTQ request  * 00463300
*                             with ACTION=START specified.            * 00463400
*                                                                     * 00463500
*                 xxxx0854    IxlRsnCodeBadLockComp:  The value       * 00463600
*                             specified for LOCKCOMP is not a valid   * 00463700
*                             connection identifier.                  * 00463800
*                                                                     * 00463900
*                 xxxx0859    IxlRsnCodeBadListAuth:  The authority   * 00464000
*                             value for the specified list does not   * 00464100
*                             meet the criteria specified by AUTHCOMP * 00464200
*                             and AUTHCOMPTYPE.  The current list     * 00464300
*                             authority and description are returned  * 00464400
*                             in the answer area.                     * 00464500
*                                                                     * 00464600
*                 xxxx0864    IxlRsnCodeBadBufSize:  The specified    * 00464700
*                             buffer area is not large enough to      * 00464800
*                             contain the data being read.  For READ, * 00464900
*                             READ_LIST, READ_MULT, MOVE, and DELETE  * 00465000
*                             requests the answer area contains the   * 00465100
*                             list entry controls for the first list  * 00465200
*                             entry selected for processing.  For     * 00465300
*                             DEQ_EVENTQ, the specified buffer area   * 00465400
*                             must be 4096 bytes in length.           * 00465500
*                                                                     * 00465600
*                 xxxx0865    IxlRsnCodeBadBufSpec:  The buffer       * 00465700
*                             specification is in error.  Refer to    * 00465800
*                             the BUFFER or BUFLIST specification     * 00465900
*                             requirements.                           * 00466000
*                                                                     * 00466100
*                 xxxx0866    IxlRsnCodeBadBufKey:  The buffer        * 00466200
*                             storage key is incorrect.  For requests * 00466300
*                             which write CF data the data cannot be  * 00466400
*                             fetched.  For requests which read CF    * 00466500
*                             data the data cannot be stored.         * 00466600
*                                                                     * 00466700
*                 xxxx0867    IxlRsnCodeBadBufList:  The storage area * 00466800
*                             specified by BUFLIST is not             * 00466900
*                             addressable.                            * 00467000
*                                                                     * 00467100
*                 xxxx086A    IxlRsnCodeBadElemNum:  The value        * 00467200
*                             specified for ELEMNUM is not valid.     * 00467300
*                                                                     * 00467400
*                 xxxx0880    IxlRsnCodeBadMosvector:  The storage    * 00467500
*                             area specified by MOSVECTOR is not      * 00467600
*                             addressable.                            * 00467700
*                                                                     * 00467800
*                 xxxx0887    IxlRsnCodeBadExtResToken:  The          * 00467900
*                             specified extended restart token is not * 00468000
*                             valid.  The specified token refers to   * 00468100
*                             an older instance of the target         * 00468200
*                             structure.                              * 00468300
*                                                                     * 00468400
*                                                                     * 00468500
*                                                                     * 00468600
*                                                                     * 00468700
*       C         IxlRetCodeEnvError:  Environmental problem.         * 00468800
*                                                                     * 00468900
*                 HEX REASON  MEANING                                 * 00469000
*                 CODE                                                * 00469100
*                                                                     * 00469200
*                                                                     * 00469300
*                 xxxx0C06    IxlRsnCodeNoConn:  No connectivity to   * 00469400
*                             the list structure.  This may occur due * 00469500
*                             to operator commands such as VARY PATH  * 00469600
*                             OFFLINE or CONFIG CHP OFFLINE or        * 00469700
*                             hardware errors such as facility or     * 00469800
*                             path failures.  The contoken will be    * 00469900
*                             invalidated.  The user should           * 00470000
*                             disconnect or rebuild.                  * 00470100
*                                                                     * 00470200
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 00470300
*                             completion of the request, the request  * 00470400
*                             was purged.  Reasons: the connector     * 00470500
*                             failed, the connector disconnected, the * 00470600
*                             requestor failed, the request was       * 00470700
*                             purged by IXLPURGE, or requests were    * 00470800
*                             purged when the connector provided an   * 00470900
*                             IXLEERSP response for the Rebuild Stop  * 00471000
*                             or Rebuild Cleanup event.               * 00471100
*                                                                     * 00471200
*                 xxxx0C14    IxlRsnCodeStatusUnknown:  The IXLLIST   * 00471300
*                             request has completed, but the final    * 00471400
*                             disposition of the request can not be   * 00471500
*                             determined.                             * 00471600
*                                                                     * 00471700
*                 xxxx0C17    IxlRsnCodeStrFull:  Either the          * 00471800
*                             structure is full and cannot accomodate * 00471900
*                             the creation of more entries, as was    * 00472000
*                             requested or required by a WRITE or     * 00472100
*                             MOVE request,  or the structure is full * 00472200
*                             and cannot accommodate the creation of  * 00472300
*                             more event monitor controls (EMCs) on a * 00472400
*                             MONITOR_SUBLIST or MONITOR_SUBLISTS     * 00472500
*                             request.  For a MONITOR_SUBLISTS        * 00472600
*                             request,  the index of the IXLYMSRI     * 00472700
*                             entry which experienced the structure   * 00472800
*                             full condition is returned in the       * 00472900
*                             answer area.                            * 00473000
*                                                                     * 00473100
*                 xxxx0C18    IxlRsnCodeListFull:  The list           * 00473200
*                             designated as the target of a MOVE      * 00473300
*                             request, or as the target for entry     * 00473400
*                             creation on a WRITE or MOVE request,    * 00473500
*                             cannot accomodate more entries.         * 00473600
*                                                                     * 00473700
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 00473800
*                             completion of the request, the list     * 00473900
*                             structure failed.                       * 00474000
*                                                                     * 00474100
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 00474200
*                             type is not permitted for the level of  * 00474300
*                             coupling facility in which the target   * 00474400
*                             structure is allocated.                 * 00474500
*                                                                     * 00474600
*                 xxxx0CA0    IxlRsnCodeQuiescedSuspendFail:  The     * 00474700
*                             request is failed because the structure * 00474800
*                             is quiesced for a system-managed        * 00474900
*                             process (other than a STOP or SWITCH to * 00475000
*                             fall out of a system-managed duplexing  * 00475100
*                             rebuild) and SUSPEND=FAIL was specified * 00475200
*                             on the IXLCONN.                         * 00475300
*                                                                     * 00475400
*                 FFFFFFFF    IxlRsnCodeNotAvailable:  XES functions  * 00475500
*                             are not available.  This can be because * 00475600
*                             the hardware necessary to provide XES   * 00475700
*                             functions is not present.               * 00475800
*                                                                     * 00475900
*                                                                     * 00476000
*                                                                     * 00476100
*                                                                     * 00476200
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00476300
*                 state of the involved structure and the disposition * 00476400
*                 of the request are unpredictable.                   * 00476500
*                                                                     * 00476600
*                                                                     * 00476700
*                                                                     * 00476800
*01* REASON CODES:                                                    * 00476900
*                                                                     * 00477000
*       Reason codes, as appropriate, are defined under their         * 00477100
*       corresponding return code.  Reason code and return code       * 00477200
*       constants are defined within the IXLYCON macro.               * 00477300
*                                                                     * 00477400
*01* MODULE TYPE:  ASSEM MACRO                                        * 00477500
*                                                                     * 00477600
*02*   PROCESSOR:  ASSEM                                              * 00477700
*                                                                     * 00477800
*01* COMPONENT:  SCIXL                                                * 00477900
*                                                                     * 00478000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00478100
*                                                                     * 00478200
*01* ABEND CODES:  None.                                              * 00478300
*                                                                     * 00478400
*01* MACRO USAGE NOTES:                                               * 00478500
*                                                                     * 00478600
*                                                                     * 00478700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00478800
*        global macro variable.  Any value other than 'NO' will       * 00478900
*        result in the macro expansion being printed.  The default is * 00479000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00479100
*        variable should be set.                                      * 00479200
*                                                                     * 00479300
*                    GBLC &ZPRINT                                     * 00479400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00479500
*                                                                     * 00479600
*                                                                     * 00479700
*    2.  The  IXLLIST macro supports multiple versions. The macro key * 00479800
*        list  below  contains the version level in which the key was * 00479900
*        first  introduced.  Positionals  are  identified by the word * 00480000
*        'Positional'  followed by the numeric value of its position. * 00480100
*        Nested  positionals  are  preceded  by their outer key.  The * 00480200
*        lowest value represents the original version and the highest * 00480300
*        value  represents  the  most  recent  version of the IXLLIST * 00480400
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00480500
*        least  as high as the highest version number of all the keys * 00480600
*        being used.                                                  * 00480700
*                                                                     * 00480800
*        VERSION   KEY                                                * 00480900
*                                                                     * 00481000
*              0      ACTION                                          * 00481100
*                     ADJAREA                                         * 00481200
*                     ANSAREA                                         * 00481300
*                     ANSLEN                                          * 00481400
*                     AUTHCOMP                                        * 00481500
*                     AUTHCOMPTYPE                                    * 00481600
*                     BUFADDRTYPE                                     * 00481700
*                     BUFALET                                         * 00481800
*                     BUFFER                                          * 00481900
*                     BUFINCRNUM                                      * 00482000
*                     BUFLIST                                         * 00482100
*                     BUFNUM                                          * 00482200
*                     BUFSIZE                                         * 00482300
*                     BUFSTGKEY                                       * 00482400
*                     CONTOKEN                                        * 00482500
*                     CURSORUPDTYPE                                   * 00482600
*                     DATAOPER                                        * 00482700
*                     DRIVEEXIT                                       * 00482800
*                     ELEMNUM                                         * 00482900
*                     ENTRYID                                         * 00483000
*                     ENTRYKEY                                        * 00483100
*                     ENTRYNAME                                       * 00483200
*                     ENTRYTYPE                                       * 00483300
*                     FIRSTELEM                                       * 00483400
*                     KEYREQTYPE                                      * 00483500
*                     LASTELEM                                        * 00483600
*                     LISTDESC                                        * 00483700
*                     LISTDIR                                         * 00483800
*                     LISTKEYTYPE                                     * 00483900
*                     LISTLIMIT                                       * 00484000
*                     LISTNUM                                         * 00484100
*                     LISTPOS                                         * 00484200
*                     LISTTYPE                                        * 00484300
*                     LOCBYCURSOR                                     * 00484400
*                     LOCKCOMP                                        * 00484500
*                     LOCKDATA                                        * 00484600
*                     LOCKINDEX                                       * 00484700
*                     LOCKMODE                                        * 00484800
*                     LOCKOPER                                        * 00484900
*                     MODE                                            * 00485000
*                     MOVETOKEY                                       * 00485100
*                     MOVETOLIST                                      * 00485200
*                     MOVETOPOS                                       * 00485300
*                     NEWAUTH                                         * 00485400
*                     NEWVERS                                         * 00485500
*                     PAGEABLE                                        * 00485600
*                     REQDATA                                         * 00485700
*                     REQECB                                          * 00485800
*                     REQID                                           * 00485900
*                     REQTOKEN                                        * 00486000
*                     REQUEST                                         * 00486100
*                     RESTOKEN                                        * 00486200
*                     TYPE                                            * 00486300
*                     UPDATECURSOR                                    * 00486400
*                     VECTORINDEX                                     * 00486500
*                     VERSCOMP                                        * 00486600
*                     VERSCOMPTYPE                                    * 00486700
*                     VERSUPDATE                                      * 00486800
*              1      KEYCOMP                                         * 00486900
*                     LISTKEY                                         * 00487000
*                     LISTKEYINC                                      * 00487100
*                     MAXLISTKEY                                      * 00487200
*                     SETCURSOR                                       * 00487300
*              2      ENDINDEX                                        * 00487400
*                     MOSVECTOR                                       * 00487500
*                     STARTINDEX                                      * 00487600
*                     UNC                                             * 00487700
*              3      EXTRESTOKEN                                     * 00487800
*                                                                     * 00487900
*    3.  The  allowed  usage  of  some keys which may be specified on * 00488000
*        both   version  zero  and  version  one  invocations  varies * 00488100
*        dependent upon the version.                                  * 00488200
*                                                                     * 00488300
*        Key            Version  Notes                                * 00488400
*        -------------  -------  -----------------------------------  * 00488500
*        AUTHCOMP       0        May be specified on WRITE_LCONTROLS  * 00488600
*                                requests.                            * 00488700
*                       1        May be specified on READ, WRITE,     * 00488800
*                                MOVE, DELETE, READ_LIST, READ_MULT,  * 00488900
*                                DELETE_MULT, DELETE_ENTRYLIST, and   * 00489000
*                                WRITE_LCONTROLS requests.            * 00489100
*        AUTHCOMPTYPE   0        EQUAL may be specified.              * 00489200
*                       1        EQUAL or LESSOREQUAL may be          * 00489300
*                                specified.                           * 00489400
*        CURSORUPDTYPE  0        NEXT may be specified.               * 00489500
*                       1        NEXT, NEXTCOND, CURRENT, or          * 00489600
*                                CURRENTCOND may be specified.        * 00489700
*        LISTKEYTYPE    0        NOLISTKEY may be specified.          * 00489800
*                       1        NOLISTKEY, MOVE, CREATE, or ANY may  * 00489900
*                                be specified.                        * 00490000
*        NEWAUTH        0        May be specified on WRITE_LCONTROLS  * 00490100
*                                requests.                            * 00490200
*                       1        May be specified on READ, WRITE,     * 00490300
*                                MOVE, DELETE, and WRITE_LCONTROLS    * 00490400
*                                requests.                            * 00490500
*        VERSCOMPTYPE   0        EQUAL may be specified.              * 00490600
*                       1        EQUAL or LESSOREQUAL may be          * 00490700
*                                specified.                           * 00490800
*                                                                     * 00490900
*    4.  The  following  request types generate version two parameter * 00491000
*        lists:                                                       * 00491100
*                                                                     * 00491200
*                                                                     * 00491300
*        o   MONITOR_SUBLIST                                          * 00491400
*                                                                     * 00491500
*        o   MONITOR_SUBLISTS                                         * 00491600
*                                                                     * 00491700
*        o   MONITOR_EVENTQ                                           * 00491800
*                                                                     * 00491900
*        o   READ_EMCONTROLS                                          * 00492000
*                                                                     * 00492100
*        o   READ_EQCONTROLS                                          * 00492200
*                                                                     * 00492300
*        o   DEQ_EVENTQ                                               * 00492400
*                                                                     * 00492500
*                                                                     * 00492600
*                                                                     * 00492700
*                                                                     * 00492800
*                                                                     * 00492900
*01* CHANGE ACTIVITY:                                                 * 00493000
*                                                                     * 00493100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00493200
*                                                                     * 00493300
*    $L0=SYSLKSMG HBB5510 900904 PD00AO:  Locking support             * 00493400
*    $P1=PIG0178  HBB5510 910621 PD00AO:  Allow PAGEABLE with         * 00493500
*                                         REQUEST=READ_LCONTROLS      * 00493600
*    $P2=PIG0358  HBB5510 910923 PD00AO:  Add missing assembler       * 00493700
*                                         labels                      * 00493800
*    $P3=PIG0503  HBB5510 920106 PD00AO:  Update RSN code             * 00493900
*                                         documentation               * 00494000
*    $P4=PIG0536  HBB5510 920106 PD00AO:  Fix NO_xxx defaults         * 00494100
*    $D1=DIG0018  HBB5510 921105 PD00AO:  >4K support                 * 00494200
*    $P5=PIG0925  HBB5510 930114 PD00AO:  Fix keyword checking        * 00494300
*    $D2=DIG0041  HBB5510 930114 PD00AO:  Lock RT support             * 00494400
*    $D3=DIG0048  HBB5510 930114 PD00AO:  Miscellaneous changes       * 00494500
*    $P6=PIG1070  HBB5510 930201 PD00AO:  Fix KeyReqType checking     * 00494600
*    $D4=DIG0020  HBB5510 930325 PD00AO:  Serialized list support     * 00494700
*    $D5=DIG0130  HBB5510 930325 PD00AO:  Architecture changes        * 00494800
*    $P7=PIG1557  HBB5510 930520 PD00AO:  Changes for BufSize checks  * 00494900
*    $D6=DIG0130  HBB5510 930520 PD00AO:  Architecture changes        * 00495000
*    $P8=PIG1857  HBB5510 930607 PD00AO:  Fix DBS setup               * 00495100
*    $P9=PIG1867  HBB5510 930609 PD00AO:  Translate ListDir/ListPos   * 00495200
*    $D7=DIG0158  HBB5510 930802 PD00AO:  Architecture changes        * 00495300
*    $D8=DIG0163  HBB5510 930802 PD00AO:  Architecture changes        * 00495400
*    $PA=PIG3142  HBB5510 931108 PD00AO:  Variable default for        * 00495500
*                                         LockMode                    * 00495600
*    $PB=PIG3233  HBB5510 931108 PD00AO:  Fix ASM BufSize offset      * 00495700
*    $PC=PIG3684  HBB5510 931201 PD00AO:  Expand RsnCode descriptions * 00495800
*    $PD=PIG3706  HBB5510 931119 PD00AO:  Expand RsnCode descriptions * 00495900
*    $PE=PIG5178  HBB5510 940314 PD00AO:  Performance                 * 00496000
*    $PF=PIG5236  HBB5510 940314 PD00FR:  Document DIE mode           * 00496100
*                                         restriction                 * 00496200
*    $D9=DN70050  HBB5520 940520 PD00AO:  Logger support for SP520    * 00496300
*    $PG=PN70807  HBB5520 940602 PD00AO:  Remove AuthCompType default * 00496400
*    $DA=DN70050  HBB5520 940624 PD00AO:  Logger support for SP520    * 00496500
*    $PH=PN71141  HBB5520 940718 PD00AO:  Change KeyComp behavior     * 00496600
*    $DB=DN70083  HBB5520 940720 PD00AO:  IXLALTER support            * 00496700
*    $PI=PIG5560  HBB5510 940801 PD00AO:  Fix ASYNCxxxx assembler     * 00496800
*    $DC=DN70092  HBB5520 940801 PD00AO:  256-element support         * 00496900
*    $PJ=PN71438  HBB5520 940901 PD00AO:  Fix documentation           * 00497000
*    $PK=PN71715  HBB5520 941020 PD00LA:  Fix NEWAUTH keyword syntax  * 00497100
*                                         check in assembler          * 00497200
*    $PL=PN71880  HBB5520 941020 PD00LA:  Fix inconsistencies between * 00497300
*                                         AMG and macro code          * 00497400
*                                         generated messages          * 00497500
*    $01=OW15589  HBB5520 950613 PD00FR:  Event monitoring support    * 00497600
*    $02=OW19393  HBB5510 961127 PD00FR:  Storage bind processing     * 00497700
*    $L1=AUTOR    HBB6608 980622 PD00XM:  Add ExtRestoken keyword     * 00497800
*    $L3=AUTOR    HBB6608 980828 PD00MP:  Auto Rebuild support        * 00497900
*    $PM=PWK0251  HBB6608 980828 PD00XM:  Fix reference to            * 00498000
*                                         EXTRESTOKEN                 * 00498100
*    $03=OW39892  HBB7705 001115 PD00QQ:  AutoR extension for CICS    * 00498200
*    $PN=PYN0893  HBB7708 030205 PD00FR:  Clarify addressability      * 00498300
*                                         requirements                * 00498400
*    $PO=ME24339  HBB7790 120625 PD00C9:  New reason codes for bad    * 00498500
*                                         list-entry keys             * 00498600
*    $L4=CFFLASH  HBB7790 130225 PD00OF:  Storage-Class Memory        * 00498700
*    $L5=ADUPLX   HBB7790 150331 PD00BN:  Asynchronous duplexing      * 00498800
****** END OF SPECIFICATIONS *****************************************/ 00498900
*/********************************************************************* 00499000
         MACRO                                                          00499100
&XLABEL  IXLLIST &REQUEST=,&TYPE=,&RESTOKEN=,&EXTRESTOKEN=,&ENTRYTYPE=,*00499200
               &ELEMNUM=,&LISTLIMIT=,&LISTDESC=,&LISTKEY=,&MAXLISTKEY=,*00499300
               &SETCURSOR=,&MOVETOLIST=,&MOVETOKEY=,&MOVETOPOS=,       *00499400
               &DATAOPER=,&LISTTYPE=,&FIRSTELEM=,&LASTELEM=,&ACTION=,  *00499500
               &VECTORINDEX=,&DRIVEEXIT=,&UNC=,&STARTINDEX=,&ENDINDEX=,*00499600
               &MOSVECTOR=,&CONTOKEN=,&REQID=,&BUFLIST=,&BUFADDRTYPE=, *00499700
               &PAGEABLE=,&BUFSTGKEY=,&BUFALET=,&BUFNUM=,&BUFINCRNUM=, *00499800
               &BUFFER=,&BUFSIZE=,&ADJAREA=,&LISTNUM=,&LISTPOS=,       *00499900
               &ENTRYKEY=,&KEYREQTYPE=,&AUTHCOMP=,&AUTHCOMPTYPE=,      *00500000
               &NEWAUTH=,&ENTRYID=,&ENTRYNAME=,&UPDATECURSOR=,         *00500100
               &CURSORUPDTYPE=,&LISTDIR=,&LISTKEYTYPE=,&LISTKEYINC=,   *00500200
               &KEYCOMP=,&VERSCOMP=,&VERSCOMPTYPE=,&VERSUPDATE=,       *00500300
               &NEWVERS=,&LOCKINDEX=,&LOCKOPER=,&LOCKMODE=,&LOCKDATA=, *00500400
               &LOCKCOMP=,&MODE=,&REQECB=,&REQDATA=,&REQTOKEN=,        *00500500
               &ANSAREA=,&ANSLEN=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=   00500600
.*                                                                      00500700
*                      MACDATE -01/13/18-<3>                            00500800
.*                                                                      00500900
.*******************************************************************    00501000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00501100
.*******************************************************************    00501200
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00501300
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00501400
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00501500
.*                                                                      00501600
                      GBLC  &ZIXLLIST   YES=MACRO USED AT LEAST ONCE    00501700
.*******************************************************************    00501800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00501900
.*******************************************************************    00502000
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00502100
                      LCLC  &ZCNDX      SYSNDX CHARACTERS               00502200
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00502300
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00502400
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00502500
                      LCLA  &ZAWRK      USED AS A WORK AREA             00502600
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00502700
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00502800
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00502900
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00503000
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00503100
                      LCLC  &ZMAC_G     "G" or null                     00503200
&ZMAC_G               SETC  ''                                          00503300
                      LCLC  &ZMAC_LR                                    00503400
&ZMAC_LR              SETC  'LR'                                        00503500
                      LCLC  &ZMAC_L                                     00503600
&ZMAC_L               SETC  'L'                                         00503700
                      LCLC  &ZMAC_ST                                    00503800
&ZMAC_ST              SETC  'ST'                                        00503900
                      LCLC  &ZMAC_LLGT                                  00504000
&ZMAC_LLGT            SETC  'L'                                         00504100
                      LCLC  &ZMAC_LGR                                   00504200
&ZMAC_LGR             SETC  'LR'                                        00504300
                      LCLC  &ZMAC_LG                                    00504400
&ZMAC_LG              SETC  'L'                                         00504500
                      LCLC  &ZMAC_STG                                   00504600
&ZMAC_STG             SETC  'ST'                                        00504700
                      LCLA  &ZMACRET    MACRO RETURN CODE               00504800
&ZMACRET              SETA  0           ASSUME NO ERRORS                00504900
.*                                                                      00505000
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00505100
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00505200
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00505300
                      LCLC  &ZENDBASEPL         End of base PL          00505400
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           00505500
.*******************************************************************    00505600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00505700
.*******************************************************************    00505800
                      LCLA  &ZI         INDEX FOR ARRAY                 00505900
                      LCLA  &ZJ         INDEX FOR PARMS                 00506000
                      LCLA  &ZK         INDEX FOR PARSE                 00506100
                      LCLA  &ZLO        LOW RANGE VALUE                 00506200
                      LCLA  &ZHI        HIGH RANGE VALUE                00506300
                      LCLC  &ZW         WORK AREA FOR PARM              00506400
.********************************************************************   00506500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00506600
.********************************************************************   00506700
                      GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL         00506800
                      GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE  00506900
                      GBLA  &SYSALVL    SYSSTATE ARCHLVL                00507000
                      GBLC  &SYSAM64    SYSSTATE AMODE64                00507100
.*                                                                      00507200
                      AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED  00507300
                      AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED   00507400
                      SPLEVEL  TEST                                     00507500
.ZSYS2                ANOP  ,                                           00507600
                      AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1       00507700
                      AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1       00507800
                      SYSSTATE TEST                                     00507900
                      AGO   .ZSYS4                                      00508000
.ZSYS3                ANOP  ,                                           00508100
&SYSASCE              SETC  'P'         ASSUME SYSSTATE PRIMARY         00508200
.ZSYS4                ANOP  ,                                           00508300
                      AIF   ('&SYSAM64' NE 'YES').ZSYSN64               00508400
&ZMAC_LLGT            SETC 'LLGT'                                       00508500
&ZMAC_LGR             SETC 'LGR'                                        00508600
&ZMAC_LG              SETC 'LG'                                         00508700
&ZMAC_STG             SETC 'STG'                                        00508800
.ZSYSN64              ANOP  ,                                           00508900
.*******************************************************************    00509000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00509100
.*******************************************************************    00509200
                      LCLC  &XREQUEST   ++ VALUE                        00509300
                      LCLC  &XTYPE(257)         ++ VALUE                00509400
                      LCLC  &XRESTARTTOKEN      ++ NAME                 00509500
                      LCLC  &XRESTOKEN  ++ NAME                         00509600
                      LCLC  &XEXTRESTOKEN       ++ NAME                 00509700
                      LCLC  &XENTRYTYPE         ++ VALUE                00509800
                      LCLC  &XELEMNUM   ++ NAME                         00509900
                      LCLC  &XLISTLIMIT         ++ NAME                 00510000
                      LCLC  &XLISTDESC  ++ NAME                         00510100
                      LCLC  &XLISTKEY   ++ NAME                         00510200
                      LCLC  &XMAXLISTKEY        ++ NAME                 00510300
                      LCLC  &XSETCURSOR         ++ VALUE                00510400
                      LCLC  &XMOVETOLIST        ++ NAME                 00510500
                      LCLC  &XMOVETOKEY         ++ NAME                 00510600
                      LCLC  &XMOVETOPOS         ++ VALUE                00510700
                      LCLC  &XDATAOPER  ++ VALUE                        00510800
                      LCLC  &XLISTTYPE  ++ VALUE                        00510900
                      LCLC  &XFIRSTELEM         ++ NAME                 00511000
                      LCLC  &XLASTELEM  ++ NAME                         00511100
                      LCLC  &XACTION    ++ VALUE                        00511200
                      LCLC  &XVECTORINDEX       ++ NAME                 00511300
                      LCLC  &XDRIVEEXIT         ++ VALUE                00511400
                      LCLC  &XUNC       ++ NAME                         00511500
                      LCLC  &XSTARTINDEX        ++ NAME                 00511600
                      LCLC  &XENDINDEX  ++ NAME                         00511700
                      LCLC  &XMOSVECTOR         ++ NAME                 00511800
                      LCLC  &XCONTOKEN  ++ NAME                         00511900
                      LCLC  &XREQID     ++ NAME                         00512000
                      LCLC  &XDATAREA   ++ NAME                         00512100
                      LCLC  &XBUFLIST   ++ NAME                         00512200
                      LCLC  &XBUFADDRTYPE       ++ VALUE                00512300
                      LCLC  &XPAGEABLE  ++ VALUE                        00512400
                      LCLC  &XBUFSTGKEY         ++ NAME                 00512500
                      LCLC  &XBUFALET   ++ NAME                         00512600
                      LCLC  &XBUFNUM    ++ NAME                         00512700
                      LCLC  &XBUFINCRNUM        ++ NAME                 00512800
                      LCLC  &XBUFFER    ++ NAME                         00512900
                      LCLC  &XBUFSIZE   ++ NAME                         00513000
                      LCLC  &XADJAREA   ++ NAME                         00513100
                      LCLC  &XLISTNUM   ++ NAME                         00513200
                      LCLC  &XLISTPOS   ++ VALUE                        00513300
                      LCLC  &XENTRYKEY  ++ NAME                         00513400
                      LCLC  &XKEYREQTYPE        ++ VALUE                00513500
                      LCLC  &XAUTHCOMP  ++ NAME                         00513600
                      LCLC  &XAUTHCOMPTYPE      ++ VALUE                00513700
                      LCLC  &XNEWAUTH   ++ NAME                         00513800
                      LCLC  &XENTRYID   ++ NAME                         00513900
                      LCLC  &XENTRYNAME         ++ NAME                 00514000
                      LCLC  &XLOCBYCURSOR       ++ VALUE                00514100
                      LCLC  &XUPDATECURSOR      ++ VALUE                00514200
                      LCLC  &XCURSORUPDTYPE     ++ VALUE                00514300
                      LCLC  &XLISTDIR   ++ VALUE                        00514400
                      LCLC  &XLISTKEYTYPE       ++ VALUE                00514500
                      LCLC  &XLISTKEYINC        ++ NAME                 00514600
                      LCLC  &XKEYCOMP   ++ NAME                         00514700
                      LCLC  &XVERSCOMP  ++ NAME                         00514800
                      LCLC  &XVERSCOMPTYPE      ++ VALUE                00514900
                      LCLC  &XVERSUPDATE        ++ VALUE                00515000
                      LCLC  &XNEWVERS   ++ NAME                         00515100
                      LCLC  &XLOCKINDEX         ++ NAME                 00515200
                      LCLC  &XLOCKOPER  ++ VALUE                        00515300
                      LCLC  &XLOCKMODE  ++ VALUE                        00515400
                      LCLC  &XLOCKDATA  ++ NAME                         00515500
                      LCLC  &XLOCKCOMP  ++ NAME                         00515600
                      LCLC  &XMODE      ++ VALUE                        00515700
                      LCLC  &XREQECB    ++ NAME                         00515800
                      LCLC  &XREQDATA   ++ NAME                         00515900
                      LCLC  &XREQTOKEN  ++ NAME                         00516000
                      LCLC  &XANSAREA   ++ NAME                         00516100
                      LCLC  &XANSLEN    ++ NAME                         00516200
                      LCLC  &XRETCODE   ++ NAME                         00516300
                      LCLC  &XRSNCODE   ++ NAME                         00516400
                      LCLA  &XPLISTVER  ++ VALUE                        00516500
                      LCLC  &XMF        ++ VALUE                        00516600
                      LCLC  &XMFCTRL    ++ NAME                         00516700
                      LCLC  &XMFATTR    ++ VALUE                        00516800
                      LCLC  &XMFSCK     ++ VALUE                        00516900
.*******************************************************************    00517000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00517100
.*******************************************************************    00517200
                      LCLC  &ZXREQUEST  ++ INPUT VALUE                  00517300
                      LCLC  &ZXTYPE     ++ INPUT VALUE                  00517400
                      LCLC  &ZXRESTARTTOKEN     ++ INPUT NAME           00517500
                      LCLC  &ZXRESTOKEN         ++ INPUT NAME           00517600
                      LCLC  &ZXEXTRESTOKEN      ++ INPUT NAME           00517700
                      LCLC  &ZXENTRYTYPE        ++ INPUT VALUE          00517800
                      LCLC  &ZXELEMNUM  ++ INPUT NAME                   00517900
                      LCLC  &ZXLISTLIMIT        ++ INPUT NAME           00518000
                      LCLC  &ZXLISTDESC         ++ INPUT NAME           00518100
                      LCLC  &ZXLISTKEY  ++ INPUT NAME                   00518200
                      LCLC  &ZXMAXLISTKEY       ++ INPUT NAME           00518300
                      LCLC  &ZXSETCURSOR        ++ INPUT VALUE          00518400
                      LCLC  &ZXMOVETOLIST       ++ INPUT NAME           00518500
                      LCLC  &ZXMOVETOKEY        ++ INPUT NAME           00518600
                      LCLC  &ZXMOVETOPOS        ++ INPUT VALUE          00518700
                      LCLC  &ZXDATAOPER         ++ INPUT VALUE          00518800
                      LCLC  &ZXLISTTYPE         ++ INPUT VALUE          00518900
                      LCLC  &ZXFIRSTELEM        ++ INPUT NAME           00519000
                      LCLC  &ZXLASTELEM         ++ INPUT NAME           00519100
                      LCLC  &ZXACTION   ++ INPUT VALUE                  00519200
                      LCLC  &ZXVECTORINDEX      ++ INPUT NAME           00519300
                      LCLC  &ZXDRIVEEXIT        ++ INPUT VALUE          00519400
                      LCLC  &ZXUNC      ++ INPUT NAME                   00519500
                      LCLC  &ZXSTARTINDEX       ++ INPUT NAME           00519600
                      LCLC  &ZXENDINDEX         ++ INPUT NAME           00519700
                      LCLC  &ZXMOSVECTOR        ++ OUTPUT NAME          00519800
                      LCLC  &ZXCONTOKEN         ++ INPUT NAME           00519900
                      LCLC  &ZXREQID    ++ INPUT NAME                   00520000
                      LCLC  &ZXDATAREA  ++ INPUT NAME                   00520100
                      LCLC  &ZXBUFLIST  ++ INPUT NAME                   00520200
                      LCLC  &ZXBUFADDRTYPE      ++ INPUT VALUE          00520300
                      LCLC  &ZXPAGEABLE         ++ INPUT VALUE          00520400
                      LCLC  &ZXBUFSTGKEY        ++ INPUT NAME           00520500
                      LCLC  &ZXBUFALET  ++ INPUT NAME                   00520600
                      LCLC  &ZXBUFNUM   ++ INPUT NAME                   00520700
                      LCLC  &ZXBUFINCRNUM       ++ INPUT NAME           00520800
                      LCLC  &ZXBUFFER   ++ INPUT NAME                   00520900
                      LCLC  &ZXBUFSIZE  ++ INPUT NAME                   00521000
                      LCLC  &ZXADJAREA  ++ INPUT NAME                   00521100
                      LCLC  &ZXLISTNUM  ++ INPUT NAME                   00521200
                      LCLC  &ZXLISTPOS  ++ INPUT VALUE                  00521300
                      LCLC  &ZXENTRYKEY         ++ INPUT NAME           00521400
                      LCLC  &ZXKEYREQTYPE       ++ INPUT VALUE          00521500
                      LCLC  &ZXAUTHCOMP         ++ INPUT NAME           00521600
                      LCLC  &ZXAUTHCOMPTYPE     ++ INPUT VALUE          00521700
                      LCLC  &ZXNEWAUTH  ++ INPUT NAME                   00521800
                      LCLC  &ZXENTRYID  ++ INPUT NAME                   00521900
                      LCLC  &ZXENTRYNAME        ++ INPUT NAME           00522000
                      LCLC  &ZXLOCBYCURSOR      ++ INPUT VALUE          00522100
                      LCLC  &ZXUPDATECURSOR     ++ INPUT VALUE          00522200
                      LCLC  &ZXCURSORUPDTYPE    ++ INPUT VALUE          00522300
                      LCLC  &ZXLISTDIR  ++ INPUT VALUE                  00522400
                      LCLC  &ZXLISTKEYTYPE      ++ INPUT VALUE          00522500
                      LCLC  &ZXLISTKEYINC       ++ INPUT NAME           00522600
                      LCLC  &ZXKEYCOMP  ++ INPUT NAME                   00522700
                      LCLC  &ZXVERSCOMP         ++ INPUT NAME           00522800
                      LCLC  &ZXVERSCOMPTYPE     ++ INPUT VALUE          00522900
                      LCLC  &ZXVERSUPDATE       ++ INPUT VALUE          00523000
                      LCLC  &ZXNEWVERS  ++ INPUT NAME                   00523100
                      LCLC  &ZXLOCKINDEX        ++ INPUT NAME           00523200
                      LCLC  &ZXLOCKOPER         ++ INPUT VALUE          00523300
                      LCLC  &ZXLOCKMODE         ++ INPUT VALUE          00523400
                      LCLC  &ZXLOCKDATA         ++ INPUT NAME           00523500
                      LCLC  &ZXLOCKCOMP         ++ INPUT NAME           00523600
                      LCLC  &ZXMODE     ++ INPUT VALUE                  00523700
                      LCLC  &ZXREQECB   ++ INPUT NAME                   00523800
                      LCLC  &ZXREQDATA  ++ INPUT NAME                   00523900
                      LCLC  &ZXREQTOKEN         ++ OUTPUT NAME          00524000
                      LCLC  &ZXANSAREA  ++ INPUT NAME                   00524100
                      LCLC  &ZXANSLEN   ++ INPUT NAME                   00524200
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00524300
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  00524400
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          00524500
                      LCLC  &ZXMF       ++ INPUT VALUE                  00524600
                      LCLC  &ZXMFCTRL   ++ INPUT NAME                   00524700
                      LCLC  &ZXMFATTR   ++ INPUT VALUE                  00524800
                      LCLC  &ZXMFSCK    ++ INPUT VALUE                  00524900
.********************************************************************   00525000
.***AC.PLV01  PROCESS PLISTVER                                      *   00525100
.********************************************************************   00525200
&XPLISTVER      SETA  0                                                 00525300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00525400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00525500
&XPLISTVER      SETA  3                                                 00525600
.ZPLV0          ANOP  ,                                                 00525700
.*                                                                      00525800
                AIF   ('&EXTRESTOKEN' EQ '').ZPLV1E                     00525900
                AIF   (&XPLISTVER GE 3).ZPLV1E                          00526000
&XPLISTVER      SETA  3                                                 00526100
.ZPLV1E         ANOP  ,                                                 00526200
.*                                                                      00526300
                AIF   ('&LISTKEY' EQ '').ZPLV2E                         00526400
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00526500
&XPLISTVER      SETA  1                                                 00526600
.ZPLV2E         ANOP  ,                                                 00526700
.*                                                                      00526800
                AIF   ('&MAXLISTKEY' EQ '').ZPLV3E                      00526900
                AIF   (&XPLISTVER GE 1).ZPLV3E                          00527000
&XPLISTVER      SETA  1                                                 00527100
.ZPLV3E         ANOP  ,                                                 00527200
.*                                                                      00527300
                AIF   ('&SETCURSOR' EQ '').ZPLV4E                       00527400
                AIF   (&XPLISTVER GE 1).ZPLV4E                          00527500
&XPLISTVER      SETA  1                                                 00527600
.ZPLV4E         ANOP  ,                                                 00527700
.*                                                                      00527800
                AIF   ('&EXTRESTOKEN' EQ '').ZPLV5E                     00527900
                AIF   (&XPLISTVER GE 3).ZPLV5E                          00528000
&XPLISTVER      SETA  3                                                 00528100
.ZPLV5E         ANOP  ,                                                 00528200
.*                                                                      00528300
                AIF   ('&UNC' EQ '').ZPLV6E                             00528400
                AIF   (&XPLISTVER GE 2).ZPLV6E                          00528500
&XPLISTVER      SETA  2                                                 00528600
.ZPLV6E         ANOP  ,                                                 00528700
.*                                                                      00528800
                AIF   ('&STARTINDEX' EQ '').ZPLV7E                      00528900
                AIF   (&XPLISTVER GE 2).ZPLV7E                          00529000
&XPLISTVER      SETA  2                                                 00529100
.ZPLV7E         ANOP  ,                                                 00529200
.*                                                                      00529300
                AIF   ('&ENDINDEX' EQ '').ZPLV8E                        00529400
                AIF   (&XPLISTVER GE 2).ZPLV8E                          00529500
&XPLISTVER      SETA  2                                                 00529600
.ZPLV8E         ANOP  ,                                                 00529700
.*                                                                      00529800
                AIF   ('&MOSVECTOR' EQ '').ZPLV9E                       00529900
                AIF   (&XPLISTVER GE 2).ZPLV9E                          00530000
&XPLISTVER      SETA  2                                                 00530100
.ZPLV9E         ANOP  ,                                                 00530200
.*                                                                      00530300
                AIF   ('&LISTKEYINC' EQ '').ZPLV10E                     00530400
                AIF   (&XPLISTVER GE 1).ZPLV10E                         00530500
&XPLISTVER      SETA  1                                                 00530600
.ZPLV10E        ANOP  ,                                                 00530700
.*                                                                      00530800
                AIF   ('&LISTKEYINC' EQ '').ZPLV11E                     00530900
                AIF   (&XPLISTVER GE 1).ZPLV11E                         00531000
&XPLISTVER      SETA  1                                                 00531100
.ZPLV11E        ANOP  ,                                                 00531200
.*                                                                      00531300
                AIF   ('&LISTKEYINC' EQ '').ZPLV12E                     00531400
                AIF   (&XPLISTVER GE 1).ZPLV12E                         00531500
&XPLISTVER      SETA  1                                                 00531600
.ZPLV12E        ANOP  ,                                                 00531700
.*                                                                      00531800
                AIF   ('&KEYCOMP' EQ '').ZPLV13E                        00531900
                AIF   (&XPLISTVER GE 1).ZPLV13E                         00532000
&XPLISTVER      SETA  1                                                 00532100
.ZPLV13E        ANOP  ,                                                 00532200
.*                                                                      00532300
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00532400
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00532500
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00532600
.*-------------------------------------------------------------------   00532700
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00532800
&ZMS            SETC  '"PLISTVER='                                      00532900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00533000
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00533100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00533200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00533300
                AGO   .ZPVCK2                                           00533400
.ZPVCK3         ANOP  ,                                                 00533500
.*-------------------------------------------------------------------   00533600
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00533700
&ZMS            SETC  '"PLISTVER='                                      00533800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00533900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00534000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00534100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00534200
                AGO   .ZPVCKE                                           00534300
.ZPVCK2         ANOP  ,                                                 00534400
.*-------------------------------------------------------------------   00534500
&ZCVAL          SETC  '&PLISTVER(1)'                                    00534600
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00534700
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00534800
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00534900
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00535000
                AIF   (&ZN LE 3).ZPVCK4A   NOT HIGH                     00535100
.ZPVCK6         ANOP  ,                                                 00535200
&ZMS            SETC  '"PLISTVER='                                      00535300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00535400
&ZMS            SETC  '&ZMS THE RANGE IS "0-3"'                         00535500
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00535600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00535700
&XPLISTVER      SETA  3                                                 00535800
                AGO   .ZPVCKE                                           00535900
.*-------------------------------------------------------------------   00536000
.ZPVCK4A        ANOP  ,                                                 00536100
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00536200
&ZMS            SETC  'PLISTVER='                                       00536300
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00536400
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00536500
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00536600
                MNOTE 8,' &ZMS IS REQUIRED.'                            00536700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00536800
                AGO   .ZPVCK5                                           00536900
.ZPVCK4         ANOP  ,                                                 00537000
&XPLISTVER      SETA  &PLISTVER(1)                                      00537100
.ZPVCK5         ANOP  ,                                                 00537200
.ZPVCKE         ANOP  ,                                                 00537300
.********************************************************************   00537400
.***AG.MF01 PROCESS MF MACRO FORMS                                      00537500
.********************************************************************   00537600
                      ACTR  10000                                       00537700
.*------------------------------------------------------------------    00537800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00537900
&XMF                  SETC  ''          INITIALIZE XVARIABLE            00538000
.*-------------------------------------------------------------------   00538100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00538200
.ZG363                ANOP  ,                                           00538300
&ZTLC                 SETC 'S'                                          00538400
                      AIF   ('&MF(1)' NE '&ZTLC').ZG364                 00538500
&XMF                  SETC  'S'         SET KEYWORD                     00538600
                      AIF   (N'&MF LE 1).ZG363A  CK NUM                 00538700
&ZMS                  SETC  '"MF='                                      00538800
&ZMS                  SETC  '&ZMS.&MF"'                                 00538900
&ZMS                  SETC  '&ZMS "MF"'                                 00539000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00539100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00539200
.ZG363A               ANOP  ,                                           00539300
.*-------------------------------------------------------------------   00539400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00539500
.ZG364                ANOP  ,                                           00539600
&ZTLC                 SETC 'L'                                          00539700
                      AIF   ('&MF(1)' NE '&ZTLC').ZG371                 00539800
&XMF                  SETC  'L'         SET KEYWORD                     00539900
                      AIF   (N'&MF LE 3).ZG364A  CK NUM                 00540000
&ZMS                  SETC  '"MF='                                      00540100
&ZMS                  SETC  '&ZMS.&MF"'                                 00540200
&ZMS                  SETC  '&ZMS "MF"'                                 00540300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        00540400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00540500
.ZG364A               ANOP  ,                                           00540600
.*-------------------------------------------------------------------   00540700
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00540800
                      AIF   (N'&SYSLIST NE 0).ZG364B  POSITIONALS?      00540900
                      AIF   ('&REQUEST' NE '').ZG364B  KEYS?            00541000
                      AIF   ('&TYPE' NE '').ZG364B  KEYS?               00541100
                      AIF   ('&RESTOKEN' NE '').ZG364B  KEYS?           00541200
                      AIF   ('&EXTRESTOKEN' NE '').ZG364B  KEYS?        00541300
                      AIF   ('&ENTRYTYPE' NE '').ZG364B  KEYS?          00541400
                      AIF   ('&ELEMNUM' NE '').ZG364B  KEYS?            00541500
                      AIF   ('&LISTLIMIT' NE '').ZG364B  KEYS?          00541600
                      AIF   ('&LISTDESC' NE '').ZG364B  KEYS?           00541700
                      AIF   ('&LISTKEY' NE '').ZG364B  KEYS?            00541800
                      AIF   ('&MAXLISTKEY' NE '').ZG364B  KEYS?         00541900
                      AIF   ('&SETCURSOR' NE '').ZG364B  KEYS?          00542000
                      AIF   ('&MOVETOLIST' NE '').ZG364B  KEYS?         00542100
                      AIF   ('&MOVETOKEY' NE '').ZG364B  KEYS?          00542200
                      AIF   ('&MOVETOPOS' NE '').ZG364B  KEYS?          00542300
                      AIF   ('&DATAOPER' NE '').ZG364B  KEYS?           00542400
                      AIF   ('&LISTTYPE' NE '').ZG364B  KEYS?           00542500
                      AIF   ('&FIRSTELEM' NE '').ZG364B  KEYS?          00542600
                      AIF   ('&LASTELEM' NE '').ZG364B  KEYS?           00542700
                      AIF   ('&ACTION' NE '').ZG364B  KEYS?             00542800
                      AIF   ('&VECTORINDEX' NE '').ZG364B  KEYS?        00542900
                      AIF   ('&DRIVEEXIT' NE '').ZG364B  KEYS?          00543000
                      AIF   ('&UNC' NE '').ZG364B  KEYS?                00543100
                      AIF   ('&STARTINDEX' NE '').ZG364B  KEYS?         00543200
                      AIF   ('&ENDINDEX' NE '').ZG364B  KEYS?           00543300
                      AIF   ('&MOSVECTOR' NE '').ZG364B  KEYS?          00543400
                      AIF   ('&CONTOKEN' NE '').ZG364B  KEYS?           00543500
                      AIF   ('&REQID' NE '').ZG364B  KEYS?              00543600
                      AIF   ('&BUFLIST' NE '').ZG364B  KEYS?            00543700
                      AIF   ('&BUFADDRTYPE' NE '').ZG364B  KEYS?        00543800
                      AIF   ('&PAGEABLE' NE '').ZG364B  KEYS?           00543900
                      AIF   ('&BUFSTGKEY' NE '').ZG364B  KEYS?          00544000
                      AIF   ('&BUFALET' NE '').ZG364B  KEYS?            00544100
                      AIF   ('&BUFNUM' NE '').ZG364B  KEYS?             00544200
                      AIF   ('&BUFINCRNUM' NE '').ZG364B  KEYS?         00544300
                      AIF   ('&BUFFER' NE '').ZG364B  KEYS?             00544400
                      AIF   ('&BUFSIZE' NE '').ZG364B  KEYS?            00544500
                      AIF   ('&ADJAREA' NE '').ZG364B  KEYS?            00544600
                      AIF   ('&LISTNUM' NE '').ZG364B  KEYS?            00544700
                      AIF   ('&LISTPOS' NE '').ZG364B  KEYS?            00544800
                      AIF   ('&ENTRYKEY' NE '').ZG364B  KEYS?           00544900
                      AIF   ('&KEYREQTYPE' NE '').ZG364B  KEYS?         00545000
                      AIF   ('&AUTHCOMP' NE '').ZG364B  KEYS?           00545100
                      AIF   ('&AUTHCOMPTYPE' NE '').ZG364B  KEYS?       00545200
                      AIF   ('&NEWAUTH' NE '').ZG364B  KEYS?            00545300
                      AIF   ('&ENTRYID' NE '').ZG364B  KEYS?            00545400
                      AIF   ('&ENTRYNAME' NE '').ZG364B  KEYS?          00545500
                      AIF   ('&UPDATECURSOR' NE '').ZG364B  KEYS?       00545600
                      AIF   ('&CURSORUPDTYPE' NE '').ZG364B  KEYS?      00545700
                      AIF   ('&LISTDIR' NE '').ZG364B  KEYS?            00545800
                      AIF   ('&LISTKEYTYPE' NE '').ZG364B  KEYS?        00545900
                      AIF   ('&LISTKEYINC' NE '').ZG364B  KEYS?         00546000
                      AIF   ('&KEYCOMP' NE '').ZG364B  KEYS?            00546100
                      AIF   ('&VERSCOMP' NE '').ZG364B  KEYS?           00546200
                      AIF   ('&VERSCOMPTYPE' NE '').ZG364B  KEYS?       00546300
                      AIF   ('&VERSUPDATE' NE '').ZG364B  KEYS?         00546400
                      AIF   ('&NEWVERS' NE '').ZG364B  KEYS?            00546500
                      AIF   ('&LOCKINDEX' NE '').ZG364B  KEYS?          00546600
                      AIF   ('&LOCKOPER' NE '').ZG364B  KEYS?           00546700
                      AIF   ('&LOCKMODE' NE '').ZG364B  KEYS?           00546800
                      AIF   ('&LOCKDATA' NE '').ZG364B  KEYS?           00546900
                      AIF   ('&LOCKCOMP' NE '').ZG364B  KEYS?           00547000
                      AIF   ('&MODE' NE '').ZG364B  KEYS?               00547100
                      AIF   ('&REQECB' NE '').ZG364B  KEYS?             00547200
                      AIF   ('&REQDATA' NE '').ZG364B  KEYS?            00547300
                      AIF   ('&REQTOKEN' NE '').ZG364B  KEYS?           00547400
                      AIF   ('&ANSAREA' NE '').ZG364B  KEYS?            00547500
                      AIF   ('&ANSLEN' NE '').ZG364B  KEYS?             00547600
                      AIF   ('&RETCODE' NE '').ZG364B  KEYS?            00547700
                      AIF   ('&RSNCODE' NE '').ZG364B  KEYS?            00547800
                      AGO    .ZG364C    INVOCATION OKAY                 00547900
.ZG364B               ANOP  ,                                           00548000
&ZMS                  SETC  'THE "L" FORM OF "MF"'                      00548100
&ZMS                  SETC  '&ZMS CAN ONLY HAVE'                        00548200
&ZMS                  SETC  '&ZMS THE "PLISTVER" KEY'                   00548300
                      MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'      00548400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00548500
.ZG364C               ANOP  ,                                           00548600
.*-------------------------------------------------------------------   00548700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00548800
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   00548900
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   00549000
                      AIF   (N'&MF(2) GT 1).ZG366B  MULTI               00549100
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   00549200
.ZG366B               AIF   (K'&MF(2) GT 0).ZG366C                      00549300
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00549400
&ZMS                  SETC  'WHEN "L" IS SPECIFIED'                     00549500
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         00549600
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                00549700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00549800
.ZG366C               ANOP  ,                                           00549900
.*-------------------------------------------------------------------   00550000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00550100
                      AIF   (K'&ZXMFCTRL LE 0).ZG366P  NOT I/O          00550200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG366P             00550300
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00550400
&ZMS                  SETC  '"MF='                                      00550500
&ZMS                  SETC  '&ZMS.&MF"'                                 00550600
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00550700
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'           00550800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00550900
.ZG366P               ANOP  ,                                           00551000
.*-------------------------------------------------------------------   00551100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00551200
&ZXMFATTR             SETC  'INPUT'     SET IN/OUTPUT                   00551300
&XMFATTR              SETC  '0D'                                        00551400
                      AIF   (K'&MF(3) LE 0).ZG369B  PARM                00551500
&XMFATTR              SETC  '&MF(3,1)'  SET XVARIABLE                   00551600
                      AIF   (N'&MF(3) GT 1).ZG369B  MULTI               00551700
&XMFATTR              SETC  '&MF(3)'    SET XVARIABLE                   00551800
.ZG369B               ANOP  ,                                           00551900
.*-------------------------------------------------------------------   00552000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00552100
                      AIF   (K'&ZXMFATTR LE 0).ZG369P  NOT I/O          00552200
                      AIF   ('&XMFATTR'(1,1) NE '(').ZG369P             00552300
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 00552400
&ZMS                  SETC  '"MF='                                      00552500
&ZMS                  SETC  '&ZMS.&MF"'                                 00552600
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00552700
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'           00552800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00552900
.ZG369P               ANOP  ,                                           00553000
.*-------------------------------------------------------------------   00553100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00553200
                      AIF   (K'&ZXMFATTR LE 0).ZG369S  NOT I/O          00553300
                      AIF   (K'&XMFATTR LE 60).ZG369S  LNG OK           00553400
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 00553500
&ZMS                  SETC  '"MF='                                      00553600
&ZMS                  SETC  '&ZMS.&MF"'                                 00553700
&ZMS                  SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'       00553800
                      MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'          00553900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00554000
.ZG369S               ANOP  ,                                           00554100
.*-------------------------------------------------------------------   00554200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00554300
.ZG371                ANOP  ,                                           00554400
&ZTLC                 SETC 'E'                                          00554500
                      AIF   ('&MF(1)' NE '&ZTLC').ZG379                 00554600
&XMF                  SETC  'E'         SET KEYWORD                     00554700
                      AIF   (N'&MF LE 3).ZG371A  CK NUM                 00554800
&ZMS                  SETC  '"MF='                                      00554900
&ZMS                  SETC  '&ZMS.&MF"'                                 00555000
&ZMS                  SETC  '&ZMS "MF"'                                 00555100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        00555200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00555300
.ZG371A               ANOP  ,                                           00555400
.*-------------------------------------------------------------------   00555500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00555600
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   00555700
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   00555800
                      AIF   (N'&MF(2) GT 1).ZG373B  MULTI               00555900
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   00556000
.ZG373B               AIF   (K'&MF(2) GT 0).ZG373C                      00556100
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00556200
&ZMS                  SETC  'WHEN "E" IS SPECIFIED'                     00556300
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         00556400
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                00556500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00556600
.ZG373C               ANOP  ,                                           00556700
.*-------------------------------------------------------------------   00556800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00556900
                      AIF   (K'&ZXMFCTRL LE 0).ZG373R  NOT I/O          00557000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG373R             00557100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                  00557200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG373P               00557300
                      AIF   (K'&ZCGPR GT 2).ZG373Q                      00557400
                      AIF   ('&ZCGPR' EQ '0').ZG373Q                    00557500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00557600
                      AIF   (T'&ZCGPR NE 'N').ZG373Q  INVALID REG NAME  00557700
.ZG373P               ANOP  ,                                           00557800
                      AIF   (T'&ZCGPR NE 'N').ZG373R  NON NUMERIC       00557900
                      AIF   ('&ZCGPR' LT '1').ZG373Q                    00558000
                      AIF   ('&ZCGPR' LE '12').ZG373R                   00558100
.ZG373Q               ANOP  ,                                           00558200
&ZMS                  SETC  '"MF='                                      00558300
&ZMS                  SETC  '&ZMS.&MF"'                                 00558400
&ZMS                  SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'   00558500
                      MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'            00558600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00558700
.ZG373R               ANOP  ,                                           00558800
.*-------------------------------------------------------------------   00558900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00559000
&XMFSCK               SETC  ''          INITIALIZE XVARIABLE            00559100
.ZG377A   AIF   ('&MF(3)' NE 'COMPLETE').ZG378A                         00559200
&XMFSCK               SETC  'COMPLETE'  SET KEYWORD                     00559300
.*-------------------------------------------------------------------   00559400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00559500
.ZG378A               AIF   (K'&XMFSCK GT 0).ZG378C  KEYWORD            00559600
                      AIF   (K'&MF(3) LE 0).ZG378B                      00559700
&ZMS                  SETC  '"MF='                                      00559800
&ZMS                  SETC  '&ZMS.&MF"'                                 00559900
&ZMS                  SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '   00560000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00560100
&ZMS                  SETC  '&ZMS "COMPLETE".'                          00560200
                      MNOTE 8,' &ZMS '                                  00560300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00560400
.ZG378B               ANOP  ,                                           00560500
&XMFSCK               SETC  'COMPLETE'  SET DEFAULT KEYWORD             00560600
.ZG378C               ANOP  ,                                           00560700
&ZXMFSCK              SETC  'INPUT'     SET IN/OUTPUT                   00560800
.*------------------------------------------------------------------    00560900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00561000
.ZG379                ANOP  ,                                           00561100
&ZXMF                 SETC  'INPUT'     SET IN/OUTPUT                   00561200
                      AIF   (K'&XMF GT 0).ZG379E  VALID ARG             00561300
                      AIF   (T'&MF EQ 'O').ZG379D  OMITTED              00561400
&ZASYSLNDX            SETA  0                                           00561500
.ZG379A               ANOP  ,           POSITIONAL MACRO KEY            00561600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00561700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG379C           00561800
&ZTLC                 SETC 'MF'                                         00561900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG379A  00562000
.ZG379B               ANOP  ,                                           00562100
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 00562200
&ZMS                  SETC  'THE "MF" KEY'                              00562300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00562400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00562500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00562600
                      AGO   .ZG379E                                     00562700
.ZG379C               ANOP  ,                                           00562800
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 00562900
&ZMS                  SETC  '"MF='                                      00563000
&ZMS                  SETC  '&ZMS.&MF"'                                 00563100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00563200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00563300
&ZMS                  SETC  '&ZMS "S",'                                 00563400
&ZMS                  SETC  '&ZMS "L",'                                 00563500
&ZMS                  SETC  '&ZMS OR "E".'                              00563600
                      MNOTE 8,' &ZMS '                                  00563700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00563800
                      AGO   .ZG379E                                     00563900
.ZG379D               ANOP  ,                                           00564000
&XMF                  SETC  'S'         SET DEFAULT KEYWORD             00564100
&XMFSCK               SETC  'COMPLETE'  COMPLETE CHECKING               00564200
.ZG379E               ANOP  ,                                           00564300
.********************************************************************   00564400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00564500
.********************************************************************   00564600
                      ACTR  10000                                       00564700
.*-------------------------------------------------------------------   00564800
.***AG.MF03 MF=(SLE)                                                    00564900
                      AIF   ('&XMF' EQ 'L').ZGMFX                       00565000
.*------------------------------------------------------------------    00565100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00565200
&XREQUEST             SETC  ''          INITIALIZE XVARIABLE            00565300
.*-------------------------------------------------------------------   00565400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00565500
.ZG3                  ANOP  ,                                           00565600
                      AIF   (K'&REQUEST(1) LE 0).ZG3A                   00565700
&ZTLC                 SETC 'READ'                                       00565800
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG4              00565900
&XREQUEST             SETC  'READ'      SET KEYWORD                     00566000
                      AIF   (N'&REQUEST LE 1).ZG3A  CK NUM              00566100
&ZMS                  SETC  '"REQUEST='                                 00566200
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00566300
&ZMS                  SETC  '&ZMS "REQUEST"'                            00566400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00566500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00566600
.ZG3A                 ANOP  ,                                           00566700
.*------------------------------------------------------------------    00566800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00567000
.ZG3A0                AIF   (K'&TYPE LE 0).ZG3A1  OK                    00567100
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00567200
.ZG3A1                AIF   (K'&RESTOKEN LE 0).ZG3A2  OK                00567300
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00567400
.ZG3A2                AIF   (K'&EXTRESTOKEN LE 0).ZG3A3  OK             00567500
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00567600
.ZG3A3                AIF   (K'&ENTRYTYPE LE 0).ZG3A4  OK               00567700
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00567800
.ZG3A4                AIF   (K'&ELEMNUM LE 0).ZG3A5  OK                 00567900
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00568000
.ZG3A5                AIF   (K'&LISTLIMIT LE 0).ZG3A6  OK               00568100
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00568200
.ZG3A6                AIF   (K'&LISTDESC LE 0).ZG3A7  OK                00568300
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00568400
.ZG3A7                AIF   (K'&LISTKEY LE 0).ZG3A8  OK                 00568500
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00568600
.ZG3A8                AIF   (K'&MAXLISTKEY LE 0).ZG3A9  OK              00568700
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00568800
.ZG3A9                AIF   (K'&SETCURSOR LE 0).ZG3A10  OK              00568900
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00569000
.ZG3A10               AIF   (K'&MOVETOLIST LE 0).ZG3A11  OK             00569100
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00569200
.ZG3A11               AIF   (K'&MOVETOKEY LE 0).ZG3A12  OK              00569300
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00569400
.ZG3A12               AIF   (K'&MOVETOPOS LE 0).ZG3A13  OK              00569500
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00569600
.ZG3A13               AIF   (K'&DATAOPER LE 0).ZG3A14  OK               00569700
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00569800
.ZG3A14               AIF   (K'&LISTTYPE LE 0).ZG3A15  OK               00569900
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00570000
.ZG3A15               AIF   (K'&FIRSTELEM LE 0).ZG3A16  OK              00570100
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00570200
.ZG3A16               AIF   (K'&LASTELEM LE 0).ZG3A17  OK               00570300
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00570400
.ZG3A17               AIF   (K'&ACTION LE 0).ZG3A18  OK                 00570500
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00570600
.ZG3A18               AIF   (K'&VECTORINDEX LE 0).ZG3A19  OK            00570700
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00570800
.ZG3A19               AIF   (K'&DRIVEEXIT LE 0).ZG3A20  OK              00570900
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00571000
.ZG3A20               AIF   (K'&UNC LE 0).ZG3A21  OK                    00571100
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00571200
.ZG3A21               AIF   (K'&STARTINDEX LE 0).ZG3A22  OK             00571300
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00571400
.ZG3A22               AIF   (K'&ENDINDEX LE 0).ZG3A23  OK               00571500
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00571600
.ZG3A23               AIF   (K'&MOSVECTOR LE 0).ZG3A24  OK              00571700
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00571800
.ZG3A24               AIF   (K'&ZCVAL LE 0).ZG3A25  OK                  00571900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00572000
                      AIF  (K'&ZCVAL LE 160).ZG3A25A                    00572100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00572200
&ZCVAL                SETC '&ZCVAL....'                                 00572300
.ZG3A25A              ANOP                                              00572400
&ZMS                  SETC  '"REQUEST'                                  00572500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00572600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00572700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00572800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00572900
.ZG3A25               ANOP  ,                                           00573000
.*-------------------------------------------------------------------   00573100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00573200
.ZG4                  ANOP  ,                                           00573300
&ZTLC                 SETC 'READ_LIST'                                  00573400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG11             00573500
&XREQUEST             SETC  'READ_LIST'         SET KEYWORD             00573600
                      AIF   (N'&REQUEST LE 1).ZG4A  CK NUM              00573700
&ZMS                  SETC  '"REQUEST='                                 00573800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00573900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00574000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00574100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00574200
.ZG4A                 ANOP  ,                                           00574300
.*------------------------------------------------------------------    00574400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00574500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00574600
.ZG4A0                AIF   (K'&RESTOKEN LE 0).ZG4A1  OK                00574700
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00574800
.ZG4A1                AIF   (K'&EXTRESTOKEN LE 0).ZG4A2  OK             00574900
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00575000
.ZG4A2                AIF   (K'&ENTRYTYPE LE 0).ZG4A3  OK               00575100
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00575200
.ZG4A3                AIF   (K'&ELEMNUM LE 0).ZG4A4  OK                 00575300
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00575400
.ZG4A4                AIF   (K'&LISTLIMIT LE 0).ZG4A5  OK               00575500
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00575600
.ZG4A5                AIF   (K'&LISTDESC LE 0).ZG4A6  OK                00575700
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00575800
.ZG4A6                AIF   (K'&LISTKEY LE 0).ZG4A7  OK                 00575900
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00576000
.ZG4A7                AIF   (K'&MAXLISTKEY LE 0).ZG4A8  OK              00576100
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00576200
.ZG4A8                AIF   (K'&SETCURSOR LE 0).ZG4A9  OK               00576300
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00576400
.ZG4A9                AIF   (K'&MOVETOLIST LE 0).ZG4A10  OK             00576500
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00576600
.ZG4A10               AIF   (K'&MOVETOKEY LE 0).ZG4A11  OK              00576700
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00576800
.ZG4A11               AIF   (K'&MOVETOPOS LE 0).ZG4A12  OK              00576900
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00577000
.ZG4A12               AIF   (K'&DATAOPER LE 0).ZG4A13  OK               00577100
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00577200
.ZG4A13               AIF   (K'&LISTTYPE LE 0).ZG4A14  OK               00577300
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00577400
.ZG4A14               AIF   (K'&FIRSTELEM LE 0).ZG4A15  OK              00577500
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00577600
.ZG4A15               AIF   (K'&LASTELEM LE 0).ZG4A16  OK               00577700
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00577800
.ZG4A16               AIF   (K'&ACTION LE 0).ZG4A17  OK                 00577900
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00578000
.ZG4A17               AIF   (K'&VECTORINDEX LE 0).ZG4A18  OK            00578100
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00578200
.ZG4A18               AIF   (K'&DRIVEEXIT LE 0).ZG4A19  OK              00578300
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00578400
.ZG4A19               AIF   (K'&UNC LE 0).ZG4A20  OK                    00578500
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00578600
.ZG4A20               AIF   (K'&STARTINDEX LE 0).ZG4A21  OK             00578700
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00578800
.ZG4A21               AIF   (K'&ENDINDEX LE 0).ZG4A22  OK               00578900
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00579000
.ZG4A22               AIF   (K'&MOSVECTOR LE 0).ZG4A23  OK              00579100
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00579200
.ZG4A23               AIF   (K'&ZCVAL LE 0).ZG4A24  OK                  00579300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00579400
                      AIF  (K'&ZCVAL LE 160).ZG4A24A                    00579500
&ZCVAL                SETC '&ZCVAL'(1,160)                              00579600
&ZCVAL                SETC '&ZCVAL....'                                 00579700
.ZG4A24A              ANOP                                              00579800
&ZMS                  SETC  '"REQUEST'                                  00579900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00580000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00580100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00580200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00580300
.ZG4A24               ANOP  ,                                           00580400
.*-------------------------------------------------------------------   00580500
.***AG.KKWRD07 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00580600
&ZI                   SETA  0           XVARIABLE ARRAY INDEX           00580700
&ZJ                   SETA  0           SUBLIST INDEX                   00580800
.ZG6A                 ANOP  ,                                           00580900
&ZJ                   SETA  &ZJ+1       NEXT SUBLIST                    00581000
                      AIF   (&ZJ GT N'&TYPE).ZG6C  DONE                 00581100
                      AIF   (K'&TYPE(&ZJ) LE 0).ZG6A  NULL              00581200
&ZI                   SETA  &ZI+1       NEXT ARRAY ENTRY                00581300
&XTYPE(&ZI)   SETC  ''                  NULL ENTRY                      00581400
&XTYPE(&ZI+1) SETC  ''                  NULL AT ARRAY END               00581500
.ZG7B  AIF   ('&TYPE(&ZJ)' NE 'ENTDATA').ZG8B                           00581600
&XTYPE(&ZI)   SETC  'ENTDATA'           SET KEYWORD                     00581700
.ZG8B  AIF   ('&TYPE(&ZJ)' NE 'ADJDATA').ZG9B                           00581800
&XTYPE(&ZI)   SETC  'ADJDATA'           SET KEYWORD                     00581900
.ZG9B  AIF   ('&TYPE(&ZJ)' NE 'ECONTROLS').ZG10B                        00582000
&XTYPE(&ZI)   SETC  'ECONTROLS'         SET KEYWORD                     00582100
.ZG10B                AIF   ('&XTYPE(&ZI)' NE '').ZG6A                  00582200
&ZI                   SETA  &ZI-1       BACKUP ARRAY                    00582300
&ZMS                  SETC  '"TYPE='                                    00582400
&ZMS                  SETC  '&ZMS.&TYPE"'                               00582500
&ZMS                  SETC  '&ZMS ARGUMENT &ZJ'                         00582600
&ZMS                  SETC  '&ZMS IS AN UNKNOWN KEYWORD. '              00582700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00582800
&ZMS                  SETC  '&ZMS "ENTDATA",'                           00582900
&ZMS                  SETC  '&ZMS "ADJDATA",'                           00583000
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      00583100
                      MNOTE 8,' &ZMS '                                  00583200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00583300
                      AGO   .ZG6A                                       00583400
.*-------------------------------------------------------------------   00583500
.***AG.KKWRD09 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00583600
.ZG6C                 AIF   (&ZI GT 0).ZG6D     VALID                   00583700
&ZXTYPE               SETC  ''          RESET IN/OUTPUT                 00583800
&XTYPE(1)  SETC  'ENTDATA'              SET DEFAULT KEYWORD             00583900
&XTYPE(2)  SETC  ''   NULL AT ARRAY END                                 00584000
&ZMS                  SETC  'THE'                                       00584100
&ZMS                  SETC  '&ZMS "TYPE" KEY AND ITS'                   00584200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00584300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00584400
&ZMS                  SETC  '&ZMS "ENTDATA",'                           00584500
&ZMS                  SETC  '&ZMS "ADJDATA",'                           00584600
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      00584700
                      MNOTE 8,' &ZMS '                                  00584800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00584900
.ZG6D                 ANOP  ,                                           00585000
.*-------------------------------------------------------------------   00585100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00585200
.ZG11                 ANOP  ,                                           00585300
&ZTLC                 SETC 'READ_MULT'                                  00585400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG22             00585500
&XREQUEST             SETC  'READ_MULT'         SET KEYWORD             00585600
                      AIF   (N'&REQUEST LE 1).ZG11A  CK NUM             00585700
&ZMS                  SETC  '"REQUEST='                                 00585800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00585900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00586000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00586100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00586200
.ZG11A                ANOP  ,                                           00586300
.*------------------------------------------------------------------    00586400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00586500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00586600
.ZG11A0               AIF   (K'&ENTRYTYPE LE 0).ZG11A1  OK              00586700
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00586800
.ZG11A1               AIF   (K'&ELEMNUM LE 0).ZG11A2  OK                00586900
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00587000
.ZG11A2               AIF   (K'&LISTLIMIT LE 0).ZG11A3  OK              00587100
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00587200
.ZG11A3               AIF   (K'&LISTDESC LE 0).ZG11A4  OK               00587300
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00587400
.ZG11A4               AIF   (K'&LISTKEY LE 0).ZG11A5  OK                00587500
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00587600
.ZG11A5               AIF   (K'&MAXLISTKEY LE 0).ZG11A6  OK             00587700
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00587800
.ZG11A6               AIF   (K'&SETCURSOR LE 0).ZG11A7  OK              00587900
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00588000
.ZG11A7               AIF   (K'&MOVETOLIST LE 0).ZG11A8  OK             00588100
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00588200
.ZG11A8               AIF   (K'&MOVETOKEY LE 0).ZG11A9  OK              00588300
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00588400
.ZG11A9               AIF   (K'&MOVETOPOS LE 0).ZG11A10  OK             00588500
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00588600
.ZG11A10              AIF   (K'&DATAOPER LE 0).ZG11A11  OK              00588700
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00588800
.ZG11A11              AIF   (K'&LISTTYPE LE 0).ZG11A12  OK              00588900
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00589000
.ZG11A12              AIF   (K'&FIRSTELEM LE 0).ZG11A13  OK             00589100
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00589200
.ZG11A13              AIF   (K'&LASTELEM LE 0).ZG11A14  OK              00589300
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00589400
.ZG11A14              AIF   (K'&ACTION LE 0).ZG11A15  OK                00589500
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00589600
.ZG11A15              AIF   (K'&VECTORINDEX LE 0).ZG11A16  OK           00589700
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00589800
.ZG11A16              AIF   (K'&DRIVEEXIT LE 0).ZG11A17  OK             00589900
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00590000
.ZG11A17              AIF   (K'&UNC LE 0).ZG11A18  OK                   00590100
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00590200
.ZG11A18              AIF   (K'&STARTINDEX LE 0).ZG11A19  OK            00590300
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00590400
.ZG11A19              AIF   (K'&ENDINDEX LE 0).ZG11A20  OK              00590500
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00590600
.ZG11A20              AIF   (K'&MOSVECTOR LE 0).ZG11A21  OK             00590700
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00590800
.ZG11A21              AIF   (K'&ZCVAL LE 0).ZG11A22  OK                 00590900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00591000
                      AIF  (K'&ZCVAL LE 160).ZG11A22A                   00591100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00591200
&ZCVAL                SETC '&ZCVAL....'                                 00591300
.ZG11A22A             ANOP                                              00591400
&ZMS                  SETC  '"REQUEST'                                  00591500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00591600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00591700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00591800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00591900
.ZG11A22              ANOP  ,                                           00592000
.*-------------------------------------------------------------------   00592100
.***AG.KKWRD07 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00592200
&ZI                   SETA  0           XVARIABLE ARRAY INDEX           00592300
&ZJ                   SETA  0           SUBLIST INDEX                   00592400
.ZG13A                ANOP  ,                                           00592500
&ZJ                   SETA  &ZJ+1       NEXT SUBLIST                    00592600
                      AIF   (&ZJ GT N'&TYPE).ZG13C  DONE                00592700
                      AIF   (K'&TYPE(&ZJ) LE 0).ZG13A  NULL             00592800
&ZI                   SETA  &ZI+1       NEXT ARRAY ENTRY                00592900
&XTYPE(&ZI)   SETC  ''                  NULL ENTRY                      00593000
&XTYPE(&ZI+1) SETC  ''                  NULL AT ARRAY END               00593100
.ZG14B  AIF   ('&TYPE(&ZJ)' NE 'ENTDATA').ZG15B                         00593200
&XTYPE(&ZI)   SETC  'ENTDATA'           SET KEYWORD                     00593300
.ZG15B  AIF   ('&TYPE(&ZJ)' NE 'ADJDATA').ZG16B                         00593400
&XTYPE(&ZI)   SETC  'ADJDATA'           SET KEYWORD                     00593500
.ZG16B  AIF   ('&TYPE(&ZJ)' NE 'ECONTROLS').ZG17B                       00593600
&XTYPE(&ZI)   SETC  'ECONTROLS'         SET KEYWORD                     00593700
.ZG17B                AIF   ('&XTYPE(&ZI)' NE '').ZG13A                 00593800
&ZI                   SETA  &ZI-1       BACKUP ARRAY                    00593900
&ZMS                  SETC  '"TYPE='                                    00594000
&ZMS                  SETC  '&ZMS.&TYPE"'                               00594100
&ZMS                  SETC  '&ZMS ARGUMENT &ZJ'                         00594200
&ZMS                  SETC  '&ZMS IS AN UNKNOWN KEYWORD. '              00594300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00594400
&ZMS                  SETC  '&ZMS "ENTDATA",'                           00594500
&ZMS                  SETC  '&ZMS "ADJDATA",'                           00594600
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      00594700
                      MNOTE 8,' &ZMS '                                  00594800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00594900
                      AGO   .ZG13A                                      00595000
.*-------------------------------------------------------------------   00595100
.***AG.KKWRD09 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00595200
.ZG13C                AIF   (&ZI GT 0).ZG13D    VALID                   00595300
&ZXTYPE               SETC  ''          RESET IN/OUTPUT                 00595400
&XTYPE(1)  SETC  'ENTDATA'              SET DEFAULT KEYWORD             00595500
&XTYPE(2)  SETC  ''   NULL AT ARRAY END                                 00595600
&ZMS                  SETC  'THE'                                       00595700
&ZMS                  SETC  '&ZMS "TYPE" KEY AND ITS'                   00595800
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00595900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00596000
&ZMS                  SETC  '&ZMS "ENTDATA",'                           00596100
&ZMS                  SETC  '&ZMS "ADJDATA",'                           00596200
&ZMS                  SETC  '&ZMS OR "ECONTROLS".'                      00596300
                      MNOTE 8,' &ZMS '                                  00596400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00596500
.ZG13D                ANOP  ,                                           00596600
.*----------------------------------------------------------------***   00596700
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00596800
&XRESTARTTOKEN        SETC  ''          INITIALIZE XVARIABLE            00596900
                      AIF   (K'&RESTOKEN LE 0).ZG19C                    00597000
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00597100
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET XVARIABLE                   00597200
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   00597300
&XRESTOKEN            SETC  '&RESTOKEN(1)'      SET XVARIABLE PARM      00597400
                      AIF   (N'&RESTOKEN GT 1).ZG19A                    00597500
&XRESTOKEN            SETC  '&RESTOKEN'         SET XVARIABLE PARM      00597600
.ZG19A                AIF   (N'&RESTOKEN LE 1).ZG19B  CK NUM            00597700
&ZMS                  SETC  '"RESTOKEN='                                00597800
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           00597900
&ZMS                  SETC  '&ZMS "RESTOKEN"'                           00598000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00598100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00598200
.ZG19B                AIF   (K'&XRESTOKEN GT 0).ZG19C  ONE PARM         00598300
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 00598400
&ZXRESTOKEN           SETC  ''          RESET IN/OUTPUT                 00598500
&ZMS                  SETC  'WHEN "READ_MULT" IS SPECIFIED'             00598600
&ZMS                  SETC  '&ZMS , "RESTOKEN" KEY AND ITS'             00598700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00598800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00598900
.ZG19C                ANOP  ,                                           00599000
.*----------------------------------------------------------------***   00599100
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00599200
                      AIF   (K'&EXTRESTOKEN LE 0).ZG20D  NO ME KEY      00599300
                      AIF   (N'&EXTRESTOKEN LE 1).ZG20A  CK NUM         00599400
&ZMS                  SETC  '"EXTRESTOKEN='                             00599500
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        00599600
&ZMS                  SETC  '&ZMS "EXTRESTOKEN"'                        00599700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00599800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00599900
.ZG20A                AIF   (K'&XRESTARTTOKEN LE 0).ZG20B               00600000
&ZMS                  SETC  '"EXTRESTOKEN'                              00600100
&ZMS                  SETC  '&ZMS.=&EXTRESTOKEN"'                       00600200
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00600300
&ZMS                  SETC  '&ZMS "&XRESTARTTOKEN"'                     00600400
                      MNOTE 8,' &ZMS KEY.'                              00600500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00600600
                      AGO   .ZG20D                                      00600700
.*                                                                      00600800
.ZG20B                ANOP  ,                                           00600900
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00601000
&XRESTARTTOKEN        SETC  'EXTRESTOKEN'       SET XVARIABLE           00601100
&ZXEXTRESTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00601200
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN(1)'   SET XVARIABLE PARM      00601300
                      AIF   (N'&EXTRESTOKEN GT 1).ZG20C                 00601400
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN'      SET XVARIABLE PARM      00601500
.ZG20C                AIF   (K'&XEXTRESTOKEN GT 0).ZG20D  ONE PARM      00601600
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 00601700
&ZXEXTRESTOKEN        SETC  ''          RESET IN/OUTPUT                 00601800
&ZMS                  SETC  'WHEN "READ_MULT" IS SPECIFIED'             00601900
&ZMS                  SETC  '&ZMS , "EXTRESTOKEN" KEY AND ITS'          00602000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00602100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00602200
.ZG20D                ANOP  ,                                           00602300
.*------------------------------------------------------------------    00602400
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00602500
                      AIF   (K'&XRESTARTTOKEN GT 0).ZG21B               00602600
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00602700
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET DEFAULT                     00602800
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   00602900
&XRESTOKEN            SETC  'NO_RESTOKEN'       SET DEFAULT PARM        00603000
.ZG21B                ANOP  ,                                           00603100
.*-------------------------------------------------------------------   00603200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00603300
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG21R  NOT I/O      00603400
         AIF   ('&XEXTRESTOKEN' EQ 'NO_RESTOKEN').ZG21R                 00603500
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG21R         00603600
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        00603700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                00603800
                      AIF   (K'&ZCGPR GT 2).ZG21Q                       00603900
                      AIF   ('&ZCGPR' EQ '0').ZG21Q                     00604000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00604100
                      AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME   00604200
.ZG21P                ANOP  ,                                           00604300
                      AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC        00604400
                      AIF   ('&ZCGPR' LT '2').ZG21Q                     00604500
                      AIF   ('&ZCGPR' LE '12').ZG21R                    00604600
.ZG21Q                ANOP  ,                                           00604700
&ZMS                  SETC  '"EXTRESTOKEN='                             00604800
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        00604900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00605000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00605100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00605200
.ZG21R                ANOP  ,                                           00605300
.*-------------------------------------------------------------------   00605400
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00605500
.ZG19ZY  AIF    ('&XRESTARTTOKEN' NE 'RESTOKEN').ZG20ZY                 00605600
.*-------------------------------------------------------------------   00605700
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00605800
                      AIF   (K'&ZXRESTOKEN LE 0).ZG19R  NOT I/O         00605900
         AIF   ('&XRESTOKEN' EQ 'NO_RESTOKEN').ZG19R                    00606000
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZG19R            00606100
&ZCGPR                SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)              00606200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                00606300
                      AIF   (K'&ZCGPR GT 2).ZG19Q                       00606400
                      AIF   ('&ZCGPR' EQ '0').ZG19Q                     00606500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00606600
                      AIF   (T'&ZCGPR NE 'N').ZG19Q  INVALID REG NAME   00606700
.ZG19P                ANOP  ,                                           00606800
                      AIF   (T'&ZCGPR NE 'N').ZG19R  NON NUMERIC        00606900
                      AIF   ('&ZCGPR' LT '2').ZG19Q                     00607000
                      AIF   ('&ZCGPR' LE '12').ZG19R                    00607100
.ZG19Q                ANOP  ,                                           00607200
&ZMS                  SETC  '"RESTOKEN='                                00607300
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           00607400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00607500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00607600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00607700
.ZG19R                ANOP  ,                                           00607800
.*-------------------------------------------------------------------   00607900
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00608000
.ZG20ZY  AIF    ('&XRESTARTTOKEN' NE 'EXTRESTOKEN').ZG21ZY              00608100
.*-------------------------------------------------------------------   00608200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00608300
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG20R  NOT I/O      00608400
         AIF   ('&XEXTRESTOKEN' EQ 'NO_EXTRESTOKEN').ZG20R              00608500
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG20R         00608600
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        00608700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                00608800
                      AIF   (K'&ZCGPR GT 2).ZG20Q                       00608900
                      AIF   ('&ZCGPR' EQ '0').ZG20Q                     00609000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00609100
                      AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME   00609200
.ZG20P                ANOP  ,                                           00609300
                      AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC        00609400
                      AIF   ('&ZCGPR' LT '2').ZG20Q                     00609500
                      AIF   ('&ZCGPR' LE '12').ZG20R                    00609600
.ZG20Q                ANOP  ,                                           00609700
&ZMS                  SETC  '"EXTRESTOKEN='                             00609800
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        00609900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00610000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00610100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00610200
.ZG20R                ANOP  ,                                           00610300
.*-------------------------------------------------------------------   00610400
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00610500
.ZG21ZY               ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00610600
.*-------------------------------------------------------------------   00610700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00610800
.ZG22                 ANOP  ,                                           00610900
&ZTLC                 SETC 'READ_LCONTROLS'                             00611000
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG23             00611100
&XREQUEST             SETC  'READ_LCONTROLS'    SET KEYWORD             00611200
                      AIF   (N'&REQUEST LE 1).ZG22A  CK NUM             00611300
&ZMS                  SETC  '"REQUEST='                                 00611400
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00611500
&ZMS                  SETC  '&ZMS "REQUEST"'                            00611600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00611700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00611800
.ZG22A                ANOP  ,                                           00611900
.*------------------------------------------------------------------    00612000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00612100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00612200
.ZG22A0               AIF   (K'&TYPE LE 0).ZG22A1  OK                   00612300
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00612400
.ZG22A1               AIF   (K'&RESTOKEN LE 0).ZG22A2  OK               00612500
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00612600
.ZG22A2               AIF   (K'&EXTRESTOKEN LE 0).ZG22A3  OK            00612700
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00612800
.ZG22A3               AIF   (K'&ENTRYTYPE LE 0).ZG22A4  OK              00612900
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00613000
.ZG22A4               AIF   (K'&ELEMNUM LE 0).ZG22A5  OK                00613100
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00613200
.ZG22A5               AIF   (K'&LISTLIMIT LE 0).ZG22A6  OK              00613300
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00613400
.ZG22A6               AIF   (K'&LISTDESC LE 0).ZG22A7  OK               00613500
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00613600
.ZG22A7               AIF   (K'&LISTKEY LE 0).ZG22A8  OK                00613700
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00613800
.ZG22A8               AIF   (K'&MAXLISTKEY LE 0).ZG22A9  OK             00613900
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00614000
.ZG22A9               AIF   (K'&SETCURSOR LE 0).ZG22A10  OK             00614100
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00614200
.ZG22A10              AIF   (K'&MOVETOLIST LE 0).ZG22A11  OK            00614300
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00614400
.ZG22A11              AIF   (K'&MOVETOKEY LE 0).ZG22A12  OK             00614500
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00614600
.ZG22A12              AIF   (K'&MOVETOPOS LE 0).ZG22A13  OK             00614700
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00614800
.ZG22A13              AIF   (K'&DATAOPER LE 0).ZG22A14  OK              00614900
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00615000
.ZG22A14              AIF   (K'&LISTTYPE LE 0).ZG22A15  OK              00615100
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00615200
.ZG22A15              AIF   (K'&FIRSTELEM LE 0).ZG22A16  OK             00615300
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00615400
.ZG22A16              AIF   (K'&LASTELEM LE 0).ZG22A17  OK              00615500
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00615600
.ZG22A17              AIF   (K'&ACTION LE 0).ZG22A18  OK                00615700
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00615800
.ZG22A18              AIF   (K'&VECTORINDEX LE 0).ZG22A19  OK           00615900
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00616000
.ZG22A19              AIF   (K'&DRIVEEXIT LE 0).ZG22A20  OK             00616100
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00616200
.ZG22A20              AIF   (K'&UNC LE 0).ZG22A21  OK                   00616300
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00616400
.ZG22A21              AIF   (K'&STARTINDEX LE 0).ZG22A22  OK            00616500
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00616600
.ZG22A22              AIF   (K'&ENDINDEX LE 0).ZG22A23  OK              00616700
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00616800
.ZG22A23              AIF   (K'&MOSVECTOR LE 0).ZG22A24  OK             00616900
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00617000
.ZG22A24              AIF   (K'&ZCVAL LE 0).ZG22A25  OK                 00617100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00617200
                      AIF  (K'&ZCVAL LE 160).ZG22A25A                   00617300
&ZCVAL                SETC '&ZCVAL'(1,160)                              00617400
&ZCVAL                SETC '&ZCVAL....'                                 00617500
.ZG22A25A             ANOP                                              00617600
&ZMS                  SETC  '"REQUEST'                                  00617700
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00617800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00617900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00618000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00618100
.ZG22A25              ANOP  ,                                           00618200
.*-------------------------------------------------------------------   00618300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00618400
.ZG23                 ANOP  ,                                           00618500
&ZTLC                 SETC 'READ_EQCONTROLS'                            00618600
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG24             00618700
&XREQUEST             SETC  'READ_EQCONTROLS'   SET KEYWORD             00618800
                      AIF   (N'&REQUEST LE 1).ZG23A  CK NUM             00618900
&ZMS                  SETC  '"REQUEST='                                 00619000
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00619100
&ZMS                  SETC  '&ZMS "REQUEST"'                            00619200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00619300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00619400
.ZG23A                ANOP  ,                                           00619500
.*------------------------------------------------------------------    00619600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00619700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00619800
.ZG23A0               AIF   (K'&TYPE LE 0).ZG23A1  OK                   00619900
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00620000
.ZG23A1               AIF   (K'&RESTOKEN LE 0).ZG23A2  OK               00620100
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00620200
.ZG23A2               AIF   (K'&EXTRESTOKEN LE 0).ZG23A3  OK            00620300
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00620400
.ZG23A3               AIF   (K'&ENTRYTYPE LE 0).ZG23A4  OK              00620500
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00620600
.ZG23A4               AIF   (K'&ELEMNUM LE 0).ZG23A5  OK                00620700
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00620800
.ZG23A5               AIF   (K'&LISTLIMIT LE 0).ZG23A6  OK              00620900
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00621000
.ZG23A6               AIF   (K'&LISTDESC LE 0).ZG23A7  OK               00621100
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00621200
.ZG23A7               AIF   (K'&LISTKEY LE 0).ZG23A8  OK                00621300
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00621400
.ZG23A8               AIF   (K'&MAXLISTKEY LE 0).ZG23A9  OK             00621500
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00621600
.ZG23A9               AIF   (K'&SETCURSOR LE 0).ZG23A10  OK             00621700
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00621800
.ZG23A10              AIF   (K'&MOVETOLIST LE 0).ZG23A11  OK            00621900
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00622000
.ZG23A11              AIF   (K'&MOVETOKEY LE 0).ZG23A12  OK             00622100
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00622200
.ZG23A12              AIF   (K'&MOVETOPOS LE 0).ZG23A13  OK             00622300
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00622400
.ZG23A13              AIF   (K'&DATAOPER LE 0).ZG23A14  OK              00622500
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00622600
.ZG23A14              AIF   (K'&LISTTYPE LE 0).ZG23A15  OK              00622700
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00622800
.ZG23A15              AIF   (K'&FIRSTELEM LE 0).ZG23A16  OK             00622900
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00623000
.ZG23A16              AIF   (K'&LASTELEM LE 0).ZG23A17  OK              00623100
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00623200
.ZG23A17              AIF   (K'&ACTION LE 0).ZG23A18  OK                00623300
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00623400
.ZG23A18              AIF   (K'&VECTORINDEX LE 0).ZG23A19  OK           00623500
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00623600
.ZG23A19              AIF   (K'&DRIVEEXIT LE 0).ZG23A20  OK             00623700
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00623800
.ZG23A20              AIF   (K'&UNC LE 0).ZG23A21  OK                   00623900
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00624000
.ZG23A21              AIF   (K'&STARTINDEX LE 0).ZG23A22  OK            00624100
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00624200
.ZG23A22              AIF   (K'&ENDINDEX LE 0).ZG23A23  OK              00624300
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00624400
.ZG23A23              AIF   (K'&MOSVECTOR LE 0).ZG23A24  OK             00624500
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00624600
.ZG23A24              AIF   (K'&ZCVAL LE 0).ZG23A25  OK                 00624700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00624800
                      AIF  (K'&ZCVAL LE 160).ZG23A25A                   00624900
&ZCVAL                SETC '&ZCVAL'(1,160)                              00625000
&ZCVAL                SETC '&ZCVAL....'                                 00625100
.ZG23A25A             ANOP                                              00625200
&ZMS                  SETC  '"REQUEST'                                  00625300
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00625400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00625500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00625600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00625700
.ZG23A25              ANOP  ,                                           00625800
.*-------------------------------------------------------------------   00625900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00626000
.ZG24                 ANOP  ,                                           00626100
&ZTLC                 SETC 'READ_EMCONTROLS'                            00626200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG25             00626300
&XREQUEST             SETC  'READ_EMCONTROLS'   SET KEYWORD             00626400
                      AIF   (N'&REQUEST LE 1).ZG24A  CK NUM             00626500
&ZMS                  SETC  '"REQUEST='                                 00626600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00626700
&ZMS                  SETC  '&ZMS "REQUEST"'                            00626800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00626900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00627000
.ZG24A                ANOP  ,                                           00627100
.*------------------------------------------------------------------    00627200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00627300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00627400
.ZG24A0               AIF   (K'&TYPE LE 0).ZG24A1  OK                   00627500
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00627600
.ZG24A1               AIF   (K'&RESTOKEN LE 0).ZG24A2  OK               00627700
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00627800
.ZG24A2               AIF   (K'&EXTRESTOKEN LE 0).ZG24A3  OK            00627900
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00628000
.ZG24A3               AIF   (K'&ENTRYTYPE LE 0).ZG24A4  OK              00628100
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00628200
.ZG24A4               AIF   (K'&ELEMNUM LE 0).ZG24A5  OK                00628300
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00628400
.ZG24A5               AIF   (K'&LISTLIMIT LE 0).ZG24A6  OK              00628500
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00628600
.ZG24A6               AIF   (K'&LISTDESC LE 0).ZG24A7  OK               00628700
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00628800
.ZG24A7               AIF   (K'&LISTKEY LE 0).ZG24A8  OK                00628900
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00629000
.ZG24A8               AIF   (K'&MAXLISTKEY LE 0).ZG24A9  OK             00629100
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00629200
.ZG24A9               AIF   (K'&SETCURSOR LE 0).ZG24A10  OK             00629300
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00629400
.ZG24A10              AIF   (K'&MOVETOLIST LE 0).ZG24A11  OK            00629500
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00629600
.ZG24A11              AIF   (K'&MOVETOKEY LE 0).ZG24A12  OK             00629700
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00629800
.ZG24A12              AIF   (K'&MOVETOPOS LE 0).ZG24A13  OK             00629900
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00630000
.ZG24A13              AIF   (K'&DATAOPER LE 0).ZG24A14  OK              00630100
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00630200
.ZG24A14              AIF   (K'&LISTTYPE LE 0).ZG24A15  OK              00630300
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00630400
.ZG24A15              AIF   (K'&FIRSTELEM LE 0).ZG24A16  OK             00630500
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00630600
.ZG24A16              AIF   (K'&LASTELEM LE 0).ZG24A17  OK              00630700
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00630800
.ZG24A17              AIF   (K'&ACTION LE 0).ZG24A18  OK                00630900
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00631000
.ZG24A18              AIF   (K'&VECTORINDEX LE 0).ZG24A19  OK           00631100
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00631200
.ZG24A19              AIF   (K'&DRIVEEXIT LE 0).ZG24A20  OK             00631300
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00631400
.ZG24A20              AIF   (K'&UNC LE 0).ZG24A21  OK                   00631500
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00631600
.ZG24A21              AIF   (K'&STARTINDEX LE 0).ZG24A22  OK            00631700
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00631800
.ZG24A22              AIF   (K'&ENDINDEX LE 0).ZG24A23  OK              00631900
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00632000
.ZG24A23              AIF   (K'&MOSVECTOR LE 0).ZG24A24  OK             00632100
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00632200
.ZG24A24              AIF   (K'&ZCVAL LE 0).ZG24A25  OK                 00632300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00632400
                      AIF  (K'&ZCVAL LE 160).ZG24A25A                   00632500
&ZCVAL                SETC '&ZCVAL'(1,160)                              00632600
&ZCVAL                SETC '&ZCVAL....'                                 00632700
.ZG24A25A             ANOP                                              00632800
&ZMS                  SETC  '"REQUEST'                                  00632900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00633000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00633100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00633200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00633300
.ZG24A25              ANOP  ,                                           00633400
.*-------------------------------------------------------------------   00633500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00633600
.ZG25                 ANOP  ,                                           00633700
&ZTLC                 SETC 'DEQ_EVENTQ'                                 00633800
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG26             00633900
&XREQUEST             SETC  'DEQ_EVENTQ'        SET KEYWORD             00634000
                      AIF   (N'&REQUEST LE 1).ZG25A  CK NUM             00634100
&ZMS                  SETC  '"REQUEST='                                 00634200
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00634300
&ZMS                  SETC  '&ZMS "REQUEST"'                            00634400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00634500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00634600
.ZG25A                ANOP  ,                                           00634700
.*------------------------------------------------------------------    00634800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00634900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00635000
.ZG25A0               AIF   (K'&TYPE LE 0).ZG25A1  OK                   00635100
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00635200
.ZG25A1               AIF   (K'&RESTOKEN LE 0).ZG25A2  OK               00635300
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00635400
.ZG25A2               AIF   (K'&EXTRESTOKEN LE 0).ZG25A3  OK            00635500
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00635600
.ZG25A3               AIF   (K'&ENTRYTYPE LE 0).ZG25A4  OK              00635700
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00635800
.ZG25A4               AIF   (K'&ELEMNUM LE 0).ZG25A5  OK                00635900
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00636000
.ZG25A5               AIF   (K'&LISTLIMIT LE 0).ZG25A6  OK              00636100
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00636200
.ZG25A6               AIF   (K'&LISTDESC LE 0).ZG25A7  OK               00636300
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00636400
.ZG25A7               AIF   (K'&LISTKEY LE 0).ZG25A8  OK                00636500
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00636600
.ZG25A8               AIF   (K'&MAXLISTKEY LE 0).ZG25A9  OK             00636700
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00636800
.ZG25A9               AIF   (K'&SETCURSOR LE 0).ZG25A10  OK             00636900
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00637000
.ZG25A10              AIF   (K'&MOVETOLIST LE 0).ZG25A11  OK            00637100
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00637200
.ZG25A11              AIF   (K'&MOVETOKEY LE 0).ZG25A12  OK             00637300
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00637400
.ZG25A12              AIF   (K'&MOVETOPOS LE 0).ZG25A13  OK             00637500
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00637600
.ZG25A13              AIF   (K'&DATAOPER LE 0).ZG25A14  OK              00637700
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00637800
.ZG25A14              AIF   (K'&LISTTYPE LE 0).ZG25A15  OK              00637900
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00638000
.ZG25A15              AIF   (K'&FIRSTELEM LE 0).ZG25A16  OK             00638100
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00638200
.ZG25A16              AIF   (K'&LASTELEM LE 0).ZG25A17  OK              00638300
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00638400
.ZG25A17              AIF   (K'&ACTION LE 0).ZG25A18  OK                00638500
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00638600
.ZG25A18              AIF   (K'&VECTORINDEX LE 0).ZG25A19  OK           00638700
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00638800
.ZG25A19              AIF   (K'&DRIVEEXIT LE 0).ZG25A20  OK             00638900
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00639000
.ZG25A20              AIF   (K'&UNC LE 0).ZG25A21  OK                   00639100
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00639200
.ZG25A21              AIF   (K'&STARTINDEX LE 0).ZG25A22  OK            00639300
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00639400
.ZG25A22              AIF   (K'&ENDINDEX LE 0).ZG25A23  OK              00639500
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00639600
.ZG25A23              AIF   (K'&MOSVECTOR LE 0).ZG25A24  OK             00639700
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00639800
.ZG25A24              AIF   (K'&ZCVAL LE 0).ZG25A25  OK                 00639900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00640000
                      AIF  (K'&ZCVAL LE 160).ZG25A25A                   00640100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00640200
&ZCVAL                SETC '&ZCVAL....'                                 00640300
.ZG25A25A             ANOP                                              00640400
&ZMS                  SETC  '"REQUEST'                                  00640500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00640600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00640700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00640800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00640900
.ZG25A25              ANOP  ,                                           00641000
.*-------------------------------------------------------------------   00641100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00641200
.ZG26                 ANOP  ,                                           00641300
&ZTLC                 SETC 'WRITE'                                      00641400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG36             00641500
&XREQUEST             SETC  'WRITE'     SET KEYWORD                     00641600
                      AIF   (N'&REQUEST LE 1).ZG26A  CK NUM             00641700
&ZMS                  SETC  '"REQUEST='                                 00641800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00641900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00642000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00642100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00642200
.ZG26A                ANOP  ,                                           00642300
.*------------------------------------------------------------------    00642400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00642500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00642600
.ZG26A0               AIF   (K'&TYPE LE 0).ZG26A1  OK                   00642700
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00642800
.ZG26A1               AIF   (K'&RESTOKEN LE 0).ZG26A2  OK               00642900
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00643000
.ZG26A2               AIF   (K'&EXTRESTOKEN LE 0).ZG26A3  OK            00643100
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00643200
.ZG26A3               AIF   (K'&LISTLIMIT LE 0).ZG26A4  OK              00643300
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00643400
.ZG26A4               AIF   (K'&LISTDESC LE 0).ZG26A5  OK               00643500
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00643600
.ZG26A5               AIF   (K'&LISTKEY LE 0).ZG26A6  OK                00643700
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00643800
.ZG26A6               AIF   (K'&MAXLISTKEY LE 0).ZG26A7  OK             00643900
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00644000
.ZG26A7               AIF   (K'&SETCURSOR LE 0).ZG26A8  OK              00644100
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00644200
.ZG26A8               AIF   (K'&MOVETOLIST LE 0).ZG26A9  OK             00644300
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00644400
.ZG26A9               AIF   (K'&MOVETOKEY LE 0).ZG26A10  OK             00644500
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00644600
.ZG26A10              AIF   (K'&MOVETOPOS LE 0).ZG26A11  OK             00644700
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00644800
.ZG26A11              AIF   (K'&DATAOPER LE 0).ZG26A12  OK              00644900
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00645000
.ZG26A12              AIF   (K'&LISTTYPE LE 0).ZG26A13  OK              00645100
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00645200
.ZG26A13              AIF   (K'&FIRSTELEM LE 0).ZG26A14  OK             00645300
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00645400
.ZG26A14              AIF   (K'&LASTELEM LE 0).ZG26A15  OK              00645500
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00645600
.ZG26A15              AIF   (K'&ACTION LE 0).ZG26A16  OK                00645700
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00645800
.ZG26A16              AIF   (K'&VECTORINDEX LE 0).ZG26A17  OK           00645900
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00646000
.ZG26A17              AIF   (K'&DRIVEEXIT LE 0).ZG26A18  OK             00646100
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00646200
.ZG26A18              AIF   (K'&UNC LE 0).ZG26A19  OK                   00646300
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00646400
.ZG26A19              AIF   (K'&STARTINDEX LE 0).ZG26A20  OK            00646500
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00646600
.ZG26A20              AIF   (K'&ENDINDEX LE 0).ZG26A21  OK              00646700
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00646800
.ZG26A21              AIF   (K'&MOSVECTOR LE 0).ZG26A22  OK             00646900
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00647000
.ZG26A22              AIF   (K'&ZCVAL LE 0).ZG26A23  OK                 00647100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00647200
                      AIF  (K'&ZCVAL LE 160).ZG26A23A                   00647300
&ZCVAL                SETC '&ZCVAL'(1,160)                              00647400
&ZCVAL                SETC '&ZCVAL....'                                 00647500
.ZG26A23A             ANOP                                              00647600
&ZMS                  SETC  '"REQUEST'                                  00647700
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00647800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00647900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00648000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00648100
.ZG26A23              ANOP  ,                                           00648200
.*----------------------------------------------------------------***   00648300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00648400
                      AIF   (N'&ENTRYTYPE LE 1).ZG28A  CK NUM           00648500
&ZMS                  SETC  '"ENTRYTYPE='                               00648600
&ZMS                  SETC  '&ZMS.&ENTRYTYPE"'                          00648700
&ZMS                  SETC  '&ZMS "ENTRYTYPE"'                          00648800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00648900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00649000
.ZG28A                ANOP  ,                                           00649100
.*-------------------------------------------------------------------   00649200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00649300
&XENTRYTYPE           SETC  ''          INITIALIZE XVARIABLE            00649400
.ZG29A   AIF   ('&ENTRYTYPE(1)' NE 'ANY').ZG30A                         00649500
&XENTRYTYPE           SETC  'ANY'       SET KEYWORD                     00649600
.*-------------------------------------------------------------------   00649700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00649800
.ZG30A   AIF   ('&ENTRYTYPE(1)' NE 'OLD').ZG31A                         00649900
&XENTRYTYPE           SETC  'OLD'       SET KEYWORD                     00650000
.*-------------------------------------------------------------------   00650100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00650200
.ZG31A   AIF   ('&ENTRYTYPE(1)' NE 'NEW').ZG32A                         00650300
&XENTRYTYPE           SETC  'NEW'       SET KEYWORD                     00650400
.*-------------------------------------------------------------------   00650500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00650600
.ZG32A                AIF   (K'&XENTRYTYPE GT 0).ZG32C  KEYWORD         00650700
                      AIF   (K'&ENTRYTYPE(1) LE 0).ZG32B                00650800
&ZMS                  SETC  '"ENTRYTYPE='                               00650900
&ZMS                  SETC  '&ZMS.&ENTRYTYPE"'                          00651000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00651100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00651200
&ZMS                  SETC  '&ZMS "ANY",'                               00651300
&ZMS                  SETC  '&ZMS "OLD",'                               00651400
&ZMS                  SETC  '&ZMS OR "NEW".'                            00651500
                      MNOTE 8,' &ZMS '                                  00651600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00651700
.ZG32B                ANOP  ,                                           00651800
&XENTRYTYPE           SETC  'ANY'       SET DEFAULT KEYWORD             00651900
.ZG32C                ANOP  ,                                           00652000
&ZXENTRYTYPE          SETC  'INPUT'     SET IN/OUTPUT                   00652100
.*----------------------------------------------------------------***   00652200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00652300
                      AIF   (N'&ELEMNUM LE 1).ZG34A  CK NUM             00652400
&ZMS                  SETC  '"ELEMNUM='                                 00652500
&ZMS                  SETC  '&ZMS.&ELEMNUM"'                            00652600
&ZMS                  SETC  '&ZMS "ELEMNUM"'                            00652700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00652800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00652900
.ZG34A                ANOP  ,                                           00653000
.*-------------------------------------------------------------------   00653100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00653200
&ZXELEMNUM            SETC  'INPUT'     SET IN/OUTPUT                   00653300
&XELEMNUM             SETC  'NO_ELEMNUM'                                00653400
                      AIF   (K'&ELEMNUM(1) LE 0).ZG34B  PARM            00653500
&XELEMNUM             SETC  '&ELEMNUM(1)'       SET XVARIABLE           00653600
                      AIF   (N'&ELEMNUM GT 1).ZG34B  MULTI              00653700
&XELEMNUM             SETC  '&ELEMNUM'  SET XVARIABLE                   00653800
.ZG34B                ANOP  ,                                           00653900
.*-------------------------------------------------------------------   00654000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00654100
                      AIF   (K'&ZXELEMNUM LE 0).ZG34R  NOT I/O          00654200
         AIF   ('&XELEMNUM' EQ 'NO_ELEMNUM').ZG34R                      00654300
                      AIF   ('&XELEMNUM'(1,1) NE '(').ZG34R             00654400
&ZCGPR                SETC  '&XELEMNUM'(2,K'&XELEMNUM-2)                00654500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                00654600
                      AIF   (K'&ZCGPR GT 2).ZG34Q                       00654700
                      AIF   ('&ZCGPR' EQ '0').ZG34Q                     00654800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00654900
                      AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME   00655000
.ZG34P                ANOP  ,                                           00655100
                      AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC        00655200
                      AIF   ('&ZCGPR' LT '2').ZG34Q                     00655300
                      AIF   ('&ZCGPR' LE '12').ZG34R                    00655400
.ZG34Q                ANOP  ,                                           00655500
&ZMS                  SETC  '"ELEMNUM='                                 00655600
&ZMS                  SETC  '&ZMS.&ELEMNUM"'                            00655700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00655800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00655900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00656000
.ZG34R                ANOP  ,                                           00656100
.*-------------------------------------------------------------------   00656200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00656300
.ZG36                 ANOP  ,                                           00656400
&ZTLC                 SETC 'WRITE_LCONTROLS'                            00656500
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG54             00656600
&XREQUEST             SETC  'WRITE_LCONTROLS'   SET KEYWORD             00656700
                      AIF   (N'&REQUEST LE 1).ZG36A  CK NUM             00656800
&ZMS                  SETC  '"REQUEST='                                 00656900
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00657000
&ZMS                  SETC  '&ZMS "REQUEST"'                            00657100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00657200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00657300
.ZG36A                ANOP  ,                                           00657400
.*------------------------------------------------------------------    00657500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00657600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00657700
.ZG36A0               AIF   (K'&TYPE LE 0).ZG36A1  OK                   00657800
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00657900
.ZG36A1               AIF   (K'&RESTOKEN LE 0).ZG36A2  OK               00658000
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00658100
.ZG36A2               AIF   (K'&EXTRESTOKEN LE 0).ZG36A3  OK            00658200
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00658300
.ZG36A3               AIF   (K'&ENTRYTYPE LE 0).ZG36A4  OK              00658400
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00658500
.ZG36A4               AIF   (K'&ELEMNUM LE 0).ZG36A5  OK                00658600
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00658700
.ZG36A5               AIF   (K'&MOVETOLIST LE 0).ZG36A6  OK             00658800
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00658900
.ZG36A6               AIF   (K'&MOVETOKEY LE 0).ZG36A7  OK              00659000
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00659100
.ZG36A7               AIF   (K'&MOVETOPOS LE 0).ZG36A8  OK              00659200
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00659300
.ZG36A8               AIF   (K'&DATAOPER LE 0).ZG36A9  OK               00659400
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00659500
.ZG36A9               AIF   (K'&LISTTYPE LE 0).ZG36A10  OK              00659600
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00659700
.ZG36A10              AIF   (K'&FIRSTELEM LE 0).ZG36A11  OK             00659800
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00659900
.ZG36A11              AIF   (K'&LASTELEM LE 0).ZG36A12  OK              00660000
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00660100
.ZG36A12              AIF   (K'&ACTION LE 0).ZG36A13  OK                00660200
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00660300
.ZG36A13              AIF   (K'&VECTORINDEX LE 0).ZG36A14  OK           00660400
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00660500
.ZG36A14              AIF   (K'&DRIVEEXIT LE 0).ZG36A15  OK             00660600
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00660700
.ZG36A15              AIF   (K'&UNC LE 0).ZG36A16  OK                   00660800
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00660900
.ZG36A16              AIF   (K'&STARTINDEX LE 0).ZG36A17  OK            00661000
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00661100
.ZG36A17              AIF   (K'&ENDINDEX LE 0).ZG36A18  OK              00661200
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00661300
.ZG36A18              AIF   (K'&MOSVECTOR LE 0).ZG36A19  OK             00661400
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00661500
.ZG36A19              AIF   (K'&ZCVAL LE 0).ZG36A20  OK                 00661600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00661700
                      AIF  (K'&ZCVAL LE 160).ZG36A20A                   00661800
&ZCVAL                SETC '&ZCVAL'(1,160)                              00661900
&ZCVAL                SETC '&ZCVAL....'                                 00662000
.ZG36A20A             ANOP                                              00662100
&ZMS                  SETC  '"REQUEST'                                  00662200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00662300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00662400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00662500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00662600
.ZG36A20              ANOP  ,                                           00662700
.*----------------------------------------------------------------***   00662800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00662900
                      AIF   (N'&LISTLIMIT LE 1).ZG38A  CK NUM           00663000
&ZMS                  SETC  '"LISTLIMIT='                               00663100
&ZMS                  SETC  '&ZMS.&LISTLIMIT"'                          00663200
&ZMS                  SETC  '&ZMS "LISTLIMIT"'                          00663300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00663400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00663500
.ZG38A                ANOP  ,                                           00663600
.*-------------------------------------------------------------------   00663700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00663800
&ZXLISTLIMIT          SETC  'INPUT'     SET IN/OUTPUT                   00663900
&XLISTLIMIT           SETC  'NO_LISTLIMIT'                              00664000
                      AIF   (K'&LISTLIMIT(1) LE 0).ZG38B  PARM          00664100
&XLISTLIMIT           SETC  '&LISTLIMIT(1)'     SET XVARIABLE           00664200
                      AIF   (N'&LISTLIMIT GT 1).ZG38B  MULTI            00664300
&XLISTLIMIT           SETC  '&LISTLIMIT'        SET XVARIABLE           00664400
.ZG38B                ANOP  ,                                           00664500
.*-------------------------------------------------------------------   00664600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00664700
                      AIF   (K'&ZXLISTLIMIT LE 0).ZG38R  NOT I/O        00664800
         AIF   ('&XLISTLIMIT' EQ 'NO_LISTLIMIT').ZG38R                  00664900
                      AIF   ('&XLISTLIMIT'(1,1) NE '(').ZG38R           00665000
&ZCGPR                SETC  '&XLISTLIMIT'(2,K'&XLISTLIMIT-2)            00665100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                00665200
                      AIF   (K'&ZCGPR GT 2).ZG38Q                       00665300
                      AIF   ('&ZCGPR' EQ '0').ZG38Q                     00665400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00665500
                      AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME   00665600
.ZG38P                ANOP  ,                                           00665700
                      AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC        00665800
                      AIF   ('&ZCGPR' LT '2').ZG38Q                     00665900
                      AIF   ('&ZCGPR' LE '12').ZG38R                    00666000
.ZG38Q                ANOP  ,                                           00666100
&ZMS                  SETC  '"LISTLIMIT='                               00666200
&ZMS                  SETC  '&ZMS.&LISTLIMIT"'                          00666300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00666400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00666500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00666600
.ZG38R                ANOP  ,                                           00666700
.*----------------------------------------------------------------***   00666800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00666900
                      AIF   (N'&LISTDESC LE 1).ZG41A  CK NUM            00667000
&ZMS                  SETC  '"LISTDESC='                                00667100
&ZMS                  SETC  '&ZMS.&LISTDESC"'                           00667200
&ZMS                  SETC  '&ZMS "LISTDESC"'                           00667300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00667400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00667500
.ZG41A                ANOP  ,                                           00667600
.*-------------------------------------------------------------------   00667700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00667800
&ZXLISTDESC           SETC  'INPUT'     SET IN/OUTPUT                   00667900
&XLISTDESC            SETC  'NO_LISTDESC'                               00668000
                      AIF   (K'&LISTDESC(1) LE 0).ZG41B  PARM           00668100
&XLISTDESC            SETC  '&LISTDESC(1)'      SET XVARIABLE           00668200
                      AIF   (N'&LISTDESC GT 1).ZG41B  MULTI             00668300
&XLISTDESC            SETC  '&LISTDESC'         SET XVARIABLE           00668400
.ZG41B                ANOP  ,                                           00668500
.*-------------------------------------------------------------------   00668600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00668700
                      AIF   (K'&ZXLISTDESC LE 0).ZG41R  NOT I/O         00668800
         AIF   ('&XLISTDESC' EQ 'NO_LISTDESC').ZG41R                    00668900
                      AIF   ('&XLISTDESC'(1,1) NE '(').ZG41R            00669000
&ZCGPR                SETC  '&XLISTDESC'(2,K'&XLISTDESC-2)              00669100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                00669200
                      AIF   (K'&ZCGPR GT 2).ZG41Q                       00669300
                      AIF   ('&ZCGPR' EQ '0').ZG41Q                     00669400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00669500
                      AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME   00669600
.ZG41P                ANOP  ,                                           00669700
                      AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC        00669800
                      AIF   ('&ZCGPR' LT '2').ZG41Q                     00669900
                      AIF   ('&ZCGPR' LE '12').ZG41R                    00670000
.ZG41Q                ANOP  ,                                           00670100
&ZMS                  SETC  '"LISTDESC='                                00670200
&ZMS                  SETC  '&ZMS.&LISTDESC"'                           00670300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00670400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00670500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00670600
.ZG41R                ANOP  ,                                           00670700
.*----------------------------------------------------------------***   00670800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00670900
                      AIF   (N'&LISTKEY LE 1).ZG44A  CK NUM             00671000
&ZMS                  SETC  '"LISTKEY='                                 00671100
&ZMS                  SETC  '&ZMS.&LISTKEY"'                            00671200
&ZMS                  SETC  '&ZMS "LISTKEY"'                            00671300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00671400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00671500
.ZG44A                ANOP  ,                                           00671600
.*-------------------------------------------------------------------   00671700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00671800
&ZXLISTKEY            SETC  'INPUT'     SET IN/OUTPUT                   00671900
&XLISTKEY             SETC  'NO_LISTKEY'                                00672000
                      AIF   (K'&LISTKEY(1) LE 0).ZG44B  PARM            00672100
&XLISTKEY             SETC  '&LISTKEY(1)'       SET XVARIABLE           00672200
                      AIF   (N'&LISTKEY GT 1).ZG44B  MULTI              00672300
&XLISTKEY             SETC  '&LISTKEY'  SET XVARIABLE                   00672400
.ZG44B                ANOP  ,                                           00672500
.*-------------------------------------------------------------------   00672600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00672700
                      AIF   (K'&ZXLISTKEY LE 0).ZG44R  NOT I/O          00672800
         AIF   ('&XLISTKEY' EQ 'NO_LISTKEY').ZG44R                      00672900
                      AIF   ('&XLISTKEY'(1,1) NE '(').ZG44R             00673000
&ZCGPR                SETC  '&XLISTKEY'(2,K'&XLISTKEY-2)                00673100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                00673200
                      AIF   (K'&ZCGPR GT 2).ZG44Q                       00673300
                      AIF   ('&ZCGPR' EQ '0').ZG44Q                     00673400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00673500
                      AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME   00673600
.ZG44P                ANOP  ,                                           00673700
                      AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC        00673800
                      AIF   ('&ZCGPR' LT '2').ZG44Q                     00673900
                      AIF   ('&ZCGPR' LE '12').ZG44R                    00674000
.ZG44Q                ANOP  ,                                           00674100
&ZMS                  SETC  '"LISTKEY='                                 00674200
&ZMS                  SETC  '&ZMS.&LISTKEY"'                            00674300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00674400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00674500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00674600
.ZG44R                ANOP  ,                                           00674700
.*----------------------------------------------------------------***   00674800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00674900
                      AIF   (N'&MAXLISTKEY LE 1).ZG47A  CK NUM          00675000
&ZMS                  SETC  '"MAXLISTKEY='                              00675100
&ZMS                  SETC  '&ZMS.&MAXLISTKEY"'                         00675200
&ZMS                  SETC  '&ZMS "MAXLISTKEY"'                         00675300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00675400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00675500
.ZG47A                ANOP  ,                                           00675600
.*-------------------------------------------------------------------   00675700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00675800
&ZXMAXLISTKEY         SETC  'INPUT'     SET IN/OUTPUT                   00675900
&XMAXLISTKEY          SETC  'NO_MAXLISTKEY'                             00676000
                      AIF   (K'&MAXLISTKEY(1) LE 0).ZG47B  PARM         00676100
&XMAXLISTKEY          SETC  '&MAXLISTKEY(1)'    SET XVARIABLE           00676200
                      AIF   (N'&MAXLISTKEY GT 1).ZG47B  MULTI           00676300
&XMAXLISTKEY          SETC  '&MAXLISTKEY'       SET XVARIABLE           00676400
.ZG47B                ANOP  ,                                           00676500
.*-------------------------------------------------------------------   00676600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00676700
                      AIF   (K'&ZXMAXLISTKEY LE 0).ZG47R  NOT I/O       00676800
         AIF   ('&XMAXLISTKEY' EQ 'NO_MAXLISTKEY').ZG47R                00676900
                      AIF   ('&XMAXLISTKEY'(1,1) NE '(').ZG47R          00677000
&ZCGPR                SETC  '&XMAXLISTKEY'(2,K'&XMAXLISTKEY-2)          00677100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                00677200
                      AIF   (K'&ZCGPR GT 2).ZG47Q                       00677300
                      AIF   ('&ZCGPR' EQ '0').ZG47Q                     00677400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00677500
                      AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME   00677600
.ZG47P                ANOP  ,                                           00677700
                      AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC        00677800
                      AIF   ('&ZCGPR' LT '2').ZG47Q                     00677900
                      AIF   ('&ZCGPR' LE '12').ZG47R                    00678000
.ZG47Q                ANOP  ,                                           00678100
&ZMS                  SETC  '"MAXLISTKEY='                              00678200
&ZMS                  SETC  '&ZMS.&MAXLISTKEY"'                         00678300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00678400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00678500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00678600
.ZG47R                ANOP  ,                                           00678700
.*----------------------------------------------------------------***   00678800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00678900
                      AIF   (N'&SETCURSOR LE 1).ZG50A  CK NUM           00679000
&ZMS                  SETC  '"SETCURSOR='                               00679100
&ZMS                  SETC  '&ZMS.&SETCURSOR"'                          00679200
&ZMS                  SETC  '&ZMS "SETCURSOR"'                          00679300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00679400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00679500
.ZG50A                ANOP  ,                                           00679600
.*-------------------------------------------------------------------   00679700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00679800
&XSETCURSOR           SETC  ''          INITIALIZE XVARIABLE            00679900
.ZG51A   AIF   ('&SETCURSOR(1)' NE 'HEAD').ZG52A                        00680000
&XSETCURSOR           SETC  'HEAD'      SET KEYWORD                     00680100
.*-------------------------------------------------------------------   00680200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00680300
.ZG52A   AIF   ('&SETCURSOR(1)' NE 'TAIL').ZG53A                        00680400
&XSETCURSOR           SETC  'TAIL'      SET KEYWORD                     00680500
.*-------------------------------------------------------------------   00680600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00680700
.ZG53A                AIF   (K'&XSETCURSOR GT 0).ZG53C  KEYWORD         00680800
                      AIF   (K'&SETCURSOR(1) LE 0).ZG53B                00680900
&ZMS                  SETC  '"SETCURSOR='                               00681000
&ZMS                  SETC  '&ZMS.&SETCURSOR"'                          00681100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00681200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00681300
&ZMS                  SETC  '&ZMS "HEAD"'                               00681400
&ZMS                  SETC  '&ZMS OR "TAIL".'                           00681500
                      MNOTE 8,' &ZMS '                                  00681600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00681700
.ZG53B                ANOP  ,                                           00681800
&XSETCURSOR           SETC  'HEAD'      SET DEFAULT KEYWORD             00681900
.ZG53C                ANOP  ,                                           00682000
&ZXSETCURSOR          SETC  'INPUT'     SET IN/OUTPUT                   00682100
.*-------------------------------------------------------------------   00682200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00682300
.ZG54                 ANOP  ,                                           00682400
&ZTLC                 SETC 'MOVE'                                       00682500
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG80             00682600
&XREQUEST             SETC  'MOVE'      SET KEYWORD                     00682700
                      AIF   (N'&REQUEST LE 1).ZG54A  CK NUM             00682800
&ZMS                  SETC  '"REQUEST='                                 00682900
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00683000
&ZMS                  SETC  '&ZMS "REQUEST"'                            00683100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00683200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00683300
.ZG54A                ANOP  ,                                           00683400
.*------------------------------------------------------------------    00683500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00683600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00683700
.ZG54A0               AIF   (K'&TYPE LE 0).ZG54A1  OK                   00683800
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00683900
.ZG54A1               AIF   (K'&RESTOKEN LE 0).ZG54A2  OK               00684000
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00684100
.ZG54A2               AIF   (K'&EXTRESTOKEN LE 0).ZG54A3  OK            00684200
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00684300
.ZG54A3               AIF   (K'&LISTLIMIT LE 0).ZG54A4  OK              00684400
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00684500
.ZG54A4               AIF   (K'&LISTDESC LE 0).ZG54A5  OK               00684600
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00684700
.ZG54A5               AIF   (K'&LISTKEY LE 0).ZG54A6  OK                00684800
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00684900
.ZG54A6               AIF   (K'&MAXLISTKEY LE 0).ZG54A7  OK             00685000
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00685100
.ZG54A7               AIF   (K'&SETCURSOR LE 0).ZG54A8  OK              00685200
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00685300
.ZG54A8               AIF   (K'&LISTTYPE LE 0).ZG54A9  OK               00685400
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00685500
.ZG54A9               AIF   (K'&FIRSTELEM LE 0).ZG54A10  OK             00685600
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00685700
.ZG54A10              AIF   (K'&LASTELEM LE 0).ZG54A11  OK              00685800
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00685900
.ZG54A11              AIF   (K'&ACTION LE 0).ZG54A12  OK                00686000
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00686100
.ZG54A12              AIF   (K'&VECTORINDEX LE 0).ZG54A13  OK           00686200
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00686300
.ZG54A13              AIF   (K'&DRIVEEXIT LE 0).ZG54A14  OK             00686400
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00686500
.ZG54A14              AIF   (K'&UNC LE 0).ZG54A15  OK                   00686600
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00686700
.ZG54A15              AIF   (K'&STARTINDEX LE 0).ZG54A16  OK            00686800
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00686900
.ZG54A16              AIF   (K'&ENDINDEX LE 0).ZG54A17  OK              00687000
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00687100
.ZG54A17              AIF   (K'&MOSVECTOR LE 0).ZG54A18  OK             00687200
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00687300
.ZG54A18              AIF   (K'&ZCVAL LE 0).ZG54A19  OK                 00687400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00687500
                      AIF  (K'&ZCVAL LE 160).ZG54A19A                   00687600
&ZCVAL                SETC '&ZCVAL'(1,160)                              00687700
&ZCVAL                SETC '&ZCVAL....'                                 00687800
.ZG54A19A             ANOP                                              00687900
&ZMS                  SETC  '"REQUEST'                                  00688000
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00688100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00688200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00688300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00688400
.ZG54A19              ANOP  ,                                           00688500
.*----------------------------------------------------------------***   00688600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00688700
                      AIF   (N'&MOVETOLIST LE 1).ZG56A  CK NUM          00688800
&ZMS                  SETC  '"MOVETOLIST='                              00688900
&ZMS                  SETC  '&ZMS.&MOVETOLIST"'                         00689000
&ZMS                  SETC  '&ZMS "MOVETOLIST"'                         00689100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00689200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00689300
.ZG56A                ANOP  ,                                           00689400
.*-------------------------------------------------------------------   00689500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00689600
&ZXMOVETOLIST         SETC  'INPUT'     SET IN/OUTPUT                   00689700
&XMOVETOLIST          SETC  '&MOVETOLIST(1)'    SET XVARIABLE           00689800
                      AIF   (N'&MOVETOLIST GT 1).ZG56B  MULTI           00689900
&XMOVETOLIST          SETC  '&MOVETOLIST'       SET XVARIABLE           00690000
.ZG56B                AIF   (K'&MOVETOLIST(1) GT 0).ZG56C               00690100
&ZXMOVETOLIST         SETC  ''          RESET IN/OUTPUT                 00690200
&ZMS                  SETC  ' '                                         00690300
&ZMS                  SETC  '&ZMS "MOVETOLIST" KEY AND ITS'             00690400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00690500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00690600
.ZG56C                ANOP  ,                                           00690700
.*-------------------------------------------------------------------   00690800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00690900
                      AIF   (K'&ZXMOVETOLIST LE 0).ZG56R  NOT I/O       00691000
                      AIF   ('&XMOVETOLIST'(1,1) NE '(').ZG56R          00691100
&ZCGPR                SETC  '&XMOVETOLIST'(2,K'&XMOVETOLIST-2)          00691200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG56P                00691300
                      AIF   (K'&ZCGPR GT 2).ZG56Q                       00691400
                      AIF   ('&ZCGPR' EQ '0').ZG56Q                     00691500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00691600
                      AIF   (T'&ZCGPR NE 'N').ZG56Q  INVALID REG NAME   00691700
.ZG56P                ANOP  ,                                           00691800
                      AIF   (T'&ZCGPR NE 'N').ZG56R  NON NUMERIC        00691900
                      AIF   ('&ZCGPR' LT '2').ZG56Q                     00692000
                      AIF   ('&ZCGPR' LE '12').ZG56R                    00692100
.ZG56Q                ANOP  ,                                           00692200
&ZMS                  SETC  '"MOVETOLIST='                              00692300
&ZMS                  SETC  '&ZMS.&MOVETOLIST"'                         00692400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00692500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00692600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00692700
.ZG56R                ANOP  ,                                           00692800
.*----------------------------------------------------------------***   00692900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00693000
                      AIF   (N'&MOVETOKEY LE 1).ZG59A  CK NUM           00693100
&ZMS                  SETC  '"MOVETOKEY='                               00693200
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          00693300
&ZMS                  SETC  '&ZMS "MOVETOKEY"'                          00693400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00693500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00693600
.ZG59A                ANOP  ,                                           00693700
.*-------------------------------------------------------------------   00693800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00693900
&ZXMOVETOKEY          SETC  'INPUT'     SET IN/OUTPUT                   00694000
&XMOVETOKEY           SETC  'NO_MOVETOKEY'                              00694100
                      AIF   (K'&MOVETOKEY(1) LE 0).ZG59B  PARM          00694200
&XMOVETOKEY           SETC  '&MOVETOKEY(1)'     SET XVARIABLE           00694300
                      AIF   (N'&MOVETOKEY GT 1).ZG59B  MULTI            00694400
&XMOVETOKEY           SETC  '&MOVETOKEY'        SET XVARIABLE           00694500
.ZG59B                ANOP  ,                                           00694600
.*-------------------------------------------------------------------   00694700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00694800
                      AIF   (K'&ZXMOVETOKEY LE 0).ZG59R  NOT I/O        00694900
         AIF   ('&XMOVETOKEY' EQ 'NO_MOVETOKEY').ZG59R                  00695000
                      AIF   ('&XMOVETOKEY'(1,1) NE '(').ZG59R           00695100
&ZCGPR                SETC  '&XMOVETOKEY'(2,K'&XMOVETOKEY-2)            00695200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                00695300
                      AIF   (K'&ZCGPR GT 2).ZG59Q                       00695400
                      AIF   ('&ZCGPR' EQ '0').ZG59Q                     00695500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00695600
                      AIF   (T'&ZCGPR NE 'N').ZG59Q  INVALID REG NAME   00695700
.ZG59P                ANOP  ,                                           00695800
                      AIF   (T'&ZCGPR NE 'N').ZG59R  NON NUMERIC        00695900
                      AIF   ('&ZCGPR' LT '2').ZG59Q                     00696000
                      AIF   ('&ZCGPR' LE '12').ZG59R                    00696100
.ZG59Q                ANOP  ,                                           00696200
&ZMS                  SETC  '"MOVETOKEY='                               00696300
&ZMS                  SETC  '&ZMS.&MOVETOKEY"'                          00696400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00696500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00696600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00696700
.ZG59R                ANOP  ,                                           00696800
.*----------------------------------------------------------------***   00696900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00697000
                      AIF   (N'&MOVETOPOS LE 1).ZG62A  CK NUM           00697100
&ZMS                  SETC  '"MOVETOPOS='                               00697200
&ZMS                  SETC  '&ZMS.&MOVETOPOS"'                          00697300
&ZMS                  SETC  '&ZMS "MOVETOPOS"'                          00697400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00697500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00697600
.ZG62A                ANOP  ,                                           00697700
.*-------------------------------------------------------------------   00697800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00697900
&XMOVETOPOS           SETC  ''          INITIALIZE XVARIABLE            00698000
.ZG63A   AIF   ('&MOVETOPOS(1)' NE 'HEAD').ZG64A                        00698100
&XMOVETOPOS           SETC  'HEAD'      SET KEYWORD                     00698200
.*-------------------------------------------------------------------   00698300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00698400
.ZG64A   AIF   ('&MOVETOPOS(1)' NE 'TAIL').ZG65A                        00698500
&XMOVETOPOS           SETC  'TAIL'      SET KEYWORD                     00698600
.*-------------------------------------------------------------------   00698700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00698800
.ZG65A                AIF   (K'&XMOVETOPOS GT 0).ZG65C  KEYWORD         00698900
                      AIF   (K'&MOVETOPOS(1) LE 0).ZG65B                00699000
&ZMS                  SETC  '"MOVETOPOS='                               00699100
&ZMS                  SETC  '&ZMS.&MOVETOPOS"'                          00699200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00699300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00699400
&ZMS                  SETC  '&ZMS "HEAD"'                               00699500
&ZMS                  SETC  '&ZMS OR "TAIL".'                           00699600
                      MNOTE 8,' &ZMS '                                  00699700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00699800
.ZG65B                ANOP  ,                                           00699900
&XMOVETOPOS           SETC  'HEAD'      SET DEFAULT KEYWORD             00700000
.ZG65C                ANOP  ,                                           00700100
&ZXMOVETOPOS          SETC  'INPUT'     SET IN/OUTPUT                   00700200
.*------------------------------------------------------------------    00700300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00700400
&XDATAOPER            SETC  ''          INITIALIZE XVARIABLE            00700500
.*-------------------------------------------------------------------   00700600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00700700
.ZG68                 ANOP  ,                                           00700800
                      AIF   (K'&DATAOPER(1) LE 0).ZG68A                 00700900
&ZTLC                 SETC 'NONE'                                       00701000
                      AIF   ('&DATAOPER(1)' NE '&ZTLC').ZG69            00701100
&XDATAOPER            SETC  'NONE'      SET KEYWORD                     00701200
                      AIF   (N'&DATAOPER LE 1).ZG68A  CK NUM            00701300
&ZMS                  SETC  '"DATAOPER='                                00701400
&ZMS                  SETC  '&ZMS.&DATAOPER"'                           00701500
&ZMS                  SETC  '&ZMS "DATAOPER"'                           00701600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00701700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00701800
.ZG68A                ANOP  ,                                           00701900
.*------------------------------------------------------------------    00702000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00702100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00702200
.ZG68A0               AIF   (K'&ENTRYTYPE LE 0).ZG68A1  OK              00702300
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00702400
.ZG68A1               AIF   (K'&ELEMNUM LE 0).ZG68A2  OK                00702500
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00702600
.ZG68A2               AIF   (K'&ZCVAL LE 0).ZG68A3  OK                  00702700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00702800
&ZMS                  SETC  '"DATAOPER'                                 00702900
&ZMS                  SETC  '&ZMS.=&DATAOPER"'                          00703000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00703100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00703200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00703300
.ZG68A3               ANOP  ,                                           00703400
.*-------------------------------------------------------------------   00703500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00703600
.ZG69                 ANOP  ,                                           00703700
&ZTLC                 SETC 'READ'                                       00703800
                      AIF   ('&DATAOPER(1)' NE '&ZTLC').ZG70            00703900
&XDATAOPER            SETC  'READ'      SET KEYWORD                     00704000
                      AIF   (N'&DATAOPER LE 1).ZG69A  CK NUM            00704100
&ZMS                  SETC  '"DATAOPER='                                00704200
&ZMS                  SETC  '&ZMS.&DATAOPER"'                           00704300
&ZMS                  SETC  '&ZMS "DATAOPER"'                           00704400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00704500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00704600
.ZG69A                ANOP  ,                                           00704700
.*------------------------------------------------------------------    00704800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00704900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00705000
.ZG69A0               AIF   (K'&ENTRYTYPE LE 0).ZG69A1  OK              00705100
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00705200
.ZG69A1               AIF   (K'&ELEMNUM LE 0).ZG69A2  OK                00705300
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00705400
.ZG69A2               AIF   (K'&ZCVAL LE 0).ZG69A3  OK                  00705500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00705600
&ZMS                  SETC  '"DATAOPER'                                 00705700
&ZMS                  SETC  '&ZMS.=&DATAOPER"'                          00705800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00705900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00706000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00706100
.ZG69A3               ANOP  ,                                           00706200
.*-------------------------------------------------------------------   00706300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00706400
.ZG70                 ANOP  ,                                           00706500
&ZTLC                 SETC 'WRITE'                                      00706600
                      AIF   ('&DATAOPER(1)' NE '&ZTLC').ZG79            00706700
&XDATAOPER            SETC  'WRITE'     SET KEYWORD                     00706800
                      AIF   (N'&DATAOPER LE 1).ZG70A  CK NUM            00706900
&ZMS                  SETC  '"DATAOPER='                                00707000
&ZMS                  SETC  '&ZMS.&DATAOPER"'                           00707100
&ZMS                  SETC  '&ZMS "DATAOPER"'                           00707200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00707300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00707400
.ZG70A                ANOP  ,                                           00707500
.*----------------------------------------------------------------***   00707600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00707700
                      AIF   (N'&ENTRYTYPE LE 1).ZG72A  CK NUM           00707800
&ZMS                  SETC  '"ENTRYTYPE='                               00707900
&ZMS                  SETC  '&ZMS.&ENTRYTYPE"'                          00708000
&ZMS                  SETC  '&ZMS "ENTRYTYPE"'                          00708100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00708200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00708300
.ZG72A                ANOP  ,                                           00708400
.*-------------------------------------------------------------------   00708500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00708600
&XENTRYTYPE           SETC  ''          INITIALIZE XVARIABLE            00708700
.ZG73A   AIF   ('&ENTRYTYPE(1)' NE 'ANY').ZG74A                         00708800
&XENTRYTYPE           SETC  'ANY'       SET KEYWORD                     00708900
.*-------------------------------------------------------------------   00709000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00709100
.ZG74A   AIF   ('&ENTRYTYPE(1)' NE 'OLD').ZG75A                         00709200
&XENTRYTYPE           SETC  'OLD'       SET KEYWORD                     00709300
.*-------------------------------------------------------------------   00709400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00709500
.ZG75A                AIF   (K'&XENTRYTYPE GT 0).ZG75C  KEYWORD         00709600
                      AIF   (K'&ENTRYTYPE(1) LE 0).ZG75B                00709700
&ZMS                  SETC  '"ENTRYTYPE='                               00709800
&ZMS                  SETC  '&ZMS.&ENTRYTYPE"'                          00709900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00710000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00710100
&ZMS                  SETC  '&ZMS "ANY"'                                00710200
&ZMS                  SETC  '&ZMS OR "OLD".'                            00710300
                      MNOTE 8,' &ZMS '                                  00710400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00710500
.ZG75B                ANOP  ,                                           00710600
&XENTRYTYPE           SETC  'ANY'       SET DEFAULT KEYWORD             00710700
.ZG75C                ANOP  ,                                           00710800
&ZXENTRYTYPE          SETC  'INPUT'     SET IN/OUTPUT                   00710900
.*----------------------------------------------------------------***   00711000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00711100
                      AIF   (N'&ELEMNUM LE 1).ZG77A  CK NUM             00711200
&ZMS                  SETC  '"ELEMNUM='                                 00711300
&ZMS                  SETC  '&ZMS.&ELEMNUM"'                            00711400
&ZMS                  SETC  '&ZMS "ELEMNUM"'                            00711500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00711600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00711700
.ZG77A                ANOP  ,                                           00711800
.*-------------------------------------------------------------------   00711900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00712000
&ZXELEMNUM            SETC  'INPUT'     SET IN/OUTPUT                   00712100
&XELEMNUM             SETC  'NO_ELEMNUM'                                00712200
                      AIF   (K'&ELEMNUM(1) LE 0).ZG77B  PARM            00712300
&XELEMNUM             SETC  '&ELEMNUM(1)'       SET XVARIABLE           00712400
                      AIF   (N'&ELEMNUM GT 1).ZG77B  MULTI              00712500
&XELEMNUM             SETC  '&ELEMNUM'  SET XVARIABLE                   00712600
.ZG77B                ANOP  ,                                           00712700
.*-------------------------------------------------------------------   00712800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00712900
                      AIF   (K'&ZXELEMNUM LE 0).ZG77R  NOT I/O          00713000
         AIF   ('&XELEMNUM' EQ 'NO_ELEMNUM').ZG77R                      00713100
                      AIF   ('&XELEMNUM'(1,1) NE '(').ZG77R             00713200
&ZCGPR                SETC  '&XELEMNUM'(2,K'&XELEMNUM-2)                00713300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG77P                00713400
                      AIF   (K'&ZCGPR GT 2).ZG77Q                       00713500
                      AIF   ('&ZCGPR' EQ '0').ZG77Q                     00713600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00713700
                      AIF   (T'&ZCGPR NE 'N').ZG77Q  INVALID REG NAME   00713800
.ZG77P                ANOP  ,                                           00713900
                      AIF   (T'&ZCGPR NE 'N').ZG77R  NON NUMERIC        00714000
                      AIF   ('&ZCGPR' LT '2').ZG77Q                     00714100
                      AIF   ('&ZCGPR' LE '12').ZG77R                    00714200
.ZG77Q                ANOP  ,                                           00714300
&ZMS                  SETC  '"ELEMNUM='                                 00714400
&ZMS                  SETC  '&ZMS.&ELEMNUM"'                            00714500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00714600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00714700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00714800
.ZG77R                ANOP  ,                                           00714900
.*------------------------------------------------------------------    00715000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00715100
.ZG79                 ANOP  ,                                           00715200
&ZXDATAOPER           SETC  'INPUT'     SET IN/OUTPUT                   00715300
                      AIF   (K'&XDATAOPER GT 0).ZG79E  VALID ARG        00715400
                      AIF   (T'&DATAOPER EQ 'O').ZG79D  OMITTED         00715500
&ZASYSLNDX            SETA  0                                           00715600
.ZG79A                ANOP  ,           POSITIONAL MACRO KEY            00715700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00715800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG79C            00715900
&ZTLC                 SETC 'DATAOPER'                                   00716000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG79A   00716100
.ZG79B                ANOP  ,                                           00716200
&ZXDATAOPER           SETC  ''          RESET IN/OUTPUT                 00716300
&ZMS                  SETC  'THE "DATAOPER" KEY'                        00716400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00716500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00716600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00716700
                      AGO   .ZG79E                                      00716800
.ZG79C                ANOP  ,                                           00716900
&ZXDATAOPER           SETC  ''          RESET IN/OUTPUT                 00717000
&ZMS                  SETC  '"DATAOPER='                                00717100
&ZMS                  SETC  '&ZMS.&DATAOPER"'                           00717200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00717300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00717400
&ZMS                  SETC  '&ZMS "NONE",'                              00717500
&ZMS                  SETC  '&ZMS "READ",'                              00717600
&ZMS                  SETC  '&ZMS OR "WRITE".'                          00717700
                      MNOTE 8,' &ZMS '                                  00717800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00717900
                      AGO   .ZG79E                                      00718000
.ZG79D                ANOP  ,                                           00718100
&XDATAOPER            SETC  'NONE'      SET DEFAULT KEYWORD             00718200
.ZG79E                ANOP  ,                                           00718300
.*-------------------------------------------------------------------   00718400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00718500
.ZG80                 ANOP  ,                                           00718600
&ZTLC                 SETC 'DELETE'                                     00718700
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG86             00718800
&XREQUEST             SETC  'DELETE'    SET KEYWORD                     00718900
                      AIF   (N'&REQUEST LE 1).ZG80A  CK NUM             00719000
&ZMS                  SETC  '"REQUEST='                                 00719100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00719200
&ZMS                  SETC  '&ZMS "REQUEST"'                            00719300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00719400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00719500
.ZG80A                ANOP  ,                                           00719600
.*------------------------------------------------------------------    00719700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00719800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00719900
.ZG80A0               AIF   (K'&TYPE LE 0).ZG80A1  OK                   00720000
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00720100
.ZG80A1               AIF   (K'&RESTOKEN LE 0).ZG80A2  OK               00720200
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00720300
.ZG80A2               AIF   (K'&EXTRESTOKEN LE 0).ZG80A3  OK            00720400
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00720500
.ZG80A3               AIF   (K'&ENTRYTYPE LE 0).ZG80A4  OK              00720600
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00720700
.ZG80A4               AIF   (K'&ELEMNUM LE 0).ZG80A5  OK                00720800
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00720900
.ZG80A5               AIF   (K'&LISTLIMIT LE 0).ZG80A6  OK              00721000
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00721100
.ZG80A6               AIF   (K'&LISTDESC LE 0).ZG80A7  OK               00721200
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00721300
.ZG80A7               AIF   (K'&LISTKEY LE 0).ZG80A8  OK                00721400
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00721500
.ZG80A8               AIF   (K'&MAXLISTKEY LE 0).ZG80A9  OK             00721600
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00721700
.ZG80A9               AIF   (K'&SETCURSOR LE 0).ZG80A10  OK             00721800
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00721900
.ZG80A10              AIF   (K'&MOVETOLIST LE 0).ZG80A11  OK            00722000
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00722100
.ZG80A11              AIF   (K'&MOVETOKEY LE 0).ZG80A12  OK             00722200
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00722300
.ZG80A12              AIF   (K'&MOVETOPOS LE 0).ZG80A13  OK             00722400
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00722500
.ZG80A13              AIF   (K'&LISTTYPE LE 0).ZG80A14  OK              00722600
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00722700
.ZG80A14              AIF   (K'&FIRSTELEM LE 0).ZG80A15  OK             00722800
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00722900
.ZG80A15              AIF   (K'&LASTELEM LE 0).ZG80A16  OK              00723000
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00723100
.ZG80A16              AIF   (K'&ACTION LE 0).ZG80A17  OK                00723200
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00723300
.ZG80A17              AIF   (K'&VECTORINDEX LE 0).ZG80A18  OK           00723400
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00723500
.ZG80A18              AIF   (K'&DRIVEEXIT LE 0).ZG80A19  OK             00723600
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00723700
.ZG80A19              AIF   (K'&UNC LE 0).ZG80A20  OK                   00723800
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00723900
.ZG80A20              AIF   (K'&STARTINDEX LE 0).ZG80A21  OK            00724000
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00724100
.ZG80A21              AIF   (K'&ENDINDEX LE 0).ZG80A22  OK              00724200
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00724300
.ZG80A22              AIF   (K'&MOSVECTOR LE 0).ZG80A23  OK             00724400
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00724500
.ZG80A23              AIF   (K'&ZCVAL LE 0).ZG80A24  OK                 00724600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00724700
                      AIF  (K'&ZCVAL LE 160).ZG80A24A                   00724800
&ZCVAL                SETC '&ZCVAL'(1,160)                              00724900
&ZCVAL                SETC '&ZCVAL....'                                 00725000
.ZG80A24A             ANOP                                              00725100
&ZMS                  SETC  '"REQUEST'                                  00725200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00725300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00725400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00725500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00725600
.ZG80A24              ANOP  ,                                           00725700
.*------------------------------------------------------------------    00725800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00725900
&XDATAOPER            SETC  ''          INITIALIZE XVARIABLE            00726000
.*-------------------------------------------------------------------   00726100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00726200
.ZG83                 ANOP  ,                                           00726300
                      AIF   (K'&DATAOPER(1) LE 0).ZG83A                 00726400
&ZTLC                 SETC 'NONE'                                       00726500
                      AIF   ('&DATAOPER(1)' NE '&ZTLC').ZG84            00726600
&XDATAOPER            SETC  'NONE'      SET KEYWORD                     00726700
                      AIF   (N'&DATAOPER LE 1).ZG83A  CK NUM            00726800
&ZMS                  SETC  '"DATAOPER='                                00726900
&ZMS                  SETC  '&ZMS.&DATAOPER"'                           00727000
&ZMS                  SETC  '&ZMS "DATAOPER"'                           00727100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00727200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00727300
.ZG83A                ANOP  ,                                           00727400
.*-------------------------------------------------------------------   00727500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00727600
.ZG84                 ANOP  ,                                           00727700
&ZTLC                 SETC 'READ'                                       00727800
                      AIF   ('&DATAOPER(1)' NE '&ZTLC').ZG85            00727900
&XDATAOPER            SETC  'READ'      SET KEYWORD                     00728000
                      AIF   (N'&DATAOPER LE 1).ZG84A  CK NUM            00728100
&ZMS                  SETC  '"DATAOPER='                                00728200
&ZMS                  SETC  '&ZMS.&DATAOPER"'                           00728300
&ZMS                  SETC  '&ZMS "DATAOPER"'                           00728400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00728500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00728600
.ZG84A                ANOP  ,                                           00728700
.*------------------------------------------------------------------    00728800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00728900
.ZG85                 ANOP  ,                                           00729000
&ZXDATAOPER           SETC  'INPUT'     SET IN/OUTPUT                   00729100
                      AIF   (K'&XDATAOPER GT 0).ZG85E  VALID ARG        00729200
                      AIF   (T'&DATAOPER EQ 'O').ZG85D  OMITTED         00729300
&ZASYSLNDX            SETA  0                                           00729400
.ZG85A                ANOP  ,           POSITIONAL MACRO KEY            00729500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00729600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG85C            00729700
&ZTLC                 SETC 'DATAOPER'                                   00729800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG85A   00729900
.ZG85B                ANOP  ,                                           00730000
&ZXDATAOPER           SETC  ''          RESET IN/OUTPUT                 00730100
&ZMS                  SETC  'THE "DATAOPER" KEY'                        00730200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00730300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00730400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00730500
                      AGO   .ZG85E                                      00730600
.ZG85C                ANOP  ,                                           00730700
&ZXDATAOPER           SETC  ''          RESET IN/OUTPUT                 00730800
&ZMS                  SETC  '"DATAOPER='                                00730900
&ZMS                  SETC  '&ZMS.&DATAOPER"'                           00731000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00731100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00731200
&ZMS                  SETC  '&ZMS "NONE"'                               00731300
&ZMS                  SETC  '&ZMS OR "READ".'                           00731400
                      MNOTE 8,' &ZMS '                                  00731500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00731600
                      AGO   .ZG85E                                      00731700
.ZG85D                ANOP  ,                                           00731800
&XDATAOPER            SETC  'NONE'      SET DEFAULT KEYWORD             00731900
.ZG85E                ANOP  ,                                           00732000
.*-------------------------------------------------------------------   00732100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00732200
.ZG86                 ANOP  ,                                           00732300
&ZTLC                 SETC 'DELETE_MULT'                                00732400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG91             00732500
&XREQUEST             SETC  'DELETE_MULT'       SET KEYWORD             00732600
                      AIF   (N'&REQUEST LE 1).ZG86A  CK NUM             00732700
&ZMS                  SETC  '"REQUEST='                                 00732800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00732900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00733000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00733100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00733200
.ZG86A                ANOP  ,                                           00733300
.*------------------------------------------------------------------    00733400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00733500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00733600
.ZG86A0               AIF   (K'&TYPE LE 0).ZG86A1  OK                   00733700
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00733800
.ZG86A1               AIF   (K'&ENTRYTYPE LE 0).ZG86A2  OK              00733900
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00734000
.ZG86A2               AIF   (K'&ELEMNUM LE 0).ZG86A3  OK                00734100
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00734200
.ZG86A3               AIF   (K'&LISTLIMIT LE 0).ZG86A4  OK              00734300
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00734400
.ZG86A4               AIF   (K'&LISTDESC LE 0).ZG86A5  OK               00734500
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00734600
.ZG86A5               AIF   (K'&LISTKEY LE 0).ZG86A6  OK                00734700
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00734800
.ZG86A6               AIF   (K'&MAXLISTKEY LE 0).ZG86A7  OK             00734900
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00735000
.ZG86A7               AIF   (K'&SETCURSOR LE 0).ZG86A8  OK              00735100
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00735200
.ZG86A8               AIF   (K'&MOVETOLIST LE 0).ZG86A9  OK             00735300
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00735400
.ZG86A9               AIF   (K'&MOVETOKEY LE 0).ZG86A10  OK             00735500
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00735600
.ZG86A10              AIF   (K'&MOVETOPOS LE 0).ZG86A11  OK             00735700
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00735800
.ZG86A11              AIF   (K'&DATAOPER LE 0).ZG86A12  OK              00735900
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00736000
.ZG86A12              AIF   (K'&LISTTYPE LE 0).ZG86A13  OK              00736100
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00736200
.ZG86A13              AIF   (K'&FIRSTELEM LE 0).ZG86A14  OK             00736300
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00736400
.ZG86A14              AIF   (K'&LASTELEM LE 0).ZG86A15  OK              00736500
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00736600
.ZG86A15              AIF   (K'&ACTION LE 0).ZG86A16  OK                00736700
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00736800
.ZG86A16              AIF   (K'&VECTORINDEX LE 0).ZG86A17  OK           00736900
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00737000
.ZG86A17              AIF   (K'&DRIVEEXIT LE 0).ZG86A18  OK             00737100
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00737200
.ZG86A18              AIF   (K'&UNC LE 0).ZG86A19  OK                   00737300
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00737400
.ZG86A19              AIF   (K'&STARTINDEX LE 0).ZG86A20  OK            00737500
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00737600
.ZG86A20              AIF   (K'&ENDINDEX LE 0).ZG86A21  OK              00737700
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00737800
.ZG86A21              AIF   (K'&MOSVECTOR LE 0).ZG86A22  OK             00737900
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00738000
.ZG86A22              AIF   (K'&ZCVAL LE 0).ZG86A23  OK                 00738100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00738200
                      AIF  (K'&ZCVAL LE 160).ZG86A23A                   00738300
&ZCVAL                SETC '&ZCVAL'(1,160)                              00738400
&ZCVAL                SETC '&ZCVAL....'                                 00738500
.ZG86A23A             ANOP                                              00738600
&ZMS                  SETC  '"REQUEST'                                  00738700
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00738800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00738900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00739000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00739100
.ZG86A23              ANOP  ,                                           00739200
.*----------------------------------------------------------------***   00739300
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00739400
&XRESTARTTOKEN        SETC  ''          INITIALIZE XVARIABLE            00739500
                      AIF   (K'&RESTOKEN LE 0).ZG88C                    00739600
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00739700
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET XVARIABLE                   00739800
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   00739900
&XRESTOKEN            SETC  '&RESTOKEN(1)'      SET XVARIABLE PARM      00740000
                      AIF   (N'&RESTOKEN GT 1).ZG88A                    00740100
&XRESTOKEN            SETC  '&RESTOKEN'         SET XVARIABLE PARM      00740200
.ZG88A                AIF   (N'&RESTOKEN LE 1).ZG88B  CK NUM            00740300
&ZMS                  SETC  '"RESTOKEN='                                00740400
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           00740500
&ZMS                  SETC  '&ZMS "RESTOKEN"'                           00740600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00740700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00740800
.ZG88B                AIF   (K'&XRESTOKEN GT 0).ZG88C  ONE PARM         00740900
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 00741000
&ZXRESTOKEN           SETC  ''          RESET IN/OUTPUT                 00741100
&ZMS                  SETC  ' '                                         00741200
&ZMS                  SETC  '&ZMS "RESTOKEN" KEY AND ITS'               00741300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00741400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00741500
.ZG88C                ANOP  ,                                           00741600
.*----------------------------------------------------------------***   00741700
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00741800
                      AIF   (K'&EXTRESTOKEN LE 0).ZG89D  NO ME KEY      00741900
                      AIF   (N'&EXTRESTOKEN LE 1).ZG89A  CK NUM         00742000
&ZMS                  SETC  '"EXTRESTOKEN='                             00742100
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        00742200
&ZMS                  SETC  '&ZMS "EXTRESTOKEN"'                        00742300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00742400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00742500
.ZG89A                AIF   (K'&XRESTARTTOKEN LE 0).ZG89B               00742600
&ZMS                  SETC  '"EXTRESTOKEN'                              00742700
&ZMS                  SETC  '&ZMS.=&EXTRESTOKEN"'                       00742800
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00742900
&ZMS                  SETC  '&ZMS "&XRESTARTTOKEN"'                     00743000
                      MNOTE 8,' &ZMS KEY.'                              00743100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00743200
                      AGO   .ZG89D                                      00743300
.*                                                                      00743400
.ZG89B                ANOP  ,                                           00743500
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00743600
&XRESTARTTOKEN        SETC  'EXTRESTOKEN'       SET XVARIABLE           00743700
&ZXEXTRESTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   00743800
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN(1)'   SET XVARIABLE PARM      00743900
                      AIF   (N'&EXTRESTOKEN GT 1).ZG89C                 00744000
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN'      SET XVARIABLE PARM      00744100
.ZG89C                AIF   (K'&XEXTRESTOKEN GT 0).ZG89D  ONE PARM      00744200
&ZXRESTARTTOKEN       SETC  ''          RESET IN/OUTPUT                 00744300
&ZXEXTRESTOKEN        SETC  ''          RESET IN/OUTPUT                 00744400
&ZMS                  SETC  ' '                                         00744500
&ZMS                  SETC  '&ZMS "EXTRESTOKEN" KEY AND ITS'            00744600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00744700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00744800
.ZG89D                ANOP  ,                                           00744900
.*------------------------------------------------------------------    00745000
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00745100
                      AIF   (K'&XRESTARTTOKEN GT 0).ZG90B               00745200
&ZXRESTARTTOKEN       SETC  'INPUT'     SET IN/OUTPUT                   00745300
&XRESTARTTOKEN        SETC  'RESTOKEN'  SET DEFAULT                     00745400
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   00745500
&XRESTOKEN            SETC  'NO_RESTOKEN'       SET DEFAULT PARM        00745600
.ZG90B                ANOP  ,                                           00745700
.*-------------------------------------------------------------------   00745800
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00745900
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG90R  NOT I/O      00746000
         AIF   ('&XEXTRESTOKEN' EQ 'NO_RESTOKEN').ZG90R                 00746100
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG90R         00746200
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        00746300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                00746400
                      AIF   (K'&ZCGPR GT 2).ZG90Q                       00746500
                      AIF   ('&ZCGPR' EQ '0').ZG90Q                     00746600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00746700
                      AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME   00746800
.ZG90P                ANOP  ,                                           00746900
                      AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC        00747000
                      AIF   ('&ZCGPR' LT '2').ZG90Q                     00747100
                      AIF   ('&ZCGPR' LE '12').ZG90R                    00747200
.ZG90Q                ANOP  ,                                           00747300
&ZMS                  SETC  '"EXTRESTOKEN='                             00747400
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        00747500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00747600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00747700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00747800
.ZG90R                ANOP  ,                                           00747900
.*-------------------------------------------------------------------   00748000
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00748100
.ZG88ZY  AIF    ('&XRESTARTTOKEN' NE 'RESTOKEN').ZG89ZY                 00748200
.*-------------------------------------------------------------------   00748300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00748400
                      AIF   (K'&ZXRESTOKEN LE 0).ZG88R  NOT I/O         00748500
         AIF   ('&XRESTOKEN' EQ 'NO_RESTOKEN').ZG88R                    00748600
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZG88R            00748700
&ZCGPR                SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)              00748800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                00748900
                      AIF   (K'&ZCGPR GT 2).ZG88Q                       00749000
                      AIF   ('&ZCGPR' EQ '0').ZG88Q                     00749100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00749200
                      AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME   00749300
.ZG88P                ANOP  ,                                           00749400
                      AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC        00749500
                      AIF   ('&ZCGPR' LT '2').ZG88Q                     00749600
                      AIF   ('&ZCGPR' LE '12').ZG88R                    00749700
.ZG88Q                ANOP  ,                                           00749800
&ZMS                  SETC  '"RESTOKEN='                                00749900
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           00750000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00750100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00750200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00750300
.ZG88R                ANOP  ,                                           00750400
.*-------------------------------------------------------------------   00750500
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00750600
.ZG89ZY  AIF    ('&XRESTARTTOKEN' NE 'EXTRESTOKEN').ZG90ZY              00750700
.*-------------------------------------------------------------------   00750800
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00750900
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG89R  NOT I/O      00751000
         AIF   ('&XEXTRESTOKEN' EQ 'NO_EXTRESTOKEN').ZG89R              00751100
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG89R         00751200
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        00751300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                00751400
                      AIF   (K'&ZCGPR GT 2).ZG89Q                       00751500
                      AIF   ('&ZCGPR' EQ '0').ZG89Q                     00751600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00751700
                      AIF   (T'&ZCGPR NE 'N').ZG89Q  INVALID REG NAME   00751800
.ZG89P                ANOP  ,                                           00751900
                      AIF   (T'&ZCGPR NE 'N').ZG89R  NON NUMERIC        00752000
                      AIF   ('&ZCGPR' LT '2').ZG89Q                     00752100
                      AIF   ('&ZCGPR' LE '12').ZG89R                    00752200
.ZG89Q                ANOP  ,                                           00752300
&ZMS                  SETC  '"EXTRESTOKEN='                             00752400
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        00752500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00752600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00752700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00752800
.ZG89R                ANOP  ,                                           00752900
.*-------------------------------------------------------------------   00753000
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00753100
.ZG90ZY               ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00753200
.*-------------------------------------------------------------------   00753300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00753400
.ZG91                 ANOP  ,                                           00753500
&ZTLC                 SETC 'DELETE_ENTRYLIST'                           00753600
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG103            00753700
&XREQUEST             SETC  'DELETE_ENTRYLIST'  SET KEYWORD             00753800
                      AIF   (N'&REQUEST LE 1).ZG91A  CK NUM             00753900
&ZMS                  SETC  '"REQUEST='                                 00754000
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00754100
&ZMS                  SETC  '&ZMS "REQUEST"'                            00754200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00754300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00754400
.ZG91A                ANOP  ,                                           00754500
.*------------------------------------------------------------------    00754600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00754700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00754800
.ZG91A0               AIF   (K'&TYPE LE 0).ZG91A1  OK                   00754900
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00755000
.ZG91A1               AIF   (K'&RESTOKEN LE 0).ZG91A2  OK               00755100
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00755200
.ZG91A2               AIF   (K'&EXTRESTOKEN LE 0).ZG91A3  OK            00755300
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00755400
.ZG91A3               AIF   (K'&ENTRYTYPE LE 0).ZG91A4  OK              00755500
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00755600
.ZG91A4               AIF   (K'&ELEMNUM LE 0).ZG91A5  OK                00755700
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00755800
.ZG91A5               AIF   (K'&LISTLIMIT LE 0).ZG91A6  OK              00755900
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00756000
.ZG91A6               AIF   (K'&LISTDESC LE 0).ZG91A7  OK               00756100
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00756200
.ZG91A7               AIF   (K'&LISTKEY LE 0).ZG91A8  OK                00756300
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00756400
.ZG91A8               AIF   (K'&MAXLISTKEY LE 0).ZG91A9  OK             00756500
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00756600
.ZG91A9               AIF   (K'&SETCURSOR LE 0).ZG91A10  OK             00756700
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00756800
.ZG91A10              AIF   (K'&MOVETOLIST LE 0).ZG91A11  OK            00756900
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00757000
.ZG91A11              AIF   (K'&MOVETOKEY LE 0).ZG91A12  OK             00757100
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00757200
.ZG91A12              AIF   (K'&MOVETOPOS LE 0).ZG91A13  OK             00757300
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00757400
.ZG91A13              AIF   (K'&DATAOPER LE 0).ZG91A14  OK              00757500
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00757600
.ZG91A14              AIF   (K'&ACTION LE 0).ZG91A15  OK                00757700
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00757800
.ZG91A15              AIF   (K'&VECTORINDEX LE 0).ZG91A16  OK           00757900
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00758000
.ZG91A16              AIF   (K'&DRIVEEXIT LE 0).ZG91A17  OK             00758100
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00758200
.ZG91A17              AIF   (K'&UNC LE 0).ZG91A18  OK                   00758300
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00758400
.ZG91A18              AIF   (K'&STARTINDEX LE 0).ZG91A19  OK            00758500
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00758600
.ZG91A19              AIF   (K'&ENDINDEX LE 0).ZG91A20  OK              00758700
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00758800
.ZG91A20              AIF   (K'&MOSVECTOR LE 0).ZG91A21  OK             00758900
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00759000
.ZG91A21              AIF   (K'&ZCVAL LE 0).ZG91A22  OK                 00759100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00759200
                      AIF  (K'&ZCVAL LE 160).ZG91A22A                   00759300
&ZCVAL                SETC '&ZCVAL'(1,160)                              00759400
&ZCVAL                SETC '&ZCVAL....'                                 00759500
.ZG91A22A             ANOP                                              00759600
&ZMS                  SETC  '"REQUEST'                                  00759700
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00759800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00759900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00760000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00760100
.ZG91A22              ANOP  ,                                           00760200
.*----------------------------------------------------------------***   00760300
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00760400
                      AIF   (N'&LISTTYPE LE 1).ZG93A  CK NUM            00760500
&ZMS                  SETC  '"LISTTYPE='                                00760600
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           00760700
&ZMS                  SETC  '&ZMS "LISTTYPE"'                           00760800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00760900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00761000
.ZG93A                ANOP  ,                                           00761100
.*-------------------------------------------------------------------   00761200
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00761300
&XLISTTYPE            SETC  ''          INITIALIZE XVARIABLE            00761400
.ZG94A   AIF   ('&LISTTYPE(1)' NE 'IDLIST').ZG95A                       00761500
&XLISTTYPE            SETC  'IDLIST'    SET KEYWORD                     00761600
.*-------------------------------------------------------------------   00761700
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00761800
.ZG95A   AIF   ('&LISTTYPE(1)' NE 'NAMELIST').ZG96A                     00761900
&XLISTTYPE            SETC  'NAMELIST'  SET KEYWORD                     00762000
.*-------------------------------------------------------------------   00762100
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00762200
.ZG96A                AIF   (K'&XLISTTYPE GT 0).ZG96C  KEYWORD          00762300
                      AIF   (K'&LISTTYPE(1) LE 0).ZG96B                 00762400
&ZMS                  SETC  '"LISTTYPE='                                00762500
&ZMS                  SETC  '&ZMS.&LISTTYPE"'                           00762600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00762700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00762800
&ZMS                  SETC  '&ZMS "IDLIST"'                             00762900
&ZMS                  SETC  '&ZMS OR "NAMELIST".'                       00763000
                      MNOTE 8,' &ZMS '                                  00763100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00763200
.ZG96B                ANOP  ,                                           00763300
&XLISTTYPE            SETC  'IDLIST'    SET DEFAULT KEYWORD             00763400
.ZG96C                ANOP  ,                                           00763500
&ZXLISTTYPE           SETC  'INPUT'     SET IN/OUTPUT                   00763600
.*-------------------------------------------------------------------   00763700
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00763800
                      AIF   (K'&LISTTYPE(1) GT 0).ZG96D  VALID          00763900
&ZXLISTTYPE           SETC  ''          RESET IN/OUTPUT                 00764000
&ZMS                  SETC  'THE'                                       00764100
&ZMS                  SETC  '&ZMS "LISTTYPE" KEY AND ITS'               00764200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00764300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00764400
&ZMS                  SETC  '&ZMS "IDLIST"'                             00764500
&ZMS                  SETC  '&ZMS OR "NAMELIST".'                       00764600
                      MNOTE 8,' &ZMS '                                  00764700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00764800
.ZG96D                ANOP  ,                                           00764900
.*----------------------------------------------------------------***   00765000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00765100
                      AIF   (N'&FIRSTELEM LE 1).ZG98A  CK NUM           00765200
&ZMS                  SETC  '"FIRSTELEM='                               00765300
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          00765400
&ZMS                  SETC  '&ZMS "FIRSTELEM"'                          00765500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00765600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00765700
.ZG98A                ANOP  ,                                           00765800
.*-------------------------------------------------------------------   00765900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00766000
&ZXFIRSTELEM          SETC  'INPUT'     SET IN/OUTPUT                   00766100
&XFIRSTELEM           SETC  '1'                                         00766200
                      AIF   (K'&FIRSTELEM(1) LE 0).ZG98B  PARM          00766300
&XFIRSTELEM           SETC  '&FIRSTELEM(1)'     SET XVARIABLE           00766400
                      AIF   (N'&FIRSTELEM GT 1).ZG98B  MULTI            00766500
&XFIRSTELEM           SETC  '&FIRSTELEM'        SET XVARIABLE           00766600
.ZG98B                ANOP  ,                                           00766700
.*-------------------------------------------------------------------   00766800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00766900
                      AIF   (K'&ZXFIRSTELEM LE 0).ZG98R  NOT I/O        00767000
                      AIF   ('&XFIRSTELEM'(1,1) NE '(').ZG98R           00767100
&ZCGPR                SETC  '&XFIRSTELEM'(2,K'&XFIRSTELEM-2)            00767200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                00767300
                      AIF   (K'&ZCGPR GT 2).ZG98Q                       00767400
                      AIF   ('&ZCGPR' EQ '0').ZG98Q                     00767500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00767600
                      AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME   00767700
.ZG98P                ANOP  ,                                           00767800
                      AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC        00767900
                      AIF   ('&ZCGPR' LT '2').ZG98Q                     00768000
                      AIF   ('&ZCGPR' LE '12').ZG98R                    00768100
.ZG98Q                ANOP  ,                                           00768200
&ZMS                  SETC  '"FIRSTELEM='                               00768300
&ZMS                  SETC  '&ZMS.&FIRSTELEM"'                          00768400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00768500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00768600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00768700
.ZG98R                ANOP  ,                                           00768800
.*----------------------------------------------------------------***   00768900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00769000
                      AIF   (N'&LASTELEM LE 1).ZG101A  CK NUM           00769100
&ZMS                  SETC  '"LASTELEM='                                00769200
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           00769300
&ZMS                  SETC  '&ZMS "LASTELEM"'                           00769400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00769500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00769600
.ZG101A               ANOP  ,                                           00769700
.*-------------------------------------------------------------------   00769800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00769900
&ZXLASTELEM           SETC  'INPUT'     SET IN/OUTPUT                   00770000
&XLASTELEM            SETC  '&LASTELEM(1)'      SET XVARIABLE           00770100
                      AIF   (N'&LASTELEM GT 1).ZG101B  MULTI            00770200
&XLASTELEM            SETC  '&LASTELEM'         SET XVARIABLE           00770300
.ZG101B               AIF   (K'&LASTELEM(1) GT 0).ZG101C                00770400
&ZXLASTELEM           SETC  ''          RESET IN/OUTPUT                 00770500
&ZMS                  SETC  ' '                                         00770600
&ZMS                  SETC  '&ZMS "LASTELEM" KEY AND ITS'               00770700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00770800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00770900
.ZG101C               ANOP  ,                                           00771000
.*-------------------------------------------------------------------   00771100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00771200
                      AIF   (K'&ZXLASTELEM LE 0).ZG101R  NOT I/O        00771300
                      AIF   ('&XLASTELEM'(1,1) NE '(').ZG101R           00771400
&ZCGPR                SETC  '&XLASTELEM'(2,K'&XLASTELEM-2)              00771500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG101P               00771600
                      AIF   (K'&ZCGPR GT 2).ZG101Q                      00771700
                      AIF   ('&ZCGPR' EQ '0').ZG101Q                    00771800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00771900
                      AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME  00772000
.ZG101P               ANOP  ,                                           00772100
                      AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC       00772200
                      AIF   ('&ZCGPR' LT '2').ZG101Q                    00772300
                      AIF   ('&ZCGPR' LE '12').ZG101R                   00772400
.ZG101Q               ANOP  ,                                           00772500
&ZMS                  SETC  '"LASTELEM='                                00772600
&ZMS                  SETC  '&ZMS.&LASTELEM"'                           00772700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00772800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00772900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00773000
.ZG101R               ANOP  ,                                           00773100
.*-------------------------------------------------------------------   00773200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00773300
.ZG103                ANOP  ,                                           00773400
&ZTLC                 SETC 'MONITOR_LIST'                               00773500
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG117            00773600
&XREQUEST             SETC  'MONITOR_LIST'      SET KEYWORD             00773700
                      AIF   (N'&REQUEST LE 1).ZG103A  CK NUM            00773800
&ZMS                  SETC  '"REQUEST='                                 00773900
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00774000
&ZMS                  SETC  '&ZMS "REQUEST"'                            00774100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00774200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00774300
.ZG103A               ANOP  ,                                           00774400
.*------------------------------------------------------------------    00774500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00774600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00774700
.ZG103A0              AIF   (K'&TYPE LE 0).ZG103A1  OK                  00774800
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00774900
.ZG103A1              AIF   (K'&RESTOKEN LE 0).ZG103A2  OK              00775000
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00775100
.ZG103A2              AIF   (K'&EXTRESTOKEN LE 0).ZG103A3  OK           00775200
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00775300
.ZG103A3              AIF   (K'&ENTRYTYPE LE 0).ZG103A4  OK             00775400
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00775500
.ZG103A4              AIF   (K'&ELEMNUM LE 0).ZG103A5  OK               00775600
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00775700
.ZG103A5              AIF   (K'&LISTLIMIT LE 0).ZG103A6  OK             00775800
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00775900
.ZG103A6              AIF   (K'&LISTDESC LE 0).ZG103A7  OK              00776000
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00776100
.ZG103A7              AIF   (K'&LISTKEY LE 0).ZG103A8  OK               00776200
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00776300
.ZG103A8              AIF   (K'&MAXLISTKEY LE 0).ZG103A9  OK            00776400
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00776500
.ZG103A9              AIF   (K'&SETCURSOR LE 0).ZG103A10  OK            00776600
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00776700
.ZG103A10             AIF   (K'&MOVETOLIST LE 0).ZG103A11  OK           00776800
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00776900
.ZG103A11             AIF   (K'&MOVETOKEY LE 0).ZG103A12  OK            00777000
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00777100
.ZG103A12             AIF   (K'&MOVETOPOS LE 0).ZG103A13  OK            00777200
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00777300
.ZG103A13             AIF   (K'&DATAOPER LE 0).ZG103A14  OK             00777400
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00777500
.ZG103A14             AIF   (K'&LISTTYPE LE 0).ZG103A15  OK             00777600
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00777700
.ZG103A15             AIF   (K'&FIRSTELEM LE 0).ZG103A16  OK            00777800
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00777900
.ZG103A16             AIF   (K'&LASTELEM LE 0).ZG103A17  OK             00778000
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00778100
.ZG103A17             AIF   (K'&UNC LE 0).ZG103A18  OK                  00778200
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00778300
.ZG103A18             AIF   (K'&STARTINDEX LE 0).ZG103A19  OK           00778400
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00778500
.ZG103A19             AIF   (K'&ENDINDEX LE 0).ZG103A20  OK             00778600
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00778700
.ZG103A20             AIF   (K'&MOSVECTOR LE 0).ZG103A21  OK            00778800
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00778900
.ZG103A21             AIF   (K'&ZCVAL LE 0).ZG103A22  OK                00779000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00779100
                      AIF  (K'&ZCVAL LE 160).ZG103A22A                  00779200
&ZCVAL                SETC '&ZCVAL'(1,160)                              00779300
&ZCVAL                SETC '&ZCVAL....'                                 00779400
.ZG103A22A            ANOP                                              00779500
&ZMS                  SETC  '"REQUEST'                                  00779600
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00779700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00779800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00779900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00780000
.ZG103A22             ANOP  ,                                           00780100
.*------------------------------------------------------------------    00780200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00780300
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00780400
.*-------------------------------------------------------------------   00780500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00780600
.ZG106                ANOP  ,                                           00780700
                      AIF   (K'&ACTION(1) LE 0).ZG106A                  00780800
&ZTLC                 SETC 'START'                                      00780900
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG115             00781000
&XACTION              SETC  'START'     SET KEYWORD                     00781100
                      AIF   (N'&ACTION LE 1).ZG106A  CK NUM             00781200
&ZMS                  SETC  '"ACTION='                                  00781300
&ZMS                  SETC  '&ZMS.&ACTION"'                             00781400
&ZMS                  SETC  '&ZMS "ACTION"'                             00781500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00781600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00781700
.ZG106A               ANOP  ,                                           00781800
.*----------------------------------------------------------------***   00781900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00782000
                      AIF   (N'&VECTORINDEX LE 1).ZG108A  CK NUM        00782100
&ZMS                  SETC  '"VECTORINDEX='                             00782200
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00782300
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00782400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00782500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00782600
.ZG108A               ANOP  ,                                           00782700
.*-------------------------------------------------------------------   00782800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00782900
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00783000
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00783100
                      AIF   (N'&VECTORINDEX GT 1).ZG108B  MULTI         00783200
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00783300
.ZG108B               AIF   (K'&VECTORINDEX(1) GT 0).ZG108C             00783400
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00783500
&ZMS                  SETC  ' '                                         00783600
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00783700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00783800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00783900
.ZG108C               ANOP  ,                                           00784000
.*-------------------------------------------------------------------   00784100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00784200
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG108R  NOT I/O     00784300
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG108R        00784400
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00784500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG108P               00784600
                      AIF   (K'&ZCGPR GT 2).ZG108Q                      00784700
                      AIF   ('&ZCGPR' EQ '0').ZG108Q                    00784800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00784900
                      AIF   (T'&ZCGPR NE 'N').ZG108Q  INVALID REG NAME  00785000
.ZG108P               ANOP  ,                                           00785100
                      AIF   (T'&ZCGPR NE 'N').ZG108R  NON NUMERIC       00785200
                      AIF   ('&ZCGPR' LT '2').ZG108Q                    00785300
                      AIF   ('&ZCGPR' LE '12').ZG108R                   00785400
.ZG108Q               ANOP  ,                                           00785500
&ZMS                  SETC  '"VECTORINDEX='                             00785600
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00785700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00785800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00785900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00786000
.ZG108R               ANOP  ,                                           00786100
.*----------------------------------------------------------------***   00786200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00786300
                      AIF   (N'&DRIVEEXIT LE 1).ZG111A  CK NUM          00786400
&ZMS                  SETC  '"DRIVEEXIT='                               00786500
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00786600
&ZMS                  SETC  '&ZMS "DRIVEEXIT"'                          00786700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00786800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00786900
.ZG111A               ANOP  ,                                           00787000
.*-------------------------------------------------------------------   00787100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00787200
&XDRIVEEXIT           SETC  ''          INITIALIZE XVARIABLE            00787300
.ZG112A   AIF   ('&DRIVEEXIT(1)' NE 'YES').ZG113A                       00787400
&XDRIVEEXIT           SETC  'YES'       SET KEYWORD                     00787500
.*-------------------------------------------------------------------   00787600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00787700
.ZG113A   AIF   ('&DRIVEEXIT(1)' NE 'NO').ZG114A                        00787800
&XDRIVEEXIT           SETC  'NO'        SET KEYWORD                     00787900
.*-------------------------------------------------------------------   00788000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00788100
.ZG114A               AIF   (K'&XDRIVEEXIT GT 0).ZG114C  KEYWORD        00788200
                      AIF   (K'&DRIVEEXIT(1) LE 0).ZG114B               00788300
&ZMS                  SETC  '"DRIVEEXIT='                               00788400
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00788500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00788600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00788700
&ZMS                  SETC  '&ZMS "YES"'                                00788800
&ZMS                  SETC  '&ZMS OR "NO".'                             00788900
                      MNOTE 8,' &ZMS '                                  00789000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00789100
.ZG114B               ANOP  ,                                           00789200
&XDRIVEEXIT           SETC  'YES'       SET DEFAULT KEYWORD             00789300
.ZG114C               ANOP  ,                                           00789400
&ZXDRIVEEXIT          SETC  'INPUT'     SET IN/OUTPUT                   00789500
.*-------------------------------------------------------------------   00789600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00789700
.ZG115                ANOP  ,                                           00789800
&ZTLC                 SETC 'STOP'                                       00789900
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG116             00790000
&XACTION              SETC  'STOP'      SET KEYWORD                     00790100
                      AIF   (N'&ACTION LE 1).ZG115A  CK NUM             00790200
&ZMS                  SETC  '"ACTION='                                  00790300
&ZMS                  SETC  '&ZMS.&ACTION"'                             00790400
&ZMS                  SETC  '&ZMS "ACTION"'                             00790500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00790600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00790700
.ZG115A               ANOP  ,                                           00790800
.*------------------------------------------------------------------    00790900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00791000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00791100
.ZG115A0              AIF   (K'&VECTORINDEX LE 0).ZG115A1  OK           00791200
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00791300
.ZG115A1              AIF   (K'&DRIVEEXIT LE 0).ZG115A2  OK             00791400
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00791500
.ZG115A2              AIF   (K'&ZCVAL LE 0).ZG115A3  OK                 00791600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00791700
&ZMS                  SETC  '"ACTION'                                   00791800
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00791900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00792000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00792100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00792200
.ZG115A3              ANOP  ,                                           00792300
.*------------------------------------------------------------------    00792400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00792500
.ZG116                ANOP  ,                                           00792600
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00792700
                      AIF   (K'&XACTION GT 0).ZG116E  VALID ARG         00792800
                      AIF   (T'&ACTION EQ 'O').ZG116D  OMITTED          00792900
&ZASYSLNDX            SETA  0                                           00793000
.ZG116A               ANOP  ,           POSITIONAL MACRO KEY            00793100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00793200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG116C           00793300
&ZTLC                 SETC 'ACTION'                                     00793400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG116A  00793500
.ZG116B               ANOP  ,                                           00793600
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00793700
&ZMS                  SETC  'THE "ACTION" KEY'                          00793800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00793900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00794000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00794100
                      AGO   .ZG116E                                     00794200
.ZG116C               ANOP  ,                                           00794300
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00794400
&ZMS                  SETC  '"ACTION='                                  00794500
&ZMS                  SETC  '&ZMS.&ACTION"'                             00794600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00794700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00794800
&ZMS                  SETC  '&ZMS "START"'                              00794900
&ZMS                  SETC  '&ZMS OR "STOP".'                           00795000
                      MNOTE 8,' &ZMS '                                  00795100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00795200
                      AGO   .ZG116E                                     00795300
.ZG116D               ANOP  ,                                           00795400
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00795500
.ZG116E               ANOP  ,                                           00795600
.*------------------------------------------------------------------    00795700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00795800
                      AIF   (K'&ACTION(1) GT 0).ZG116F  PARM            00795900
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00796000
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00796100
&ZMS                  SETC  'THE'                                       00796200
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00796300
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00796400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00796500
&ZMS                  SETC  '&ZMS "START"'                              00796600
&ZMS                  SETC  '&ZMS OR "STOP".'                           00796700
                      MNOTE 8,' &ZMS '                                  00796800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00796900
.ZG116F               ANOP  ,                                           00797000
.*-------------------------------------------------------------------   00797100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00797200
.ZG117                ANOP  ,                                           00797300
&ZTLC                 SETC 'MONITOR_EVENTQ'                             00797400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG131            00797500
&XREQUEST             SETC  'MONITOR_EVENTQ'    SET KEYWORD             00797600
                      AIF   (N'&REQUEST LE 1).ZG117A  CK NUM            00797700
&ZMS                  SETC  '"REQUEST='                                 00797800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00797900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00798000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00798100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00798200
.ZG117A               ANOP  ,                                           00798300
.*------------------------------------------------------------------    00798400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00798500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00798600
.ZG117A0              AIF   (K'&TYPE LE 0).ZG117A1  OK                  00798700
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00798800
.ZG117A1              AIF   (K'&RESTOKEN LE 0).ZG117A2  OK              00798900
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00799000
.ZG117A2              AIF   (K'&EXTRESTOKEN LE 0).ZG117A3  OK           00799100
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00799200
.ZG117A3              AIF   (K'&ENTRYTYPE LE 0).ZG117A4  OK             00799300
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00799400
.ZG117A4              AIF   (K'&ELEMNUM LE 0).ZG117A5  OK               00799500
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00799600
.ZG117A5              AIF   (K'&LISTLIMIT LE 0).ZG117A6  OK             00799700
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00799800
.ZG117A6              AIF   (K'&LISTDESC LE 0).ZG117A7  OK              00799900
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00800000
.ZG117A7              AIF   (K'&LISTKEY LE 0).ZG117A8  OK               00800100
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00800200
.ZG117A8              AIF   (K'&MAXLISTKEY LE 0).ZG117A9  OK            00800300
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00800400
.ZG117A9              AIF   (K'&SETCURSOR LE 0).ZG117A10  OK            00800500
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00800600
.ZG117A10             AIF   (K'&MOVETOLIST LE 0).ZG117A11  OK           00800700
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00800800
.ZG117A11             AIF   (K'&MOVETOKEY LE 0).ZG117A12  OK            00800900
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00801000
.ZG117A12             AIF   (K'&MOVETOPOS LE 0).ZG117A13  OK            00801100
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00801200
.ZG117A13             AIF   (K'&DATAOPER LE 0).ZG117A14  OK             00801300
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00801400
.ZG117A14             AIF   (K'&LISTTYPE LE 0).ZG117A15  OK             00801500
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00801600
.ZG117A15             AIF   (K'&FIRSTELEM LE 0).ZG117A16  OK            00801700
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00801800
.ZG117A16             AIF   (K'&LASTELEM LE 0).ZG117A17  OK             00801900
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00802000
.ZG117A17             AIF   (K'&UNC LE 0).ZG117A18  OK                  00802100
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00802200
.ZG117A18             AIF   (K'&STARTINDEX LE 0).ZG117A19  OK           00802300
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00802400
.ZG117A19             AIF   (K'&ENDINDEX LE 0).ZG117A20  OK             00802500
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00802600
.ZG117A20             AIF   (K'&MOSVECTOR LE 0).ZG117A21  OK            00802700
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00802800
.ZG117A21             AIF   (K'&ZCVAL LE 0).ZG117A22  OK                00802900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00803000
                      AIF  (K'&ZCVAL LE 160).ZG117A22A                  00803100
&ZCVAL                SETC '&ZCVAL'(1,160)                              00803200
&ZCVAL                SETC '&ZCVAL....'                                 00803300
.ZG117A22A            ANOP                                              00803400
&ZMS                  SETC  '"REQUEST'                                  00803500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00803600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00803700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00803800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00803900
.ZG117A22             ANOP  ,                                           00804000
.*------------------------------------------------------------------    00804100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00804200
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00804300
.*-------------------------------------------------------------------   00804400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00804500
.ZG120                ANOP  ,                                           00804600
                      AIF   (K'&ACTION(1) LE 0).ZG120A                  00804700
&ZTLC                 SETC 'START'                                      00804800
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG129             00804900
&XACTION              SETC  'START'     SET KEYWORD                     00805000
                      AIF   (N'&ACTION LE 1).ZG120A  CK NUM             00805100
&ZMS                  SETC  '"ACTION='                                  00805200
&ZMS                  SETC  '&ZMS.&ACTION"'                             00805300
&ZMS                  SETC  '&ZMS "ACTION"'                             00805400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00805500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00805600
.ZG120A               ANOP  ,                                           00805700
.*----------------------------------------------------------------***   00805800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00805900
                      AIF   (N'&VECTORINDEX LE 1).ZG122A  CK NUM        00806000
&ZMS                  SETC  '"VECTORINDEX='                             00806100
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00806200
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        00806300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00806400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00806500
.ZG122A               ANOP  ,                                           00806600
.*-------------------------------------------------------------------   00806700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00806800
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   00806900
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           00807000
                      AIF   (N'&VECTORINDEX GT 1).ZG122B  MULTI         00807100
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           00807200
.ZG122B               AIF   (K'&VECTORINDEX(1) GT 0).ZG122C             00807300
&ZXVECTORINDEX        SETC  ''          RESET IN/OUTPUT                 00807400
&ZMS                  SETC  ' '                                         00807500
&ZMS                  SETC  '&ZMS "VECTORINDEX" KEY AND ITS'            00807600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00807700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00807800
.ZG122C               ANOP  ,                                           00807900
.*-------------------------------------------------------------------   00808000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00808100
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG122R  NOT I/O     00808200
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG122R        00808300
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        00808400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG122P               00808500
                      AIF   (K'&ZCGPR GT 2).ZG122Q                      00808600
                      AIF   ('&ZCGPR' EQ '0').ZG122Q                    00808700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00808800
                      AIF   (T'&ZCGPR NE 'N').ZG122Q  INVALID REG NAME  00808900
.ZG122P               ANOP  ,                                           00809000
                      AIF   (T'&ZCGPR NE 'N').ZG122R  NON NUMERIC       00809100
                      AIF   ('&ZCGPR' LT '2').ZG122Q                    00809200
                      AIF   ('&ZCGPR' LE '12').ZG122R                   00809300
.ZG122Q               ANOP  ,                                           00809400
&ZMS                  SETC  '"VECTORINDEX='                             00809500
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        00809600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00809700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00809800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00809900
.ZG122R               ANOP  ,                                           00810000
.*----------------------------------------------------------------***   00810100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00810200
                      AIF   (N'&DRIVEEXIT LE 1).ZG125A  CK NUM          00810300
&ZMS                  SETC  '"DRIVEEXIT='                               00810400
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00810500
&ZMS                  SETC  '&ZMS "DRIVEEXIT"'                          00810600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00810700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00810800
.ZG125A               ANOP  ,                                           00810900
.*-------------------------------------------------------------------   00811000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00811100
&XDRIVEEXIT           SETC  ''          INITIALIZE XVARIABLE            00811200
.ZG126A   AIF   ('&DRIVEEXIT(1)' NE 'YES').ZG127A                       00811300
&XDRIVEEXIT           SETC  'YES'       SET KEYWORD                     00811400
.*-------------------------------------------------------------------   00811500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00811600
.ZG127A   AIF   ('&DRIVEEXIT(1)' NE 'NO').ZG128A                        00811700
&XDRIVEEXIT           SETC  'NO'        SET KEYWORD                     00811800
.*-------------------------------------------------------------------   00811900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00812000
.ZG128A               AIF   (K'&XDRIVEEXIT GT 0).ZG128C  KEYWORD        00812100
                      AIF   (K'&DRIVEEXIT(1) LE 0).ZG128B               00812200
&ZMS                  SETC  '"DRIVEEXIT='                               00812300
&ZMS                  SETC  '&ZMS.&DRIVEEXIT"'                          00812400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00812500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00812600
&ZMS                  SETC  '&ZMS "YES"'                                00812700
&ZMS                  SETC  '&ZMS OR "NO".'                             00812800
                      MNOTE 8,' &ZMS '                                  00812900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00813000
.ZG128B               ANOP  ,                                           00813100
&XDRIVEEXIT           SETC  'YES'       SET DEFAULT KEYWORD             00813200
.ZG128C               ANOP  ,                                           00813300
&ZXDRIVEEXIT          SETC  'INPUT'     SET IN/OUTPUT                   00813400
.*-------------------------------------------------------------------   00813500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00813600
.ZG129                ANOP  ,                                           00813700
&ZTLC                 SETC 'STOP'                                       00813800
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG130             00813900
&XACTION              SETC  'STOP'      SET KEYWORD                     00814000
                      AIF   (N'&ACTION LE 1).ZG129A  CK NUM             00814100
&ZMS                  SETC  '"ACTION='                                  00814200
&ZMS                  SETC  '&ZMS.&ACTION"'                             00814300
&ZMS                  SETC  '&ZMS "ACTION"'                             00814400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00814500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00814600
.ZG129A               ANOP  ,                                           00814700
.*------------------------------------------------------------------    00814800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00814900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00815000
.ZG129A0              AIF   (K'&VECTORINDEX LE 0).ZG129A1  OK           00815100
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00815200
.ZG129A1              AIF   (K'&DRIVEEXIT LE 0).ZG129A2  OK             00815300
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00815400
.ZG129A2              AIF   (K'&ZCVAL LE 0).ZG129A3  OK                 00815500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00815600
&ZMS                  SETC  '"ACTION'                                   00815700
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00815800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00815900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00816000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00816100
.ZG129A3              ANOP  ,                                           00816200
.*------------------------------------------------------------------    00816300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00816400
.ZG130                ANOP  ,                                           00816500
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00816600
                      AIF   (K'&XACTION GT 0).ZG130E  VALID ARG         00816700
                      AIF   (T'&ACTION EQ 'O').ZG130D  OMITTED          00816800
&ZASYSLNDX            SETA  0                                           00816900
.ZG130A               ANOP  ,           POSITIONAL MACRO KEY            00817000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00817100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG130C           00817200
&ZTLC                 SETC 'ACTION'                                     00817300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG130A  00817400
.ZG130B               ANOP  ,                                           00817500
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00817600
&ZMS                  SETC  'THE "ACTION" KEY'                          00817700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00817800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00817900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00818000
                      AGO   .ZG130E                                     00818100
.ZG130C               ANOP  ,                                           00818200
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00818300
&ZMS                  SETC  '"ACTION='                                  00818400
&ZMS                  SETC  '&ZMS.&ACTION"'                             00818500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00818600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00818700
&ZMS                  SETC  '&ZMS "START"'                              00818800
&ZMS                  SETC  '&ZMS OR "STOP".'                           00818900
                      MNOTE 8,' &ZMS '                                  00819000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00819100
                      AGO   .ZG130E                                     00819200
.ZG130D               ANOP  ,                                           00819300
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00819400
.ZG130E               ANOP  ,                                           00819500
.*------------------------------------------------------------------    00819600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00819700
                      AIF   (K'&ACTION(1) GT 0).ZG130F  PARM            00819800
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00819900
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00820000
&ZMS                  SETC  'THE'                                       00820100
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00820200
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00820300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00820400
&ZMS                  SETC  '&ZMS "START"'                              00820500
&ZMS                  SETC  '&ZMS OR "STOP".'                           00820600
                      MNOTE 8,' &ZMS '                                  00820700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00820800
.ZG130F               ANOP  ,                                           00820900
.*-------------------------------------------------------------------   00821000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00821100
.ZG131                ANOP  ,                                           00821200
&ZTLC                 SETC 'MONITOR_SUBLIST'                            00821300
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG140            00821400
&XREQUEST             SETC  'MONITOR_SUBLIST'   SET KEYWORD             00821500
                      AIF   (N'&REQUEST LE 1).ZG131A  CK NUM            00821600
&ZMS                  SETC  '"REQUEST='                                 00821700
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00821800
&ZMS                  SETC  '&ZMS "REQUEST"'                            00821900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00822000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00822100
.ZG131A               ANOP  ,                                           00822200
.*------------------------------------------------------------------    00822300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00822400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00822500
.ZG131A0              AIF   (K'&TYPE LE 0).ZG131A1  OK                  00822600
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00822700
.ZG131A1              AIF   (K'&RESTOKEN LE 0).ZG131A2  OK              00822800
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00822900
.ZG131A2              AIF   (K'&EXTRESTOKEN LE 0).ZG131A3  OK           00823000
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00823100
.ZG131A3              AIF   (K'&ENTRYTYPE LE 0).ZG131A4  OK             00823200
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00823300
.ZG131A4              AIF   (K'&ELEMNUM LE 0).ZG131A5  OK               00823400
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00823500
.ZG131A5              AIF   (K'&LISTLIMIT LE 0).ZG131A6  OK             00823600
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00823700
.ZG131A6              AIF   (K'&LISTDESC LE 0).ZG131A7  OK              00823800
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00823900
.ZG131A7              AIF   (K'&LISTKEY LE 0).ZG131A8  OK               00824000
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00824100
.ZG131A8              AIF   (K'&MAXLISTKEY LE 0).ZG131A9  OK            00824200
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00824300
.ZG131A9              AIF   (K'&SETCURSOR LE 0).ZG131A10  OK            00824400
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00824500
.ZG131A10             AIF   (K'&MOVETOLIST LE 0).ZG131A11  OK           00824600
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00824700
.ZG131A11             AIF   (K'&MOVETOKEY LE 0).ZG131A12  OK            00824800
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00824900
.ZG131A12             AIF   (K'&MOVETOPOS LE 0).ZG131A13  OK            00825000
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00825100
.ZG131A13             AIF   (K'&DATAOPER LE 0).ZG131A14  OK             00825200
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00825300
.ZG131A14             AIF   (K'&LISTTYPE LE 0).ZG131A15  OK             00825400
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00825500
.ZG131A15             AIF   (K'&FIRSTELEM LE 0).ZG131A16  OK            00825600
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00825700
.ZG131A16             AIF   (K'&LASTELEM LE 0).ZG131A17  OK             00825800
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00825900
.ZG131A17             AIF   (K'&VECTORINDEX LE 0).ZG131A18  OK          00826000
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00826100
.ZG131A18             AIF   (K'&DRIVEEXIT LE 0).ZG131A19  OK            00826200
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00826300
.ZG131A19             AIF   (K'&STARTINDEX LE 0).ZG131A20  OK           00826400
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00826500
.ZG131A20             AIF   (K'&ENDINDEX LE 0).ZG131A21  OK             00826600
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00826700
.ZG131A21             AIF   (K'&MOSVECTOR LE 0).ZG131A22  OK            00826800
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00826900
.ZG131A22             AIF   (K'&ZCVAL LE 0).ZG131A23  OK                00827000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00827100
                      AIF  (K'&ZCVAL LE 160).ZG131A23A                  00827200
&ZCVAL                SETC '&ZCVAL'(1,160)                              00827300
&ZCVAL                SETC '&ZCVAL....'                                 00827400
.ZG131A23A            ANOP                                              00827500
&ZMS                  SETC  '"REQUEST'                                  00827600
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00827700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00827800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00827900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00828000
.ZG131A23             ANOP  ,                                           00828100
.*------------------------------------------------------------------    00828200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00828300
&XACTION              SETC  ''          INITIALIZE XVARIABLE            00828400
.*-------------------------------------------------------------------   00828500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00828600
.ZG134                ANOP  ,                                           00828700
                      AIF   (K'&ACTION(1) LE 0).ZG134A                  00828800
&ZTLC                 SETC 'START'                                      00828900
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG138             00829000
&XACTION              SETC  'START'     SET KEYWORD                     00829100
                      AIF   (N'&ACTION LE 1).ZG134A  CK NUM             00829200
&ZMS                  SETC  '"ACTION='                                  00829300
&ZMS                  SETC  '&ZMS.&ACTION"'                             00829400
&ZMS                  SETC  '&ZMS "ACTION"'                             00829500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00829600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00829700
.ZG134A               ANOP  ,                                           00829800
.*----------------------------------------------------------------***   00829900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00830000
                      AIF   (N'&UNC LE 1).ZG136A  CK NUM                00830100
&ZMS                  SETC  '"UNC='                                     00830200
&ZMS                  SETC  '&ZMS.&UNC"'                                00830300
&ZMS                  SETC  '&ZMS "UNC"'                                00830400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00830500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00830600
.ZG136A               ANOP  ,                                           00830700
.*-------------------------------------------------------------------   00830800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00830900
&ZXUNC                SETC  'INPUT'     SET IN/OUTPUT                   00831000
&XUNC                 SETC  '&UNC(1)'   SET XVARIABLE                   00831100
                      AIF   (N'&UNC GT 1).ZG136B  MULTI                 00831200
&XUNC                 SETC  '&UNC'      SET XVARIABLE                   00831300
.ZG136B               AIF   (K'&UNC(1) GT 0).ZG136C                     00831400
&ZXUNC                SETC  ''          RESET IN/OUTPUT                 00831500
&ZMS                  SETC  ' '                                         00831600
&ZMS                  SETC  '&ZMS "UNC" KEY AND ITS'                    00831700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00831800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00831900
.ZG136C               ANOP  ,                                           00832000
.*-------------------------------------------------------------------   00832100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00832200
                      AIF   (K'&ZXUNC LE 0).ZG136R  NOT I/O             00832300
                      AIF   ('&XUNC'(1,1) NE '(').ZG136R                00832400
&ZCGPR                SETC  '&XUNC'(2,K'&XUNC-2)                        00832500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG136P               00832600
                      AIF   (K'&ZCGPR GT 2).ZG136Q                      00832700
                      AIF   ('&ZCGPR' EQ '0').ZG136Q                    00832800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00832900
                      AIF   (T'&ZCGPR NE 'N').ZG136Q  INVALID REG NAME  00833000
.ZG136P               ANOP  ,                                           00833100
                      AIF   (T'&ZCGPR NE 'N').ZG136R  NON NUMERIC       00833200
                      AIF   ('&ZCGPR' LT '2').ZG136Q                    00833300
                      AIF   ('&ZCGPR' LE '12').ZG136R                   00833400
.ZG136Q               ANOP  ,                                           00833500
&ZMS                  SETC  '"UNC='                                     00833600
&ZMS                  SETC  '&ZMS.&UNC"'                                00833700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00833800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00833900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00834000
.ZG136R               ANOP  ,                                           00834100
.*-------------------------------------------------------------------   00834200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00834300
.ZG138                ANOP  ,                                           00834400
&ZTLC                 SETC 'STOP'                                       00834500
                      AIF   ('&ACTION(1)' NE '&ZTLC').ZG139             00834600
&XACTION              SETC  'STOP'      SET KEYWORD                     00834700
                      AIF   (N'&ACTION LE 1).ZG138A  CK NUM             00834800
&ZMS                  SETC  '"ACTION='                                  00834900
&ZMS                  SETC  '&ZMS.&ACTION"'                             00835000
&ZMS                  SETC  '&ZMS "ACTION"'                             00835100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00835200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00835300
.ZG138A               ANOP  ,                                           00835400
.*------------------------------------------------------------------    00835500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00835600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00835700
.ZG138A0              AIF   (K'&UNC LE 0).ZG138A1  OK                   00835800
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00835900
.ZG138A1              AIF   (K'&ZCVAL LE 0).ZG138A2  OK                 00836000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00836100
&ZMS                  SETC  '"ACTION'                                   00836200
&ZMS                  SETC  '&ZMS.=&ACTION"'                            00836300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00836400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00836500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00836600
.ZG138A2              ANOP  ,                                           00836700
.*------------------------------------------------------------------    00836800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00836900
.ZG139                ANOP  ,                                           00837000
&ZXACTION             SETC  'INPUT'     SET IN/OUTPUT                   00837100
                      AIF   (K'&XACTION GT 0).ZG139E  VALID ARG         00837200
                      AIF   (T'&ACTION EQ 'O').ZG139D  OMITTED          00837300
&ZASYSLNDX            SETA  0                                           00837400
.ZG139A               ANOP  ,           POSITIONAL MACRO KEY            00837500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00837600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG139C           00837700
&ZTLC                 SETC 'ACTION'                                     00837800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG139A  00837900
.ZG139B               ANOP  ,                                           00838000
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00838100
&ZMS                  SETC  'THE "ACTION" KEY'                          00838200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00838300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00838400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00838500
                      AGO   .ZG139E                                     00838600
.ZG139C               ANOP  ,                                           00838700
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00838800
&ZMS                  SETC  '"ACTION='                                  00838900
&ZMS                  SETC  '&ZMS.&ACTION"'                             00839000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00839100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00839200
&ZMS                  SETC  '&ZMS "START"'                              00839300
&ZMS                  SETC  '&ZMS OR "STOP".'                           00839400
                      MNOTE 8,' &ZMS '                                  00839500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00839600
                      AGO   .ZG139E                                     00839700
.ZG139D               ANOP  ,                                           00839800
&XACTION              SETC  'START'     SET DEFAULT KEYWORD             00839900
.ZG139E               ANOP  ,                                           00840000
.*------------------------------------------------------------------    00840100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00840200
                      AIF   (K'&ACTION(1) GT 0).ZG139F  PARM            00840300
&XACTION              SETC  ''          ENSURE NULL KEYWORD             00840400
&ZXACTION             SETC  ''          RESET IN/OUTPUT                 00840500
&ZMS                  SETC  'THE'                                       00840600
&ZMS                  SETC  '&ZMS "ACTION" KEY AND ITS'                 00840700
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00840800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00840900
&ZMS                  SETC  '&ZMS "START"'                              00841000
&ZMS                  SETC  '&ZMS OR "STOP".'                           00841100
                      MNOTE 8,' &ZMS '                                  00841200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00841300
.ZG139F               ANOP  ,                                           00841400
.*-------------------------------------------------------------------   00841500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00841600
.ZG140                ANOP  ,                                           00841700
&ZTLC                 SETC 'MONITOR_SUBLISTS'                           00841800
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG150            00841900
&XREQUEST             SETC  'MONITOR_SUBLISTS'  SET KEYWORD             00842000
                      AIF   (N'&REQUEST LE 1).ZG140A  CK NUM            00842100
&ZMS                  SETC  '"REQUEST='                                 00842200
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00842300
&ZMS                  SETC  '&ZMS "REQUEST"'                            00842400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00842500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00842600
.ZG140A               ANOP  ,                                           00842700
.*------------------------------------------------------------------    00842800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00842900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00843000
.ZG140A0              AIF   (K'&TYPE LE 0).ZG140A1  OK                  00843100
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00843200
.ZG140A1              AIF   (K'&RESTOKEN LE 0).ZG140A2  OK              00843300
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00843400
.ZG140A2              AIF   (K'&EXTRESTOKEN LE 0).ZG140A3  OK           00843500
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00843600
.ZG140A3              AIF   (K'&ENTRYTYPE LE 0).ZG140A4  OK             00843700
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00843800
.ZG140A4              AIF   (K'&ELEMNUM LE 0).ZG140A5  OK               00843900
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00844000
.ZG140A5              AIF   (K'&LISTLIMIT LE 0).ZG140A6  OK             00844100
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00844200
.ZG140A6              AIF   (K'&LISTDESC LE 0).ZG140A7  OK              00844300
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00844400
.ZG140A7              AIF   (K'&LISTKEY LE 0).ZG140A8  OK               00844500
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00844600
.ZG140A8              AIF   (K'&MAXLISTKEY LE 0).ZG140A9  OK            00844700
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00844800
.ZG140A9              AIF   (K'&SETCURSOR LE 0).ZG140A10  OK            00844900
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00845000
.ZG140A10             AIF   (K'&MOVETOLIST LE 0).ZG140A11  OK           00845100
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00845200
.ZG140A11             AIF   (K'&MOVETOKEY LE 0).ZG140A12  OK            00845300
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00845400
.ZG140A12             AIF   (K'&MOVETOPOS LE 0).ZG140A13  OK            00845500
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00845600
.ZG140A13             AIF   (K'&DATAOPER LE 0).ZG140A14  OK             00845700
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00845800
.ZG140A14             AIF   (K'&LISTTYPE LE 0).ZG140A15  OK             00845900
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00846000
.ZG140A15             AIF   (K'&FIRSTELEM LE 0).ZG140A16  OK            00846100
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00846200
.ZG140A16             AIF   (K'&LASTELEM LE 0).ZG140A17  OK             00846300
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00846400
.ZG140A17             AIF   (K'&ACTION LE 0).ZG140A18  OK               00846500
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00846600
.ZG140A18             AIF   (K'&VECTORINDEX LE 0).ZG140A19  OK          00846700
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00846800
.ZG140A19             AIF   (K'&DRIVEEXIT LE 0).ZG140A20  OK            00846900
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00847000
.ZG140A20             AIF   (K'&UNC LE 0).ZG140A21  OK                  00847100
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00847200
.ZG140A21             AIF   (K'&ZCVAL LE 0).ZG140A22  OK                00847300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00847400
                      AIF  (K'&ZCVAL LE 160).ZG140A22A                  00847500
&ZCVAL                SETC '&ZCVAL'(1,160)                              00847600
&ZCVAL                SETC '&ZCVAL....'                                 00847700
.ZG140A22A            ANOP                                              00847800
&ZMS                  SETC  '"REQUEST'                                  00847900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00848000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00848100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00848200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00848300
.ZG140A22             ANOP  ,                                           00848400
.*----------------------------------------------------------------***   00848500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00848600
                      AIF   (N'&STARTINDEX LE 1).ZG142A  CK NUM         00848700
&ZMS                  SETC  '"STARTINDEX='                              00848800
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00848900
&ZMS                  SETC  '&ZMS "STARTINDEX"'                         00849000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00849100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00849200
.ZG142A               ANOP  ,                                           00849300
.*-------------------------------------------------------------------   00849400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00849500
&ZXSTARTINDEX         SETC  'INPUT'     SET IN/OUTPUT                   00849600
&XSTARTINDEX          SETC  '&STARTINDEX(1)'    SET XVARIABLE           00849700
                      AIF   (N'&STARTINDEX GT 1).ZG142B  MULTI          00849800
&XSTARTINDEX          SETC  '&STARTINDEX'       SET XVARIABLE           00849900
.ZG142B               AIF   (K'&STARTINDEX(1) GT 0).ZG142C              00850000
&ZXSTARTINDEX         SETC  ''          RESET IN/OUTPUT                 00850100
&ZMS                  SETC  ' '                                         00850200
&ZMS                  SETC  '&ZMS "STARTINDEX" KEY AND ITS'             00850300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00850400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00850500
.ZG142C               ANOP  ,                                           00850600
.*-------------------------------------------------------------------   00850700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00850800
                      AIF   (K'&ZXSTARTINDEX LE 0).ZG142R  NOT I/O      00850900
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG142R         00851000
&ZCGPR                SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)          00851100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG142P               00851200
                      AIF   (K'&ZCGPR GT 2).ZG142Q                      00851300
                      AIF   ('&ZCGPR' EQ '0').ZG142Q                    00851400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00851500
                      AIF   (T'&ZCGPR NE 'N').ZG142Q  INVALID REG NAME  00851600
.ZG142P               ANOP  ,                                           00851700
                      AIF   (T'&ZCGPR NE 'N').ZG142R  NON NUMERIC       00851800
                      AIF   ('&ZCGPR' LT '2').ZG142Q                    00851900
                      AIF   ('&ZCGPR' LE '12').ZG142R                   00852000
.ZG142Q               ANOP  ,                                           00852100
&ZMS                  SETC  '"STARTINDEX='                              00852200
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00852300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00852400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00852500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00852600
.ZG142R               ANOP  ,                                           00852700
.*----------------------------------------------------------------***   00852800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00852900
                      AIF   (N'&ENDINDEX LE 1).ZG145A  CK NUM           00853000
&ZMS                  SETC  '"ENDINDEX='                                00853100
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00853200
&ZMS                  SETC  '&ZMS "ENDINDEX"'                           00853300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00853400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00853500
.ZG145A               ANOP  ,                                           00853600
.*-------------------------------------------------------------------   00853700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00853800
&ZXENDINDEX           SETC  'INPUT'     SET IN/OUTPUT                   00853900
&XENDINDEX            SETC  '&ENDINDEX(1)'      SET XVARIABLE           00854000
                      AIF   (N'&ENDINDEX GT 1).ZG145B  MULTI            00854100
&XENDINDEX            SETC  '&ENDINDEX'         SET XVARIABLE           00854200
.ZG145B               AIF   (K'&ENDINDEX(1) GT 0).ZG145C                00854300
&ZXENDINDEX           SETC  ''          RESET IN/OUTPUT                 00854400
&ZMS                  SETC  ' '                                         00854500
&ZMS                  SETC  '&ZMS "ENDINDEX" KEY AND ITS'               00854600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00854700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00854800
.ZG145C               ANOP  ,                                           00854900
.*-------------------------------------------------------------------   00855000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00855100
                      AIF   (K'&ZXENDINDEX LE 0).ZG145R  NOT I/O        00855200
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZG145R           00855300
&ZCGPR                SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)              00855400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG145P               00855500
                      AIF   (K'&ZCGPR GT 2).ZG145Q                      00855600
                      AIF   ('&ZCGPR' EQ '0').ZG145Q                    00855700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00855800
                      AIF   (T'&ZCGPR NE 'N').ZG145Q  INVALID REG NAME  00855900
.ZG145P               ANOP  ,                                           00856000
                      AIF   (T'&ZCGPR NE 'N').ZG145R  NON NUMERIC       00856100
                      AIF   ('&ZCGPR' LT '2').ZG145Q                    00856200
                      AIF   ('&ZCGPR' LE '12').ZG145R                   00856300
.ZG145Q               ANOP  ,                                           00856400
&ZMS                  SETC  '"ENDINDEX='                                00856500
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00856600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00856700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00856800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00856900
.ZG145R               ANOP  ,                                           00857000
.*----------------------------------------------------------------***   00857100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00857200
                      AIF   (N'&MOSVECTOR LE 1).ZG148A  CK NUM          00857300
&ZMS                  SETC  '"MOSVECTOR='                               00857400
&ZMS                  SETC  '&ZMS.&MOSVECTOR"'                          00857500
&ZMS                  SETC  '&ZMS "MOSVECTOR"'                          00857600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00857700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00857800
.ZG148A               ANOP  ,                                           00857900
.*-------------------------------------------------------------------   00858000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00858100
&ZXMOSVECTOR          SETC  'OUTPUT'    SET IN/OUTPUT                   00858200
&XMOSVECTOR           SETC  '&MOSVECTOR(1)'     SET XVARIABLE           00858300
                      AIF   (N'&MOSVECTOR GT 1).ZG148B  MULTI           00858400
&XMOSVECTOR           SETC  '&MOSVECTOR'        SET XVARIABLE           00858500
.ZG148B               AIF   (K'&MOSVECTOR(1) GT 0).ZG148C               00858600
&ZXMOSVECTOR          SETC  ''          RESET IN/OUTPUT                 00858700
&ZMS                  SETC  ' '                                         00858800
&ZMS                  SETC  '&ZMS "MOSVECTOR" KEY AND ITS'              00858900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00859000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00859100
.ZG148C               ANOP  ,                                           00859200
.*-------------------------------------------------------------------   00859300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00859400
                      AIF   (K'&ZXMOSVECTOR LE 0).ZG148R  NOT I/O       00859500
                      AIF   ('&XMOSVECTOR'(1,1) NE '(').ZG148R          00859600
&ZCGPR                SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)            00859700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG148P               00859800
                      AIF   (K'&ZCGPR GT 2).ZG148Q                      00859900
                      AIF   ('&ZCGPR' EQ '0').ZG148Q                    00860000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00860100
                      AIF   (T'&ZCGPR NE 'N').ZG148Q  INVALID REG NAME  00860200
.ZG148P               ANOP  ,                                           00860300
                      AIF   (T'&ZCGPR NE 'N').ZG148R  NON NUMERIC       00860400
                      AIF   ('&ZCGPR' LT '2').ZG148Q                    00860500
                      AIF   ('&ZCGPR' LE '12').ZG148R                   00860600
.ZG148Q               ANOP  ,                                           00860700
&ZMS                  SETC  '"MOSVECTOR='                               00860800
&ZMS                  SETC  '&ZMS.&MOSVECTOR"'                          00860900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00861000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00861100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00861200
.ZG148R               ANOP  ,                                           00861300
.*-------------------------------------------------------------------   00861400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00861500
.ZG150                ANOP  ,                                           00861600
&ZTLC                 SETC 'LOCK'                                       00861700
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG151            00861800
&XREQUEST             SETC  'LOCK'      SET KEYWORD                     00861900
                      AIF   (N'&REQUEST LE 1).ZG150A  CK NUM            00862000
&ZMS                  SETC  '"REQUEST='                                 00862100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00862200
&ZMS                  SETC  '&ZMS "REQUEST"'                            00862300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00862400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00862500
.ZG150A               ANOP  ,                                           00862600
.*------------------------------------------------------------------    00862700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00862800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00862900
.ZG150A0              AIF   (K'&TYPE LE 0).ZG150A1  OK                  00863000
&ZCVAL                SETC '&ZCVAL TYPE'        INCORRECT KEY USED      00863100
.ZG150A1              AIF   (K'&RESTOKEN LE 0).ZG150A2  OK              00863200
&ZCVAL                SETC '&ZCVAL RESTOKEN'    INCORRECT KEY USED      00863300
.ZG150A2              AIF   (K'&EXTRESTOKEN LE 0).ZG150A3  OK           00863400
&ZCVAL                SETC '&ZCVAL EXTRESTOKEN'  INCORRECT KEY USED     00863500
.ZG150A3              AIF   (K'&ENTRYTYPE LE 0).ZG150A4  OK             00863600
&ZCVAL                SETC '&ZCVAL ENTRYTYPE'   INCORRECT KEY USED      00863700
.ZG150A4              AIF   (K'&ELEMNUM LE 0).ZG150A5  OK               00863800
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00863900
.ZG150A5              AIF   (K'&LISTLIMIT LE 0).ZG150A6  OK             00864000
&ZCVAL                SETC '&ZCVAL LISTLIMIT'   INCORRECT KEY USED      00864100
.ZG150A6              AIF   (K'&LISTDESC LE 0).ZG150A7  OK              00864200
&ZCVAL                SETC '&ZCVAL LISTDESC'    INCORRECT KEY USED      00864300
.ZG150A7              AIF   (K'&LISTKEY LE 0).ZG150A8  OK               00864400
&ZCVAL                SETC '&ZCVAL LISTKEY'     INCORRECT KEY USED      00864500
.ZG150A8              AIF   (K'&MAXLISTKEY LE 0).ZG150A9  OK            00864600
&ZCVAL                SETC '&ZCVAL MAXLISTKEY'  INCORRECT KEY USED      00864700
.ZG150A9              AIF   (K'&SETCURSOR LE 0).ZG150A10  OK            00864800
&ZCVAL                SETC '&ZCVAL SETCURSOR'   INCORRECT KEY USED      00864900
.ZG150A10             AIF   (K'&MOVETOLIST LE 0).ZG150A11  OK           00865000
&ZCVAL                SETC '&ZCVAL MOVETOLIST'  INCORRECT KEY USED      00865100
.ZG150A11             AIF   (K'&MOVETOKEY LE 0).ZG150A12  OK            00865200
&ZCVAL                SETC '&ZCVAL MOVETOKEY'   INCORRECT KEY USED      00865300
.ZG150A12             AIF   (K'&MOVETOPOS LE 0).ZG150A13  OK            00865400
&ZCVAL                SETC '&ZCVAL MOVETOPOS'   INCORRECT KEY USED      00865500
.ZG150A13             AIF   (K'&DATAOPER LE 0).ZG150A14  OK             00865600
&ZCVAL                SETC '&ZCVAL DATAOPER'    INCORRECT KEY USED      00865700
.ZG150A14             AIF   (K'&LISTTYPE LE 0).ZG150A15  OK             00865800
&ZCVAL                SETC '&ZCVAL LISTTYPE'    INCORRECT KEY USED      00865900
.ZG150A15             AIF   (K'&FIRSTELEM LE 0).ZG150A16  OK            00866000
&ZCVAL                SETC '&ZCVAL FIRSTELEM'   INCORRECT KEY USED      00866100
.ZG150A16             AIF   (K'&LASTELEM LE 0).ZG150A17  OK             00866200
&ZCVAL                SETC '&ZCVAL LASTELEM'    INCORRECT KEY USED      00866300
.ZG150A17             AIF   (K'&ACTION LE 0).ZG150A18  OK               00866400
&ZCVAL                SETC '&ZCVAL ACTION'      INCORRECT KEY USED      00866500
.ZG150A18             AIF   (K'&VECTORINDEX LE 0).ZG150A19  OK          00866600
&ZCVAL                SETC '&ZCVAL VECTORINDEX'  INCORRECT KEY USED     00866700
.ZG150A19             AIF   (K'&DRIVEEXIT LE 0).ZG150A20  OK            00866800
&ZCVAL                SETC '&ZCVAL DRIVEEXIT'   INCORRECT KEY USED      00866900
.ZG150A20             AIF   (K'&UNC LE 0).ZG150A21  OK                  00867000
&ZCVAL                SETC '&ZCVAL UNC'         INCORRECT KEY USED      00867100
.ZG150A21             AIF   (K'&STARTINDEX LE 0).ZG150A22  OK           00867200
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00867300
.ZG150A22             AIF   (K'&ENDINDEX LE 0).ZG150A23  OK             00867400
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00867500
.ZG150A23             AIF   (K'&MOSVECTOR LE 0).ZG150A24  OK            00867600
&ZCVAL                SETC '&ZCVAL MOSVECTOR'   INCORRECT KEY USED      00867700
.ZG150A24             AIF   (K'&ZCVAL LE 0).ZG150A25  OK                00867800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00867900
                      AIF  (K'&ZCVAL LE 160).ZG150A25A                  00868000
&ZCVAL                SETC '&ZCVAL'(1,160)                              00868100
&ZCVAL                SETC '&ZCVAL....'                                 00868200
.ZG150A25A            ANOP                                              00868300
&ZMS                  SETC  '"REQUEST'                                  00868400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00868500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00868600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00868700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00868800
.ZG150A25             ANOP  ,                                           00868900
.*------------------------------------------------------------------    00869000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00869100
.ZG151                ANOP  ,                                           00869200
&ZXREQUEST            SETC  'INPUT'     SET IN/OUTPUT                   00869300
                      AIF   (K'&XREQUEST GT 0).ZG151E  VALID ARG        00869400
                      AIF   (T'&REQUEST EQ 'O').ZG151D  OMITTED         00869500
&ZASYSLNDX            SETA  0                                           00869600
.ZG151A               ANOP  ,           POSITIONAL MACRO KEY            00869700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00869800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG151C           00869900
&ZTLC                 SETC 'REQUEST'                                    00870000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG151A  00870100
.ZG151B               ANOP  ,                                           00870200
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00870300
&ZMS                  SETC  'THE "REQUEST" KEY'                         00870400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00870500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00870600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00870700
                      AGO   .ZG151E                                     00870800
.ZG151C               ANOP  ,                                           00870900
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00871000
&ZMS                  SETC  '"REQUEST='                                 00871100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00871200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00871300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00871400
&ZMS                  SETC  '&ZMS "READ",'                              00871500
&ZMS                  SETC  '&ZMS "READ_LIST",'                         00871600
&ZMS                  SETC  '&ZMS "READ_MULT",'                         00871700
&ZMS                  SETC  '&ZMS "READ_LCONTROLS",'                    00871800
&ZMS                  SETC  '&ZMS "READ_EQCONTROLS",'                   00871900
&ZMS                  SETC  '&ZMS "READ_EMCONTROLS",'                   00872000
&ZMS                  SETC  '&ZMS "DEQ_EVENTQ",'                        00872100
&ZMS                  SETC  '&ZMS "WRITE",'                             00872200
&ZMS                  SETC  '&ZMS "WRITE_LCONTROLS",'                   00872300
&ZMS                  SETC  '&ZMS "MOVE",'                              00872400
                      MNOTE 8,' &ZMS '                                  00872500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00872600
&ZMS                  SETC  '(CONTINUED) '                              00872700
&ZMS                  SETC  '&ZMS "DELETE",'                            00872800
&ZMS                  SETC  '&ZMS "DELETE_MULT",'                       00872900
&ZMS                  SETC  '&ZMS "DELETE_ENTRYLIST",'                  00873000
&ZMS                  SETC  '&ZMS "MONITOR_LIST",'                      00873100
&ZMS                  SETC  '&ZMS "MONITOR_EVENTQ",'                    00873200
&ZMS                  SETC  '&ZMS "MONITOR_SUBLIST",'                   00873300
&ZMS                  SETC  '&ZMS "MONITOR_SUBLISTS",'                  00873400
&ZMS                  SETC  '&ZMS OR "LOCK".'                           00873500
                      MNOTE 8,' &ZMS '                                  00873600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00873700
                      AGO   .ZG151E                                     00873800
.ZG151D               ANOP  ,                                           00873900
&XREQUEST             SETC  'READ'      SET DEFAULT KEYWORD             00874000
.ZG151E               ANOP  ,                                           00874100
.*------------------------------------------------------------------    00874200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00874300
                      AIF   (K'&REQUEST(1) GT 0).ZG151F  PARM           00874400
&XREQUEST             SETC  ''          ENSURE NULL KEYWORD             00874500
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 00874600
&ZMS                  SETC  'THE'                                       00874700
&ZMS                  SETC  '&ZMS "REQUEST" KEY AND ITS'                00874800
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               00874900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00875000
&ZMS                  SETC  '&ZMS "READ",'                              00875100
&ZMS                  SETC  '&ZMS "READ_LIST",'                         00875200
&ZMS                  SETC  '&ZMS "READ_MULT",'                         00875300
&ZMS                  SETC  '&ZMS "READ_LCONTROLS",'                    00875400
&ZMS                  SETC  '&ZMS "READ_EQCONTROLS",'                   00875500
&ZMS                  SETC  '&ZMS "READ_EMCONTROLS",'                   00875600
&ZMS                  SETC  '&ZMS "DEQ_EVENTQ",'                        00875700
&ZMS                  SETC  '&ZMS "WRITE",'                             00875800
&ZMS                  SETC  '&ZMS "WRITE_LCONTROLS",'                   00875900
                      MNOTE 8,' &ZMS '                                  00876000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00876100
&ZMS                  SETC  '(CONTINUED) '                              00876200
&ZMS                  SETC  '&ZMS "MOVE",'                              00876300
&ZMS                  SETC  '&ZMS "DELETE",'                            00876400
&ZMS                  SETC  '&ZMS "DELETE_MULT",'                       00876500
&ZMS                  SETC  '&ZMS "DELETE_ENTRYLIST",'                  00876600
&ZMS                  SETC  '&ZMS "MONITOR_LIST",'                      00876700
&ZMS                  SETC  '&ZMS "MONITOR_EVENTQ",'                    00876800
&ZMS                  SETC  '&ZMS "MONITOR_SUBLIST",'                   00876900
&ZMS                  SETC  '&ZMS "MONITOR_SUBLISTS",'                  00877000
&ZMS                  SETC  '&ZMS OR "LOCK".'                           00877100
                      MNOTE 8,' &ZMS '                                  00877200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00877300
.ZG151F               ANOP  ,                                           00877400
.*----------------------------------------------------------------***   00877500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00877600
                      AIF   (N'&CONTOKEN LE 1).ZG153A  CK NUM           00877700
&ZMS                  SETC  '"CONTOKEN='                                00877800
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           00877900
&ZMS                  SETC  '&ZMS "CONTOKEN"'                           00878000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00878100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00878200
.ZG153A               ANOP  ,                                           00878300
.*-------------------------------------------------------------------   00878400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00878500
&ZXCONTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   00878600
&XCONTOKEN            SETC  '&CONTOKEN(1)'      SET XVARIABLE           00878700
                      AIF   (N'&CONTOKEN GT 1).ZG153B  MULTI            00878800
&XCONTOKEN            SETC  '&CONTOKEN'         SET XVARIABLE           00878900
.ZG153B               AIF   (K'&CONTOKEN(1) GT 0).ZG153C                00879000
&ZXCONTOKEN           SETC  ''          RESET IN/OUTPUT                 00879100
&ZMS                  SETC  ' '                                         00879200
&ZMS                  SETC  '&ZMS "CONTOKEN" KEY AND ITS'               00879300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00879400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00879500
.ZG153C               ANOP  ,                                           00879600
.*-------------------------------------------------------------------   00879700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00879800
                      AIF   (K'&ZXCONTOKEN LE 0).ZG153R  NOT I/O        00879900
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZG153R           00880000
&ZCGPR                SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)              00880100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG153P               00880200
                      AIF   (K'&ZCGPR GT 2).ZG153Q                      00880300
                      AIF   ('&ZCGPR' EQ '0').ZG153Q                    00880400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00880500
                      AIF   (T'&ZCGPR NE 'N').ZG153Q  INVALID REG NAME  00880600
.ZG153P               ANOP  ,                                           00880700
                      AIF   (T'&ZCGPR NE 'N').ZG153R  NON NUMERIC       00880800
                      AIF   ('&ZCGPR' LT '2').ZG153Q                    00880900
                      AIF   ('&ZCGPR' LE '12').ZG153R                   00881000
.ZG153Q               ANOP  ,                                           00881100
&ZMS                  SETC  '"CONTOKEN='                                00881200
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           00881300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00881400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00881500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00881600
.ZG153R               ANOP  ,                                           00881700
.*----------------------------------------------------------------***   00881800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00881900
                      AIF   (N'&REQID LE 1).ZG156A  CK NUM              00882000
&ZMS                  SETC  '"REQID='                                   00882100
&ZMS                  SETC  '&ZMS.&REQID"'                              00882200
&ZMS                  SETC  '&ZMS "REQID"'                              00882300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00882400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00882500
.ZG156A               ANOP  ,                                           00882600
.*-------------------------------------------------------------------   00882700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00882800
&ZXREQID              SETC  'INPUT'     SET IN/OUTPUT                   00882900
&XREQID               SETC  'NO_REQID'                                  00883000
                      AIF   (K'&REQID(1) LE 0).ZG156B  PARM             00883100
&XREQID               SETC  '&REQID(1)'         SET XVARIABLE           00883200
                      AIF   (N'&REQID GT 1).ZG156B  MULTI               00883300
&XREQID               SETC  '&REQID'    SET XVARIABLE                   00883400
.ZG156B               ANOP  ,                                           00883500
.*-------------------------------------------------------------------   00883600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00883700
                      AIF   (K'&ZXREQID LE 0).ZG156R  NOT I/O           00883800
         AIF   ('&XREQID' EQ 'NO_REQID').ZG156R                         00883900
                      AIF   ('&XREQID'(1,1) NE '(').ZG156R              00884000
&ZCGPR                SETC  '&XREQID'(2,K'&XREQID-2)                    00884100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG156P               00884200
                      AIF   (K'&ZCGPR GT 2).ZG156Q                      00884300
                      AIF   ('&ZCGPR' EQ '0').ZG156Q                    00884400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00884500
                      AIF   (T'&ZCGPR NE 'N').ZG156Q  INVALID REG NAME  00884600
.ZG156P               ANOP  ,                                           00884700
                      AIF   (T'&ZCGPR NE 'N').ZG156R  NON NUMERIC       00884800
                      AIF   ('&ZCGPR' LT '2').ZG156Q                    00884900
                      AIF   ('&ZCGPR' LE '12').ZG156R                   00885000
.ZG156Q               ANOP  ,                                           00885100
&ZMS                  SETC  '"REQID='                                   00885200
&ZMS                  SETC  '&ZMS.&REQID"'                              00885300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00885400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00885500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00885600
.ZG156R               ANOP  ,                                           00885700
.*----------------------------------------------------------------***   00885800
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00885900
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            00886000
                      AIF   (K'&BUFLIST LE 0).ZG159C                    00886100
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00886200
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   00886300
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   00886400
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      00886500
                      AIF   (N'&BUFLIST GT 1).ZG159A                    00886600
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              00886700
.ZG159A               AIF   (N'&BUFLIST LE 1).ZG159B  CK NUM            00886800
&ZMS                  SETC  '"BUFLIST='                                 00886900
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00887000
&ZMS                  SETC  '&ZMS "BUFLIST"'                            00887100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00887200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00887300
.ZG159B               AIF   (K'&XBUFLIST GT 0).ZG159C  ONE PARM         00887400
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00887500
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 00887600
&ZMS                  SETC  ' '                                         00887700
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                00887800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00887900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00888000
.ZG159C               ANOP  ,                                           00888100
.*----------------------------------------------------------------***   00888200
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00888300
                      AIF   (K'&BUFFER LE 0).ZG182D  NO ME KEY          00888400
                      AIF   (N'&BUFFER LE 1).ZG182A  CK NUM             00888500
&ZMS                  SETC  '"BUFFER='                                  00888600
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00888700
&ZMS                  SETC  '&ZMS "BUFFER"'                             00888800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00888900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00889000
.ZG182A               AIF   (K'&XDATAREA LE 0).ZG182B                   00889100
&ZMS                  SETC  '"BUFFER'                                   00889200
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00889300
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       00889400
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          00889500
                      MNOTE 8,' &ZMS KEY.'                              00889600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00889700
                      AGO   .ZG182D                                     00889800
.*                                                                      00889900
.ZG182B               ANOP  ,                                           00890000
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00890100
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   00890200
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   00890300
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      00890400
                      AIF   (N'&BUFFER GT 1).ZG182C                     00890500
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              00890600
.ZG182C               AIF   (K'&XBUFFER GT 0).ZG182D  ONE PARM          00890700
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 00890800
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 00890900
&ZMS                  SETC  ' '                                         00891000
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 00891100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00891200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00891300
.ZG182D               ANOP  ,                                           00891400
.*------------------------------------------------------------------    00891500
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00891600
                      AIF   (K'&XDATAREA GT 0).ZG194B                   00891700
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   00891800
&XDATAREA             SETC  'BUFLIST'   SET DEFAULT                     00891900
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   00892000
&XBUFLIST             SETC  '0'         SET DEFAULT PARM                00892100
.ZG194B               ANOP  ,                                           00892200
.*-------------------------------------------------------------------   00892300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00892400
                      AIF   (K'&ZXBUFFER LE 0).ZG194R  NOT I/O          00892500
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG194R             00892600
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  00892700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG194P               00892800
                      AIF   (K'&ZCGPR GT 2).ZG194Q                      00892900
                      AIF   ('&ZCGPR' EQ '0').ZG194Q                    00893000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00893100
                      AIF   (T'&ZCGPR NE 'N').ZG194Q  INVALID REG NAME  00893200
.ZG194P               ANOP  ,                                           00893300
                      AIF   (T'&ZCGPR NE 'N').ZG194R  NON NUMERIC       00893400
                      AIF   ('&ZCGPR' LT '2').ZG194Q                    00893500
                      AIF   ('&ZCGPR' LE '12').ZG194R                   00893600
.ZG194Q               ANOP  ,                                           00893700
&ZMS                  SETC  '"BUFFER='                                  00893800
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00893900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00894000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00894100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00894200
.ZG194R               ANOP  ,                                           00894300
.*-------------------------------------------------------------------   00894400
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00894500
.ZG159ZY  AIF    ('&XDATAREA' NE 'BUFLIST').ZG182ZY                     00894600
.*-------------------------------------------------------------------   00894700
.***AG.KMEKY14 NAME, OPT INPUT, ME KEYS -DISALLOWED KEYS                00894800
&ZCVAL                SETC ''           ERROR KEY FIELD                 00894900
.ZG159I0              AIF   (K'&BUFSIZE LE 0).ZG159I1                   00895000
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          00895100
.ZG159I1              AIF   (K'&ZCVAL LE 0).ZG159J  KEY                 00895200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00895300
&ZMS                  SETC  '"BUFLIST'                                  00895400
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           00895500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00895600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00895700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00895800
.ZG159J               ANOP  ,                                           00895900
.*-------------------------------------------------------------------   00896000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00896100
                      AIF   (K'&ZXBUFLIST LE 0).ZG159R  NOT I/O         00896200
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG159R            00896300
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                00896400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG159P               00896500
                      AIF   (K'&ZCGPR GT 2).ZG159Q                      00896600
                      AIF   ('&ZCGPR' EQ '0').ZG159Q                    00896700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00896800
                      AIF   (T'&ZCGPR NE 'N').ZG159Q  INVALID REG NAME  00896900
.ZG159P               ANOP  ,                                           00897000
                      AIF   (T'&ZCGPR NE 'N').ZG159R  NON NUMERIC       00897100
                      AIF   ('&ZCGPR' LT '2').ZG159Q                    00897200
                      AIF   ('&ZCGPR' LE '12').ZG159R                   00897300
.ZG159Q               ANOP  ,                                           00897400
&ZMS                  SETC  '"BUFLIST='                                 00897500
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            00897600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00897700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00897800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00897900
.ZG159R               ANOP  ,                                           00898000
.*------------------------------------------------------------------    00898100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00898200
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            00898300
.*-------------------------------------------------------------------   00898400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00898500
.ZG162                ANOP  ,                                           00898600
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG162A             00898700
&ZTLC                 SETC 'VIRTUAL'                                    00898800
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG174        00898900
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     00899000
                      AIF   (N'&BUFADDRTYPE LE 1).ZG162A  CK NUM        00899100
&ZMS                  SETC  '"BUFADDRTYPE='                             00899200
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00899300
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00899400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00899500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00899600
.ZG162A               ANOP  ,                                           00899700
.*------------------------------------------------------------------    00899800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00899900
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00900000
.*-------------------------------------------------------------------   00900100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00900200
.ZG165                ANOP  ,                                           00900300
                      AIF   (K'&PAGEABLE(1) LE 0).ZG165A                00900400
&ZTLC                 SETC 'YES'                                        00900500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG169           00900600
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00900700
                      AIF   (N'&PAGEABLE LE 1).ZG165A  CK NUM           00900800
&ZMS                  SETC  '"PAGEABLE='                                00900900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00901000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00901100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00901200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00901300
.ZG165A               ANOP  ,                                           00901400
.*----------------------------------------------------------------***   00901500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00901600
                      AIF   (N'&BUFSTGKEY LE 1).ZG167A  CK NUM          00901700
&ZMS                  SETC  '"BUFSTGKEY='                               00901800
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00901900
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00902000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00902100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00902200
.ZG167A               ANOP  ,                                           00902300
.*-------------------------------------------------------------------   00902400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00902500
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00902600
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00902700
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG167B  PARM         00902800
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00902900
                      AIF   (N'&BUFSTGKEY GT 1).ZG167B  MULTI           00903000
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00903100
.ZG167B               ANOP  ,                                           00903200
.*-------------------------------------------------------------------   00903300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00903400
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG167R  NOT I/O       00903500
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG167R                  00903600
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG167R          00903700
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00903800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG167P               00903900
                      AIF   (K'&ZCGPR GT 2).ZG167Q                      00904000
                      AIF   ('&ZCGPR' EQ '0').ZG167Q                    00904100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00904200
                      AIF   (T'&ZCGPR NE 'N').ZG167Q  INVALID REG NAME  00904300
.ZG167P               ANOP  ,                                           00904400
                      AIF   (T'&ZCGPR NE 'N').ZG167R  NON NUMERIC       00904500
                      AIF   ('&ZCGPR' LT '2').ZG167Q                    00904600
                      AIF   ('&ZCGPR' LE '12').ZG167R                   00904700
.ZG167Q               ANOP  ,                                           00904800
&ZMS                  SETC  '"BUFSTGKEY='                               00904900
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00905000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00905100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00905200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00905300
.ZG167R               ANOP  ,                                           00905400
.*-------------------------------------------------------------------   00905500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00905600
.ZG169                ANOP  ,                                           00905700
&ZTLC                 SETC 'NO'                                         00905800
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG170           00905900
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00906000
                      AIF   (N'&PAGEABLE LE 1).ZG169A  CK NUM           00906100
&ZMS                  SETC  '"PAGEABLE='                                00906200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00906300
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00906400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00906500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00906600
.ZG169A               ANOP  ,                                           00906700
.*------------------------------------------------------------------    00906800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00906900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00907000
.ZG169A0              AIF   (K'&BUFSTGKEY LE 0).ZG169A1  OK             00907100
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00907200
.ZG169A1              AIF   (K'&ZCVAL LE 0).ZG169A2  OK                 00907300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00907400
&ZMS                  SETC  '"PAGEABLE'                                 00907500
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00907600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00907700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00907800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00907900
.ZG169A2              ANOP  ,                                           00908000
.*------------------------------------------------------------------    00908100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00908200
.ZG170                ANOP  ,                                           00908300
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00908400
                      AIF   (K'&XPAGEABLE GT 0).ZG170E  VALID ARG       00908500
                      AIF   (T'&PAGEABLE EQ 'O').ZG170D  OMITTED        00908600
&ZASYSLNDX            SETA  0                                           00908700
.ZG170A               ANOP  ,           POSITIONAL MACRO KEY            00908800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00908900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG170C           00909000
&ZTLC                 SETC 'PAGEABLE'                                   00909100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG170A  00909200
.ZG170B               ANOP  ,                                           00909300
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00909400
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        00909500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00909600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00909700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00909800
                      AGO   .ZG170E                                     00909900
.ZG170C               ANOP  ,                                           00910000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00910100
&ZMS                  SETC  '"PAGEABLE='                                00910200
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00910300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00910400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00910500
&ZMS                  SETC  '&ZMS "YES"'                                00910600
&ZMS                  SETC  '&ZMS OR "NO".'                             00910700
                      MNOTE 8,' &ZMS '                                  00910800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00910900
                      AGO   .ZG170E                                     00911000
.ZG170D               ANOP  ,                                           00911100
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00911200
.ZG170E               ANOP  ,                                           00911300
.*----------------------------------------------------------------***   00911400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00911500
                      AIF   (N'&BUFALET LE 1).ZG172A  CK NUM            00911600
&ZMS                  SETC  '"BUFALET='                                 00911700
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00911800
&ZMS                  SETC  '&ZMS "BUFALET"'                            00911900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00912000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00912100
.ZG172A               ANOP  ,                                           00912200
.*-------------------------------------------------------------------   00912300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00912400
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   00912500
&XBUFALET             SETC  'NO_BUFALET'                                00912600
                      AIF   (K'&BUFALET(1) LE 0).ZG172B  PARM           00912700
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           00912800
                      AIF   (N'&BUFALET GT 1).ZG172B  MULTI             00912900
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   00913000
.ZG172B               ANOP  ,                                           00913100
.*-------------------------------------------------------------------   00913200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00913300
                      AIF   (K'&ZXBUFALET LE 0).ZG172R  NOT I/O         00913400
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG172R                     00913500
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG172R            00913600
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                00913700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG172P               00913800
                      AIF   (K'&ZCGPR GT 2).ZG172Q                      00913900
                      AIF   ('&ZCGPR' EQ '0').ZG172Q                    00914000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00914100
                      AIF   (T'&ZCGPR NE 'N').ZG172Q  INVALID REG NAME  00914200
.ZG172P               ANOP  ,                                           00914300
                      AIF   (T'&ZCGPR NE 'N').ZG172R  NON NUMERIC       00914400
                      AIF   ('&ZCGPR' LT '2').ZG172Q                    00914500
                      AIF   ('&ZCGPR' LE '12').ZG172R                   00914600
.ZG172Q               ANOP  ,                                           00914700
&ZMS                  SETC  '"BUFALET='                                 00914800
&ZMS                  SETC  '&ZMS.&BUFALET"'                            00914900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00915000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00915100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00915200
.ZG172R               ANOP  ,                                           00915300
.*-------------------------------------------------------------------   00915400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00915500
.ZG174                ANOP  ,                                           00915600
&ZTLC                 SETC 'REAL'                                       00915700
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG175        00915800
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     00915900
                      AIF   (N'&BUFADDRTYPE LE 1).ZG174A  CK NUM        00916000
&ZMS                  SETC  '"BUFADDRTYPE='                             00916100
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00916200
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        00916300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00916400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00916500
.ZG174A               ANOP  ,                                           00916600
.*------------------------------------------------------------------    00916700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00916800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00916900
.ZG174A0              AIF   (K'&PAGEABLE LE 0).ZG174A1  OK              00917000
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      00917100
.ZG174A1              AIF   (K'&BUFSTGKEY LE 0).ZG174A2  OK             00917200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00917300
.ZG174A2              AIF   (K'&BUFALET LE 0).ZG174A3  OK               00917400
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      00917500
.ZG174A3              AIF   (K'&ZCVAL LE 0).ZG174A4  OK                 00917600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00917700
&ZMS                  SETC  '"BUFADDRTYPE'                              00917800
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       00917900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00918000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00918100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00918200
.ZG174A4              ANOP  ,                                           00918300
.*------------------------------------------------------------------    00918400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00918500
.ZG175                ANOP  ,                                           00918600
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   00918700
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG175E  VALID ARG    00918800
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG175D  OMITTED     00918900
&ZASYSLNDX            SETA  0                                           00919000
.ZG175A               ANOP  ,           POSITIONAL MACRO KEY            00919100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00919200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG175C           00919300
&ZTLC                 SETC 'BUFADDRTYPE'                                00919400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG175A  00919500
.ZG175B               ANOP  ,                                           00919600
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00919700
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     00919800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00919900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00920000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00920100
                      AGO   .ZG175E                                     00920200
.ZG175C               ANOP  ,                                           00920300
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 00920400
&ZMS                  SETC  '"BUFADDRTYPE='                             00920500
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        00920600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00920700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00920800
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            00920900
&ZMS                  SETC  '&ZMS OR "REAL".'                           00921000
                      MNOTE 8,' &ZMS '                                  00921100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00921200
                      AGO   .ZG175E                                     00921300
.ZG175D               ANOP  ,                                           00921400
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             00921500
.ZG175E               ANOP  ,                                           00921600
.*----------------------------------------------------------------***   00921700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00921800
                      AIF   (N'&BUFNUM LE 1).ZG177A  CK NUM             00921900
&ZMS                  SETC  '"BUFNUM='                                  00922000
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             00922100
&ZMS                  SETC  '&ZMS "BUFNUM"'                             00922200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00922300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00922400
.ZG177A               ANOP  ,                                           00922500
.*-------------------------------------------------------------------   00922600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00922700
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   00922800
&XBUFNUM              SETC  'NO_BUFNUM'                                 00922900
                      AIF   (K'&BUFNUM(1) LE 0).ZG177B  PARM            00923000
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           00923100
                      AIF   (N'&BUFNUM GT 1).ZG177B  MULTI              00923200
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   00923300
.ZG177B               ANOP  ,                                           00923400
.*-------------------------------------------------------------------   00923500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00923600
                      AIF   (K'&ZXBUFNUM LE 0).ZG177R  NOT I/O          00923700
         AIF   ('&XBUFNUM' EQ 'NO_BUFNUM').ZG177R                       00923800
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG177R             00923900
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  00924000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG177P               00924100
                      AIF   (K'&ZCGPR GT 2).ZG177Q                      00924200
                      AIF   ('&ZCGPR' EQ '0').ZG177Q                    00924300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00924400
                      AIF   (T'&ZCGPR NE 'N').ZG177Q  INVALID REG NAME  00924500
.ZG177P               ANOP  ,                                           00924600
                      AIF   (T'&ZCGPR NE 'N').ZG177R  NON NUMERIC       00924700
                      AIF   ('&ZCGPR' LT '2').ZG177Q                    00924800
                      AIF   ('&ZCGPR' LE '12').ZG177R                   00924900
.ZG177Q               ANOP  ,                                           00925000
&ZMS                  SETC  '"BUFNUM='                                  00925100
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             00925200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00925300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00925400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00925500
.ZG177R               ANOP  ,                                           00925600
.*----------------------------------------------------------------***   00925700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00925800
                      AIF   (N'&BUFINCRNUM LE 1).ZG180A  CK NUM         00925900
&ZMS                  SETC  '"BUFINCRNUM='                              00926000
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         00926100
&ZMS                  SETC  '&ZMS "BUFINCRNUM"'                         00926200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00926300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00926400
.ZG180A               ANOP  ,                                           00926500
.*-------------------------------------------------------------------   00926600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00926700
&ZXBUFINCRNUM         SETC  'INPUT'     SET IN/OUTPUT                   00926800
&XBUFINCRNUM          SETC  'NO_BUFINCRNUM'                             00926900
                      AIF   (K'&BUFINCRNUM(1) LE 0).ZG180B  PARM        00927000
&XBUFINCRNUM          SETC  '&BUFINCRNUM(1)'    SET XVARIABLE           00927100
                      AIF   (N'&BUFINCRNUM GT 1).ZG180B  MULTI          00927200
&XBUFINCRNUM          SETC  '&BUFINCRNUM'       SET XVARIABLE           00927300
.ZG180B               ANOP  ,                                           00927400
.*-------------------------------------------------------------------   00927500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00927600
                      AIF   (K'&ZXBUFINCRNUM LE 0).ZG180R  NOT I/O      00927700
         AIF   ('&XBUFINCRNUM' EQ 'NO_BUFINCRNUM').ZG180R               00927800
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG180R         00927900
&ZCGPR                SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)          00928000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG180P               00928100
                      AIF   (K'&ZCGPR GT 2).ZG180Q                      00928200
                      AIF   ('&ZCGPR' EQ '0').ZG180Q                    00928300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00928400
                      AIF   (T'&ZCGPR NE 'N').ZG180Q  INVALID REG NAME  00928500
.ZG180P               ANOP  ,                                           00928600
                      AIF   (T'&ZCGPR NE 'N').ZG180R  NON NUMERIC       00928700
                      AIF   ('&ZCGPR' LT '2').ZG180Q                    00928800
                      AIF   ('&ZCGPR' LE '12').ZG180R                   00928900
.ZG180Q               ANOP  ,                                           00929000
&ZMS                  SETC  '"BUFINCRNUM='                              00929100
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         00929200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00929300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00929400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00929500
.ZG180R               ANOP  ,                                           00929600
.*-------------------------------------------------------------------   00929700
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00929800
.ZG182ZY  AIF    ('&XDATAREA' NE 'BUFFER').ZG194ZY                      00929900
.*-------------------------------------------------------------------   00930000
.***AG.KMEKY14 NAME, OPT INPUT, ME KEYS -DISALLOWED KEYS                00930100
&ZCVAL                SETC ''           ERROR KEY FIELD                 00930200
.ZG182I0              AIF   (K'&BUFADDRTYPE LE 0).ZG182I1               00930300
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         00930400
.ZG182I1              AIF   (K'&BUFALET LE 0).ZG182I2                   00930500
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          00930600
.ZG182I2              AIF   (K'&BUFNUM LE 0).ZG182I3                    00930700
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          00930800
.ZG182I3              AIF   (K'&BUFINCRNUM LE 0).ZG182I4                00930900
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  DISALLOWED KEY          00931000
.ZG182I4              AIF   (K'&ZCVAL LE 0).ZG182J  KEY                 00931100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00931200
&ZMS                  SETC  '"BUFFER'                                   00931300
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            00931400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00931500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00931600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00931700
.ZG182J               ANOP  ,                                           00931800
.*-------------------------------------------------------------------   00931900
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00932000
                      AIF   (K'&ZXBUFFER LE 0).ZG182R  NOT I/O          00932100
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG182R             00932200
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  00932300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG182P               00932400
                      AIF   (K'&ZCGPR GT 2).ZG182Q                      00932500
                      AIF   ('&ZCGPR' EQ '0').ZG182Q                    00932600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00932700
                      AIF   (T'&ZCGPR NE 'N').ZG182Q  INVALID REG NAME  00932800
.ZG182P               ANOP  ,                                           00932900
                      AIF   (T'&ZCGPR NE 'N').ZG182R  NON NUMERIC       00933000
                      AIF   ('&ZCGPR' LT '2').ZG182Q                    00933100
                      AIF   ('&ZCGPR' LE '12').ZG182R                   00933200
.ZG182Q               ANOP  ,                                           00933300
&ZMS                  SETC  '"BUFFER='                                  00933400
&ZMS                  SETC  '&ZMS.&BUFFER"'                             00933500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00933600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00933700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00933800
.ZG182R               ANOP  ,                                           00933900
.*------------------------------------------------------------------    00934000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00934100
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            00934200
.*-------------------------------------------------------------------   00934300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00934400
.ZG185                ANOP  ,                                           00934500
                      AIF   (K'&PAGEABLE(1) LE 0).ZG185A                00934600
&ZTLC                 SETC 'YES'                                        00934700
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG189           00934800
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     00934900
                      AIF   (N'&PAGEABLE LE 1).ZG185A  CK NUM           00935000
&ZMS                  SETC  '"PAGEABLE='                                00935100
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00935200
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00935300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00935400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00935500
.ZG185A               ANOP  ,                                           00935600
.*----------------------------------------------------------------***   00935700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00935800
                      AIF   (N'&BUFSTGKEY LE 1).ZG187A  CK NUM          00935900
&ZMS                  SETC  '"BUFSTGKEY='                               00936000
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00936100
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          00936200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00936300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00936400
.ZG187A               ANOP  ,                                           00936500
.*-------------------------------------------------------------------   00936600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00936700
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   00936800
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               00936900
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG187B  PARM         00937000
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           00937100
                      AIF   (N'&BUFSTGKEY GT 1).ZG187B  MULTI           00937200
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           00937300
.ZG187B               ANOP  ,                                           00937400
.*-------------------------------------------------------------------   00937500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00937600
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG187R  NOT I/O       00937700
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG187R                  00937800
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG187R          00937900
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            00938000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG187P               00938100
                      AIF   (K'&ZCGPR GT 2).ZG187Q                      00938200
                      AIF   ('&ZCGPR' EQ '0').ZG187Q                    00938300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00938400
                      AIF   (T'&ZCGPR NE 'N').ZG187Q  INVALID REG NAME  00938500
.ZG187P               ANOP  ,                                           00938600
                      AIF   (T'&ZCGPR NE 'N').ZG187R  NON NUMERIC       00938700
                      AIF   ('&ZCGPR' LT '2').ZG187Q                    00938800
                      AIF   ('&ZCGPR' LE '12').ZG187R                   00938900
.ZG187Q               ANOP  ,                                           00939000
&ZMS                  SETC  '"BUFSTGKEY='                               00939100
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          00939200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00939300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00939400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00939500
.ZG187R               ANOP  ,                                           00939600
.*-------------------------------------------------------------------   00939700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00939800
.ZG189                ANOP  ,                                           00939900
&ZTLC                 SETC 'NO'                                         00940000
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG190           00940100
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     00940200
                      AIF   (N'&PAGEABLE LE 1).ZG189A  CK NUM           00940300
&ZMS                  SETC  '"PAGEABLE='                                00940400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00940500
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           00940600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00940700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00940800
.ZG189A               ANOP  ,                                           00940900
.*------------------------------------------------------------------    00941000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00941100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00941200
.ZG189A0              AIF   (K'&BUFSTGKEY LE 0).ZG189A1  OK             00941300
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      00941400
.ZG189A1              AIF   (K'&ZCVAL LE 0).ZG189A2  OK                 00941500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00941600
&ZMS                  SETC  '"PAGEABLE'                                 00941700
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          00941800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00941900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00942000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00942100
.ZG189A2              ANOP  ,                                           00942200
.*------------------------------------------------------------------    00942300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00942400
.ZG190                ANOP  ,                                           00942500
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   00942600
                      AIF   (K'&XPAGEABLE GT 0).ZG190E  VALID ARG       00942700
                      AIF   (T'&PAGEABLE EQ 'O').ZG190D  OMITTED        00942800
&ZASYSLNDX            SETA  0                                           00942900
.ZG190A               ANOP  ,           POSITIONAL MACRO KEY            00943000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00943100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG190C           00943200
&ZTLC                 SETC 'PAGEABLE'                                   00943300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG190A  00943400
.ZG190B               ANOP  ,                                           00943500
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00943600
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        00943700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00943800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00943900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00944000
                      AGO   .ZG190E                                     00944100
.ZG190C               ANOP  ,                                           00944200
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 00944300
&ZMS                  SETC  '"PAGEABLE='                                00944400
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           00944500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00944600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00944700
&ZMS                  SETC  '&ZMS "YES"'                                00944800
&ZMS                  SETC  '&ZMS OR "NO".'                             00944900
                      MNOTE 8,' &ZMS '                                  00945000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00945100
                      AGO   .ZG190E                                     00945200
.ZG190D               ANOP  ,                                           00945300
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             00945400
.ZG190E               ANOP  ,                                           00945500
.*----------------------------------------------------------------***   00945600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00945700
                      AIF   (N'&BUFSIZE LE 1).ZG192A  CK NUM            00945800
&ZMS                  SETC  '"BUFSIZE='                                 00945900
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            00946000
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            00946100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00946200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00946300
.ZG192A               ANOP  ,                                           00946400
.*-------------------------------------------------------------------   00946500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00946600
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   00946700
&XBUFSIZE             SETC  'NO_BUFSIZE'                                00946800
                      AIF   (K'&BUFSIZE(1) LE 0).ZG192B  PARM           00946900
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           00947000
                      AIF   (N'&BUFSIZE GT 1).ZG192B  MULTI             00947100
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   00947200
.ZG192B               ANOP  ,                                           00947300
.*-------------------------------------------------------------------   00947400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00947500
                      AIF   (K'&ZXBUFSIZE LE 0).ZG192R  NOT I/O         00947600
         AIF   ('&XBUFSIZE' EQ 'NO_BUFSIZE').ZG192R                     00947700
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG192R            00947800
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                00947900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG192P               00948000
                      AIF   (K'&ZCGPR GT 2).ZG192Q                      00948100
                      AIF   ('&ZCGPR' EQ '0').ZG192Q                    00948200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00948300
                      AIF   (T'&ZCGPR NE 'N').ZG192Q  INVALID REG NAME  00948400
.ZG192P               ANOP  ,                                           00948500
                      AIF   (T'&ZCGPR NE 'N').ZG192R  NON NUMERIC       00948600
                      AIF   ('&ZCGPR' LT '2').ZG192Q                    00948700
                      AIF   ('&ZCGPR' LE '12').ZG192R                   00948800
.ZG192Q               ANOP  ,                                           00948900
&ZMS                  SETC  '"BUFSIZE='                                 00949000
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            00949100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00949200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00949300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00949400
.ZG192R               ANOP  ,                                           00949500
.*-------------------------------------------------------------------   00949600
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00949700
.ZG194ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     00949800
.*----------------------------------------------------------------***   00949900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00950000
                      AIF   (N'&ADJAREA LE 1).ZG196A  CK NUM            00950100
&ZMS                  SETC  '"ADJAREA='                                 00950200
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            00950300
&ZMS                  SETC  '&ZMS "ADJAREA"'                            00950400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00950500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00950600
.ZG196A               ANOP  ,                                           00950700
.*-------------------------------------------------------------------   00950800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00950900
&ZXADJAREA            SETC  'INPUT'     SET IN/OUTPUT                   00951000
&XADJAREA             SETC  'NO_ADJAREA'                                00951100
                      AIF   (K'&ADJAREA(1) LE 0).ZG196B  PARM           00951200
&XADJAREA             SETC  '&ADJAREA(1)'       SET XVARIABLE           00951300
                      AIF   (N'&ADJAREA GT 1).ZG196B  MULTI             00951400
&XADJAREA             SETC  '&ADJAREA'  SET XVARIABLE                   00951500
.ZG196B               ANOP  ,                                           00951600
.*-------------------------------------------------------------------   00951700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00951800
                      AIF   (K'&ZXADJAREA LE 0).ZG196R  NOT I/O         00951900
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA').ZG196R                     00952000
                      AIF   ('&XADJAREA'(1,1) NE '(').ZG196R            00952100
&ZCGPR                SETC  '&XADJAREA'(2,K'&XADJAREA-2)                00952200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG196P               00952300
                      AIF   (K'&ZCGPR GT 2).ZG196Q                      00952400
                      AIF   ('&ZCGPR' EQ '0').ZG196Q                    00952500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00952600
                      AIF   (T'&ZCGPR NE 'N').ZG196Q  INVALID REG NAME  00952700
.ZG196P               ANOP  ,                                           00952800
                      AIF   (T'&ZCGPR NE 'N').ZG196R  NON NUMERIC       00952900
                      AIF   ('&ZCGPR' LT '2').ZG196Q                    00953000
                      AIF   ('&ZCGPR' LE '12').ZG196R                   00953100
.ZG196Q               ANOP  ,                                           00953200
&ZMS                  SETC  '"ADJAREA='                                 00953300
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            00953400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00953500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00953600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00953700
.ZG196R               ANOP  ,                                           00953800
.*----------------------------------------------------------------***   00953900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00954000
                      AIF   (N'&LISTNUM LE 1).ZG199A  CK NUM            00954100
&ZMS                  SETC  '"LISTNUM='                                 00954200
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00954300
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00954400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00954500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00954600
.ZG199A               ANOP  ,                                           00954700
.*-------------------------------------------------------------------   00954800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00954900
&ZXLISTNUM            SETC  'INPUT'     SET IN/OUTPUT                   00955000
&XLISTNUM             SETC  'NO_LISTNUM'                                00955100
                      AIF   (K'&LISTNUM(1) LE 0).ZG199B  PARM           00955200
&XLISTNUM             SETC  '&LISTNUM(1)'       SET XVARIABLE           00955300
                      AIF   (N'&LISTNUM GT 1).ZG199B  MULTI             00955400
&XLISTNUM             SETC  '&LISTNUM'  SET XVARIABLE                   00955500
.ZG199B               ANOP  ,                                           00955600
.*-------------------------------------------------------------------   00955700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00955800
                      AIF   (K'&ZXLISTNUM LE 0).ZG199R  NOT I/O         00955900
         AIF   ('&XLISTNUM' EQ 'NO_LISTNUM').ZG199R                     00956000
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZG199R            00956100
&ZCGPR                SETC  '&XLISTNUM'(2,K'&XLISTNUM-2)                00956200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG199P               00956300
                      AIF   (K'&ZCGPR GT 2).ZG199Q                      00956400
                      AIF   ('&ZCGPR' EQ '0').ZG199Q                    00956500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00956600
                      AIF   (T'&ZCGPR NE 'N').ZG199Q  INVALID REG NAME  00956700
.ZG199P               ANOP  ,                                           00956800
                      AIF   (T'&ZCGPR NE 'N').ZG199R  NON NUMERIC       00956900
                      AIF   ('&ZCGPR' LT '2').ZG199Q                    00957000
                      AIF   ('&ZCGPR' LE '12').ZG199R                   00957100
.ZG199Q               ANOP  ,                                           00957200
&ZMS                  SETC  '"LISTNUM='                                 00957300
&ZMS                  SETC  '&ZMS.&LISTNUM"'                            00957400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00957500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00957600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00957700
.ZG199R               ANOP  ,                                           00957800
.*----------------------------------------------------------------***   00957900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00958000
                      AIF   (N'&LISTPOS LE 1).ZG201A  CK NUM            00958100
&ZMS                  SETC  '"LISTPOS='                                 00958200
&ZMS                  SETC  '&ZMS.&LISTPOS"'                            00958300
&ZMS                  SETC  '&ZMS "LISTPOS"'                            00958400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00958500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00958600
.ZG201A               ANOP  ,                                           00958700
.*-------------------------------------------------------------------   00958800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00958900
&XLISTPOS             SETC  ''          INITIALIZE XVARIABLE            00959000
.ZG202A   AIF   ('&LISTPOS(1)' NE 'HEAD').ZG203A                        00959100
&XLISTPOS             SETC  'HEAD'      SET KEYWORD                     00959200
.*-------------------------------------------------------------------   00959300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00959400
.ZG203A   AIF   ('&LISTPOS(1)' NE 'TAIL').ZG204A                        00959500
&XLISTPOS             SETC  'TAIL'      SET KEYWORD                     00959600
.*-------------------------------------------------------------------   00959700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00959800
.ZG204A               AIF   (K'&XLISTPOS GT 0).ZG204C  KEYWORD          00959900
                      AIF   (K'&LISTPOS(1) LE 0).ZG204B                 00960000
&ZMS                  SETC  '"LISTPOS='                                 00960100
&ZMS                  SETC  '&ZMS.&LISTPOS"'                            00960200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00960300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00960400
&ZMS                  SETC  '&ZMS "HEAD"'                               00960500
&ZMS                  SETC  '&ZMS OR "TAIL".'                           00960600
                      MNOTE 8,' &ZMS '                                  00960700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00960800
.ZG204B               ANOP  ,                                           00960900
&XLISTPOS             SETC  'HEAD'      SET DEFAULT KEYWORD             00961000
.ZG204C               ANOP  ,                                           00961100
&ZXLISTPOS            SETC  'INPUT'     SET IN/OUTPUT                   00961200
.*-------------------------------------------------------------------   00961300
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00961400
                      AIF   (K'&LISTNUM(1) GT 0).ZG204D  KEY            00961500
                      AIF   (K'&LISTPOS(1) LE 0).ZG204D  PARM           00961600
&ZMS                  SETC  '"LISTPOS'                                  00961700
&ZMS                  SETC  '&ZMS.=&LISTPOS"'                           00961800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00961900
&ZMS                  SETC  '&ZMS '                                     00962000
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00962100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00962200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00962300
.ZG204D               ANOP  ,                                           00962400
.*----------------------------------------------------------------***   00962500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00962600
                      AIF   (N'&ENTRYKEY LE 1).ZG206A  CK NUM           00962700
&ZMS                  SETC  '"ENTRYKEY='                                00962800
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           00962900
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           00963000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00963100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00963200
.ZG206A               ANOP  ,                                           00963300
.*-------------------------------------------------------------------   00963400
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00963500
&XENTRYKEY            SETC  'NO_ENTRYKEY'       SET DEFAULT             00963600
                      AIF   (K'&ENTRYKEY(1) LE 0).ZG206C  PARM          00963700
&XENTRYKEY            SETC  '&ENTRYKEY(1)'      SET XVARIABLE           00963800
                      AIF   (N'&ENTRYKEY GT 1).ZG206B  MULTI            00963900
&XENTRYKEY            SETC  '&ENTRYKEY'         SET XVARIABLE           00964000
.ZG206B               AIF   (K'&LISTNUM(1) GT 0).ZG206C  KEY            00964100
&ZMS                  SETC  '"ENTRYKEY'                                 00964200
&ZMS                  SETC  '&ZMS.=&ENTRYKEY"'                          00964300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00964400
&ZMS                  SETC  '&ZMS '                                     00964500
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00964600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00964700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00964800
.ZG206C               ANOP  ,                                           00964900
&ZXENTRYKEY           SETC  'INPUT'     SET IN/OUTPUT                   00965000
.*-------------------------------------------------------------------   00965100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00965200
                      AIF   (K'&ZXENTRYKEY LE 0).ZG206R  NOT I/O        00965300
         AIF   ('&XENTRYKEY' EQ 'NO_ENTRYKEY').ZG206R                   00965400
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZG206R           00965500
&ZCGPR                SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)              00965600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG206P               00965700
                      AIF   (K'&ZCGPR GT 2).ZG206Q                      00965800
                      AIF   ('&ZCGPR' EQ '0').ZG206Q                    00965900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00966000
                      AIF   (T'&ZCGPR NE 'N').ZG206Q  INVALID REG NAME  00966100
.ZG206P               ANOP  ,                                           00966200
                      AIF   (T'&ZCGPR NE 'N').ZG206R  NON NUMERIC       00966300
                      AIF   ('&ZCGPR' LT '2').ZG206Q                    00966400
                      AIF   ('&ZCGPR' LE '12').ZG206R                   00966500
.ZG206Q               ANOP  ,                                           00966600
&ZMS                  SETC  '"ENTRYKEY='                                00966700
&ZMS                  SETC  '&ZMS.&ENTRYKEY"'                           00966800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00966900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00967000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00967100
.ZG206R               ANOP  ,                                           00967200
.*----------------------------------------------------------------***   00967300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00967400
                      AIF   (N'&KEYREQTYPE LE 1).ZG208A  CK NUM         00967500
&ZMS                  SETC  '"KEYREQTYPE='                              00967600
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         00967700
&ZMS                  SETC  '&ZMS "KEYREQTYPE"'                         00967800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00967900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00968000
.ZG208A               ANOP  ,                                           00968100
.*-------------------------------------------------------------------   00968200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00968300
&XKEYREQTYPE          SETC  ''          INITIALIZE XVARIABLE            00968400
.ZG209A   AIF   ('&KEYREQTYPE(1)' NE 'EQUAL').ZG210A                    00968500
&XKEYREQTYPE          SETC  'EQUAL'     SET KEYWORD                     00968600
.*-------------------------------------------------------------------   00968700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00968800
.ZG210A   AIF   ('&KEYREQTYPE(1)' NE 'LESSOREQUAL').ZG211A              00968900
&XKEYREQTYPE          SETC  'LESSOREQUAL'       SET KEYWORD             00969000
.*-------------------------------------------------------------------   00969100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00969200
.ZG211A   AIF   ('&KEYREQTYPE(1)' NE 'GREATEROREQUAL').ZG212A           00969300
&XKEYREQTYPE          SETC  'GREATEROREQUAL'    SET KEYWORD             00969400
.*-------------------------------------------------------------------   00969500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00969600
.ZG212A               AIF   (K'&XKEYREQTYPE GT 0).ZG212C  KEYWORD       00969700
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG212B              00969800
&ZMS                  SETC  '"KEYREQTYPE='                              00969900
&ZMS                  SETC  '&ZMS.&KEYREQTYPE"'                         00970000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00970100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00970200
&ZMS                  SETC  '&ZMS "EQUAL",'                             00970300
&ZMS                  SETC  '&ZMS "LESSOREQUAL",'                       00970400
&ZMS                  SETC  '&ZMS OR "GREATEROREQUAL".'                 00970500
                      MNOTE 8,' &ZMS '                                  00970600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00970700
.ZG212B               ANOP  ,                                           00970800
&XKEYREQTYPE          SETC  'EQUAL'     SET DEFAULT KEYWORD             00970900
.ZG212C               ANOP  ,                                           00971000
&ZXKEYREQTYPE         SETC  'INPUT'     SET IN/OUTPUT                   00971100
.*-------------------------------------------------------------------   00971200
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00971300
                      AIF   (K'&ENTRYKEY(1) GT 0).ZG212D  KEY           00971400
                      AIF   (K'&KEYREQTYPE(1) LE 0).ZG212D  PARM        00971500
&ZMS                  SETC  '"KEYREQTYPE'                               00971600
&ZMS                  SETC  '&ZMS.=&KEYREQTYPE"'                        00971700
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00971800
&ZMS                  SETC  '&ZMS '                                     00971900
&ZMS                  SETC  '&ZMS "ENTRYKEY"'                           00972000
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00972100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00972200
.ZG212D               ANOP  ,                                           00972300
.*----------------------------------------------------------------***   00972400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00972500
                      AIF   (N'&AUTHCOMP LE 1).ZG215A  CK NUM           00972600
&ZMS                  SETC  '"AUTHCOMP='                                00972700
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           00972800
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           00972900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00973000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00973100
.ZG215A               ANOP  ,                                           00973200
.*-------------------------------------------------------------------   00973300
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00973400
&XAUTHCOMP            SETC  'NO_AUTHCOMP'       SET DEFAULT             00973500
                      AIF   (K'&AUTHCOMP(1) LE 0).ZG215C  PARM          00973600
&XAUTHCOMP            SETC  '&AUTHCOMP(1)'      SET XVARIABLE           00973700
                      AIF   (N'&AUTHCOMP GT 1).ZG215B  MULTI            00973800
&XAUTHCOMP            SETC  '&AUTHCOMP'         SET XVARIABLE           00973900
.ZG215B               AIF   (K'&LISTNUM(1) GT 0).ZG215C  KEY            00974000
&ZMS                  SETC  '"AUTHCOMP'                                 00974100
&ZMS                  SETC  '&ZMS.=&AUTHCOMP"'                          00974200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00974300
&ZMS                  SETC  '&ZMS '                                     00974400
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00974500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00974600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00974700
.ZG215C               ANOP  ,                                           00974800
&ZXAUTHCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00974900
.*-------------------------------------------------------------------   00975000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00975100
                      AIF   (K'&ZXAUTHCOMP LE 0).ZG215R  NOT I/O        00975200
         AIF   ('&XAUTHCOMP' EQ 'NO_AUTHCOMP').ZG215R                   00975300
                      AIF   ('&XAUTHCOMP'(1,1) NE '(').ZG215R           00975400
&ZCGPR                SETC  '&XAUTHCOMP'(2,K'&XAUTHCOMP-2)              00975500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG215P               00975600
                      AIF   (K'&ZCGPR GT 2).ZG215Q                      00975700
                      AIF   ('&ZCGPR' EQ '0').ZG215Q                    00975800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00975900
                      AIF   (T'&ZCGPR NE 'N').ZG215Q  INVALID REG NAME  00976000
.ZG215P               ANOP  ,                                           00976100
                      AIF   (T'&ZCGPR NE 'N').ZG215R  NON NUMERIC       00976200
                      AIF   ('&ZCGPR' LT '2').ZG215Q                    00976300
                      AIF   ('&ZCGPR' LE '12').ZG215R                   00976400
.ZG215Q               ANOP  ,                                           00976500
&ZMS                  SETC  '"AUTHCOMP='                                00976600
&ZMS                  SETC  '&ZMS.&AUTHCOMP"'                           00976700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00976800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00976900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00977000
.ZG215R               ANOP  ,                                           00977100
.*----------------------------------------------------------------***   00977200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00977300
                      AIF   (N'&AUTHCOMPTYPE LE 1).ZG217A  CK NUM       00977400
&ZMS                  SETC  '"AUTHCOMPTYPE='                            00977500
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       00977600
&ZMS                  SETC  '&ZMS "AUTHCOMPTYPE"'                       00977700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00977800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00977900
.ZG217A               ANOP  ,                                           00978000
.*-------------------------------------------------------------------   00978100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00978200
&XAUTHCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            00978300
.ZG218A   AIF   ('&AUTHCOMPTYPE(1)' NE 'EQUAL').ZG219A                  00978400
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     00978500
.*-------------------------------------------------------------------   00978600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00978700
.ZG219A   AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').ZG220A            00978800
&XAUTHCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             00978900
.*-------------------------------------------------------------------   00979000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00979100
.ZG220A               AIF   (K'&XAUTHCOMPTYPE GT 0).ZG220C  KEYWORD     00979200
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG220B            00979300
&ZMS                  SETC  '"AUTHCOMPTYPE='                            00979400
&ZMS                  SETC  '&ZMS.&AUTHCOMPTYPE"'                       00979500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00979600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00979700
&ZMS                  SETC  '&ZMS "EQUAL"'                              00979800
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    00979900
                      MNOTE 8,' &ZMS '                                  00980000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00980100
.ZG220B               ANOP  ,                                           00980200
&XAUTHCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             00980300
.ZG220C               ANOP  ,                                           00980400
&ZXAUTHCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   00980500
.*-------------------------------------------------------------------   00980600
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00980700
                      AIF   (K'&AUTHCOMP(1) GT 0).ZG220D  KEY           00980800
                      AIF   (K'&AUTHCOMPTYPE(1) LE 0).ZG220D  PARM      00980900
&ZMS                  SETC  '"AUTHCOMPTYPE'                             00981000
&ZMS                  SETC  '&ZMS.=&AUTHCOMPTYPE"'                      00981100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00981200
&ZMS                  SETC  '&ZMS '                                     00981300
&ZMS                  SETC  '&ZMS "AUTHCOMP"'                           00981400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00981500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00981600
.ZG220D               ANOP  ,                                           00981700
.*----------------------------------------------------------------***   00981800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00981900
                      AIF   (N'&NEWAUTH LE 1).ZG223A  CK NUM            00982000
&ZMS                  SETC  '"NEWAUTH='                                 00982100
&ZMS                  SETC  '&ZMS.&NEWAUTH"'                            00982200
&ZMS                  SETC  '&ZMS "NEWAUTH"'                            00982300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00982400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00982500
.ZG223A               ANOP  ,                                           00982600
.*-------------------------------------------------------------------   00982700
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00982800
&XNEWAUTH             SETC  'NO_NEWAUTH'        SET DEFAULT             00982900
                      AIF   (K'&NEWAUTH(1) LE 0).ZG223C  PARM           00983000
&XNEWAUTH             SETC  '&NEWAUTH(1)'       SET XVARIABLE           00983100
                      AIF   (N'&NEWAUTH GT 1).ZG223B  MULTI             00983200
&XNEWAUTH             SETC  '&NEWAUTH'  SET XVARIABLE                   00983300
.ZG223B               AIF   (K'&LISTNUM(1) GT 0).ZG223C  KEY            00983400
&ZMS                  SETC  '"NEWAUTH'                                  00983500
&ZMS                  SETC  '&ZMS.=&NEWAUTH"'                           00983600
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00983700
&ZMS                  SETC  '&ZMS '                                     00983800
&ZMS                  SETC  '&ZMS "LISTNUM"'                            00983900
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00984000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00984100
.ZG223C               ANOP  ,                                           00984200
&ZXNEWAUTH            SETC  'INPUT'     SET IN/OUTPUT                   00984300
.*-------------------------------------------------------------------   00984400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00984500
                      AIF   (K'&ZXNEWAUTH LE 0).ZG223R  NOT I/O         00984600
         AIF   ('&XNEWAUTH' EQ 'NO_NEWAUTH').ZG223R                     00984700
                      AIF   ('&XNEWAUTH'(1,1) NE '(').ZG223R            00984800
&ZCGPR                SETC  '&XNEWAUTH'(2,K'&XNEWAUTH-2)                00984900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG223P               00985000
                      AIF   (K'&ZCGPR GT 2).ZG223Q                      00985100
                      AIF   ('&ZCGPR' EQ '0').ZG223Q                    00985200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00985300
                      AIF   (T'&ZCGPR NE 'N').ZG223Q  INVALID REG NAME  00985400
.ZG223P               ANOP  ,                                           00985500
                      AIF   (T'&ZCGPR NE 'N').ZG223R  NON NUMERIC       00985600
                      AIF   ('&ZCGPR' LT '2').ZG223Q                    00985700
                      AIF   ('&ZCGPR' LE '12').ZG223R                   00985800
.ZG223Q               ANOP  ,                                           00985900
&ZMS                  SETC  '"NEWAUTH='                                 00986000
&ZMS                  SETC  '&ZMS.&NEWAUTH"'                            00986100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00986200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00986300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00986400
.ZG223R               ANOP  ,                                           00986500
.*----------------------------------------------------------------***   00986600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00986700
                      AIF   (N'&ENTRYID LE 1).ZG227A  CK NUM            00986800
&ZMS                  SETC  '"ENTRYID='                                 00986900
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            00987000
&ZMS                  SETC  '&ZMS "ENTRYID"'                            00987100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00987200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00987300
.ZG227A               ANOP  ,                                           00987400
.*-------------------------------------------------------------------   00987500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00987600
&ZXENTRYID            SETC  'INPUT'     SET IN/OUTPUT                   00987700
&XENTRYID             SETC  'NO_ENTRYID'                                00987800
                      AIF   (K'&ENTRYID(1) LE 0).ZG227B  PARM           00987900
&XENTRYID             SETC  '&ENTRYID(1)'       SET XVARIABLE           00988000
                      AIF   (N'&ENTRYID GT 1).ZG227B  MULTI             00988100
&XENTRYID             SETC  '&ENTRYID'  SET XVARIABLE                   00988200
.ZG227B               ANOP  ,                                           00988300
.*-------------------------------------------------------------------   00988400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00988500
                      AIF   (K'&ZXENTRYID LE 0).ZG227R  NOT I/O         00988600
         AIF   ('&XENTRYID' EQ 'NO_ENTRYID').ZG227R                     00988700
                      AIF   ('&XENTRYID'(1,1) NE '(').ZG227R            00988800
&ZCGPR                SETC  '&XENTRYID'(2,K'&XENTRYID-2)                00988900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG227P               00989000
                      AIF   (K'&ZCGPR GT 2).ZG227Q                      00989100
                      AIF   ('&ZCGPR' EQ '0').ZG227Q                    00989200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00989300
                      AIF   (T'&ZCGPR NE 'N').ZG227Q  INVALID REG NAME  00989400
.ZG227P               ANOP  ,                                           00989500
                      AIF   (T'&ZCGPR NE 'N').ZG227R  NON NUMERIC       00989600
                      AIF   ('&ZCGPR' LT '2').ZG227Q                    00989700
                      AIF   ('&ZCGPR' LE '12').ZG227R                   00989800
.ZG227Q               ANOP  ,                                           00989900
&ZMS                  SETC  '"ENTRYID='                                 00990000
&ZMS                  SETC  '&ZMS.&ENTRYID"'                            00990100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00990200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00990300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00990400
.ZG227R               ANOP  ,                                           00990500
.*----------------------------------------------------------------***   00990600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00990700
                      AIF   (N'&ENTRYNAME LE 1).ZG230A  CK NUM          00990800
&ZMS                  SETC  '"ENTRYNAME='                               00990900
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          00991000
&ZMS                  SETC  '&ZMS "ENTRYNAME"'                          00991100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00991200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00991300
.ZG230A               ANOP  ,                                           00991400
.*-------------------------------------------------------------------   00991500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00991600
&ZXENTRYNAME          SETC  'INPUT'     SET IN/OUTPUT                   00991700
&XENTRYNAME           SETC  'NO_ENTRYNAME'                              00991800
                      AIF   (K'&ENTRYNAME(1) LE 0).ZG230B  PARM         00991900
&XENTRYNAME           SETC  '&ENTRYNAME(1)'     SET XVARIABLE           00992000
                      AIF   (N'&ENTRYNAME GT 1).ZG230B  MULTI           00992100
&XENTRYNAME           SETC  '&ENTRYNAME'        SET XVARIABLE           00992200
.ZG230B               ANOP  ,                                           00992300
.*-------------------------------------------------------------------   00992400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00992500
                      AIF   (K'&ZXENTRYNAME LE 0).ZG230R  NOT I/O       00992600
         AIF   ('&XENTRYNAME' EQ 'NO_ENTRYNAME').ZG230R                 00992700
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZG230R          00992800
&ZCGPR                SETC  '&XENTRYNAME'(2,K'&XENTRYNAME-2)            00992900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG230P               00993000
                      AIF   (K'&ZCGPR GT 2).ZG230Q                      00993100
                      AIF   ('&ZCGPR' EQ '0').ZG230Q                    00993200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00993300
                      AIF   (T'&ZCGPR NE 'N').ZG230Q  INVALID REG NAME  00993400
.ZG230P               ANOP  ,                                           00993500
                      AIF   (T'&ZCGPR NE 'N').ZG230R  NON NUMERIC       00993600
                      AIF   ('&ZCGPR' LT '2').ZG230Q                    00993700
                      AIF   ('&ZCGPR' LE '12').ZG230R                   00993800
.ZG230Q               ANOP  ,                                           00993900
&ZMS                  SETC  '"ENTRYNAME='                               00994000
&ZMS                  SETC  '&ZMS.&ENTRYNAME"'                          00994100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00994200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00994300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00994400
.ZG230R               ANOP  ,                                           00994500
.*----------------------------------------------------------------***   00994600
.***AG.KXVAR01 VALUE, OPT INPUT, KEYS -NO ARGUMENTS                     00994700
&XLOCBYCURSOR         SETC  ''          RESET XVARIABLE                 00994800
&ZXLOCBYCURSOR        SETC  ''          RESET IN/OUTPUT                 00994900
&ZASYSLNDX            SETA  0                                           00995000
.ZG233A               ANOP  ,           POSITIONAL MACRO KEY            00995100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00995200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG233B                        00995300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG233A           00995400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'LOCBYCURSOR').ZG233A         00995500
&ZCSYSLIST(&ZASYSLNDX) SETC  'NONXKEY'  POSITIONAL IS MACRO KEY         00995600
&XLOCBYCURSOR         SETC  'LOCBYCURSOR'       MACRO KEY FOUND         00995700
&ZXLOCBYCURSOR        SETC  'INPUT'     SET IN/OUTPUT                   00995800
.ZG233B               ANOP  ,                                           00995900
.*-------------------------------------------------------------------   00996000
.***AG.KXVAR03 VALUE, OPT INPUT, KEYS -NO ARGUMENTS                     00996100
                      AIF   (K'&XLOCBYCURSOR GT 0).ZG233C  KEY ENTERED  00996200
&ZXLOCBYCURSOR        SETC  'INPUT'     SET IN/OUTPUT                   00996300
&XLOCBYCURSOR         SETC  'NO_LOCBYCURSOR'    SET DEFAULT             00996400
.ZG233C               ANOP  ,                                           00996500
.*------------------------------------------------------------------    00996600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00996700
&XUPDATECURSOR        SETC  ''          INITIALIZE XVARIABLE            00996800
.*-------------------------------------------------------------------   00996900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00997000
.ZG237                ANOP  ,                                           00997100
                      AIF   (K'&UPDATECURSOR(1) LE 0).ZG237A            00997200
&ZTLC                 SETC 'NO'                                         00997300
                      AIF   ('&UPDATECURSOR(1)' NE '&ZTLC').ZG238       00997400
&XUPDATECURSOR        SETC  'NO'        SET KEYWORD                     00997500
                      AIF   (N'&UPDATECURSOR LE 1).ZG237A  CK NUM       00997600
&ZMS                  SETC  '"UPDATECURSOR='                            00997700
&ZMS                  SETC  '&ZMS.&UPDATECURSOR"'                       00997800
&ZMS                  SETC  '&ZMS "UPDATECURSOR"'                       00997900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00998000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00998100
.ZG237A               ANOP  ,                                           00998200
.*------------------------------------------------------------------    00998300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00998400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00998500
.ZG237A0              AIF   (K'&CURSORUPDTYPE LE 0).ZG237A1  OK         00998600
&ZCVAL                SETC '&ZCVAL CURSORUPDTYPE'  INCORRECT KEY USED   00998700
.ZG237A1              AIF   (K'&ZCVAL LE 0).ZG237A2  OK                 00998800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00998900
&ZMS                  SETC  '"UPDATECURSOR'                             00999000
&ZMS                  SETC  '&ZMS.=&UPDATECURSOR"'                      00999100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00999200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00999300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00999400
.ZG237A2              ANOP  ,                                           00999500
.*-------------------------------------------------------------------   00999600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00999700
.ZG238                ANOP  ,                                           00999800
&ZTLC                 SETC 'YES'                                        00999900
                      AIF   ('&UPDATECURSOR(1)' NE '&ZTLC').ZG246       01000000
&XUPDATECURSOR        SETC  'YES'       SET KEYWORD                     01000100
                      AIF   (N'&UPDATECURSOR LE 1).ZG238A  CK NUM       01000200
&ZMS                  SETC  '"UPDATECURSOR='                            01000300
&ZMS                  SETC  '&ZMS.&UPDATECURSOR"'                       01000400
&ZMS                  SETC  '&ZMS "UPDATECURSOR"'                       01000500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01000600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01000700
.ZG238A               ANOP  ,                                           01000800
.*----------------------------------------------------------------***   01000900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01001000
                      AIF   (N'&CURSORUPDTYPE LE 1).ZG240A  CK NUM      01001100
&ZMS                  SETC  '"CURSORUPDTYPE='                           01001200
&ZMS                  SETC  '&ZMS.&CURSORUPDTYPE"'                      01001300
&ZMS                  SETC  '&ZMS "CURSORUPDTYPE"'                      01001400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01001500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01001600
.ZG240A               ANOP  ,                                           01001700
.*-------------------------------------------------------------------   01001800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01001900
&XCURSORUPDTYPE       SETC  ''          INITIALIZE XVARIABLE            01002000
.ZG241A   AIF   ('&CURSORUPDTYPE(1)' NE 'NEXT').ZG242A                  01002100
&XCURSORUPDTYPE       SETC  'NEXT'      SET KEYWORD                     01002200
.*-------------------------------------------------------------------   01002300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01002400
.ZG242A   AIF   ('&CURSORUPDTYPE(1)' NE 'NEXTCOND').ZG243A              01002500
&XCURSORUPDTYPE       SETC  'NEXTCOND'  SET KEYWORD                     01002600
.*-------------------------------------------------------------------   01002700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01002800
.ZG243A   AIF   ('&CURSORUPDTYPE(1)' NE 'CURRENT').ZG244A               01002900
&XCURSORUPDTYPE       SETC  'CURRENT'   SET KEYWORD                     01003000
.*-------------------------------------------------------------------   01003100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01003200
.ZG244A   AIF   ('&CURSORUPDTYPE(1)' NE 'CURRENTCOND').ZG245A           01003300
&XCURSORUPDTYPE       SETC  'CURRENTCOND'       SET KEYWORD             01003400
.*-------------------------------------------------------------------   01003500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01003600
.ZG245A               AIF   (K'&XCURSORUPDTYPE GT 0).ZG245C  KEYWORD    01003700
                      AIF   (K'&CURSORUPDTYPE(1) LE 0).ZG245B           01003800
&ZMS                  SETC  '"CURSORUPDTYPE='                           01003900
&ZMS                  SETC  '&ZMS.&CURSORUPDTYPE"'                      01004000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01004100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01004200
&ZMS                  SETC  '&ZMS "NEXT",'                              01004300
&ZMS                  SETC  '&ZMS "NEXTCOND",'                          01004400
&ZMS                  SETC  '&ZMS "CURRENT",'                           01004500
&ZMS                  SETC  '&ZMS OR "CURRENTCOND".'                    01004600
                      MNOTE 8,' &ZMS '                                  01004700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01004800
.ZG245B               ANOP  ,                                           01004900
&XCURSORUPDTYPE       SETC  'NEXT'      SET DEFAULT KEYWORD             01005000
.ZG245C               ANOP  ,                                           01005100
&ZXCURSORUPDTYPE      SETC  'INPUT'     SET IN/OUTPUT                   01005200
.*------------------------------------------------------------------    01005300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01005400
.ZG246                ANOP  ,                                           01005500
&ZXUPDATECURSOR       SETC  'INPUT'     SET IN/OUTPUT                   01005600
                      AIF   (K'&XUPDATECURSOR GT 0).ZG246E  VALID ARG   01005700
                      AIF   (T'&UPDATECURSOR EQ 'O').ZG246D  OMITTED    01005800
&ZASYSLNDX            SETA  0                                           01005900
.ZG246A               ANOP  ,           POSITIONAL MACRO KEY            01006000
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01006100
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG246C           01006200
&ZTLC                 SETC 'UPDATECURSOR'                               01006300
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG246A  01006400
.ZG246B               ANOP  ,                                           01006500
&ZXUPDATECURSOR       SETC  ''          RESET IN/OUTPUT                 01006600
&ZMS                  SETC  'THE "UPDATECURSOR" KEY'                    01006700
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01006800
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01006900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01007000
                      AGO   .ZG246E                                     01007100
.ZG246C               ANOP  ,                                           01007200
&ZXUPDATECURSOR       SETC  ''          RESET IN/OUTPUT                 01007300
&ZMS                  SETC  '"UPDATECURSOR='                            01007400
&ZMS                  SETC  '&ZMS.&UPDATECURSOR"'                       01007500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01007600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01007700
&ZMS                  SETC  '&ZMS "NO"'                                 01007800
&ZMS                  SETC  '&ZMS OR "YES".'                            01007900
                      MNOTE 8,' &ZMS '                                  01008000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01008100
                      AGO   .ZG246E                                     01008200
.ZG246D               ANOP  ,                                           01008300
&XUPDATECURSOR        SETC  'NO'        SET DEFAULT KEYWORD             01008400
.ZG246E               ANOP  ,                                           01008500
.*----------------------------------------------------------------***   01008600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01008700
                      AIF   (N'&LISTDIR LE 1).ZG248A  CK NUM            01008800
&ZMS                  SETC  '"LISTDIR='                                 01008900
&ZMS                  SETC  '&ZMS.&LISTDIR"'                            01009000
&ZMS                  SETC  '&ZMS "LISTDIR"'                            01009100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01009200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01009300
.ZG248A               ANOP  ,                                           01009400
.*-------------------------------------------------------------------   01009500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01009600
&XLISTDIR             SETC  ''          INITIALIZE XVARIABLE            01009700
.ZG249A   AIF   ('&LISTDIR(1)' NE 'TOTAIL').ZG250A                      01009800
&XLISTDIR             SETC  'TOTAIL'    SET KEYWORD                     01009900
.*-------------------------------------------------------------------   01010000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01010100
.ZG250A   AIF   ('&LISTDIR(1)' NE 'TOHEAD').ZG251A                      01010200
&XLISTDIR             SETC  'TOHEAD'    SET KEYWORD                     01010300
.*-------------------------------------------------------------------   01010400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01010500
.ZG251A               AIF   (K'&XLISTDIR GT 0).ZG251C  KEYWORD          01010600
                      AIF   (K'&LISTDIR(1) LE 0).ZG251B                 01010700
&ZMS                  SETC  '"LISTDIR='                                 01010800
&ZMS                  SETC  '&ZMS.&LISTDIR"'                            01010900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01011000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01011100
&ZMS                  SETC  '&ZMS "TOTAIL"'                             01011200
&ZMS                  SETC  '&ZMS OR "TOHEAD".'                         01011300
                      MNOTE 8,' &ZMS '                                  01011400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01011500
.ZG251B               ANOP  ,                                           01011600
&XLISTDIR             SETC  'TOTAIL'    SET DEFAULT KEYWORD             01011700
.ZG251C               ANOP  ,                                           01011800
&ZXLISTDIR            SETC  'INPUT'     SET IN/OUTPUT                   01011900
.*------------------------------------------------------------------    01012000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01012100
&XLISTKEYTYPE         SETC  ''          INITIALIZE XVARIABLE            01012200
.*-------------------------------------------------------------------   01012300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01012400
.ZG254                ANOP  ,                                           01012500
                      AIF   (K'&LISTKEYTYPE(1) LE 0).ZG254A             01012600
&ZTLC                 SETC 'NOLISTKEY'                                  01012700
                      AIF   ('&LISTKEYTYPE(1)' NE '&ZTLC').ZG255        01012800
&XLISTKEYTYPE         SETC  'NOLISTKEY'         SET KEYWORD             01012900
                      AIF   (N'&LISTKEYTYPE LE 1).ZG254A  CK NUM        01013000
&ZMS                  SETC  '"LISTKEYTYPE='                             01013100
&ZMS                  SETC  '&ZMS.&LISTKEYTYPE"'                        01013200
&ZMS                  SETC  '&ZMS "LISTKEYTYPE"'                        01013300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01013400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01013500
.ZG254A               ANOP  ,                                           01013600
.*------------------------------------------------------------------    01013700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01013800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01013900
.ZG254A0              AIF   (K'&LISTKEYINC LE 0).ZG254A1  OK            01014000
&ZCVAL                SETC '&ZCVAL LISTKEYINC'  INCORRECT KEY USED      01014100
.ZG254A1              AIF   (K'&ZCVAL LE 0).ZG254A2  OK                 01014200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01014300
&ZMS                  SETC  '"LISTKEYTYPE'                              01014400
&ZMS                  SETC  '&ZMS.=&LISTKEYTYPE"'                       01014500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01014600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01014700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01014800
.ZG254A2              ANOP  ,                                           01014900
.*-------------------------------------------------------------------   01015000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01015100
.ZG255                ANOP  ,                                           01015200
&ZTLC                 SETC 'MOVE'                                       01015300
                      AIF   ('&LISTKEYTYPE(1)' NE '&ZTLC').ZG259        01015400
&XLISTKEYTYPE         SETC  'MOVE'      SET KEYWORD                     01015500
                      AIF   (N'&LISTKEYTYPE LE 1).ZG255A  CK NUM        01015600
&ZMS                  SETC  '"LISTKEYTYPE='                             01015700
&ZMS                  SETC  '&ZMS.&LISTKEYTYPE"'                        01015800
&ZMS                  SETC  '&ZMS "LISTKEYTYPE"'                        01015900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01016000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01016100
.ZG255A               ANOP  ,                                           01016200
.*----------------------------------------------------------------***   01016300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01016400
                      AIF   (N'&LISTKEYINC LE 1).ZG257A  CK NUM         01016500
&ZMS                  SETC  '"LISTKEYINC='                              01016600
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         01016700
&ZMS                  SETC  '&ZMS "LISTKEYINC"'                         01016800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01016900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01017000
.ZG257A               ANOP  ,                                           01017100
.*-------------------------------------------------------------------   01017200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01017300
&ZXLISTKEYINC         SETC  'INPUT'     SET IN/OUTPUT                   01017400
&XLISTKEYINC          SETC  'NO_LISTKEYINC'                             01017500
                      AIF   (K'&LISTKEYINC(1) LE 0).ZG257B  PARM        01017600
&XLISTKEYINC          SETC  '&LISTKEYINC(1)'    SET XVARIABLE           01017700
                      AIF   (N'&LISTKEYINC GT 1).ZG257B  MULTI          01017800
&XLISTKEYINC          SETC  '&LISTKEYINC'       SET XVARIABLE           01017900
.ZG257B               ANOP  ,                                           01018000
.*-------------------------------------------------------------------   01018100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01018200
                      AIF   (K'&ZXLISTKEYINC LE 0).ZG257R  NOT I/O      01018300
         AIF   ('&XLISTKEYINC' EQ 'NO_LISTKEYINC').ZG257R               01018400
                      AIF   ('&XLISTKEYINC'(1,1) NE '(').ZG257R         01018500
&ZCGPR                SETC  '&XLISTKEYINC'(2,K'&XLISTKEYINC-2)          01018600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG257P               01018700
                      AIF   (K'&ZCGPR GT 2).ZG257Q                      01018800
                      AIF   ('&ZCGPR' EQ '0').ZG257Q                    01018900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01019000
                      AIF   (T'&ZCGPR NE 'N').ZG257Q  INVALID REG NAME  01019100
.ZG257P               ANOP  ,                                           01019200
                      AIF   (T'&ZCGPR NE 'N').ZG257R  NON NUMERIC       01019300
                      AIF   ('&ZCGPR' LT '2').ZG257Q                    01019400
                      AIF   ('&ZCGPR' LE '12').ZG257R                   01019500
.ZG257Q               ANOP  ,                                           01019600
&ZMS                  SETC  '"LISTKEYINC='                              01019700
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         01019800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01019900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01020000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01020100
.ZG257R               ANOP  ,                                           01020200
.*-------------------------------------------------------------------   01020300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01020400
.ZG259                ANOP  ,                                           01020500
&ZTLC                 SETC 'CREATE'                                     01020600
                      AIF   ('&LISTKEYTYPE(1)' NE '&ZTLC').ZG263        01020700
&XLISTKEYTYPE         SETC  'CREATE'    SET KEYWORD                     01020800
                      AIF   (N'&LISTKEYTYPE LE 1).ZG259A  CK NUM        01020900
&ZMS                  SETC  '"LISTKEYTYPE='                             01021000
&ZMS                  SETC  '&ZMS.&LISTKEYTYPE"'                        01021100
&ZMS                  SETC  '&ZMS "LISTKEYTYPE"'                        01021200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01021300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01021400
.ZG259A               ANOP  ,                                           01021500
.*----------------------------------------------------------------***   01021600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01021700
                      AIF   (N'&LISTKEYINC LE 1).ZG261A  CK NUM         01021800
&ZMS                  SETC  '"LISTKEYINC='                              01021900
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         01022000
&ZMS                  SETC  '&ZMS "LISTKEYINC"'                         01022100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01022200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01022300
.ZG261A               ANOP  ,                                           01022400
.*-------------------------------------------------------------------   01022500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01022600
&ZXLISTKEYINC         SETC  'INPUT'     SET IN/OUTPUT                   01022700
&XLISTKEYINC          SETC  'NO_LISTKEYINC'                             01022800
                      AIF   (K'&LISTKEYINC(1) LE 0).ZG261B  PARM        01022900
&XLISTKEYINC          SETC  '&LISTKEYINC(1)'    SET XVARIABLE           01023000
                      AIF   (N'&LISTKEYINC GT 1).ZG261B  MULTI          01023100
&XLISTKEYINC          SETC  '&LISTKEYINC'       SET XVARIABLE           01023200
.ZG261B               ANOP  ,                                           01023300
.*-------------------------------------------------------------------   01023400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01023500
                      AIF   (K'&ZXLISTKEYINC LE 0).ZG261R  NOT I/O      01023600
         AIF   ('&XLISTKEYINC' EQ 'NO_LISTKEYINC').ZG261R               01023700
                      AIF   ('&XLISTKEYINC'(1,1) NE '(').ZG261R         01023800
&ZCGPR                SETC  '&XLISTKEYINC'(2,K'&XLISTKEYINC-2)          01023900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG261P               01024000
                      AIF   (K'&ZCGPR GT 2).ZG261Q                      01024100
                      AIF   ('&ZCGPR' EQ '0').ZG261Q                    01024200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01024300
                      AIF   (T'&ZCGPR NE 'N').ZG261Q  INVALID REG NAME  01024400
.ZG261P               ANOP  ,                                           01024500
                      AIF   (T'&ZCGPR NE 'N').ZG261R  NON NUMERIC       01024600
                      AIF   ('&ZCGPR' LT '2').ZG261Q                    01024700
                      AIF   ('&ZCGPR' LE '12').ZG261R                   01024800
.ZG261Q               ANOP  ,                                           01024900
&ZMS                  SETC  '"LISTKEYINC='                              01025000
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         01025100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01025200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01025300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01025400
.ZG261R               ANOP  ,                                           01025500
.*-------------------------------------------------------------------   01025600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01025700
.ZG263                ANOP  ,                                           01025800
&ZTLC                 SETC 'ANY'                                        01025900
                      AIF   ('&LISTKEYTYPE(1)' NE '&ZTLC').ZG267        01026000
&XLISTKEYTYPE         SETC  'ANY'       SET KEYWORD                     01026100
                      AIF   (N'&LISTKEYTYPE LE 1).ZG263A  CK NUM        01026200
&ZMS                  SETC  '"LISTKEYTYPE='                             01026300
&ZMS                  SETC  '&ZMS.&LISTKEYTYPE"'                        01026400
&ZMS                  SETC  '&ZMS "LISTKEYTYPE"'                        01026500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01026600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01026700
.ZG263A               ANOP  ,                                           01026800
.*----------------------------------------------------------------***   01026900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01027000
                      AIF   (N'&LISTKEYINC LE 1).ZG265A  CK NUM         01027100
&ZMS                  SETC  '"LISTKEYINC='                              01027200
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         01027300
&ZMS                  SETC  '&ZMS "LISTKEYINC"'                         01027400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01027500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01027600
.ZG265A               ANOP  ,                                           01027700
.*-------------------------------------------------------------------   01027800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01027900
&ZXLISTKEYINC         SETC  'INPUT'     SET IN/OUTPUT                   01028000
&XLISTKEYINC          SETC  'NO_LISTKEYINC'                             01028100
                      AIF   (K'&LISTKEYINC(1) LE 0).ZG265B  PARM        01028200
&XLISTKEYINC          SETC  '&LISTKEYINC(1)'    SET XVARIABLE           01028300
                      AIF   (N'&LISTKEYINC GT 1).ZG265B  MULTI          01028400
&XLISTKEYINC          SETC  '&LISTKEYINC'       SET XVARIABLE           01028500
.ZG265B               ANOP  ,                                           01028600
.*-------------------------------------------------------------------   01028700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01028800
                      AIF   (K'&ZXLISTKEYINC LE 0).ZG265R  NOT I/O      01028900
         AIF   ('&XLISTKEYINC' EQ 'NO_LISTKEYINC').ZG265R               01029000
                      AIF   ('&XLISTKEYINC'(1,1) NE '(').ZG265R         01029100
&ZCGPR                SETC  '&XLISTKEYINC'(2,K'&XLISTKEYINC-2)          01029200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG265P               01029300
                      AIF   (K'&ZCGPR GT 2).ZG265Q                      01029400
                      AIF   ('&ZCGPR' EQ '0').ZG265Q                    01029500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01029600
                      AIF   (T'&ZCGPR NE 'N').ZG265Q  INVALID REG NAME  01029700
.ZG265P               ANOP  ,                                           01029800
                      AIF   (T'&ZCGPR NE 'N').ZG265R  NON NUMERIC       01029900
                      AIF   ('&ZCGPR' LT '2').ZG265Q                    01030000
                      AIF   ('&ZCGPR' LE '12').ZG265R                   01030100
.ZG265Q               ANOP  ,                                           01030200
&ZMS                  SETC  '"LISTKEYINC='                              01030300
&ZMS                  SETC  '&ZMS.&LISTKEYINC"'                         01030400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01030500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01030600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01030700
.ZG265R               ANOP  ,                                           01030800
.*------------------------------------------------------------------    01030900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01031000
.ZG267                ANOP  ,                                           01031100
&ZXLISTKEYTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01031200
                      AIF   (K'&XLISTKEYTYPE GT 0).ZG267E  VALID ARG    01031300
                      AIF   (T'&LISTKEYTYPE EQ 'O').ZG267D  OMITTED     01031400
&ZASYSLNDX            SETA  0                                           01031500
.ZG267A               ANOP  ,           POSITIONAL MACRO KEY            01031600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01031700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG267C           01031800
&ZTLC                 SETC 'LISTKEYTYPE'                                01031900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG267A  01032000
.ZG267B               ANOP  ,                                           01032100
&ZXLISTKEYTYPE        SETC  ''          RESET IN/OUTPUT                 01032200
&ZMS                  SETC  'THE "LISTKEYTYPE" KEY'                     01032300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01032400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01032500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01032600
                      AGO   .ZG267E                                     01032700
.ZG267C               ANOP  ,                                           01032800
&ZXLISTKEYTYPE        SETC  ''          RESET IN/OUTPUT                 01032900
&ZMS                  SETC  '"LISTKEYTYPE='                             01033000
&ZMS                  SETC  '&ZMS.&LISTKEYTYPE"'                        01033100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01033200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01033300
&ZMS                  SETC  '&ZMS "NOLISTKEY",'                         01033400
&ZMS                  SETC  '&ZMS "MOVE",'                              01033500
&ZMS                  SETC  '&ZMS "CREATE",'                            01033600
&ZMS                  SETC  '&ZMS OR "ANY".'                            01033700
                      MNOTE 8,' &ZMS '                                  01033800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01033900
                      AGO   .ZG267E                                     01034000
.ZG267D               ANOP  ,                                           01034100
&XLISTKEYTYPE         SETC  'NOLISTKEY'         SET DEFAULT KEYWORD     01034200
.ZG267E               ANOP  ,                                           01034300
.*----------------------------------------------------------------***   01034400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01034500
                      AIF   (N'&KEYCOMP LE 1).ZG269A  CK NUM            01034600
&ZMS                  SETC  '"KEYCOMP='                                 01034700
&ZMS                  SETC  '&ZMS.&KEYCOMP"'                            01034800
&ZMS                  SETC  '&ZMS "KEYCOMP"'                            01034900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01035000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01035100
.ZG269A               ANOP  ,                                           01035200
.*-------------------------------------------------------------------   01035300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01035400
&ZXKEYCOMP            SETC  'INPUT'     SET IN/OUTPUT                   01035500
&XKEYCOMP             SETC  'NO_KEYCOMP'                                01035600
                      AIF   (K'&KEYCOMP(1) LE 0).ZG269B  PARM           01035700
&XKEYCOMP             SETC  '&KEYCOMP(1)'       SET XVARIABLE           01035800
                      AIF   (N'&KEYCOMP GT 1).ZG269B  MULTI             01035900
&XKEYCOMP             SETC  '&KEYCOMP'  SET XVARIABLE                   01036000
.ZG269B               ANOP  ,                                           01036100
.*-------------------------------------------------------------------   01036200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01036300
                      AIF   (K'&ZXKEYCOMP LE 0).ZG269R  NOT I/O         01036400
         AIF   ('&XKEYCOMP' EQ 'NO_KEYCOMP').ZG269R                     01036500
                      AIF   ('&XKEYCOMP'(1,1) NE '(').ZG269R            01036600
&ZCGPR                SETC  '&XKEYCOMP'(2,K'&XKEYCOMP-2)                01036700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG269P               01036800
                      AIF   (K'&ZCGPR GT 2).ZG269Q                      01036900
                      AIF   ('&ZCGPR' EQ '0').ZG269Q                    01037000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01037100
                      AIF   (T'&ZCGPR NE 'N').ZG269Q  INVALID REG NAME  01037200
.ZG269P               ANOP  ,                                           01037300
                      AIF   (T'&ZCGPR NE 'N').ZG269R  NON NUMERIC       01037400
                      AIF   ('&ZCGPR' LT '2').ZG269Q                    01037500
                      AIF   ('&ZCGPR' LE '12').ZG269R                   01037600
.ZG269Q               ANOP  ,                                           01037700
&ZMS                  SETC  '"KEYCOMP='                                 01037800
&ZMS                  SETC  '&ZMS.&KEYCOMP"'                            01037900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01038000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01038100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01038200
.ZG269R               ANOP  ,                                           01038300
.*----------------------------------------------------------------***   01038400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01038500
                      AIF   (N'&VERSCOMP LE 1).ZG272A  CK NUM           01038600
&ZMS                  SETC  '"VERSCOMP='                                01038700
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           01038800
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           01038900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01039000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01039100
.ZG272A               ANOP  ,                                           01039200
.*-------------------------------------------------------------------   01039300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01039400
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01039500
&XVERSCOMP            SETC  'NO_VERSCOMP'                               01039600
                      AIF   (K'&VERSCOMP(1) LE 0).ZG272B  PARM          01039700
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           01039800
                      AIF   (N'&VERSCOMP GT 1).ZG272B  MULTI            01039900
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           01040000
.ZG272B               ANOP  ,                                           01040100
.*-------------------------------------------------------------------   01040200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01040300
                      AIF   (K'&ZXVERSCOMP LE 0).ZG272R  NOT I/O        01040400
         AIF   ('&XVERSCOMP' EQ 'NO_VERSCOMP').ZG272R                   01040500
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG272R           01040600
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              01040700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG272P               01040800
                      AIF   (K'&ZCGPR GT 2).ZG272Q                      01040900
                      AIF   ('&ZCGPR' EQ '0').ZG272Q                    01041000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01041100
                      AIF   (T'&ZCGPR NE 'N').ZG272Q  INVALID REG NAME  01041200
.ZG272P               ANOP  ,                                           01041300
                      AIF   (T'&ZCGPR NE 'N').ZG272R  NON NUMERIC       01041400
                      AIF   ('&ZCGPR' LT '2').ZG272Q                    01041500
                      AIF   ('&ZCGPR' LE '12').ZG272R                   01041600
.ZG272Q               ANOP  ,                                           01041700
&ZMS                  SETC  '"VERSCOMP='                                01041800
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           01041900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01042000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01042100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01042200
.ZG272R               ANOP  ,                                           01042300
.*----------------------------------------------------------------***   01042400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01042500
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG274A  CK NUM       01042600
&ZMS                  SETC  '"VERSCOMPTYPE='                            01042700
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01042800
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       01042900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01043000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01043100
.ZG274A               ANOP  ,                                           01043200
.*-------------------------------------------------------------------   01043300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01043400
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01043500
.ZG275A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG276A                  01043600
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01043700
.*-------------------------------------------------------------------   01043800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01043900
.ZG276A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG277A            01044000
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01044100
.*-------------------------------------------------------------------   01044200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01044300
.ZG277A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG277C  KEYWORD     01044400
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG277B            01044500
&ZMS                  SETC  '"VERSCOMPTYPE='                            01044600
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01044700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01044800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01044900
&ZMS                  SETC  '&ZMS "EQUAL"'                              01045000
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01045100
                      MNOTE 8,' &ZMS '                                  01045200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01045300
.ZG277B               ANOP  ,                                           01045400
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01045500
.ZG277C               ANOP  ,                                           01045600
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01045700
.*-------------------------------------------------------------------   01045800
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01045900
                      AIF   (K'&VERSCOMP(1) GT 0).ZG277D  KEY           01046000
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG277D  PARM      01046100
&ZMS                  SETC  '"VERSCOMPTYPE'                             01046200
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      01046300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01046400
&ZMS                  SETC  '&ZMS '                                     01046500
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           01046600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01046700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01046800
.ZG277D               ANOP  ,                                           01046900
.*------------------------------------------------------------------    01047000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01047100
&XVERSUPDATE          SETC  ''          INITIALIZE XVARIABLE            01047200
.*-------------------------------------------------------------------   01047300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01047400
.ZG281                ANOP  ,                                           01047500
                      AIF   (K'&VERSUPDATE(1) LE 0).ZG281A              01047600
&ZTLC                 SETC 'NONE'                                       01047700
                      AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG282         01047800
&XVERSUPDATE          SETC  'NONE'      SET KEYWORD                     01047900
                      AIF   (N'&VERSUPDATE LE 1).ZG281A  CK NUM         01048000
&ZMS                  SETC  '"VERSUPDATE='                              01048100
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         01048200
&ZMS                  SETC  '&ZMS "VERSUPDATE"'                         01048300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01048400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01048500
.ZG281A               ANOP  ,                                           01048600
.*------------------------------------------------------------------    01048700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01048800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01048900
.ZG281A0              AIF   (K'&NEWVERS LE 0).ZG281A1  OK               01049000
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01049100
.ZG281A1              AIF   (K'&ZCVAL LE 0).ZG281A2  OK                 01049200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01049300
&ZMS                  SETC  '"VERSUPDATE'                               01049400
&ZMS                  SETC  '&ZMS.=&VERSUPDATE"'                        01049500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01049600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01049700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01049800
.ZG281A2              ANOP  ,                                           01049900
.*-------------------------------------------------------------------   01050000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01050100
.ZG282                ANOP  ,                                           01050200
&ZTLC                 SETC 'INC'                                        01050300
                      AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG283         01050400
&XVERSUPDATE          SETC  'INC'       SET KEYWORD                     01050500
                      AIF   (N'&VERSUPDATE LE 1).ZG282A  CK NUM         01050600
&ZMS                  SETC  '"VERSUPDATE='                              01050700
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         01050800
&ZMS                  SETC  '&ZMS "VERSUPDATE"'                         01050900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01051000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01051100
.ZG282A               ANOP  ,                                           01051200
.*------------------------------------------------------------------    01051300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01051400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01051500
.ZG282A0              AIF   (K'&NEWVERS LE 0).ZG282A1  OK               01051600
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01051700
.ZG282A1              AIF   (K'&ZCVAL LE 0).ZG282A2  OK                 01051800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01051900
&ZMS                  SETC  '"VERSUPDATE'                               01052000
&ZMS                  SETC  '&ZMS.=&VERSUPDATE"'                        01052100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01052200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01052300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01052400
.ZG282A2              ANOP  ,                                           01052500
.*-------------------------------------------------------------------   01052600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01052700
.ZG283                ANOP  ,                                           01052800
&ZTLC                 SETC 'DEC'                                        01052900
                      AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG284         01053000
&XVERSUPDATE          SETC  'DEC'       SET KEYWORD                     01053100
                      AIF   (N'&VERSUPDATE LE 1).ZG283A  CK NUM         01053200
&ZMS                  SETC  '"VERSUPDATE='                              01053300
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         01053400
&ZMS                  SETC  '&ZMS "VERSUPDATE"'                         01053500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01053600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01053700
.ZG283A               ANOP  ,                                           01053800
.*------------------------------------------------------------------    01053900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01054000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01054100
.ZG283A0              AIF   (K'&NEWVERS LE 0).ZG283A1  OK               01054200
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01054300
.ZG283A1              AIF   (K'&ZCVAL LE 0).ZG283A2  OK                 01054400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01054500
&ZMS                  SETC  '"VERSUPDATE'                               01054600
&ZMS                  SETC  '&ZMS.=&VERSUPDATE"'                        01054700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01054800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01054900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01055000
.ZG283A2              ANOP  ,                                           01055100
.*-------------------------------------------------------------------   01055200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01055300
.ZG284                ANOP  ,                                           01055400
&ZTLC                 SETC 'SET'                                        01055500
                      AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG288         01055600
&XVERSUPDATE          SETC  'SET'       SET KEYWORD                     01055700
                      AIF   (N'&VERSUPDATE LE 1).ZG284A  CK NUM         01055800
&ZMS                  SETC  '"VERSUPDATE='                              01055900
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         01056000
&ZMS                  SETC  '&ZMS "VERSUPDATE"'                         01056100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01056200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01056300
.ZG284A               ANOP  ,                                           01056400
.*----------------------------------------------------------------***   01056500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01056600
                      AIF   (N'&NEWVERS LE 1).ZG286A  CK NUM            01056700
&ZMS                  SETC  '"NEWVERS='                                 01056800
&ZMS                  SETC  '&ZMS.&NEWVERS"'                            01056900
&ZMS                  SETC  '&ZMS "NEWVERS"'                            01057000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01057100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01057200
.ZG286A               ANOP  ,                                           01057300
.*-------------------------------------------------------------------   01057400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01057500
&ZXNEWVERS            SETC  'INPUT'     SET IN/OUTPUT                   01057600
&XNEWVERS             SETC  '&NEWVERS(1)'       SET XVARIABLE           01057700
                      AIF   (N'&NEWVERS GT 1).ZG286B  MULTI             01057800
&XNEWVERS             SETC  '&NEWVERS'  SET XVARIABLE                   01057900
.ZG286B               AIF   (K'&NEWVERS(1) GT 0).ZG286C                 01058000
&ZXNEWVERS            SETC  ''          RESET IN/OUTPUT                 01058100
&ZMS                  SETC  'WHEN "SET" IS SPECIFIED'                   01058200
&ZMS                  SETC  '&ZMS , "NEWVERS" KEY AND ITS'              01058300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01058400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01058500
                      AGO   .ZG286D                                     01058600
.ZG286C               AIF   ('&XNEWVERS' NE 'NO_NEWVERS').ZG286D        01058700
&ZXNEWVERS            SETC  ''          RESET IN/OUTPUT                 01058800
.ZG286D               ANOP  ,                                           01058900
.*-------------------------------------------------------------------   01059000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01059100
                      AIF   (K'&ZXNEWVERS LE 0).ZG286R  NOT I/O         01059200
         AIF   ('&XNEWVERS' EQ 'NO_NEWVERS').ZG286R                     01059300
                      AIF   ('&XNEWVERS'(1,1) NE '(').ZG286R            01059400
&ZCGPR                SETC  '&XNEWVERS'(2,K'&XNEWVERS-2)                01059500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG286P               01059600
                      AIF   (K'&ZCGPR GT 2).ZG286Q                      01059700
                      AIF   ('&ZCGPR' EQ '0').ZG286Q                    01059800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01059900
                      AIF   (T'&ZCGPR NE 'N').ZG286Q  INVALID REG NAME  01060000
.ZG286P               ANOP  ,                                           01060100
                      AIF   (T'&ZCGPR NE 'N').ZG286R  NON NUMERIC       01060200
                      AIF   ('&ZCGPR' LT '2').ZG286Q                    01060300
                      AIF   ('&ZCGPR' LE '12').ZG286R                   01060400
.ZG286Q               ANOP  ,                                           01060500
&ZMS                  SETC  '"NEWVERS='                                 01060600
&ZMS                  SETC  '&ZMS.&NEWVERS"'                            01060700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01060800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01060900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01061000
.ZG286R               ANOP  ,                                           01061100
.*------------------------------------------------------------------    01061200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01061300
.ZG288                ANOP  ,                                           01061400
&ZXVERSUPDATE         SETC  'INPUT'     SET IN/OUTPUT                   01061500
                      AIF   (K'&XVERSUPDATE GT 0).ZG288E  VALID ARG     01061600
                      AIF   (T'&VERSUPDATE EQ 'O').ZG288D  OMITTED      01061700
&ZASYSLNDX            SETA  0                                           01061800
.ZG288A               ANOP  ,           POSITIONAL MACRO KEY            01061900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01062000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG288C           01062100
&ZTLC                 SETC 'VERSUPDATE'                                 01062200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG288A  01062300
.ZG288B               ANOP  ,                                           01062400
&ZXVERSUPDATE         SETC  ''          RESET IN/OUTPUT                 01062500
&ZMS                  SETC  'THE "VERSUPDATE" KEY'                      01062600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01062700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01062800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01062900
                      AGO   .ZG288E                                     01063000
.ZG288C               ANOP  ,                                           01063100
&ZXVERSUPDATE         SETC  ''          RESET IN/OUTPUT                 01063200
&ZMS                  SETC  '"VERSUPDATE='                              01063300
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         01063400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01063500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01063600
&ZMS                  SETC  '&ZMS "NONE",'                              01063700
&ZMS                  SETC  '&ZMS "INC",'                               01063800
&ZMS                  SETC  '&ZMS "DEC",'                               01063900
&ZMS                  SETC  '&ZMS OR "SET".'                            01064000
                      MNOTE 8,' &ZMS '                                  01064100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01064200
                      AGO   .ZG288E                                     01064300
.ZG288D               ANOP  ,                                           01064400
&XVERSUPDATE          SETC  'NONE'      SET DEFAULT KEYWORD             01064500
.ZG288E               ANOP  ,                                           01064600
.*----------------------------------------------------------------***   01064700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01064800
                      AIF   (N'&LOCKINDEX LE 1).ZG290A  CK NUM          01064900
&ZMS                  SETC  '"LOCKINDEX='                               01065000
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          01065100
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          01065200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01065300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01065400
.ZG290A               ANOP  ,                                           01065500
.*-------------------------------------------------------------------   01065600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01065700
&ZXLOCKINDEX          SETC  'INPUT'     SET IN/OUTPUT                   01065800
&XLOCKINDEX           SETC  'NO_LOCKINDEX'                              01065900
                      AIF   (K'&LOCKINDEX(1) LE 0).ZG290B  PARM         01066000
&XLOCKINDEX           SETC  '&LOCKINDEX(1)'     SET XVARIABLE           01066100
                      AIF   (N'&LOCKINDEX GT 1).ZG290B  MULTI           01066200
&XLOCKINDEX           SETC  '&LOCKINDEX'        SET XVARIABLE           01066300
.ZG290B               ANOP  ,                                           01066400
.*-------------------------------------------------------------------   01066500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01066600
                      AIF   (K'&ZXLOCKINDEX LE 0).ZG290R  NOT I/O       01066700
         AIF   ('&XLOCKINDEX' EQ 'NO_LOCKINDEX').ZG290R                 01066800
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZG290R          01066900
&ZCGPR                SETC  '&XLOCKINDEX'(2,K'&XLOCKINDEX-2)            01067000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG290P               01067100
                      AIF   (K'&ZCGPR GT 2).ZG290Q                      01067200
                      AIF   ('&ZCGPR' EQ '0').ZG290Q                    01067300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01067400
                      AIF   (T'&ZCGPR NE 'N').ZG290Q  INVALID REG NAME  01067500
.ZG290P               ANOP  ,                                           01067600
                      AIF   (T'&ZCGPR NE 'N').ZG290R  NON NUMERIC       01067700
                      AIF   ('&ZCGPR' LT '2').ZG290Q                    01067800
                      AIF   ('&ZCGPR' LE '12').ZG290R                   01067900
.ZG290Q               ANOP  ,                                           01068000
&ZMS                  SETC  '"LOCKINDEX='                               01068100
&ZMS                  SETC  '&ZMS.&LOCKINDEX"'                          01068200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01068300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01068400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01068500
.ZG290R               ANOP  ,                                           01068600
.*------------------------------------------------------------------    01068700
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01068800
&XLOCKOPER            SETC  ''          INITIALIZE XVARIABLE            01068900
.*-------------------------------------------------------------------   01069000
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01069100
.ZG293                ANOP  ,                                           01069200
                      AIF   (K'&LOCKOPER(1) LE 0).ZG293A                01069300
&ZTLC                 SETC 'SET'                                        01069400
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG302           01069500
&XLOCKOPER            SETC  'SET'       SET KEYWORD                     01069600
                      AIF   (N'&LOCKOPER LE 1).ZG293A  CK NUM           01069700
&ZMS                  SETC  '"LOCKOPER='                                01069800
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           01069900
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           01070000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01070100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01070200
.ZG293A               ANOP  ,                                           01070300
.*----------------------------------------------------------------***   01070400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01070500
                      AIF   (N'&LOCKMODE LE 1).ZG295A  CK NUM           01070600
&ZMS                  SETC  '"LOCKMODE='                                01070700
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           01070800
&ZMS                  SETC  '&ZMS "LOCKMODE"'                           01070900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01071000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01071100
.ZG295A               ANOP  ,                                           01071200
.*-------------------------------------------------------------------   01071300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01071400
&XLOCKMODE            SETC  ''          INITIALIZE XVARIABLE            01071500
.ZG296A   AIF   ('&LOCKMODE(1)' NE 'UNCOND').ZG297A                     01071600
&XLOCKMODE            SETC  'UNCOND'    SET KEYWORD                     01071700
.*-------------------------------------------------------------------   01071800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01071900
.ZG297A   AIF   ('&LOCKMODE(1)' NE 'COND').ZG298A                       01072000
&XLOCKMODE            SETC  'COND'      SET KEYWORD                     01072100
.*-------------------------------------------------------------------   01072200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01072300
.ZG298A               AIF   (K'&XLOCKMODE GT 0).ZG298C  KEYWORD         01072400
                      AIF   (K'&LOCKMODE(1) LE 0).ZG298B                01072500
&ZMS                  SETC  '"LOCKMODE='                                01072600
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           01072700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01072800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01072900
&ZMS                  SETC  '&ZMS "UNCOND"'                             01073000
&ZMS                  SETC  '&ZMS OR "COND".'                           01073100
                      MNOTE 8,' &ZMS '                                  01073200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01073300
.ZG298B               ANOP  ,                                           01073400
&XLOCKMODE            SETC  'UNCOND'    SET DEFAULT KEYWORD             01073500
.ZG298C               ANOP  ,                                           01073600
&ZXLOCKMODE           SETC  'INPUT'     SET IN/OUTPUT                   01073700
.*----------------------------------------------------------------***   01073800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01073900
                      AIF   (N'&LOCKDATA LE 1).ZG300A  CK NUM           01074000
&ZMS                  SETC  '"LOCKDATA='                                01074100
&ZMS                  SETC  '&ZMS.&LOCKDATA"'                           01074200
&ZMS                  SETC  '&ZMS "LOCKDATA"'                           01074300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01074400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01074500
.ZG300A               ANOP  ,                                           01074600
.*-------------------------------------------------------------------   01074700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01074800
&ZXLOCKDATA           SETC  'INPUT'     SET IN/OUTPUT                   01074900
&XLOCKDATA            SETC  'NO_LOCKDATA'                               01075000
                      AIF   (K'&LOCKDATA(1) LE 0).ZG300B  PARM          01075100
&XLOCKDATA            SETC  '&LOCKDATA(1)'      SET XVARIABLE           01075200
                      AIF   (N'&LOCKDATA GT 1).ZG300B  MULTI            01075300
&XLOCKDATA            SETC  '&LOCKDATA'         SET XVARIABLE           01075400
.ZG300B               ANOP  ,                                           01075500
.*-------------------------------------------------------------------   01075600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01075700
                      AIF   (K'&ZXLOCKDATA LE 0).ZG300R  NOT I/O        01075800
         AIF   ('&XLOCKDATA' EQ 'NO_LOCKDATA').ZG300R                   01075900
                      AIF   ('&XLOCKDATA'(1,1) NE '(').ZG300R           01076000
&ZCGPR                SETC  '&XLOCKDATA'(2,K'&XLOCKDATA-2)              01076100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG300P               01076200
                      AIF   (K'&ZCGPR GT 2).ZG300Q                      01076300
                      AIF   ('&ZCGPR' EQ '0').ZG300Q                    01076400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01076500
                      AIF   (T'&ZCGPR NE 'N').ZG300Q  INVALID REG NAME  01076600
.ZG300P               ANOP  ,                                           01076700
                      AIF   (T'&ZCGPR NE 'N').ZG300R  NON NUMERIC       01076800
                      AIF   ('&ZCGPR' LT '2').ZG300Q                    01076900
                      AIF   ('&ZCGPR' LE '12').ZG300R                   01077000
.ZG300Q               ANOP  ,                                           01077100
&ZMS                  SETC  '"LOCKDATA='                                01077200
&ZMS                  SETC  '&ZMS.&LOCKDATA"'                           01077300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01077400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01077500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01077600
.ZG300R               ANOP  ,                                           01077700
.*-------------------------------------------------------------------   01077800
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01077900
.ZG302                ANOP  ,                                           01078000
&ZTLC                 SETC 'RESET'                                      01078100
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG303           01078200
&XLOCKOPER            SETC  'RESET'     SET KEYWORD                     01078300
                      AIF   (N'&LOCKOPER LE 1).ZG302A  CK NUM           01078400
&ZMS                  SETC  '"LOCKOPER='                                01078500
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           01078600
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           01078700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01078800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01078900
.ZG302A               ANOP  ,                                           01079000
.*------------------------------------------------------------------    01079100
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01079200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01079300
.ZG302A0              AIF   (K'&LOCKMODE LE 0).ZG302A1  OK              01079400
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      01079500
.ZG302A1              AIF   (K'&LOCKDATA LE 0).ZG302A2  OK              01079600
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      01079700
.ZG302A2              AIF   (K'&ZCVAL LE 0).ZG302A3  OK                 01079800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01079900
&ZMS                  SETC  '"LOCKOPER'                                 01080000
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          01080100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01080200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01080300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01080400
.ZG302A3              ANOP  ,                                           01080500
.*-------------------------------------------------------------------   01080600
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01080700
.ZG303                ANOP  ,                                           01080800
&ZTLC                 SETC 'NOTHELD'                                    01080900
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG309           01081000
&XLOCKOPER            SETC  'NOTHELD'   SET KEYWORD                     01081100
                      AIF   (N'&LOCKOPER LE 1).ZG303A  CK NUM           01081200
&ZMS                  SETC  '"LOCKOPER='                                01081300
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           01081400
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           01081500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01081600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01081700
.ZG303A               ANOP  ,                                           01081800
.*------------------------------------------------------------------    01081900
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01082000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01082100
.ZG303A0              AIF   (K'&LOCKDATA LE 0).ZG303A1  OK              01082200
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      01082300
.ZG303A1              AIF   (K'&ZCVAL LE 0).ZG303A2  OK                 01082400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01082500
&ZMS                  SETC  '"LOCKOPER'                                 01082600
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          01082700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01082800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01082900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01083000
.ZG303A2              ANOP  ,                                           01083100
.*----------------------------------------------------------------***   01083200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01083300
                      AIF   (N'&LOCKMODE LE 1).ZG305A  CK NUM           01083400
&ZMS                  SETC  '"LOCKMODE='                                01083500
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           01083600
&ZMS                  SETC  '&ZMS "LOCKMODE"'                           01083700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01083800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01083900
.ZG305A               ANOP  ,                                           01084000
.*-------------------------------------------------------------------   01084100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01084200
&XLOCKMODE            SETC  ''          INITIALIZE XVARIABLE            01084300
.ZG306A   AIF   ('&LOCKMODE(1)' NE 'UNCOND').ZG307A                     01084400
&XLOCKMODE            SETC  'UNCOND'    SET KEYWORD                     01084500
.*-------------------------------------------------------------------   01084600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01084700
.ZG307A   AIF   ('&LOCKMODE(1)' NE 'COND').ZG308A                       01084800
&XLOCKMODE            SETC  'COND'      SET KEYWORD                     01084900
.*-------------------------------------------------------------------   01085000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01085100
.ZG308A               AIF   (K'&XLOCKMODE GT 0).ZG308C  KEYWORD         01085200
                      AIF   (K'&LOCKMODE(1) LE 0).ZG308B                01085300
&ZMS                  SETC  '"LOCKMODE='                                01085400
&ZMS                  SETC  '&ZMS.&LOCKMODE"'                           01085500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01085600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01085700
&ZMS                  SETC  '&ZMS "UNCOND"'                             01085800
&ZMS                  SETC  '&ZMS OR "COND".'                           01085900
                      MNOTE 8,' &ZMS '                                  01086000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01086100
.ZG308B               ANOP  ,                                           01086200
&XLOCKMODE            SETC  'UNCOND'    SET DEFAULT KEYWORD             01086300
.ZG308C               ANOP  ,                                           01086400
&ZXLOCKMODE           SETC  'INPUT'     SET IN/OUTPUT                   01086500
.*-------------------------------------------------------------------   01086600
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01086700
.ZG309                ANOP  ,                                           01086800
&ZTLC                 SETC 'HELDBY'                                     01086900
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG310           01087000
&XLOCKOPER            SETC  'HELDBY'    SET KEYWORD                     01087100
                      AIF   (N'&LOCKOPER LE 1).ZG309A  CK NUM           01087200
&ZMS                  SETC  '"LOCKOPER='                                01087300
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           01087400
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           01087500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01087600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01087700
.ZG309A               ANOP  ,                                           01087800
.*------------------------------------------------------------------    01087900
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01088000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01088100
.ZG309A0              AIF   (K'&LOCKMODE LE 0).ZG309A1  OK              01088200
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      01088300
.ZG309A1              AIF   (K'&LOCKDATA LE 0).ZG309A2  OK              01088400
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      01088500
.ZG309A2              AIF   (K'&ZCVAL LE 0).ZG309A3  OK                 01088600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01088700
&ZMS                  SETC  '"LOCKOPER'                                 01088800
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          01088900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01089000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01089100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01089200
.ZG309A3              ANOP  ,                                           01089300
.*-------------------------------------------------------------------   01089400
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01089500
.ZG310                ANOP  ,                                           01089600
&ZTLC                 SETC 'TEST'                                       01089700
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG311           01089800
&XLOCKOPER            SETC  'TEST'      SET KEYWORD                     01089900
                      AIF   (N'&LOCKOPER LE 1).ZG310A  CK NUM           01090000
&ZMS                  SETC  '"LOCKOPER='                                01090100
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           01090200
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           01090300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01090400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01090500
.ZG310A               ANOP  ,                                           01090600
.*------------------------------------------------------------------    01090700
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01090800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01090900
.ZG310A0              AIF   (K'&LOCKMODE LE 0).ZG310A1  OK              01091000
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      01091100
.ZG310A1              AIF   (K'&LOCKDATA LE 0).ZG310A2  OK              01091200
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      01091300
.ZG310A2              AIF   (K'&ZCVAL LE 0).ZG310A3  OK                 01091400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01091500
&ZMS                  SETC  '"LOCKOPER'                                 01091600
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          01091700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01091800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01091900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01092000
.ZG310A3              ANOP  ,                                           01092100
.*-------------------------------------------------------------------   01092200
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01092300
.ZG311                ANOP  ,                                           01092400
&ZTLC                 SETC 'READNEXT'                                   01092500
                      AIF   ('&LOCKOPER(1)' NE '&ZTLC').ZG312           01092600
&XLOCKOPER            SETC  'READNEXT'  SET KEYWORD                     01092700
                      AIF   (N'&LOCKOPER LE 1).ZG311A  CK NUM           01092800
&ZMS                  SETC  '"LOCKOPER='                                01092900
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           01093000
&ZMS                  SETC  '&ZMS "LOCKOPER"'                           01093100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01093200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01093300
.ZG311A               ANOP  ,                                           01093400
.*------------------------------------------------------------------    01093500
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01093600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01093700
.ZG311A0              AIF   (K'&LOCKMODE LE 0).ZG311A1  OK              01093800
&ZCVAL                SETC '&ZCVAL LOCKMODE'    INCORRECT KEY USED      01093900
.ZG311A1              AIF   (K'&LOCKDATA LE 0).ZG311A2  OK              01094000
&ZCVAL                SETC '&ZCVAL LOCKDATA'    INCORRECT KEY USED      01094100
.ZG311A2              AIF   (K'&ZCVAL LE 0).ZG311A3  OK                 01094200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01094300
&ZMS                  SETC  '"LOCKOPER'                                 01094400
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          01094500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01094600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01094700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01094800
.ZG311A3              ANOP  ,                                           01094900
.*------------------------------------------------------------------    01095000
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01095100
.ZG312                ANOP  ,                                           01095200
&ZXLOCKOPER           SETC  'INPUT'     SET IN/OUTPUT                   01095300
                      AIF   (K'&XLOCKOPER GT 0).ZG312E  VALID ARG       01095400
                      AIF   (T'&LOCKOPER EQ 'O').ZG312D  OMITTED        01095500
&ZASYSLNDX            SETA  0                                           01095600
.ZG312A               ANOP  ,           POSITIONAL MACRO KEY            01095700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01095800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG312C           01095900
&ZTLC                 SETC 'LOCKOPER'                                   01096000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG312A  01096100
.ZG312B               ANOP  ,                                           01096200
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 01096300
&ZMS                  SETC  'THE "LOCKOPER" KEY'                        01096400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01096500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01096600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01096700
                      AGO   .ZG312E                                     01096800
.ZG312C               ANOP  ,                                           01096900
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 01097000
&ZMS                  SETC  '"LOCKOPER='                                01097100
&ZMS                  SETC  '&ZMS.&LOCKOPER"'                           01097200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01097300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01097400
&ZMS                  SETC  '&ZMS "SET",'                               01097500
&ZMS                  SETC  '&ZMS "RESET",'                             01097600
&ZMS                  SETC  '&ZMS "NOTHELD",'                           01097700
&ZMS                  SETC  '&ZMS "HELDBY",'                            01097800
&ZMS                  SETC  '&ZMS "TEST",'                              01097900
&ZMS                  SETC  '&ZMS OR "READNEXT".'                       01098000
                      MNOTE 8,' &ZMS '                                  01098100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01098200
                      AGO   .ZG312E                                     01098300
.ZG312D               ANOP  ,                                           01098400
&XLOCKOPER            SETC  'SET'       SET DEFAULT KEYWORD             01098500
.ZG312E               ANOP  ,                                           01098600
.*------------------------------------------------------------------    01098700
.***AG.KKCTL06 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       01098800
                      AIF   (K'&LOCKINDEX(1) GT 0).ZG312F  KEY          01098900
                      AIF   (K'&LOCKOPER(1) LE 0).ZG312G  PARM          01099000
&ZMS                  SETC  '"LOCKOPER'                                 01099100
&ZMS                  SETC  '&ZMS.=&LOCKOPER"'                          01099200
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01099300
&ZMS                  SETC  '&ZMS '                                     01099400
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          01099500
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01099600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01099700
                      AGO   .ZG312G                                     01099800
.*                                                                      01099900
.ZG312F               ANOP  ,                                           01100000
                      AIF   (K'&LOCKOPER(1) GT 0).ZG312G  PARM          01100100
&ZXLOCKOPER           SETC  ''          RESET IN/OUTPUT                 01100200
&XLOCKOPER            SETC  ''          ENSURE NULL KEYWORD             01100300
&ZMS                  SETC  'WHEN "LOCKINDEX" IS SPECIFIED, THE'        01100400
&ZMS                  SETC  '&ZMS "LOCKOPER" KEY AND ITS'               01100500
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01100600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01100700
&ZMS                  SETC  '&ZMS "SET",'                               01100800
&ZMS                  SETC  '&ZMS "RESET",'                             01100900
&ZMS                  SETC  '&ZMS "NOTHELD",'                           01101000
&ZMS                  SETC  '&ZMS "HELDBY",'                            01101100
&ZMS                  SETC  '&ZMS "TEST",'                              01101200
&ZMS                  SETC  '&ZMS OR "READNEXT".'                       01101300
                      MNOTE 8,' &ZMS '                                  01101400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01101500
.ZG312G               ANOP  ,                                           01101600
.*----------------------------------------------------------------***   01101700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01101800
                      AIF   (N'&LOCKCOMP LE 1).ZG314A  CK NUM           01101900
&ZMS                  SETC  '"LOCKCOMP='                                01102000
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           01102100
&ZMS                  SETC  '&ZMS "LOCKCOMP"'                           01102200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01102300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01102400
.ZG314A               ANOP  ,                                           01102500
.*-------------------------------------------------------------------   01102600
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         01102700
&XLOCKCOMP            SETC  'NO_LOCKCOMP'       SET DEFAULT             01102800
                      AIF   (K'&LOCKCOMP(1) LE 0).ZG314C  PARM          01102900
&XLOCKCOMP            SETC  '&LOCKCOMP(1)'      SET XVARIABLE           01103000
                      AIF   (N'&LOCKCOMP GT 1).ZG314B  MULTI            01103100
&XLOCKCOMP            SETC  '&LOCKCOMP'         SET XVARIABLE           01103200
.ZG314B               AIF   (K'&LOCKINDEX(1) GT 0).ZG314C  KEY          01103300
&ZMS                  SETC  '"LOCKCOMP'                                 01103400
&ZMS                  SETC  '&ZMS.=&LOCKCOMP"'                          01103500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01103600
&ZMS                  SETC  '&ZMS '                                     01103700
&ZMS                  SETC  '&ZMS "LOCKINDEX"'                          01103800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01103900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01104000
.ZG314C               ANOP  ,                                           01104100
&ZXLOCKCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01104200
.*-------------------------------------------------------------------   01104300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01104400
                      AIF   (K'&ZXLOCKCOMP LE 0).ZG314R  NOT I/O        01104500
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP').ZG314R                   01104600
                      AIF   ('&XLOCKCOMP'(1,1) NE '(').ZG314R           01104700
&ZCGPR                SETC  '&XLOCKCOMP'(2,K'&XLOCKCOMP-2)              01104800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG314P               01104900
                      AIF   (K'&ZCGPR GT 2).ZG314Q                      01105000
                      AIF   ('&ZCGPR' EQ '0').ZG314Q                    01105100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01105200
                      AIF   (T'&ZCGPR NE 'N').ZG314Q  INVALID REG NAME  01105300
.ZG314P               ANOP  ,                                           01105400
                      AIF   (T'&ZCGPR NE 'N').ZG314R  NON NUMERIC       01105500
                      AIF   ('&ZCGPR' LT '2').ZG314Q                    01105600
                      AIF   ('&ZCGPR' LE '12').ZG314R                   01105700
.ZG314Q               ANOP  ,                                           01105800
&ZMS                  SETC  '"LOCKCOMP='                                01105900
&ZMS                  SETC  '&ZMS.&LOCKCOMP"'                           01106000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01106100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01106200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01106300
.ZG314R               ANOP  ,                                           01106400
.*------------------------------------------------------------------    01106500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01106600
&XMODE                SETC  ''          INITIALIZE XVARIABLE            01106700
.*-------------------------------------------------------------------   01106800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01106900
.ZG319                ANOP  ,                                           01107000
                      AIF   (K'&MODE(1) LE 0).ZG319A                    01107100
&ZTLC                 SETC 'SYNCSUSPEND'                                01107200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG320               01107300
&XMODE                SETC  'SYNCSUSPEND'       SET KEYWORD             01107400
                      AIF   (N'&MODE LE 1).ZG319A  CK NUM               01107500
&ZMS                  SETC  '"MODE='                                    01107600
&ZMS                  SETC  '&ZMS.&MODE"'                               01107700
&ZMS                  SETC  '&ZMS "MODE"'                               01107800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01107900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01108000
.ZG319A               ANOP  ,                                           01108100
.*------------------------------------------------------------------    01108200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01108300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01108400
.ZG319A0              AIF   (K'&REQECB LE 0).ZG319A1  OK                01108500
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01108600
.ZG319A1              AIF   (K'&REQDATA LE 0).ZG319A2  OK               01108700
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01108800
.ZG319A2              AIF   (K'&REQTOKEN LE 0).ZG319A3  OK              01108900
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01109000
.ZG319A3              AIF   (K'&ZCVAL LE 0).ZG319A4  OK                 01109100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01109200
&ZMS                  SETC  '"MODE'                                     01109300
&ZMS                  SETC  '&ZMS.=&MODE"'                              01109400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01109500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01109600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01109700
.ZG319A4              ANOP  ,                                           01109800
.*-------------------------------------------------------------------   01109900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01110000
.ZG320                ANOP  ,                                           01110100
&ZTLC                 SETC 'SYNCECB'                                    01110200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG324               01110300
&XMODE                SETC  'SYNCECB'   SET KEYWORD                     01110400
                      AIF   (N'&MODE LE 1).ZG320A  CK NUM               01110500
&ZMS                  SETC  '"MODE='                                    01110600
&ZMS                  SETC  '&ZMS.&MODE"'                               01110700
&ZMS                  SETC  '&ZMS "MODE"'                               01110800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01110900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01111000
.ZG320A               ANOP  ,                                           01111100
.*------------------------------------------------------------------    01111200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01111300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01111400
.ZG320A0              AIF   (K'&REQDATA LE 0).ZG320A1  OK               01111500
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01111600
.ZG320A1              AIF   (K'&REQTOKEN LE 0).ZG320A2  OK              01111700
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01111800
.ZG320A2              AIF   (K'&ZCVAL LE 0).ZG320A3  OK                 01111900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01112000
&ZMS                  SETC  '"MODE'                                     01112100
&ZMS                  SETC  '&ZMS.=&MODE"'                              01112200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01112300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01112400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01112500
.ZG320A3              ANOP  ,                                           01112600
.*----------------------------------------------------------------***   01112700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01112800
                      AIF   (N'&REQECB LE 1).ZG322A  CK NUM             01112900
&ZMS                  SETC  '"REQECB='                                  01113000
&ZMS                  SETC  '&ZMS.&REQECB"'                             01113100
&ZMS                  SETC  '&ZMS "REQECB"'                             01113200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01113300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01113400
.ZG322A               ANOP  ,                                           01113500
.*-------------------------------------------------------------------   01113600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01113700
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   01113800
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           01113900
                      AIF   (N'&REQECB GT 1).ZG322B  MULTI              01114000
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   01114100
.ZG322B               AIF   (K'&REQECB(1) GT 0).ZG322C                  01114200
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 01114300
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'               01114400
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               01114500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01114600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01114700
.ZG322C               ANOP  ,                                           01114800
.*-------------------------------------------------------------------   01114900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01115000
                      AIF   (K'&ZXREQECB LE 0).ZG322R  NOT I/O          01115100
                      AIF   ('&XREQECB'(1,1) NE '(').ZG322R             01115200
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  01115300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG322P               01115400
                      AIF   (K'&ZCGPR GT 2).ZG322Q                      01115500
                      AIF   ('&ZCGPR' EQ '0').ZG322Q                    01115600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01115700
                      AIF   (T'&ZCGPR NE 'N').ZG322Q  INVALID REG NAME  01115800
.ZG322P               ANOP  ,                                           01115900
                      AIF   (T'&ZCGPR NE 'N').ZG322R  NON NUMERIC       01116000
                      AIF   ('&ZCGPR' LT '2').ZG322Q                    01116100
                      AIF   ('&ZCGPR' LE '12').ZG322R                   01116200
.ZG322Q               ANOP  ,                                           01116300
&ZMS                  SETC  '"REQECB='                                  01116400
&ZMS                  SETC  '&ZMS.&REQECB"'                             01116500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01116600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01116700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01116800
.ZG322R               ANOP  ,                                           01116900
.*-------------------------------------------------------------------   01117000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01117100
.ZG324                ANOP  ,                                           01117200
&ZTLC                 SETC 'SYNCEXIT'                                   01117300
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG328               01117400
&XMODE                SETC  'SYNCEXIT'  SET KEYWORD                     01117500
                      AIF   (N'&MODE LE 1).ZG324A  CK NUM               01117600
&ZMS                  SETC  '"MODE='                                    01117700
&ZMS                  SETC  '&ZMS.&MODE"'                               01117800
&ZMS                  SETC  '&ZMS "MODE"'                               01117900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01118000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01118100
.ZG324A               ANOP  ,                                           01118200
.*------------------------------------------------------------------    01118300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01118400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01118500
.ZG324A0              AIF   (K'&REQECB LE 0).ZG324A1  OK                01118600
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01118700
.ZG324A1              AIF   (K'&REQTOKEN LE 0).ZG324A2  OK              01118800
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01118900
.ZG324A2              AIF   (K'&ZCVAL LE 0).ZG324A3  OK                 01119000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01119100
&ZMS                  SETC  '"MODE'                                     01119200
&ZMS                  SETC  '&ZMS.=&MODE"'                              01119300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01119400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01119500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01119600
.ZG324A3              ANOP  ,                                           01119700
.*----------------------------------------------------------------***   01119800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01119900
                      AIF   (N'&REQDATA LE 1).ZG326A  CK NUM            01120000
&ZMS                  SETC  '"REQDATA='                                 01120100
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01120200
&ZMS                  SETC  '&ZMS "REQDATA"'                            01120300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01120400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01120500
.ZG326A               ANOP  ,                                           01120600
.*-------------------------------------------------------------------   01120700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01120800
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   01120900
&XREQDATA             SETC  'NO_REQDATA'                                01121000
                      AIF   (K'&REQDATA(1) LE 0).ZG326B  PARM           01121100
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           01121200
                      AIF   (N'&REQDATA GT 1).ZG326B  MULTI             01121300
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   01121400
.ZG326B               ANOP  ,                                           01121500
.*-------------------------------------------------------------------   01121600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01121700
                      AIF   (K'&ZXREQDATA LE 0).ZG326R  NOT I/O         01121800
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG326R                     01121900
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG326R            01122000
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                01122100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG326P               01122200
                      AIF   (K'&ZCGPR GT 2).ZG326Q                      01122300
                      AIF   ('&ZCGPR' EQ '0').ZG326Q                    01122400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01122500
                      AIF   (T'&ZCGPR NE 'N').ZG326Q  INVALID REG NAME  01122600
.ZG326P               ANOP  ,                                           01122700
                      AIF   (T'&ZCGPR NE 'N').ZG326R  NON NUMERIC       01122800
                      AIF   ('&ZCGPR' LT '2').ZG326Q                    01122900
                      AIF   ('&ZCGPR' LE '12').ZG326R                   01123000
.ZG326Q               ANOP  ,                                           01123100
&ZMS                  SETC  '"REQDATA='                                 01123200
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01123300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01123400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01123500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01123600
.ZG326R               ANOP  ,                                           01123700
.*-------------------------------------------------------------------   01123800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01123900
.ZG328                ANOP  ,                                           01124000
&ZTLC                 SETC 'SYNCTOKEN'                                  01124100
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG332               01124200
&XMODE                SETC  'SYNCTOKEN'         SET KEYWORD             01124300
                      AIF   (N'&MODE LE 1).ZG328A  CK NUM               01124400
&ZMS                  SETC  '"MODE='                                    01124500
&ZMS                  SETC  '&ZMS.&MODE"'                               01124600
&ZMS                  SETC  '&ZMS "MODE"'                               01124700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01124800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01124900
.ZG328A               ANOP  ,                                           01125000
.*------------------------------------------------------------------    01125100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01125200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01125300
.ZG328A0              AIF   (K'&REQECB LE 0).ZG328A1  OK                01125400
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01125500
.ZG328A1              AIF   (K'&REQDATA LE 0).ZG328A2  OK               01125600
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01125700
.ZG328A2              AIF   (K'&ZCVAL LE 0).ZG328A3  OK                 01125800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01125900
&ZMS                  SETC  '"MODE'                                     01126000
&ZMS                  SETC  '&ZMS.=&MODE"'                              01126100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01126200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01126300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01126400
.ZG328A3              ANOP  ,                                           01126500
.*----------------------------------------------------------------***   01126600
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01126700
                      AIF   (N'&REQTOKEN LE 1).ZG330A  CK NUM           01126800
&ZMS                  SETC  '"REQTOKEN='                                01126900
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01127000
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           01127100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01127200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01127300
.ZG330A               ANOP  ,                                           01127400
.*-------------------------------------------------------------------   01127500
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01127600
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   01127700
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           01127800
                      AIF   (N'&REQTOKEN GT 1).ZG330B  MULTI            01127900
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           01128000
.ZG330B               AIF   (K'&REQTOKEN(1) GT 0).ZG330C                01128100
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 01128200
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'             01128300
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             01128400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01128500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01128600
.ZG330C               ANOP  ,                                           01128700
.*-------------------------------------------------------------------   01128800
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01128900
                      AIF   (K'&ZXREQTOKEN LE 0).ZG330R  NOT I/O        01129000
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG330R           01129100
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              01129200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG330P               01129300
                      AIF   (K'&ZCGPR GT 2).ZG330Q                      01129400
                      AIF   ('&ZCGPR' EQ '0').ZG330Q                    01129500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01129600
                      AIF   (T'&ZCGPR NE 'N').ZG330Q  INVALID REG NAME  01129700
.ZG330P               ANOP  ,                                           01129800
                      AIF   (T'&ZCGPR NE 'N').ZG330R  NON NUMERIC       01129900
                      AIF   ('&ZCGPR' LT '2').ZG330Q                    01130000
                      AIF   ('&ZCGPR' LE '12').ZG330R                   01130100
.ZG330Q               ANOP  ,                                           01130200
&ZMS                  SETC  '"REQTOKEN='                                01130300
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01130400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01130500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01130600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01130700
.ZG330R               ANOP  ,                                           01130800
.*-------------------------------------------------------------------   01130900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01131000
.ZG332                ANOP  ,                                           01131100
&ZTLC                 SETC 'ASYNCECB'                                   01131200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG336               01131300
&XMODE                SETC  'ASYNCECB'  SET KEYWORD                     01131400
                      AIF   (N'&MODE LE 1).ZG332A  CK NUM               01131500
&ZMS                  SETC  '"MODE='                                    01131600
&ZMS                  SETC  '&ZMS.&MODE"'                               01131700
&ZMS                  SETC  '&ZMS "MODE"'                               01131800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01131900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01132000
.ZG332A               ANOP  ,                                           01132100
.*------------------------------------------------------------------    01132200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01132300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01132400
.ZG332A0              AIF   (K'&REQDATA LE 0).ZG332A1  OK               01132500
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01132600
.ZG332A1              AIF   (K'&REQTOKEN LE 0).ZG332A2  OK              01132700
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01132800
.ZG332A2              AIF   (K'&ZCVAL LE 0).ZG332A3  OK                 01132900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01133000
&ZMS                  SETC  '"MODE'                                     01133100
&ZMS                  SETC  '&ZMS.=&MODE"'                              01133200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01133300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01133400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01133500
.ZG332A3              ANOP  ,                                           01133600
.*----------------------------------------------------------------***   01133700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01133800
                      AIF   (N'&REQECB LE 1).ZG334A  CK NUM             01133900
&ZMS                  SETC  '"REQECB='                                  01134000
&ZMS                  SETC  '&ZMS.&REQECB"'                             01134100
&ZMS                  SETC  '&ZMS "REQECB"'                             01134200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01134300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01134400
.ZG334A               ANOP  ,                                           01134500
.*-------------------------------------------------------------------   01134600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01134700
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   01134800
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           01134900
                      AIF   (N'&REQECB GT 1).ZG334B  MULTI              01135000
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   01135100
.ZG334B               AIF   (K'&REQECB(1) GT 0).ZG334C                  01135200
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 01135300
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'              01135400
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               01135500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01135600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01135700
.ZG334C               ANOP  ,                                           01135800
.*-------------------------------------------------------------------   01135900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01136000
                      AIF   (K'&ZXREQECB LE 0).ZG334R  NOT I/O          01136100
                      AIF   ('&XREQECB'(1,1) NE '(').ZG334R             01136200
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  01136300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG334P               01136400
                      AIF   (K'&ZCGPR GT 2).ZG334Q                      01136500
                      AIF   ('&ZCGPR' EQ '0').ZG334Q                    01136600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01136700
                      AIF   (T'&ZCGPR NE 'N').ZG334Q  INVALID REG NAME  01136800
.ZG334P               ANOP  ,                                           01136900
                      AIF   (T'&ZCGPR NE 'N').ZG334R  NON NUMERIC       01137000
                      AIF   ('&ZCGPR' LT '2').ZG334Q                    01137100
                      AIF   ('&ZCGPR' LE '12').ZG334R                   01137200
.ZG334Q               ANOP  ,                                           01137300
&ZMS                  SETC  '"REQECB='                                  01137400
&ZMS                  SETC  '&ZMS.&REQECB"'                             01137500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01137600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01137700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01137800
.ZG334R               ANOP  ,                                           01137900
.*-------------------------------------------------------------------   01138000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01138100
.ZG336                ANOP  ,                                           01138200
&ZTLC                 SETC 'ASYNCEXIT'                                  01138300
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG340               01138400
&XMODE                SETC  'ASYNCEXIT'         SET KEYWORD             01138500
                      AIF   (N'&MODE LE 1).ZG336A  CK NUM               01138600
&ZMS                  SETC  '"MODE='                                    01138700
&ZMS                  SETC  '&ZMS.&MODE"'                               01138800
&ZMS                  SETC  '&ZMS "MODE"'                               01138900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01139000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01139100
.ZG336A               ANOP  ,                                           01139200
.*------------------------------------------------------------------    01139300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01139400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01139500
.ZG336A0              AIF   (K'&REQECB LE 0).ZG336A1  OK                01139600
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01139700
.ZG336A1              AIF   (K'&REQTOKEN LE 0).ZG336A2  OK              01139800
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01139900
.ZG336A2              AIF   (K'&ZCVAL LE 0).ZG336A3  OK                 01140000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01140100
&ZMS                  SETC  '"MODE'                                     01140200
&ZMS                  SETC  '&ZMS.=&MODE"'                              01140300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01140400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01140500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01140600
.ZG336A3              ANOP  ,                                           01140700
.*----------------------------------------------------------------***   01140800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01140900
                      AIF   (N'&REQDATA LE 1).ZG338A  CK NUM            01141000
&ZMS                  SETC  '"REQDATA='                                 01141100
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01141200
&ZMS                  SETC  '&ZMS "REQDATA"'                            01141300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01141400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01141500
.ZG338A               ANOP  ,                                           01141600
.*-------------------------------------------------------------------   01141700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01141800
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   01141900
&XREQDATA             SETC  'NO_REQDATA'                                01142000
                      AIF   (K'&REQDATA(1) LE 0).ZG338B  PARM           01142100
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           01142200
                      AIF   (N'&REQDATA GT 1).ZG338B  MULTI             01142300
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   01142400
.ZG338B               ANOP  ,                                           01142500
.*-------------------------------------------------------------------   01142600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01142700
                      AIF   (K'&ZXREQDATA LE 0).ZG338R  NOT I/O         01142800
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG338R                     01142900
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG338R            01143000
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                01143100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG338P               01143200
                      AIF   (K'&ZCGPR GT 2).ZG338Q                      01143300
                      AIF   ('&ZCGPR' EQ '0').ZG338Q                    01143400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01143500
                      AIF   (T'&ZCGPR NE 'N').ZG338Q  INVALID REG NAME  01143600
.ZG338P               ANOP  ,                                           01143700
                      AIF   (T'&ZCGPR NE 'N').ZG338R  NON NUMERIC       01143800
                      AIF   ('&ZCGPR' LT '2').ZG338Q                    01143900
                      AIF   ('&ZCGPR' LE '12').ZG338R                   01144000
.ZG338Q               ANOP  ,                                           01144100
&ZMS                  SETC  '"REQDATA='                                 01144200
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01144300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01144400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01144500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01144600
.ZG338R               ANOP  ,                                           01144700
.*-------------------------------------------------------------------   01144800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01144900
.ZG340                ANOP  ,                                           01145000
&ZTLC                 SETC 'ASYNCTOKEN'                                 01145100
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG344               01145200
&XMODE                SETC  'ASYNCTOKEN'        SET KEYWORD             01145300
                      AIF   (N'&MODE LE 1).ZG340A  CK NUM               01145400
&ZMS                  SETC  '"MODE='                                    01145500
&ZMS                  SETC  '&ZMS.&MODE"'                               01145600
&ZMS                  SETC  '&ZMS "MODE"'                               01145700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01145800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01145900
.ZG340A               ANOP  ,                                           01146000
.*------------------------------------------------------------------    01146100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01146200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01146300
.ZG340A0              AIF   (K'&REQECB LE 0).ZG340A1  OK                01146400
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01146500
.ZG340A1              AIF   (K'&REQDATA LE 0).ZG340A2  OK               01146600
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01146700
.ZG340A2              AIF   (K'&ZCVAL LE 0).ZG340A3  OK                 01146800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01146900
&ZMS                  SETC  '"MODE'                                     01147000
&ZMS                  SETC  '&ZMS.=&MODE"'                              01147100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01147200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01147300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01147400
.ZG340A3              ANOP  ,                                           01147500
.*----------------------------------------------------------------***   01147600
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01147700
                      AIF   (N'&REQTOKEN LE 1).ZG342A  CK NUM           01147800
&ZMS                  SETC  '"REQTOKEN='                                01147900
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01148000
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           01148100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01148200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01148300
.ZG342A               ANOP  ,                                           01148400
.*-------------------------------------------------------------------   01148500
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01148600
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   01148700
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           01148800
                      AIF   (N'&REQTOKEN GT 1).ZG342B  MULTI            01148900
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           01149000
.ZG342B               AIF   (K'&REQTOKEN(1) GT 0).ZG342C                01149100
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 01149200
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'            01149300
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             01149400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01149500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01149600
.ZG342C               ANOP  ,                                           01149700
.*-------------------------------------------------------------------   01149800
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01149900
                      AIF   (K'&ZXREQTOKEN LE 0).ZG342R  NOT I/O        01150000
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG342R           01150100
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              01150200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG342P               01150300
                      AIF   (K'&ZCGPR GT 2).ZG342Q                      01150400
                      AIF   ('&ZCGPR' EQ '0').ZG342Q                    01150500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01150600
                      AIF   (T'&ZCGPR NE 'N').ZG342Q  INVALID REG NAME  01150700
.ZG342P               ANOP  ,                                           01150800
                      AIF   (T'&ZCGPR NE 'N').ZG342R  NON NUMERIC       01150900
                      AIF   ('&ZCGPR' LT '2').ZG342Q                    01151000
                      AIF   ('&ZCGPR' LE '12').ZG342R                   01151100
.ZG342Q               ANOP  ,                                           01151200
&ZMS                  SETC  '"REQTOKEN='                                01151300
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01151400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01151500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01151600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01151700
.ZG342R               ANOP  ,                                           01151800
.*-------------------------------------------------------------------   01151900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01152000
.ZG344                ANOP  ,                                           01152100
&ZTLC                 SETC 'ASYNCNORESPONSE'                            01152200
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG345               01152300
&XMODE                SETC  'ASYNCNORESPONSE'   SET KEYWORD             01152400
                      AIF   (N'&MODE LE 1).ZG344A  CK NUM               01152500
&ZMS                  SETC  '"MODE='                                    01152600
&ZMS                  SETC  '&ZMS.&MODE"'                               01152700
&ZMS                  SETC  '&ZMS "MODE"'                               01152800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01152900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01153000
.ZG344A               ANOP  ,                                           01153100
.*------------------------------------------------------------------    01153200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01153300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01153400
.ZG344A0              AIF   (K'&REQECB LE 0).ZG344A1  OK                01153500
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01153600
.ZG344A1              AIF   (K'&REQDATA LE 0).ZG344A2  OK               01153700
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01153800
.ZG344A2              AIF   (K'&REQTOKEN LE 0).ZG344A3  OK              01153900
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01154000
.ZG344A3              AIF   (K'&ZCVAL LE 0).ZG344A4  OK                 01154100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01154200
&ZMS                  SETC  '"MODE'                                     01154300
&ZMS                  SETC  '&ZMS.=&MODE"'                              01154400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01154500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01154600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01154700
.ZG344A4              ANOP  ,                                           01154800
.*------------------------------------------------------------------    01154900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01155000
.ZG345                ANOP  ,                                           01155100
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   01155200
                      AIF   (K'&XMODE GT 0).ZG345E  VALID ARG           01155300
                      AIF   (T'&MODE EQ 'O').ZG345D  OMITTED            01155400
&ZASYSLNDX            SETA  0                                           01155500
.ZG345A               ANOP  ,           POSITIONAL MACRO KEY            01155600
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01155700
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG345C           01155800
&ZTLC                 SETC 'MODE'                                       01155900
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG345A  01156000
.ZG345B               ANOP  ,                                           01156100
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 01156200
&ZMS                  SETC  'THE "MODE" KEY'                            01156300
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01156400
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01156500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01156600
                      AGO   .ZG345E                                     01156700
.ZG345C               ANOP  ,                                           01156800
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 01156900
&ZMS                  SETC  '"MODE='                                    01157000
&ZMS                  SETC  '&ZMS.&MODE"'                               01157100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01157200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01157300
&ZMS                  SETC  '&ZMS "SYNCSUSPEND",'                       01157400
&ZMS                  SETC  '&ZMS "SYNCECB",'                           01157500
&ZMS                  SETC  '&ZMS "SYNCEXIT",'                          01157600
&ZMS                  SETC  '&ZMS "SYNCTOKEN",'                         01157700
&ZMS                  SETC  '&ZMS "ASYNCECB",'                          01157800
&ZMS                  SETC  '&ZMS "ASYNCEXIT",'                         01157900
&ZMS                  SETC  '&ZMS "ASYNCTOKEN",'                        01158000
&ZMS                  SETC  '&ZMS OR "ASYNCNORESPONSE".'                01158100
                      MNOTE 8,' &ZMS '                                  01158200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01158300
                      AGO   .ZG345E                                     01158400
.ZG345D               ANOP  ,                                           01158500
&XMODE                SETC  'SYNCSUSPEND'       SET DEFAULT KEYWORD     01158600
.ZG345E               ANOP  ,                                           01158700
.*----------------------------------------------------------------***   01158800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01158900
                      AIF   (N'&ANSAREA LE 1).ZG347A  CK NUM            01159000
&ZMS                  SETC  '"ANSAREA='                                 01159100
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01159200
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01159300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01159400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01159500
.ZG347A               ANOP  ,                                           01159600
.*-------------------------------------------------------------------   01159700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01159800
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01159900
&XANSAREA             SETC  'NO_ANSAREA'                                01160000
                      AIF   (K'&ANSAREA(1) LE 0).ZG347B  PARM           01160100
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01160200
                      AIF   (N'&ANSAREA GT 1).ZG347B  MULTI             01160300
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01160400
.ZG347B               ANOP  ,                                           01160500
.*-------------------------------------------------------------------   01160600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01160700
                      AIF   (K'&ZXANSAREA LE 0).ZG347R  NOT I/O         01160800
         AIF   ('&XANSAREA' EQ 'NO_ANSAREA').ZG347R                     01160900
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG347R            01161000
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01161100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG347P               01161200
                      AIF   (K'&ZCGPR GT 2).ZG347Q                      01161300
                      AIF   ('&ZCGPR' EQ '0').ZG347Q                    01161400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01161500
                      AIF   (T'&ZCGPR NE 'N').ZG347Q  INVALID REG NAME  01161600
.ZG347P               ANOP  ,                                           01161700
                      AIF   (T'&ZCGPR NE 'N').ZG347R  NON NUMERIC       01161800
                      AIF   ('&ZCGPR' LT '2').ZG347Q                    01161900
                      AIF   ('&ZCGPR' LE '12').ZG347R                   01162000
.ZG347Q               ANOP  ,                                           01162100
&ZMS                  SETC  '"ANSAREA='                                 01162200
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01162300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01162400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01162500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01162600
.ZG347R               ANOP  ,                                           01162700
.*----------------------------------------------------------------***   01162800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01162900
                      AIF   (N'&ANSLEN LE 1).ZG349A  CK NUM             01163000
&ZMS                  SETC  '"ANSLEN='                                  01163100
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01163200
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01163300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01163400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01163500
.ZG349A               ANOP  ,                                           01163600
.*-------------------------------------------------------------------   01163700
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01163800
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01163900
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01164000
                      AIF   (N'&ANSLEN GT 1).ZG349B  MULTI              01164100
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01164200
.ZG349B               AIF   (K'&ANSAREA(1) GT 0).ZG349C  KEY            01164300
                      AIF   (K'&ANSLEN(1) LE 0).ZG349D  PARM            01164400
&ZMS                  SETC  '"ANSLEN'                                   01164500
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01164600
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01164700
&ZMS                  SETC  '&ZMS '                                     01164800
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01164900
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01165000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01165100
                      AGO   .ZG349E                                     01165200
.*                                                                      01165300
.ZG349C               AIF   (K'&ANSLEN(1) GT 0).ZG349E  PARM            01165400
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01165500
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01165600
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01165700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01165800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01165900
.ZG349D               ANOP  ,                                           01166000
&XANSLEN              SETC  'NO_ANSLEN'         SET DEFAULT             01166100
.ZG349E               ANOP  ,                                           01166200
.*-------------------------------------------------------------------   01166300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01166400
                      AIF   (K'&ZXANSLEN LE 0).ZG349R  NOT I/O          01166500
         AIF   ('&XANSLEN' EQ 'NO_ANSLEN').ZG349R                       01166600
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG349R             01166700
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01166800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG349P               01166900
                      AIF   (K'&ZCGPR GT 2).ZG349Q                      01167000
                      AIF   ('&ZCGPR' EQ '0').ZG349Q                    01167100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01167200
                      AIF   (T'&ZCGPR NE 'N').ZG349Q  INVALID REG NAME  01167300
.ZG349P               ANOP  ,                                           01167400
                      AIF   (T'&ZCGPR NE 'N').ZG349R  NON NUMERIC       01167500
                      AIF   ('&ZCGPR' LT '2').ZG349Q                    01167600
                      AIF   ('&ZCGPR' LE '12').ZG349R                   01167700
.ZG349Q               ANOP  ,                                           01167800
&ZMS                  SETC  '"ANSLEN='                                  01167900
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01168000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01168100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01168200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01168300
.ZG349R               ANOP  ,                                           01168400
.*----------------------------------------------------------------***   01168500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01168600
                      AIF   (N'&RETCODE LE 1).ZG353A  CK NUM            01168700
&ZMS                  SETC  '"RETCODE='                                 01168800
&ZMS                  SETC  '&ZMS.&RETCODE"'                            01168900
&ZMS                  SETC  '&ZMS "RETCODE"'                            01169000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01169100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01169200
.ZG353A               ANOP  ,                                           01169300
.*-------------------------------------------------------------------   01169400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01169500
                      AIF   (K'&RETCODE(1) LE 0).ZG353C  NO PARM        01169600
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      01169700
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           01169800
                      AIF   (N'&RETCODE GT 1).ZG353C                    01169900
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   01170000
.ZG353C               ANOP  ,                                           01170100
.*-------------------------------------------------------------------   01170200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01170300
                      AIF   (K'&ZXRETCODE LE 0).ZG353R  NOT I/O         01170400
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG353R            01170500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01170600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG353P               01170700
                      AIF   (K'&ZCGPR GT 2).ZG353Q                      01170800
                      AIF   ('&ZCGPR' EQ '0').ZG353Q                    01170900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01171000
                      AIF   (T'&ZCGPR NE 'N').ZG353Q  INVALID REG NAME  01171100
.ZG353P               ANOP  ,                                           01171200
                      AIF   (T'&ZCGPR NE 'N').ZG353R  NON NUMERIC       01171300
                      AIF   ('&ZCGPR' EQ '15').ZG353R                   01171400
                      AIF   ('&ZCGPR' LT '2').ZG353Q                    01171500
                      AIF   ('&ZCGPR' LE '12').ZG353R                   01171600
.ZG353Q               ANOP  ,                                           01171700
&ZMS                  SETC  '"RETCODE='                                 01171800
&ZMS                  SETC  '&ZMS.&RETCODE"'                            01171900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01172000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'    01172100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01172200
.ZG353R               ANOP  ,                                           01172300
.*----------------------------------------------------------------***   01172400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01172500
                      AIF   (N'&RSNCODE LE 1).ZG356A  CK NUM            01172600
&ZMS                  SETC  '"RSNCODE='                                 01172700
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            01172800
&ZMS                  SETC  '&ZMS "RSNCODE"'                            01172900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01173000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01173100
.ZG356A               ANOP  ,                                           01173200
.*-------------------------------------------------------------------   01173300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01173400
                      AIF   (K'&RSNCODE(1) LE 0).ZG356C  NO PARM        01173500
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      01173600
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           01173700
                      AIF   (N'&RSNCODE GT 1).ZG356C                    01173800
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   01173900
.ZG356C               ANOP  ,                                           01174000
.*-------------------------------------------------------------------   01174100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01174200
                      AIF   (K'&ZXRSNCODE LE 0).ZG356R  NOT I/O         01174300
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG356R            01174400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01174500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG356P               01174600
                      AIF   (K'&ZCGPR GT 2).ZG356Q                      01174700
                      AIF   ('&ZCGPR' EQ '0').ZG356R                    01174800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01174900
                      AIF   (T'&ZCGPR NE 'N').ZG356Q  INVALID REG NAME  01175000
.ZG356P               ANOP  ,                                           01175100
                      AIF   (T'&ZCGPR NE 'N').ZG356R  NON NUMERIC       01175200
                      AIF   ('&ZCGPR' EQ '0').ZG356R                    01175300
                      AIF   ('&ZCGPR' LT '2').ZG356Q                    01175400
                      AIF   ('&ZCGPR' LE '12').ZG356R                   01175500
.ZG356Q               ANOP  ,                                           01175600
&ZMS                  SETC  '"RSNCODE='                                 01175700
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            01175800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01175900
                      MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'     01176000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01176100
.ZG356R               ANOP  ,                                           01176200
.******************************************************************     01176300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        01176400
.******************************************************************     01176500
                      ACTR  10000                                       01176600
.*-------------------------------------------------------------------   01176700
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           01176800
&ZCVAL                SETC  ''          ERROR FIELD                     01176900
&ZAWRK                SETA  0           POSITIONAL COUNTER              01177000
&ZASYSLNDX            SETA  0           NON-X KEY COUNTER               01177100
.ZGLIST2              ANOP  ,                                           01177200
&ZASYSLNDX            SETA  &ZASYSLNDX+1        NEXT NON-X KEY          01177300
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 01177400
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          01177500
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 01177600
                      AIF   (&ZAWRK LE 0).ZGLIST2                       01177700
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA         01177800
                      AGO   .ZGLIST2                                    01177900
.*                                                                      01178000
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  01178100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          01178200
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'                   01178300
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             01178400
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      01178500
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              01178600
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      01178700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01178800
.ZGLISTX              ANOP  ,                                           01178900
&ZASYSLNDX            SETA  0                                           01179000
.*-------------------------------------------------------------------   01179100
.***AG.MF04 MF=(SLE)                                                    01179200
.ZGMFX                ANOP  ,           END OF FULL SYNTAX CHECK        01179300
.*******************************************************************    01179400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       01179500
.*******************************************************************    01179600
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        01179700
.*******************************************************************    01179800
.***AE.01  START OF IXLLIST MACRO CODE                                  01179900
.*******************************************************************    01180000
                      LCLC  &M0M0001                 NAME               01180100
&M0M0001              SETC  '&XLABEL'                SET NAME           01180200
                      AIF   (K'&XLABEL NE 0).XLAB2                      01180300
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       01180400
.*                                                                      01180500
.XLAB2                ANOP  ,                                           01180600
                      AIF   ('&XMF' EQ 'L').XLAB3                       01180700
&M0M0001 DS    0H                             IXLLIST-3                 01180800
.XLAB3                ANOP  ,                                           01180900
.*******************************************************************    01181000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              01181100
.*******************************************************************    01181200
              PUSH  PRINT                                               01181300
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  01181400
                      PRINT OFF         ++ PR01                         01181500
                      AGO   .ZPRNTXX                                    01181600
.ZPRINTX              PRINT ON                                          01181700
.ZPRNTXX              ANOP  ,                                           01181800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01181900
.**------------------------------------------------------------------** 01182000
.**  Start of user macasm code                                       ** 01182100
.**------------------------------------------------------------------** 01182200
.*                                                                      01182300
.**------------------------------------------------------------------** 01182400
.**  Start of code to remove "*" defaults                        @P4A** 01182500
.**                                                                  ** 01182600
.**  This code removes "NO_keyname" values.  Keywords with these     ** 01182700
.**  default values should be treated as if they were not specified. ** 01182800
.**  Removing the values makes it look as if they were not specified ** 01182900
.**  and avoids failure of mutual exclusivity checks.                ** 01183000
.**                                                                  ** 01183100
.**  Some other default values also need to be removed.  These       ** 01183200
.**  values are removed to make the invocation look consistent       ** 01183300
.**  to the checking code.                                           ** 01183400
.**                                                                  ** 01183500
.**------------------------------------------------------------------** 01183600
.*                                                                      01183700
         AIF   ('&XADJAREA'   NE 'NO_ADJAREA').DELDEFADJAREA       @P4A 01183800
&ZXADJAREA     SETC ''                                             @P4A 01183900
.DELDEFADJAREA ANOP ,                                              @P4A 01184000
.*                                                                      01184100
         AIF   ('&XANSAREA'   NE 'NO_ANSAREA').DELDEFANSAREA       @P4A 01184200
&ZXANSAREA     SETC ''                                             @P4A 01184300
.DELDEFANSAREA ANOP ,                                              @P4A 01184400
.*                                                                      01184500
         AIF   ('&XANSLEN'    NE 'NO_ANSLEN').DELDEFANSLEN         @P4A 01184600
&XANSLEN       SETC ''                                             @P4A 01184700
&ZXANSLEN      SETC ''                                             @P4A 01184800
.DELDEFANSLEN  ANOP ,                                              @P4A 01184900
.*                                                                      01185000
         AIF   ('&XAUTHCOMP'  NE 'NO_AUTHCOMP').DELDEFAUTHCOMP     @D9A 01185100
&XAUTHCOMP     SETC ''                                             @D9A 01185200
&ZXAUTHCOMP    SETC ''                                             @D9A 01185300
.DELDEFAUTHCOMP ANOP ,                                             @D9A 01185400
.*                                                                      01185500
         AIF   ('&XBUFALET'   NE 'NO_BUFALET').DELDEFBUFALET            01185600
&XBUFALET      SETC ''                                                  01185700
&ZXBUFALET     SETC ''                                                  01185800
.DELDEFBUFALET ANOP ,                                                   01185900
.*                                                                      01186000
         AIF   ('&BUFFER(1)'  NE '').DELDEFBUFFER                       01186100
&XBUFFER       SETC ''                                                  01186200
&ZXBUFFER      SETC ''                                                  01186300
.DELDEFBUFFER  ANOP ,                                                   01186400
.*                                                                      01186500
         AIF   ('&XBUFINCRNUM' NE 'NO_BUFINCRNUM').DELDEFBUFINCRNUM     01186600
&XBUFINCRNUM   SETC ''                                                  01186700
&ZXBUFINCRNUM  SETC ''                                                  01186800
.DELDEFBUFINCRNUM ANOP ,                                                01186900
.*                                                                      01187000
         AIF   ('&BUFLIST(1)' NE '').DELDEFBUFLIST                      01187100
&XBUFLIST      SETC ''                                                  01187200
&ZXBUFLIST     SETC ''                                                  01187300
.DELDEFBUFLIST ANOP ,                                                   01187400
.*                                                                      01187500
         AIF   ('&XBUFNUM'    NE 'NO_BUFNUM').DELDEFBUFNUM              01187600
&XBUFNUM       SETC ''                                                  01187700
&ZXBUFNUM      SETC ''                                                  01187800
.DELDEFBUFNUM  ANOP ,                                                   01187900
.*                                                                      01188000
         AIF   ('&XBUFSIZE'   NE 'NO_BUFSIZE').DELDEFBUFSIZE            01188100
&XBUFSIZE      SETC ''                                                  01188200
&ZXBUFSIZE     SETC ''                                                  01188300
.DELDEFBUFSIZE ANOP ,                                                   01188400
.*                                                                      01188500
         AIF   ('&XBUFSTGKEY' NE 'CALLERS_KEY').DELDEFBUFSTGKEY         01188600
&ZXBUFSTGKEY   SETC ''                                                  01188700
.DELDEFBUFSTGKEY ANOP ,                                                 01188800
.*                                                                      01188900
         AIF   ('&XELEMNUM'   NE 'NO_ELEMNUM').DELDEFELEMNUM            01189000
&XELEMNUM      SETC ''                                                  01189100
&ZXELEMNUM     SETC ''                                                  01189200
.DELDEFELEMNUM ANOP ,                                                   01189300
.*                                                                      01189400
         AIF   ('&XENTRYID'   NE 'NO_ENTRYID').DELDEFENTRYID       @P4A 01189500
&XENTRYID      SETC ''                                             @P4A 01189600
&ZXENTRYID     SETC ''                                             @P4A 01189700
.DELDEFENTRYID ANOP ,                                              @P4A 01189800
.*                                                                      01189900
         AIF   ('&XENTRYKEY'  NE 'NO_ENTRYKEY').DELDEFENTRYKEY     @P4A 01190000
&XENTRYKEY     SETC ''                                             @P4A 01190100
&ZXENTRYKEY    SETC ''                                             @P4A 01190200
.DELDEFENTRYKEY ANOP ,                                             @P4A 01190300
.*                                                                      01190400
         AIF   ('&XENTRYNAME' NE 'NO_ENTRYNAME').DELDEFENTRYNAME   @P4A 01190500
&XENTRYNAME    SETC ''                                             @P4A 01190600
&ZXENTRYNAME   SETC ''                                             @P4A 01190700
.DELDEFENTRYNAME ANOP ,                                            @P4A 01190800
.*                                                                      01190900
         AIF   ('&XKEYCOMP'   NE 'NO_KEYCOMP').DELDEFKEYCOMP       @D9A 01191000
&XKEYCOMP      SETC ''                                             @D9A 01191100
&ZXKEYCOMP     SETC ''                                             @D9A 01191200
.DELDEFKEYCOMP ANOP ,                                              @D9A 01191300
.*                                                                      01191400
         AIF   ('&XLISTDESC'  NE 'NO_LISTDESC').DELDEFLISTDESC     @D9A 01191500
&XLISTDESC     SETC ''                                             @D9A 01191600
&ZXLISTDESC    SETC ''                                             @D9A 01191700
.DELDEFLISTDESC ANOP ,                                             @D9A 01191800
.*                                                                      01191900
         AIF   ('&XLISTKEY'   NE 'NO_LISTKEY').DELDEFLISTKEY       @D9A 01192000
&XLISTKEY      SETC ''                                             @D9A 01192100
&ZXLISTKEY     SETC ''                                             @D9A 01192200
.DELDEFLISTKEY ANOP ,                                              @D9A 01192300
.*                                                                      01192400
         AIF  ('&XLISTKEYINC' NE 'NO_LISTKEYINC').DELDEFLISTKEYINC @D9A 01192500
&XLISTKEYINC   SETC ''                                             @D9A 01192600
&ZXLISTKEYINC  SETC ''                                             @D9A 01192700
.DELDEFLISTKEYINC ANOP ,                                           @D9A 01192800
.*                                                                      01192900
         AIF   ('&XLISTLIMIT' NE 'NO_LISTLIMIT').DELDEFLISTLIMIT   @D9A 01193000
&XLISTLIMIT    SETC ''                                             @D9A 01193100
&ZXLISTLIMIT   SETC ''                                             @D9A 01193200
.DELDEFLISTLIMIT ANOP ,                                            @D9A 01193300
.*                                                                      01193400
         AIF   ('&XLISTNUM'   NE 'NO_LISTNUM').DELDEFLISTNUM       @P4A 01193500
&XLISTNUM      SETC ''                                             @P4A 01193600
&ZXLISTNUM     SETC ''                                             @P4A 01193700
.DELDEFLISTNUM ANOP ,                                              @P4A 01193800
.*                                                                      01193900
         AIF   ('&XLOCKCOMP'  NE 'NO_LOCKCOMP').DELDEFLOCKCOMP     @P4A 01194000
&ZXLOCKCOMP    SETC ''                                             @P4A 01194100
.DELDEFLOCKCOMP ANOP ,                                             @P4A 01194200
.*                                                                      01194300
         AIF   ('&XLOCKINDEX' NE 'NO_LOCKINDEX').DELDEFLOCKINDEX   @P4A 01194400
&XLOCKINDEX    SETC ''                                             @P4A 01194500
&ZXLOCKINDEX   SETC ''                                             @P4A 01194600
.DELDEFLOCKINDEX ANOP ,                                            @P4A 01194700
.*                                                                      01194800
         AIF  ('&XMAXLISTKEY' NE 'NO_MAXLISTKEY').DELDEFMAXLISTKEY @D9A 01194900
&XMAXLISTKEY   SETC ''                                             @D9A 01195000
&ZXMAXLISTKEY  SETC ''                                             @D9A 01195100
.DELDEFMAXLISTKEY ANOP ,                                           @D9A 01195200
.*                                                                      01195300
         AIF   ('&XMOVETOKEY' NE 'NO_MOVETOKEY').DELDEFMOVETOKEY   @P4A 01195400
&XMOVETOKEY    SETC ''                                             @P4A 01195500
&ZXMOVETOKEY   SETC ''                                             @P4A 01195600
.DELDEFMOVETOKEY ANOP ,                                            @P4A 01195700
.*                                                                      01195800
         AIF   ('&XNEWAUTH'   NE 'NO_NEWAUTH').DELDEFNEWAUTH       @D9A 01195900
&XNEWAUTH      SETC ''                                             @D9A 01196000
&ZXNEWAUTH     SETC ''                                             @D9A 01196100
.DELDEFNEWAUTH ANOP ,                                              @D9A 01196200
.*                                                                      01196300
         AIF   ('&XNEWVERS'   NE 'NO_NEWVERS').DELDEFNEWVERS       @P4A 01196400
&XNEWVERS      SETC ''                                             @P4A 01196500
&ZXNEWVERS     SETC ''                                             @P4A 01196600
.DELDEFNEWVERS ANOP ,                                              @P4A 01196700
.*                                                                      01196800
         AIF   ('&XREQDATA'   NE 'NO_REQDATA').DELDEFREQDATA            01196900
&XREQDATA      SETC ''                                                  01197000
&ZXREQDATA     SETC ''                                                  01197100
.DELDEFREQDATA ANOP ,                                                   01197200
.*                                                                      01197300
         AIF   ('&XREQID'   NE 'NO_REQID').DELDEFREQID             @D3A 01197400
&XREQID        SETC ''                                             @D3A 01197500
&ZXREQID       SETC ''                                             @D3A 01197600
.DELDEFREQID   ANOP ,                                              @D3A 01197700
.*                                                                      01197800
         AIF   ('&XRESTOKEN'  NE 'NO_RESTOKEN').DELDEFRESTOKEN          01197900
&XRESTOKEN     SETC ''                                                  01198000
&ZXRESTOKEN    SETC ''                                                  01198100
.DELDEFRESTOKEN ANOP ,                                                  01198200
.*                                                                      01198300
         AIF   ('&XEXTRESTOKEN'  NE 'NO_EXTRESTOKEN').DELDEFEXTRESTOKEN 01198400
.*                                                                 @PMC 01198500
&XEXTRESTOKEN     SETC ''                                          @L1A 01198600
&ZXEXTRESTOKEN    SETC ''                                          @L1A 01198700
.DELDEFEXTRESTOKEN ANOP ,                                               01198800
.*                                                                      01198900
         AIF   ('&SETCURSOR(1)' NE '').DELDEFSETCURSOR             @D9A 01199000
&XSETCURSOR    SETC ''                                             @D9A 01199100
&ZXSETCURSOR   SETC ''                                             @D9A 01199200
.DELDEFSETCURSOR ANOP ,                                            @D9A 01199300
.*                                                                      01199400
         AIF   ('&XVERSCOMP'  NE 'NO_VERSCOMP').DELDEFVERSCOMP     @P4A 01199500
&XVERSCOMP     SETC ''                                             @P4A 01199600
&ZXVERSCOMP    SETC ''                                             @P4A 01199700
.DELDEFVERSCOMP ANOP ,                                             @P4A 01199800
.*                                                                      01199900
.*                                                                      01200000
.**------------------------------------------------------------------** 01200100
.**  Start of code to remove default values when the key cannot      ** 01200200
.**  be specified on the request.                                    ** 01200300
.**                                                                  ** 01200400
.**  Default values need to be removed for keys corresponding to     ** 01200500
.**  maca.xvariable.value statements when the key is not applicable  ** 01200600
.**  to the current request.                                         ** 01200700
.**                                                                  ** 01200800
.**  This code also sets up special default values where the default ** 01200900
.**  value is dependent on other keywords.                           ** 01201000
.**                                                                  ** 01201100
.**------------------------------------------------------------------** 01201200
.**------------------------------------------------------------------** 01201300
.**  Remove defaults for BufAddrType                                 ** 01201400
.**------------------------------------------------------------------** 01201500
.*                                                                      01201600
         AIF   ('&BUFADDRTYPE(1)' NE '').DEFBUFADDRTYPESPEC             01201700
.*                                                                      01201800
         AIF   ('&XBUFLIST' NE '').DEFBUFADDRTYPESKIPREMOVE             01201900
&XBUFADDRTYPE  SETC ''                                                  01202000
&ZXBUFADDRTYPE SETC ''                                                  01202100
.DEFBUFADDRTYPESKIPREMOVE ANOP ,                                        01202200
.DEFBUFADDRTYPESPEC ANOP ,                                              01202300
.*                                                                      01202400
.**------------------------------------------------------------------** 01202500
.**  Remove defaults for Pageable                                    ** 01202600
.**------------------------------------------------------------------** 01202700
.*                                                                      01202800
         AIF   ('&PAGEABLE(1)' NE '').DEFPAGEABLESPEC                   01202900
.*                                                                      01203000
         AIF   ('&XBUFFER'  NE ''  OR                                  *01203100
                '&XBUFLIST' NE '').DEFPAGEABLESKIPREMOVE                01203200
&XPAGEABLE     SETC ''                                                  01203300
&ZXPAGEABLE    SETC ''                                                  01203400
.DEFPAGEABLESKIPREMOVE ANOP ,                                           01203500
.DEFPAGEABLESPEC ANOP ,                                                 01203600
.*                                                                      01203700
.**------------------------------------------------------------------** 01203800
.**  Remove defaults for KeyReqType                                  ** 01203900
.**------------------------------------------------------------------** 01204000
.*                                                                      01204100
         AIF   ('&KEYREQTYPE(1)' NE '').DEFKEYREQTYPESPEC               01204200
.*                                                                      01204300
         AIF   ('&XENTRYKEY'  NE ''    AND                             *01204400
                '&XREQUEST'   NE 'MONITOR_SUBLIST'  AND                *01204500
                '&XREQUEST'   NE 'READ_EMCONTROLS'  AND                *01204600
                '&XENTRYID'   EQ ''    AND                             *01204700
                '&XENTRYTYPE' NE 'NEW').DEFKEYREQTYPESKIPREMOVE    @01C 01204800
&XKEYREQTYPE   SETC ''                                                  01204900
&ZXKEYREQTYPE  SETC ''                                                  01205000
.DEFKEYREQTYPESKIPREMOVE ANOP ,                                         01205100
.DEFKEYREQTYPESPEC ANOP ,                                               01205200
.*                                                                      01205300
.**------------------------------------------------------------------** 01205400
.**  Remove defaults for ListKeyType                             @D9A** 01205500
.**------------------------------------------------------------------** 01205600
.*                                                                      01205700
         AIF   ('&LISTKEYTYPE(1)' NE '').DEFLISTKEYTYPESPEC        @D9A 01205800
.*                                                                      01205900
         AIF   ('&XREQUEST'   EQ 'WRITE'  OR                           *01206000
                '&XREQUEST'   EQ 'MOVE').DEFLISTKEYTYPESKIPREMOVE  @D9A 01206100
&XLISTKEYTYPE  SETC ''                                             @D9A 01206200
&ZXLISTKEYTYPE SETC ''                                             @D9A 01206300
.DEFLISTKEYTYPESKIPREMOVE ANOP ,                                   @D9A 01206400
.DEFLISTKEYTYPESPEC ANOP ,                                         @D9A 01206500
.*                                                                      01206600
.**------------------------------------------------------------------** 01206700
.**  Remove defaults for ListDir and set up a special default.   @D5A** 01206800
.**  The ListDir default depends on ListPos.                     @D5A** 01206900
.**------------------------------------------------------------------** 01207000
.*                                                                      01207100
         AIF   ('&LISTDIR(1)' NE '').DEFLISTDIRSPEC                @D5A 01207200
.*                                                                      01207300
         AIF   ('&XREQUEST' EQ 'READ_LIST'      OR                     *01207400
                '&XUPDATECURSOR' EQ 'YES').DEFLISTDIRSKIPREMOVE1   @D6C 01207500
&XLISTDIR       SETC ''                                            @D5A 01207600
&ZXLISTDIR      SETC ''                                            @D5A 01207700
         AGO    .DEFLISTDIRSKIPSETDEF1                             @D6A 01207800
.*                                                                      01207900
.DEFLISTDIRSKIPREMOVE1 ANOP ,                                      @D5A 01208000
.*                                                                      01208100
         AIF   ('&LISTPOS(1)' NE ''            AND                     *01208200
                '&LISTPOS(1)' NE 'HEAD').DEFLISTDIRSETDEF1         @D6C 01208300
&XLISTDIR       SETC 'TOTAIL'                                      @D5A 01208400
         AGO    .DEFLISTDIRSKIPSETDEF1                             @D6A 01208500
.*                                                                      01208600
.DEFLISTDIRSETDEF1 ANOP ,                                          @D5A 01208700
.*                                                                      01208800
&XLISTDIR       SETC 'TOHEAD'                                      @D5A 01208900
.*                                                                      01209000
.DEFLISTDIRSKIPSETDEF1 ANOP ,                                      @D6A 01209100
.DEFLISTDIRSPEC ANOP ,                                             @D5A 01209200
.*                                                                      01209300
.**------------------------------------------------------------------** 01209400
.**  Remove defaults for ListPos and set up a special default.   @D5C** 01209500
.**  The ListPos default depends on ListDir.                     @D5A** 01209600
.**------------------------------------------------------------------** 01209700
.*                                                                      01209800
         AIF   ('&LISTPOS(1)' NE '').DEFLISTPOSSPEC                @D5C 01209900
.*                                                                      01210000
         AIF   ('&XREQUEST' NE 'READ_MULT'        AND                  *01210100
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01210200
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01210300
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01210400
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01210500
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01210600
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01210700
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01210800
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01210900
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01211000
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01211100
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01211200
                '&XREQUEST' NE 'LOCK').DEFLISTPOSSKIPREMOVE1       @01C 01211300
&XLISTPOS       SETC ''                                            @D5C 01211400
&ZXLISTPOS      SETC ''                                            @D5C 01211500
.DEFLISTPOSSKIPREMOVE1 ANOP ,                                      @D5C 01211600
.*                                                                      01211700
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01211800
                '&XREQUEST' NE 'READ_LIST'        AND                  *01211900
                '&XREQUEST' NE 'WRITE'            AND                  *01212000
                '&XREQUEST' NE 'MOVE'             AND                  *01212100
                '&XREQUEST' NE 'DELETE').DEFLISTPOSSKIPREMOVE3     @D6C 01212200
.*                                                                      01212300
         AIF   (('&XREQUEST' EQ 'WRITE'           AND                  *01212400
                 '&XENTRYTYPE' NE 'OLD')          OR                   *01212500
                ('&XLOCBYCURSOR' NE 'LOCBYCURSOR' AND                  *01212600
                 '&XLISTNUM' NE ''                AND                  *01212700
                 '&XENTRYID' EQ ''                AND                  *01212800
                 '&XENTRYNAME' EQ '')).DEFLISTPOSSKIPREMOVE2       @D6C 01212900
&XLISTPOS       SETC ''                                            @D5C 01213000
&ZXLISTPOS      SETC ''                                            @D5C 01213100
         AGO    .DEFLISTPOSSKIPREMOVE3                             @D6A 01213200
.*                                                                      01213300
.DEFLISTPOSSKIPREMOVE2 ANOP ,                                      @D6A 01213400
.*                                                                      01213500
         AIF   ('&LISTDIR(1)' NE ''            AND                     *01213600
                '&LISTDIR(1)' NE 'TOTAIL').DEFLISTPOSSETDEF1       @D6A 01213700
&XLISTPOS       SETC 'HEAD'                                        @D6A 01213800
         AGO    .DEFLISTPOSSKIPSETDEF1                             @D6A 01213900
.*                                                                      01214000
.DEFLISTPOSSETDEF1 ANOP ,                                          @D6A 01214100
.*                                                                      01214200
&XLISTPOS       SETC 'TAIL'                                        @D6M 01214300
.*                                                                      01214400
.DEFLISTPOSSKIPSETDEF1 ANOP ,                                      @D6A 01214500
.DEFLISTPOSSKIPREMOVE3 ANOP ,                                      @D6C 01214600
.DEFLISTPOSSPEC ANOP ,                                             @D5C 01214700
.*                                                                      01214800
.**------------------------------------------------------------------** 01214900
.**  Remove defaults for VersUpdate                                  ** 01215000
.**  -- VersUpdate(None) may always be specified                     ** 01215100
.**------------------------------------------------------------------** 01215200
.**------------------------------------------------------------------** 01215300
.**  Remove defaults for Mode                                        ** 01215400
.**  -- Mode(SyncSuspend) may always be specified                    ** 01215500
.**------------------------------------------------------------------** 01215600
.**------------------------------------------------------------------** 01215700
.**  Remove defaults for LockOper                                    ** 01215800
.**------------------------------------------------------------------** 01215900
.*                                                                      01216000
         AIF   ('&LOCKOPER(1)' NE '').DEFLOCKOPERSPEC                   01216100
.*                                                                      01216200
         AIF   ('&XLOCKINDEX' NE '').DEFLOCKOPERSKIPREMOVE         @P4C 01216300
&XLOCKOPER     SETC ''                                                  01216400
&ZXLOCKOPER    SETC ''                                                  01216500
.DEFLOCKOPERSKIPREMOVE ANOP ,                                           01216600
.DEFLOCKOPERSPEC ANOP ,                                                 01216700
.*                                                                      01216800
.**------------------------------------------------------------------** 01216900
.**  Remove defaults for LockMode and set up a special default   @PAC** 01217000
.**------------------------------------------------------------------** 01217100
.*                                                                      01217200
         AIF   ('&LOCKMODE(1)' NE '').DEFLOCKMODESPEC                   01217300
.*                                                                      01217400
         AIF   ('&XLOCKOPER' EQ 'SET'      OR                          *01217500
                '&XLOCKOPER' EQ 'NOTHELD').DEFLOCKMODESKIPREMOVE        01217600
&XLOCKMODE     SETC ''                                                  01217700
&ZXLOCKMODE    SETC ''                                                  01217800
.DEFLOCKMODESKIPREMOVE ANOP ,                                           01217900
.*                                                                      01218000
         AIF   ('&XLOCKOPER' NE 'NOTHELD'        OR                    *01218100
                ('&XREQUEST' NE 'READ_LIST'       AND                  *01218200
                 '&XREQUEST' NE 'READ_MULT'       AND                  *01218300
                 '&XREQUEST' NE 'DELETE_MULT'     AND                  *01218400
                 '&XREQUEST' NE 'DELETE_ENTRYLIST')).DEFLOCKMODESPECIAL 01218500
&XLOCKMODE     SETC 'COND'                                         @PAA 01218600
.DEFLOCKMODESPECIAL ANOP ,                                         @PAA 01218700
.*                                                                      01218800
.DEFLOCKMODESPEC ANOP ,                                                 01218900
.*                                                                      01219000
.**------------------------------------------------------------------** 01219100
.**  Remove defaults for Type                                        ** 01219200
.**------------------------------------------------------------------** 01219300
.*                                                                      01219400
         AIF   (N'&TYPE NE 0).DEFTYPESPEC                               01219500
.*                                                                      01219600
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01219700
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01219800
                '&XREQUEST' NE 'WRITE'            AND                  *01219900
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01220000
                '&XREQUEST' NE 'DELETE'           AND                  *01220100
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01220200
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01220300
                '&XREQUEST' NE 'MOVE'             AND                  *01220400
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01220500
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01220600
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01220700
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01220800
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01220900
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01221000
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01221100
                '&XREQUEST' NE 'LOCK').DEFTYPESKIPREMOVE           @01C 01221200
&XTYPE(1)      SETC ''                                                  01221300
&ZXTYPE        SETC ''                                                  01221400
.DEFTYPESKIPREMOVE ANOP ,                                               01221500
.DEFTYPESPEC ANOP ,                                                     01221600
.*                                                                      01221700
.**------------------------------------------------------------------** 01221800
.**  Remove defaults for AuthCompType                            @PGA** 01221900
.**------------------------------------------------------------------** 01222000
.*                                                                      01222100
         AIF   ('&AUTHCOMPTYPE(1)' NE '').DEFAUTHCOMPTYPESPEC      @PGA 01222200
.*                                                                      01222300
         AIF   ('&XAUTHCOMP' NE ''                AND                  *01222400
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01222500
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01222600
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01222700
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01222800
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01222900
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01223000
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01223100
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01223200
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01223300
                '&XREQUEST' NE 'LOCK').DEFACTYPESKIPREMOVE         @01C 01223400
&XAUTHCOMPTYPE  SETC ''                                            @PGA 01223500
&ZXAUTHCOMPTYPE SETC ''                                            @PGA 01223600
.DEFACTYPESKIPREMOVE ANOP ,                                        @PGA 01223700
.DEFAUTHCOMPTYPESPEC ANOP ,                                        @PGA 01223800
.*                                                                      01223900
.**------------------------------------------------------------------** 01224000
.**  End of code to remove default values when the key cannot        ** 01224100
.**  be specified on the request                                     ** 01224200
.**------------------------------------------------------------------** 01224300
.*                                                                      01224400
.*                                                                      01224500
.**------------------------------------------------------------------** 01224600
.**  Start of code to validity check parameters                      ** 01224700
.**                                                                  ** 01224800
.**  This code is needed in addition to the checks which AMG         ** 01224900
.**  produces because we did not repeat keys in all places where     ** 01225000
.**  they could be used.                                             ** 01225100
.**                                                                  ** 01225200
.**  Validity checking for mutually exclusive keys, required keys,   ** 01225300
.**  and dependent keys is performed for the standard and execute    ** 01225400
.**  forms.                                                          ** 01225500
.*                                                                      01225600
.*   A subset of the validity checks can be performed when the          01225700
.*   NOCHECK option is used on the modify and execute forms.            01225800
.*   1) All checks for mutual exclusivity may be performed.             01225900
.*      Mutually exclusive sets of keys can only be detected when       01226000
.*      all are specified on the same invocation.                       01226100
.*   2) Checks of either of the following two forms cannot be           01226200
.*      performed:                                                      01226300
.*      a) X is required if Y is specified.                             01226400
.*      b) X may only be specified if Y is specified.                   01226500
.*                                                                      01226600
.**                                                                  ** 01226700
.**------------------------------------------------------------------** 01226800
.* Skip all validity checking for MF=L                                  01226900
         AIF   ('&MF(1)' EQ 'L').ENDPARMVALIDATION                      01227000
.**------------------------------------------------------------------** 01227100
.**  Validity checking for AnsArea                                   ** 01227200
.**                                                                  ** 01227300
.** AnsArea is required when Mode(SyncToken!AsyncToken) is           ** 01227400
.**   specified.  In all other cases it is optional.                 ** 01227500
.**                                                                  ** 01227600
         AIF   ('&XANSAREA' NE '' AND                                  *01227700
                '&XANSAREA' NE 'NO_ANSAREA').ANSAREASPEC                01227800
.*                                                                      01227900
.*                                                                      01228000
         AIF   ('&XMODE' NE 'SYNCTOKEN'    AND                         *01228100
                '&XMODE' NE 'ASYNCTOKEN').NOANSNOTTOKEN                 01228200
         MNOTE 8,'IXLLIST ---> The ANSAREA key is required when MODE=&X*01228300
               MODE is specified'                                       01228400
&ZMACRET SETA  8                                                        01228500
.NOANSNOTTOKEN ANOP ,                                                   01228600
.*                                                                      01228700
.*                                                                      01228800
.ANSAREASPEC ANOP ,                                                     01228900
.**                                                                  ** 01229000
.**  End of validity checking for AnsArea                            ** 01229100
.**------------------------------------------------------------------** 01229200
.**------------------------------------------------------------------** 01229300
.**  Validity checking for Buffer and BufList                        ** 01229400
.**                                                                  ** 01229500
.** For Write_LControls, Delete_Mult, Move DataOper(None),           ** 01229600
.**   Monitor_List, Lock, Delete DataOper(None),                     ** 01229700
.**   Read_EMControls,  Read_EQControls,  Monitor_Eventq,       @01A ** 01229800
.**   Monitor_Sublist                                           @01A ** 01229900
.**   Buffer and BufList cannot be specified                         ** 01230000
.**                                                                  ** 01230100
.** For Read_List, Read_Mult, Read_LControls, Delete_EntryList,      ** 01230200
.**   Deq_eventq, Monitor_Sublists                              @01A ** 01230300
.**   Buffer or BufList is required                                  ** 01230400
.**                                                                  ** 01230500
.** For Move DataOper(Read), Delete DataOper(Read)                   ** 01230600
.**   At least one of Buffer, BufList, or AdjArea must be specified  ** 01230700
.**                                                                  ** 01230800
.** For Read, Write, Move DataOper(Write)                            ** 01230900
.**   Buffer or BufList may optionally be specified                  ** 01231000
.**                                                                  ** 01231100
         AIF   ('&XBUFFER'  EQ '' AND                                  *01231200
                '&XBUFLIST' EQ '').BUFFERNOTSPEC                        01231300
.*                                                                      01231400
         AIF   ('&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01231500
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01231600
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01231700
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01231800
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01231900
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01232000
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01232100
                '&XREQUEST' NE 'LOCK').NOBUFFERERROR001           @01C  01232200
         MNOTE 8,'IXLLIST ---> The &XDATAREA key is mutually exclusive *01232300
               with REQUEST=&XREQUEST'                                  01232400
&ZMACRET SETA  8                                                        01232500
.NOBUFFERERROR001 ANOP ,                                                01232600
.*                                                                      01232700
         AIF   ('&XREQUEST'  NE 'MOVE' OR                              *01232800
                '&XDATAOPER' NE 'NONE').NOBUFFERERROR002                01232900
         MNOTE 8,'IXLLIST ---> The &XDATAREA key is mutually exclusive *01233000
               with REQUEST=MOVE when DATAOPER=NONE is specified'       01233100
&ZMACRET SETA  8                                                        01233200
.NOBUFFERERROR002 ANOP ,                                                01233300
.*                                                                      01233400
         AIF   ('&XREQUEST'  NE 'DELETE' OR                            *01233500
                '&XDATAOPER' NE 'NONE').NOBUFFERERROR003                01233600
         MNOTE 8,'IXLLIST ---> The &XDATAREA key is mutually exclusive *01233700
               with REQUEST=DELETE when DATAOPER=NONE is specified'     01233800
&ZMACRET SETA  8                                                        01233900
.NOBUFFERERROR003 ANOP ,                                                01234000
.BUFFERNOTSPEC ANOP ,                                                   01234100
.*                                                                      01234200
         AIF   ('&XBUFFER'  NE ''  OR                                  *01234300
                '&XBUFLIST' NE '').BUFORBUFLISTSPEC                     01234400
.*                                                                      01234500
.*                                                                      01234600
         AIF   ('&XREQUEST' NE 'READ_LIST'        AND                  *01234700
                '&XREQUEST' NE 'READ_MULT'        AND                  *01234800
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01234900
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01235000
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01235100
                '&XREQUEST' NE 'DELETE_ENTRYLIST').NOBUFLISTNOTERROR    01235200
.*                                                                @01C  01235300
         MNOTE 8,'IXLLIST ---> BUFFER or BUFLIST is required when REQUE*01235400
               ST=&XREQUEST is specified'                               01235500
&ZMACRET SETA  8                                                        01235600
.NOBUFLISTNOTERROR ANOP ,                                               01235700
.*                                                                      01235800
.*                                                                      01235900
.BUFORBUFLISTSPEC ANOP ,                                                01236000
.*                                                                      01236100
         AIF   ('&XBUFFER'  NE '' OR                                   *01236200
                '&XBUFLIST' NE '' OR                                   *01236300
                ('&XADJAREA' NE 'NO_ADJAREA' AND                       *01236400
                 '&XADJAREA' NE '')).BUFLISTORADJAREASPEC               01236500
.*                                                                      01236600
.*                                                                      01236700
         AIF   ('&XREQUEST' NE 'MOVE'   OR                             *01236800
                '&XDATAOPER' NE 'READ').NOBUFORADJERROR002         @D3C 01236900
         MNOTE 8,'IXLLIST ---> At least one of BUFFER, BUFLIST, or ADJA*01237000
               REA is required when REQUEST=MOVE with DATAOPER=READ is *01237100
               specified'                                          @D3C 01237200
&ZMACRET SETA  8                                                        01237300
.NOBUFORADJERROR002 ANOP ,                                              01237400
.*                                                                      01237500
         AIF   ('&XREQUEST' NE 'DELETE'   OR                           *01237600
                '&XDATAOPER' NE 'READ').NOBUFORADJERROR003              01237700
         MNOTE 8,'IXLLIST ---> At least one of BUFFER, BUFLIST, or ADJA*01237800
               REA is required when REQUEST=DELETE with DATAOPER=READ i*01237900
               s specified'                                             01238000
&ZMACRET SETA  8                                                        01238100
.NOBUFORADJERROR003 ANOP ,                                              01238200
.*                                                                      01238300
.*                                                                      01238400
.BUFLISTORADJAREASPEC ANOP ,                                            01238500
.**                                                                  ** 01238600
.**  End of validity checking for Buffer and BufList                 ** 01238700
.**------------------------------------------------------------------** 01238800
.**------------------------------------------------------------------** 01238900
.**  Validity checking for BufSize                                   ** 01239000
.**                                                                  ** 01239100
.**   For Read_LControls,  Deq_Eventq                           @01C ** 01239200
.**     BufSize cannot be specified                                  ** 01239300
.**                                                                  ** 01239400
.**   For Read, Read_List, Read_Mult, Write, Delete,                 ** 01239500
.**     Delete_EntryList, Move,  Monitor_Sublists               @01C ** 01239600
.**     BufSize is required if Buffer is specified                   ** 01239700
.**                                                                  ** 01239800
         AIF   ('&XBUFSIZE' EQ '').BUFSIZENOTSPEC                       01239900
.*                                                                      01240000
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'    AND                 *01240100
                '&XREQUEST' NE 'DEQ_EVENTQ').BUFSIZEERROR001       @01C 01240200
         MNOTE 8,'IXLLIST ---> The BUFSIZE key is mutually exclusive wi*01240300
               th REQUEST=&XREQUEST'                                    01240400
&ZMACRET SETA  8                                                        01240500
.BUFSIZEERROR001 ANOP ,                                                 01240600
.BUFSIZENOTSPEC ANOP ,                                                  01240700
.*                                                                      01240800
         AIF   ('&XBUFSIZE' NE '').BUFSIZESPEC                          01240900
.*                                                                      01241000
.*                                                                      01241100
         AIF   (('&XREQUEST' NE 'READ'             AND                 *01241200
                 '&XREQUEST' NE 'READ_LIST'        AND                 *01241300
                 '&XREQUEST' NE 'READ_MULT'        AND                 *01241400
                 '&XREQUEST' NE 'WRITE'            AND                 *01241500
                 '&XREQUEST' NE 'DELETE'           AND                 *01241600
                 '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                 *01241700
                 '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                 *01241800
                 '&XREQUEST' NE 'MOVE')            OR                  *01241900
                '&XBUFFER' EQ '').BUFSIZEERROR002                 @01C  01242000
         MNOTE 8,'IXLLIST ---> The BUFSIZE key is required with REQUEST*01242100
               =&XREQUEST when BUFFER is specified'                     01242200
&ZMACRET SETA  8                                                        01242300
.BUFSIZEERROR002 ANOP ,                                                 01242400
.*                                                                      01242500
.*                                                                      01242600
.BUFSIZESPEC ANOP ,                                                     01242700
.**                                                                  ** 01242800
.**  End of validity checking for BufSize                            ** 01242900
.**------------------------------------------------------------------** 01243000
.**------------------------------------------------------------------** 01243100
.**  Validity checking for BufNum                                    ** 01243200
.**                                                                  ** 01243300
.**   For Read_LControls,  Deq_Eventq                           @01C ** 01243400
.**     BufNum cannot be specified                                   ** 01243500
.**                                                                  ** 01243600
.**   For Read, Read_List, Read_Mult, Write, Delete,                 ** 01243700
.**     Delete_EntryList, Move,  Monitor_Sublists               @01C ** 01243800
.**     BufNum is required if BufList is specified                   ** 01243900
.**                                                                  ** 01244000
         AIF   ('&XBUFNUM' EQ '').BUFNUMNOTSPEC                         01244100
.*                                                                      01244200
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'    AND                 *01244300
                '&XREQUEST' NE 'DEQ_EVENTQ').BUFNUMERROR001        @01C 01244400
         MNOTE 8,'IXLLIST ---> The BUFNUM key is mutually exclusive wit*01244500
               h REQUEST=&XREQUEST'                                     01244600
&ZMACRET SETA  8                                                        01244700
.BUFNUMERROR001 ANOP ,                                                  01244800
.BUFNUMNOTSPEC ANOP ,                                                   01244900
.*                                                                      01245000
         AIF   ('&XBUFNUM' NE '').BUFNUMSPEC                            01245100
.*                                                                      01245200
.*                                                                      01245300
         AIF   (('&XREQUEST' NE 'READ'             AND                 *01245400
                 '&XREQUEST' NE 'READ_LIST'        AND                 *01245500
                 '&XREQUEST' NE 'READ_MULT'        AND                 *01245600
                 '&XREQUEST' NE 'WRITE'            AND                 *01245700
                 '&XREQUEST' NE 'DELETE'           AND                 *01245800
                 '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                 *01245900
                 '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                 *01246000
                 '&XREQUEST' NE 'MOVE')            OR                  *01246100
                '&XBUFLIST' EQ '').BUFNUMERROR002                 @01C  01246200
         MNOTE 8,'IXLLIST ---> The BUFNUM key is required with REQUEST=*01246300
               &XREQUEST when BUFLIST is specified'                     01246400
&ZMACRET SETA  8                                                        01246500
.BUFNUMERROR002 ANOP ,                                                  01246600
.*                                                                      01246700
.*                                                                      01246800
.BUFNUMSPEC ANOP ,                                                      01246900
.**                                                                  ** 01247000
.**  End of validity checking for BufNum                             ** 01247100
.**------------------------------------------------------------------** 01247200
.**------------------------------------------------------------------** 01247300
.**  Validity checking for BufIncrNum                                ** 01247400
.**                                                                  ** 01247500
.**   For Read_List, Read_Mult, Read_LControls, Delete_EntryList,    ** 01247600
.**     Deq_Eventq                                              @01A ** 01247700
.**     BufIncrNum cannot be specified                               ** 01247800
.**                                                                  ** 01247900
.**   For Read, Write, Delete, Move, Monitor_Sublists           @01C ** 01248000
.**     BufIncrNum is required if BufList is specified               ** 01248100
.**                                                                  ** 01248200
         AIF   ('&XBUFINCRNUM' EQ '').BUFINCRNUMNOTSPEC                 01248300
.*                                                                      01248400
         AIF   ('&XREQUEST' NE 'READ_LIST'         AND                 *01248500
                '&XREQUEST' NE 'READ_MULT'         AND                 *01248600
                '&XREQUEST' NE 'DEQ_EVENTQ'        AND                 *01248700
                '&XREQUEST' NE 'READ_LCONTROLS'    AND                 *01248800
                '&XREQUEST' NE 'DELETE_ENTRYLIST').BUFINCRNUMERROR001   01248900
.*                                                                @01C  01249000
         MNOTE 8,'IXLLIST ---> The BUFINCRNUM key is mutually exclusive*01249100
                with REQUEST=&XREQUEST'                                 01249200
&ZMACRET SETA  8                                                        01249300
.BUFINCRNUMERROR001 ANOP ,                                              01249400
.BUFINCRNUMNOTSPEC ANOP ,                                               01249500
.*                                                                      01249600
         AIF   ('&XBUFINCRNUM' NE '').BUFINCRNUMSPEC                    01249700
.*                                                                      01249800
.*                                                                      01249900
         AIF   (('&XREQUEST' NE 'READ'             AND                 *01250000
                 '&XREQUEST' NE 'WRITE'            AND                 *01250100
                 '&XREQUEST' NE 'DELETE'           AND                 *01250200
                 '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                 *01250300
                 '&XREQUEST' NE 'MOVE')            OR                  *01250400
                '&XBUFLIST' EQ '').BUFINCRNUMERROR002             @01C  01250500
         MNOTE 8,'IXLLIST ---> The BUFINCRNUM key is required with REQU*01250600
               EST=&XREQUEST when BUFLIST is specified'                 01250700
&ZMACRET SETA  8                                                        01250800
.BUFINCRNUMERROR002 ANOP ,                                              01250900
.*                                                                      01251000
.*                                                                      01251100
.BUFINCRNUMSPEC ANOP ,                                                  01251200
.**                                                                  ** 01251300
.**  End of validity checking for BufIncrNum                         ** 01251400
.**------------------------------------------------------------------** 01251500
.**------------------------------------------------------------------** 01251600
.**  Validity checking for ElemNum                                   ** 01251700
.**                                                                  ** 01251800
.**   AMG ensures ElemNum is only specified on Write and Move        ** 01251900
.**     DataOper(Write) requests                                     ** 01252000
.**                                                                  ** 01252100
.**   For Write, Move DataOper(Write)                                ** 01252200
.**     ElemNum is required when Buffer or BufList is specified      ** 01252300
.**                                                                  ** 01252400
         AIF   ('&XELEMNUM' NE '').ELEMNUMSPEC                          01252500
.*                                                                      01252600
.*                                                                      01252700
         AIF   ('&XBUFFER'  EQ '' AND                                  *01252800
                '&XBUFLIST' EQ '').ELEMNUMNOBUF                         01252900
.*                                                                      01253000
         AIF   ('&XREQUEST' NE 'WRITE').ELEMNUMERROR003                 01253100
         MNOTE 8,'IXLLIST ---> The ELEMNUM key is required with REQUEST*01253200
               =&XREQUEST when BUFFER or BUFLIST is specified'     @D3C 01253300
&ZMACRET SETA  8                                                        01253400
.ELEMNUMERROR003 ANOP ,                                                 01253500
.*                                                                      01253600
         AIF   ('&XREQUEST'  NE 'MOVE' OR                              *01253700
                '&XDATAOPER' NE 'WRITE').ELEMNUMERROR004                01253800
         MNOTE 8,'IXLLIST ---> The ELEMNUM key is required with REQUEST*01253900
               =MOVE when DATAOPER=WRITE and BUFFER or BUFLIST is speci*01254000
               fied'                                               @D3C 01254100
&ZMACRET SETA  8                                                        01254200
.ELEMNUMERROR004 ANOP ,                                                 01254300
.ELEMNUMNOBUF ANOP ,                                                    01254400
.*                                                                      01254500
.*                                                                      01254600
.ELEMNUMSPEC ANOP ,                                                     01254700
.**                                                                  ** 01254800
.**  End of validity checking for ElemNum                            ** 01254900
.**------------------------------------------------------------------** 01255000
.**------------------------------------------------------------------** 01255100
.**  Validity checking for AdjArea                                   ** 01255200
.**                                                                  ** 01255300
.**   For Read_LControls, Write_LControls, Delete_Mult,              ** 01255400
.**     Delete_EntryList, Move DataOper(None), Monitor_List, Lock,   ** 01255500
.**     Delete DataOper(None), Read_EMControls, Read_EQControls, @01A** 01255600
.**     Deq_Eventq, Monitor_Eventq, Monitor_Sublist,             @01A** 01255700
.**     Monitor_Sublists                                         @01A** 01255800
.**     AdjArea cannot be specified                                  ** 01255900
.**                                                                  ** 01256000
.**   For Read_List, Read_Mult                                       ** 01256100
.**     AdjArea is required if Type(AdjData) is specified            ** 01256200
.**                                                                  ** 01256300
.**   For Read, Write, Move DataOper(Read!Write),                    ** 01256400
.**     Delete DataOper(Read)                                        ** 01256500
.**     AdjArea may be specified, no restrictions                    ** 01256600
.**                                                                  ** 01256700
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA' OR                         *01256800
                '&XADJAREA' EQ '').ADJAREANOTSPEC                  @P4C 01256900
.*                                                                      01257000
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01257100
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01257200
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01257300
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01257400
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01257500
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01257600
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01257700
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01257800
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01257900
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01258000
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01258100
                '&XREQUEST' NE 'LOCK').ADJAREAERROR001            @01C  01258200
         MNOTE 8,'IXLLIST ---> The ADJAREA key is mutually exclusive wi*01258300
               th REQUEST=&XREQUEST'                                    01258400
&ZMACRET SETA  8                                                        01258500
.ADJAREAERROR001 ANOP ,                                                 01258600
.*                                                                      01258700
         AIF   ('&XREQUEST' NE 'MOVE' OR                               *01258800
                '&XDATAOPER' NE 'NONE').ADJAREAERROR002                 01258900
         MNOTE 8,'IXLLIST ---> The ADJAREA key is mutually exclusive wi*01259000
               th REQUEST=MOVE when DATAOPER=NONE is specified'         01259100
&ZMACRET SETA  8                                                        01259200
.ADJAREAERROR002 ANOP ,                                                 01259300
.*                                                                      01259400
         AIF   ('&XREQUEST' NE 'DELETE' OR                             *01259500
                '&XDATAOPER' NE 'NONE').ADJAREAERROR003                 01259600
         MNOTE 8,'IXLLIST ---> The ADJAREA key is mutually exclusive wi*01259700
               th REQUEST=DELETE when DATAOPER=NONE is specified'       01259800
&ZMACRET SETA  8                                                        01259900
.ADJAREAERROR003 ANOP ,                                                 01260000
.ADJAREANOTSPEC ANOP ,                                                  01260100
.*                                                                      01260200
         AIF   ('&XADJAREA' NE 'NO_ADJAREA' AND                        *01260300
                '&XADJAREA' NE '').ADJAREASPEC                          01260400
.*                                                                      01260500
.*                                                                      01260600
         AIF   ('&XREQUEST' NE 'READ_LIST' AND                         *01260700
                '&XREQUEST' NE 'READ_MULT').ADJNOTRLRM                  01260800
.*                                                                      01260900
&ZCVAL   SETC  'NO'                                                     01261000
&ZI      SETA  0                                                        01261100
.*                                                                      01261200
.ADJFINDREQ ANOP ,                                                      01261300
.*                                                                      01261400
&ZI      SETA  &ZI+1                                                    01261500
.*                                                                      01261600
         AIF   (K'&XTYPE(&ZI) LE 0).ADJFINDREQNOVALUE                   01261700
.*                                                                      01261800
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').ADJFINDREQ                  01261900
.*                                                                      01262000
&ZCVAL   SETC  'YES'                                                    01262100
.*                                                                      01262200
.ADJFINDREQNOVALUE ANOP ,                                               01262300
.*                                                                      01262400
         AIF   ('&ZCVAL' NE 'YES').ADJAREAERROR004                      01262500
         MNOTE 8,'IXLLIST ---> The ADJAREA key is required for REQUEST=*01262600
               &XREQUEST when TYPE=ADJDATA is specified'                01262700
&ZMACRET SETA  8                                                        01262800
.ADJAREAERROR004 ANOP ,                                                 01262900
.*                                                                      01263000
.ADJNOTRLRM ANOP ,                                                      01263100
.*                                                                      01263200
.*                                                                      01263300
.ADJAREASPEC ANOP ,                                                     01263400
.**                                                                  ** 01263500
.**  End of validity checking for AdjArea                            ** 01263600
.**------------------------------------------------------------------** 01263700
.**------------------------------------------------------------------** 01263800
.**  Validity checking for ListNum                                   ** 01263900
.**                                                                  ** 01264000
.** For Lock,  Read_EQControls,  Deq_Eventq, Monitor_Eventq,    @01C ** 01264100
.**   Monitor_Sublists,                                         @01A ** 01264200
.**   ListNum cannot be specified                                    ** 01264300
.**                                                                  ** 01264400
.** For Read_LControls, Write EntryType(Any!New), Write_LControls,   ** 01264500
.**   Monitor_List, Read_EMControls,  Monitor_Sublist,          @01C ** 01264600
.**   or when LocByCursor is specified                           @D6C** 01264700
.**   ListNum must be specified                                      ** 01264800
.**                                                                  ** 01264900
.** For Read, Read_List, Write EntryType(OLD), Delete, Move          ** 01265000
.**   At least one of ListNum, EntryId, EntryName, or            @D6C** 01265100
.**     LOCBYCURSOR must be specified                            @D6C** 01265200
.**                                                                  ** 01265300
.** For Read_Mult, Delete_Mult, Delete_EntryList                     ** 01265400
.**   ListNum may be specified, no restrictions                      ** 01265500
.**                                                                  ** 01265600
         AIF   ('&XLISTNUM' EQ '').LISTNUMNOTSPEC                  @P4C 01265700
.*                                                                      01265800
         AIF   ('&XREQUEST' NE 'LOCK'               AND                *01265900
                '&XREQUEST' NE 'READ_EQCONTROLS'    AND                *01266000
                '&XREQUEST' NE 'MONITOR_EVENTQ'     AND                *01266100
                '&XREQUEST' NE 'MONITOR_SUBLISTS'   AND                *01266200
                '&XREQUEST' NE 'DEQ_EVENTQ').LISTNUMERROR001       @01C 01266300
         MNOTE 8,'IXLLIST ---> The LISTNUM key is mutually exclusive wi*01266400
               th REQUEST=&XREQUEST'                                    01266500
&ZMACRET SETA  8                                                        01266600
.LISTNUMERROR001 ANOP ,                                                 01266700
.LISTNUMNOTSPEC ANOP ,                                                  01266800
.*                                                                      01266900
         AIF   ('&XLISTNUM' NE '').LISTNUMSPEC                     @P4C 01267000
.*                                                                      01267100
.*                                                                      01267200
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'  AND                   *01267300
                '&XREQUEST' NE 'WRITE_LCONTROLS' AND                   *01267400
                '&XREQUEST' NE 'READ_EMCONTROLS' AND                   *01267500
                '&XREQUEST' NE 'MONITOR_SUBLIST' AND                   *01267600
                '&XREQUEST' NE 'MONITOR_LIST').LISTNUMERROR002    @01C  01267700
         MNOTE 8,'IXLLIST ---> The LISTNUM key is required for REQUEST=*01267800
               &XREQUEST'                                               01267900
&ZMACRET SETA  8                                                        01268000
.LISTNUMERROR002 ANOP ,                                            @P2A 01268100
.*                                                                      01268200
         AIF   ('&XREQUEST' NE 'WRITE' OR                              *01268300
                ('&XENTRYTYPE' NE 'ANY' AND                            *01268400
                 '&XENTRYTYPE' NE 'NEW')).LISTNUMERROR003               01268500
         MNOTE 8,'IXLLIST ---> The LISTNUM key is required for REQUEST=*01268600
               WRITE when ENTRYTYPE=ANY!NEW is specified'               01268700
&ZMACRET SETA  8                                                        01268800
.LISTNUMERROR003 ANOP ,                                            @P2A 01268900
.*                                                                      01269000
         AIF   ('&XLOCBYCURSOR' NE 'LOCBYCURSOR').LISTNUMERROR004 @D6A  01269100
         MNOTE 8,'IXLLIST ---> The LISTNUM key is required when LOCATEB*01269200
               YCURSOR is specified'                               @D6A 01269300
&ZMACRET SETA  8                                                   @D6A 01269400
.LISTNUMERROR004 ANOP ,                                            @D6A 01269500
.*                                                                      01269600
.*                                                                      01269700
.LISTNUMSPEC ANOP ,                                                     01269800
.*                                                                      01269900
         AIF   ('&XLOCBYCURSOR' EQ 'LOCBYCURSOR' OR                    *01270000
                '&XLISTNUM' NE '' OR                                   *01270100
                '&XENTRYID' NE '' OR                                   *01270200
                '&XENTRYNAME' NE '').LOCATORSPEC                   @D6C 01270300
.*                                                                      01270400
.*                                                                      01270500
         AIF   ('&XREQUEST' NE 'READ'      AND                         *01270600
                '&XREQUEST' NE 'READ_LIST' AND                         *01270700
                '&XREQUEST' NE 'DELETE'    AND                         *01270800
                '&XREQUEST' NE 'MOVE').LOCATORERROR001                  01270900
         MNOTE 8,'IXLLIST ---> At least one of LISTNUM, ENTRYID, ENTRYN*01271000
               AME, or LOCBYCURSOR is required when REQUEST=&XREQUEST i*01271100
               s specified'                                        @D6C 01271200
&ZMACRET SETA  8                                                        01271300
.LOCATORERROR001 ANOP ,                                                 01271400
.*                                                                      01271500
         AIF   ('&XREQUEST' NE 'WRITE' OR                              *01271600
                '&XENTRYTYPE' NE 'OLD').LOCATORERROR002                 01271700
         MNOTE 8,'IXLLIST ---> At least one of LISTNUM, ENTRYID, ENTRYN*01271800
               AME, or LOCBYCURSOR is required when REQUEST=WRITE with *01271900
               ENTRYTYPE=OLD is specified'                         @D6C 01272000
&ZMACRET SETA  8                                                        01272100
.LOCATORERROR002 ANOP ,                                                 01272200
.*                                                                      01272300
.*                                                                      01272400
.LOCATORSPEC ANOP ,                                                     01272500
.**                                                                  ** 01272600
.**  End of validity checking for ListNum                            ** 01272700
.**------------------------------------------------------------------** 01272800
.**------------------------------------------------------------------** 01272900
.**  Validity checking for EntryKey                                  ** 01273000
.**                                                                  ** 01273100
.** For Read_Mult, Read_LControls, Write_LControls, Delete_Mult,     ** 01273200
.**   Delete_EntryList, Monitor_List, Lock, Read_EQControls,    @01C ** 01273300
.**   Deq_Eventq, Monitor_Eventq, Monitor_Sublists              @01A ** 01273400
.**   EntryKey cannot be specified                                   ** 01273500
.**                                                                  ** 01273600
.** For Read, Read_List, Write EntryType(Old), Delete,               ** 01273700
.**   Move DataOper(None!Read), Move DataOper(Write) EntryType(Old)  ** 01273800
.**   EntryKey and EntryID are mutually exclusive                    ** 01273900
.**   EntryKey and LocByCursor are mutually exclusive            @D6A** 01274000
.**                                                                  ** 01274100
.** For Write EntryType(Any), Move DataOper(Write) EntryType(Any)    ** 01274200
.**   EntryKey and EntryID are *NOT* mutually exclusive              ** 01274300
.**   EntryKey and LocByCursor are *NOT* mutually exclusive      @D6A** 01274400
.**                                                                  ** 01274500
.** For Write EntryType(New)                                         ** 01274600
.**   No EntryKey/EntryId check is needed because EntryId cannot be  ** 01274700
.**     specified                                                    ** 01274800
.**                                                                  ** 01274900
.** For Read, Read_List, Write, Delete, Move                         ** 01275000
.**   EntryKey and EntryName are mutually exclusive                  ** 01275100
.**                                                                  ** 01275200
.** For Read_EMControls,  Monitor_Sublist                       @01A ** 01275300
.**   EntryKey is required                                      @01A ** 01275400
.**                                                                  ** 01275500
.*                                                                      01275600
         AIF   ('&XREQUEST' NE 'READ_EMCONTROLS' AND                   *01275700
                '&XREQUEST' NE 'MONITOR_SUBLIST').ENTRYKEYNOTREQD  @01A 01275800
         AIF   ('&XENTRYKEY' NE '').ENTRYKEYEND                    @01A 01275900
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is required with REQUES*01276000
               T=&XREQUEST'                                        @01A 01276100
&ZMACRET SETA  8                                                   @01A 01276200
         AGO   .ENTRYKEYEND                                        @01A 01276300
.ENTRYKEYNOTREQD  ANOP ,                                           @01A 01276400
.*                                                                      01276500
.*                                                                      01276600
         AIF   ('&XENTRYKEY' EQ '').ENTRYKEYNOTSPEC                @P4C 01276700
.*                                                                      01276800
         AIF   ('&XREQUEST' NE 'READ_MULT'        AND                  *01276900
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01277000
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01277100
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01277200
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01277300
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01277400
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01277500
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01277600
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01277700
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01277800
                '&XREQUEST' NE 'LOCK').ENTRYKEYERROR001           @01C  01277900
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01278000
               ith REQUEST=&XREQUEST'                                   01278100
&ZMACRET SETA  8                                                        01278200
.ENTRYKEYERROR001 ANOP ,                                                01278300
.*                                                                      01278400
         AIF   ('&XENTRYID' EQ '').NOTBOTHKEYANDLEID               @P4C 01278500
.*                                                                      01278600
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01278700
                '&XREQUEST' NE 'READ_LIST'        AND                  *01278800
                '&XREQUEST' NE 'DELETE').ENTRYKEYERROR002               01278900
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01279000
               ith the ENTRYID key when REQUEST=&XREQUEST is specified' 01279100
&ZMACRET SETA  8                                                        01279200
.ENTRYKEYERROR002 ANOP ,                                                01279300
.*                                                                      01279400
         AIF   ('&XREQUEST' NE 'WRITE'            OR                   *01279500
                '&XENTRYTYPE' NE 'OLD').ENTRYKEYERROR003                01279600
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01279700
               ith the ENTRYID key when REQUEST=WRITE is specified with*01279800
                ENTRYTYPE=OLD'                                          01279900
&ZMACRET SETA  8                                                        01280000
.ENTRYKEYERROR003 ANOP ,                                                01280100
.*                                                                      01280200
         AIF   ('&XREQUEST' NE 'MOVE'             OR                   *01280300
                ('&XDATAOPER' NE 'NONE'           AND                  *01280400
                 '&XDATAOPER' NE 'READ')).ENTRYKEYERROR004              01280500
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01280600
               ith the ENTRYID key when REQUEST=MOVE is specified with *01280700
               DATAOPER=NONE!READ'                                      01280800
&ZMACRET SETA  8                                                        01280900
.ENTRYKEYERROR004 ANOP ,                                                01281000
.*                                                                      01281100
         AIF   ('&XREQUEST' NE 'MOVE'             OR                   *01281200
                '&XDATAOPER' NE 'WRITE'           OR                   *01281300
                '&XENTRYTYPE' NE 'OLD').ENTRYKEYERROR005                01281400
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01281500
               ith the ENTRYID key when REQUEST=MOVE is specified with *01281600
               DATAOPER=WRITE and ENTRYTYPE=OLD'                        01281700
&ZMACRET SETA  8                                                        01281800
.ENTRYKEYERROR005 ANOP ,                                                01281900
.NOTBOTHKEYANDLEID ANOP ,                                               01282000
.*                                                                      01282100
         AIF   ('&XLOCBYCURSOR' NE 'LOCBYCURSOR').NOTBOTHKEYANDLBYC     01282200
.*                                                                      01282300
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01282400
                '&XREQUEST' NE 'READ_LIST'        AND                  *01282500
                '&XREQUEST' NE 'DELETE').ENTRYKEYERROR006          @D6A 01282600
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01282700
               ith the LOCBYCURSOR key when REQUEST=&XREQUEST is specif*01282800
               ied'                                                @D6A 01282900
&ZMACRET SETA  8                                                   @D6A 01283000
.ENTRYKEYERROR006 ANOP ,                                           @D6A 01283100
.*                                                                      01283200
         AIF   ('&XREQUEST' NE 'WRITE'            OR                   *01283300
                '&XENTRYTYPE' NE 'OLD').ENTRYKEYERROR007           @D6A 01283400
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01283500
               ith the LOCBYCURSOR key when REQUEST=WRITE is specified *01283600
               with ENTRYTYPE=OLD'                                 @D6A 01283700
&ZMACRET SETA  8                                                   @D6A 01283800
.ENTRYKEYERROR007 ANOP ,                                           @D6A 01283900
.*                                                                      01284000
         AIF   ('&XREQUEST' NE 'MOVE'             OR                   *01284100
                ('&XDATAOPER' NE 'NONE'           AND                  *01284200
                 '&XDATAOPER' NE 'READ')).ENTRYKEYERROR008         @D6A 01284300
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01284400
               ith the LOCBYCURSOR key when REQUEST=MOVE is specified w*01284500
               ith DATAOPER=NONE!READ'                             @D6A 01284600
&ZMACRET SETA  8                                                   @D6A 01284700
.ENTRYKEYERROR008 ANOP ,                                           @D6A 01284800
.*                                                                      01284900
         AIF   ('&XREQUEST' NE 'MOVE'             OR                   *01285000
                '&XDATAOPER' NE 'WRITE'           OR                   *01285100
                '&XENTRYTYPE' NE 'OLD').ENTRYKEYERROR009           @D6A 01285200
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01285300
               ith the LOCBYCURSOR key when REQUEST=MOVE is specified w*01285400
               ith DATAOPER=WRITE and ENTRYTYPE=OLD'               @D6A 01285500
&ZMACRET SETA  8                                                   @D6A 01285600
.ENTRYKEYERROR009 ANOP ,                                           @D6A 01285700
.NOTBOTHKEYANDLBYC ANOP ,                                          @D6A 01285800
.*                                                                      01285900
         AIF   ('&XENTRYNAME' EQ '').NOTBOTHKEYANDNAME             @P4C 01286000
.*                                                                      01286100
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01286200
                '&XREQUEST' NE 'READ_LIST'        AND                  *01286300
                '&XREQUEST' NE 'WRITE'            AND                  *01286400
                '&XREQUEST' NE 'DELETE'           AND                  *01286500
                '&XREQUEST' NE 'MOVE').ENTRYKEYERROR010            @D6C 01286600
         MNOTE 8,'IXLLIST ---> The ENTRYKEY key is mutually exclusive w*01286700
               ith the ENTRYNAME key'                                   01286800
&ZMACRET SETA  8                                                        01286900
.ENTRYKEYERROR010 ANOP ,                                           @D6C 01287000
.NOTBOTHKEYANDNAME ANOP ,                                               01287100
.ENTRYKEYNOTSPEC ANOP ,                                                 01287200
.ENTRYKEYEND     ANOP ,                                            @01A 01287300
.**                                                                  ** 01287400
.**  End of validity checking for EntryKey                           ** 01287500
.**------------------------------------------------------------------** 01287600
.**------------------------------------------------------------------** 01287700
.**  Validity checking for KeyReqType                                ** 01287800
.**                                                                  ** 01287900
.** AMG ensures that KeyReqType is only specified if EntryKey is     ** 01288000
.**   also specified.                                                ** 01288100
.**                                                                  ** 01288200
.** For Write EntryType(New), when EntryId or LocByCursor        @D6C** 01288300
.**   is specified,  Read_EMControls,  Monitor_Sublist           @01C** 01288400
.**   KeyReqType cannot be specified                                 ** 01288500
.**                                                                  ** 01288600
         AIF   ('&XKEYREQTYPE' EQ '').KEYREQTYPENOTSPEC            @P5A 01288700
.*                                                                      01288800
         AIF   ('&XREQUEST'   NE 'READ_EMCONTROLS'  AND                *01288900
                '&XREQUEST'   NE 'MONITOR_SUBLIST').KEYREQNOTREMC  @01A 01289000
         MNOTE 8,'IXLLIST ---> The KEYREQTYPE key is mutually exclusive*01289100
                with REQUEST=&XREQUEST.'                           @01A 01289200
&ZMACRET SETA  8                                                   @01A 01289300
.KEYREQNOTREMC ANOP ,                                              @01A 01289400
.*                                                                      01289500
         AIF   ('&XREQUEST'   NE 'WRITE'          OR                   *01289600
                '&XENTRYTYPE' NE 'NEW').KEYREQTYPEERROR001         @P5A 01289700
         MNOTE 8,'IXLLIST ---> The KEYREQTYPE key is mutually exclusive*01289800
                with REQUEST=WRITE when ENTRYTYPE=NEW is specified'     01289900
&ZMACRET SETA  8                                                   @P5A 01290000
.KEYREQTYPEERROR001 ANOP ,                                         @P5A 01290100
.*                                                                      01290200
         AIF   ('&XENTRYID'   EQ '').KEYREQTYPEERROR002            @D6C 01290300
         MNOTE 8,'IXLLIST ---> The KEYREQTYPE key is mutually exclusive*01290400
                with the ENTRYID key'                              @D6C 01290500
&ZMACRET SETA  8                                                   @P5A 01290600
.KEYREQTYPEERROR002 ANOP ,                                         @P5A 01290700
.*                                                                      01290800
         AIF   ('&XLOCBYCURSOR' NE 'LOCBYCURSOR').KEYREQTYPEERROR003    01290900
         MNOTE 8,'IXLLIST ---> The KEYREQTYPE key is mutually exclusive*01291000
                with the LOCBYCURSOR key'                          @D6C 01291100
&ZMACRET SETA  8                                                   @P5A 01291200
.KEYREQTYPEERROR003 ANOP ,                                         @P5A 01291300
.KEYREQTYPENOTSPEC ANOP ,                                          @P5A 01291400
.**                                                                  ** 01291500
.**  End of validity checking for KeyReqType                         ** 01291600
.**------------------------------------------------------------------** 01291700
.**------------------------------------------------------------------** 01291800
.**  Validity checking for AuthComp                              @D9A** 01291900
.**                                                                  ** 01292000
.** For Read, Read_List, Read_Mult, Write, Write_LControls,      @D9A** 01292100
.**   Move, Delete, Delete_Mult, Delete_EntryList                @D9A** 01292200
.**   AuthComp may be optionally specified                       @D9A** 01292300
.**                                                                  ** 01292400
.** For Read_LControls, Monitor_List, Lock, Read_EMControls,     @01C** 01292500
.**   Read_EQControls,  Deq_Eventq, Monitor_Eventq,              @01C** 01292600
.**   Monitor_Sublist,  Monitor_Sublists                         @01C** 01292700
.**   AuthComp cannot be specified                               @D9A** 01292800
.**                                                                  ** 01292900
         AIF   ('&XAUTHCOMP' EQ '').AUTHCOMPNOTSPEC                @D9A 01293000
.*                                                                      01293100
         AIF   ('&XREQUEST'  NE 'READ_LCONTROLS' AND                   *01293200
                '&XREQUEST'  NE 'MONITOR_LIST'   AND                   *01293300
                '&XREQUEST'  NE 'MONITOR_SUBLIST'  AND                 *01293400
                '&XREQUEST'  NE 'MONITOR_SUBLISTS' AND                 *01293500
                '&XREQUEST'  NE 'MONITOR_EVENTQ'   AND                 *01293600
                '&XREQUEST'  NE 'READ_EMCONTROLS'  AND                 *01293700
                '&XREQUEST'  NE 'READ_EQCONTROLS'  AND                 *01293800
                '&XREQUEST'  NE 'DEQ_EVENTQ'       AND                 *01293900
                '&XREQUEST'  NE 'LOCK').AUTHCOMPERROR001           @01C 01294000
         MNOTE 8,'IXLLIST ---> The AUTHCOMP key is mutually exclusive w*01294100
               ith REQUEST=&XREQUEST.'                             @D9A 01294200
&ZMACRET SETA  8                                                   @D9A 01294300
.AUTHCOMPERROR001 ANOP ,                                           @D9A 01294400
.AUTHCOMPNOTSPEC ANOP ,                                            @D9A 01294500
.**                                                                  ** 01294600
.**  End of validity checking for AuthComp                       @D9A** 01294700
.**------------------------------------------------------------------** 01294800
.**------------------------------------------------------------------** 01294900
.**  Validity checking for AuthCompType                          @D9A** 01295000
.**                                                                  ** 01295100
.** For Write_LControls                                          @D9A** 01295200
.**   AuthCompType cannot be specified                           @D9A** 01295300
.**                                                                  ** 01295400
.** All other checks are either performed by AMG or accomplished @D9A** 01295500
.** via the AuthComp checks above.                               @D9A** 01295600
.**                                                                  ** 01295700
         AIF   ('&XAUTHCOMPTYPE' EQ '').AUTHCOMPTYPENOTSPEC        @D9A 01295800
.*                                                                      01295900
         AIF   ('&XREQUEST' NE 'WRITE_LCONTROLS'                       *01296000
               ).AUTHCOMPTYPEERROR001                              @D9A 01296100
         MNOTE 8,'IXLLIST ---> The AUTHCOMPTYPE key is mutually exclusi*01296200
               ve with REQUEST=&XREQUEST.'                         @D9A 01296300
&ZMACRET SETA  8                                                   @D9A 01296400
.AUTHCOMPTYPEERROR001 ANOP ,                                       @D9A 01296500
.AUTHCOMPTYPENOTSPEC ANOP ,                                        @D9A 01296600
.**                                                                  ** 01296700
.**  End of validity checking for AuthCompType                   @D9A** 01296800
.**------------------------------------------------------------------** 01296900
.**------------------------------------------------------------------** 01297000
.**  Validity checking for NewAuth                               @D9A** 01297100
.**                                                                  ** 01297200
.** For Read, Write, Write_LControls, Move, Delete               @D9A** 01297300
.**   NewAuth may be optionally specified                        @D9A** 01297400
.**                                                                  ** 01297500
.** For Read_List, Read_Mult, Read_LControls, Delete_Mult,       @D9A** 01297600
.**   Delete_EntryList, Monitor_List, Lock, Read_EMControls,     @01C** 01297700
.**   Read_EQControls,  Deq_Eventq, Monitor_Eventq,              @01C** 01297800
.**   Monitor_Sublists, Monitor_Sublist                          @01C** 01297900
.**   NewAuth cannot be specified                                @D9A** 01298000
.**                                                                  ** 01298100
         AIF   ('&XNEWAUTH' EQ '').NEWAUTHNOTSPEC                  @D9A 01298200
.*                                                                      01298300
         AIF   ('&XREQUEST'  EQ 'READ'            OR                   *01298400
                '&XREQUEST'  EQ 'WRITE'           OR                   *01298500
                '&XREQUEST'  EQ 'WRITE_LCONTROLS' OR                   *01298600
                '&XREQUEST'  EQ 'MOVE'            OR                   *01298700
                '&XREQUEST'  EQ 'DELETE').NEWAUTHERROR001          @PKC 01298800
         MNOTE 8,'IXLLIST ---> The NEWAUTH key is mutually exclusive wi*01298900
               th REQUEST=&XREQUEST.'                              @D9A 01299000
&ZMACRET SETA  8                                                   @D9A 01299100
.NEWAUTHERROR001 ANOP ,                                            @D9A 01299200
.NEWAUTHNOTSPEC ANOP ,                                             @D9A 01299300
.**                                                                  ** 01299400
.**  End of validity checking for NewAuth                        @D9A** 01299500
.**------------------------------------------------------------------** 01299600
.**------------------------------------------------------------------** 01299700
.**  Validity checking for EntryId                                   ** 01299800
.**                                                                  ** 01299900
.** EntryId and LocByCursor are mutually exclusive               @D6A** 01300000
.**                                                                  ** 01300100
.** For Read_Mult, Read_LControls, Write EntryType(New),             ** 01300200
.**   Write_LControls, Delete_Mult, Delete_EntryList,                ** 01300300
.**   Monitor_List, Lock,  Read_EMControls,  Read_EQControls,    @01A** 01300400
.**   Deq_Eventq, Monitor_Eventq, Monitor_Sublist,               @01A** 01300500
.**   Monitor_Sublists                                           @01A** 01300600
.**   EntryId cannot be specified                                    ** 01300700
.**                                                                  ** 01300800
.** For Read, Read_List, Delete, Move DataOper(None!Read)            ** 01300900
.**   Write EntryType(Old) and Move DataOper(Write) EntryType(Old)   ** 01301000
.**   EntryId and EntryName are mutually exclusive                   ** 01301100
.**                                                                  ** 01301200
.** For Write EntryType(Any) and Move DataOper(Write) EntryType(Any) ** 01301300
.**   EntryId and EntryName are *NOT* mutually exclusive             ** 01301400
.**                                                                  ** 01301500
         AIF   ('&XENTRYID' EQ '').ENTRYIDNOTSPEC                  @P4C 01301600
.*                                                                      01301700
         AIF   ('&XLOCBYCURSOR' NE 'LOCBYCURSOR').ENTRYIDERROR007  @D6A 01301800
         MNOTE 8,'IXLLIST ---> The ENTRYID key is mutually exclusive wi*01301900
                th the LOCBYCURSOR key'                            @D6A 01302000
&ZMACRET SETA  8                                                   @D6A 01302100
.ENTRYIDERROR007 ANOP ,                                            @D6A 01302200
.*                                                                      01302300
         AIF   ('&XREQUEST' NE 'READ_MULT'        AND                  *01302400
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01302500
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01302600
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01302700
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01302800
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01302900
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01303000
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01303100
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01303200
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01303300
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01303400
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01303500
                '&XREQUEST' NE 'LOCK').ENTRYIDERROR001             @01C 01303600
         MNOTE 8,'IXLLIST ---> The ENTRYID key is mutually exclusive wi*01303700
               th REQUEST=&XREQUEST'                                    01303800
&ZMACRET SETA  8                                                        01303900
.ENTRYIDERROR001 ANOP ,                                                 01304000
.*                                                                      01304100
         AIF   ('&XREQUEST' NE 'WRITE' OR                              *01304200
                '&XENTRYTYPE' NE 'NEW').ENTRYIDERROR002                 01304300
         MNOTE 8,'IXLLIST ---> The ENTRYID key is mutually exclusive wi*01304400
               th REQUEST=WRITE when ENTRYTYPE=NEW is specified'        01304500
&ZMACRET SETA  8                                                        01304600
.ENTRYIDERROR002 ANOP ,                                                 01304700
.*                                                                      01304800
         AIF   ('&XENTRYNAME' EQ '').NOTBOTHLEIDANDNAME            @P4C 01304900
.*                                                                      01305000
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01305100
                '&XREQUEST' NE 'READ_LIST'        AND                  *01305200
                '&XREQUEST' NE 'DELETE').ENTRYIDERROR003                01305300
         MNOTE 8,'IXLLIST ---> The ENTRYID key is mutually exclusive wi*01305400
               th the ENTRYNAME key when REQUEST=&XREQUEST is specified*01305500
               '                                                        01305600
&ZMACRET SETA  8                                                        01305700
.ENTRYIDERROR003 ANOP ,                                                 01305800
.*                                                                      01305900
         AIF   ('&XREQUEST' NE 'MOVE'             OR                   *01306000
                ('&XDATAOPER' NE 'NONE'           AND                  *01306100
                 '&XDATAOPER' NE 'READ')).ENTRYIDERROR004               01306200
         MNOTE 8,'IXLLIST ---> The ENTRYID key is mutually exclusive wi*01306300
               th the ENTRYNAME key when REQUEST=MOVE with DATAOPER=NON*01306400
               E!READ is specified'                                     01306500
&ZMACRET SETA  8                                                        01306600
.ENTRYIDERROR004 ANOP ,                                                 01306700
.*                                                                      01306800
         AIF   ('&XREQUEST' NE 'WRITE'            OR                   *01306900
                '&XENTRYTYPE' NE 'OLD').ENTRYIDERROR005                 01307000
         MNOTE 8,'IXLLIST ---> The ENTRYID key is mutually exclusive wi*01307100
               th the ENTRYNAME key when REQUEST=WRITE with ENTRYTYPE=O*01307200
               LD is specified'                                         01307300
&ZMACRET SETA  8                                                        01307400
.ENTRYIDERROR005 ANOP ,                                                 01307500
.*                                                                      01307600
         AIF   ('&XREQUEST' NE 'MOVE'             OR                   *01307700
                '&XDATAOPER' NE 'WRITE'           OR                   *01307800
                '&XENTRYTYPE' NE 'OLD').ENTRYIDERROR006                 01307900
         MNOTE 8,'IXLLIST ---> The ENTRYID key is mutually exclusive wi*01308000
               th the ENTRYNAME key when REQUEST=MOVE with DATAOPER=WRI*01308100
               TE and ENTRYTYPE=OLD is specified'                       01308200
&ZMACRET SETA  8                                                        01308300
.ENTRYIDERROR006 ANOP ,                                                 01308400
.NOTBOTHLEIDANDNAME ANOP ,                                              01308500
.ENTRYIDNOTSPEC ANOP ,                                                  01308600
.**                                                                  ** 01308700
.**  End of validity checking for EntryId                            ** 01308800
.**------------------------------------------------------------------** 01308900
.**------------------------------------------------------------------** 01309000
.**  Validity checking for EntryName                                 ** 01309100
.**                                                                  ** 01309200
.** For Read_Mult, Read_LControls, Write_LControls, Delete_Mult,     ** 01309300
.**   Delete_EntryList, Monitor_List, Lock,  Read_EMControls,    @01C** 01309400
.**   Read_EQControls,  Deq_Eventq, Monitor_Eventq,              @01C** 01309500
.**   Monitor_Sublists, Monitor_Sublist                          @01C** 01309600
.**   EntryName cannot be specified                                  ** 01309700
.**                                                                  ** 01309800
.** For Read, Read_List, Delete, Move DataOper(None!Read),       @D6A** 01309900
.**   Write EntryType(Old) and Move DataOper(Write) EntryType(Old)   ** 01310000
.**   EntryName and LocByCursor are mutually exclusive           @D6A** 01310100
.**   All other checks were specified earlier                    @D6C** 01310200
.**                                                                  ** 01310300
.** For Write EntryType(Any) and Move DataOper(Write) EntryType(Any) ** 01310400
.**   EntryName and LocByCursor are *NOT* mutually exclusive     @D6A** 01310500
.**                                                                  ** 01310600
         AIF   ('&XENTRYNAME' EQ '').ENTRYNAMENOTSPEC              @P4C 01310700
.*                                                                      01310800
         AIF   ('&XREQUEST' NE 'READ_MULT'        AND                  *01310900
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01311000
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01311100
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01311200
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01311300
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01311400
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01311500
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01311600
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01311700
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01311800
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01311900
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01312000
                '&XREQUEST' NE 'LOCK').ENTRYNAMEERROR001           @01C 01312100
         MNOTE 8,'IXLLIST ---> The ENTRYNAME key is mutually exclusive *01312200
               with REQUEST=&XREQUEST'                                  01312300
&ZMACRET SETA  8                                                        01312400
.ENTRYNAMEERROR001 ANOP ,                                               01312500
.*                                                                      01312600
         AIF   ('&XLOCBYCURSOR' NE 'LOCBYCURSOR').NOTBOTHNAMEANDLBYC    01312700
.*                                                                      01312800
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01312900
                '&XREQUEST' NE 'READ_LIST'        AND                  *01313000
                '&XREQUEST' NE 'DELETE').ENTRYNAMEERROR002         @D6A 01313100
         MNOTE 8,'IXLLIST ---> The ENTRYNAME key is mutually exclusive *01313200
               with the LOCBYCURSOR key when REQUEST=&XREQUEST is speci*01313300
               fied'                                               @D6A 01313400
&ZMACRET SETA  8                                                   @D6A 01313500
.ENTRYNAMEERROR002 ANOP ,                                          @D6A 01313600
.*                                                                      01313700
         AIF   ('&XREQUEST' NE 'MOVE'             OR                   *01313800
                ('&XDATAOPER' NE 'NONE'           AND                  *01313900
                 '&XDATAOPER' NE 'READ')).ENTRYNAMEERROR003        @D6A 01314000
         MNOTE 8,'IXLLIST ---> The ENTRYNAME key is mutually exclusive *01314100
               with the LOCBYCURSOR key when REQUEST=MOVE with DATAOPER*01314200
               =NONE!READ is specified'                            @D6A 01314300
&ZMACRET SETA  8                                                   @D6A 01314400
.ENTRYNAMEERROR003 ANOP ,                                          @D6A 01314500
.*                                                                      01314600
         AIF   ('&XREQUEST' NE 'WRITE'            OR                   *01314700
                '&XENTRYTYPE' NE 'OLD').ENTRYNAMEERROR004          @D6A 01314800
         MNOTE 8,'IXLLIST ---> The ENTRYNAME key is mutually exclusive *01314900
               with the LOCBYCURSOR key when REQUEST=WRITE with ENTRYTY*01315000
               PE=OLD is specified'                                @D6A 01315100
&ZMACRET SETA  8                                                   @D6A 01315200
.ENTRYNAMEERROR004 ANOP ,                                          @D6A 01315300
.*                                                                      01315400
         AIF   ('&XREQUEST' NE 'MOVE'             OR                   *01315500
                '&XDATAOPER' NE 'WRITE'           OR                   *01315600
                '&XENTRYTYPE' NE 'OLD').ENTRYNAMEERROR005          @D6A 01315700
         MNOTE 8,'IXLLIST ---> The ENTRYNAME key is mutually exclusive *01315800
               with the LOCBYCURSOR key when REQUEST=MOVE with DATAOPER*01315900
               =WRITE and ENTRYTYPE=OLD is specified'              @D6A 01316000
&ZMACRET SETA  8                                                   @D6A 01316100
.ENTRYNAMEERROR005 ANOP ,                                          @D6A 01316200
.NOTBOTHNAMEANDLBYC ANOP ,                                         @D6A 01316300
.ENTRYNAMENOTSPEC ANOP ,                                                01316400
.**                                                                  ** 01316500
.**  End of validity checking for EntryName                          ** 01316600
.**------------------------------------------------------------------** 01316700
.**------------------------------------------------------------------** 01316800
.**  Validity checking for LocByCursor                           @D6A** 01316900
.**                                                                  ** 01317000
.** For Read_Mult, Read_LControls, Write EntryType(New),         @D6A** 01317100
.**   Write_LControls, Delete_Mult, Delete_EntryList,            @D6A** 01317200
.**   Monitor_List, Lock, Read_EMControls,  Read_EQControls,     @01C** 01317300
.**   Deq_Eventq, Monitor_Eventq, Monitor_Sublist,               @01C** 01317400
.**   Monitor_Sublists                                           @01C** 01317500
.**   LocByCursor cannot be specified                            @D6A** 01317600
.**                                                                  ** 01317700
.** For Read, Read_List, Write EntryType(Any!Old), Move, Delete  @D6A** 01317800
.**   All necessary checks have already been done                @D6A** 01317900
.**                                                                  ** 01318000
         AIF   ('&XLOCBYCURSOR' NE 'LOCBYCURSOR').LOCBYCURNOTSPEC  @D6A 01318100
.*                                                                      01318200
         AIF   ('&XREQUEST' NE 'READ_MULT'        AND                  *01318300
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01318400
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01318500
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01318600
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01318700
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01318800
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01318900
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01319000
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01319100
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01319200
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01319300
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01319400
                '&XREQUEST' NE 'LOCK').LOCBYCURERROR001            @01C 01319500
         MNOTE 8,'IXLLIST ---> The LOCBYCURSOR key is mutually exclusiv*01319600
               e with REQUEST=&XREQUEST'                           @D6A 01319700
&ZMACRET SETA  8                                                   @D6A 01319800
.LOCBYCURERROR001 ANOP ,                                           @D6A 01319900
.*                                                                      01320000
         AIF   ('&XREQUEST'   NE 'WRITE'          OR                   *01320100
                '&XENTRYTYPE' NE 'NEW').LOCBYCURERROR002           @D6A 01320200
         MNOTE 8,'IXLLIST ---> The LOCBYCURSOR key is mutually exclusiv*01320300
               e with REQUEST=WRITE when ENTRYTYPE=NEW is specified'    01320400
&ZMACRET SETA  8                                                   @D6A 01320500
.LOCBYCURERROR002 ANOP ,                                           @D6A 01320600
.*                                                                      01320700
.LOCBYCURNOTSPEC ANOP ,                                            @D6A 01320800
.**                                                                  ** 01320900
.**  End of validity checking for LocByCursor                    @D6A** 01321000
.**------------------------------------------------------------------** 01321100
.**------------------------------------------------------------------** 01321200
.**  Validity checking for UpdateCursor                          @D6A** 01321300
.**                                                                  ** 01321400
.** For Read_List, Read_Mult, Read_LControls,                    @D6A** 01321500
.**   Write_LControls, Delete_Mult, Delete_EntryList,            @D6A** 01321600
.**   Monitor_List, Lock, Move DataOper(Write) EntryType(Any),   @D6A** 01321700
.**   Read_EMControls, Read_EQControls,  Deq_Eventq,             @01C** 01321800
.**   Monitor_Eventq, Monitor_Sublist, Monitor_Sublists          @01C** 01321900
.**   UpdateCursor(Yes) cannot be specified                      @D6A** 01322000
.**                                                                  ** 01322100
.** For Read, Write, Move, Delete                                @D9C** 01322200
.**   UpdateCursor can be specified, no checks needed            @D6A** 01322300
.**                                                                  ** 01322400
         AIF   ('&XUPDATECURSOR' NE 'YES').UPDCURYESNOTSPEC        @D6A 01322500
.*                                                                      01322600
         AIF   ('&XREQUEST' NE 'READ_LIST'        AND                  *01322700
                '&XREQUEST' NE 'READ_MULT'        AND                  *01322800
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01322900
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01323000
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01323100
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01323200
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01323300
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01323400
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01323500
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01323600
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01323700
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01323800
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01323900
                '&XREQUEST' NE 'LOCK').UPDCURYESERROR001           @01C 01324000
         MNOTE 8,'IXLLIST ---> UPDATECURSOR=YES is mutually exclusive w*01324100
               ith REQUEST=&XREQUEST'                              @D6A 01324200
&ZMACRET SETA  8                                                   @D6A 01324300
.UPDCURYESERROR001 ANOP ,                                          @D6A 01324400
.*                                                                4@D9D 01324500
.*                                                                      01324600
.UPDCURYESNOTSPEC ANOP ,                                           @D6A 01324700
.**                                                                  ** 01324800
.**  End of validity checking for UpdateCursor                   @D6A** 01324900
.**------------------------------------------------------------------** 01325000
.**------------------------------------------------------------------** 01325100
.**  Validity checking for ListDir                               @D5A** 01325200
.**                                                                  ** 01325300
.** For Read_List requests and when UpdateCursor(Yes) is         @D5A** 01325400
.**   specified                                                  @D5A** 01325500
.**   ListDir(ToTail) is mutually exclusive with ListPos(Tail)   @D5A** 01325600
.**   ListDir(ToHead) is mutually exclusive with ListPos(Head)   @D5A** 01325700
.**                                                                  ** 01325800
.** For all other requests                                       @D5A** 01325900
.**   ListDir cannot be specified                                @D5A** 01326000
.**                                                                  ** 01326100
         AIF   ('&LISTDIR(1)' EQ '').LISTDIRNOTSPEC                @D5A 01326200
.*                                                                      01326300
         AIF   ('&XREQUEST' NE 'READ_MULT'          AND                *01326400
                '&XREQUEST' NE 'READ_LCONTROLS'     AND                *01326500
                '&XREQUEST' NE 'WRITE_LCONTROLS'    AND                *01326600
                '&XREQUEST' NE 'DELETE_MULT'        AND                *01326700
                '&XREQUEST' NE 'DELETE_ENTRYLIST'   AND                *01326800
                '&XREQUEST' NE 'MONITOR_LIST'       AND                *01326900
                '&XREQUEST' NE 'MONITOR_SUBLIST'    AND                *01327000
                '&XREQUEST' NE 'MONITOR_SUBLISTS'   AND                *01327100
                '&XREQUEST' NE 'MONITOR_EVENTQ'     AND                *01327200
                '&XREQUEST' NE 'READ_EMCONTROLS'    AND                *01327300
                '&XREQUEST' NE 'READ_EQCONTROLS'    AND                *01327400
                '&XREQUEST' NE 'DEQ_EVENTQ'         AND                *01327500
                '&XREQUEST' NE 'LOCK').LISTDIRERROR001             @01C 01327600
         MNOTE 8,'IXLLIST ---> The LISTDIR key is mutually exclusive wi*01327700
               th REQUEST=&XREQUEST'                               @D5A 01327800
&ZMACRET SETA  8                                                   @D5A 01327900
.LISTDIRERROR001 ANOP ,                                            @D5A 01328000
.*                                                                      01328100
         AIF   ('&XUPDATECURSOR' EQ 'YES'           OR                 *01328200
                ('&XREQUEST' NE 'READ'               AND               *01328300
                 '&XREQUEST' NE 'WRITE'              AND               *01328400
                 '&XREQUEST' NE 'MOVE'               AND               *01328500
                 '&XREQUEST' NE 'DELETE')).LISTDIRERROR002         @D6A 01328600
         MNOTE 8,'IXLLIST ---> The LISTDIR key is mutually exclusive wi*01328700
               th REQUEST=&XREQUEST when UPDATECURSOR=NO is specified' *01328800
                                                                   @D6A 01328900
&ZMACRET SETA  8                                                   @D6A 01329000
.LISTDIRERROR002 ANOP ,                                            @D6A 01329100
.*                                                                      01329200
         AIF   ('&XLISTDIR' NE 'TOTAIL'      OR                        *01329300
                '&XLISTPOS' NE 'TAIL').LISTDIRERROR003             @D6C 01329400
         MNOTE 8,'IXLLIST ---> LISTDIR=TOTAIL is mutually exclusive wit*01329500
               h with LISTPOS=TAIL'                                @D5A 01329600
&ZMACRET SETA  8                                                   @D5A 01329700
.LISTDIRERROR003 ANOP ,                                            @D5A 01329800
.*                                                                      01329900
         AIF   ('&XLISTDIR' NE 'TOHEAD'      OR                        *01330000
                '&XLISTPOS' NE 'HEAD').LISTDIRERROR004             @D6C 01330100
         MNOTE 8,'IXLLIST ---> LISTDIR=TOHEAD is mutually exclusive wit*01330200
               h with LISTPOS=HEAD'                                @D5A 01330300
&ZMACRET SETA  8                                                   @D5A 01330400
.LISTDIRERROR004 ANOP ,                                            @D5A 01330500
.*                                                                      01330600
.LISTDIRNOTSPEC ANOP ,                                             @D5A 01330700
.**                                                                  ** 01330800
.**  End of validity checking for ListDir                        @D5A** 01330900
.**------------------------------------------------------------------** 01331000
.**------------------------------------------------------------------** 01331100
.**  Validity checking for ListPos                               @D5C** 01331200
.**                                                                  ** 01331300
.** For Read_Mult, Read_LControls, Write_LControls, Delete_Mult,     ** 01331400
.**   Delete_EntryList, Monitor_List, Lock,  Read_EMControls,    @01C** 01331500
.**   Read_EQControls,  Deq_Eventq, Monitor_Eventq,              @01C** 01331600
.**   Monitor_Sublists, Monitor_Sublist                          @01C** 01331700
.**   ListPos cannot be specified                                @D5C** 01331800
.**                                                                  ** 01331900
.** For Read, Read_List, Write EntryType(Old), Delete, Move      @D5C** 01332000
.**   ListPos can only be specified if ListNum is specified      @D5C** 01332100
.**   --> AMG does this check                                    @D5A** 01332200
.**                                                                  ** 01332300
.** For Write EntryType(Any!New)                                 @D5C** 01332400
.**   ListPos may be specified, no restrictions                  @D5C** 01332500
.**                                                                  ** 01332600
.** For Read, Read_List, Write EntryType(Old), Delete, Move      @D5C** 01332700
.**   ListPos and EntryId are mutually exclusive                 @D5C** 01332800
.**   ListPos and EntryName are mutually exclusive               @D5C** 01332900
.**   ListPos and LocByCursor are mutually exclusive             @D6A** 01333000
.**                                                                  ** 01333100
.** For Write EntryType(Any!New)                                 @D5C** 01333200
.**   ListPos and EntryId are *NOT* mutually exclusive           @D5C** 01333300
.**   ListPos and EntryName are *NOT* mutually exclusive         @D5C** 01333400
.**   ListPos and LocByCursor are *NOT* mutually exclusive       @D6A** 01333500
.**                                                                  ** 01333600
.** For Read_List requests and when UpdateCursor(Yes) is         @D5A** 01333700
.**   specified                                                  @D5A** 01333800
.**   ListDir(ToTail) is mutually exclusive with ListPos(Tail)   @D5A** 01333900
.**   ListDir(ToHead) is mutually exclusive with ListPos(Head)   @D5A** 01334000
.**   --> This check is done with the ListDir verification       @D5A** 01334100
.**                                                                  ** 01334200
         AIF   ('&LISTPOS(1)' EQ '').LISTPOSNOTSPEC                @D5C 01334300
.*                                                                      01334400
         AIF   ('&XREQUEST' NE 'READ_MULT'        AND                  *01334500
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01334600
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01334700
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01334800
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01334900
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01335000
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01335100
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01335200
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01335300
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01335400
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01335500
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01335600
                '&XREQUEST' NE 'LOCK').LISTPOSERROR001             @01C 01335700
         MNOTE 8,'IXLLIST ---> The LISTPOS key is mutually exclusive wi*01335800
               th REQUEST=&XREQUEST'                               @D5C 01335900
&ZMACRET SETA  8                                                        01336000
.LISTPOSERROR001 ANOP ,                                            @D5C 01336100
.*                                                                      01336200
         AIF   ('&XENTRYID' EQ '').NOTBOTHLISTPOSANDENTRYID        @D5C 01336300
.*                                                                      01336400
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01336500
                '&XREQUEST' NE 'READ_LIST'        AND                  *01336600
                '&XREQUEST' NE 'MOVE'             AND                  *01336700
                '&XREQUEST' NE 'DELETE').LISTPOSERROR004           @D6C 01336800
         MNOTE 8,'IXLLIST ---> The LISTPOS key is mutually exclusive wi*01336900
               th the ENTRYID key for REQUEST=&XREQUEST'           @D5C 01337000
&ZMACRET SETA  8                                                        01337100
.LISTPOSERROR004 ANOP ,                                            @D5C 01337200
.*                                                                      01337300
         AIF   ('&XREQUEST' NE 'WRITE'            OR                   *01337400
                '&XENTRYTYPE' NE 'OLD').LISTPOSERROR005            @D5C 01337500
         MNOTE 8,'IXLLIST ---> The LISTPOS key is mutually exclusive wi*01337600
               th the ENTRYID key for REQUEST=WRITE when ENTRYTYPE=OLD *01337700
               is specified'                                       @D5C 01337800
&ZMACRET SETA  8                                                        01337900
.LISTPOSERROR005 ANOP ,                                            @D5C 01338000
.*                                                                      01338100
.NOTBOTHLISTPOSANDENTRYID ANOP ,                                   @D5C 01338200
.*                                                                      01338300
         AIF   ('&XENTRYNAME' EQ '').NOTBOTHLISTPOSANDENTRYNAME    @D5C 01338400
.*                                                                      01338500
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01338600
                '&XREQUEST' NE 'READ_LIST'        AND                  *01338700
                '&XREQUEST' NE 'MOVE'             AND                  *01338800
                '&XREQUEST' NE 'DELETE').LISTPOSERROR006           @D6C 01338900
         MNOTE 8,'IXLLIST ---> The LISTPOS key is mutually exclusive wi*01339000
               th the ENTRYNAME key for REQUEST=&XREQUEST'         @D5C 01339100
&ZMACRET SETA  8                                                        01339200
.LISTPOSERROR006 ANOP ,                                            @D5C 01339300
.*                                                                      01339400
         AIF   ('&XREQUEST' NE 'WRITE'            OR                   *01339500
                '&XENTRYTYPE' NE 'OLD').LISTPOSERROR007            @D5C 01339600
         MNOTE 8,'IXLLIST ---> The LISTPOS key is mutually exclusive wi*01339700
               th the ENTRYNAME key for REQUEST=WRITE when ENTRYTYPE=OL*01339800
               D is specified'                                     @D5C 01339900
&ZMACRET SETA  8                                                        01340000
.LISTPOSERROR007 ANOP ,                                            @D5C 01340100
.*                                                                      01340200
.NOTBOTHLISTPOSANDENTRYNAME ANOP ,                                 @D5C 01340300
.*                                                                      01340400
         AIF   ('&XLOCBYCURSOR' NE                                     *01340500
                'LOCBYCURSOR').NOTBOTHLISTPOSANDLOCBYCUR           @D6A 01340600
.*                                                                      01340700
         AIF   ('&XREQUEST' NE 'READ'             AND                  *01340800
                '&XREQUEST' NE 'READ_LIST'        AND                  *01340900
                '&XREQUEST' NE 'MOVE'             AND                  *01341000
                '&XREQUEST' NE 'DELETE').LISTPOSERROR008           @D6A 01341100
         MNOTE 8,'IXLLIST ---> The LISTPOS key is mutually exclusive wi*01341200
               th the LOCBYCURSOR key for REQUEST=&XREQUEST'       @D6A 01341300
&ZMACRET SETA  8                                                        01341400
.LISTPOSERROR008 ANOP ,                                            @D6A 01341500
.*                                                                      01341600
         AIF   ('&XREQUEST' NE 'WRITE'            OR                   *01341700
                '&XENTRYTYPE' NE 'OLD').LISTPOSERROR009            @D6A 01341800
         MNOTE 8,'IXLLIST ---> The LISTPOS key is mutually exclusive wi*01341900
               th the LOCBYCURSOR key for REQUEST=WRITE when ENTRYTYPE=*01342000
               OLD is specified'                                   @D6A 01342100
&ZMACRET SETA  8                                                        01342200
.LISTPOSERROR009 ANOP ,                                            @D6A 01342300
.*                                                                      01342400
.NOTBOTHLISTPOSANDLOCBYCUR ANOP ,                                  @D6A 01342500
.LISTPOSNOTSPEC ANOP ,                                             @D5C 01342600
.**                                                                  ** 01342700
.**  End of validity checking for ListPos                            ** 01342800
.**------------------------------------------------------------------** 01342900
.**------------------------------------------------------------------** 01343000
.**  Validity checking for ListKeyType                           @D9A** 01343100
.**                                                                  ** 01343200
.** For Write, Move                                              @D9A** 01343300
.**   ListKeyType may be optionally specified                    @D9A** 01343400
.**   ListKeyType(Move!Create!Any) is mutually exclusive with    @D9A** 01343500
.**     EntryName                                                @D9A** 01343600
.**                                                                  ** 01343700
.** For Read, Read_List, Read_Mult, Read_LControls,              @D9A** 01343800
.**   Write_LControls, Delete, Delete_Mult, Delete_EntryList,    @D9A** 01343900
.**   Monitor_List, Lock,  Read_EMControls,  Read_EQControls,    @01C** 01344000
.**   Deq_Eventq, Monitor_Eventq, Monitor_Sublist,               @01C** 01344100
.**   Monitor_Sublists                                           @01C** 01344200
.**   ListKeyType cannot be specified                            @D9A** 01344300
.**                                                                  ** 01344400
         AIF   ('&XLISTKEYTYPE' EQ '').LISTKEYTYPENOTSPEC          @D9A 01344500
.*                                                                      01344600
         AIF   ('&XREQUEST' EQ 'WRITE'  OR                             *01344700
                '&XREQUEST' EQ 'MOVE').LISTKEYTYPEERROR001         @D9A 01344800
         MNOTE 8,'IXLLIST ---> The LISTKEYTYPE key is mutually exclusiv*01344900
               e with REQUEST=&XREQUEST'                           @D9A 01345000
&ZMACRET SETA  8                                                   @D9A 01345100
.LISTKEYTYPEERROR001 ANOP ,                                        @D9A 01345200
.*                                                                      01345300
         AIF   ('&XLISTKEYTYPE' EQ 'NOLISTKEY' OR                      *01345400
                '&XENTRYNAME' EQ '').LISTKEYTYPEERROR002           @D9A 01345500
         MNOTE 8,'IXLLIST ---> LISTKEYTYPE=&XLISTKEYTYPE is mutually ex*01345600
               clusive with the ENTRYNAME key'                     @D9A 01345700
&ZMACRET SETA  8                                                   @D9A 01345800
.LISTKEYTYPEERROR002 ANOP ,                                        @D9A 01345900
.LISTKEYTYPENOTSPEC ANOP ,                                         @D9A 01346000
.**                                                                  ** 01346100
.**  End of validity checking for ListKeyType                    @D9A** 01346200
.**------------------------------------------------------------------** 01346300
.**------------------------------------------------------------------** 01346400
.**  Validity checking for KeyComp                               @D9A** 01346500
.**                                                                  ** 01346600
.** For Read_List, Read_Mult, Delete_Mult, Delete_EntryList      @D9A** 01346700
.**   KeyComp may optionally be specified                        @D9A** 01346800
.**   KeyComp is mutually exclusive with EntryKey, EntryName,    @D9A** 01346900
.**     and ListType(NameList)                                   @D9A** 01347000
.**                                                                  ** 01347100
.** For Read, Read_LControls, Write, Write_LControls, Move,      @D9A** 01347200
.**   Delete, Monitor_List, Lock,  Read_EMControls,              @01C** 01347300
.**   Read_EQControls, Deq_Eventq, Monitor_Eventq,               @01C** 01347400
.**   Monitor_Sublist, Monitor_Sublists                          @01C** 01347500
.**   KeyComp cannot be specified                                @D9A** 01347600
.**                                                                  ** 01347700
         AIF   ('&XKEYCOMP' EQ '').KEYCOMPNOTSPEC                  @D9A 01347800
.*                                                                      01347900
         AIF   ('&XREQUEST' EQ 'READ_LIST'         OR                  *01348000
                '&XREQUEST' EQ 'READ_MULT'         OR                  *01348100
                '&XREQUEST' EQ 'DELETE_MULT'       OR                  *01348200
                '&XREQUEST' EQ 'DELETE_ENTRYLIST').KEYCOMPERROR001 @D9A 01348300
         MNOTE 8,'IXLLIST ---> The KEYCOMP key is mutually exclusive wi*01348400
               th REQUEST=&XREQUEST'                               @D9A 01348500
&ZMACRET SETA  8                                                   @D9A 01348600
.KEYCOMPERROR001 ANOP ,                                            @D9A 01348700
.*                                                                      01348800
         AIF   ('&XENTRYKEY' EQ '').KEYCOMPERROR002                @D9A 01348900
         MNOTE 8,'IXLLIST ---> The KEYCOMP key is mutually exclusive wi*01349000
               th the ENTRYKEY key'                                @D9A 01349100
&ZMACRET SETA  8                                                   @D9A 01349200
.KEYCOMPERROR002 ANOP ,                                            @D9A 01349300
.*                                                                      01349400
         AIF   ('&XENTRYNAME' EQ '').KEYCOMPERROR003               @D9A 01349500
         MNOTE 8,'IXLLIST ---> The KEYCOMP key is mutually exclusive wi*01349600
               th the ENTRYNAME key'                               @D9A 01349700
&ZMACRET SETA  8                                                   @D9A 01349800
.KEYCOMPERROR003 ANOP ,                                            @D9A 01349900
.*                                                                      01350000
         AIF   ('&XLISTTYPE' NE 'NAMELIST').KEYCOMPERROR004        @D9A 01350100
         MNOTE 8,'IXLLIST ---> The KEYCOMP key is mutually exclusive wi*01350200
               th LISTTYPE=NAMELIST'                               @D9A 01350300
&ZMACRET SETA  8                                                   @D9A 01350400
.KEYCOMPERROR004 ANOP ,                                            @D9A 01350500
.KEYCOMPNOTSPEC ANOP ,                                             @D9A 01350600
.**                                                                  ** 01350700
.**  End of validity checking for KeyComp                        @D9A** 01350800
.**------------------------------------------------------------------** 01350900
.**------------------------------------------------------------------** 01351000
.**  Validity checking for VersComp                                  ** 01351100
.**                                                                  ** 01351200
.** For Read_LControls, Write_LControls, Monitor_List, Lock,         ** 01351300
.**   Read_EMControls,  Read_EQControls,  Deq_Eventq,            @01C** 01351400
.**   Monitor_Eventq,  Monitor_Sublist, Monitor_Sublists         @01C** 01351500
.**   VersComp cannot be specified                                   ** 01351600
.**                                                                  ** 01351700
.** For Read, Read_List, Read_Mult, Write, Delete, Delete_Mult,      ** 01351800
.**   Delete_EntryList, Move                                         ** 01351900
.**   VersComp may be specified, no restrictions                     ** 01352000
.**                                                                  ** 01352100
         AIF   ('&XVERSCOMP' EQ '').VERSCOMPNOTSPEC                @P4C 01352200
.*                                                                      01352300
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01352400
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01352500
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01352600
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01352700
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01352800
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01352900
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01353000
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01353100
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01353200
                '&XREQUEST' NE 'LOCK').VERSCOMPERROR001           @01C  01353300
         MNOTE 8,'IXLLIST ---> The VERSCOMP key is mutually exclusive w*01353400
               ith REQUEST=&XREQUEST'                                   01353500
&ZMACRET SETA  8                                                        01353600
.VERSCOMPERROR001 ANOP ,                                                01353700
.VERSCOMPNOTSPEC ANOP ,                                                 01353800
.**                                                                  ** 01353900
.**  End of validity checking for VersComp                           ** 01354000
.**------------------------------------------------------------------** 01354100
.**------------------------------------------------------------------** 01354200
.**  Validity checking for VersUpdate                                ** 01354300
.**                                                                  ** 01354400
.** For Read_List, Read_Mult, Read_LControls, Write_LControls,       ** 01354500
.**   Delete, Delete_Mult, Delete_EntryList, Monitor_List, Lock,     ** 01354600
.**   Read_EMControls,  Read_EQControls,  Deq_Eventq,            @01C** 01354700
.**   Monitor_Eventq, Monitor_Sublist, Monitor_Sublists          @01C** 01354800
.**   VersUpdate(Inc!Dec!Set) cannot be specified                    ** 01354900
.**                                                                  ** 01355000
.** For Read, Write, Move                                            ** 01355100
.**   VersUpdate may be specified, no restrictions                   ** 01355200
.**                                                                  ** 01355300
         AIF   ('&VERSUPDATE(1)' EQ '').VERSUPDATENOTSPEC               01355400
.*                                                                      01355500
         AIF   ('&XVERSUPDATE' EQ 'NONE').VERSUPDATENONESPEC            01355600
.*                                                                      01355700
         AIF   ('&XREQUEST' NE 'READ_LIST'        AND                  *01355800
                '&XREQUEST' NE 'READ_MULT'        AND                  *01355900
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01356000
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01356100
                '&XREQUEST' NE 'DELETE'           AND                  *01356200
                '&XREQUEST' NE 'DELETE_MULT'      AND                  *01356300
                '&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01356400
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01356500
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01356600
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01356700
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01356800
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01356900
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01357000
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01357100
                '&XREQUEST' NE 'LOCK').VERSUPDATEERROR001         @01C  01357200
         MNOTE 8,'IXLLIST ---> VERSUPDATE=INC!DEC!SET is mutually exclu*01357300
               sive with REQUEST=&XREQUEST'                             01357400
&ZMACRET SETA  8                                                        01357500
.VERSUPDATEERROR001 ANOP ,                                              01357600
.VERSUPDATENONESPEC ANOP ,                                              01357700
.VERSUPDATENOTSPEC ANOP ,                                               01357800
.**                                                                  ** 01357900
.**  End of validity checking for VersUpdate                         ** 01358000
.**------------------------------------------------------------------** 01358100
.**------------------------------------------------------------------** 01358200
.**  Validity checking for Mode                                      ** 01358300
.**                                                                  ** 01358400
.** a) Mode(AsyncNoResponse) is mutually exclusive with Buffer,      ** 01358500
.**    BufList, Request(Lock), Request(Monitor_List) Action(Start)   ** 01358600
.**                                                                  ** 01358700
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ASYNCNORESPONSENOTSPEC   01358800
.*                                                                      01358900
         AIF   ('&XREQUEST' NE 'LOCK').MODEERROR001                     01359000
         MNOTE 8,'IXLLIST ---> MODE=&XMODE is mutually exclusive with R*01359100
               EQUEST=LOCK'                                             01359200
&ZMACRET SETA  8                                                        01359300
.MODEERROR001 ANOP ,                                                    01359400
.*                                                                      01359500
         AIF   ('&XBUFFER'  EQ ''  AND                                 *01359600
                '&XBUFLIST' EQ '').MODEERROR002                         01359700
         MNOTE 8,'IXLLIST ---> MODE=&XMODE is mutually exclusive with t*01359800
               he BUFFER and BUFLIST keys'                              01359900
&ZMACRET SETA  8                                                        01360000
.MODEERROR002 ANOP ,                                                    01360100
.*                                                                      01360200
         AIF   ('&XREQUEST' NE 'MONITOR_LIST' OR                       *01360300
                '&XACTION'  NE 'START').MODEERROR003               @D7A 01360400
         MNOTE 8,'IXLLIST ---> MODE=&XMODE is mutually exclusive with R*01360500
               EQUEST=MONITOR_LIST when ACTION=START is specified' @D7A 01360600
&ZMACRET SETA  8                                                   @D7A 01360700
.MODEERROR003 ANOP ,                                               @D7A 01360800
.ASYNCNORESPONSENOTSPEC ANOP ,                                          01360900
.**                                                                  ** 01361000
.**  End of validity checking for Mode                               ** 01361100
.**------------------------------------------------------------------** 01361200
.**------------------------------------------------------------------** 01361300
.**  Validity checking for LockIndex                                 ** 01361400
.**                                                                  ** 01361500
.** For Read_LControls, Write_LControls, Monitor_List,           @D8C** 01361600
.**   Read_EMControls,  Read_EQControls,  Deq_Eventq,            @01C** 01361700
.**   Monitor_Eventq, Monitor_Sublist, Monitor_Sublists          @01C** 01361800
.**   LockIndex cannot be specified                                  ** 01361900
.**                                                                  ** 01362000
.** For Lock                                                         ** 01362100
.**   LockIndex must be specified                                    ** 01362200
.**                                                                  ** 01362300
.** For Read, Write, Move, Delete, Read_List, Read_Mult,         @D8C** 01362400
.**   Delete_Mult, Delete_EntryList                              @D8A** 01362500
.**   LockIndex and Mode(AsyncNoResponse) are mutually exclusive     ** 01362600
.**                                                                  ** 01362700
         AIF   ('&XLOCKINDEX' EQ '').LOCKINDEXNOTSPEC              @P4C 01362800
.*                                                                      01362900
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01363000
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01363100
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01363200
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01363300
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01363400
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01363500
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01363600
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01363700
                '&XREQUEST' NE 'MONITOR_LIST').LOCKINDEXERROR001   @01C 01363800
         MNOTE 8,'IXLLIST ---> The LOCKINDEX key is mutually exclusive *01363900
               with REQUEST=&XREQUEST'                                  01364000
&ZMACRET SETA  8                                                        01364100
.LOCKINDEXERROR001 ANOP ,                                               01364200
.*                                                                      01364300
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').LOCKINDEXERROR002        01364400
         MNOTE 8,'IXLLIST ---> The LOCKINDEX key is mutually exclusive *01364500
               with MODE=&XMODE'                                        01364600
&ZMACRET SETA  8                                                        01364700
.LOCKINDEXERROR002 ANOP ,                                               01364800
.*                                                                      01364900
.LOCKINDEXNOTSPEC ANOP ,                                                01365000
.*                                                                      01365100
         AIF   ('&XLOCKINDEX' NE '').LOCKINDEXSPEC                 @P4C 01365200
.*                                                                      01365300
.*                                                                      01365400
         AIF   ('&XREQUEST' NE 'LOCK').LOCKINDEXERROR003                01365500
         MNOTE 8,'IXLLIST ---> The LOCKINDEX key is required for REQUES*01365600
               T=&XREQUEST'                                             01365700
&ZMACRET SETA  8                                                        01365800
.LOCKINDEXERROR003 ANOP ,                                               01365900
.*                                                                      01366000
.*                                                                      01366100
.LOCKINDEXSPEC ANOP ,                                                   01366200
.**                                                                  ** 01366300
.**  End of validity checking for LockIndex                          ** 01366400
.**------------------------------------------------------------------** 01366500
.**------------------------------------------------------------------** 01366600
.**  Validity checking for LockOper/LockMode/LockComp                ** 01366700
.**                                                                  ** 01366800
.** a) LockOper(Set)                                                 ** 01366900
.**      LockMode and LockComp are mutually exclusive                ** 01367000
.**      LockOper(Set) and Request(Read_List!Read_Mult!          @D8A** 01367100
.**      Delete_Mult!Delete_EntryList) are mutually exclusive    @D8A** 01367200
.**                                                                  ** 01367300
.** b) LockOper(Reset)                                               ** 01367400
.**      LockOper(Reset) and Request(Read_List!Read_Mult!        @D8A** 01367500
.**      Delete_Mult!Delete_EntryList) are mutually exclusive    @D8A** 01367600
.**                                                                  ** 01367700
.** c) LockOper(NotHeld)                                             ** 01367800
.**      LockOper(NotHeld) and Request(Lock) are mutually exclusive  ** 01367900
.**      LockOper(NotHeld) and LockComp are mutually exclusive       ** 01368000
.**      LockMode(Uncond) and Request(Read_List!Read_Mult!       @D8A** 01368100
.**      Delete_Mult!Delete_EntryList) are mutually exclusive    @D8A** 01368200
.**                                                                  ** 01368300
.** d) LockOper(HeldBy)                                              ** 01368400
.**      LockOper(HeldBy) and Request(Lock) are mutually exclusive   ** 01368500
.**                                                                  ** 01368600
.** e) LockOper(Test)                                                ** 01368700
.**      LockOper(Test) may only be specified with Request(Lock)     ** 01368800
.**                                                                  ** 01368900
.** f) LockOper(ReadNext)                                            ** 01369000
.**      LockOper(ReadNext) may only be specified with Request(Lock) ** 01369100
.**                                                              @D5D** 01369200
.**                                                                  ** 01369300
         AIF   ('&LOCKOPER(1)' EQ '').LOCKOPERNOTSPEC                   01369400
.*                                                                      01369500
         AIF   ('&XLOCKOPER' NE 'SET').LOCKOPERSETNOTSPEC               01369600
.*                                                                      01369700
         AIF   ('&LOCKMODE(1)' EQ ''  OR                               *01369800
                '&XLOCKCOMP'   EQ 'NO_LOCKCOMP' OR                     *01369900
                '&XLOCKCOMP'   EQ '').LOCKERROR001                      01370000
         MNOTE 8,'IXLLIST ---> The LOCKMODE and LOCKCOMP keys are mutua*01370100
               lly exclusive'                                           01370200
&ZMACRET SETA  8                                                        01370300
.LOCKERROR001 ANOP ,                                                    01370400
.*                                                                      01370500
         AIF   ('&XREQUEST' NE 'READ_LIST'          AND                *01370600
                '&XREQUEST' NE 'READ_MULT'          AND                *01370700
                '&XREQUEST' NE 'DELETE_MULT'        AND                *01370800
                '&XREQUEST' NE 'DELETE_ENTRYLIST').LOCKERROR002    @D8A 01370900
         MNOTE 8,'IXLLIST ---> LOCKOPER=SET is mutually exclusive with *01371000
               REQUEST=&XREQUEST'                                  @D8A 01371100
&ZMACRET SETA  8                                                   @D8A 01371200
.LOCKERROR002 ANOP ,                                               @D8A 01371300
.LOCKOPERSETNOTSPEC ANOP ,                                              01371400
.*                                                                      01371500
         AIF   ('&XLOCKOPER' NE 'RESET').LOCKOPERRESETNOTSPEC      @D8A 01371600
.*                                                                      01371700
         AIF   ('&XREQUEST' NE 'READ_LIST'          AND                *01371800
                '&XREQUEST' NE 'READ_MULT'          AND                *01371900
                '&XREQUEST' NE 'DELETE_MULT'        AND                *01372000
                '&XREQUEST' NE 'DELETE_ENTRYLIST').LOCKERROR003    @D8A 01372100
         MNOTE 8,'IXLLIST ---> LOCKOPER=RESET is mutually exclusive wit*01372200
               h REQUEST=&XREQUEST'                                @D8A 01372300
&ZMACRET SETA  8                                                   @D8A 01372400
.LOCKERROR003 ANOP ,                                               @D8A 01372500
.LOCKOPERRESETNOTSPEC ANOP ,                                       @D8A 01372600
.*                                                                      01372700
         AIF   ('&XLOCKOPER' NE 'NOTHELD').LOCKOPERNOTHELDNOTSPEC       01372800
.*                                                                      01372900
         AIF   ('&XREQUEST' NE 'LOCK').LOCKERROR004                     01373000
         MNOTE 8,'IXLLIST ---> LOCKOPER=NOTHELD is mutually exclusive w*01373100
               ith REQUEST=LOCK'                                        01373200
&ZMACRET SETA  8                                                        01373300
.LOCKERROR004 ANOP ,                                                    01373400
.*                                                                      01373500
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01373600
                '&XLOCKCOMP' EQ '').LOCKERROR005                        01373700
         MNOTE 8,'IXLLIST ---> LOCKOPER=NOTHELD is mutually exclusive w*01373800
               ith the LOCKCOMP key'                                    01373900
&ZMACRET SETA  8                                                        01374000
.LOCKERROR005 ANOP ,                                                    01374100
.*                                                                      01374200
         AIF   ('&XLOCKMODE' NE 'UNCOND'            OR                 *01374300
                ('&XREQUEST' NE 'READ_LIST'          AND               *01374400
                 '&XREQUEST' NE 'READ_MULT'          AND               *01374500
                 '&XREQUEST' NE 'DELETE_MULT'        AND               *01374600
                 '&XREQUEST' NE 'DELETE_ENTRYLIST')).LOCKERROR006  @D8A 01374700
         MNOTE 8,'IXLLIST ---> LOCKMODE=UNCOND is mutually exclusive wi*01374800
               th LOCKOPER=NOTHELD for REQUEST=&XREQUEST'          @D8A 01374900
&ZMACRET SETA  8                                                   @D8A 01375000
.LOCKERROR006 ANOP ,                                               @D8A 01375100
.LOCKOPERNOTHELDNOTSPEC ANOP ,                                          01375200
.*                                                                      01375300
         AIF   ('&XLOCKOPER' NE 'HELDBY').LOCKOPERHELDBYNOTSPEC         01375400
.*                                                                      01375500
         AIF   ('&XREQUEST' NE 'LOCK').LOCKERROR007                     01375600
         MNOTE 8,'IXLLIST ---> LOCKOPER=HELDBY is mutually exclusive wi*01375700
               th REQUEST=LOCK'                                         01375800
&ZMACRET SETA  8                                                        01375900
.LOCKERROR007 ANOP ,                                                    01376000
.LOCKOPERHELDBYNOTSPEC ANOP ,                                           01376100
.*                                                                      01376200
         AIF   ('&XLOCKOPER' NE 'TEST').LOCKOPERTESTNOTSPEC             01376300
.*                                                                      01376400
         AIF   ('&XREQUEST' EQ 'LOCK').LOCKERROR008                @D6C 01376500
         MNOTE 8,'IXLLIST ---> LOCKOPER=TEST is mutually exclusive with*01376600
                REQUEST=&XREQUEST'                                      01376700
&ZMACRET SETA  8                                                        01376800
.LOCKERROR008 ANOP ,                                                    01376900
.LOCKOPERTESTNOTSPEC ANOP ,                                             01377000
.*                                                                      01377100
         AIF   ('&XLOCKOPER' NE 'READNEXT').LOCKOPERREADNEXTNOTSPEC     01377200
.*                                                                      01377300
         AIF   ('&XREQUEST' EQ 'LOCK').LOCKERROR009                @D6C 01377400
         MNOTE 8,'IXLLIST ---> LOCKOPER=READNEXT is mutually exclusive *01377500
               with REQUEST=&XREQUEST'                                  01377600
&ZMACRET SETA  8                                                        01377700
.LOCKERROR009 ANOP ,                                                    01377800
.*                                                                      01377900
.*                                                                4@D5D 01378000
.LOCKOPERREADNEXTNOTSPEC ANOP ,                                         01378100
.*                                                                      01378200
.LOCKOPERNOTSPEC ANOP ,                                                 01378300
.**                                                                  ** 01378400
.**  End of validity checking for LockOper/LockMode/LockComp         ** 01378500
.**------------------------------------------------------------------** 01378600
.**------------------------------------------------------------------** 01378700
.**  Validity checking for MoveToKey                                 ** 01378800
.**                                                                  ** 01378900
.** MoveToKey is mutually exclusive with the EntryName key           ** 01379000
.**                                                                  ** 01379100
         AIF   ('&XMOVETOKEY' EQ '').MOVETOKEYNOTSPEC              @P4C 01379200
.*                                                                      01379300
         AIF   ('&XENTRYNAME' EQ '').MOVETOKEYERROR001             @P4C 01379400
         MNOTE 8,'IXLLIST ---> The MOVETOKEY key is mutually exclusive *01379500
               with the ENTRYNAME key'                                  01379600
&ZMACRET SETA  8                                                        01379700
.MOVETOKEYERROR001 ANOP ,                                               01379800
.MOVETOKEYNOTSPEC ANOP ,                                                01379900
.**                                                                  ** 01380000
.**  End of validity checking for MoveToKey                          ** 01380100
.**------------------------------------------------------------------** 01380200
.*                                                                      01380300
.ENDPARMVALIDATION ANOP ,                                               01380400
.*                                                                      01380500
.**------------------------------------------------------------------** 01380600
.**  End of code to validity check parameters                        ** 01380700
.**------------------------------------------------------------------** 01380800
.*                                                                      01380900
.*                                                                      01381000
.**------------------------------------------------------------------** 01381100
.**  Determine the parameter list version                        @DAA** 01381200
.**------------------------------------------------------------------** 01381300
.*                                                                      01381400
         LCLA  &LISTPLVERS                                         @DAA 01381500
.*                                                                      01381600
         AIF   (&XPLISTVER LE 1).SETPLVERSONE                      @DAA 01381700
&LISTPLVERS SETA  &XPLISTVER                                       @DAA 01381800
         AGO   .SETPLVERSEND                                       @DAA 01381900
.*                                                                      01382000
.SETPLVERSONE ANOP ,                                               @DAA 01382100
         AIF   (&XPLISTVER        NE 1              AND                *01382200
                ('&XREQUEST'       EQ 'WRITE_LCONTROLS'  OR            *01382300
                 ('&XAUTHCOMP'      EQ ''                 AND          *01382400
                  '&XNEWAUTH'       EQ ''))         AND                *01382500
                ('&XAUTHCOMPTYPE'  EQ 'EQUAL'            OR            *01382600
                 '&XAUTHCOMPTYPE'  EQ '')           AND                *01382700
                ('&XCURSORUPDTYPE' EQ 'NEXT'             OR            *01382800
                 '&XCURSORUPDTYPE' EQ '')           AND                *01382900
                ('&XLISTKEYTYPE'   EQ 'NOLISTKEY'        OR            *01383000
                 '&XLISTKEYTYPE'   EQ '')           AND                *01383100
                ('&XVERSCOMPTYPE'  EQ 'EQUAL'            OR            *01383200
                 '&XVERSCOMPTYPE'  EQ '')).SETPLVERSZERO           @DAA 01383300
&LISTPLVERS SETA  1                                                @DAA 01383400
         AGO   .SETPLVERSEND                                       @DAA 01383500
.*                                                                      01383600
.SETPLVERSZERO ANOP ,                                              @DAA 01383700
&LISTPLVERS SETA  0                                                @DAA 01383800
.SETPLVERSEND ANOP ,                                               @DAA 01383900
.*                                                                      01384000
         AIF  ('&XREQUEST'   NE  'READ_EMCONTROLS'    AND              *01384100
               '&XREQUEST'   NE  'READ_EQCONTROLS'    AND              *01384200
               '&XREQUEST'   NE  'MONITOR_SUBLIST'    AND              *01384300
               '&XREQUEST'   NE  'MONITOR_SUBLISTS'   AND              *01384400
               '&XREQUEST'   NE  'MONITOR_EVENTQ'     AND              *01384500
               '&XREQUEST'   NE  'DEQ_EVENTQ').NOTPLVER2           @01A 01384600
&LISTPLVERS SETA  2                                                @01A 01384700
.NOTPLVER2 ANOP ,                                                  @01A 01384800
.*                                                                      01384900
         AIF   (K'&PLISTVER(1) LE 0                      OR            *01385000
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *01385100
                &XPLISTVER     GE &LISTPLVERS).SETPLVERSUPDATE     @DAA 01385200
         MNOTE 8,' PLISTVER=&PLISTVER(1), BUT PLISTVER OF 1 IS REQUIRED*01385300
               .'                                                  @PLC 01385400
&ZMACRET SETA  8                                                   @DAA 01385500
         AGO   .SETPLVERSEND2                                      @DAA 01385600
.*                                                                      01385700
.SETPLVERSUPDATE ANOP ,                                            @DAA 01385800
&XPLISTVER  SETA  &LISTPLVERS                                      @DAA 01385900
.SETPLVERSEND2 ANOP ,                                              @DAA 01386000
.*                                                                      01386100
.**------------------------------------------------------------------** 01386200
.**  End of user macasm code                                         ** 01386300
.**------------------------------------------------------------------** 01386400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01386500
.********************************************************************   01386600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     01386700
.********************************************************************   01386800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       01386900
                      LCLA  &ZOPN1         INVOCATION INDEX             01387000
                      LCLC  &ZOPL(4095)    LABEL                        01387100
                      LCLC  &ZOPO(4095)    OPERATION                    01387200
                      LCLC  &ZOPV(4095)    VALUE                        01387300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  01387400
.*                                                                      01387500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     01387600
.******************************************************************     01387700
.***AL.L10 IXLLIST FMT=LIST MF=S!L PARAMETERS                           01387800
.******************************************************************     01387900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     01388000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     01388100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          01388200
&XMFATTR              SETC  '0D'                                        01388300
.*                                                                      01388400
&ZOPN                 SETA  &ZOPN+1                                     01388500
&ZOPL(&ZOPN)          SETC  ' '                                         01388600
                      AIF   (&SYSALVL NE 0).ZALVL6A                     01388700
&ZOPO(&ZOPN)          SETC  'B'                                         01388800
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                01388900
                      AGO   .ZALVL6B                                    01389000
.ZALVL6A              ANOP                                              01389100
&ZOPO(&ZOPN)          SETC  'CNOP'                                      01389200
&ZOPV(&ZOPN)          SETC  '4,8'                                       01389300
&ZOPN                 SETA  &ZOPN+1                                     01389400
&ZOPL(&ZOPN)          SETC  ' '                                         01389500
&ZOPO(&ZOPN)          SETC  'BRAS'                                      01389600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              01389700
.ZALVL6B              ANOP                                              01389800
&ZOPD(&ZOPN)          SETC  '++ IXLLIST ARG PARMS'                      01389900
.*                                                                      01390000
&ZOPN                 SETA  &ZOPN+1                                     01390100
&ZOPL(&ZOPN)          SETC  ' '                                         01390200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     01390300
&ZOPV(&ZOPN)          SETC  '1'                                         01390400
&ZOPD(&ZOPN)          SETC  ' '                                         01390500
.*                                                                      01390600
.ZLMFSL2              ANOP  ,                                           01390700
.*-------------------------------------------------------------------   01390800
.***AM.L00  IXLLIST FMT=LIST name                                       01390900
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    01391000
&ZOPN                 SETA &ZOPN+1                                      01391100
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   01391200
&ZOPO(&ZOPN)          SETC 'EQU'                                        01391300
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   01391400
&ZOPD(&ZOPN)          SETC '++ IXLLIST NAME'                            01391500
.ZLMFSL2M             ANOP  ,                                           01391600
.*-------------------------------------------------------------------   01391700
.***AM.L01  IXLLIST FMT=LIST PARAMETERS                                 01391800
&ZOPN                 SETA &ZOPN+1                                      01391900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   01392000
&ZOPO(&ZOPN)          SETC 'DS'                                         01392100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   01392200
&ZOPD(&ZOPN)          SETC '++ IXLLIST PARM LIST'                       01392300
.*-------------------------------------------------------------------   01392400
.***AM.L09  XSHL_DATA CL96                                              01392500
&ZOPN                 SETA &ZOPN+1                                      01392600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHL_DATA'                        01392700
&ZOPO(&ZOPN)          SETC 'DS'                                         01392800
&ZOPV(&ZOPN)          SETC 'CL96'                                       01392900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01393000
.*-------------------------------------------------------------------   01393100
.***AM.L09  XMOB_DATA CL4                                               01393200
&ZOPN                 SETA &ZOPN+1                                      01393300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOB_DATA'                        01393400
&ZOPO(&ZOPN)          SETC 'DS'                                         01393500
&ZOPV(&ZOPN)          SETC 'CL4'                                        01393600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01393700
.*-------------------------------------------------------------------   01393800
.***AM.L09  XMCB_DATA1 CL112                                            01393900
&ZOPN                 SETA &ZOPN+1                                      01394000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA1'                       01394100
&ZOPO(&ZOPN)          SETC 'DS'                                         01394200
&ZOPV(&ZOPN)          SETC 'CL112'                                      01394300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01394400
.*-------------------------------------------------------------------   01394500
.***AM.L09  XMCB_DATA2 CL20                                             01394600
&ZOPN                 SETA &ZOPN+1                                      01394700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA2'                       01394800
&ZOPO(&ZOPN)          SETC 'DS'                                         01394900
&ZOPV(&ZOPN)          SETC 'CL20'                                       01395000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01395100
.*-------------------------------------------------------------------   01395200
.***AM.MLM2 SAVED LOCATION COUNTER                                      01395300
                      AIF  (&XPLISTVER GE 1).ZL5LA                      01395400
                      AIF  ('&ZENDBASEPL' NE '').ZL5LA                  01395500
&ZENDBASEPL           SETC 'YES'                                        01395600
&ZOPN                 SETA &ZOPN+1                                      01395700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01395800
&ZOPO(&ZOPN)          SETC 'EQU'                                        01395900
&ZOPV(&ZOPN)          SETC '*'                                          01396000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01396100
.ZL5LA                ANOP  ,                                           01396200
.*-------------------------------------------------------------------   01396300
.***AM.LVER1                                                            01396400
                      AIF  (&XPLISTVER LT 1).ZL5L                       01396500
.*-------------------------------------------------------------------   01396600
.*-------------------------------------------------------------------   01396700
.***AM.L09  XMCB_DATA3 CL44                                             01396800
&ZOPN                 SETA &ZOPN+1                                      01396900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA3'                       01397000
&ZOPO(&ZOPN)          SETC 'DS'                                         01397100
&ZOPV(&ZOPN)          SETC 'CL44'                                       01397200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01397300
.*-------------------------------------------------------------------   01397400
.***AM.LVER2                                                            01397500
.ZL5L                 ANOP  ,                                           01397600
.*-------------------------------------------------------------------   01397700
.*-------------------------------------------------------------------   01397800
.***AM.LVER1                                                            01397900
                      AIF  (&XPLISTVER LT 1).ZL6L                       01398000
.*-------------------------------------------------------------------   01398100
.*-------------------------------------------------------------------   01398200
.***AM.MLM1 SAVED LOCATION COUNTER                                      01398300
                      AIF  ('&ZENDBASEPL' NE '').ZL6LB                  01398400
&ZENDBASEPL           SETC 'YES'                                        01398500
&ZOPN                 SETA &ZOPN+1                                      01398600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01398700
&ZOPO(&ZOPN)          SETC 'EQU'                                        01398800
&ZOPV(&ZOPN)          SETC '*'                                          01398900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01399000
.ZL6LB                ANOP  ,                                           01399100
.*-------------------------------------------------------------------   01399200
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01399300
&ZOPN                 SETA &ZOPN+1                                      01399400
&ZOPL(&ZOPN)          SETC ' '                                          01399500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01399600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01399700
&ZOPD(&ZOPN)          SETC ' '                                          01399800
.*-------------------------------------------------------------------   01399900
.***AM.LVER2                                                            01400000
.ZL6L                 ANOP  ,                                           01400100
.*-------------------------------------------------------------------   01400200
.*-------------------------------------------------------------------   01400300
.***AM.LVER1                                                            01400400
                      AIF  (&XPLISTVER LT 1).ZL7L                       01400500
.*-------------------------------------------------------------------   01400600
.*-------------------------------------------------------------------   01400700
.***AM.L09  XMCB_DATA CL176                                             01400800
&ZOPN                 SETA &ZOPN+1                                      01400900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA'                        01401000
&ZOPO(&ZOPN)          SETC 'DS'                                         01401100
&ZOPV(&ZOPN)          SETC 'CL176'                                      01401200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01401300
.*-------------------------------------------------------------------   01401400
.***AM.LVER2                                                            01401500
.ZL7L                 ANOP  ,                                           01401600
.*-------------------------------------------------------------------   01401700
.*-------------------------------------------------------------------   01401800
.***AM.PJR1 DEFINED ON XSHL_DATA                                        01401900
&ZOPN                 SETA &ZOPN+1                                      01402000
&ZOPL(&ZOPN)          SETC ' '                                          01402100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01402200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+0'                                01402300
&ZOPD(&ZOPN)          SETC ' '                                          01402400
.*-------------------------------------------------------------------   01402500
.***AM.L02 XVERSION XL1                                                 01402600
&ZOPN                 SETA &ZOPN+1                                      01402700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         01402800
&ZOPO(&ZOPN)          SETC 'DS'                                         01402900
&ZOPV(&ZOPN)          SETC 'XL1'                                        01403000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          01403100
.*-------------------------------------------------------------------   01403200
.***AM.L09  XCMDCODE XL1                                                01403300
&ZOPN                 SETA &ZOPN+1                                      01403400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDCODE'                         01403500
&ZOPO(&ZOPN)          SETC 'DS'                                         01403600
&ZOPV(&ZOPN)          SETC 'XL1'                                        01403700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01403800
.*-------------------------------------------------------------------   01403900
.***AM.L09  XSHLFLGS CL4                                                01404000
&ZOPN                 SETA &ZOPN+1                                      01404100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS'                         01404200
&ZOPO(&ZOPN)          SETC 'DS'                                         01404300
&ZOPV(&ZOPN)          SETC 'CL4'                                        01404400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01404500
.*-------------------------------------------------------------------   01404600
.***AM.L09  XRSV0102 CL2                                                01404700
&ZOPN                 SETA &ZOPN+1                                      01404800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0102'                         01404900
&ZOPO(&ZOPN)          SETC 'DS'                                         01405000
&ZOPV(&ZOPN)          SETC 'CL2'                                        01405100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01405200
.*-------------------------------------------------------------------   01405300
.***AM.L09  XCOMPCONID XL1                                              01405400
&ZOPN                 SETA &ZOPN+1                                      01405500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPCONID'                       01405600
&ZOPO(&ZOPN)          SETC 'DS'                                         01405700
&ZOPV(&ZOPN)          SETC 'XL1'                                        01405800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01405900
.*-------------------------------------------------------------------   01406000
.***AM.L09  XBUFSTGKEY BL.8                                             01406100
&ZOPN                 SETA &ZOPN+1                                      01406200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSTGKEY'                       01406300
&ZOPO(&ZOPN)          SETC 'DS'                                         01406400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01406500
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSTGKEY '                           01406600
.*-------------------------------------------------------------------   01406700
.***AM.L09  XANSLEN XL2                                                 01406800
&ZOPN                 SETA &ZOPN+1                                      01406900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          01407000
&ZOPO(&ZOPN)          SETC 'DS'                                         01407100
&ZOPV(&ZOPN)          SETC 'XL2'                                        01407200
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              01407300
.*-------------------------------------------------------------------   01407400
.***AM.L09  XCONTOKEN CL16                                              01407500
&ZOPN                 SETA &ZOPN+1                                      01407600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        01407700
&ZOPO(&ZOPN)          SETC 'DS'                                         01407800
&ZOPV(&ZOPN)          SETC 'CL16'                                       01407900
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN '                            01408000
.*-------------------------------------------------------------------   01408100
.***AM.L09  XDATADDR CL12                                               01408200
&ZOPN                 SETA &ZOPN+1                                      01408300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADDR'                         01408400
&ZOPO(&ZOPN)          SETC 'DS'                                         01408500
&ZOPV(&ZOPN)          SETC 'CL12'                                       01408600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01408700
.*-------------------------------------------------------------------   01408800
.***AM.L09  XADJADDR CL8                                                01408900
&ZOPN                 SETA &ZOPN+1                                      01409000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJADDR'                         01409100
&ZOPO(&ZOPN)          SETC 'DS'                                         01409200
&ZOPV(&ZOPN)          SETC 'CL8'                                        01409300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01409400
.*-------------------------------------------------------------------   01409500
.***AM.L09  XANSADDR CL8                                                01409600
&ZOPN                 SETA &ZOPN+1                                      01409700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSADDR'                         01409800
&ZOPO(&ZOPN)          SETC 'DS'                                         01409900
&ZOPV(&ZOPN)          SETC 'CL8'                                        01410000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01410100
.*-------------------------------------------------------------------   01410200
.***AM.L09  XREQDATA CL8                                                01410300
&ZOPN                 SETA &ZOPN+1                                      01410400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQDATA'                         01410500
&ZOPO(&ZOPN)          SETC 'DS'                                         01410600
&ZOPV(&ZOPN)          SETC 'CL8'                                        01410700
&ZOPD(&ZOPN)          SETC '++ &ZXREQDATA '                             01410800
.*-------------------------------------------------------------------   01410900
.***AM.L09  XREQID CL8                                                  01411000
&ZOPN                 SETA &ZOPN+1                                      01411100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQID'                           01411200
&ZOPO(&ZOPN)          SETC 'DS'                                         01411300
&ZOPV(&ZOPN)          SETC 'CL8'                                        01411400
&ZOPD(&ZOPN)          SETC '++ &ZXREQID '                               01411500
.*-------------------------------------------------------------------   01411600
.***AM.L09  XOPTIONALDATA CL16                                          01411700
&ZOPN                 SETA &ZOPN+1                                      01411800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONALDATA'                    01411900
&ZOPO(&ZOPN)          SETC 'DS'                                         01412000
&ZOPV(&ZOPN)          SETC 'CL16'                                       01412100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01412200
.*-------------------------------------------------------------------   01412300
.***AM.L09  XSHLFLGSA CL4                                               01412400
&ZOPN                 SETA &ZOPN+1                                      01412500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA'                        01412600
&ZOPO(&ZOPN)          SETC 'DS'                                         01412700
&ZOPV(&ZOPN)          SETC 'CL4'                                        01412800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01412900
.*-------------------------------------------------------------------   01413000
.***AM.L09  XRSV0103 CL4                                                01413100
&ZOPN                 SETA &ZOPN+1                                      01413200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0103'                         01413300
&ZOPO(&ZOPN)          SETC 'DS'                                         01413400
&ZOPV(&ZOPN)          SETC 'CL4'                                        01413500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01413600
.*-------------------------------------------------------------------   01413700
.***AM.PJR1 DEFINED ON XSHLFLGS                                         01413800
&ZOPN                 SETA &ZOPN+1                                      01413900
&ZOPL(&ZOPN)          SETC ' '                                          01414000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01414100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                01414200
&ZOPD(&ZOPN)          SETC ' '                                          01414300
.*-------------------------------------------------------------------   01414400
.***AM.L03 XSHLFLGS1 BL.8                                               01414500
&ZOPN                 SETA &ZOPN+1                                      01414600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS1'                        01414700
&ZOPO(&ZOPN)          SETC 'DS'                                         01414800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01414900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01415000
.*                                                                      01415100
&ZOPN                 SETA  &ZOPN+1                                     01415200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFFER'                  01415300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01415400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01415500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01415600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER'                       01415700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01415800
.*                                                                      01415900
&ZOPN                 SETA  &ZOPN+1                                     01416000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFLIST'                 01416100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01416200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01416300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01416400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFLIST'                      01416500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01416600
.*                                                                      01416700
&ZOPN                 SETA  &ZOPN+1                                     01416800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ADJAREA'                 01416900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01417000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01417100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01417200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADJAREA'                      01417300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01417400
.*                                                                      01417500
&ZOPN                 SETA  &ZOPN+1                                     01417600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ANSAREA'                 01417700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01417800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01417900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01418000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANSAREA'                      01418100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01418200
.*                                                                      01418300
&ZOPN                 SETA  &ZOPN+1                                     01418400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAGEABLE_NO'                    01418500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01418600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01418700
&ZOPD(&ZOPN)          SETC  '++ XPAGEABLE.'                             01418800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           01418900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01419000
.*                                                                      01419100
&ZOPN                 SETA  &ZOPN+1                                     01419200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFSTGKEY'               01419300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01419400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01419500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01419600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFSTGKEY'                    01419700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01419800
.*                                                                      01419900
&ZOPN                 SETA  &ZOPN+1                                     01420000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRTYPE_REAL'               01420100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01420200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01420300
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRTYPE.'                          01420400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REAL'                         01420500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01420600
.*-------------------------------------------------------------------   01420700
.***AM.L03 XSHLFLGS2 BL.8                                               01420800
&ZOPN                 SETA &ZOPN+1                                      01420900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS2'                        01421000
&ZOPO(&ZOPN)          SETC 'DS'                                         01421100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01421200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01421300
.*                                                                      01421400
&ZOPN                 SETA  &ZOPN+1                                     01421500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCECB'                   01421600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01421700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01421800
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01421900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCECB'                      01422000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01422100
.*                                                                      01422200
&ZOPN                 SETA  &ZOPN+1                                     01422300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  01422400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01422500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01422600
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01422700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     01422800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01422900
.*                                                                      01423000
&ZOPN                 SETA  &ZOPN+1                                     01423100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCTOKEN'                 01423200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01423300
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01423400
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01423500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCTOKEN'                    01423600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01423700
.*                                                                      01423800
&ZOPN                 SETA  &ZOPN+1                                     01423900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCECB'                  01424000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01424100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01424200
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01424300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCECB'                     01424400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01424500
.*                                                                      01424600
&ZOPN                 SETA  &ZOPN+1                                     01424700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCEXIT'                 01424800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01424900
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01425000
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01425100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCEXIT'                    01425200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01425300
.*                                                                      01425400
&ZOPN                 SETA  &ZOPN+1                                     01425500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCTOKEN'                01425600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01425700
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01425800
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01425900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCTOKEN'                   01426000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01426100
.*                                                                      01426200
&ZOPN                 SETA  &ZOPN+1                                     01426300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCNORESPONSE'           01426400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01426500
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01426600
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01426700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCNORESPONSE'              01426800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01426900
.*-------------------------------------------------------------------   01427000
.***AM.L03 XSHLFLGS3 BL.8                                               01427100
&ZOPN                 SETA &ZOPN+1                                      01427200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS3'                        01427300
&ZOPO(&ZOPN)          SETC 'DS'                                         01427400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01427500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01427600
.*                                                                      01427700
&ZOPN                 SETA  &ZOPN+1                                     01427800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_SET'                   01427900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01428000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01428100
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01428200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SET'                          01428300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01428400
.*                                                                      01428500
&ZOPN                 SETA  &ZOPN+1                                     01428600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_RESET'                 01428700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01428800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01428900
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01429000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RESET'                        01429100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01429200
.*                                                                      01429300
&ZOPN                 SETA  &ZOPN+1                                     01429400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_NOTHELD'               01429500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01429600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01429700
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01429800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NOTHELD'                      01429900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01430000
.*                                                                      01430100
&ZOPN                 SETA  &ZOPN+1                                     01430200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_HELDBY'                01430300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01430400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01430500
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01430600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HELDBY'                       01430700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01430800
.*                                                                      01430900
&ZOPN                 SETA  &ZOPN+1                                     01431000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_TEST'                  01431100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01431200
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01431300
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01431400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TEST'                         01431500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01431600
.*                                                                      01431700
&ZOPN                 SETA  &ZOPN+1                                     01431800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKOPER_READNEXT'              01431900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01432000
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01432100
&ZOPD(&ZOPN)          SETC  '++ XLOCKOPER.'                             01432200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).READNEXT'                     01432300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01432400
.*                                                                      01432500
&ZOPN                 SETA  &ZOPN+1                                     01432600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOCKMODE_COND'                  01432700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01432800
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01432900
&ZOPD(&ZOPN)          SETC  '++ XLOCKMODE.'                             01433000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COND'                         01433100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01433200
.*                                                                      01433300
&ZOPN                 SETA  &ZOPN+1                                     01433400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_LOCKCOMP'                01433500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01433600
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01433700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01433800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCKCOMP'                     01433900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01434000
.*-------------------------------------------------------------------   01434100
.***AM.L03 XSHLFLGS4 BL.8                                               01434200
&ZOPN                 SETA &ZOPN+1                                      01434300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS4'                        01434400
&ZOPO(&ZOPN)          SETC 'DS'                                         01434500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01434600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01434700
.*                                                                      01434800
&ZOPN                 SETA  &ZOPN+1                                     01434900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ADJDATA'                   01435000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01435100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01435200
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 01435300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADJDATA'                      01435400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01435500
.*                                                                      01435600
&ZOPN                 SETA  &ZOPN+1                                     01435700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ECONTROLS'                 01435800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01435900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01436000
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 01436100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ECONTROLS'                    01436200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01436300
.*                                                                      01436400
&ZOPN                 SETA  &ZOPN+1                                     01436500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_EXTRESTOKEN'             01436600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01436700
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01436800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01436900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXTRESTOKEN'                  01437000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01437100
.*                                                                      01437200
&ZOPN                 SETA  &ZOPN+1                                     01437300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYREQASYNC'                   01437400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01437500
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01437600
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01437700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LIST'                         01437800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01437900
.*-------------------------------------------------------------------   01438000
.***AM.PJR1 DEFINED ON XCONTOKEN                                        01438100
&ZOPN                 SETA &ZOPN+1                                      01438200
&ZOPL(&ZOPN)          SETC ' '                                          01438300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01438400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+12'                               01438500
&ZOPD(&ZOPN)          SETC ' '                                          01438600
.*-------------------------------------------------------------------   01438700
.***AM.L09  XRSV0201 CL13                                               01438800
&ZOPN                 SETA &ZOPN+1                                      01438900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0201'                         01439000
&ZOPO(&ZOPN)          SETC 'DS'                                         01439100
&ZOPV(&ZOPN)          SETC 'CL13'                                       01439200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01439300
.*-------------------------------------------------------------------   01439400
.***AM.L09  XCONID XL1                                                  01439500
&ZOPN                 SETA &ZOPN+1                                      01439600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           01439700
&ZOPO(&ZOPN)          SETC 'DS'                                         01439800
&ZOPV(&ZOPN)          SETC 'XL1'                                        01439900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01440000
.*-------------------------------------------------------------------   01440100
.***AM.L09  XRSV0202 CL2                                                01440200
&ZOPN                 SETA &ZOPN+1                                      01440300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0202'                         01440400
&ZOPO(&ZOPN)          SETC 'DS'                                         01440500
&ZOPV(&ZOPN)          SETC 'CL2'                                        01440600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01440700
.*-------------------------------------------------------------------   01440800
.***AM.PJR1 DEFINED ON XDATADDR                                         01440900
&ZOPN                 SETA &ZOPN+1                                      01441000
&ZOPL(&ZOPN)          SETC ' '                                          01441100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01441200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01441300
&ZOPD(&ZOPN)          SETC ' '                                          01441400
.*-------------------------------------------------------------------   01441500
.***AM.L09 ALET XBUFFER F                                               01441600
&ZOPN                 SETA &ZOPN+1                                      01441700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ALET'                     01441800
&ZOPO(&ZOPN)          SETC 'DS'                                         01441900
&ZOPV(&ZOPN)          SETC 'F'                                          01442000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ALET'                          01442100
.*-------------------------------------------------------------------   01442200
.***AM.L09  XBUFSIZE F                                                  01442300
&ZOPN                 SETA &ZOPN+1                                      01442400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         01442500
&ZOPO(&ZOPN)          SETC 'DS'                                         01442600
&ZOPV(&ZOPN)          SETC 'F'                                          01442700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE '                             01442800
.*-------------------------------------------------------------------   01442900
.***AM.L09  XBUFFER A                                                   01443000
&ZOPN                 SETA &ZOPN+1                                      01443100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER'                          01443200
&ZOPO(&ZOPN)          SETC 'DS'                                         01443300
&ZOPV(&ZOPN)          SETC 'A'                                          01443400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER '                              01443500
.*-------------------------------------------------------------------   01443600
.***AM.PJR1 DEFINED ON XDATADDR                                         01443700
&ZOPN                 SETA &ZOPN+1                                      01443800
&ZOPL(&ZOPN)          SETC ' '                                          01443900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01444000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01444100
&ZOPD(&ZOPN)          SETC ' '                                          01444200
.*-------------------------------------------------------------------   01444300
.***AM.L09  XBUFALET F                                                  01444400
&ZOPN                 SETA &ZOPN+1                                      01444500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFALET'                         01444600
&ZOPO(&ZOPN)          SETC 'DS'                                         01444700
&ZOPV(&ZOPN)          SETC 'F'                                          01444800
&ZOPD(&ZOPN)          SETC '++ &ZXBUFALET '                             01444900
.*-------------------------------------------------------------------   01445000
.***AM.L09 ALET XBUFLIST F                                              01445100
&ZOPN                 SETA &ZOPN+1                                      01445200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST_ALET'                    01445300
&ZOPO(&ZOPN)          SETC 'DS'                                         01445400
&ZOPV(&ZOPN)          SETC 'F'                                          01445500
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST ALET'                         01445600
.*-------------------------------------------------------------------   01445700
.***AM.L09  XBUFLIST A                                                  01445800
&ZOPN                 SETA &ZOPN+1                                      01445900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         01446000
&ZOPO(&ZOPN)          SETC 'DS'                                         01446100
&ZOPV(&ZOPN)          SETC 'A'                                          01446200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST '                             01446300
.*-------------------------------------------------------------------   01446400
.***AM.PJR1 DEFINED ON XADJADDR                                         01446500
&ZOPN                 SETA &ZOPN+1                                      01446600
&ZOPL(&ZOPN)          SETC ' '                                          01446700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01446800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01446900
&ZOPD(&ZOPN)          SETC ' '                                          01447000
.*-------------------------------------------------------------------   01447100
.***AM.L09 ALET XADJAREA F                                              01447200
&ZOPN                 SETA &ZOPN+1                                      01447300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA_ALET'                    01447400
&ZOPO(&ZOPN)          SETC 'DS'                                         01447500
&ZOPV(&ZOPN)          SETC 'F'                                          01447600
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA ALET'                         01447700
.*-------------------------------------------------------------------   01447800
.***AM.L09  XADJAREA A                                                  01447900
&ZOPN                 SETA &ZOPN+1                                      01448000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA'                         01448100
&ZOPO(&ZOPN)          SETC 'DS'                                         01448200
&ZOPV(&ZOPN)          SETC 'A'                                          01448300
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA '                             01448400
.*-------------------------------------------------------------------   01448500
.***AM.PJR1 DEFINED ON XADJADDR                                         01448600
&ZOPN                 SETA &ZOPN+1                                      01448700
&ZOPL(&ZOPN)          SETC ' '                                          01448800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01448900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01449000
&ZOPD(&ZOPN)          SETC ' '                                          01449100
.*-------------------------------------------------------------------   01449200
.***AM.L09 ALET XMOSVECTOR F                                            01449300
&ZOPN                 SETA &ZOPN+1                                      01449400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOSVECTOR_ALET'                  01449500
&ZOPO(&ZOPN)          SETC 'DS'                                         01449600
&ZOPV(&ZOPN)          SETC 'F'                                          01449700
&ZOPD(&ZOPN)          SETC '++ &ZXMOSVECTOR ALET'                       01449800
.*-------------------------------------------------------------------   01449900
.***AM.L09  XMOSVECTOR A                                                01450000
&ZOPN                 SETA &ZOPN+1                                      01450100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOSVECTOR'                       01450200
&ZOPO(&ZOPN)          SETC 'DS'                                         01450300
&ZOPV(&ZOPN)          SETC 'A'                                          01450400
&ZOPD(&ZOPN)          SETC '++ &ZXMOSVECTOR '                           01450500
.*-------------------------------------------------------------------   01450600
.***AM.PJR1 DEFINED ON XANSADDR                                         01450700
&ZOPN                 SETA &ZOPN+1                                      01450800
&ZOPL(&ZOPN)          SETC ' '                                          01450900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01451000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+48'                               01451100
&ZOPD(&ZOPN)          SETC ' '                                          01451200
.*-------------------------------------------------------------------   01451300
.***AM.L09 ALET XANSAREA F                                              01451400
&ZOPN                 SETA &ZOPN+1                                      01451500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    01451600
&ZOPO(&ZOPN)          SETC 'DS'                                         01451700
&ZOPV(&ZOPN)          SETC 'F'                                          01451800
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         01451900
.*-------------------------------------------------------------------   01452000
.***AM.L09  XANSAREA A                                                  01452100
&ZOPN                 SETA &ZOPN+1                                      01452200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA'                         01452300
&ZOPO(&ZOPN)          SETC 'DS'                                         01452400
&ZOPV(&ZOPN)          SETC 'A'                                          01452500
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA '                             01452600
.*-------------------------------------------------------------------   01452700
.***AM.PJR1 DEFINED ON XREQDATA                                         01452800
&ZOPN                 SETA &ZOPN+1                                      01452900
&ZOPL(&ZOPN)          SETC ' '                                          01453000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01453100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01453200
&ZOPD(&ZOPN)          SETC ' '                                          01453300
.*-------------------------------------------------------------------   01453400
.***AM.L09  XREQECB A                                                   01453500
&ZOPN                 SETA &ZOPN+1                                      01453600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQECB'                          01453700
&ZOPO(&ZOPN)          SETC 'DS'                                         01453800
&ZOPV(&ZOPN)          SETC 'A'                                          01453900
&ZOPD(&ZOPN)          SETC '++ &ZXREQECB '                              01454000
.*-------------------------------------------------------------------   01454100
.***AM.L09  XRSV0203 CL4                                                01454200
&ZOPN                 SETA &ZOPN+1                                      01454300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0203'                         01454400
&ZOPO(&ZOPN)          SETC 'DS'                                         01454500
&ZOPV(&ZOPN)          SETC 'CL4'                                        01454600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01454700
.*-------------------------------------------------------------------   01454800
.***AM.PJR1 DEFINED ON XREQDATA                                         01454900
&ZOPN                 SETA &ZOPN+1                                      01455000
&ZOPL(&ZOPN)          SETC ' '                                          01455100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01455200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01455300
&ZOPD(&ZOPN)          SETC ' '                                          01455400
.*-------------------------------------------------------------------   01455500
.***AM.L09 ALET XREQTOKEN F                                             01455600
&ZOPN                 SETA &ZOPN+1                                      01455700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN_ALET'                   01455800
&ZOPO(&ZOPN)          SETC 'DS'                                         01455900
&ZOPV(&ZOPN)          SETC 'F'                                          01456000
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN ALET'                        01456100
.*-------------------------------------------------------------------   01456200
.***AM.L09  XREQTOKEN A                                                 01456300
&ZOPN                 SETA &ZOPN+1                                      01456400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        01456500
&ZOPO(&ZOPN)          SETC 'DS'                                         01456600
&ZOPV(&ZOPN)          SETC 'A'                                          01456700
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN '                            01456800
.*-------------------------------------------------------------------   01456900
.***AM.PJR1 DEFINED ON XSHLFLGSA                                        01457000
&ZOPN                 SETA &ZOPN+1                                      01457100
&ZOPL(&ZOPN)          SETC ' '                                          01457200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01457300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+88'                               01457400
&ZOPD(&ZOPN)          SETC ' '                                          01457500
.*-------------------------------------------------------------------   01457600
.***AM.L03 XSHLFLGSA1 BL.8                                              01457700
&ZOPN                 SETA &ZOPN+1                                      01457800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA1'                       01457900
&ZOPO(&ZOPN)          SETC 'DS'                                         01458000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01458100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01458200
.*                                                                      01458300
&ZOPN                 SETA  &ZOPN+1                                     01458400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTC'                 01458500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01458600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01458700
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01458800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTC'                      01458900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01459000
.*                                                                      01459100
&ZOPN                 SETA  &ZOPN+1                                     01459200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTE'                 01459300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01459400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01459500
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01459600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTE'                      01459700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01459800
.*                                                                      01459900
&ZOPN                 SETA  &ZOPN+1                                     01460000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MACUSED_IXLLSTM'                 01460100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01460200
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01460300
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01460400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IXLLSTM'                      01460500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01460600
.*-------------------------------------------------------------------   01460700
.***AM.L09  XSHLFLGSA2 BL.8                                             01460800
&ZOPN                 SETA &ZOPN+1                                      01460900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGSA2'                       01461000
&ZOPO(&ZOPN)          SETC 'DS'                                         01461100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01461200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01461300
.*-------------------------------------------------------------------   01461400
.***AM.PJR1 DEFINED ON XOPTIONALDATA                                    01461500
&ZOPN                 SETA &ZOPN+1                                      01461600
&ZOPL(&ZOPN)          SETC ' '                                          01461700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01461800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               01461900
&ZOPD(&ZOPN)          SETC ' '                                          01462000
.*-------------------------------------------------------------------   01462100
.***AM.L09  XLOCKDATA CL8                                               01462200
&ZOPN                 SETA &ZOPN+1                                      01462300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKDATA'                        01462400
&ZOPO(&ZOPN)          SETC 'DS'                                         01462500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01462600
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKDATA '                            01462700
.*-------------------------------------------------------------------   01462800
.***AM.L09  XRSV0204 CL8                                                01462900
&ZOPN                 SETA &ZOPN+1                                      01463000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0204'                         01463100
&ZOPO(&ZOPN)          SETC 'DS'                                         01463200
&ZOPV(&ZOPN)          SETC 'CL8'                                        01463300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01463400
.*-------------------------------------------------------------------   01463500
.***AM.PJR1 DEFINED ON XOPTIONALDATA                                    01463600
&ZOPN                 SETA &ZOPN+1                                      01463700
&ZOPL(&ZOPN)          SETC ' '                                          01463800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01463900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               01464000
&ZOPD(&ZOPN)          SETC ' '                                          01464100
.*-------------------------------------------------------------------   01464200
.***AM.L09  XEXTRESTOKEN CL16                                           01464300
&ZOPN                 SETA &ZOPN+1                                      01464400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKEN'                     01464500
&ZOPO(&ZOPN)          SETC 'DS'                                         01464600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01464700
&ZOPD(&ZOPN)          SETC '++ &ZXEXTRESTOKEN '                         01464800
.*-------------------------------------------------------------------   01464900
.***AM.PJR1 DEFINED ON XEXTRESTOKEN                                     01465000
&ZOPN                 SETA &ZOPN+1                                      01465100
&ZOPL(&ZOPN)          SETC ' '                                          01465200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01465300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               01465400
&ZOPD(&ZOPN)          SETC ' '                                          01465500
.*-------------------------------------------------------------------   01465600
.***AM.L09  XEXTRESTOKENTKN CL8                                         01465700
&ZOPN                 SETA &ZOPN+1                                      01465800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENTKN'                  01465900
&ZOPO(&ZOPN)          SETC 'DS'                                         01466000
&ZOPV(&ZOPN)          SETC 'CL8'                                        01466100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01466200
.*-------------------------------------------------------------------   01466300
.***AM.L09  XEXTRESTOKENPSVN CL8                                        01466400
&ZOPN                 SETA &ZOPN+1                                      01466500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENPSVN'                 01466600
&ZOPO(&ZOPN)          SETC 'DS'                                         01466700
&ZOPV(&ZOPN)          SETC 'CL8'                                        01466800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01466900
.*-------------------------------------------------------------------   01467000
.***AM.PJR1 DEFINED ON XMOB_DATA                                        01467100
&ZOPN                 SETA &ZOPN+1                                      01467200
&ZOPL(&ZOPN)          SETC ' '                                          01467300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01467400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               01467500
&ZOPD(&ZOPN)          SETC ' '                                          01467600
.*-------------------------------------------------------------------   01467700
.***AM.L09  XCMDLEN XL2                                                 01467800
&ZOPN                 SETA &ZOPN+1                                      01467900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDLEN'                          01468000
&ZOPO(&ZOPN)          SETC 'DS'                                         01468100
&ZOPV(&ZOPN)          SETC 'XL2'                                        01468200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01468300
.*-------------------------------------------------------------------   01468400
.***AM.L09  XBUFNUM XL1                                                 01468500
&ZOPN                 SETA &ZOPN+1                                      01468600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          01468700
&ZOPO(&ZOPN)          SETC 'DS'                                         01468800
&ZOPV(&ZOPN)          SETC 'XL1'                                        01468900
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM '                              01469000
.*-------------------------------------------------------------------   01469100
.***AM.L09  XBUFINCRNUM XL1                                             01469200
&ZOPN                 SETA &ZOPN+1                                      01469300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFINCRNUM'                      01469400
&ZOPO(&ZOPN)          SETC 'DS'                                         01469500
&ZOPV(&ZOPN)          SETC 'XL1'                                        01469600
&ZOPD(&ZOPN)          SETC '++ &ZXBUFINCRNUM '                          01469700
.*-------------------------------------------------------------------   01469800
.***AM.PJR1 DEFINED ON XMCB_DATA1                                       01469900
&ZOPN                 SETA &ZOPN+1                                      01470000
&ZOPL(&ZOPN)          SETC ' '                                          01470100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01470200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01470300
&ZOPD(&ZOPN)          SETC ' '                                          01470400
.*-------------------------------------------------------------------   01470500
.***AM.L09  XCCA CL1                                                    01470600
&ZOPN                 SETA &ZOPN+1                                      01470700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCA'                             01470800
&ZOPO(&ZOPN)          SETC 'DS'                                         01470900
&ZOPV(&ZOPN)          SETC 'CL1'                                        01471000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01471100
.*-------------------------------------------------------------------   01471200
.***AM.L09  XCCB CL1                                                    01471300
&ZOPN                 SETA &ZOPN+1                                      01471400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCB'                             01471500
&ZOPO(&ZOPN)          SETC 'DS'                                         01471600
&ZOPV(&ZOPN)          SETC 'CL1'                                        01471700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01471800
.*-------------------------------------------------------------------   01471900
.***AM.L09  XRSV0501 CL2                                                01472000
&ZOPN                 SETA &ZOPN+1                                      01472100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0501'                         01472200
&ZOPO(&ZOPN)          SETC 'DS'                                         01472300
&ZOPV(&ZOPN)          SETC 'CL2'                                        01472400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01472500
.*-------------------------------------------------------------------   01472600
.***AM.L09  XCMDFLGS1 BL.32                                             01472700
&ZOPN                 SETA &ZOPN+1                                      01472800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1'                        01472900
&ZOPO(&ZOPN)          SETC 'DS'                                         01473000
&ZOPV(&ZOPN)          SETC 'BL.32'                                      01473100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01473200
.*-------------------------------------------------------------------   01473300
.***AM.L09  XB8TO11 CL4                                                 01473400
&ZOPN                 SETA &ZOPN+1                                      01473500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XB8TO11'                          01473600
&ZOPO(&ZOPN)          SETC 'DS'                                         01473700
&ZOPV(&ZOPN)          SETC 'CL4'                                        01473800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01473900
.*-------------------------------------------------------------------   01474000
.***AM.L09  XLOCKINDEX F                                                01474100
&ZOPN                 SETA &ZOPN+1                                      01474200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKINDEX'                       01474300
&ZOPO(&ZOPN)          SETC 'DS'                                         01474400
&ZOPV(&ZOPN)          SETC 'F'                                          01474500
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKINDEX '                           01474600
.*-------------------------------------------------------------------   01474700
.***AM.L09  XLISTNUM F                                                  01474800
&ZOPN                 SETA &ZOPN+1                                      01474900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUM'                         01475000
&ZOPO(&ZOPN)          SETC 'DS'                                         01475100
&ZOPV(&ZOPN)          SETC 'F'                                          01475200
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUM '                             01475300
.*-------------------------------------------------------------------   01475400
.***AM.L09  XENTRYID CL12                                               01475500
&ZOPN                 SETA &ZOPN+1                                      01475600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYID'                         01475700
&ZOPO(&ZOPN)          SETC 'DS'                                         01475800
&ZOPV(&ZOPN)          SETC 'CL12'                                       01475900
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYID '                             01476000
.*-------------------------------------------------------------------   01476100
.***AM.L09  XNEWVERS CL8                                                01476200
&ZOPN                 SETA &ZOPN+1                                      01476300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWVERS'                         01476400
&ZOPO(&ZOPN)          SETC 'DS'                                         01476500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01476600
&ZOPD(&ZOPN)          SETC '++ &ZXNEWVERS '                             01476700
.*-------------------------------------------------------------------   01476800
.***AM.L09  XVERSCOMP CL8                                               01476900
&ZOPN                 SETA &ZOPN+1                                      01477000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP'                        01477100
&ZOPO(&ZOPN)          SETC 'DS'                                         01477200
&ZOPV(&ZOPN)          SETC 'CL8'                                        01477300
&ZOPD(&ZOPN)          SETC '++ &ZXVERSCOMP '                            01477400
.*-------------------------------------------------------------------   01477500
.***AM.L09  XAUTHCOMP1 CL16                                             01477600
&ZOPN                 SETA &ZOPN+1                                      01477700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAUTHCOMP1'                       01477800
&ZOPO(&ZOPN)          SETC 'DS'                                         01477900
&ZOPV(&ZOPN)          SETC 'CL16'                                       01478000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01478100
.*-------------------------------------------------------------------   01478200
.***AM.L09  XNEWAUTH1 CL16                                              01478300
&ZOPN                 SETA &ZOPN+1                                      01478400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWAUTH1'                        01478500
&ZOPO(&ZOPN)          SETC 'DS'                                         01478600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01478700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01478800
.*-------------------------------------------------------------------   01478900
.***AM.L09  XLISTDESC CL32                                              01479000
&ZOPN                 SETA &ZOPN+1                                      01479100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTDESC'                        01479200
&ZOPO(&ZOPN)          SETC 'DS'                                         01479300
&ZOPV(&ZOPN)          SETC 'CL32'                                       01479400
&ZOPD(&ZOPN)          SETC '++ &ZXLISTDESC '                            01479500
.*-------------------------------------------------------------------   01479600
.***AM.PJR1 DEFINED ON XCMDFLGS1                                        01479700
&ZOPN                 SETA &ZOPN+1                                      01479800
&ZOPL(&ZOPN)          SETC ' '                                          01479900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01480000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01480100
&ZOPD(&ZOPN)          SETC ' '                                          01480200
.*-------------------------------------------------------------------   01480300
.***AM.L09  XCMDFLGS1A CL1                                              01480400
&ZOPN                 SETA &ZOPN+1                                      01480500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1A'                       01480600
&ZOPO(&ZOPN)          SETC 'DS'                                         01480700
&ZOPV(&ZOPN)          SETC 'CL1'                                        01480800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01480900
.*-------------------------------------------------------------------   01481000
.***AM.L09  XCMDFLGS1B CL1                                              01481100
&ZOPN                 SETA &ZOPN+1                                      01481200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1B'                       01481300
&ZOPO(&ZOPN)          SETC 'DS'                                         01481400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01481500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01481600
.*-------------------------------------------------------------------   01481700
.***AM.L09  XCMDFLGS1C CL1                                              01481800
&ZOPN                 SETA &ZOPN+1                                      01481900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1C'                       01482000
&ZOPO(&ZOPN)          SETC 'DS'                                         01482100
&ZOPV(&ZOPN)          SETC 'CL1'                                        01482200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01482300
.*-------------------------------------------------------------------   01482400
.***AM.L09  XCMDFLGS1D CL1                                              01482500
&ZOPN                 SETA &ZOPN+1                                      01482600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS1D'                       01482700
&ZOPO(&ZOPN)          SETC 'DS'                                         01482800
&ZOPV(&ZOPN)          SETC 'CL1'                                        01482900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01483000
.*-------------------------------------------------------------------   01483100
.***AM.PJR1 DEFINED ON XCMDFLGS1A                                       01483200
&ZOPN                 SETA &ZOPN+1                                      01483300
&ZOPL(&ZOPN)          SETC ' '                                          01483400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01483500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01483600
&ZOPD(&ZOPN)          SETC ' '                                          01483700
.*-------------------------------------------------------------------   01483800
.***AM.L09  XELEMNUM XL1                                                01483900
&ZOPN                 SETA &ZOPN+1                                      01484000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMNUM'                         01484100
&ZOPO(&ZOPN)          SETC 'DS'                                         01484200
&ZOPV(&ZOPN)          SETC 'XL1'                                        01484300
&ZOPD(&ZOPN)          SETC '++ &ZXELEMNUM '                             01484400
.*-------------------------------------------------------------------   01484500
.***AM.PJR1 DEFINED ON XCMDFLGS1A                                       01484600
&ZOPN                 SETA &ZOPN+1                                      01484700
&ZOPL(&ZOPN)          SETC ' '                                          01484800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01484900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01485000
&ZOPD(&ZOPN)          SETC ' '                                          01485100
.*-------------------------------------------------------------------   01485200
.***AM.L09  XDBS BL.8                                                   01485300
&ZOPN                 SETA &ZOPN+1                                      01485400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS'                             01485500
&ZOPO(&ZOPN)          SETC 'DS'                                         01485600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01485700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01485800
.*-------------------------------------------------------------------   01485900
.***AM.PJR1 DEFINED ON XCMDFLGS1D                                       01486000
&ZOPN                 SETA &ZOPN+1                                      01486100
&ZOPL(&ZOPN)          SETC ' '                                          01486200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01486300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+107'                              01486400
&ZOPD(&ZOPN)          SETC ' '                                          01486500
.*-------------------------------------------------------------------   01486600
.***AM.L09  XUID3 CL1                                                   01486700
&ZOPN                 SETA &ZOPN+1                                      01486800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID3'                            01486900
&ZOPO(&ZOPN)          SETC 'DS'                                         01487000
&ZOPV(&ZOPN)          SETC 'CL1'                                        01487100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01487200
.*-------------------------------------------------------------------   01487300
.***AM.PJR1 DEFINED ON XB8TO11                                          01487400
&ZOPN                 SETA &ZOPN+1                                      01487500
&ZOPL(&ZOPN)          SETC ' '                                          01487600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01487700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01487800
&ZOPD(&ZOPN)          SETC ' '                                          01487900
.*-------------------------------------------------------------------   01488000
.***AM.L09  XRSV0502 CL3                                                01488100
&ZOPN                 SETA &ZOPN+1                                      01488200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0502'                         01488300
&ZOPO(&ZOPN)          SETC 'DS'                                         01488400
&ZOPV(&ZOPN)          SETC 'CL3'                                        01488500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01488600
.*-------------------------------------------------------------------   01488700
.***AM.L09  XCGLM CL1                                                   01488800
&ZOPN                 SETA &ZOPN+1                                      01488900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCGLM'                            01489000
&ZOPO(&ZOPN)          SETC 'DS'                                         01489100
&ZOPV(&ZOPN)          SETC 'CL1'                                        01489200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01489300
.*-------------------------------------------------------------------   01489400
.***AM.PJR1 DEFINED ON XB8TO11                                          01489500
&ZOPN                 SETA &ZOPN+1                                      01489600
&ZOPL(&ZOPN)          SETC ' '                                          01489700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01489800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01489900
&ZOPD(&ZOPN)          SETC ' '                                          01490000
.*-------------------------------------------------------------------   01490100
.***AM.L09  XSTARTINDEX XL2                                             01490200
&ZOPN                 SETA &ZOPN+1                                      01490300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTINDEX'                      01490400
&ZOPO(&ZOPN)          SETC 'DS'                                         01490500
&ZOPV(&ZOPN)          SETC 'XL2'                                        01490600
&ZOPD(&ZOPN)          SETC '++ &ZXSTARTINDEX '                          01490700
.*-------------------------------------------------------------------   01490800
.***AM.L09  XENDINDEX XL2                                               01490900
&ZOPN                 SETA &ZOPN+1                                      01491000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDINDEX'                        01491100
&ZOPO(&ZOPN)          SETC 'DS'                                         01491200
&ZOPV(&ZOPN)          SETC 'XL2'                                        01491300
&ZOPD(&ZOPN)          SETC '++ &ZXENDINDEX '                            01491400
.*-------------------------------------------------------------------   01491500
.***AM.PJR1 DEFINED ON XLOCKINDEX                                       01491600
&ZOPN                 SETA &ZOPN+1                                      01491700
&ZOPL(&ZOPN)          SETC ' '                                          01491800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01491900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+112'                              01492000
&ZOPD(&ZOPN)          SETC ' '                                          01492100
.*-------------------------------------------------------------------   01492200
.***AM.L09  XVECTORINDEX F                                              01492300
&ZOPN                 SETA &ZOPN+1                                      01492400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVECTORINDEX'                     01492500
&ZOPO(&ZOPN)          SETC 'DS'                                         01492600
&ZOPV(&ZOPN)          SETC 'F'                                          01492700
&ZOPD(&ZOPN)          SETC '++ &ZXVECTORINDEX '                         01492800
.*-------------------------------------------------------------------   01492900
.***AM.PJR1 DEFINED ON XENTRYID                                         01493000
&ZOPN                 SETA &ZOPN+1                                      01493100
&ZOPL(&ZOPN)          SETC ' '                                          01493200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01493300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+120'                              01493400
&ZOPD(&ZOPN)          SETC ' '                                          01493500
.*-------------------------------------------------------------------   01493600
.***AM.L09  XLISTLIMIT F                                                01493700
&ZOPN                 SETA &ZOPN+1                                      01493800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTLIMIT'                       01493900
&ZOPO(&ZOPN)          SETC 'DS'                                         01494000
&ZOPV(&ZOPN)          SETC 'F'                                          01494100
&ZOPD(&ZOPN)          SETC '++ &ZXLISTLIMIT '                           01494200
.*-------------------------------------------------------------------   01494300
.***AM.L09  XRSV0601 CL8                                                01494400
&ZOPN                 SETA &ZOPN+1                                      01494500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0601'                         01494600
&ZOPO(&ZOPN)          SETC 'DS'                                         01494700
&ZOPV(&ZOPN)          SETC 'CL8'                                        01494800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01494900
.*-------------------------------------------------------------------   01495000
.***AM.PJR1 DEFINED ON XAUTHCOMP1                                       01495100
&ZOPN                 SETA &ZOPN+1                                      01495200
&ZOPL(&ZOPN)          SETC ' '                                          01495300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01495400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01495500
&ZOPD(&ZOPN)          SETC ' '                                          01495600
.*-------------------------------------------------------------------   01495700
.***AM.L09  XENTRYNAME CL16                                             01495800
&ZOPN                 SETA &ZOPN+1                                      01495900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYNAME'                       01496000
&ZOPO(&ZOPN)          SETC 'DS'                                         01496100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01496200
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYNAME '                           01496300
.*-------------------------------------------------------------------   01496400
.***AM.PJR1 DEFINED ON XAUTHCOMP1                                       01496500
&ZOPN                 SETA &ZOPN+1                                      01496600
&ZOPL(&ZOPN)          SETC ' '                                          01496700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01496800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01496900
&ZOPD(&ZOPN)          SETC ' '                                          01497000
.*-------------------------------------------------------------------   01497100
.***AM.L09  XENTRYKEY CL16                                              01497200
&ZOPN                 SETA &ZOPN+1                                      01497300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEY'                        01497400
&ZOPO(&ZOPN)          SETC 'DS'                                         01497500
&ZOPV(&ZOPN)          SETC 'CL16'                                       01497600
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYKEY '                            01497700
.*-------------------------------------------------------------------   01497800
.***AM.PJR1 DEFINED ON XAUTHCOMP1                                       01497900
&ZOPN                 SETA &ZOPN+1                                      01498000
&ZOPL(&ZOPN)          SETC ' '                                          01498100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01498200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01498300
&ZOPD(&ZOPN)          SETC ' '                                          01498400
.*-------------------------------------------------------------------   01498500
.***AM.L09  XKEYCOMP CL16                                               01498600
&ZOPN                 SETA &ZOPN+1                                      01498700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYCOMP'                         01498800
&ZOPO(&ZOPN)          SETC 'DS'                                         01498900
&ZOPV(&ZOPN)          SETC 'CL16'                                       01499000
&ZOPD(&ZOPN)          SETC '++ &ZXKEYCOMP '                             01499100
.*-------------------------------------------------------------------   01499200
.***AM.PJR1 DEFINED ON XAUTHCOMP1                                       01499300
&ZOPN                 SETA &ZOPN+1                                      01499400
&ZOPL(&ZOPN)          SETC ' '                                          01499500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01499600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01499700
&ZOPD(&ZOPN)          SETC ' '                                          01499800
.*-------------------------------------------------------------------   01499900
.***AM.L09  XUID2 CL1                                                   01500000
&ZOPN                 SETA &ZOPN+1                                      01500100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID2'                            01500200
&ZOPO(&ZOPN)          SETC 'DS'                                         01500300
&ZOPV(&ZOPN)          SETC 'CL1'                                        01500400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01500500
.*-------------------------------------------------------------------   01500600
.***AM.L09  XRSV0602 CL15                                               01500700
&ZOPN                 SETA &ZOPN+1                                      01500800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0602'                         01500900
&ZOPO(&ZOPN)          SETC 'DS'                                         01501000
&ZOPV(&ZOPN)          SETC 'CL15'                                       01501100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01501200
.*-------------------------------------------------------------------   01501300
.***AM.PJR1 DEFINED ON XNEWAUTH1                                        01501400
&ZOPN                 SETA &ZOPN+1                                      01501500
&ZOPL(&ZOPN)          SETC ' '                                          01501600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01501700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+164'                              01501800
&ZOPD(&ZOPN)          SETC ' '                                          01501900
.*-------------------------------------------------------------------   01502000
.***AM.L09  XRESTOKEN CL8                                               01502100
&ZOPN                 SETA &ZOPN+1                                      01502200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTOKEN'                        01502300
&ZOPO(&ZOPN)          SETC 'DS'                                         01502400
&ZOPV(&ZOPN)          SETC 'CL8'                                        01502500
&ZOPD(&ZOPN)          SETC '++ &ZXRESTOKEN '                            01502600
.*-------------------------------------------------------------------   01502700
.***AM.L09  XRSV0603 CL8                                                01502800
&ZOPN                 SETA &ZOPN+1                                      01502900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0603'                         01503000
&ZOPO(&ZOPN)          SETC 'DS'                                         01503100
&ZOPV(&ZOPN)          SETC 'CL8'                                        01503200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01503300
.*-------------------------------------------------------------------   01503400
.***AM.PJR1 DEFINED ON XNEWAUTH1                                        01503500
&ZOPN                 SETA &ZOPN+1                                      01503600
&ZOPL(&ZOPN)          SETC ' '                                          01503700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01503800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+164'                              01503900
&ZOPD(&ZOPN)          SETC ' '                                          01504000
.*-------------------------------------------------------------------   01504100
.***AM.L09  XFIRSTELEM XL2                                              01504200
&ZOPN                 SETA &ZOPN+1                                      01504300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFIRSTELEM'                       01504400
&ZOPO(&ZOPN)          SETC 'DS'                                         01504500
&ZOPV(&ZOPN)          SETC 'XL2'                                        01504600
&ZOPD(&ZOPN)          SETC '++ &ZXFIRSTELEM '                           01504700
.*-------------------------------------------------------------------   01504800
.***AM.L09  XLASTELEM XL2                                               01504900
&ZOPN                 SETA &ZOPN+1                                      01505000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLASTELEM'                        01505100
&ZOPO(&ZOPN)          SETC 'DS'                                         01505200
&ZOPV(&ZOPN)          SETC 'XL2'                                        01505300
&ZOPD(&ZOPN)          SETC '++ &ZXLASTELEM '                            01505400
.*-------------------------------------------------------------------   01505500
.***AM.L09  XRSV0604 CL8                                                01505600
&ZOPN                 SETA &ZOPN+1                                      01505700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0604'                         01505800
&ZOPO(&ZOPN)          SETC 'DS'                                         01505900
&ZOPV(&ZOPN)          SETC 'CL8'                                        01506000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01506100
.*-------------------------------------------------------------------   01506200
.***AM.L09  XCMDFLGS2A CL1                                              01506300
&ZOPN                 SETA &ZOPN+1                                      01506400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLGS2A'                       01506500
&ZOPO(&ZOPN)          SETC 'DS'                                         01506600
&ZOPV(&ZOPN)          SETC 'CL1'                                        01506700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01506800
.*-------------------------------------------------------------------   01506900
.***AM.L09  XRSV0605 CL3                                                01507000
&ZOPN                 SETA &ZOPN+1                                      01507100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0605'                         01507200
&ZOPO(&ZOPN)          SETC 'DS'                                         01507300
&ZOPV(&ZOPN)          SETC 'CL3'                                        01507400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01507500
.*-------------------------------------------------------------------   01507600
.***AM.PJR1 DEFINED ON XLISTDESC                                        01507700
&ZOPN                 SETA &ZOPN+1                                      01507800
&ZOPL(&ZOPN)          SETC ' '                                          01507900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01508000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+180'                              01508100
&ZOPD(&ZOPN)          SETC ' '                                          01508200
.*-------------------------------------------------------------------   01508300
.***AM.L09  XUID1 CL1                                                   01508400
&ZOPN                 SETA &ZOPN+1                                      01508500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUID1'                            01508600
&ZOPO(&ZOPN)          SETC 'DS'                                         01508700
&ZOPV(&ZOPN)          SETC 'CL1'                                        01508800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01508900
.*-------------------------------------------------------------------   01509000
.***AM.L09  XRSV0606 CL31                                               01509100
&ZOPN                 SETA &ZOPN+1                                      01509200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0606'                         01509300
&ZOPO(&ZOPN)          SETC 'DS'                                         01509400
&ZOPV(&ZOPN)          SETC 'CL31'                                       01509500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01509600
.*-------------------------------------------------------------------   01509700
.***AM.PJR1 DEFINED ON XMCB_DATA2                                       01509800
&ZOPN                 SETA &ZOPN+1                                      01509900
&ZOPL(&ZOPN)          SETC ' '                                          01510000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01510100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+212'                              01510200
&ZOPD(&ZOPN)          SETC ' '                                          01510300
.*-------------------------------------------------------------------   01510400
.***AM.L09  XMOVETOKEY0 CL16                                            01510500
&ZOPN                 SETA &ZOPN+1                                      01510600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOVETOKEY0'                      01510700
&ZOPO(&ZOPN)          SETC 'DS'                                         01510800
&ZOPV(&ZOPN)          SETC 'CL16'                                       01510900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01511000
.*-------------------------------------------------------------------   01511100
.***AM.L09  XMOVETOLIST0 F                                              01511200
&ZOPN                 SETA &ZOPN+1                                      01511300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOVETOLIST0'                     01511400
&ZOPO(&ZOPN)          SETC 'DS'                                         01511500
&ZOPV(&ZOPN)          SETC 'F'                                          01511600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01511700
.*-------------------------------------------------------------------   01511800
.***AM.LVER1                                                            01511900
                      AIF  (&XPLISTVER LT 1).ZL161L                     01512000
.*-------------------------------------------------------------------   01512100
.*-------------------------------------------------------------------   01512200
.***AM.PJR1 DEFINED ON XMCB_DATA                                        01512300
&ZOPN                 SETA &ZOPN+1                                      01512400
&ZOPL(&ZOPN)          SETC ' '                                          01512500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01512600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01512700
&ZOPD(&ZOPN)          SETC ' '                                          01512800
.*-------------------------------------------------------------------   01512900
.***AM.LVER2                                                            01513000
.ZL161L               ANOP  ,                                           01513100
.*-------------------------------------------------------------------   01513200
.*-------------------------------------------------------------------   01513300
.***AM.LVER1                                                            01513400
                      AIF  (&XPLISTVER LT 1).ZL162L                     01513500
.*-------------------------------------------------------------------   01513600
.*-------------------------------------------------------------------   01513700
.***AM.L09  XRSV0701 CL112                                              01513800
&ZOPN                 SETA &ZOPN+1                                      01513900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0701'                         01514000
&ZOPO(&ZOPN)          SETC 'DS'                                         01514100
&ZOPV(&ZOPN)          SETC 'CL112'                                      01514200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01514300
.*-------------------------------------------------------------------   01514400
.***AM.LVER2                                                            01514500
.ZL162L               ANOP  ,                                           01514600
.*-------------------------------------------------------------------   01514700
.*-------------------------------------------------------------------   01514800
.***AM.LVER1                                                            01514900
                      AIF  (&XPLISTVER LT 1).ZL163L                     01515000
.*-------------------------------------------------------------------   01515100
.*-------------------------------------------------------------------   01515200
.***AM.L09  XNEWAUTH2 CL16                                              01515300
&ZOPN                 SETA &ZOPN+1                                      01515400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWAUTH2'                        01515500
&ZOPO(&ZOPN)          SETC 'DS'                                         01515600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01515700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01515800
.*-------------------------------------------------------------------   01515900
.***AM.LVER2                                                            01516000
.ZL163L               ANOP  ,                                           01516100
.*-------------------------------------------------------------------   01516200
.*-------------------------------------------------------------------   01516300
.***AM.LVER1                                                            01516400
                      AIF  (&XPLISTVER LT 1).ZL164L                     01516500
.*-------------------------------------------------------------------   01516600
.*-------------------------------------------------------------------   01516700
.***AM.L09  XAUTHCOMP2 CL16                                             01516800
&ZOPN                 SETA &ZOPN+1                                      01516900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAUTHCOMP2'                       01517000
&ZOPO(&ZOPN)          SETC 'DS'                                         01517100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01517200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01517300
.*-------------------------------------------------------------------   01517400
.***AM.LVER2                                                            01517500
.ZL164L               ANOP  ,                                           01517600
.*-------------------------------------------------------------------   01517700
.*-------------------------------------------------------------------   01517800
.***AM.LVER1                                                            01517900
                      AIF  (&XPLISTVER LT 1).ZL165L                     01518000
.*-------------------------------------------------------------------   01518100
.*-------------------------------------------------------------------   01518200
.***AM.L09  XMOVETOKEY1 CL16                                            01518300
&ZOPN                 SETA &ZOPN+1                                      01518400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOVETOKEY1'                      01518500
&ZOPO(&ZOPN)          SETC 'DS'                                         01518600
&ZOPV(&ZOPN)          SETC 'CL16'                                       01518700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01518800
.*-------------------------------------------------------------------   01518900
.***AM.LVER2                                                            01519000
.ZL165L               ANOP  ,                                           01519100
.*-------------------------------------------------------------------   01519200
.*-------------------------------------------------------------------   01519300
.***AM.LVER1                                                            01519400
                      AIF  (&XPLISTVER LT 1).ZL166L                     01519500
.*-------------------------------------------------------------------   01519600
.*-------------------------------------------------------------------   01519700
.***AM.L09  XMOVETOLIST1 F                                              01519800
&ZOPN                 SETA &ZOPN+1                                      01519900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOVETOLIST1'                     01520000
&ZOPO(&ZOPN)          SETC 'DS'                                         01520100
&ZOPV(&ZOPN)          SETC 'F'                                          01520200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01520300
.*-------------------------------------------------------------------   01520400
.***AM.LVER2                                                            01520500
.ZL166L               ANOP  ,                                           01520600
.*-------------------------------------------------------------------   01520700
.*-------------------------------------------------------------------   01520800
.***AM.LVER1                                                            01520900
                      AIF  (&XPLISTVER LT 1).ZL167L                     01521000
.*-------------------------------------------------------------------   01521100
.*-------------------------------------------------------------------   01521200
.***AM.L09  XRSV0702 CL8                                                01521300
&ZOPN                 SETA &ZOPN+1                                      01521400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0702'                         01521500
&ZOPO(&ZOPN)          SETC 'DS'                                         01521600
&ZOPV(&ZOPN)          SETC 'CL8'                                        01521700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01521800
.*-------------------------------------------------------------------   01521900
.***AM.LVER2                                                            01522000
.ZL167L               ANOP  ,                                           01522100
.*-------------------------------------------------------------------   01522200
.*-------------------------------------------------------------------   01522300
.***AM.LVER1                                                            01522400
                      AIF  (&XPLISTVER LT 1).ZL168L                     01522500
.*-------------------------------------------------------------------   01522600
.*-------------------------------------------------------------------   01522700
.***AM.L09  XLISTKEYINC F                                               01522800
&ZOPN                 SETA &ZOPN+1                                      01522900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEYINC'                      01523000
&ZOPO(&ZOPN)          SETC 'DS'                                         01523100
&ZOPV(&ZOPN)          SETC 'F'                                          01523200
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEYINC '                          01523300
.*-------------------------------------------------------------------   01523400
.***AM.LVER2                                                            01523500
.ZL168L               ANOP  ,                                           01523600
.*-------------------------------------------------------------------   01523700
.*-------------------------------------------------------------------   01523800
.***AM.LVER1                                                            01523900
                      AIF  (&XPLISTVER LT 1).ZL169L                     01524000
.*-------------------------------------------------------------------   01524100
.*-------------------------------------------------------------------   01524200
.***AM.PJR1 DEFINED ON XNEWAUTH2                                        01524300
&ZOPN                 SETA &ZOPN+1                                      01524400
&ZOPL(&ZOPN)          SETC ' '                                          01524500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01524600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+212'                              01524700
&ZOPD(&ZOPN)          SETC ' '                                          01524800
.*-------------------------------------------------------------------   01524900
.***AM.LVER2                                                            01525000
.ZL169L               ANOP  ,                                           01525100
.*-------------------------------------------------------------------   01525200
.*-------------------------------------------------------------------   01525300
.***AM.LVER1                                                            01525400
                      AIF  (&XPLISTVER LT 1).ZL170L                     01525500
.*-------------------------------------------------------------------   01525600
.*-------------------------------------------------------------------   01525700
.***AM.L09  XLISTKEY CL16                                               01525800
&ZOPN                 SETA &ZOPN+1                                      01525900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTKEY'                         01526000
&ZOPO(&ZOPN)          SETC 'DS'                                         01526100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01526200
&ZOPD(&ZOPN)          SETC '++ &ZXLISTKEY '                             01526300
.*-------------------------------------------------------------------   01526400
.***AM.LVER2                                                            01526500
.ZL170L               ANOP  ,                                           01526600
.*-------------------------------------------------------------------   01526700
.*-------------------------------------------------------------------   01526800
.***AM.LVER1                                                            01526900
                      AIF  (&XPLISTVER LT 1).ZL171L                     01527000
.*-------------------------------------------------------------------   01527100
.*-------------------------------------------------------------------   01527200
.***AM.PJR1 DEFINED ON XAUTHCOMP2                                       01527300
&ZOPN                 SETA &ZOPN+1                                      01527400
&ZOPL(&ZOPN)          SETC ' '                                          01527500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01527600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+228'                              01527700
&ZOPD(&ZOPN)          SETC ' '                                          01527800
.*-------------------------------------------------------------------   01527900
.***AM.LVER2                                                            01528000
.ZL171L               ANOP  ,                                           01528100
.*-------------------------------------------------------------------   01528200
.*-------------------------------------------------------------------   01528300
.***AM.LVER1                                                            01528400
                      AIF  (&XPLISTVER LT 1).ZL172L                     01528500
.*-------------------------------------------------------------------   01528600
.*-------------------------------------------------------------------   01528700
.***AM.L09  XMAXLISTKEY CL16                                            01528800
&ZOPN                 SETA &ZOPN+1                                      01528900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAXLISTKEY'                      01529000
&ZOPO(&ZOPN)          SETC 'DS'                                         01529100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01529200
&ZOPD(&ZOPN)          SETC '++ &ZXMAXLISTKEY '                          01529300
.*-------------------------------------------------------------------   01529400
.***AM.LVER2                                                            01529500
.ZL172L               ANOP  ,                                           01529600
.*-------------------------------------------------------------------   01529700
.*-------------------------------------------------------------------   01529800
.***AM.LVER1                                                            01529900
                      AIF  (&XPLISTVER LT 1).ZL173L                     01530000
.*-------------------------------------------------------------------   01530100
.*-------------------------------------------------------------------   01530200
.***AM.PJR1 DEFINED ON XMOVETOKEY1                                      01530300
&ZOPN                 SETA &ZOPN+1                                      01530400
&ZOPL(&ZOPN)          SETC ' '                                          01530500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01530600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+244'                              01530700
&ZOPD(&ZOPN)          SETC ' '                                          01530800
.*-------------------------------------------------------------------   01530900
.***AM.LVER2                                                            01531000
.ZL173L               ANOP  ,                                           01531100
.*-------------------------------------------------------------------   01531200
.*-------------------------------------------------------------------   01531300
.***AM.LVER1                                                            01531400
                      AIF  (&XPLISTVER LT 1).ZL174L                     01531500
.*-------------------------------------------------------------------   01531600
.*-------------------------------------------------------------------   01531700
.***AM.L09  XUNC CL16                                                   01531800
&ZOPN                 SETA &ZOPN+1                                      01531900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUNC'                             01532000
&ZOPO(&ZOPN)          SETC 'DS'                                         01532100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01532200
&ZOPD(&ZOPN)          SETC '++ &ZXUNC '                                 01532300
.*-------------------------------------------------------------------   01532400
.***AM.LVER2                                                            01532500
.ZL174L               ANOP  ,                                           01532600
.*-------------------------------------------------------------------   01532700
&ZOPN                 SETA &ZOPN+1                                      01532800
&ZOPL(&ZOPN)          SETC ' '                                          01532900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01533000
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01533100
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     01533200
.*-------------------------------------------------------------------   01533300
.***AM.L10 END OF IXLLIST LIST PARAMETERS                               01533400
&ZOPN                 SETA &ZOPN+1                                      01533500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 01533600
&ZOPO(&ZOPN)          SETC 'EQU'                                        01533700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 01533800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         01533900
.*                                                                      01534000
&ZOPN                 SETA &ZOPN+1                                      01534100
&ZOPL(&ZOPN)          SETC ' '                                          01534200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      01534300
&ZOPV(&ZOPN)          SETC '1'                                          01534400
&ZOPD(&ZOPN)          SETC ' '                                          01534500
.*-------------------------------------------------------------------   01534600
.***AL.L12 IXLLIST FMT=LIST MF=S!L PARAMETERS                           01534700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         01534800
.*                                                                      01534900
&ZOPN                 SETA  &ZOPN+1                                     01535000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                01535100
&ZOPO(&ZOPN)          SETC  'DC'                                        01535200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   01535300
&ZOPD(&ZOPN)          SETC  '++ IXLLIST ARG PARMS'                      01535400
.*                                                                      01535500
.ZLMFSLX              ANOP  ,                                           01535600
.*-------------------------------------------------------------------   01535700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          01535800
&ZPLLEN               SETA 232                                          01535900
.*                                                                      01536000
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    01536100
&ZPLLEN               SETA 276                                          01536200
.ZLLEN2Z              ANOP  ,                                           01536300
.*                                                                      01536400
.******************************************************************     01536500
.***AI.L01 IXLLIST FMT=LIST FILL IN PARAMETER AREA                      01536600
.******************************************************************     01536700
                      ACTR  10000                                       01536800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               01536900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    01537000
&ZCVAL                SETC  'LAE'          XAX MODE                     01537100
.ZIMFXA               ANOP ,                                            01537200
.*                                                                      01537300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    01537400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         01537500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 01537600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                01537700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 01537800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                01537900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   01538000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    01538100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   01538200
&ZOPN                 SETA  &ZOPN+1                                     01538300
&ZOPL(&ZOPN)          SETC  ' '                                         01538400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01538500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              01538600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01538700
                      AGO   .ZIMFNX                                     01538800
.*                                                                      01538900
.ZIMFN2               ANOP ,                                            01539000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     01539100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     01539200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  01539300
&ZOPN                 SETA  &ZOPN+1                                     01539400
&ZOPL(&ZOPN)          SETC  ' '                                         01539500
&ZOPO(&ZOPN)          SETC  'LAE'                                       01539600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  01539700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01539800
                      AGO   .ZIMFNX                                     01539900
.ZIMFNX1              ANOP ,                                            01540000
&ZOPN                 SETA  &ZOPN+1                                     01540100
&ZOPL(&ZOPN)          SETC  ' '                                         01540200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01540300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                01540400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01540500
.ZIMFNX               ANOP ,                                            01540600
.********************************************************************   01540700
.***AI.L02 IXLLIST FMT=LIST INITIALIZE PARAMETER AREA                   01540800
.********************************************************************   01540900
.***AI.L03 MF=(SLE)                                                     01541000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      01541100
&ZAWRK                SETA  0                                           01541200
&ZN                   SETA  &ZPLLEN                                     01541300
.ZCLRCONT             AIF   (&ZN LE 256).ZCLRX                          01541400
.*                                                                      01541500
&ZOPN                 SETA  &ZOPN+1                                     01541600
&ZOPL(&ZOPN)          SETC  ' '                                         01541700
&ZOPO(&ZOPN)          SETC  'XC'                                        01541800
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(256,1),&ZAWRK.(1)'                 01541900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01542000
.*                                                                      01542100
&ZAWRK                SETA &ZAWRK+256                                   01542200
&ZN                   SETA  &ZN-256                                     01542300
                      AGO   .ZCLRCONT                                   01542400
.*                                                                      01542500
.ZCLRX                ANOP  ,                                           01542600
.*                                                                      01542700
&ZOPN                 SETA  &ZOPN+1                                     01542800
&ZOPL(&ZOPN)          SETC  ' '                                         01542900
&ZOPO(&ZOPN)          SETC  'XC'                                        01543000
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(&ZN,1),&ZAWRK.(1)'                 01543100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01543200
.ZIMFLX               ANOP  ,                                           01543300
.*-------------------------------------------------------------------   01543400
.***AI.LVER01                                                           01543500
                      AIF  (&XPLISTVER LT 1).ZI5Z                       01543600
.*-------------------------------------------------------------------   01543700
.***AI.LVER02                                                           01543800
.ZI5Z                 ANOP  ,                                           01543900
.*-------------------------------------------------------------------   01544000
.***AI.LVER01                                                           01544100
                      AIF  (&XPLISTVER LT 1).ZI7Z                       01544200
.*-------------------------------------------------------------------   01544300
.***AI.LVER02                                                           01544400
.ZI7Z                 ANOP  ,                                           01544500
.*-------------------------------------------------------------------   01544600
.***AI.L04B XVERSION XL1                                                01544700
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    01544800
&ZOPN                 SETA  &ZOPN+1                                     01544900
&ZOPL(&ZOPN)          SETC  ' '                                         01545000
&ZOPO(&ZOPN)          SETC  'MVI'                                       01545100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           01545200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     01545300
.ZIMFVZ               ANOP  ,                                           01545400
.*-------------------------------------------------------------------   01545500
.***AI.L18  XBUFSTGKEY XL1                                              01545600
         AIF   ('&XBUFSTGKEY' NE 'CALLERS_KEY').ZI14                    01545700
&ZXBUFSTGKEY          SETC  ''             RESET INPUT/OUTPUT           01545800
.ZI14                 ANOP  ,                                           01545900
.*-------------------------------------------------------------------   01546000
.***AI.L25  XBUFSTGKEY XL1                                              01546100
                      AIF   ('&ZXBUFSTGKEY' EQ '').ZI14E                01546200
                      AIF   ('&ZXBUFSTGKEY' EQ 'OUTPUT').ZI14E          01546300
&ZCGPR                SETC  '&XBUFSTGKEY'                               01546400
.*                                                                      01546500
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZI14B           01546600
&ZCGPR   SETC  '0('.'&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2).')'                01546700
                      AGO   .ZI14D                                      01546800
.ZI14B                ANOP  ,                                           01546900
.*                                                                      01547000
&ZC                   SETC  '&XBUFSTGKEY'(1,1)                          01547100
                      AIF   (T'&ZC NE 'N').ZI14D                        01547200
&ZC                   SETC  '&XBUFSTGKEY'                               01547300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               01547400
&ZCGPR                SETC  '=BL1''&XBUFSTGKEY'''                       01547500
.*                                                                      01547600
.ZI14D                ANOP  ,                                           01547700
.*                                                                      01547800
&ZOPN                 SETA  &ZOPN+1                                     01547900
&ZOPL(&ZOPN)          SETC  ' '                                         01548000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01548100
&ZOPV(&ZOPN)          SETC  '9(1,1),&ZCGPR'                             01548200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSTGKEY XBUFSTGKEY'                01548300
.*                                                                      01548400
.ZI14E                ANOP  ,                                           01548500
.*-------------------------------------------------------------------   01548600
.***AI.L18  XANSLEN XL2                                                 01548700
         AIF   ('&XANSLEN' NE 'NO_ANSLEN').ZI15                         01548800
&ZXANSLEN             SETC  ''             RESET INPUT/OUTPUT           01548900
.ZI15                 ANOP  ,                                           01549000
.*-------------------------------------------------------------------   01549100
.***AI.L25  XANSLEN XL2                                                 01549200
                      AIF   ('&ZXANSLEN' EQ '').ZI15E                   01549300
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI15E             01549400
&ZCGPR                SETC  '&XANSLEN'                                  01549500
.*                                                                      01549600
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI15B              01549700
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      01549800
                      AGO   .ZI15D                                      01549900
.ZI15B                ANOP  ,                                           01550000
.*                                                                      01550100
&ZC                   SETC  '&XANSLEN'(1,1)                             01550200
                      AIF   (T'&ZC NE 'N').ZI15D                        01550300
&ZC                   SETC  '&XANSLEN'                                  01550400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               01550500
&ZCGPR                SETC  '=AL2(&XANSLEN)'                            01550600
.*                                                                      01550700
.ZI15D                ANOP  ,                                           01550800
.*                                                                      01550900
&ZOPN                 SETA  &ZOPN+1                                     01551000
&ZOPL(&ZOPN)          SETC  ' '                                         01551100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01551200
&ZOPV(&ZOPN)          SETC  '10(2,1),&ZCGPR'                            01551300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      01551400
.*                                                                      01551500
.ZI15E                ANOP  ,                                           01551600
.*-------------------------------------------------------------------   01551700
.***AI.L25  XCONTOKEN CL16                                              01551800
                      AIF   ('&ZXCONTOKEN' EQ '').ZI16E                 01551900
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI16E           01552000
&ZCGPR                SETC  '&XCONTOKEN'                                01552100
.*                                                                      01552200
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI16B            01552300
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  01552400
.ZI16B                ANOP  ,                                           01552500
.*                                                                      01552600
&ZOPN                 SETA  &ZOPN+1                                     01552700
&ZOPL(&ZOPN)          SETC  ' '                                         01552800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01552900
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           01553000
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  01553100
.*                                                                      01553200
.ZI16E                ANOP  ,                                           01553300
.*-------------------------------------------------------------------   01553400
.***AI.L18  XREQDATA CL8                                                01553500
         AIF   ('&XREQDATA' NE 'NO_REQDATA').ZI20                       01553600
&ZXREQDATA            SETC  ''             RESET INPUT/OUTPUT           01553700
.ZI20                 ANOP  ,                                           01553800
.*-------------------------------------------------------------------   01553900
.***AI.L25  XREQDATA CL8                                                01554000
                      AIF   ('&ZXREQDATA' EQ '').ZI20E                  01554100
                      AIF   ('&ZXREQDATA' EQ 'OUTPUT').ZI20E            01554200
&ZCGPR                SETC  '&XREQDATA'                                 01554300
.*                                                                      01554400
                      AIF   ('&XREQDATA'(1,1) NE '(').ZI20B             01554500
&ZCGPR   SETC  '0('.'&XREQDATA'(2,K'&XREQDATA-2).')'                    01554600
.ZI20B                ANOP  ,                                           01554700
.*                                                                      01554800
&ZOPN                 SETA  &ZOPN+1                                     01554900
&ZOPL(&ZOPN)          SETC  ' '                                         01555000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01555100
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            01555200
&ZOPD(&ZOPN)          SETC  '++ &ZXREQDATA XREQDATA'                    01555300
.*                                                                      01555400
.ZI20E                ANOP  ,                                           01555500
.*-------------------------------------------------------------------   01555600
.***AI.L18  XREQID CL8                                                  01555700
         AIF   ('&XREQID' NE 'NO_REQID').ZI21                           01555800
&ZXREQID              SETC  ''             RESET INPUT/OUTPUT           01555900
.ZI21                 ANOP  ,                                           01556000
.*-------------------------------------------------------------------   01556100
.***AI.L25  XREQID CL8                                                  01556200
                      AIF   ('&ZXREQID' EQ '').ZI21E                    01556300
                      AIF   ('&ZXREQID' EQ 'OUTPUT').ZI21E              01556400
&ZCGPR                SETC  '&XREQID'                                   01556500
.*                                                                      01556600
                      AIF   ('&XREQID'(1,1) NE '(').ZI21B               01556700
&ZCGPR   SETC  '0('.'&XREQID'(2,K'&XREQID-2).')'                        01556800
.ZI21B                ANOP  ,                                           01556900
.*                                                                      01557000
&ZOPN                 SETA  &ZOPN+1                                     01557100
&ZOPL(&ZOPN)          SETC  ' '                                         01557200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01557300
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            01557400
&ZOPD(&ZOPN)          SETC  '++ &ZXREQID XREQID'                        01557500
.*                                                                      01557600
.ZI21E                ANOP  ,                                           01557700
.*-------------------------------------------------------------------   01557800
.***AI.L05 XSHLFLGS1 BL1                                                01557900
&ZW                   SETC  ''                                          01558000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01558100
.*-------------------------------------------------------------------   01558200
.***AI.L08 XSHLFLGS1 "BUFFER"                                           01558300
.***      BL1'1XXXXXXX'                                                 01558400
         AIF   ('&BUFFER' EQ '').ZI27A                                  01558500
&ZW                   SETC  '&ZW.1'                                     01558600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01558700
                      AGO   .ZI27C                                      01558800
.*                                                                      01558900
.ZI27A                ANOP  ,                                           01559000
&ZW                   SETC  '&ZW.0'                                     01559100
.ZI27C                ANOP  ,                                           01559200
.*-------------------------------------------------------------------   01559300
.***AI.L08 XSHLFLGS1 "BUFLIST"                                          01559400
.***      BL1'X1XXXXXX'                                                 01559500
         AIF   ('&BUFLIST' EQ '').ZI28A                                 01559600
&ZW                   SETC  '&ZW.1'                                     01559700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01559800
                      AGO   .ZI28C                                      01559900
.*                                                                      01560000
.ZI28A                ANOP  ,                                           01560100
&ZW                   SETC  '&ZW.0'                                     01560200
.ZI28C                ANOP  ,                                           01560300
.*-------------------------------------------------------------------   01560400
.***AI.L08 XSHLFLGS1 "ADJAREA"                                          01560500
.***      BL1'XX1XXXXX'                                                 01560600
         AIF   ('&ADJAREA' EQ '').ZI29A                                 01560700
         AIF   ('&ADJAREA' EQ 'NO_ADJAREA').ZI29A                       01560800
&ZW                   SETC  '&ZW.1'                                     01560900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01561000
                      AGO   .ZI29C                                      01561100
.*                                                                      01561200
.ZI29A                ANOP  ,                                           01561300
&ZW                   SETC  '&ZW.0'                                     01561400
.ZI29C                ANOP  ,                                           01561500
.*-------------------------------------------------------------------   01561600
.***AI.L08 XSHLFLGS1 "ANSAREA"                                          01561700
.***      BL1'XXX1XXXX'                                                 01561800
         AIF   ('&ANSAREA' EQ '').ZI30A                                 01561900
         AIF   ('&ANSAREA' EQ 'NO_ANSAREA').ZI30A                       01562000
&ZW                   SETC  '&ZW.1'                                     01562100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01562200
                      AGO   .ZI30C                                      01562300
.*                                                                      01562400
.ZI30A                ANOP  ,                                           01562500
&ZW                   SETC  '&ZW.0'                                     01562600
.ZI30C                ANOP  ,                                           01562700
.*-------------------------------------------------------------------   01562800
.***AI.L08 XSHLFLGS1 "NO"                                               01562900
.***      BL1'XXXX1XXX'                                                 01563000
         AIF   ('&XPAGEABLE' NE 'NO').ZI31A                             01563100
&ZW                   SETC  '&ZW.1'                                     01563200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01563300
                      AGO   .ZI31C                                      01563400
.*                                                                      01563500
.ZI31A                ANOP  ,                                           01563600
&ZW                   SETC  '&ZW.0'                                     01563700
.ZI31C                ANOP  ,                                           01563800
.*-------------------------------------------------------------------   01563900
.***AI.L08 XSHLFLGS1 "BUFSTGKEY"                                        01564000
.***      BL1'XXXXX1XX'                                                 01564100
         AIF   ('&BUFSTGKEY' EQ '').ZI32A                               01564200
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI32A                    01564300
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI32A                    01564400
&ZW                   SETC  '&ZW.1'                                     01564500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01564600
                      AGO   .ZI32C                                      01564700
.*                                                                      01564800
.ZI32A                ANOP  ,                                           01564900
&ZW                   SETC  '&ZW.0'                                     01565000
.ZI32C                ANOP  ,                                           01565100
.*-------------------------------------------------------------------   01565200
.***AI.L08 XSHLFLGS1 "REAL"                                             01565300
.***      BL1'XXXXXX1X'                                                 01565400
         AIF   ('&XBUFADDRTYPE' NE 'REAL').ZI33A                        01565500
&ZW                   SETC  '&ZW.10'                                    01565600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01565700
                      AGO   .ZI33C                                      01565800
.*                                                                      01565900
.ZI33A                ANOP  ,                                           01566000
&ZW                   SETC  '&ZW.00'                                    01566100
.ZI33C                ANOP  ,                                           01566200
.*-------------------------------------------------------------------   01566300
.***AI.L11 XSHLFLGS1 BL1                                                01566400
                      AIF   ('&ZCLNG' NE 'YES').ZI33E  ALL ZERO BITS    01566500
&ZOPN                 SETA  &ZOPN+1                                     01566600
&ZOPL(&ZOPN)          SETC  ' '                                         01566700
&ZOPO(&ZOPN)          SETC  'OI'                                        01566800
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             01566900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01567000
.ZI33E                ANOP  ,                                           01567100
.*-------------------------------------------------------------------   01567200
.***AI.L05 XSHLFLGS2 BL1                                                01567300
&ZW                   SETC  ''                                          01567400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01567500
.*-------------------------------------------------------------------   01567600
.***AI.L08 XSHLFLGS2 "SYNCECB"                                          01567700
.***      BL1'1XXXXXXX'                                                 01567800
         AIF   ('&XMODE' NE 'SYNCECB').ZI35A                            01567900
&ZW                   SETC  '&ZW.1'                                     01568000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01568100
                      AGO   .ZI35C                                      01568200
.*                                                                      01568300
.ZI35A                ANOP  ,                                           01568400
&ZW                   SETC  '&ZW.0'                                     01568500
.ZI35C                ANOP  ,                                           01568600
.*-------------------------------------------------------------------   01568700
.***AI.L08 XSHLFLGS2 "SYNCEXIT"                                         01568800
.***      BL1'X1XXXXXX'                                                 01568900
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI36A                           01569000
&ZW                   SETC  '&ZW.1'                                     01569100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01569200
                      AGO   .ZI36C                                      01569300
.*                                                                      01569400
.ZI36A                ANOP  ,                                           01569500
&ZW                   SETC  '&ZW.0'                                     01569600
.ZI36C                ANOP  ,                                           01569700
.*-------------------------------------------------------------------   01569800
.***AI.L08 XSHLFLGS2 "SYNCTOKEN"                                        01569900
.***      BL1'XX1XXXXX'                                                 01570000
         AIF   ('&XMODE' NE 'SYNCTOKEN').ZI37A                          01570100
&ZW                   SETC  '&ZW.1'                                     01570200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01570300
                      AGO   .ZI37C                                      01570400
.*                                                                      01570500
.ZI37A                ANOP  ,                                           01570600
&ZW                   SETC  '&ZW.0'                                     01570700
.ZI37C                ANOP  ,                                           01570800
.*-------------------------------------------------------------------   01570900
.***AI.L08 XSHLFLGS2 "ASYNCECB"                                         01571000
.***      BL1'XXX1XXXX'                                                 01571100
         AIF   ('&XMODE' NE 'ASYNCECB').ZI38A                           01571200
&ZW                   SETC  '&ZW.1'                                     01571300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01571400
                      AGO   .ZI38C                                      01571500
.*                                                                      01571600
.ZI38A                ANOP  ,                                           01571700
&ZW                   SETC  '&ZW.0'                                     01571800
.ZI38C                ANOP  ,                                           01571900
.*-------------------------------------------------------------------   01572000
.***AI.L08 XSHLFLGS2 "ASYNCEXIT"                                        01572100
.***      BL1'XXXX1XXX'                                                 01572200
         AIF   ('&XMODE' NE 'ASYNCEXIT').ZI39A                          01572300
&ZW                   SETC  '&ZW.1'                                     01572400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01572500
                      AGO   .ZI39C                                      01572600
.*                                                                      01572700
.ZI39A                ANOP  ,                                           01572800
&ZW                   SETC  '&ZW.0'                                     01572900
.ZI39C                ANOP  ,                                           01573000
.*-------------------------------------------------------------------   01573100
.***AI.L08 XSHLFLGS2 "ASYNCTOKEN"                                       01573200
.***      BL1'XXXXX1XX'                                                 01573300
         AIF   ('&XMODE' NE 'ASYNCTOKEN').ZI40A                         01573400
&ZW                   SETC  '&ZW.1'                                     01573500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01573600
                      AGO   .ZI40C                                      01573700
.*                                                                      01573800
.ZI40A                ANOP  ,                                           01573900
&ZW                   SETC  '&ZW.0'                                     01574000
.ZI40C                ANOP  ,                                           01574100
.*-------------------------------------------------------------------   01574200
.***AI.L08 XSHLFLGS2 "ASYNCNORESPONSE"                                  01574300
.***      BL1'XXXXXX1X'                                                 01574400
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ZI41A                    01574500
&ZW                   SETC  '&ZW.10'                                    01574600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01574700
                      AGO   .ZI41C                                      01574800
.*                                                                      01574900
.ZI41A                ANOP  ,                                           01575000
&ZW                   SETC  '&ZW.00'                                    01575100
.ZI41C                ANOP  ,                                           01575200
.*-------------------------------------------------------------------   01575300
.***AI.L11 XSHLFLGS2 BL1                                                01575400
                      AIF   ('&ZCLNG' NE 'YES').ZI41E  ALL ZERO BITS    01575500
&ZOPN                 SETA  &ZOPN+1                                     01575600
&ZOPL(&ZOPN)          SETC  ' '                                         01575700
&ZOPO(&ZOPN)          SETC  'OI'                                        01575800
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             01575900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01576000
.ZI41E                ANOP  ,                                           01576100
.*-------------------------------------------------------------------   01576200
.***AI.L05 XSHLFLGS3 BL1                                                01576300
&ZW                   SETC  ''                                          01576400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01576500
.*-------------------------------------------------------------------   01576600
.***AI.L08 XSHLFLGS3 "SET"                                              01576700
.***      BL1'1XXXXXXX'                                                 01576800
         AIF   ('&XLOCKOPER' NE 'SET').ZI43A                            01576900
&ZW                   SETC  '&ZW.1'                                     01577000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01577100
                      AGO   .ZI43C                                      01577200
.*                                                                      01577300
.ZI43A                ANOP  ,                                           01577400
&ZW                   SETC  '&ZW.0'                                     01577500
.ZI43C                ANOP  ,                                           01577600
.*-------------------------------------------------------------------   01577700
.***AI.L08 XSHLFLGS3 "RESET"                                            01577800
.***      BL1'X1XXXXXX'                                                 01577900
         AIF   ('&XLOCKOPER' NE 'RESET').ZI44A                          01578000
&ZW                   SETC  '&ZW.1'                                     01578100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01578200
                      AGO   .ZI44C                                      01578300
.*                                                                      01578400
.ZI44A                ANOP  ,                                           01578500
&ZW                   SETC  '&ZW.0'                                     01578600
.ZI44C                ANOP  ,                                           01578700
.*-------------------------------------------------------------------   01578800
.***AI.L08 XSHLFLGS3 "NOTHELD"                                          01578900
.***      BL1'XX1XXXXX'                                                 01579000
         AIF   ('&XLOCKOPER' NE 'NOTHELD').ZI45A                        01579100
&ZW                   SETC  '&ZW.1'                                     01579200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01579300
                      AGO   .ZI45C                                      01579400
.*                                                                      01579500
.ZI45A                ANOP  ,                                           01579600
&ZW                   SETC  '&ZW.0'                                     01579700
.ZI45C                ANOP  ,                                           01579800
.*-------------------------------------------------------------------   01579900
.***AI.L08 XSHLFLGS3 "HELDBY"                                           01580000
.***      BL1'XXX1XXXX'                                                 01580100
         AIF   ('&XLOCKOPER' NE 'HELDBY').ZI46A                         01580200
&ZW                   SETC  '&ZW.1'                                     01580300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01580400
                      AGO   .ZI46C                                      01580500
.*                                                                      01580600
.ZI46A                ANOP  ,                                           01580700
&ZW                   SETC  '&ZW.0'                                     01580800
.ZI46C                ANOP  ,                                           01580900
.*-------------------------------------------------------------------   01581000
.***AI.L08 XSHLFLGS3 "TEST"                                             01581100
.***      BL1'XXXX1XXX'                                                 01581200
         AIF   ('&XLOCKOPER' NE 'TEST').ZI47A                           01581300
&ZW                   SETC  '&ZW.1'                                     01581400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01581500
                      AGO   .ZI47C                                      01581600
.*                                                                      01581700
.ZI47A                ANOP  ,                                           01581800
&ZW                   SETC  '&ZW.0'                                     01581900
.ZI47C                ANOP  ,                                           01582000
.*-------------------------------------------------------------------   01582100
.***AI.L08 XSHLFLGS3 "READNEXT"                                         01582200
.***      BL1'XXXXX1XX'                                                 01582300
         AIF   ('&XLOCKOPER' NE 'READNEXT').ZI48A                       01582400
&ZW                   SETC  '&ZW.1'                                     01582500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01582600
                      AGO   .ZI48C                                      01582700
.*                                                                      01582800
.ZI48A                ANOP  ,                                           01582900
&ZW                   SETC  '&ZW.0'                                     01583000
.ZI48C                ANOP  ,                                           01583100
.*-------------------------------------------------------------------   01583200
.***AI.L08 XSHLFLGS3 "COND"                                             01583300
.***      BL1'XXXXXX1X'                                                 01583400
         AIF   ('&XLOCKMODE' NE 'COND').ZI49A                           01583500
&ZW                   SETC  '&ZW.1'                                     01583600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01583700
                      AGO   .ZI49C                                      01583800
.*                                                                      01583900
.ZI49A                ANOP  ,                                           01584000
&ZW                   SETC  '&ZW.0'                                     01584100
.ZI49C                ANOP  ,                                           01584200
.*-------------------------------------------------------------------   01584300
.***AI.L08 XSHLFLGS3 "LOCKCOMP"                                         01584400
.***      BL1'XXXXXXX1'                                                 01584500
         AIF   ('&LOCKCOMP' EQ '').ZI50A                                01584600
         AIF   ('&LOCKCOMP' EQ 'NO_LOCKCOMP').ZI50A                     01584700
&ZW                   SETC  '&ZW.1'                                     01584800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01584900
                      AGO   .ZI50C                                      01585000
.*                                                                      01585100
.ZI50A                ANOP  ,                                           01585200
&ZW                   SETC  '&ZW.0'                                     01585300
.ZI50C                ANOP  ,                                           01585400
.*-------------------------------------------------------------------   01585500
.***AI.L11 XSHLFLGS3 BL1                                                01585600
                      AIF   ('&ZCLNG' NE 'YES').ZI50E  ALL ZERO BITS    01585700
&ZOPN                 SETA  &ZOPN+1                                     01585800
&ZOPL(&ZOPN)          SETC  ' '                                         01585900
&ZOPO(&ZOPN)          SETC  'OI'                                        01586000
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             01586100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01586200
.ZI50E                ANOP  ,                                           01586300
.*-------------------------------------------------------------------   01586400
.***AI.L05 XSHLFLGS4 BL1                                                01586500
&ZW                   SETC  ''                                          01586600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01586700
.*-------------------------------------------------------------------   01586800
.***AI.L09 XSHLFLGS4 "ADJDATA"                                          01586900
.***      BL1'1XXXXXXX'                                                 01587000
&ZI                   SETA  0              RESET ARRAY INDEX            01587100
.ZI52A                ANOP  ,                                           01587200
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             01587300
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI52B                  01587400
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').ZI52A                       01587500
&ZW                   SETC  '&ZW.1'                                     01587600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01587700
                      AGO   .ZI52C                                      01587800
.*                                                                      01587900
.ZI52B                ANOP  ,                                           01588000
&ZW                   SETC  '&ZW.0'                                     01588100
.ZI52C                ANOP  ,                                           01588200
.*-------------------------------------------------------------------   01588300
.***AI.L09 XSHLFLGS4 "ECONTROLS"                                        01588400
.***      BL1'X1XXXXXX'                                                 01588500
&ZI                   SETA  0              RESET ARRAY INDEX            01588600
.ZI53A                ANOP  ,                                           01588700
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             01588800
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI53B                  01588900
         AIF   ('&XTYPE(&ZI)' NE 'ECONTROLS').ZI53A                     01589000
&ZW                   SETC  '&ZW.1'                                     01589100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01589200
                      AGO   .ZI53C                                      01589300
.*                                                                      01589400
.ZI53B                ANOP  ,                                           01589500
&ZW                   SETC  '&ZW.0'                                     01589600
.ZI53C                ANOP  ,                                           01589700
.*-------------------------------------------------------------------   01589800
.***AI.L08 XSHLFLGS4 "EXTRESTOKEN"                                      01589900
.***      BL1'XX1XXXXX'                                                 01590000
         AIF   ('&EXTRESTOKEN' EQ '').ZI54A                             01590100
&ZW                   SETC  '&ZW.1'                                     01590200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01590300
                      AGO   .ZI54C                                      01590400
.*                                                                      01590500
.ZI54A                ANOP  ,                                           01590600
&ZW                   SETC  '&ZW.0'                                     01590700
.ZI54C                ANOP  ,                                           01590800
.*-------------------------------------------------------------------   01590900
.***AI.L08 XSHLFLGS4 "LIST"                                             01591000
.***      BL1'XXXXXXX1'                                                 01591100
&ZW                   SETC  '&ZW.00000'                                 01591200
.*-------------------------------------------------------------------   01591300
.***AI.L11 XSHLFLGS4 BL1                                                01591400
                      AIF   ('&ZCLNG' NE 'YES').ZI55E  ALL ZERO BITS    01591500
&ZOPN                 SETA  &ZOPN+1                                     01591600
&ZOPL(&ZOPN)          SETC  ' '                                         01591700
&ZOPO(&ZOPN)          SETC  'OI'                                        01591800
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             01591900
&ZOPD(&ZOPN)          SETC  '++ 379 BL1'                                01592000
.ZI55E                ANOP  ,                                           01592100
.*-------------------------------------------------------------------   01592200
.***AI.L23 ALET XBUFFER F                                               01592300
         AIF   ('&ZXBUFFER' EQ '').ZI61G                                01592400
         AIF   ('&SYSASCE' EQ 'P').ZI61G   SYSSTATE PRIMARY             01592500
&ZCLNG                SETC  '&XBUFFER'                                  01592600
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI61E  IN AR                    01592700
.*                                                                      01592800
&ZCGPR                SETC  '14'                                        01592900
&ZOPN                 SETA  &ZOPN+1                                     01593000
&ZOPL(&ZOPN)          SETC  ' '                                         01593100
&ZOPO(&ZOPN)          SETC  'LAE'                                       01593200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01593300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01593400
                      AGO   .ZI61F                                      01593500
.*                                                                      01593600
.ZI61E                ANOP  ,                                           01593700
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01593800
.*                                                                      01593900
.ZI61F                ANOP  ,                                           01594000
.*                                                                      01594100
&ZOPN                 SETA  &ZOPN+1                                     01594200
&ZOPL(&ZOPN)          SETC  ' '                                         01594300
&ZOPO(&ZOPN)          SETC  'STAM'                                      01594400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,28(1)'                       01594500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01594600
.*                                                                      01594700
.ZI61G                ANOP  ,                                           01594800
.*-------------------------------------------------------------------   01594900
.***AI.L18  XBUFSIZE F                                                  01595000
         AIF   ('&XBUFSIZE' NE 'NO_BUFSIZE').ZI62                       01595100
&ZXBUFSIZE            SETC  ''             RESET INPUT/OUTPUT           01595200
.ZI62                 ANOP  ,                                           01595300
.*-------------------------------------------------------------------   01595400
.***AI.L25  XBUFSIZE F                                                  01595500
                      AIF   ('&ZXBUFSIZE' EQ '').ZI62E                  01595600
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI62E            01595700
&ZCGPR                SETC  '&XBUFSIZE'                                 01595800
.*                                                                      01595900
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI62B             01596000
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    01596100
                      AGO   .ZI62D                                      01596200
.ZI62B                ANOP  ,                                           01596300
.*                                                                      01596400
&ZC                   SETC  '&XBUFSIZE'(1,1)                            01596500
                      AIF   (T'&ZC NE 'N').ZI62D                        01596600
&ZC                   SETC  '&XBUFSIZE'                                 01596700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI62D               01596800
&ZCGPR                SETC  '=AL4(&XBUFSIZE)'                           01596900
.*                                                                      01597000
.ZI62D                ANOP  ,                                           01597100
.*                                                                      01597200
&ZOPN                 SETA  &ZOPN+1                                     01597300
&ZOPL(&ZOPN)          SETC  ' '                                         01597400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01597500
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            01597600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    01597700
.*                                                                      01597800
.ZI62E                ANOP  ,                                           01597900
.*-------------------------------------------------------------------   01598000
.***AI.L19  XBUFFER A                                                   01598100
                      AIF   ('&ZXBUFFER' EQ '').ZI63H                   01598200
&ZCLNG                SETC  '&XBUFFER'                                  01598300
&ZCGPR                SETC  '14'                                        01598400
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI63F  IN GPR                   01598500
.*                                                                      01598600
&ZOPN                 SETA  &ZOPN+1                                     01598700
&ZOPL(&ZOPN)          SETC  ' '                                         01598800
&ZOPO(&ZOPN)          SETC  'LA'                                        01598900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01599000
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01599100
.*                                                                      01599200
                      AGO   .ZI63G                                      01599300
.*                                                                      01599400
.ZI63F                ANOP  ,                                           01599500
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01599600
.*                                                                      01599700
.ZI63G                ANOP  ,                                           01599800
.*                                                                      01599900
&ZOPN                 SETA  &ZOPN+1                                     01600000
&ZOPL(&ZOPN)          SETC  ' '                                         01600100
&ZOPO(&ZOPN)          SETC  'ST'                                        01600200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01600300
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01600400
.*                                                                      01600500
.ZI63H                ANOP  ,                                           01600600
.*-------------------------------------------------------------------   01600700
.***AI.L18  XBUFALET F                                                  01600800
         AIF   ('&XBUFALET' NE 'NO_BUFALET').ZI65                       01600900
&ZXBUFALET            SETC  ''             RESET INPUT/OUTPUT           01601000
.ZI65                 ANOP  ,                                           01601100
.*-------------------------------------------------------------------   01601200
.***AI.L25  XBUFALET F                                                  01601300
                      AIF   ('&ZXBUFALET' EQ '').ZI65E                  01601400
                      AIF   ('&ZXBUFALET' EQ 'OUTPUT').ZI65E            01601500
&ZCGPR                SETC  '&XBUFALET'                                 01601600
.*                                                                      01601700
                      AIF   ('&XBUFALET'(1,1) NE '(').ZI65B             01601800
&ZCGPR   SETC  '0('.'&XBUFALET'(2,K'&XBUFALET-2).')'                    01601900
                      AGO   .ZI65D                                      01602000
.ZI65B                ANOP  ,                                           01602100
.*                                                                      01602200
&ZC                   SETC  '&XBUFALET'(1,1)                            01602300
                      AIF   (T'&ZC NE 'N').ZI65D                        01602400
&ZC                   SETC  '&XBUFALET'                                 01602500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI65D               01602600
&ZCGPR                SETC  '=AL4(&XBUFALET)'                           01602700
.*                                                                      01602800
.ZI65D                ANOP  ,                                           01602900
.*                                                                      01603000
&ZOPN                 SETA  &ZOPN+1                                     01603100
&ZOPL(&ZOPN)          SETC  ' '                                         01603200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01603300
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            01603400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFALET XBUFALET'                    01603500
.*                                                                      01603600
.ZI65E                ANOP  ,                                           01603700
.*-------------------------------------------------------------------   01603800
.***AI.L23 ALET XBUFLIST F                                              01603900
         AIF   ('&ZXBUFLIST' EQ '').ZI66G                               01604000
         AIF   ('&SYSASCE' EQ 'P').ZI66G   SYSSTATE PRIMARY             01604100
&ZCLNG                SETC  '&XBUFLIST'                                 01604200
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI66E  IN AR                   01604300
.*                                                                      01604400
&ZCGPR                SETC  '14'                                        01604500
&ZOPN                 SETA  &ZOPN+1                                     01604600
&ZOPL(&ZOPN)          SETC  ' '                                         01604700
&ZOPO(&ZOPN)          SETC  'LAE'                                       01604800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01604900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01605000
                      AGO   .ZI66F                                      01605100
.*                                                                      01605200
.ZI66E                ANOP  ,                                           01605300
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01605400
.*                                                                      01605500
.ZI66F                ANOP  ,                                           01605600
.*                                                                      01605700
&ZOPN                 SETA  &ZOPN+1                                     01605800
&ZOPL(&ZOPN)          SETC  ' '                                         01605900
&ZOPO(&ZOPN)          SETC  'STAM'                                      01606000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,32(1)'                       01606100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01606200
.*                                                                      01606300
.ZI66G                ANOP  ,                                           01606400
.*-------------------------------------------------------------------   01606500
.***AI.L19  XBUFLIST A                                                  01606600
                      AIF   ('&ZXBUFLIST' EQ '').ZI67H                  01606700
&ZCLNG                SETC  '&XBUFLIST'                                 01606800
&ZCGPR                SETC  '14'                                        01606900
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI67F  IN GPR                  01607000
         AIF   ('&SYSASCE' NE 'P').ZI67G   SYSSTATE PRIMARY             01607100
.*                                                                      01607200
&ZOPN                 SETA  &ZOPN+1                                     01607300
&ZOPL(&ZOPN)          SETC  ' '                                         01607400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01607500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01607600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01607700
.*                                                                      01607800
                      AGO   .ZI67G                                      01607900
.*                                                                      01608000
.ZI67F                ANOP  ,                                           01608100
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01608200
.*                                                                      01608300
.ZI67G                ANOP  ,                                           01608400
.*                                                                      01608500
&ZOPN                 SETA  &ZOPN+1                                     01608600
&ZOPL(&ZOPN)          SETC  ' '                                         01608700
&ZOPO(&ZOPN)          SETC  'ST'                                        01608800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01608900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01609000
.*                                                                      01609100
.ZI67H                ANOP  ,                                           01609200
.*-------------------------------------------------------------------   01609300
.***AI.L18 ALET XADJAREA F                                              01609400
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI69                       01609500
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           01609600
.ZI69                 ANOP  ,                                           01609700
.*-------------------------------------------------------------------   01609800
.***AI.L23 ALET XADJAREA F                                              01609900
         AIF   ('&ZXADJAREA' EQ '').ZI69G                               01610000
         AIF   ('&SYSASCE' EQ 'P').ZI69G   SYSSTATE PRIMARY             01610100
&ZCLNG                SETC  '&XADJAREA'                                 01610200
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI69E  IN AR                   01610300
.*                                                                      01610400
&ZCGPR                SETC  '14'                                        01610500
&ZOPN                 SETA  &ZOPN+1                                     01610600
&ZOPL(&ZOPN)          SETC  ' '                                         01610700
&ZOPO(&ZOPN)          SETC  'LAE'                                       01610800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01610900
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01611000
                      AGO   .ZI69F                                      01611100
.*                                                                      01611200
.ZI69E                ANOP  ,                                           01611300
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             01611400
.*                                                                      01611500
.ZI69F                ANOP  ,                                           01611600
.*                                                                      01611700
&ZOPN                 SETA  &ZOPN+1                                     01611800
&ZOPL(&ZOPN)          SETC  ' '                                         01611900
&ZOPO(&ZOPN)          SETC  'STAM'                                      01612000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01612100
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01612200
.*                                                                      01612300
.ZI69G                ANOP  ,                                           01612400
.*-------------------------------------------------------------------   01612500
.***AI.L18  XADJAREA A                                                  01612600
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI70                       01612700
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           01612800
.ZI70                 ANOP  ,                                           01612900
.*-------------------------------------------------------------------   01613000
.***AI.L19  XADJAREA A                                                  01613100
                      AIF   ('&ZXADJAREA' EQ '').ZI70H                  01613200
&ZCLNG                SETC  '&XADJAREA'                                 01613300
&ZCGPR                SETC  '14'                                        01613400
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI70F  IN GPR                  01613500
         AIF   ('&SYSASCE' NE 'P').ZI70G   SYSSTATE PRIMARY             01613600
.*                                                                      01613700
&ZOPN                 SETA  &ZOPN+1                                     01613800
&ZOPL(&ZOPN)          SETC  ' '                                         01613900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01614000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01614100
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01614200
.*                                                                      01614300
                      AGO   .ZI70G                                      01614400
.*                                                                      01614500
.ZI70F                ANOP  ,                                           01614600
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             01614700
.*                                                                      01614800
.ZI70G                ANOP  ,                                           01614900
.*                                                                      01615000
&ZOPN                 SETA  &ZOPN+1                                     01615100
&ZOPL(&ZOPN)          SETC  ' '                                         01615200
&ZOPO(&ZOPN)          SETC  'ST'                                        01615300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01615400
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01615500
.*                                                                      01615600
.ZI70H                ANOP  ,                                           01615700
.*-------------------------------------------------------------------   01615800
.***AI.L23 ALET XMOSVECTOR F                                            01615900
         AIF   ('&ZXMOSVECTOR' EQ '').ZI72G                             01616000
         AIF   ('&SYSASCE' EQ 'P').ZI72G   SYSSTATE PRIMARY             01616100
&ZCLNG                SETC  '&XMOSVECTOR'                               01616200
         AIF   ('&XMOSVECTOR'(1,1) EQ '(').ZI72E  IN AR                 01616300
.*                                                                      01616400
&ZCGPR                SETC  '14'                                        01616500
&ZOPN                 SETA  &ZOPN+1                                     01616600
&ZOPL(&ZOPN)          SETC  ' '                                         01616700
&ZOPO(&ZOPN)          SETC  'LAE'                                       01616800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01616900
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01617000
                      AGO   .ZI72F                                      01617100
.*                                                                      01617200
.ZI72E                ANOP  ,                                           01617300
&ZCGPR   SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)                         01617400
.*                                                                      01617500
.ZI72F                ANOP  ,                                           01617600
.*                                                                      01617700
&ZOPN                 SETA  &ZOPN+1                                     01617800
&ZOPL(&ZOPN)          SETC  ' '                                         01617900
&ZOPO(&ZOPN)          SETC  'STAM'                                      01618000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01618100
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01618200
.*                                                                      01618300
.ZI72G                ANOP  ,                                           01618400
.*-------------------------------------------------------------------   01618500
.***AI.L19  XMOSVECTOR A                                                01618600
                      AIF   ('&ZXMOSVECTOR' EQ '').ZI73H                01618700
&ZCLNG                SETC  '&XMOSVECTOR'                               01618800
&ZCGPR                SETC  '14'                                        01618900
         AIF   ('&XMOSVECTOR'(1,1) EQ '(').ZI73F  IN GPR                01619000
         AIF   ('&SYSASCE' NE 'P').ZI73G   SYSSTATE PRIMARY             01619100
.*                                                                      01619200
&ZOPN                 SETA  &ZOPN+1                                     01619300
&ZOPL(&ZOPN)          SETC  ' '                                         01619400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01619500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01619600
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01619700
.*                                                                      01619800
                      AGO   .ZI73G                                      01619900
.*                                                                      01620000
.ZI73F                ANOP  ,                                           01620100
&ZCGPR   SETC  '&XMOSVECTOR'(2,K'&XMOSVECTOR-2)                         01620200
.*                                                                      01620300
.ZI73G                ANOP  ,                                           01620400
.*                                                                      01620500
&ZOPN                 SETA  &ZOPN+1                                     01620600
&ZOPL(&ZOPN)          SETC  ' '                                         01620700
&ZOPO(&ZOPN)          SETC  'ST'                                        01620800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01620900
&ZOPD(&ZOPN)          SETC  '++ &ZXMOSVECTOR XMOSVECTOR'                01621000
.*                                                                      01621100
.ZI73H                ANOP  ,                                           01621200
.*-------------------------------------------------------------------   01621300
.***AI.L18 ALET XANSAREA F                                              01621400
         AIF   ('&XANSAREA' NE 'NO_ANSAREA').ZI75                       01621500
&ZXANSAREA            SETC  ''             RESET INPUT/OUTPUT           01621600
.ZI75                 ANOP  ,                                           01621700
.*-------------------------------------------------------------------   01621800
.***AI.L23 ALET XANSAREA F                                              01621900
         AIF   ('&ZXANSAREA' EQ '').ZI75G                               01622000
         AIF   ('&SYSASCE' EQ 'P').ZI75G   SYSSTATE PRIMARY             01622100
&ZCLNG                SETC  '&XANSAREA'                                 01622200
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI75E  IN AR                   01622300
.*                                                                      01622400
&ZCGPR                SETC  '14'                                        01622500
&ZOPN                 SETA  &ZOPN+1                                     01622600
&ZOPL(&ZOPN)          SETC  ' '                                         01622700
&ZOPO(&ZOPN)          SETC  'LAE'                                       01622800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01622900
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01623000
                      AGO   .ZI75F                                      01623100
.*                                                                      01623200
.ZI75E                ANOP  ,                                           01623300
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01623400
.*                                                                      01623500
.ZI75F                ANOP  ,                                           01623600
.*                                                                      01623700
&ZOPN                 SETA  &ZOPN+1                                     01623800
&ZOPL(&ZOPN)          SETC  ' '                                         01623900
&ZOPO(&ZOPN)          SETC  'STAM'                                      01624000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,48(1)'                       01624100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01624200
.*                                                                      01624300
.ZI75G                ANOP  ,                                           01624400
.*-------------------------------------------------------------------   01624500
.***AI.L18  XANSAREA A                                                  01624600
         AIF   ('&XANSAREA' NE 'NO_ANSAREA').ZI76                       01624700
&ZXANSAREA            SETC  ''             RESET INPUT/OUTPUT           01624800
.ZI76                 ANOP  ,                                           01624900
.*-------------------------------------------------------------------   01625000
.***AI.L19  XANSAREA A                                                  01625100
                      AIF   ('&ZXANSAREA' EQ '').ZI76H                  01625200
&ZCLNG                SETC  '&XANSAREA'                                 01625300
&ZCGPR                SETC  '14'                                        01625400
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI76F  IN GPR                  01625500
         AIF   ('&SYSASCE' NE 'P').ZI76G   SYSSTATE PRIMARY             01625600
.*                                                                      01625700
&ZOPN                 SETA  &ZOPN+1                                     01625800
&ZOPL(&ZOPN)          SETC  ' '                                         01625900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01626000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01626100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01626200
.*                                                                      01626300
                      AGO   .ZI76G                                      01626400
.*                                                                      01626500
.ZI76F                ANOP  ,                                           01626600
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01626700
.*                                                                      01626800
.ZI76G                ANOP  ,                                           01626900
.*                                                                      01627000
&ZOPN                 SETA  &ZOPN+1                                     01627100
&ZOPL(&ZOPN)          SETC  ' '                                         01627200
&ZOPO(&ZOPN)          SETC  'ST'                                        01627300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             01627400
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01627500
.*                                                                      01627600
.ZI76H                ANOP  ,                                           01627700
.*-------------------------------------------------------------------   01627800
.***AI.L25  XREQECB AL4                                                 01627900
                      AIF   ('&ZXREQECB' EQ '').ZI78E                   01628000
                      AIF   ('&ZXREQECB' EQ 'OUTPUT').ZI78E             01628100
&ZCGPR                SETC  '&XREQECB'                                  01628200
.*                                                                      01628300
                      AIF   ('&XREQECB'(1,1) NE '(').ZI78B              01628400
&ZCGPR   SETC  '0('.'&XREQECB'(2,K'&XREQECB-2).')'                      01628500
                      AGO   .ZI78D                                      01628600
.ZI78B                ANOP  ,                                           01628700
.*                                                                      01628800
&ZC                   SETC  '&XREQECB'(1,1)                             01628900
                      AIF   (T'&ZC NE 'N').ZI78D                        01629000
&ZC                   SETC  '&XREQECB'                                  01629100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI78D               01629200
&ZCGPR                SETC  '=AL4(&XREQECB)'                            01629300
.*                                                                      01629400
.ZI78D                ANOP  ,                                           01629500
.*                                                                      01629600
&ZOPN                 SETA  &ZOPN+1                                     01629700
&ZOPL(&ZOPN)          SETC  ' '                                         01629800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01629900
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            01630000
&ZOPD(&ZOPN)          SETC  '++ &ZXREQECB XREQECB'                      01630100
.*                                                                      01630200
.ZI78E                ANOP  ,                                           01630300
.*-------------------------------------------------------------------   01630400
.***AI.L23 ALET XREQTOKEN F                                             01630500
         AIF   ('&ZXREQTOKEN' EQ '').ZI81G                              01630600
         AIF   ('&SYSASCE' EQ 'P').ZI81G   SYSSTATE PRIMARY             01630700
&ZCLNG                SETC  '&XREQTOKEN'                                01630800
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI81E  IN AR                  01630900
.*                                                                      01631000
&ZCGPR                SETC  '14'                                        01631100
&ZOPN                 SETA  &ZOPN+1                                     01631200
&ZOPL(&ZOPN)          SETC  ' '                                         01631300
&ZOPO(&ZOPN)          SETC  'LAE'                                       01631400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01631500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01631600
                      AGO   .ZI81F                                      01631700
.*                                                                      01631800
.ZI81E                ANOP  ,                                           01631900
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01632000
.*                                                                      01632100
.ZI81F                ANOP  ,                                           01632200
.*                                                                      01632300
&ZOPN                 SETA  &ZOPN+1                                     01632400
&ZOPL(&ZOPN)          SETC  ' '                                         01632500
&ZOPO(&ZOPN)          SETC  'STAM'                                      01632600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       01632700
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01632800
.*                                                                      01632900
.ZI81G                ANOP  ,                                           01633000
.*-------------------------------------------------------------------   01633100
.***AI.L19  XREQTOKEN A                                                 01633200
                      AIF   ('&ZXREQTOKEN' EQ '').ZI82H                 01633300
&ZCLNG                SETC  '&XREQTOKEN'                                01633400
&ZCGPR                SETC  '14'                                        01633500
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI82F  IN GPR                 01633600
         AIF   ('&SYSASCE' NE 'P').ZI82G   SYSSTATE PRIMARY             01633700
.*                                                                      01633800
&ZOPN                 SETA  &ZOPN+1                                     01633900
&ZOPL(&ZOPN)          SETC  ' '                                         01634000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01634100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01634200
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01634300
.*                                                                      01634400
                      AGO   .ZI82G                                      01634500
.*                                                                      01634600
.ZI82F                ANOP  ,                                           01634700
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01634800
.*                                                                      01634900
.ZI82G                ANOP  ,                                           01635000
.*                                                                      01635100
&ZOPN                 SETA  &ZOPN+1                                     01635200
&ZOPL(&ZOPN)          SETC  ' '                                         01635300
&ZOPO(&ZOPN)          SETC  'ST'                                        01635400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             01635500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01635600
.*                                                                      01635700
.ZI82H                ANOP  ,                                           01635800
.*-------------------------------------------------------------------   01635900
.***AI.L05 XSHLFLGSA1 BL1                                               01636000
&ZW                   SETC  ''                                          01636100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01636200
.*-------------------------------------------------------------------   01636300
.***AI.L08 XSHLFLGSA1 "IXLLSTC"                                         01636400
.***      BL1'1XXXXXXX'                                                 01636500
&ZW                   SETC  '&ZW.0'                                     01636600
.*-------------------------------------------------------------------   01636700
.***AI.L08 XSHLFLGSA1 "IXLLSTE"                                         01636800
.***      BL1'X1XXXXXX'                                                 01636900
&ZW                   SETC  '&ZW.0'                                     01637000
.*-------------------------------------------------------------------   01637100
.***AI.L08 XSHLFLGSA1 "IXLLSTM"                                         01637200
.***      BL1'XX1XXXXX'                                                 01637300
&ZW                   SETC  '&ZW.000000'                                01637400
.*-------------------------------------------------------------------   01637500
.***AI.L11 XSHLFLGSA1 BL1                                               01637600
                      AIF   ('&ZCLNG' NE 'YES').ZI87E  ALL ZERO BITS    01637700
&ZOPN                 SETA  &ZOPN+1                                     01637800
&ZOPL(&ZOPN)          SETC  ' '                                         01637900
&ZOPO(&ZOPN)          SETC  'OI'                                        01638000
&ZOPV(&ZOPN)          SETC  '88(1),B''&ZW'''                            01638100
&ZOPD(&ZOPN)          SETC  '++ 379 BL1'                                01638200
.ZI87E                ANOP  ,                                           01638300
.*-------------------------------------------------------------------   01638400
.***AI.L18  XLOCKDATA CL8                                               01638500
         AIF   ('&XLOCKDATA' NE 'NO_LOCKDATA').ZI90                     01638600
&ZXLOCKDATA           SETC  ''             RESET INPUT/OUTPUT           01638700
.ZI90                 ANOP  ,                                           01638800
.*-------------------------------------------------------------------   01638900
.***AI.L25  XLOCKDATA CL8                                               01639000
                      AIF   ('&ZXLOCKDATA' EQ '').ZI90E                 01639100
                      AIF   ('&ZXLOCKDATA' EQ 'OUTPUT').ZI90E           01639200
&ZCGPR                SETC  '&XLOCKDATA'                                01639300
.*                                                                      01639400
                      AIF   ('&XLOCKDATA'(1,1) NE '(').ZI90B            01639500
&ZCGPR   SETC  '0('.'&XLOCKDATA'(2,K'&XLOCKDATA-2).')'                  01639600
.ZI90B                ANOP  ,                                           01639700
.*                                                                      01639800
&ZOPN                 SETA  &ZOPN+1                                     01639900
&ZOPL(&ZOPN)          SETC  ' '                                         01640000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01640100
&ZOPV(&ZOPN)          SETC  '72(8,1),&ZCGPR'                            01640200
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKDATA XLOCKDATA'                  01640300
.*                                                                      01640400
.ZI90E                ANOP  ,                                           01640500
.*-------------------------------------------------------------------   01640600
.***AI.L18  XEXTRESTOKEN CL16                                           01640700
         AIF   ('&XEXTRESTOKEN' NE 'NO_EXTRESTOKEN').ZI93               01640800
&ZXEXTRESTOKEN        SETC  ''             RESET INPUT/OUTPUT           01640900
.ZI93                 ANOP  ,                                           01641000
.*-------------------------------------------------------------------   01641100
.***AI.L25  XEXTRESTOKEN CL16                                           01641200
                      AIF   ('&ZXEXTRESTOKEN' EQ '').ZI93E              01641300
                      AIF   ('&ZXEXTRESTOKEN' EQ 'OUTPUT').ZI93E        01641400
&ZCGPR                SETC  '&XEXTRESTOKEN'                             01641500
.*                                                                      01641600
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZI93B         01641700
&ZCGPR   SETC  '0('.'&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2).')'            01641800
.ZI93B                ANOP  ,                                           01641900
.*                                                                      01642000
&ZOPN                 SETA  &ZOPN+1                                     01642100
&ZOPL(&ZOPN)          SETC  ' '                                         01642200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01642300
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           01642400
&ZOPD(&ZOPN)          SETC  '++ &ZXEXTRESTOKEN XEXTRESTOKEN'            01642500
.*                                                                      01642600
.ZI93E                ANOP  ,                                           01642700
.*-------------------------------------------------------------------   01642800
.***AI.L18  XBUFNUM XL1                                                 01642900
         AIF   ('&XBUFNUM' NE 'NO_BUFNUM').ZI99                         01643000
&ZXBUFNUM             SETC  ''             RESET INPUT/OUTPUT           01643100
.ZI99                 ANOP  ,                                           01643200
.*-------------------------------------------------------------------   01643300
.***AI.L25  XBUFNUM XL1                                                 01643400
                      AIF   ('&ZXBUFNUM' EQ '').ZI99E                   01643500
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI99E             01643600
&ZCGPR                SETC  '&XBUFNUM'                                  01643700
.*                                                                      01643800
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI99B              01643900
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      01644000
                      AGO   .ZI99D                                      01644100
.ZI99B                ANOP  ,                                           01644200
.*                                                                      01644300
&ZC                   SETC  '&XBUFNUM'(1,1)                             01644400
                      AIF   (T'&ZC NE 'N').ZI99D                        01644500
&ZC                   SETC  '&XBUFNUM'                                  01644600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI99D               01644700
&ZCGPR                SETC  '=AL1(&XBUFNUM)'                            01644800
.*                                                                      01644900
.ZI99D                ANOP  ,                                           01645000
.*                                                                      01645100
&ZOPN                 SETA  &ZOPN+1                                     01645200
&ZOPL(&ZOPN)          SETC  ' '                                         01645300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01645400
&ZOPV(&ZOPN)          SETC  '98(1,1),&ZCGPR'                            01645500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      01645600
.*                                                                      01645700
.ZI99E                ANOP  ,                                           01645800
.*-------------------------------------------------------------------   01645900
.***AI.L18  XBUFINCRNUM XL1                                             01646000
         AIF   ('&XBUFINCRNUM' NE 'NO_BUFINCRNUM').ZI100                01646100
&ZXBUFINCRNUM         SETC  ''             RESET INPUT/OUTPUT           01646200
.ZI100                ANOP  ,                                           01646300
.*-------------------------------------------------------------------   01646400
.***AI.L25  XBUFINCRNUM XL1                                             01646500
                      AIF   ('&ZXBUFINCRNUM' EQ '').ZI100E              01646600
                      AIF   ('&ZXBUFINCRNUM' EQ 'OUTPUT').ZI100E        01646700
&ZCGPR                SETC  '&XBUFINCRNUM'                              01646800
.*                                                                      01646900
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZI100B         01647000
&ZCGPR   SETC  '0('.'&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2).')'              01647100
                      AGO   .ZI100D                                     01647200
.ZI100B               ANOP  ,                                           01647300
.*                                                                      01647400
&ZC                   SETC  '&XBUFINCRNUM'(1,1)                         01647500
                      AIF   (T'&ZC NE 'N').ZI100D                       01647600
&ZC                   SETC  '&XBUFINCRNUM'                              01647700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI100D              01647800
&ZCGPR                SETC  '=AL1(&XBUFINCRNUM)'                        01647900
.*                                                                      01648000
.ZI100D               ANOP  ,                                           01648100
.*                                                                      01648200
&ZOPN                 SETA  &ZOPN+1                                     01648300
&ZOPL(&ZOPN)          SETC  ' '                                         01648400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01648500
&ZOPV(&ZOPN)          SETC  '99(1,1),&ZCGPR'                            01648600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFINCRNUM XBUFINCRNUM'              01648700
.*                                                                      01648800
.ZI100E               ANOP  ,                                           01648900
.*-------------------------------------------------------------------   01649000
.***AI.L18  XLOCKINDEX F                                                01649100
         AIF   ('&XLOCKINDEX' NE 'NO_LOCKINDEX').ZI107                  01649200
&ZXLOCKINDEX          SETC  ''             RESET INPUT/OUTPUT           01649300
.ZI107                ANOP  ,                                           01649400
.*-------------------------------------------------------------------   01649500
.***AI.L25  XLOCKINDEX F                                                01649600
                      AIF   ('&ZXLOCKINDEX' EQ '').ZI107E               01649700
                      AIF   ('&ZXLOCKINDEX' EQ 'OUTPUT').ZI107E         01649800
&ZCGPR                SETC  '&XLOCKINDEX'                               01649900
.*                                                                      01650000
                      AIF   ('&XLOCKINDEX'(1,1) NE '(').ZI107B          01650100
&ZCGPR   SETC  '0('.'&XLOCKINDEX'(2,K'&XLOCKINDEX-2).')'                01650200
                      AGO   .ZI107D                                     01650300
.ZI107B               ANOP  ,                                           01650400
.*                                                                      01650500
&ZC                   SETC  '&XLOCKINDEX'(1,1)                          01650600
                      AIF   (T'&ZC NE 'N').ZI107D                       01650700
&ZC                   SETC  '&XLOCKINDEX'                               01650800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI107D              01650900
&ZCGPR                SETC  '=FL4''&XLOCKINDEX'''                       01651000
.*                                                                      01651100
.ZI107D               ANOP  ,                                           01651200
.*                                                                      01651300
&ZOPN                 SETA  &ZOPN+1                                     01651400
&ZOPL(&ZOPN)          SETC  ' '                                         01651500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01651600
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           01651700
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKINDEX XLOCKINDEX'                01651800
.*                                                                      01651900
.ZI107E               ANOP  ,                                           01652000
.*-------------------------------------------------------------------   01652100
.***AI.L18  XLISTNUM F                                                  01652200
         AIF   ('&XLISTNUM' NE 'NO_LISTNUM').ZI108                      01652300
&ZXLISTNUM            SETC  ''             RESET INPUT/OUTPUT           01652400
.ZI108                ANOP  ,                                           01652500
.*-------------------------------------------------------------------   01652600
.***AI.L25  XLISTNUM F                                                  01652700
                      AIF   ('&ZXLISTNUM' EQ '').ZI108E                 01652800
                      AIF   ('&ZXLISTNUM' EQ 'OUTPUT').ZI108E           01652900
&ZCGPR                SETC  '&XLISTNUM'                                 01653000
.*                                                                      01653100
                      AIF   ('&XLISTNUM'(1,1) NE '(').ZI108B            01653200
&ZCGPR   SETC  '0('.'&XLISTNUM'(2,K'&XLISTNUM-2).')'                    01653300
                      AGO   .ZI108D                                     01653400
.ZI108B               ANOP  ,                                           01653500
.*                                                                      01653600
&ZC                   SETC  '&XLISTNUM'(1,1)                            01653700
                      AIF   (T'&ZC NE 'N').ZI108D                       01653800
&ZC                   SETC  '&XLISTNUM'                                 01653900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI108D              01654000
&ZCGPR                SETC  '=AL4(&XLISTNUM)'                           01654100
.*                                                                      01654200
.ZI108D               ANOP  ,                                           01654300
.*                                                                      01654400
&ZOPN                 SETA  &ZOPN+1                                     01654500
&ZOPL(&ZOPN)          SETC  ' '                                         01654600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01654700
&ZOPV(&ZOPN)          SETC  '116(4,1),&ZCGPR'                           01654800
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUM XLISTNUM'                    01654900
.*                                                                      01655000
.ZI108E               ANOP  ,                                           01655100
.*-------------------------------------------------------------------   01655200
.***AI.L18  XENTRYID CL12                                               01655300
         AIF   ('&XENTRYID' NE 'NO_ENTRYID').ZI109                      01655400
&ZXENTRYID            SETC  ''             RESET INPUT/OUTPUT           01655500
.ZI109                ANOP  ,                                           01655600
.*-------------------------------------------------------------------   01655700
.***AI.L25  XENTRYID CL12                                               01655800
                      AIF   ('&ZXENTRYID' EQ '').ZI109E                 01655900
                      AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZI109E           01656000
&ZCGPR                SETC  '&XENTRYID'                                 01656100
.*                                                                      01656200
                      AIF   ('&XENTRYID'(1,1) NE '(').ZI109B            01656300
&ZCGPR   SETC  '0('.'&XENTRYID'(2,K'&XENTRYID-2).')'                    01656400
.ZI109B               ANOP  ,                                           01656500
.*                                                                      01656600
&ZOPN                 SETA  &ZOPN+1                                     01656700
&ZOPL(&ZOPN)          SETC  ' '                                         01656800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01656900
&ZOPV(&ZOPN)          SETC  '120(12,1),&ZCGPR'                          01657000
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYID XENTRYID'                    01657100
.*                                                                      01657200
.ZI109E               ANOP  ,                                           01657300
.*-------------------------------------------------------------------   01657400
.***AI.L18  XNEWVERS CL8                                                01657500
         AIF   ('&XNEWVERS' NE 'NO_NEWVERS').ZI110                      01657600
&ZXNEWVERS            SETC  ''             RESET INPUT/OUTPUT           01657700
.ZI110                ANOP  ,                                           01657800
.*-------------------------------------------------------------------   01657900
.***AI.L25  XNEWVERS CL8                                                01658000
                      AIF   ('&ZXNEWVERS' EQ '').ZI110E                 01658100
                      AIF   ('&ZXNEWVERS' EQ 'OUTPUT').ZI110E           01658200
&ZCGPR                SETC  '&XNEWVERS'                                 01658300
.*                                                                      01658400
                      AIF   ('&XNEWVERS'(1,1) NE '(').ZI110B            01658500
&ZCGPR   SETC  '0('.'&XNEWVERS'(2,K'&XNEWVERS-2).')'                    01658600
.ZI110B               ANOP  ,                                           01658700
.*                                                                      01658800
&ZOPN                 SETA  &ZOPN+1                                     01658900
&ZOPL(&ZOPN)          SETC  ' '                                         01659000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01659100
&ZOPV(&ZOPN)          SETC  '132(8,1),&ZCGPR'                           01659200
&ZOPD(&ZOPN)          SETC  '++ &ZXNEWVERS XNEWVERS'                    01659300
.*                                                                      01659400
.ZI110E               ANOP  ,                                           01659500
.*-------------------------------------------------------------------   01659600
.***AI.L18  XVERSCOMP CL8                                               01659700
         AIF   ('&XVERSCOMP' NE 'NO_VERSCOMP').ZI111                    01659800
&ZXVERSCOMP           SETC  ''             RESET INPUT/OUTPUT           01659900
.ZI111                ANOP  ,                                           01660000
.*-------------------------------------------------------------------   01660100
.***AI.L25  XVERSCOMP CL8                                               01660200
                      AIF   ('&ZXVERSCOMP' EQ '').ZI111E                01660300
                      AIF   ('&ZXVERSCOMP' EQ 'OUTPUT').ZI111E          01660400
&ZCGPR                SETC  '&XVERSCOMP'                                01660500
.*                                                                      01660600
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZI111B           01660700
&ZCGPR   SETC  '0('.'&XVERSCOMP'(2,K'&XVERSCOMP-2).')'                  01660800
.ZI111B               ANOP  ,                                           01660900
.*                                                                      01661000
&ZOPN                 SETA  &ZOPN+1                                     01661100
&ZOPL(&ZOPN)          SETC  ' '                                         01661200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01661300
&ZOPV(&ZOPN)          SETC  '140(8,1),&ZCGPR'                           01661400
&ZOPD(&ZOPN)          SETC  '++ &ZXVERSCOMP XVERSCOMP'                  01661500
.*                                                                      01661600
.ZI111E               ANOP  ,                                           01661700
.*-------------------------------------------------------------------   01661800
.***AI.L18  XLISTDESC CL32                                              01661900
         AIF   ('&XLISTDESC' NE 'NO_LISTDESC').ZI114                    01662000
&ZXLISTDESC           SETC  ''             RESET INPUT/OUTPUT           01662100
.ZI114                ANOP  ,                                           01662200
.*-------------------------------------------------------------------   01662300
.***AI.L25  XLISTDESC CL32                                              01662400
                      AIF   ('&ZXLISTDESC' EQ '').ZI114E                01662500
                      AIF   ('&ZXLISTDESC' EQ 'OUTPUT').ZI114E          01662600
&ZCGPR                SETC  '&XLISTDESC'                                01662700
.*                                                                      01662800
                      AIF   ('&XLISTDESC'(1,1) NE '(').ZI114B           01662900
&ZCGPR   SETC  '0('.'&XLISTDESC'(2,K'&XLISTDESC-2).')'                  01663000
.ZI114B               ANOP  ,                                           01663100
.*                                                                      01663200
&ZOPN                 SETA  &ZOPN+1                                     01663300
&ZOPL(&ZOPN)          SETC  ' '                                         01663400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01663500
&ZOPV(&ZOPN)          SETC  '180(32,1),&ZCGPR'                          01663600
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTDESC XLISTDESC'                  01663700
.*                                                                      01663800
.ZI114E               ANOP  ,                                           01663900
.*-------------------------------------------------------------------   01664000
.***AI.L18  XELEMNUM XL1                                                01664100
         AIF   ('&XELEMNUM' NE 'NO_ELEMNUM').ZI121                      01664200
&ZXELEMNUM            SETC  ''             RESET INPUT/OUTPUT           01664300
.ZI121                ANOP  ,                                           01664400
.*-------------------------------------------------------------------   01664500
.***AI.L25  XELEMNUM XL1                                                01664600
                      AIF   ('&ZXELEMNUM' EQ '').ZI121E                 01664700
                      AIF   ('&ZXELEMNUM' EQ 'OUTPUT').ZI121E           01664800
&ZCGPR                SETC  '&XELEMNUM'                                 01664900
.*                                                                      01665000
                      AIF   ('&XELEMNUM'(1,1) NE '(').ZI121B            01665100
&ZCGPR   SETC  '0('.'&XELEMNUM'(2,K'&XELEMNUM-2).')'                    01665200
                      AGO   .ZI121D                                     01665300
.ZI121B               ANOP  ,                                           01665400
.*                                                                      01665500
&ZC                   SETC  '&XELEMNUM'(1,1)                            01665600
                      AIF   (T'&ZC NE 'N').ZI121D                       01665700
&ZC                   SETC  '&XELEMNUM'                                 01665800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI121D              01665900
&ZCGPR                SETC  '=AL1(&XELEMNUM)'                           01666000
.*                                                                      01666100
.ZI121D               ANOP  ,                                           01666200
.*                                                                      01666300
&ZOPN                 SETA  &ZOPN+1                                     01666400
&ZOPL(&ZOPN)          SETC  ' '                                         01666500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01666600
&ZOPV(&ZOPN)          SETC  '104(1,1),&ZCGPR'                           01666700
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMNUM XELEMNUM'                    01666800
.*                                                                      01666900
.ZI121E               ANOP  ,                                           01667000
.*-------------------------------------------------------------------   01667100
.***AI.L25  XSTARTINDEX XL2                                             01667200
                      AIF   ('&ZXSTARTINDEX' EQ '').ZI130E              01667300
                      AIF   ('&ZXSTARTINDEX' EQ 'OUTPUT').ZI130E        01667400
&ZCGPR                SETC  '&XSTARTINDEX'                              01667500
.*                                                                      01667600
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZI130B         01667700
&ZCGPR   SETC  '0('.'&XSTARTINDEX'(2,K'&XSTARTINDEX-2).')'              01667800
                      AGO   .ZI130D                                     01667900
.ZI130B               ANOP  ,                                           01668000
.*                                                                      01668100
&ZC                   SETC  '&XSTARTINDEX'(1,1)                         01668200
                      AIF   (T'&ZC NE 'N').ZI130D                       01668300
&ZC                   SETC  '&XSTARTINDEX'                              01668400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI130D              01668500
&ZCGPR                SETC  '=AL2(&XSTARTINDEX)'                        01668600
.*                                                                      01668700
.ZI130D               ANOP  ,                                           01668800
.*                                                                      01668900
&ZOPN                 SETA  &ZOPN+1                                     01669000
&ZOPL(&ZOPN)          SETC  ' '                                         01669100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01669200
&ZOPV(&ZOPN)          SETC  '108(2,1),&ZCGPR'                           01669300
&ZOPD(&ZOPN)          SETC  '++ &ZXSTARTINDEX XSTARTINDEX'              01669400
.*                                                                      01669500
.ZI130E               ANOP  ,                                           01669600
.*-------------------------------------------------------------------   01669700
.***AI.L25  XENDINDEX XL2                                               01669800
                      AIF   ('&ZXENDINDEX' EQ '').ZI131E                01669900
                      AIF   ('&ZXENDINDEX' EQ 'OUTPUT').ZI131E          01670000
&ZCGPR                SETC  '&XENDINDEX'                                01670100
.*                                                                      01670200
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZI131B           01670300
&ZCGPR   SETC  '0('.'&XENDINDEX'(2,K'&XENDINDEX-2).')'                  01670400
                      AGO   .ZI131D                                     01670500
.ZI131B               ANOP  ,                                           01670600
.*                                                                      01670700
&ZC                   SETC  '&XENDINDEX'(1,1)                           01670800
                      AIF   (T'&ZC NE 'N').ZI131D                       01670900
&ZC                   SETC  '&XENDINDEX'                                01671000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI131D              01671100
&ZCGPR                SETC  '=AL2(&XENDINDEX)'                          01671200
.*                                                                      01671300
.ZI131D               ANOP  ,                                           01671400
.*                                                                      01671500
&ZOPN                 SETA  &ZOPN+1                                     01671600
&ZOPL(&ZOPN)          SETC  ' '                                         01671700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01671800
&ZOPV(&ZOPN)          SETC  '110(2,1),&ZCGPR'                           01671900
&ZOPD(&ZOPN)          SETC  '++ &ZXENDINDEX XENDINDEX'                  01672000
.*                                                                      01672100
.ZI131E               ANOP  ,                                           01672200
.*-------------------------------------------------------------------   01672300
.***AI.L25  XVECTORINDEX F                                              01672400
                      AIF   ('&ZXVECTORINDEX' EQ '').ZI133E             01672500
                      AIF   ('&ZXVECTORINDEX' EQ 'OUTPUT').ZI133E       01672600
&ZCGPR                SETC  '&XVECTORINDEX'                             01672700
.*                                                                      01672800
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZI133B        01672900
&ZCGPR   SETC  '0('.'&XVECTORINDEX'(2,K'&XVECTORINDEX-2).')'            01673000
                      AGO   .ZI133D                                     01673100
.ZI133B               ANOP  ,                                           01673200
.*                                                                      01673300
&ZC                   SETC  '&XVECTORINDEX'(1,1)                        01673400
                      AIF   (T'&ZC NE 'N').ZI133D                       01673500
&ZC                   SETC  '&XVECTORINDEX'                             01673600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI133D              01673700
&ZCGPR                SETC  '=FL4''&XVECTORINDEX'''                     01673800
.*                                                                      01673900
.ZI133D               ANOP  ,                                           01674000
.*                                                                      01674100
&ZOPN                 SETA  &ZOPN+1                                     01674200
&ZOPL(&ZOPN)          SETC  ' '                                         01674300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01674400
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           01674500
&ZOPD(&ZOPN)          SETC  '++ &ZXVECTORINDEX XVECTORINDEX'            01674600
.*                                                                      01674700
.ZI133E               ANOP  ,                                           01674800
.*-------------------------------------------------------------------   01674900
.***AI.L18  XLISTLIMIT F                                                01675000
         AIF   ('&XLISTLIMIT' NE 'NO_LISTLIMIT').ZI135                  01675100
&ZXLISTLIMIT          SETC  ''             RESET INPUT/OUTPUT           01675200
.ZI135                ANOP  ,                                           01675300
.*-------------------------------------------------------------------   01675400
.***AI.L25  XLISTLIMIT F                                                01675500
                      AIF   ('&ZXLISTLIMIT' EQ '').ZI135E               01675600
                      AIF   ('&ZXLISTLIMIT' EQ 'OUTPUT').ZI135E         01675700
&ZCGPR                SETC  '&XLISTLIMIT'                               01675800
.*                                                                      01675900
                      AIF   ('&XLISTLIMIT'(1,1) NE '(').ZI135B          01676000
&ZCGPR   SETC  '0('.'&XLISTLIMIT'(2,K'&XLISTLIMIT-2).')'                01676100
                      AGO   .ZI135D                                     01676200
.ZI135B               ANOP  ,                                           01676300
.*                                                                      01676400
&ZC                   SETC  '&XLISTLIMIT'(1,1)                          01676500
                      AIF   (T'&ZC NE 'N').ZI135D                       01676600
&ZC                   SETC  '&XLISTLIMIT'                               01676700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI135D              01676800
&ZCGPR                SETC  '=AL4(&XLISTLIMIT)'                         01676900
.*                                                                      01677000
.ZI135D               ANOP  ,                                           01677100
.*                                                                      01677200
&ZOPN                 SETA  &ZOPN+1                                     01677300
&ZOPL(&ZOPN)          SETC  ' '                                         01677400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01677500
&ZOPV(&ZOPN)          SETC  '120(4,1),&ZCGPR'                           01677600
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTLIMIT XLISTLIMIT'                01677700
.*                                                                      01677800
.ZI135E               ANOP  ,                                           01677900
.*-------------------------------------------------------------------   01678000
.***AI.L18  XENTRYNAME CL16                                             01678100
         AIF   ('&XENTRYNAME' NE 'NO_ENTRYNAME').ZI138                  01678200
&ZXENTRYNAME          SETC  ''             RESET INPUT/OUTPUT           01678300
.ZI138                ANOP  ,                                           01678400
.*-------------------------------------------------------------------   01678500
.***AI.L25  XENTRYNAME CL16                                             01678600
                      AIF   ('&ZXENTRYNAME' EQ '').ZI138E               01678700
                      AIF   ('&ZXENTRYNAME' EQ 'OUTPUT').ZI138E         01678800
&ZCGPR                SETC  '&XENTRYNAME'                               01678900
.*                                                                      01679000
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZI138B          01679100
&ZCGPR   SETC  '0('.'&XENTRYNAME'(2,K'&XENTRYNAME-2).')'                01679200
.ZI138B               ANOP  ,                                           01679300
.*                                                                      01679400
&ZOPN                 SETA  &ZOPN+1                                     01679500
&ZOPL(&ZOPN)          SETC  ' '                                         01679600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01679700
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          01679800
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYNAME XENTRYNAME'                01679900
.*                                                                      01680000
.ZI138E               ANOP  ,                                           01680100
.*-------------------------------------------------------------------   01680200
.***AI.L18  XENTRYKEY CL16                                              01680300
         AIF   ('&XENTRYKEY' NE 'NO_ENTRYKEY').ZI140                    01680400
&ZXENTRYKEY           SETC  ''             RESET INPUT/OUTPUT           01680500
.ZI140                ANOP  ,                                           01680600
.*-------------------------------------------------------------------   01680700
.***AI.L25  XENTRYKEY CL16                                              01680800
                      AIF   ('&ZXENTRYKEY' EQ '').ZI140E                01680900
                      AIF   ('&ZXENTRYKEY' EQ 'OUTPUT').ZI140E          01681000
&ZCGPR                SETC  '&XENTRYKEY'                                01681100
.*                                                                      01681200
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZI140B           01681300
&ZCGPR   SETC  '0('.'&XENTRYKEY'(2,K'&XENTRYKEY-2).')'                  01681400
.ZI140B               ANOP  ,                                           01681500
.*                                                                      01681600
&ZOPN                 SETA  &ZOPN+1                                     01681700
&ZOPL(&ZOPN)          SETC  ' '                                         01681800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01681900
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          01682000
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYKEY XENTRYKEY'                  01682100
.*                                                                      01682200
.ZI140E               ANOP  ,                                           01682300
.*-------------------------------------------------------------------   01682400
.***AI.L18  XKEYCOMP CL16                                               01682500
         AIF   ('&XKEYCOMP' NE 'NO_KEYCOMP').ZI142                      01682600
&ZXKEYCOMP            SETC  ''             RESET INPUT/OUTPUT           01682700
.ZI142                ANOP  ,                                           01682800
.*-------------------------------------------------------------------   01682900
.***AI.L25  XKEYCOMP CL16                                               01683000
                      AIF   ('&ZXKEYCOMP' EQ '').ZI142E                 01683100
                      AIF   ('&ZXKEYCOMP' EQ 'OUTPUT').ZI142E           01683200
&ZCGPR                SETC  '&XKEYCOMP'                                 01683300
.*                                                                      01683400
                      AIF   ('&XKEYCOMP'(1,1) NE '(').ZI142B            01683500
&ZCGPR   SETC  '0('.'&XKEYCOMP'(2,K'&XKEYCOMP-2).')'                    01683600
.ZI142B               ANOP  ,                                           01683700
.*                                                                      01683800
&ZOPN                 SETA  &ZOPN+1                                     01683900
&ZOPL(&ZOPN)          SETC  ' '                                         01684000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01684100
&ZOPV(&ZOPN)          SETC  '148(16,1),&ZCGPR'                          01684200
&ZOPD(&ZOPN)          SETC  '++ &ZXKEYCOMP XKEYCOMP'                    01684300
.*                                                                      01684400
.ZI142E               ANOP  ,                                           01684500
.*-------------------------------------------------------------------   01684600
.***AI.L18  XRESTOKEN CL8                                               01684700
         AIF   ('&XRESTOKEN' NE 'NO_RESTOKEN').ZI147                    01684800
&ZXRESTOKEN           SETC  ''             RESET INPUT/OUTPUT           01684900
.ZI147                ANOP  ,                                           01685000
.*-------------------------------------------------------------------   01685100
.***AI.L25  XRESTOKEN CL8                                               01685200
                      AIF   ('&ZXRESTOKEN' EQ '').ZI147E                01685300
                      AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZI147E          01685400
&ZCGPR                SETC  '&XRESTOKEN'                                01685500
.*                                                                      01685600
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZI147B           01685700
&ZCGPR   SETC  '0('.'&XRESTOKEN'(2,K'&XRESTOKEN-2).')'                  01685800
.ZI147B               ANOP  ,                                           01685900
.*                                                                      01686000
&ZOPN                 SETA  &ZOPN+1                                     01686100
&ZOPL(&ZOPN)          SETC  ' '                                         01686200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01686300
&ZOPV(&ZOPN)          SETC  '164(8,1),&ZCGPR'                           01686400
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTOKEN XRESTOKEN'                  01686500
.*                                                                      01686600
.ZI147E               ANOP  ,                                           01686700
.*-------------------------------------------------------------------   01686800
.***AI.L25  XFIRSTELEM XL2                                              01686900
                      AIF   ('&ZXFIRSTELEM' EQ '').ZI150E               01687000
                      AIF   ('&ZXFIRSTELEM' EQ 'OUTPUT').ZI150E         01687100
&ZCGPR                SETC  '&XFIRSTELEM'                               01687200
.*                                                                      01687300
                      AIF   ('&XFIRSTELEM'(1,1) NE '(').ZI150B          01687400
&ZCGPR   SETC  '0('.'&XFIRSTELEM'(2,K'&XFIRSTELEM-2).')'                01687500
                      AGO   .ZI150D                                     01687600
.ZI150B               ANOP  ,                                           01687700
.*                                                                      01687800
&ZC                   SETC  '&XFIRSTELEM'(1,1)                          01687900
                      AIF   (T'&ZC NE 'N').ZI150D                       01688000
&ZC                   SETC  '&XFIRSTELEM'                               01688100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI150D              01688200
&ZCGPR                SETC  '=AL2(&XFIRSTELEM)'                         01688300
.*                                                                      01688400
.ZI150D               ANOP  ,                                           01688500
.*                                                                      01688600
&ZOPN                 SETA  &ZOPN+1                                     01688700
&ZOPL(&ZOPN)          SETC  ' '                                         01688800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01688900
&ZOPV(&ZOPN)          SETC  '164(2,1),&ZCGPR'                           01689000
&ZOPD(&ZOPN)          SETC  '++ &ZXFIRSTELEM XFIRSTELEM'                01689100
.*                                                                      01689200
.ZI150E               ANOP  ,                                           01689300
.*-------------------------------------------------------------------   01689400
.***AI.L25  XLASTELEM XL2                                               01689500
                      AIF   ('&ZXLASTELEM' EQ '').ZI151E                01689600
                      AIF   ('&ZXLASTELEM' EQ 'OUTPUT').ZI151E          01689700
&ZCGPR                SETC  '&XLASTELEM'                                01689800
.*                                                                      01689900
                      AIF   ('&XLASTELEM'(1,1) NE '(').ZI151B           01690000
&ZCGPR   SETC  '0('.'&XLASTELEM'(2,K'&XLASTELEM-2).')'                  01690100
                      AGO   .ZI151D                                     01690200
.ZI151B               ANOP  ,                                           01690300
.*                                                                      01690400
&ZC                   SETC  '&XLASTELEM'(1,1)                           01690500
                      AIF   (T'&ZC NE 'N').ZI151D                       01690600
&ZC                   SETC  '&XLASTELEM'                                01690700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI151D              01690800
&ZCGPR                SETC  '=AL2(&XLASTELEM)'                          01690900
.*                                                                      01691000
.ZI151D               ANOP  ,                                           01691100
.*                                                                      01691200
&ZOPN                 SETA  &ZOPN+1                                     01691300
&ZOPL(&ZOPN)          SETC  ' '                                         01691400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01691500
&ZOPV(&ZOPN)          SETC  '166(2,1),&ZCGPR'                           01691600
&ZOPD(&ZOPN)          SETC  '++ &ZXLASTELEM XLASTELEM'                  01691700
.*                                                                      01691800
.ZI151E               ANOP  ,                                           01691900
.*-------------------------------------------------------------------   01692000
.***AI.LVER01                                                           01692100
                      AIF  (&XPLISTVER LT 1).ZI162Z                     01692200
.*-------------------------------------------------------------------   01692300
.***AI.LVER02                                                           01692400
.ZI162Z               ANOP  ,                                           01692500
.*-------------------------------------------------------------------   01692600
.***AI.LVER01                                                           01692700
                      AIF  (&XPLISTVER LT 1).ZI163Z                     01692800
.*-------------------------------------------------------------------   01692900
.***AI.LVER02                                                           01693000
.ZI163Z               ANOP  ,                                           01693100
.*-------------------------------------------------------------------   01693200
.***AI.LVER01                                                           01693300
                      AIF  (&XPLISTVER LT 1).ZI164Z                     01693400
.*-------------------------------------------------------------------   01693500
.***AI.LVER02                                                           01693600
.ZI164Z               ANOP  ,                                           01693700
.*-------------------------------------------------------------------   01693800
.***AI.LVER01                                                           01693900
                      AIF  (&XPLISTVER LT 1).ZI165Z                     01694000
.*-------------------------------------------------------------------   01694100
.***AI.LVER02                                                           01694200
.ZI165Z               ANOP  ,                                           01694300
.*-------------------------------------------------------------------   01694400
.***AI.LVER01                                                           01694500
                      AIF  (&XPLISTVER LT 1).ZI166Z                     01694600
.*-------------------------------------------------------------------   01694700
.***AI.LVER02                                                           01694800
.ZI166Z               ANOP  ,                                           01694900
.*-------------------------------------------------------------------   01695000
.***AI.LVER01                                                           01695100
                      AIF  (&XPLISTVER LT 1).ZI167Z                     01695200
.*-------------------------------------------------------------------   01695300
.***AI.LVER02                                                           01695400
.ZI167Z               ANOP  ,                                           01695500
.*-------------------------------------------------------------------   01695600
.***AI.LVER01                                                           01695700
                      AIF  (&XPLISTVER LT 1).ZI168Z                     01695800
.*-------------------------------------------------------------------   01695900
.***AI.L18  XLISTKEYINC F                                               01696000
         AIF   ('&XLISTKEYINC' NE 'NO_LISTKEYINC').ZI168                01696100
&ZXLISTKEYINC         SETC  ''             RESET INPUT/OUTPUT           01696200
.ZI168                ANOP  ,                                           01696300
.*-------------------------------------------------------------------   01696400
.***AI.L25  XLISTKEYINC F                                               01696500
                      AIF   ('&ZXLISTKEYINC' EQ '').ZI168E              01696600
                      AIF   ('&ZXLISTKEYINC' EQ 'OUTPUT').ZI168E        01696700
&ZCGPR                SETC  '&XLISTKEYINC'                              01696800
.*                                                                      01696900
                      AIF   ('&XLISTKEYINC'(1,1) NE '(').ZI168B         01697000
&ZCGPR   SETC  '0('.'&XLISTKEYINC'(2,K'&XLISTKEYINC-2).')'              01697100
                      AGO   .ZI168D                                     01697200
.ZI168B               ANOP  ,                                           01697300
.*                                                                      01697400
&ZC                   SETC  '&XLISTKEYINC'(1,1)                         01697500
                      AIF   (T'&ZC NE 'N').ZI168D                       01697600
&ZC                   SETC  '&XLISTKEYINC'                              01697700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI168D              01697800
&ZCGPR                SETC  '=AL4(&XLISTKEYINC)'                        01697900
.*                                                                      01698000
.ZI168D               ANOP  ,                                           01698100
.*                                                                      01698200
&ZOPN                 SETA  &ZOPN+1                                     01698300
&ZOPL(&ZOPN)          SETC  ' '                                         01698400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01698500
&ZOPV(&ZOPN)          SETC  '272(4,1),&ZCGPR'                           01698600
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEYINC XLISTKEYINC'              01698700
.*                                                                      01698800
.ZI168E               ANOP  ,                                           01698900
.*-------------------------------------------------------------------   01699000
.***AI.LVER02                                                           01699100
.ZI168Z               ANOP  ,                                           01699200
.*-------------------------------------------------------------------   01699300
.***AI.LVER01                                                           01699400
                      AIF  (&XPLISTVER LT 1).ZI170Z                     01699500
.*-------------------------------------------------------------------   01699600
.***AI.L18  XLISTKEY CL16                                               01699700
         AIF   ('&XLISTKEY' NE 'NO_LISTKEY').ZI170                      01699800
&ZXLISTKEY            SETC  ''             RESET INPUT/OUTPUT           01699900
.ZI170                ANOP  ,                                           01700000
.*-------------------------------------------------------------------   01700100
.***AI.L25  XLISTKEY CL16                                               01700200
                      AIF   ('&ZXLISTKEY' EQ '').ZI170E                 01700300
                      AIF   ('&ZXLISTKEY' EQ 'OUTPUT').ZI170E           01700400
&ZCGPR                SETC  '&XLISTKEY'                                 01700500
.*                                                                      01700600
                      AIF   ('&XLISTKEY'(1,1) NE '(').ZI170B            01700700
&ZCGPR   SETC  '0('.'&XLISTKEY'(2,K'&XLISTKEY-2).')'                    01700800
.ZI170B               ANOP  ,                                           01700900
.*                                                                      01701000
&ZOPN                 SETA  &ZOPN+1                                     01701100
&ZOPL(&ZOPN)          SETC  ' '                                         01701200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01701300
&ZOPV(&ZOPN)          SETC  '212(16,1),&ZCGPR'                          01701400
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTKEY XLISTKEY'                    01701500
.*                                                                      01701600
.ZI170E               ANOP  ,                                           01701700
.*-------------------------------------------------------------------   01701800
.***AI.LVER02                                                           01701900
.ZI170Z               ANOP  ,                                           01702000
.*-------------------------------------------------------------------   01702100
.***AI.LVER01                                                           01702200
                      AIF  (&XPLISTVER LT 1).ZI172Z                     01702300
.*-------------------------------------------------------------------   01702400
.***AI.L18  XMAXLISTKEY CL16                                            01702500
         AIF   ('&XMAXLISTKEY' NE 'NO_MAXLISTKEY').ZI172                01702600
&ZXMAXLISTKEY         SETC  ''             RESET INPUT/OUTPUT           01702700
.ZI172                ANOP  ,                                           01702800
.*-------------------------------------------------------------------   01702900
.***AI.L25  XMAXLISTKEY CL16                                            01703000
                      AIF   ('&ZXMAXLISTKEY' EQ '').ZI172E              01703100
                      AIF   ('&ZXMAXLISTKEY' EQ 'OUTPUT').ZI172E        01703200
&ZCGPR                SETC  '&XMAXLISTKEY'                              01703300
.*                                                                      01703400
                      AIF   ('&XMAXLISTKEY'(1,1) NE '(').ZI172B         01703500
&ZCGPR   SETC  '0('.'&XMAXLISTKEY'(2,K'&XMAXLISTKEY-2).')'              01703600
.ZI172B               ANOP  ,                                           01703700
.*                                                                      01703800
&ZOPN                 SETA  &ZOPN+1                                     01703900
&ZOPL(&ZOPN)          SETC  ' '                                         01704000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01704100
&ZOPV(&ZOPN)          SETC  '228(16,1),&ZCGPR'                          01704200
&ZOPD(&ZOPN)          SETC  '++ &ZXMAXLISTKEY XMAXLISTKEY'              01704300
.*                                                                      01704400
.ZI172E               ANOP  ,                                           01704500
.*-------------------------------------------------------------------   01704600
.***AI.LVER02                                                           01704700
.ZI172Z               ANOP  ,                                           01704800
.*-------------------------------------------------------------------   01704900
.***AI.LVER01                                                           01705000
                      AIF  (&XPLISTVER LT 1).ZI174Z                     01705100
.*-------------------------------------------------------------------   01705200
.***AI.L25  XUNC CL16                                                   01705300
                      AIF   ('&ZXUNC' EQ '').ZI174E                     01705400
                      AIF   ('&ZXUNC' EQ 'OUTPUT').ZI174E               01705500
&ZCGPR                SETC  '&XUNC'                                     01705600
.*                                                                      01705700
                      AIF   ('&XUNC'(1,1) NE '(').ZI174B                01705800
&ZCGPR   SETC  '0('.'&XUNC'(2,K'&XUNC-2).')'                            01705900
.ZI174B               ANOP  ,                                           01706000
.*                                                                      01706100
&ZOPN                 SETA  &ZOPN+1                                     01706200
&ZOPL(&ZOPN)          SETC  ' '                                         01706300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01706400
&ZOPV(&ZOPN)          SETC  '244(16,1),&ZCGPR'                          01706500
&ZOPD(&ZOPN)          SETC  '++ &ZXUNC XUNC'                            01706600
.*                                                                      01706700
.ZI174E               ANOP  ,                                           01706800
.*-------------------------------------------------------------------   01706900
.***AI.LVER02                                                           01707000
.ZI174Z               ANOP  ,                                           01707100
.*-------------------------------------------------------------------   01707200
&ZOPN1                SETA &ZOPN                                        01707300
.*******************************************************************    01707400
.***  PROCESS IXLLIST OUTPUT PARAMETERS                                 01707500
.*******************************************************************    01707600
                      ACTR  10000                                       01707700
.*******************************************************************    01707800
.***AO.X02  RETURN CODE PROCESSING                                      01707900
.*******************************************************************    01708000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    01708100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            01708200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             01708300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             01708400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               01708500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                01708600
&ZOPN                 SETA  &ZOPN+1                                     01708700
&ZOPL(&ZOPN)          SETC  ' '                                         01708800
&ZOPO(&ZOPN)          SETC  'ST'                                        01708900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              01709000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01709100
                      AGO   .ZMRETX                                     01709200
.*                                                                      01709300
.ZMRET2               ANOP  ,                                           01709400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01709500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                01709600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                01709700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  01709800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   01709900
&ZOPN                 SETA  &ZOPN+1                                     01710000
&ZOPL(&ZOPN)          SETC  ' '                                         01710100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01710200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 01710300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01710400
.ZMRETX               ANOP  ,                                           01710500
.*******************************************************************    01710600
.***AO.X03  REASON CODE PROCESSING                                      01710700
.*******************************************************************    01710800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    01710900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            01711000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              01711100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             01711200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              01711300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             01711400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                01711500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 01711600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                01711700
&ZOPN                 SETA  &ZOPN+1                                     01711800
&ZOPL(&ZOPN)          SETC  ' '                                         01711900
&ZOPO(&ZOPN)          SETC  'ST'                                        01712000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               01712100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01712200
                      AGO   .ZMRSNX                                     01712300
.*                                                                      01712400
.ZMRSN2               ANOP  ,                                           01712500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01712600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 01712700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                01712800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 01712900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                01713000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   01713100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    01713200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   01713300
&ZOPN                 SETA  &ZOPN+1                                     01713400
&ZOPL(&ZOPN)          SETC  ' '                                         01713500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01713600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  01713700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01713800
.ZMRSNX               ANOP  ,                                           01713900
.*******************************************************************    01714000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01714100
.*******************************************************************    01714200
.ZMFLX                ANOP  ,              MF=L PROCESSING              01714300
.*******************************************************************    01714400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01714500
.*******************************************************************    01714600
                      ACTR  10000                                       01714700
.*                                                                      01714800
                      LCLA  &ZLC           COLUMN POSITION              01714900
                      LCLA  &ZOPX          LIST TABLE INDEX             01715000
                      LCLC  &ZLL           LABEL                        01715100
                      LCLC  &ZLOP          OPERATION                    01715200
                      LCLC  &ZLV           VALUE                        01715300
                      LCLC  &ZLD           DESCRIPTION                  01715400
.*                                                                      01715500
&ZOPX                 SETA  1                                           01715600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01715700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01715800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01715900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01716000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01716100
                      AIF   (K'&ZLD LE 0).ZL5                           01716200
&ZLC                  SETA  35             COMMENT COLUMN               01716300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01716400
&ZLC                  SETA  33             COMMMENT COLUMN              01716500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01716600
&ZLV                  SETC  '&ZLV'.' '                                  01716700
                      AGO   .ZL3                                        01716800
.*                                                                      01716900
.ZL4                  ANOP  ,                                           01717000
&ZLV                  SETC  '&ZLV'.' '                                  01717100
.ZL5                  ANOP  ,                                           01717200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01717300
.*                                                                      01717400
&ZLL     &ZLOP &ZLV                                                     01717500
.*                                                                      01717600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01717700
                      AGO   .ZL2           CONTINUE LOOPING             01717800
.*                                                                      01717900
.ZLX                  ANOP  ,                                           01718000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01718100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01718200
.**------------------------------------------------------------------** 01718300
.**  Start of user maclasm code                                      ** 01718400
.**------------------------------------------------------------------** 01718500
.*                                                                      01718600
.*                                                                      01718700
.**  Only generate code if no errors have been found                 ** 01718800
.*                                                                      01718900
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            01719000
.*                                                                      01719100
.**------------------------------------------------------------------** 01719200
.**  Declares for macro constants                                    ** 01719300
.**------------------------------------------------------------------** 01719400
.*                                                                      01719500
.**  Command codes                                                   ** 01719600
.*                                                                      01719700
               LCLC  &KLISTCMDRLE                                       01719800
               LCLC  &KLISTCMDWLE                                       01719900
               LCLC  &KLISTCMDMLE                                       01720000
               LCLC  &KLISTCMDDLE                                       01720100
               LCLC  &KLISTCMDWMLE                                      01720200
               LCLC  &KLISTCMDMRLE                                      01720300
               LCLC  &KLISTCMDRDLE                                      01720400
               LCLC  &KLISTCMDRL                                        01720500
               LCLC  &KLISTCMDRLS                                       01720600
               LCLC  &KLISTCMDDLS                                       01720700
               LCLC  &KLISTCMDDLES                                      01720800
               LCLC  &KLISTCMDRLTE                                      01720900
               LCLC  &KLISTCMDWLTE                                      01721000
               LCLC  &KLISTCMDRLC                                       01721100
               LCLC  &KLISTCMDWLC                                       01721200
               LCLC  &KLISTCMDRLM                                       01721300
               LCLC  &KLISTCMDDLM                                       01721400
               LCLC  &KLISTCMDRNLTE                                     01721500
               LCLC  &KLISTCMDREQC                               @01A   01721600
               LCLC  &KLISTCMDREMC                               @01A   01721700
               LCLC  &KLISTCMDDEMC                               @01A   01721800
               LCLC  &KLISTCMDREMS                               @01A   01721900
.*                                                                      01722000
&KLISTCMDRLE   SETC  '0'                                                01722100
&KLISTCMDWLE   SETC  '4'                                                01722200
&KLISTCMDMLE   SETC  '8'                                                01722300
&KLISTCMDDLE   SETC  '12'                                               01722400
&KLISTCMDWMLE  SETC  '16'                                               01722500
&KLISTCMDMRLE  SETC  '20'                                               01722600
&KLISTCMDRDLE  SETC  '24'                                               01722700
&KLISTCMDRL    SETC  '28'                                               01722800
&KLISTCMDRLS   SETC  '32'                                               01722900
&KLISTCMDDLS   SETC  '36'                                               01723000
&KLISTCMDDLES  SETC  '40'                                               01723100
&KLISTCMDRLTE  SETC  '44'                                               01723200
&KLISTCMDWLTE  SETC  '48'                                               01723300
&KLISTCMDRLC   SETC  '52'                                               01723400
&KLISTCMDWLC   SETC  '56'                                               01723500
&KLISTCMDRLM   SETC  '60'                                               01723600
&KLISTCMDDLM   SETC  '64'                                               01723700
&KLISTCMDRNLTE SETC  '68'                                               01723800
&KLISTCMDREQC  SETC  '72'                                       @01A    01723900
&KLISTCMDREMC  SETC  '76'                                       @01A    01724000
&KLISTCMDDEMC  SETC  '80'                                       @01A    01724100
&KLISTCMDREMS  SETC  '84'                                       @01A    01724200
.*                                                                      01724300
.*                                                                      01724400
.**  List command type                                               ** 01724500
.*                                                                      01724600
               LCLC  &KLISTCMDTYPE                                      01724700
&KLISTCMDTYPE  SETC  'X''03'''                                          01724800
.*                                                                      01724900
.*                                                                      01725000
.**  Command opcodes                                                 ** 01725100
.*                                                                      01725200
               LCLC  &KLISTOPRLE                                        01725300
               LCLC  &KLISTOPWLE                                        01725400
               LCLC  &KLISTOPMLE                                        01725500
               LCLC  &KLISTOPDLE                                        01725600
               LCLC  &KLISTOPWMLE                                       01725700
               LCLC  &KLISTOPMRLE                                       01725800
               LCLC  &KLISTOPRDLE                                       01725900
               LCLC  &KLISTOPRL                                         01726000
               LCLC  &KLISTOPRLS                                        01726100
               LCLC  &KLISTOPDLS                                        01726200
               LCLC  &KLISTOPDLES                                       01726300
               LCLC  &KLISTOPRLTE                                       01726400
               LCLC  &KLISTOPWLTE                                       01726500
               LCLC  &KLISTOPRLC                                        01726600
               LCLC  &KLISTOPWLC                                        01726700
               LCLC  &KLISTOPRLM                                        01726800
               LCLC  &KLISTOPDLM                                        01726900
               LCLC  &KLISTOPRNLTE                                      01727000
               LCLC  &KLISTOPREQC                              @01A     01727100
               LCLC  &KLISTOPREMC                              @01A     01727200
               LCLC  &KLISTOPDEMC                              @01A     01727300
               LCLC  &KLISTOPREMS                              @01A     01727400
.*                                                                      01727500
&KLISTOPRLE    SETC  'X''10'''                                          01727600
&KLISTOPWLE    SETC  'X''91'''                                          01727700
&KLISTOPMLE    SETC  'X''12'''                                          01727800
&KLISTOPDLE    SETC  'X''13'''                                          01727900
&KLISTOPWMLE   SETC  'X''94'''                                          01728000
&KLISTOPMRLE   SETC  'X''15'''                                          01728100
&KLISTOPRDLE   SETC  'X''16'''                                          01728200
&KLISTOPRL     SETC  'X''17'''                                          01728300
&KLISTOPRLS    SETC  'X''18'''                                          01728400
&KLISTOPDLS    SETC  'X''19'''                                          01728500
&KLISTOPDLES   SETC  'X''9A'''                                          01728600
&KLISTOPRLTE   SETC  'X''0A'''                                          01728700
&KLISTOPWLTE   SETC  'X''0B'''                                          01728800
&KLISTOPRLC    SETC  'X''04'''                                          01728900
&KLISTOPWLC    SETC  'X''05'''                                          01729000
&KLISTOPRLM    SETC  'X''08'''                                          01729100
&KLISTOPDLM    SETC  'X''09'''                                          01729200
&KLISTOPRNLTE  SETC  'X''0C'''                                          01729300
&KLISTOPREQC   SETC  'X''1D'''                                 @01A     01729400
&KLISTOPREMC   SETC  'X''1C'''                                 @01A     01729500
&KLISTOPDEMC   SETC  'X''1F'''                                 @01A     01729600
&KLISTOPREMS   SETC  'X''9E'''                                 @01A     01729700
.*                                                                      01729800
.*                                                                      01729900
.**  Command lengths                                                 ** 01730000
.*                                                                      01730100
               LCLC  &KLISTRLELEN                                       01730200
               LCLC  &KLISTWLELEN                                       01730300
               LCLC  &KLISTWLEALEN                                      01730400
               LCLC  &KLISTMLELEN                                       01730500
               LCLC  &KLISTDLELEN                                       01730600
               LCLC  &KLISTWMLELEN                                      01730700
               LCLC  &KLISTWMLEALEN                                     01730800
               LCLC  &KLISTMRLELEN                                      01730900
               LCLC  &KLISTRDLELEN                                      01731000
               LCLC  &KLISTRLLEN                                        01731100
               LCLC  &KLISTRLSLEN                                       01731200
               LCLC  &KLISTDLSLEN                                       01731300
               LCLC  &KLISTDLESLEN                                      01731400
               LCLC  &KLISTRLTELEN                                      01731500
               LCLC  &KLISTWLTELEN                                      01731600
               LCLC  &KLISTRLCLEN                                       01731700
               LCLC  &KLISTWLCLEN                                       01731800
               LCLC  &KLISTRLMLEN                                       01731900
               LCLC  &KLISTDLMLEN                                       01732000
               LCLC  &KLISTRNLTELEN                                     01732100
               LCLC  &KLISTREQCLEN                              @01A    01732200
               LCLC  &KLISTREMCLEN                              @01A    01732300
               LCLC  &KLISTDEMCLEN                              @01A    01732400
               LCLC  &KLISTREMSLEN                              @01A    01732500
.*                                                                      01732600
&KLISTRLELEN   SETC  '160'                                         @D9C 01732700
&KLISTWLELEN   SETC  '192'                                         @D9C 01732800
&KLISTWLEALEN  SETC  '256'                                              01732900
&KLISTMLELEN   SETC  '192'                                         @D9C 01733000
&KLISTDLELEN   SETC  '160'                                         @D9C 01733100
&KLISTWMLELEN  SETC  '192'                                         @D9C 01733200
&KLISTWMLEALEN SETC  '256'                                              01733300
&KLISTMRLELEN  SETC  '192'                                         @D9C 01733400
&KLISTRDLELEN  SETC  '160'                                         @D9C 01733500
&KLISTRLLEN    SETC  '160'                                         @D9C 01733600
&KLISTRLSLEN   SETC  '160'                                         @D9C 01733700
&KLISTDLSLEN   SETC  '160'                                         @D9C 01733800
&KLISTDLESLEN  SETC  '160'                                         @D9C 01733900
&KLISTRLTELEN  SETC  '32'                                               01734000
&KLISTWLTELEN  SETC  '68'                                               01734100
&KLISTRLCLEN   SETC  '36'                                               01734200
&KLISTWLCLEN   SETC  '160'                                         @D9C 01734300
&KLISTRLMLEN   SETC  '176'                                         @01C 01734400
&KLISTDLMLEN   SETC  '80'                                          @01C 01734500
&KLISTRNLTELEN SETC  '32'                                               01734600
&KLISTREQCLEN  SETC  '24'                                          @01A 01734700
&KLISTREMCLEN  SETC  '80'                                          @01A 01734800
&KLISTDEMCLEN  SETC  '28'                                          @01A 01734900
&KLISTREMSLEN  SETC  '28'                                          @01A 01735000
.*                                                                      01735100
.*                                                                      01735200
.**  Parameter list offsets                                          ** 01735300
.*                                                                      01735400
.*  Offsets of parameter list sections                                  01735500
.*                                                                      01735600
                   LCLA  &PLOFF_XSHL_DATA                               01735700
                   LCLA  &PLOFF_XMOB_DATA                               01735800
                   LCLA  &PLOFF_XMCB_DATA                          @D9C 01735900
.*                                                                      01736000
&PLOFF_XSHL_DATA   SETA  0                                              01736100
&PLOFF_XMOB_DATA   SETA  96                                             01736200
&PLOFF_XMCB_DATA   SETA  100                                       @D9C 01736300
.*                                                                      01736400
.*  Offsets within the shell data section                               01736500
.*                                                                      01736600
                     LCLA  &PLOFF_XVERSION                              01736700
                     LCLA  &PLOFF_XCMDCODE                              01736800
                     LCLA  &PLOFF_XSHLFLGS2                             01736900
                     LCLA  &PLOFF_XCOMPCONID                            01737000
                     LCLA  &PLOFF_XCONID                                01737100
                     LCLA  &PLOFF_XBUFSIZE                              01737200
                     LCLA  &PLOFF_XANSAREA_ALET                         01737300
                     LCLA  &PLOFF_XANSAREA                              01737400
                     LCLA  &PLOFF_XEXTRESTOKENTKN                  @L1A 01737500
.*                                                                      01737600
&PLOFF_XVERSION      SETA  &PLOFF_XSHL_DATA+0                           01737700
&PLOFF_XCMDCODE      SETA  &PLOFF_XSHL_DATA+1                           01737800
&PLOFF_XSHLFLGS2     SETA  &PLOFF_XSHL_DATA+3                           01737900
&PLOFF_XCOMPCONID    SETA  &PLOFF_XSHL_DATA+8                           01738000
&PLOFF_XCONID        SETA  &PLOFF_XSHL_DATA+25                          01738100
&PLOFF_XBUFSIZE      SETA  &PLOFF_XSHL_DATA+32                     @PBC 01738200
&PLOFF_XANSAREA_ALET SETA  &PLOFF_XSHL_DATA+48                          01738300
&PLOFF_XANSAREA      SETA  &PLOFF_XSHL_DATA+52                          01738400
&PLOFF_XEXTRESTOKENTKN  SETA  &PLOFF_XSHL_DATA+72                  @L1A 01738500
.*                                                                      01738600
.*  Offsets within the MOB section                                      01738700
.*                                                                      01738800
                   LCLA  &PLOFF_XCMDLEN                                 01738900
                   LCLA  &PLOFF_XBUFNUM                                 01739000
                   LCLA  &PLOFF_XBUFINCRNUM                             01739100
.*                                                                      01739200
&PLOFF_XCMDLEN     SETA  &PLOFF_XMOB_DATA+0                             01739300
&PLOFF_XBUFNUM     SETA  &PLOFF_XMOB_DATA+2                             01739400
&PLOFF_XBUFINCRNUM SETA  &PLOFF_XMOB_DATA+3                             01739500
.*                                                                      01739600
.*  Offsets within the MCB section                                      01739700
.*                                                                      01739800
                   LCLA  &PLOFF_XCCA                                    01739900
                   LCLA  &PLOFF_XCCB                                    01740000
                   LCLA  &PLOFF_XDBS                                    01740100
                   LCLA  &PLOFF_XCMDFLGS1B                              01740200
                   LCLA  &PLOFF_XCMDFLGS1C                              01740300
                   LCLA  &PLOFF_XCMDFLGS1D                              01740400
                   LCLA  &PLOFF_XUID3                                   01740500
                   LCLA  &PLOFF_XCGLM                                   01740600
                   LCLA  &PLOFF_XUID2                                   01740700
                   LCLA  &PLOFF_XENTRYKEY                               01740800
                   LCLA  &PLOFF_XAUTHCOMP1                         @D9C 01740900
                   LCLA  &PLOFF_XNEWAUTH1                          @D9C 01741000
                   LCLA  &PLOFF_XRESTOKEN                          @L1A 01741100
                   LCLA  &PLOFF_XUID1                                   01741200
                   LCLA  &PLOFF_XCMDFLGS2A                         @D9A 01741300
                   LCLA  &PLOFF_XNEWAUTH2                          @D9A 01741400
                   LCLA  &PLOFF_XMOVETOKEY0                        @DAA 01741500
                   LCLA  &PLOFF_XAUTHCOMP2                         @D9A 01741600
                   LCLA  &PLOFF_XMOVETOLIST0                       @DAA 01741700
                   LCLA  &PLOFF_XMOVETOKEY1                        @DAA 01741800
                   LCLA  &PLOFF_XMOVETOLIST1                       @DAA 01741900
.*                                                                      01742000
&PLOFF_XCCA        SETA  &PLOFF_XMCB_DATA+0                        @D9C 01742100
&PLOFF_XCCB        SETA  &PLOFF_XMCB_DATA+1                        @D9C 01742200
&PLOFF_XDBS        SETA  &PLOFF_XMCB_DATA+4                        @D9C 01742300
&PLOFF_XCMDFLGS1B  SETA  &PLOFF_XMCB_DATA+5                        @D9C 01742400
&PLOFF_XCMDFLGS1C  SETA  &PLOFF_XMCB_DATA+6                        @D9C 01742500
&PLOFF_XCMDFLGS1D  SETA  &PLOFF_XMCB_DATA+7                        @D9C 01742600
&PLOFF_XUID3       SETA  &PLOFF_XMCB_DATA+7                        @D9C 01742700
&PLOFF_XCGLM       SETA  &PLOFF_XMCB_DATA+11                       @D9C 01742800
&PLOFF_XUID2       SETA  &PLOFF_XMCB_DATA+48                       @D9C 01742900
&PLOFF_XENTRYKEY   SETA  &PLOFF_XMCB_DATA+48                       @D9C 01743000
&PLOFF_XAUTHCOMP1  SETA  &PLOFF_XMCB_DATA+48                       @D9C 01743100
&PLOFF_XNEWAUTH1   SETA  &PLOFF_XMCB_DATA+64                       @D9C 01743200
&PLOFF_XRESTOKEN   SETA  &PLOFF_XMCB_DATA+64                       @L1A 01743300
&PLOFF_XUID1       SETA  &PLOFF_XMCB_DATA+80                       @D9C 01743400
&PLOFF_XCMDFLGS2A  SETA  &PLOFF_XMCB_DATA+76                       @D9A 01743500
&PLOFF_XNEWAUTH2   SETA  &PLOFF_XMCB_DATA+112                      @D9A 01743600
&PLOFF_XMOVETOKEY0 SETA  &PLOFF_XMCB_DATA+112                      @DAA 01743700
&PLOFF_XAUTHCOMP2  SETA  &PLOFF_XMCB_DATA+128                      @D9A 01743800
&PLOFF_XMOVETOLIST0 SETA &PLOFF_XMCB_DATA+128                      @DAA 01743900
&PLOFF_XMOVETOKEY1  SETA &PLOFF_XMCB_DATA+144                      @DAA 01744000
&PLOFF_XMOVETOLIST1 SETA &PLOFF_XMCB_DATA+160                      @DAA 01744100
.*                                                                      01744200
.**  Answer area offsets                                             ** 01744300
.*                                                                      01744400
                   LCLC  &AAOFF_LEVEL                                   01744500
                   LCLC  &AAOFF_OFFSET                                  01744600
                   LCLC  &AAOFF_LENGTH                                  01744700
                   LCLC  &AAOFF_RETCODE                                 01744800
                   LCLC  &AAOFF_RSNCODE                                 01744900
.*                                                                      01745000
&AAOFF_LEVEL       SETC  '0'                                            01745100
&AAOFF_OFFSET      SETC  '4'                                            01745200
&AAOFF_LENGTH      SETC  '8'                                            01745300
&AAOFF_RETCODE     SETC  '12'                                           01745400
&AAOFF_RSNCODE     SETC  '16'                                           01745500
.*                                                                      01745600
.**  Answer area values                                              ** 01745700
.*                                                                      01745800
                   LCLC  &AAVAL_LEVEL                                   01745900
                   LCLC  &AAVAL_OFFSET                                  01746000
                   LCLC  &AAVAL_LENGTH                                  01746100
                   LCLC  &AAVAL_RETCODE                                 01746200
                   LCLC  &AAVAL_RSNCODE                                 01746300
.*                                                                      01746400
&AAVAL_LEVEL       SETC  '0'                                            01746500
&AAVAL_OFFSET      SETC  '12'                                           01746600
&AAVAL_LENGTH      SETC  '8'                                            01746700
&AAVAL_RETCODE     SETC  '12'                                           01746800
&AAVAL_RSNCODE     SETC  'X''0C13'''                                    01746900
.*                                                                      01747000
.*                                                                      01747100
.**------------------------------------------------------------------** 01747200
.**  Declares for macro variables                                    ** 01747300
.**                                                                  ** 01747400
.**  The following AMG-declared variables are also used in this      ** 01747500
.**  section:                                                        ** 01747600
.**                                                                  ** 01747700
.**    AMG "x" and "zx" variables corresponding to interface keys    ** 01747800
.**    ZCGPR                                                         ** 01747900
.**    ZCLNG                                                         ** 01748000
.**    ZCVAL                                                         ** 01748100
.**    ZMACRET                                                       ** 01748200
.**    ZNDX                                                          ** 01748300
.**    ZPLLEN                                                        ** 01748400
.**    ZPRM                                                          ** 01748500
.**    ZPRMLINE                                                      ** 01748600
.**    ZPRMNUM                                                       ** 01748700
.**    ZW                                                            ** 01748800
.**                                                                  ** 01748900
.**------------------------------------------------------------------** 01749000
.*                                                                      01749100
               LCLC  &LISTCMD                                           01749200
               LCLC  &LISTOPCODE                                        01749300
               LCLC  &LISTCMDLEN                                        01749400
.*                                                                      01749500
.*                                                                      01749600
.**------------------------------------------------------------------** 01749700
.**  Start of code to fill in the parameter list                     ** 01749800
.**------------------------------------------------------------------** 01749900
.*                                                                      01750000
.*                                                                      01750100
.**------------------------------------------------------------------** 01750200
.**  Initialize the answer area                                      ** 01750300
.**------------------------------------------------------------------** 01750400
.*                                                                      01750500
               AIF   ('&XANSAREA' EQ 'NO_ANSAREA'     OR               *01750600
                      '&XANSAREA' EQ '').SKIPINITANSAREA                01750700
               AIF   ('&SYSASCE'  EQ 'P').SKIPINITANSALET               01750800
         L     14,&PLOFF_XANSAREA_ALET.(,1)                             01750900
         SAR   14,14                                                    01751000
.SKIPINITANSALET ANOP ,                                                 01751100
         L     14,&PLOFF_XANSAREA.(,1)                                  01751200
         LA    15,&AAVAL_LEVEL.                                         01751300
         ST    15,&AAOFF_LEVEL.(,14)                                    01751400
         LA    15,&AAVAL_OFFSET.                                        01751500
         ST    15,&AAOFF_OFFSET.(,14)                                   01751600
         LA    15,&AAVAL_LENGTH.                                        01751700
         ST    15,&AAOFF_LENGTH.(,14)                                   01751800
         LA    15,&AAVAL_RETCODE.                                       01751900
         ST    15,&AAOFF_RETCODE.(,14)                                  01752000
         LA    15,&AAVAL_RSNCODE.                                       01752100
         ST    15,&AAOFF_RSNCODE.(,14)                                  01752200
.SKIPINITANSAREA ANOP ,                                                 01752300
.*                                                              5@01D   01752400
.*                                                                      01752500
.**------------------------------------------------------------------** 01752600
.**  Find the command code, opcode, and length                       ** 01752700
.**                                                                  ** 01752800
.**  The length is set to the maximum length required for the        ** 01752900
.**  specified command.  The command code and opcode are set from    ** 01753000
.**  the combination of keys specified on the invocation.            ** 01753100
.**                                                                  ** 01753200
.**------------------------------------------------------------------** 01753300
.*                                                                      01753400
               AIF   ('&XREQUEST' NE 'READ').LISTCMDNOTREAD             01753500
.*                                                                      01753600
&LISTCMD       SETC  '&KLISTCMDRLE'                                     01753700
&LISTOPCODE    SETC  '&KLISTOPRLE'                                      01753800
&LISTCMDLEN    SETC  '&KLISTRLELEN'                                     01753900
               AGO   .LISTCMDENDSELECT                                  01754000
.*                                                                      01754100
.LISTCMDNOTREAD ANOP ,                                                  01754200
.*                                                                      01754300
               AIF   ('&XREQUEST' NE 'WRITE').LISTCMDNOTWRITE           01754400
.*                                                                      01754500
&LISTCMD       SETC  '&KLISTCMDWLE'                                     01754600
&LISTOPCODE    SETC  '&KLISTOPWLE'                                      01754700
&LISTCMDLEN    SETC  '&KLISTWLELEN'                                     01754800
.*                                                                      01754900
               AIF   ('&XADJAREA' EQ 'NO_ADJAREA' OR                   *01755000
                      '&XADJAREA' EQ '').LISTCMDWRITENOADJAREA     @P4C 01755100
&LISTCMDLEN    SETC  '&KLISTWLEALEN'                                    01755200
.LISTCMDWRITENOADJAREA ANOP ,                                           01755300
               AGO   .LISTCMDENDSELECT                                  01755400
.*                                                                      01755500
.LISTCMDNOTWRITE ANOP ,                                                 01755600
.*                                                                      01755700
               AIF   ('&XREQUEST' NE 'MOVE').LISTCMDNOTMOVE             01755800
.*                                                                      01755900
               AIF   ('&XDATAOPER' NE 'WRITE').LISTCMDMOVENOTWRITE      01756000
&LISTCMD       SETC  '&KLISTCMDWMLE'                                    01756100
&LISTOPCODE    SETC  '&KLISTOPWMLE'                                     01756200
&LISTCMDLEN    SETC  '&KLISTWMLELEN'                                    01756300
.*                                                                      01756400
               AIF   ('&XADJAREA' EQ 'NO_ADJAREA' OR                   *01756500
                      '&XADJAREA' EQ '').LISTCMDMOVEWRITENOADJAREA @P4C 01756600
&LISTCMDLEN    SETC  '&KLISTWMLEALEN'                                   01756700
.LISTCMDMOVEWRITENOADJAREA ANOP ,                                       01756800
               AGO   .LISTCMDMOVEEND                                    01756900
.LISTCMDMOVENOTWRITE ANOP ,                                             01757000
.*                                                                      01757100
               AIF   ('&XDATAOPER' NE 'READ').LISTCMDMOVENOTREAD        01757200
&LISTCMD       SETC  '&KLISTCMDMRLE'                                    01757300
&LISTOPCODE    SETC  '&KLISTOPMRLE'                                     01757400
&LISTCMDLEN    SETC  '&KLISTMRLELEN'                                    01757500
               AGO   .LISTCMDMOVEEND                                    01757600
.LISTCMDMOVENOTREAD ANOP ,                                              01757700
.*                                                                      01757800
&LISTCMD       SETC  '&KLISTCMDMLE'                                     01757900
&LISTOPCODE    SETC  '&KLISTOPMLE'                                      01758000
&LISTCMDLEN    SETC  '&KLISTMLELEN'                                     01758100
.LISTCMDNOTNONE ANOP ,                                                  01758200
.LISTCMDMOVEEND ANOP ,                                                  01758300
               AGO   .LISTCMDENDSELECT                                  01758400
.*                                                                      01758500
.LISTCMDNOTMOVE ANOP ,                                                  01758600
.*                                                                      01758700
               AIF   ('&XREQUEST' NE 'DELETE').LISTCMDNOTDELETE         01758800
.*                                                                      01758900
               AIF   ('&XDATAOPER' NE 'READ').LISTCMDDELETENOAREA       01759000
&LISTCMD       SETC  '&KLISTCMDRDLE'                                    01759100
&LISTOPCODE    SETC  '&KLISTOPRDLE'                                     01759200
&LISTCMDLEN    SETC  '&KLISTRDLELEN'                                    01759300
               AGO   .LISTCMDDELETEEND                                  01759400
.LISTCMDDELETENOAREA ANOP ,                                             01759500
&LISTCMD       SETC  '&KLISTCMDDLE'                                     01759600
&LISTOPCODE    SETC  '&KLISTOPDLE'                                      01759700
&LISTCMDLEN    SETC  '&KLISTDLELEN'                                     01759800
.LISTCMDDELETEEND ANOP ,                                                01759900
               AGO   .LISTCMDENDSELECT                                  01760000
.*                                                                      01760100
.LISTCMDNOTDELETE ANOP ,                                                01760200
.*                                                                      01760300
               AIF   ('&XREQUEST' NE 'READ_LIST').LISTCMDNOTREADLIST    01760400
.*                                                                      01760500
&LISTCMD       SETC  '&KLISTCMDRL'                                      01760600
&LISTOPCODE    SETC  '&KLISTOPRL'                                       01760700
&LISTCMDLEN    SETC  '&KLISTRLLEN'                                      01760800
               AGO   .LISTCMDENDSELECT                                  01760900
.*                                                                      01761000
.LISTCMDNOTREADLIST ANOP ,                                              01761100
.*                                                                      01761200
               AIF   ('&XREQUEST' NE 'READ_EQCONTROLS').LISTCMDNOTREQC  01761300
.*                                                                      01761400
&LISTCMD       SETC  '&KLISTCMDREQC'                              @01A  01761500
&LISTOPCODE    SETC  '&KLISTOPREQC'                               @01A  01761600
&LISTCMDLEN    SETC  '&KLISTREQCLEN'                              @01A  01761700
               AGO   .LISTCMDENDSELECT                            @01A  01761800
.*                                                                      01761900
.LISTCMDNOTREQC ANOP ,                                            @01A  01762000
.*                                                                      01762100
               AIF   ('&XREQUEST' NE 'READ_EMCONTROLS').LISTCMDNOTREMC  01762200
.*                                                                      01762300
&LISTCMD       SETC  '&KLISTCMDREMC'                              @01A  01762400
&LISTOPCODE    SETC  '&KLISTOPREMC'                               @01A  01762500
&LISTCMDLEN    SETC  '&KLISTREMCLEN'                              @01A  01762600
               AGO   .LISTCMDENDSELECT                            @01A  01762700
.*                                                                      01762800
.LISTCMDNOTREMC ANOP ,                                            @01A  01762900
.*                                                                      01763000
               AIF   ('&XREQUEST' NE 'DEQ_EVENTQ').LISTCMDNOTDEMC @01A  01763100
.*                                                                      01763200
&LISTCMD       SETC  '&KLISTCMDDEMC'                              @01A  01763300
&LISTOPCODE    SETC  '&KLISTOPDEMC'                               @01A  01763400
&LISTCMDLEN    SETC  '&KLISTDEMCLEN'                              @01A  01763500
               AGO   .LISTCMDENDSELECT                            @01A  01763600
.*                                                                      01763700
.LISTCMDNOTDEMC ANOP ,                                            @01A  01763800
.*                                                                      01763900
               AIF   ('&XREQUEST' NE 'MONITOR_SUBLISTS').LISTCMDNOTREMS 01764000
.*                                                                      01764100
&LISTCMD       SETC  '&KLISTCMDREMS'                              @01A  01764200
&LISTOPCODE    SETC  '&KLISTOPREMS'                               @01A  01764300
&LISTCMDLEN    SETC  '&KLISTREMSLEN'                              @01A  01764400
               AGO   .LISTCMDENDSELECT                            @01A  01764500
.*                                                                      01764600
.LISTCMDNOTREMS ANOP ,                                            @01A  01764700
.*                                                                      01764800
               AIF   ('&XREQUEST' NE 'READ_MULT').LISTCMDNOTREADMULT    01764900
.*                                                                      01765000
&LISTCMD       SETC  '&KLISTCMDRLS'                                     01765100
&LISTOPCODE    SETC  '&KLISTOPRLS'                                      01765200
&LISTCMDLEN    SETC  '&KLISTRLSLEN'                                     01765300
               AGO   .LISTCMDENDSELECT                                  01765400
.*                                                                      01765500
.LISTCMDNOTREADMULT ANOP ,                                              01765600
.*                                                                      01765700
               AIF   ('&XREQUEST' NE 'DELETE_MULT').LISTCMDNOTDELETEMUL*01765800
               T                                                        01765900
.*                                                                      01766000
&LISTCMD       SETC  '&KLISTCMDDLS'                                     01766100
&LISTOPCODE    SETC  '&KLISTOPDLS'                                      01766200
&LISTCMDLEN    SETC  '&KLISTDLSLEN'                                     01766300
               AGO   .LISTCMDENDSELECT                                  01766400
.*                                                                      01766500
.LISTCMDNOTDELETEMULT ANOP ,                                            01766600
.*                                                                      01766700
               AIF   ('&XREQUEST' NE 'DELETE_ENTRYLIST').LISTCMDNOTDELE*01766800
               TEENTRYLIST                                              01766900
.*                                                                      01767000
&LISTCMD       SETC  '&KLISTCMDDLES'                                    01767100
&LISTOPCODE    SETC  '&KLISTOPDLES'                                     01767200
&LISTCMDLEN    SETC  '&KLISTDLESLEN'                                    01767300
               AGO   .LISTCMDENDSELECT                                  01767400
.*                                                                      01767500
.LISTCMDNOTDELETEENTRYLIST ANOP ,                                       01767600
.*                                                                      01767700
               AIF   ('&XREQUEST' NE 'LOCK').LISTCMDNOTLOCK             01767800
.*                                                                      01767900
               AIF   ('&XLOCKOPER' NE 'TEST').LISTCMDLOCKNOTTEST        01768000
&LISTCMD       SETC  '&KLISTCMDRLTE'                                    01768100
&LISTOPCODE    SETC  '&KLISTOPRLTE'                                     01768200
&LISTCMDLEN    SETC  '&KLISTRLTELEN'                                    01768300
               AGO   .LISTCMDLOCKEND                                    01768400
.LISTCMDLOCKNOTTEST ANOP ,                                              01768500
.*                                                                      01768600
               AIF   ('&XLOCKOPER' NE 'READNEXT').LISTCMDLOCKNOTREADNXT 01768700
&LISTCMD       SETC  '&KLISTCMDRNLTE'                                   01768800
&LISTOPCODE    SETC  '&KLISTOPRNLTE'                                    01768900
&LISTCMDLEN    SETC  '&KLISTRNLTELEN'                                   01769000
               AGO   .LISTCMDLOCKEND                                    01769100
.LISTCMDLOCKNOTREADNXT ANOP ,                                           01769200
.*                                                                      01769300
               AIF   ('&XLOCKOPER' NE 'SET'    AND                     *01769400
                      '&XLOCKOPER' NE 'RESET').LISTCMDLOCKNOTSETRESET   01769500
&LISTCMD       SETC  '&KLISTCMDWLTE'                                    01769600
&LISTOPCODE    SETC  '&KLISTOPWLTE'                                     01769700
&LISTCMDLEN    SETC  '&KLISTWLTELEN'                                    01769800
               AGO   .LISTCMDLOCKEND                                    01769900
.LISTCMDLOCKNOTSETRESET ANOP ,                                          01770000
.**    Note that HELDBY and NOTHELD cannot be specified with         ** 01770100
.**    Request(LOCK).                                                ** 01770200
.LISTCMDLOCKEND ANOP ,                                                  01770300
               AGO   .LISTCMDENDSELECT                                  01770400
.*                                                                      01770500
.LISTCMDNOTLOCK ANOP ,                                                  01770600
.*                                                                      01770700
               AIF   ('&XREQUEST' NE 'READ_LCONTROLS').LISTCMDNOTREADLC*01770800
               ONTROLS                                                  01770900
.*                                                                      01771000
&LISTCMD       SETC  '&KLISTCMDRLC'                                     01771100
&LISTOPCODE    SETC  '&KLISTOPRLC'                                      01771200
&LISTCMDLEN    SETC  '&KLISTRLCLEN'                                     01771300
               AGO   .LISTCMDENDSELECT                                  01771400
.*                                                                      01771500
.LISTCMDNOTREADLCONTROLS ANOP ,                                         01771600
.*                                                                      01771700
               AIF   ('&XREQUEST' NE 'WRITE_LCONTROLS').LISTCMDNOTWRITE*01771800
               LCONTROLS                                                01771900
.*                                                                      01772000
&LISTCMD       SETC  '&KLISTCMDWLC'                                     01772100
&LISTOPCODE    SETC  '&KLISTOPWLC'                                      01772200
&LISTCMDLEN    SETC  '&KLISTWLCLEN'                                     01772300
               AGO   .LISTCMDENDSELECT                                  01772400
.*                                                                      01772500
.LISTCMDNOTWRITELCONTROLS ANOP ,                                        01772600
.*                                                                      01772700
               AIF   ('&XREQUEST' NE 'MONITOR_EVENTQ'  AND             *01772800
                      '&XREQUEST' NE 'MONITOR_SUBLIST' AND             *01772900
                      '&XREQUEST' NE 'MONITOR_LIST').LISTCMDNOTMONITORL*01773000
               IST                                                @01C  01773100
.*                                                                      01773200
               AIF   ('&XACTION' NE 'START').LISTCMDMONITORLISTNOTSTART 01773300
&LISTCMD       SETC  '&KLISTCMDRLM'                                     01773400
&LISTOPCODE    SETC  '&KLISTOPRLM'                                      01773500
&LISTCMDLEN    SETC  '&KLISTRLMLEN'                                     01773600
               AGO   .LISTCMDMONITORLISTEND                             01773700
.LISTCMDMONITORLISTNOTSTART ANOP ,                                      01773800
.*                                                                      01773900
.* ACTION=STOP                                                          01774000
&LISTCMD       SETC  '&KLISTCMDDLM'                                     01774100
&LISTOPCODE    SETC  '&KLISTOPDLM'                                      01774200
&LISTCMDLEN    SETC  '&KLISTDLMLEN'                                     01774300
.LISTCMDMONITORLISTEND ANOP ,                                           01774400
               AGO   .LISTCMDENDSELECT                                  01774500
.*                                                                      01774600
.LISTCMDNOTMONITORLIST ANOP ,                                           01774700
.*                                                                      01774800
.LISTCMDENDSELECT ANOP ,                                                01774900
.*                                                                      01775000
.*                                                                      01775100
.**------------------------------------------------------------------** 01775200
.**  Fill in shell layer parameter fields                            ** 01775300
.**------------------------------------------------------------------** 01775400
.*                                                                      01775500
.**  Set the command code                                            ** 01775600
.*                                                                      01775700
.*   _xCmdCode                                                          01775800
         MVI   &PLOFF_XCMDCODE.(1),&LISTCMD                             01775900
.*                                                                      01776000
.*                                                                      01776100
.**------------------------------------------------------------------** 01776200
.**  Fill in MOB parameter fields                                    ** 01776300
.**------------------------------------------------------------------** 01776400
.*                                                                      01776500
.**  Set the command data length                                     ** 01776600
.*                                                                      01776700
         LA    14,&LISTCMDLEN                                           01776800
.*                                                                      01776900
.*   _xCmdLen                                                           01777000
         STH   14,&PLOFF_XCMDLEN.(,1)                                   01777100
.*                                                                      01777200
.**  Set the BufNum value                                            ** 01777300
.*                                                                      01777400
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'       AND              *01777500
                '&XREQUEST' NE 'DEQ_EVENTQ').SKIPSETBUFNUM1        @01C 01777600
.*                                                                      01777700
.*   _xBufNum                                                           01777800
         MVI   &PLOFF_XBUFNUM.(1),1                                     01777900
.*                                                                      01778000
.SKIPSETBUFNUM1 ANOP ,                                                  01778100
.*                                                                      01778200
         AIF   ('&XBUFFER' EQ '').SKIPSETBUFNUM2                   @P8A 01778300
.*                                                                      01778400
         AIF   ('&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01778500
                '&XREQUEST' NE 'READ_LIST'        AND                  *01778600
                '&XREQUEST' NE 'READ_MULT').SKIPSETBUFNUM3         @P8A 01778700
.*                                                                      01778800
.*   _xBufNum                                                           01778900
         L     14,&PLOFF_XBUFSIZE.(0,1)                            @P8A 01779000
         SRL   14,12                                               @P8A 01779100
         STC   14,&PLOFF_XBUFNUM.(0,1)                             @P8A 01779200
.*                                                                      01779300
.SKIPSETBUFNUM3 ANOP ,                                             @P8A 01779400
.SKIPSETBUFNUM2 ANOP ,                                             @P8A 01779500
.*                                                                      01779600
.**  Set the BufIncrNum value                                        ** 01779700
.*                                                                      01779800
         AIF   ('&XREQUEST' NE 'DELETE_ENTRYLIST' AND                  *01779900
                '&XREQUEST' NE 'READ_LIST'        AND                  *01780000
                '&XREQUEST' NE 'READ_MULT'        AND                  *01780100
                '&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01780200
                '&XREQUEST' NE 'DEQ_EVENTQ').SKIPSETBUFINUM        @01C 01780300
.*                                                                      01780400
.*   _xBufIncrNum                                                       01780500
         MVI   &PLOFF_XBUFINCRNUM.(1),16                                01780600
.*                                                                      01780700
.SKIPSETBUFINUM ANOP ,                                             @P8C 01780800
.*                                                                      01780900
.*                                                                      01781000
.**------------------------------------------------------------------** 01781100
.**  Fill in MCB parameter fields                                    ** 01781200
.**------------------------------------------------------------------** 01781300
.*                                                                      01781400
.**  Set the command opcode                                          ** 01781500
.**  - The command opcode is stored in two pieces to allow the       ** 01781600
.**    MVI instruction to be used for efficiency.                    ** 01781700
.*                                                                      01781800
.*   _xCcA                                                              01781900
         MVI   &PLOFF_XCCA.(1),&KLISTCMDTYPE                            01782000
.*                                                                      01782100
.*   _xCcB                                                              01782200
         MVI   &PLOFF_XCCB.(1),&LISTOPCODE                              01782300
.*                                                                      01782400
.*                                                                      01782500
.**  Set the DBS                                                     ** 01782600
.*                                                                      01782700
         AIF   ('&XREQUEST' NE 'READ_LIST'        AND                  *01782800
                '&XREQUEST' NE 'READ_MULT').SKIPSETDBS                  01782900
.*                                                                      01783000
.*   _xDbs                                                              01783100
         MVC   &PLOFF_XDBS.(1,1),&PLOFF_XBUFNUM.(1)                     01783200
.*                                                                      01783300
.SKIPSETDBS ANOP ,                                                      01783400
.*                                                                      01783500
.*                                                                      01783600
.**------------------------------------------------------------------** 01783700
.**  Set the command flags                                           ** 01783800
.**  - The command flags are stored as individual bytes to allow the ** 01783900
.**    MVI instruction to be used for efficiency.                    ** 01784000
.*                                                                      01784100
.**  Set the command flags first byte                                ** 01784200
.**  - There are currently no flags in the first byte                ** 01784300
.*                                                                      01784400
.**  Set the command flags second byte                               ** 01784500
.*                                                                      01784600
&ZW      SETC  ''                                                       01784700
&ZCLNG   SETC  ''                                                       01784800
.*                                                                      01784900
.*                                                                      01785000
         AIF   ('&XREQUEST' NE 'WRITE_LCONTROLS').PLNOTWRTLCTLS    @D9M 01785100
.*                                                                      01785200
&ZW      SETC  '&ZW.000'                                           @D9A 01785300
.*                                                                      01785400
.*                                                                      01785500
         AIF   ('&LISTKEY(1)' EQ 'NO_LISTKEY' OR                       *01785600
                '&LISTKEY(1)' EQ '').PLLISTKEYNOTSPEC              @D9A 01785700
.*                                                                      01785800
&ZW      SETC  '&ZW.1'                                             @D9A 01785900
&ZCLNG   SETC  'YES'                                               @D9A 01786000
         AGO   .PLLISTKEYEND                                       @D9A 01786100
.*                                                                      01786200
.PLLISTKEYNOTSPEC ANOP ,                                           @D9A 01786300
.*                                                                      01786400
&ZW      SETC  '&ZW.0'                                             @D9A 01786500
.*                                                                      01786600
.PLLISTKEYEND ANOP ,                                               @D9A 01786700
.*                                                                      01786800
.*                                                                      01786900
         AIF   ('&MAXLISTKEY(1)' EQ 'NO_MAXLISTKEY' OR                 *01787000
                '&MAXLISTKEY(1)' EQ '').PLMAXLISTKEYNOTSPEC        @D9A 01787100
.*                                                                      01787200
&ZW      SETC  '&ZW.1'                                             @D9A 01787300
&ZCLNG   SETC  'YES'                                               @D9A 01787400
         AGO   .PLMAXLISTKEYEND                                    @D9A 01787500
.*                                                                      01787600
.PLMAXLISTKEYNOTSPEC ANOP ,                                        @D9A 01787700
.*                                                                      01787800
&ZW      SETC  '&ZW.0'                                             @D9A 01787900
.*                                                                      01788000
.PLMAXLISTKEYEND ANOP ,                                            @D9A 01788100
.*                                                                      01788200
.*                                                                      01788300
         AIF    ('&SETCURSOR(1)' EQ '').PLSETCURSORNOTSPEC         @D9A 01788400
.*                                                                      01788500
&ZW      SETC  '&ZW.1'                                             @D9A 01788600
&ZCLNG   SETC  'YES'                                               @D9A 01788700
         AGO   .PLSETCURSOREND                                     @D9A 01788800
.*                                                                      01788900
.PLSETCURSORNOTSPEC ANOP ,                                         @D9A 01789000
.*                                                                      01789100
&ZW      SETC  '&ZW.0'                                             @D9A 01789200
.*                                                                      01789300
.PLSETCURSOREND ANOP ,                                             @D9A 01789400
.*                                                                      01789500
.*                                                                      01789600
         AIF   ('&LISTDESC(1)' EQ 'NO_LISTDESC' OR                     *01789700
                '&LISTDESC(1)' EQ '').PLLISTDESCNOTSPEC            @D9C 01789800
.*                                                                      01789900
&ZW      SETC  '&ZW.1'                                             @D9M 01790000
&ZCLNG   SETC  'YES'                                               @D9M 01790100
         AGO   .PLLISTDESCEND                                      @D9M 01790200
.*                                                                      01790300
.PLLISTDESCNOTSPEC ANOP ,                                          @D9M 01790400
.*                                                                      01790500
&ZW      SETC  '&ZW.0'                                             @D9M 01790600
.*                                                                      01790700
.PLLISTDESCEND ANOP ,                                              @D9M 01790800
.*                                                                      01790900
.*                                                                      01791000
         AIF   ('&LISTLIMIT(1)' EQ 'NO_LISTLIMIT' OR                   *01791100
                '&LISTLIMIT(1)' EQ '').PLLISTLIMITNOTSPEC          @D9C 01791200
.*                                                                      01791300
&ZW      SETC  '&ZW.1'                                             @D9M 01791400
&ZCLNG   SETC  'YES'                                               @D9M 01791500
         AGO   .PLLISTLIMITEND                                     @D9M 01791600
.*                                                                      01791700
.PLLISTLIMITNOTSPEC ANOP ,                                         @D9M 01791800
.*                                                                      01791900
&ZW      SETC  '&ZW.0'                                             @D9M 01792000
.*                                                                      01792100
.PLLISTLIMITEND ANOP ,                                             @D9M 01792200
         AGO   .PLNOTWRTLCTLSEND                                   @D9M 01792300
.*                                                                      01792400
.*                                                                      01792500
.PLNOTWRTLCTLS ANOP ,                                              @D9M 01792600
.*                                                                      01792700
.*                                                                      01792800
&ZW      SETC  '&ZW.0'                                                  01792900
.*                                                                      01793000
         AIF   ('&LOCKOPER(1)' NE '').PLLRTLOCKOPERSPEC                 01793100
.*                                                                      01793200
&ZW      SETC  '&ZW.000'                                                01793300
         AGO   .PLLRTLOCKOPEREND                                        01793400
.*                                                                      01793500
.PLLRTLOCKOPERSPEC ANOP ,                                               01793600
.*                                                                      01793700
         AIF   ('&XLOCKOPER' NE 'NOTHELD' AND                          *01793800
                '&XLOCKOPER' NE 'HELDBY').PLLRTLOCKOPERNOTNOTHELDHELDBY 01793900
.*                                                                      01794000
&ZW      SETC  '&ZW.100'                                                01794100
&ZCLNG   SETC  'YES'                                                    01794200
         AGO   .PLLRTLOCKOPEREND                                        01794300
.*                                                                      01794400
.PLLRTLOCKOPERNOTNOTHELDHELDBY ANOP ,                                   01794500
.*                                                                      01794600
         AIF   ('&XLOCKOPER' NE 'SET' AND                              *01794700
                '&XLOCKOPER' NE 'RESET').PLLRTLOCKOPERNOTSETRESET  @D5C 01794800
.*                                                                      01794900
&ZW      SETC  '&ZW.101'                                                01795000
&ZCLNG   SETC  'YES'                                                    01795100
         AGO   .PLLRTLOCKOPEREND                                        01795200
.*                                                                      01795300
.PLLRTLOCKOPERNOTSETRESET ANOP ,                                        01795400
.*                                                                      01795500
         AIF   ('&XLOCKOPER' NE 'READNEXT').PLLRTLOCKOPERNOTREADNEXT    01795600
.*                                                                      01795700
         AIF   ('&XLOCKCOMP' EQ ''        OR                           *01795800
                '&XLOCKCOMP' EQ 'NO_LOCKCOMP').PLLRTREADNEXTNOCOMP @D5A 01795900
.*                                                                      01796000
&ZW      SETC  '&ZW.100'                                           @D5A 01796100
&ZCLNG   SETC  'YES'                                               @D5A 01796200
         AGO   .PLLRTLOCKOPERREADNEXTEND                           @D5A 01796300
.*                                                                      01796400
.PLLRTREADNEXTNOCOMP ANOP ,                                        @D5A 01796500
.*                                                                      01796600
&ZW      SETC  '&ZW.000'                                           @D5A 01796700
.*                                                                      01796800
.PLLRTLOCKOPERREADNEXTEND ANOP ,                                   @D5A 01796900
.*                                                                      01797000
         AGO   .PLLRTLOCKOPEREND                                   @D5A 01797100
.*                                                                      01797200
.PLLRTLOCKOPERNOTREADNEXT ANOP ,                                   @D5A 01797300
.*                                                                      01797400
.* LockOper(Test)                                                       01797500
&ZW      SETC  '&ZW.000'                                                01797600
.*                                                                      01797700
.PLLRTLOCKOPEREND ANOP ,                                                01797800
.*                                                                      01797900
.*                                                                      01798000
         AIF   ('&XKEYCOMP' EQ 'NO_KEYCOMP' OR                         *01798100
                '&XKEYCOMP' EQ '').PLKEYCOMPNOTSPEC                @D9A 01798200
.*                                                                      01798300
&ZW      SETC  '&ZW.1'                                             @D9A 01798400
&ZCLNG   SETC  'YES'                                               @D9A 01798500
         AGO   .PLKEYCOMPEND                                       @D9A 01798600
.*                                                                      01798700
.PLKEYCOMPNOTSPEC ANOP ,                                           @D9A 01798800
.*                                                                      01798900
&ZW      SETC  '&ZW.0'                                             @D9A 01799000
.*                                                                      01799100
.PLKEYCOMPEND ANOP ,                                               @D9A 01799200
.*                                                                      01799300
.*                                                                      01799400
         AIF   ('&XVERSCOMPTYPE' NE 'LESSOREQUAL').PLVERSNOTLESS   @D9A 01799500
.*                                                                      01799600
&ZW      SETC  '&ZW.1'                                             @D9A 01799700
&ZCLNG   SETC  'YES'                                               @D9A 01799800
         AGO   .PLVERSCOMPTYPEEND                                  @D9A 01799900
.*                                                                      01800000
.PLVERSNOTLESS ANOP ,                                              @D9A 01800100
.*                                                                      01800200
&ZW      SETC  '&ZW.0'                                             @D9A 01800300
.*                                                                      01800400
.PLVERSCOMPTYPEEND ANOP ,                                          @D9A 01800500
.*                                                                      01800600
.*                                                                      01800700
         AIF   ('&XKEYREQTYPE' NE 'LESSOREQUAL').PLKEYNOTLESS           01800800
.*                                                                      01800900
&ZW      SETC  '&ZW.01'                                                 01801000
&ZCLNG   SETC  'YES'                                                    01801100
         AGO   .PLKEYREQTYPEEND                                         01801200
.*                                                                      01801300
.PLKEYNOTLESS ANOP ,                                                    01801400
         AIF   ('&XKEYREQTYPE' NE 'GREATEROREQUAL').PLKEYNOTGREATER     01801500
.*                                                                      01801600
&ZW      SETC  '&ZW.10'                                                 01801700
&ZCLNG   SETC  'YES'                                                    01801800
         AGO   .PLKEYREQTYPEEND                                         01801900
.*                                                                      01802000
.PLKEYNOTGREATER ANOP ,                                                 01802100
.*                                                                      01802200
&ZW      SETC  '&ZW.00'                                                 01802300
.*                                                                      01802400
.PLKEYREQTYPEEND ANOP ,                                                 01802500
.PLNOTWRTLCTLSEND ANOP ,                                                01802600
.*                                                                      01802700
.*                                                                      01802800
&ZW      SETC  'B''&ZW.'''                                              01802900
.*                                                                      01803000
.*                                                                      01803100
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1B                        01803200
.*                                                                      01803300
.*   _xCmdFlgs1B                                                        01803400
         OI    &PLOFF_XCMDFLGS1B.(1),&ZW                                01803500
.*                                                                      01803600
.PLNOCMDFLGS1B ANOP ,                                                   01803700
.*                                                                      01803800
.*                                                                      01803900
.**  Set the command flags third byte                                ** 01804000
.*                                                                      01804100
&ZW      SETC  ''                                                       01804200
&ZCLNG   SETC  ''                                                       01804300
.*                                                                      01804400
.*                                                                      01804500
         AIF   ('&XLISTPOS' NE 'TAIL'     AND                          *01804600
                '&XLISTDIR' NE 'TOHEAD').PLLISTDIRNOTTAIL          @D5C 01804700
.*                                                                      01804800
&ZW      SETC  '&ZW.1'                                                  01804900
&ZCLNG   SETC  'YES'                                                    01805000
         AGO   .PLLISTDIREND                                            01805100
.*                                                                      01805200
.PLLISTDIRNOTTAIL ANOP ,                                                01805300
.*                                                                      01805400
&ZW      SETC  '&ZW.0'                                                  01805500
.*                                                                      01805600
.PLLISTDIREND ANOP ,                                                    01805700
.*                                                                      01805800
.*                                                                 @D6D 01805900
.*                                                                      01806000
         AIF   ('&XREQUEST' NE 'DELETE_ENTRYLIST').PLREQNOTDELENTRYLIST 01806100
.*                                                                      01806200
&ZW      SETC  '&ZW.00'                                            @D6C 01806300
.*                                                                      01806400
         AIF   ('&XLISTTYPE' NE 'NAMELIST').PLREQDELELNOTNAMELIST       01806500
.*                                                                      01806600
&ZW      SETC  '&ZW.1'                                                  01806700
&ZCLNG   SETC  'YES'                                                    01806800
         AGO   .PLREQDELENTRYLISTEND                                    01806900
.*                                                                      01807000
.PLREQDELELNOTNAMELIST ANOP ,                                           01807100
.*                                                                      01807200
.* ListType(IdList)                                                     01807300
&ZW      SETC  '&ZW.0'                                                  01807400
.*                                                                      01807500
.PLREQDELENTRYLISTEND ANOP ,                                            01807600
.*                                                                      01807700
         AGO   .PLREQUEST1END                                           01807800
.*                                                                      01807900
.PLREQNOTDELENTRYLIST ANOP ,                                            01808000
.*                                                                      01808100
         AIF   (                                                       *01808200
                '&XREQUEST' NE 'READ'        AND                       *01808300
                '&XREQUEST' NE 'WRITE'       AND                       *01808400
                '&XREQUEST' NE 'MOVE'        AND                       *01808500
                '&XREQUEST' NE 'DELETE'      AND                       *01808600
                '&XREQUEST' NE 'READ_LIST').PLREQNOTELT            @D6C 01808700
.*                                                                      01808800
         AIF   ('&XLOCBYCURSOR' NE 'LOCBYCURSOR').PLREQELTNOTLOCBYCUR   01808900
.*                                                                      01809000
&ZW      SETC  '&ZW.100'                                           @D6A 01809100
&ZCLNG   SETC  'YES'                                               @D6A 01809200
         AGO   .PLREQELTEND                                        @D6A 01809300
.*                                                                      01809400
.PLREQELTNOTLOCBYCUR ANOP ,                                        @D6A 01809500
.*                                                                      01809600
         AIF   ('&XENTRYID' EQ '').PLREQELTNOTENTRYID              @P4C 01809700
.*                                                                      01809800
&ZW      SETC  '&ZW.010'                                           @D6C 01809900
&ZCLNG   SETC  'YES'                                                    01810000
         AGO   .PLREQELTEND                                             01810100
.*                                                                      01810200
.PLREQELTNOTENTRYID ANOP ,                                              01810300
.*                                                                      01810400
         AIF   ('&XENTRYKEY' EQ '').PLREQELTNOTENTRYKEY            @PHC 01810500
.*                                                                      01810600
&ZW      SETC  '&ZW.001'                                           @D6C 01810700
&ZCLNG   SETC  'YES'                                                    01810800
         AGO   .PLREQELTEND                                             01810900
.*                                                                      01811000
.PLREQELTNOTENTRYKEY ANOP ,                                             01811100
.*                                                                      01811200
         AIF   ('&XENTRYNAME' EQ '').PLREQELTNOTENTRYNAME          @P4C 01811300
.*                                                                      01811400
&ZW      SETC  '&ZW.011'                                           @D6C 01811500
&ZCLNG   SETC  'YES'                                                    01811600
         AGO   .PLREQELTEND                                             01811700
.*                                                                      01811800
.PLREQELTNOTENTRYNAME ANOP ,                                            01811900
.*                                                                      01812000
.* Else                                                                 01812100
&ZW      SETC  '&ZW.000'                                           @D6C 01812200
.*                                                                      01812300
.PLREQELTEND ANOP ,                                                     01812400
.*                                                                      01812500
         AGO   .PLREQUEST1END                                           01812600
.*                                                                      01812700
.PLREQNOTELT ANOP ,                                                     01812800
.*                                                                      01812900
.*                                                                      01813000
.*                                                                      01813100
         AIF   ('&XREQUEST' NE 'MONITOR_LIST'    AND                   *01813200
                '&XREQUEST' NE 'MONITOR_EVENTQ'  AND                   *01813300
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01813400
                '&XREQUEST' NE 'MONITOR_SUBLIST').NOTMONCMD        @01A 01813500
.*                                                                      01813600
         AIF   ('&XREQUEST' NE 'MONITOR_LIST').NOTMONLISTCMD       @01A 01813700
&ZW      SETC  '&ZW.00'                                            @01A 01813800
.NOTMONLISTCMD  ANOP ,                                             @01A 01813900
         AIF   ('&XREQUEST' NE 'MONITOR_SUBLISTS').NOTMONSUBLISTSCMD    01814000
&ZW      SETC  '&ZW.00'                                            @01A 01814100
.NOTMONSUBLISTSCMD  ANOP ,                                         @01A 01814200
         AIF   ('&XREQUEST' NE 'MONITOR_EVENTQ').NOTMONEQCMD       @01A 01814300
&ZW      SETC  '&ZW.01'                                            @01A 01814400
&ZCLNG   SETC  'YES'                                               @01A 01814500
.NOTMONEQCMD  ANOP ,                                               @01A 01814600
         AIF   ('&XREQUEST' NE 'MONITOR_SUBLIST').NOTMONSUBLISTCMD @01A 01814700
&ZW      SETC  '&ZW.10'                                            @01A 01814800
&ZCLNG   SETC  'YES'                                               @01A 01814900
.NOTMONSUBLISTCMD  ANOP ,                                          @01A 01815000
.*                                                                      01815100
.*                                                                      01815200
         AIF   ('&XACTION' NE 'START'       AND                        *01815300
                '&XREQUEST' NE 'MONITOR_SUBLISTS').NOTACTIONSTART  @01A 01815400
&ZW      SETC  '&ZW.1'                                             @01A 01815500
&ZCLNG   SETC  'YES'                                               @01A 01815600
         AGO   .ACTIONEND                                          @01A 01815700
.NOTACTIONSTART    ANOP ,                                          @01A 01815800
&ZW      SETC  '&ZW.0'                                             @01A 01815900
.ACTIONEND         ANOP ,                                          @01A 01816000
         AGO   .AROUNDNOTMONCMD                                    @01A 01816100
.*                                                                      01816200
.*                                                                      01816300
.* Else                                                                 01816400
.NOTMONCMD   ANOP ,                                                @01A 01816500
&ZW      SETC  '&ZW.000'                                           @01A 01816600
.*                                                                      01816700
.AROUNDNOTMONCMD   ANOP ,                                          @01A 01816800
.*                                                                      01816900
.*                                                                      01817000
.*                                                                      01817100
.PLREQUEST1END ANOP ,                                                   01817200
.*                                                                      01817300
.*                                                                      01817400
         AIF   ('&XREQUEST' NE 'READ_LCONTROLS'   AND                  *01817500
                '&XREQUEST' NE 'WRITE_LCONTROLS'  AND                  *01817600
                '&XREQUEST' NE 'MONITOR_LIST'     AND                  *01817700
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01817800
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01817900
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01818000
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01818100
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01818200
                '&XREQUEST' NE 'DEQ_EVENTQ'       AND                  *01818300
                '&XREQUEST' NE 'LOCK').PLREQNOT2                   @01C 01818400
.*                                                                      01818500
&ZW      SETC  '&ZW.0'                                                  01818600
         AGO   .PLREQUEST2END                                           01818700
.*                                                                      01818800
.PLREQNOT2 ANOP ,                                                       01818900
.*                                                                      01819000
         AIF   ('&XLISTNUM' EQ '').PLREQ2NOTLISTNUM                @P4C 01819100
.*                                                                      01819200
&ZW      SETC  '&ZW.1'                                                  01819300
&ZCLNG   SETC  'YES'                                                    01819400
.*                                                                      01819500
         AGO   .PLREQ2LISTNUMEND                                        01819600
.*                                                                      01819700
.PLREQ2NOTLISTNUM ANOP ,                                                01819800
.*                                                                      01819900
&ZW      SETC  '&ZW.0'                                                  01820000
.*                                                                      01820100
.PLREQ2LISTNUMEND ANOP ,                                                01820200
.PLREQUEST2END ANOP ,                                                   01820300
.*                                                                      01820400
.*                                                                      01820500
         AIF   ('&XVERSCOMP' EQ '').PLVERSCOMPNOTSPEC              @P4C 01820600
.*                                                                      01820700
&ZW      SETC  '&ZW.1'                                                  01820800
&ZCLNG   SETC  'YES'                                                    01820900
         AGO   .PLVERSCOMPEND                                           01821000
.*                                                                      01821100
.PLVERSCOMPNOTSPEC ANOP ,                                               01821200
.*                                                                      01821300
&ZW      SETC  '&ZW.0'                                                  01821400
.*                                                                      01821500
.PLVERSCOMPEND ANOP ,                                                   01821600
.*                                                                      01821700
.*                                                                      01821800
         AIF   ('&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01821900
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01822000
                '&XREQUEST' NE 'MONITOR_LIST').PLREQNOTMONITORLIST @01C 01822100
.*                                                                      01822200
&ZW      SETC  '&ZW.0'                                                  01822300
.*                                                                      01822400
         AIF   ('&XDRIVEEXIT' NE 'YES').PLNOTDRIVEEXIT                  01822500
.*                                                                      01822600
&ZW      SETC  '&ZW.1'                                                  01822700
&ZCLNG   SETC  'YES'                                                    01822800
         AGO   .PLDRIVEEXITEND                                          01822900
.*                                                                      01823000
.PLNOTDRIVEEXIT ANOP ,                                                  01823100
.*                                                                      01823200
&ZW      SETC  '&ZW.0'                                                  01823300
.*                                                                      01823400
.PLDRIVEEXITEND ANOP ,                                                  01823500
.*                                                                      01823600
         AGO   .PLREQUEST3END                                           01823700
.*                                                                      01823800
.PLREQNOTMONITORLIST ANOP ,                                             01823900
.*                                                                      01824000
         AIF   ('&XVERSUPDATE' NE 'DEC').PLVERSUPDATENOTDEC             01824100
.*                                                                      01824200
&ZW      SETC  '&ZW.01'                                                 01824300
&ZCLNG   SETC  'YES'                                                    01824400
         AGO   .PLVERSUPDATEEND                                         01824500
.*                                                                      01824600
.PLVERSUPDATENOTDEC ANOP ,                                              01824700
.*                                                                      01824800
         AIF   ('&XVERSUPDATE' NE 'INC').PLVERSUPDATENOTINC             01824900
.*                                                                      01825000
&ZW      SETC  '&ZW.10'                                                 01825100
&ZCLNG   SETC  'YES'                                                    01825200
         AGO   .PLVERSUPDATEEND                                         01825300
.*                                                                      01825400
.PLVERSUPDATENOTINC ANOP ,                                              01825500
.*                                                                      01825600
         AIF   ('&XVERSUPDATE' NE 'SET').PLVERSUPDATENOTSET             01825700
.*                                                                      01825800
&ZW      SETC  '&ZW.11'                                                 01825900
&ZCLNG   SETC  'YES'                                                    01826000
         AGO   .PLVERSUPDATEEND                                         01826100
.*                                                                      01826200
.PLVERSUPDATENOTSET ANOP ,                                              01826300
.*                                                                      01826400
.* Else VersUpdate(NONE)                                                01826500
&ZW      SETC  '&ZW.00'                                                 01826600
.*                                                                      01826700
.PLVERSUPDATEEND ANOP ,                                                 01826800
.PLREQUEST3END ANOP ,                                                   01826900
.*                                                                      01827000
.*                                                                      01827100
&ZW      SETC  'B''&ZW.'''                                              01827200
.*                                                                      01827300
.*                                                                      01827400
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1C                        01827500
.*                                                                      01827600
.*   _xCmdFlgs1C                                                        01827700
         OI    &PLOFF_XCMDFLGS1C.(1),&ZW                                01827800
.*                                                                      01827900
.PLNOCMDFLGS1C ANOP ,                                                   01828000
.*                                                                      01828100
.*                                                                      01828200
.**  Set the command flags fourth byte                               ** 01828300
.*                                                                      01828400
&ZW      SETC  ''                                                       01828500
&ZCLNG   SETC  ''                                                       01828600
.*                                                                      01828700
.*                                                                      01828800
         AIF   ('&XSETCURSOR' NE 'TAIL' AND                            *01828900
                '&XMOVETOPOS' NE 'TAIL').PLMOVETOPOSNOTTAIL        @D9C 01829000
.*                                                                      01829100
&ZW      SETC  '&ZW.1'                                                  01829200
&ZCLNG   SETC  'YES'                                                    01829300
         AGO   .PLMOVETOPOSEND                                     @D5C 01829400
.*                                                                      01829500
.PLMOVETOPOSNOTTAIL ANOP ,                                         @D5C 01829600
.*                                                                      01829700
.* Else                                                                 01829800
&ZW      SETC  '&ZW.0'                                                  01829900
.*                                                                      01830000
.PLMOVETOPOSEND ANOP ,                                             @D5C 01830100
.*                                                                      01830200
.*                                                                      01830300
         AIF   ('&XMOVETOKEY' EQ '').PLMOVETOKEYNOTSPEC            @P4C 01830400
.*                                                                      01830500
&ZW      SETC  '&ZW.1'                                                  01830600
&ZCLNG   SETC  'YES'                                                    01830700
         AGO   .PLMOVETOKEYEND                                          01830800
.*                                                                      01830900
.PLMOVETOKEYNOTSPEC ANOP ,                                              01831000
.*                                                                      01831100
.* Else                                                                 01831200
&ZW      SETC  '&ZW.0'                                                  01831300
.*                                                                      01831400
.PLMOVETOKEYEND ANOP ,                                                  01831500
.*                                                                      01831600
.*                                                                      01831700
         AIF   ('&XUPDATECURSOR' NE 'YES').PLUPDCURYESNOTSPEC      @D6A 01831800
.*                                                                      01831900
&ZW      SETC  '&ZW.1'                                             @D6A 01832000
&ZCLNG   SETC  'YES'                                               @D6A 01832100
         AGO   .PLUPDCURYESEND                                     @D6A 01832200
.*                                                                      01832300
.PLUPDCURYESNOTSPEC ANOP ,                                         @D6A 01832400
.*                                                                      01832500
.* Else                                                                 01832600
&ZW      SETC  '&ZW.0'                                                  01832700
.*                                                                      01832800
.PLUPDCURYESEND ANOP ,                                             @D6A 01832900
.*                                                                      01833000
.*                                                                      01833100
         AIF   ('&XREQUEST' NE 'READ_LIST' AND                         *01833200
                '&XREQUEST' NE 'READ_MULT').PLREQNOTREADLISTREADMULT    01833300
.*                                                                      01833400
&ZI      SETA  0                                                        01833500
.*                                                                      01833600
.PLFINDECONTROLS ANOP ,                                                 01833700
.*                                                                      01833800
&ZI      SETA  &ZI+1                                                    01833900
.*                                                                      01834000
         AIF   (K'&XTYPE(&ZI) LE 0).PLFINDECONTROLSNOVALUE              01834100
.*                                                                      01834200
         AIF   ('&XTYPE(&ZI)' NE 'ECONTROLS').PLFINDECONTROLS           01834300
.*                                                                      01834400
&ZW      SETC  '&ZW.1'                                                  01834500
&ZCLNG   SETC  'YES'                                                    01834600
         AGO   .PLFINDECONTROLSEND                                      01834700
.*                                                                      01834800
.PLFINDECONTROLSNOVALUE ANOP ,                                          01834900
.*                                                                      01835000
&ZW      SETC  '&ZW.0'                                                  01835100
.*                                                                      01835200
.PLFINDECONTROLSEND ANOP ,                                              01835300
.*                                                                      01835400
.*                                                                      01835500
&ZI      SETA  0                                                        01835600
.*                                                                      01835700
.PLFINDENTDATA ANOP ,                                                   01835800
.*                                                                      01835900
&ZI      SETA  &ZI+1                                                    01836000
.*                                                                      01836100
         AIF   (K'&XTYPE(&ZI) LE 0).PLFINDENTDATANOVALUE                01836200
.*                                                                      01836300
         AIF   ('&XTYPE(&ZI)' NE 'ENTDATA').PLFINDENTDATA          @PBC 01836400
.*                                                                      01836500
&ZW      SETC  '&ZW.1'                                                  01836600
&ZCLNG   SETC  'YES'                                                    01836700
         AGO   .PLFINDENTDATAEND                                        01836800
.*                                                                      01836900
.PLFINDENTDATANOVALUE ANOP ,                                            01837000
.*                                                                      01837100
&ZW      SETC  '&ZW.0'                                                  01837200
.*                                                                      01837300
.PLFINDENTDATAEND ANOP ,                                                01837400
.*                                                                      01837500
.*                                                                      01837600
&ZI      SETA  0                                                        01837700
.*                                                                      01837800
.PLFINDADJDATA ANOP ,                                                   01837900
.*                                                                      01838000
&ZI      SETA  &ZI+1                                                    01838100
.*                                                                      01838200
         AIF   (K'&XTYPE(&ZI) LE 0).PLFINDADJDATANOVALUE                01838300
.*                                                                      01838400
         AIF   ('&XTYPE(&ZI)' NE 'ADJDATA').PLFINDADJDATA          @PBC 01838500
.*                                                                      01838600
&ZW      SETC  '&ZW.1'                                                  01838700
&ZCLNG   SETC  'YES'                                                    01838800
         AGO   .PLFINDADJDATAEND                                        01838900
.*                                                                      01839000
.PLFINDADJDATANOVALUE ANOP ,                                            01839100
.*                                                                      01839200
&ZW      SETC  '&ZW.0'                                                  01839300
.*                                                                      01839400
.PLFINDADJDATAEND ANOP ,                                                01839500
.*                                                                      01839600
         AGO   .PLREQUEST4END                                           01839700
.*                                                                      01839800
.*                                                                      01839900
.PLREQNOTREADLISTREADMULT ANOP ,                                        01840000
.*                                                                      01840100
         AIF   ('&XREQUEST' NE 'READ'    AND                           *01840200
                '&XREQUEST' NE 'WRITE'   AND                           *01840300
                '&XREQUEST' NE 'MOVE'    AND                           *01840400
                '&XREQUEST' NE 'DELETE').PLREQNOTREADWRITEMOVEDELETE    01840500
.*                                                                      01840600
&ZW      SETC  '&ZW.0'                                                  01840700
.*                                                                      01840800
         AIF   ('&XDATAOPER' NE 'NONE').PLDATAOPERNOTNONE               01840900
.*                                                                      01841000
&ZW      SETC  '&ZW.00'                                                 01841100
         AGO   .PLDATAOPEREND                                           01841200
.*                                                                      01841300
.PLDATAOPERNOTNONE ANOP ,                                               01841400
.*                                                                      01841500
         AIF   ('&XBUFFER'  EQ ''  AND                                 *01841600
                '&XBUFLIST' EQ ''  AND                                 *01841700
                '&XELEMNUM' EQ '').PLDATAAREANOTSPEC               @D3C 01841800
.*                                                                      01841900
&ZW      SETC  '&ZW.1'                                                  01842000
&ZCLNG   SETC  'YES'                                                    01842100
         AGO   .PLDATAAREAEND                                           01842200
.*                                                                      01842300
.PLDATAAREANOTSPEC ANOP ,                                               01842400
.*                                                                      01842500
&ZW      SETC  '&ZW.0'                                                  01842600
.*                                                                      01842700
.PLDATAAREAEND ANOP ,                                                   01842800
.*                                                                      01842900
.*                                                                      01843000
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA' OR                         *01843100
                '&XADJAREA' EQ '').PLADJAREANOTSPEC                @P4C 01843200
.*                                                                      01843300
&ZW      SETC  '&ZW.1'                                                  01843400
&ZCLNG   SETC  'YES'                                                    01843500
         AGO   .PLADJAREAEND                                            01843600
.*                                                                      01843700
.PLADJAREANOTSPEC ANOP ,                                                01843800
.*                                                                      01843900
&ZW      SETC  '&ZW.0'                                                  01844000
.*                                                                      01844100
.PLADJAREAEND ANOP ,                                                    01844200
.*                                                                      01844300
.PLDATAOPEREND ANOP ,                                                   01844400
.*                                                                      01844500
         AGO   .PLREQUEST4END                                           01844600
.*                                                                      01844700
.PLREQNOTREADWRITEMOVEDELETE ANOP ,                                     01844800
.*                                                                      01844900
.* Else                                                                 01845000
&ZW      SETC  '&ZW.000'                                                01845100
.*                                                                      01845200
.PLREQUEST4END ANOP ,                                                   01845300
.*                                                                      01845400
.*                                                                      01845500
         AIF   ('&XREQUEST' NE 'WRITE' AND                             *01845600
                '&XREQUEST' NE 'MOVE').PLREQNOTWRITEMOVE                01845700
.*                                                                      01845800
         AIF   ('&XREQUEST' NE 'MOVE'       OR                         *01845900
                ('&XDATAOPER' NE 'NONE'     AND                        *01846000
                 '&XDATAOPER' NE 'READ')).PLREQWRITEMOVEWRITE           01846100
.*                                                                      01846200
&ZW      SETC  '&ZW.00'                                                 01846300
         AGO   .PLREQWRITEMOVEWRITEEND                                  01846400
.*                                                                      01846500
.PLREQWRITEMOVEWRITE ANOP ,                                             01846600
.*                                                                      01846700
         AIF   ('&XENTRYTYPE' NE 'OLD').PLENTRYTYPENOTOLD               01846800
.*                                                                      01846900
&ZW      SETC  '&ZW.01'                                                 01847000
&ZCLNG   SETC  'YES'                                                    01847100
         AGO   .PLENTRYTYPEEND                                          01847200
.*                                                                      01847300
.PLENTRYTYPENOTOLD ANOP ,                                               01847400
.*                                                                      01847500
         AIF   ('&XENTRYTYPE' NE 'NEW').PLENTRYTYPENOTNEW               01847600
.*                                                                      01847700
&ZW      SETC  '&ZW.10'                                                 01847800
&ZCLNG   SETC  'YES'                                                    01847900
         AGO   .PLENTRYTYPEEND                                          01848000
.*                                                                      01848100
.PLENTRYTYPENOTNEW ANOP ,                                               01848200
.*                                                                      01848300
         AIF   ('&XENTRYTYPE' NE 'ANY').PLENTRYTYPENOTANY               01848400
.*                                                                      01848500
&ZW      SETC  '&ZW.11'                                                 01848600
&ZCLNG   SETC  'YES'                                                    01848700
         AGO   .PLENTRYTYPEEND                                          01848800
.*                                                                      01848900
.PLENTRYTYPENOTANY ANOP ,                                               01849000
.*                                                                      01849100
.* Else                                                                 01849200
&ZW      SETC  '&ZW.00'                                                 01849300
.*                                                                      01849400
.PLENTRYTYPEEND ANOP ,                                                  01849500
.*                                                                      01849600
.PLREQWRITEMOVEWRITEEND ANOP ,                                          01849700
.*                                                                      01849800
         AGO   .PLREQUEST5END                                           01849900
.*                                                                      01850000
.PLREQNOTWRITEMOVE ANOP ,                                               01850100
.*                                                                      01850200
.* Else                                                                 01850300
&ZW      SETC  '&ZW.00'                                                 01850400
.*                                                                      01850500
.PLREQUEST5END ANOP ,                                                   01850600
.*                                                                      01850700
.*                                                                      01850800
&ZW      SETC  'B''&ZW.'''                                              01850900
.*                                                                      01851000
.*                                                                      01851100
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1D                        01851200
.*                                                                      01851300
.*   _xCmdFlgs1D                                                        01851400
         OI    &PLOFF_XCMDFLGS1D.(1),&ZW                                01851500
.*                                                                      01851600
.PLNOCMDFLGS1D ANOP ,                                                   01851700
.*                                                                      01851800
.*                                                                      01851900
.**  Set the second command flags word first byte                @D9A** 01852000
.*                                                                      01852100
&ZW      SETC  ''                                                       01852200
&ZCLNG   SETC  ''                                                       01852300
.*                                                                      01852400
.*                                                                      01852500
         AIF   ('&LISTKEYTYPE(1)' NE 'NOLISTKEY' AND                   *01852600
                '&LISTKEYTYPE(1)' NE '').PLLISTKEYTYPENOTNO        @D9A 01852700
.*                                                                      01852800
&ZW      SETC  '&ZW.00'                                            @D9A 01852900
         AGO   .PLLISTKEYTYPEEND                                   @D9A 01853000
.*                                                                      01853100
.PLLISTKEYTYPENOTNO ANOP ,                                         @D9A 01853200
.*                                                                      01853300
         AIF   ('&LISTKEYTYPE(1)' NE 'MOVE').PLLISTKEYTYPENOTMOVE  @D9A 01853400
.*                                                                      01853500
&ZW      SETC  '&ZW.01'                                            @D9A 01853600
&ZCLNG   SETC  'YES'                                               @D9A 01853700
         AGO   .PLLISTKEYTYPEEND                                   @D9A 01853800
.*                                                                      01853900
.PLLISTKEYTYPENOTMOVE ANOP ,                                       @D9A 01854000
.*                                                                      01854100
         AIF   ('&LISTKEYTYPE(1)' NE 'CREATE').PLLISTKEYTYPENOTCR  @D9A 01854200
.*                                                                      01854300
&ZW      SETC  '&ZW.10'                                            @D9A 01854400
&ZCLNG   SETC  'YES'                                               @D9A 01854500
         AGO   .PLLISTKEYTYPEEND                                   @D9A 01854600
.*                                                                      01854700
.PLLISTKEYTYPENOTCR ANOP ,                                         @D9A 01854800
.*                                                                      01854900
.*  ListKeyType(Any)                                                    01855000
&ZW      SETC  '&ZW.10'                                            @D9A 01855100
&ZCLNG   SETC  'YES'                                               @D9A 01855200
.*                                                                      01855300
.PLLISTKEYTYPEEND ANOP ,                                           @D9A 01855400
.*                                                                      01855500
.*                                                                      01855600
         AIF   ('&LISTKEYINC(1)' EQ 'NO_LISTKEYINC' OR                 *01855700
                '&LISTKEYINC(1)' EQ '').PLLISTKEYINCNOTSPEC        @D9A 01855800
.*                                                                      01855900
&ZW      SETC  '&ZW.1'                                             @D9A 01856000
&ZCLNG   SETC  'YES'                                               @D9A 01856100
         AGO   .PLLISTKEYINCEND                                    @D9A 01856200
.*                                                                      01856300
.PLLISTKEYINCNOTSPEC ANOP ,                                        @D9A 01856400
.*                                                                      01856500
&ZW      SETC  '&ZW.0'                                             @D9A 01856600
.*                                                                      01856700
.PLLISTKEYINCEND ANOP ,                                            @D9A 01856800
.*                                                                      01856900
.*                                                                      01857000
         AIF   ('&REQUEST(1)' EQ 'WRITE_LCONTROLS').PLCFSKPAUTHFLG @D9A 01857100
.*                                                                      01857200
.*                                                                      01857300
         AIF   ('&NEWAUTH(1)' EQ 'NO_NEWAUTH' OR                       *01857400
                '&NEWAUTH(1)' EQ '').PLCFNEWAUTHNOTSPEC            @D9A 01857500
.*                                                                      01857600
&ZW      SETC  '&ZW.1'                                             @D9A 01857700
&ZCLNG   SETC  'YES'                                               @D9A 01857800
         AGO   .PLCFNEWAUTHEND                                     @D9A 01857900
.*                                                                      01858000
.PLCFNEWAUTHNOTSPEC ANOP ,                                         @D9A 01858100
.*                                                                      01858200
&ZW      SETC  '&ZW.0'                                             @D9A 01858300
.*                                                                      01858400
.PLCFNEWAUTHEND ANOP ,                                             @D9A 01858500
.*                                                                      01858600
.*                                                                      01858700
         AIF   ('&AUTHCOMP(1)' NE 'NO_AUTHCOMP' AND                    *01858800
                '&AUTHCOMP(1)' NE '').PLCFAUTHCOMPSPEC             @D9A 01858900
.*                                                                      01859000
&ZW      SETC  '&ZW.00'                                            @D9A 01859100
         AGO   .PLCFAUTHCOMPEND                                    @D9A 01859200
.*                                                                      01859300
.PLCFAUTHCOMPSPEC ANOP ,                                           @D9A 01859400
.*                                                                      01859500
         AIF   ('&AUTHCOMPTYPE(1)' NE 'LESSOREQUAL').PLCFAUTHCMPEQ @D9A 01859600
.*                                                                      01859700
&ZW      SETC  '&ZW.10'                                            @D9A 01859800
&ZCLNG   SETC  'YES'                                               @D9A 01859900
         AGO   .PLCFAUTHCOMPEND                                    @D9A 01860000
.*                                                                      01860100
.PLCFAUTHCMPEQ ANOP ,                                              @D9A 01860200
.*                                                                      01860300
&ZW      SETC  '&ZW.01'                                            @D9A 01860400
&ZCLNG   SETC  'YES'                                               @D9A 01860500
.*                                                                      01860600
.PLCFAUTHCOMPEND ANOP ,                                            @D9A 01860700
.*                                                                      01860800
         AGO   .PLCFAUTHFLAGSEND                                   @D9A 01860900
.*                                                                      01861000
.PLCFSKPAUTHFLG ANOP ,                                             @D9A 01861100
.*                                                                      01861200
&ZW      SETC  '&ZW.000'                                           @D9A 01861300
.*                                                                      01861400
.PLCFAUTHFLAGSEND ANOP ,                                           @D9A 01861500
.*                                                                      01861600
.*                                                                      01861700
         AIF   ('&CURSORUPDTYPE(1)' NE 'NEXT' AND                      *01861800
                '&CURSORUPDTYPE(1)' NE '').PLCFCURUPDTYPENOTNEXT   @D9A 01861900
.*                                                                      01862000
&ZW      SETC  '&ZW.00'                                            @D9A 01862100
         AGO   .PLCFCURUPDTYPEEND                                  @D9A 01862200
.*                                                                      01862300
.PLCFCURUPDTYPENOTNEXT ANOP ,                                      @D9A 01862400
.*                                                                      01862500
         AIF   ('&CURSORUPDTYPE(1)' NE 'CURRENT').PLCFCURUPDNOTCUR @D9A 01862600
.*                                                                      01862700
&ZW      SETC  '&ZW.01'                                            @D9A 01862800
&ZCLNG   SETC  'YES'                                               @D9A 01862900
         AGO   .PLCFCURUPDTYPEEND                                  @D9A 01863000
.*                                                                      01863100
.PLCFCURUPDNOTCUR ANOP ,                                           @D9A 01863200
.*                                                                      01863300
         AIF   ('&CURSORUPDTYPE(1)' NE 'NEXTCOND').PLCFCURUPDNOTNC @D9A 01863400
.*                                                                      01863500
&ZW      SETC  '&ZW.10'                                            @D9A 01863600
&ZCLNG   SETC  'YES'                                               @D9A 01863700
         AGO   .PLCFCURUPDTYPEEND                                  @D9A 01863800
.*                                                                      01863900
.PLCFCURUPDNOTNC ANOP ,                                            @D9A 01864000
.*                                                                      01864100
.*  CursorUpdType(CurrentCond)                                          01864200
&ZW      SETC  '&ZW.11'                                            @D9A 01864300
&ZCLNG   SETC  'YES'                                               @D9A 01864400
.*                                                                      01864500
.PLCFCURUPDTYPEEND ANOP ,                                          @D9A 01864600
.*                                                                      01864700
.*                                                                      01864800
&ZW      SETC  'B''&ZW.'''                                         @D9A 01864900
.*                                                                      01865000
.*                                                                      01865100
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS2A                   @D9A 01865200
.*                                                                      01865300
.*   _xCmdFlgs2A                                                        01865400
         OI    &PLOFF_XCMDFLGS2A.(1),&ZW                           @D9A 01865500
.*                                                                      01865600
.PLNOCMDFLGS2A ANOP ,                                              @D9A 01865700
.*                                                                      01865800
.**  End of code to set command flags                            @D9A** 01865900
.**------------------------------------------------------------------** 01866000
.*                                                                      01866100
.*                                                                      01866200
         AIF   ('&XREQUEST' NE 'MONITOR_LIST'     AND                  *01866300
                '&XREQUEST' NE 'MONITOR_SUBLIST'  AND                  *01866400
                '&XREQUEST' NE 'MONITOR_SUBLISTS' AND                  *01866500
                '&XREQUEST' NE 'MONITOR_EVENTQ'   AND                  *01866600
                '&XREQUEST' NE 'READ_EQCONTROLS'  AND                  *01866700
                '&XREQUEST' NE 'READ_EMCONTROLS'  AND                  *01866800
                '&XREQUEST' NE 'DEQ_EVENTQ').PLMONITORLISTNOTSPEC  @01C 01866900
.*                                                                      01867000
.*   _xUid3, _xConId                                                    01867100
         MVC   &PLOFF_XUID3.(1,1),&PLOFF_XCONID.(1)                     01867200
.*                                                                      01867300
         AGO   .PLMONITORLISTEND                                        01867400
.*                                                                      01867500
.PLMONITORLISTNOTSPEC ANOP ,                                            01867600
.PLMONITORLISTEND ANOP ,                                                01867700
.*                                                                      01867800
.*                                                                      01867900
.*                                                                      01868000
.*                                                                      01868100
         AIF   ('&XREQUEST' NE 'READ_MULT'        AND                  *01868200
                '&XREQUEST' NE 'DELETE_MULT').PLMULTREQSTNOTSPEC   @L1A 01868300
.*                                                                      01868400
         AIF   ('&XEXTRESTOKEN' EQ '').PLMULTREQSTNOTSPEC          @L1A 01868500
.*   _xRestoken, _xExtRestokenTkn                                       01868600
         MVC   &PLOFF_XRESTOKEN.(8,1),&PLOFF_XEXTRESTOKENTKN.(1)   @L1A 01868700
.*                                                                      01868800
         AGO   .PLMULTREQSTEND                                     @L1A 01868900
.*                                                                      01869000
.PLMULTREQSTNOTSPEC ANOP ,                                         @L1A 01869100
.PLMULTREQSTEND ANOP ,                                             @L1A 01869200
.*                                                                      01869300
.*                                                                      01869400
         AIF   ('&XLOCKOPER' EQ '').PLLOCKOPERNOTSPEC                   01869500
.*                                                                      01869600
.* Handle the LockComp specification.                                   01869700
.* There are four ways it can be specified:                             01869800
.*  1) LOCKCOMP=(reg)       --> "reg" contains the address of the value 01869900
.*  2) LOCKCOMP=offset(reg) --> explicit basing specification           01870000
.*  3) LOCKCOMP=name        --> variable name                           01870100
.*  4) LOCKCOMP=value       --> hard-coded value                        01870200
.*                                                                      01870300
         AIF   ('&XLOCKCOMP' EQ ''              OR                     *01870400
                '&XLOCKCOMP' EQ 'NO_LOCKCOMP').PLNOLOCKCOMP        @D6A 01870500
         AIF   ('&XLOCKCOMP'(1,1) NE '(').PLLOCKCOMPNOTREG         @D6A 01870600
&ZCGPR   SETC  '0('.'&XLOCKCOMP'(2,K'&XLOCKCOMP-2).')'             @D6A 01870700
         AGO   .PLENDLOCKCOMPSETUP                                 @D6A 01870800
.PLLOCKCOMPNOTREG ANOP ,                                           @D6A 01870900
&ZCGPR   SETC  '&XLOCKCOMP'                                        @D6A 01871000
&ZC      SETC  '&XLOCKCOMP'(1,1)                                   @D6A 01871100
         AIF   (T'&ZC NE 'N').PLENDLOCKCOMPSETUP                   @D6A 01871200
&ZC      SETC  '&XLOCKCOMP'                                        @D6A 01871300
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDLOCKCOMPSETUP          @D6A 01871400
&ZCGPR   SETC  '=FL1''&XLOCKCOMP'''                                @D6A 01871500
.PLENDLOCKCOMPSETUP ANOP ,                                         @D6A 01871600
.PLNOLOCKCOMP  ANOP ,                                              @D6A 01871700
.*                                                                      01871800
         AIF   ('&XLOCKOPER' NE 'RESET'     AND                        *01871900
                '&XLOCKOPER' NE 'HELDBY').PLLOCKOPERNOTRESETHELDBY      01872000
.*                                                                      01872100
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01872200
                '&XLOCKCOMP' EQ '').PLRESETHELDBYNOTLOCKCOMP       @P4C 01872300
.*                                                                      01872400
.*   _xCglm                                                             01872500
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                           @D6C 01872600
.*                                                                      01872700
         AGO   .PLRESETHELDBYEND                                        01872800
.*                                                                      01872900
.PLRESETHELDBYNOTLOCKCOMP ANOP ,                                        01873000
.*                                                                      01873100
.*   _xCglm, _xConId                                                    01873200
         MVC   &PLOFF_XCGLM.(1,1),&PLOFF_XCONID.(1)                     01873300
.*                                                                      01873400
.PLRESETHELDBYEND ANOP ,                                                01873500
.*                                                                      01873600
         AGO   .PLLOCKOPEREND                                           01873700
.*                                                                      01873800
.PLLOCKOPERNOTRESETHELDBY ANOP ,                                        01873900
.*                                                                      01874000
         AIF   ('&XLOCKOPER' NE 'SET').PLLOCKOPERNOTSET                 01874100
.*                                                                      01874200
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01874300
                '&XLOCKCOMP' EQ '').PLSETNOTLOCKCOMP               @P4C 01874400
.*                                                                      01874500
.*   _xCglm                                                             01874600
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                           @D6C 01874700
.*                                                                      01874800
.PLSETNOTLOCKCOMP ANOP ,                                                01874900
.*                                                                      01875000
         AIF   ('&XREQUEST' NE 'LOCK').PLLOCKOPERNOTLOCKREQ        @D4M 01875100
.*                                                                      01875200
.*   _xUid2, _xConId                                                    01875300
         MVC   &PLOFF_XUID2.(1,1),&PLOFF_XCONID.(1)                     01875400
.*                                                                      01875500
         AGO   .PLLOCKOPERSETEND                                        01875600
.*                                                                      01875700
.PLLOCKOPERNOTLOCKREQ ANOP ,                                            01875800
.*                                                                      01875900
.*   _xUid1, _xConId                                                    01876000
         MVC   &PLOFF_XUID1.(1,1),&PLOFF_XCONID.(1)                     01876100
.*                                                                      01876200
.PLLOCKOPERSETEND ANOP ,                                                01876300
.*                                                                      01876400
         AGO   .PLLOCKOPEREND                                           01876500
.*                                                                      01876600
.PLLOCKOPERNOTSET ANOP ,                                                01876700
.*                                                                      01876800
         AIF   ('&XLOCKOPER' NE 'TEST').PLLOCKOPERNOTTEST               01876900
.*                                                                      01877000
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01877100
                '&XLOCKCOMP' EQ '').PLTESTNOTLOCKCOMP              @P4C 01877200
.*                                                                      01877300
.*   _xCompConId                                                        01877400
         MVC   &PLOFF_XCOMPCONID.(1,1),&ZCGPR                      @D6C 01877500
.*                                                                      01877600
         AGO   .PLTESTLOCKCOMPEND                                       01877700
.*                                                                      01877800
.PLTESTNOTLOCKCOMP ANOP ,                                               01877900
.*                                                                      01878000
.*   _xCompConId, _xConId                                               01878100
         MVC   &PLOFF_XCOMPCONID.(1,1),&PLOFF_XCONID.(1)           @D4A 01878200
.*                                                                      01878300
.PLTESTLOCKCOMPEND ANOP ,                                               01878400
.*                                                                      01878500
         AGO   .PLLOCKOPEREND                                           01878600
.*                                                                      01878700
.PLLOCKOPERNOTTEST ANOP ,                                               01878800
.*                                                                      01878900
         AIF   ('&XLOCKOPER' NE 'READNEXT').PLLOCKOPERNOTREADNEXT  @D5A 01879000
.*                                                                      01879100
         AIF   ('&XLOCKCOMP' EQ 'NO_LOCKCOMP' OR                       *01879200
                '&XLOCKCOMP' EQ '').PLREADNEXTNOTLOCKCOMP          @D5A 01879300
.*                                                                      01879400
.*   _xCglm                                                             01879500
         MVC   &PLOFF_XCGLM.(1,1),&ZCGPR                           @D6C 01879600
.*                                                                      01879700
.PLREADNEXTNOTLOCKCOMP ANOP ,                                      @D5A 01879800
.*                                                                      01879900
         AGO   .PLLOCKOPEREND                                      @D5A 01880000
.*                                                                      01880100
.PLLOCKOPERNOTREADNEXT ANOP ,                                      @D5A 01880200
.*                                                                      01880300
.* Else LockOper(NotHeld)                                               01880400
.*                                                                      01880500
         AGO   .PLLOCKOPEREND                                           01880600
.*                                                                      01880700
.PLLOCKOPERNOTSPEC ANOP ,                                               01880800
.PLLOCKOPEREND ANOP ,                                                   01880900
.*                                                                      01881000
.*                                                                      01881100
.**  Set the default value for the EntryKey field                    ** 01881200
.*                                                                      01881300
         AIF   (                                                       *01881400
                '&XREQUEST'     NE 'WRITE'    OR                       *01881500
                ('&XENTRYTYPE'  NE 'ANY'      AND                      *01881600
                 '&XENTRYTYPE'  NE 'NEW')                              *01881700
                OR                                                     *01881800
                '&XENTRYKEY'    NE ''         OR                       *01881900
                '&XENTRYNAME'   NE ''         OR                       *01882000
                '&XLISTPOS'     NE 'TAIL').PLNOENTRYKEYDEFAULT     @D9C 01882100
.*                                                                      01882200
.*   _xEntryKey                                                         01882300
         MVI   &PLOFF_XENTRYKEY.(1),X'FF'                               01882400
         MVC   &PLOFF_XENTRYKEY.+1(15,1),&PLOFF_XENTRYKEY.(1)           01882500
.*                                                                      01882600
         AGO   .PLKEYDEFAULTEND                                         01882700
.*                                                                      01882800
.PLNOENTRYKEYDEFAULT ANOP ,                                             01882900
.*                                                                      01883000
.*                                                                      01883100
         AIF   (                                                       *01883200
                '&XREQUEST'     NE 'MOVE'     OR                       *01883300
                '&XDATAOPER'    NE 'WRITE'    OR                       *01883400
                '&XENTRYTYPE'   NE 'ANY'                               *01883500
                OR                                                     *01883600
                '&XENTRYKEY'    NE ''         OR                       *01883700
                '&XENTRYNAME'   NE ''         OR                       *01883800
                '&XMOVETOKEY'   NE ''         OR                       *01883900
                '&XMOVETOPOS'   NE 'TAIL').PLNOMOVEENTRYKEYDEFAULT @D9C 01884000
.*                                                                      01884100
.*   _xEntryKey                                                         01884200
         MVI   &PLOFF_XENTRYKEY.(1),X'FF'                               01884300
         MVC   &PLOFF_XENTRYKEY.+1(15,1),&PLOFF_XENTRYKEY.(1)           01884400
.*                                                                      01884500
.PLNOMOVEENTRYKEYDEFAULT ANOP ,                                         01884600
.PLKEYDEFAULTEND ANOP ,                                                 01884700
.*                                                                      01884800
.*                                                                      01884900
.**  Set the MoveToKey and MoveToList fields                     @DAA** 01885000
.*                                                                      01885100
         AIF   ('&XMOVETOKEY' EQ '0'    OR                             *01885200
                '&XMOVETOKEY' EQ '').PLSETMOVETOKEYEND             @DAA 01885300
.*                                                                      01885400
.* Handle the MoveToKey specification.                                  01885500
.* There are four ways it can be specified:                             01885600
.*  1) MOVETOKEY=(reg)       --> "reg" contains the addr of the value   01885700
.*  2) MOVETOKEY=offset(reg) --> explicit basing specification          01885800
.*  3) MOVETOKEY=name        --> variable name                          01885900
.*  4) MOVETOKEY=value       --> hard-coded value                       01886000
.*                                                                      01886100
         AIF   ('&XMOVETOKEY'(1,1) NE '(').PLMOVETOKEYNOTREG       @DAA 01886200
&ZCGPR   SETC  '0('.'&XMOVETOKEY'(2,K'&XMOVETOKEY-2).')'           @DAA 01886300
         AGO   .PLENDMOVETOKEYSETUP                                @DAA 01886400
.PLMOVETOKEYNOTREG ANOP ,                                          @DAA 01886500
&ZCGPR   SETC  '&XMOVETOKEY'                                       @DAA 01886600
&ZC      SETC  '&XMOVETOKEY'(1,1)                                  @DAA 01886700
         AIF   (T'&ZC NE 'N').PLENDMOVETOKEYSETUP                  @DAA 01886800
&ZC      SETC  '&XMOVETOKEY'                                       @DAA 01886900
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDMOVETOKEYSETUP         @DAA 01887000
&ZCGPR   SETC  '=CL16''&XMOVETOKEY'''                              @DAA 01887100
.PLENDMOVETOKEYSETUP ANOP ,                                        @DAA 01887200
.*                                                                      01887300
         AIF   (&LISTPLVERS NE 0).PLMOVETOKEYNOTVZERO              @DAA 01887400
.*                                                                      01887500
.*   _xMoveToKey0                                                       01887600
         MVC   &PLOFF_XMOVETOKEY0.(16,1),&ZCGPR                    @DAA 01887700
         AGO   .PLMOVETOKEYSTOREEND                                @DAA 01887800
.*                                                                      01887900
.PLMOVETOKEYNOTVZERO ANOP ,                                        @DAA 01888000
.*                                                                      01888100
.*   _xMoveToKey1                                                       01888200
         MVC   &PLOFF_XMOVETOKEY1.(16,1),&ZCGPR                    @DAA 01888300
.*                                                                      01888400
.PLMOVETOKEYSTOREEND ANOP ,                                        @DAA 01888500
.PLSETMOVETOKEYEND ANOP ,                                          @DAA 01888600
.*                                                                      01888700
.*                                                                      01888800
         AIF   ('&XMOVETOLIST' EQ '0'    OR                            *01888900
                '&XMOVETOLIST' EQ '').PLSETMOVETOLISTEND           @DAA 01889000
.*                                                                      01889100
.* Handle the MoveToList specification.                                 01889200
.* There are four ways it can be specified:                             01889300
.*  1) MOVETOLIST=(reg)       --> "reg" contains the addr of the value  01889400
.*  2) MOVETOLIST=offset(reg) --> explicit basing specification         01889500
.*  3) MOVETOLIST=name        --> variable name                         01889600
.*  4) MOVETOLIST=value       --> hard-coded value                      01889700
.*                                                                      01889800
         AIF   ('&XMOVETOLIST'(1,1) NE '(').PLMOVETOLISTNOTREG     @DAA 01889900
&ZCGPR   SETC  '0('.'&XMOVETOLIST'(2,K'&XMOVETOLIST-2).')'         @DAA 01890000
         AGO   .PLENDMOVETOLISTSETUP                               @DAA 01890100
.PLMOVETOLISTNOTREG ANOP ,                                         @DAA 01890200
&ZCGPR   SETC  '&XMOVETOLIST'                                      @DAA 01890300
&ZC      SETC  '&XMOVETOLIST'(1,1)                                 @DAA 01890400
         AIF   (T'&ZC NE 'N').PLENDMOVETOLISTSETUP                 @DAA 01890500
&ZC      SETC  '&XMOVETOLIST'                                      @DAA 01890600
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDMOVETOLISTSETUP        @DAA 01890700
&ZCGPR   SETC  '=FL4''&XMOVETOLIST'''                              @DAA 01890800
.PLENDMOVETOLISTSETUP ANOP ,                                       @DAA 01890900
.*                                                                      01891000
         AIF   (&LISTPLVERS NE 0).PLMOVETOLISTNOTVZERO             @DAA 01891100
.*                                                                      01891200
.*   _xMoveToList0                                                      01891300
         MVC   &PLOFF_XMOVETOLIST0.(4,1),&ZCGPR                    @DAA 01891400
         AGO   .PLMOVETOLISTSTOREEND                               @DAA 01891500
.*                                                                      01891600
.PLMOVETOLISTNOTVZERO ANOP ,                                       @DAA 01891700
.*                                                                      01891800
.*   _xMoveToList1                                                      01891900
         MVC   &PLOFF_XMOVETOLIST1.(4,1),&ZCGPR                    @DAA 01892000
.*                                                                      01892100
.PLMOVETOLISTSTOREEND ANOP ,                                       @DAA 01892200
.PLSETMOVETOLISTEND ANOP ,                                         @DAA 01892300
.*                                                                      01892400
.*                                                                      01892500
.**  Set the AuthComp and NewAuth fields                             ** 01892600
.*                                                                      01892700
         AIF   ('&AUTHCOMP(1)' EQ 'NO_AUTHCOMP' OR                     *01892800
                '&AUTHCOMP(1)' EQ '0'           OR                     *01892900
                '&AUTHCOMP(1)' EQ '').PLNOAUTHCOMP                 @D9A 01893000
.*                                                                      01893100
.* Handle the AuthComp specification.                                   01893200
.* There are four ways it can be specified:                             01893300
.*  1) AUTHCOMP=(reg)       --> "reg" contains the addr of the value    01893400
.*  2) AUTHCOMP=offset(reg) --> explicit basing specification           01893500
.*  3) AUTHCOMP=name        --> variable name                           01893600
.*  4) AUTHCOMP=value       --> hard-coded value                        01893700
.*                                                                      01893800
         AIF   ('&XAUTHCOMP'(1,1) NE '(').PLAUTHCOMPNOTREG         @D9A 01893900
&ZCGPR   SETC  '0('.'&XAUTHCOMP'(2,K'&XAUTHCOMP-2).')'             @D9A 01894000
         AGO   .PLENDAUTHCOMPSETUP                                 @D9A 01894100
.PLAUTHCOMPNOTREG ANOP ,                                           @D9A 01894200
&ZCGPR   SETC  '&XAUTHCOMP'                                        @D9A 01894300
&ZC      SETC  '&XAUTHCOMP'(1,1)                                   @D9A 01894400
         AIF   (T'&ZC NE 'N').PLENDAUTHCOMPSETUP                   @D9A 01894500
&ZC      SETC  '&XAUTHCOMP'                                        @D9A 01894600
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDAUTHCOMPSETUP          @D9A 01894700
&ZCGPR   SETC  '=CL16''&XAUTHCOMP'''                               @D9A 01894800
.PLENDAUTHCOMPSETUP ANOP ,                                         @D9A 01894900
.*                                                                      01895000
         AIF   ('&REQUEST(1)' NE 'WRITE_LCONTROLS').PLATHCMPNOTWLC @D9A 01895100
.*                                                                      01895200
.*   _xAuthComp1                                                        01895300
         MVC   &PLOFF_XAUTHCOMP1.(16,1),&ZCGPR                     @D9A 01895400
         AGO   .PLAUTHCOMPSTOREEND                                 @D9A 01895500
.*                                                                      01895600
.PLATHCMPNOTWLC ANOP ,                                             @D9A 01895700
.*                                                                      01895800
.*   _xAuthComp2                                                        01895900
         MVC   &PLOFF_XAUTHCOMP2.(16,1),&ZCGPR                     @D9A 01896000
.*                                                                      01896100
.PLAUTHCOMPSTOREEND ANOP ,                                         @D9A 01896200
.*                                                                      01896300
.*                                                                      01896400
         AIF   ('&REQUEST(1)'  NE 'WRITE_LCONTROLS' OR                 *01896500
                ('&NEWAUTH(1)'  NE 'NO_NEWAUTH'       AND              *01896600
                 '&NEWAUTH(1)'  NE '')).PLNONEWAUTHDEFAULT         @D9C 01896700
.*                                                                      01896800
.*   _xNewAuth                                                          01896900
         MVC   &PLOFF_XNEWAUTH1.(16,1),&PLOFF_XAUTHCOMP1.(1)       @D9C 01897000
.*                                                                      01897100
.PLNONEWAUTHDEFAULT ANOP ,                                              01897200
.PLNOAUTHCOMP ANOP ,                                               @D9A 01897300
.*                                                                      01897400
.*                                                                      01897500
         AIF   ('&NEWAUTH(1)'  EQ 'NO_NEWAUTH'  OR                     *01897600
                '&NEWAUTH(1)'  EQ '0'           OR                     *01897700
                '&NEWAUTH(1)'  EQ '').PLNONEWAUTH                  @D9A 01897800
.*                                                                      01897900
.* Handle the NewAuth specification.                                    01898000
.* There are four ways it can be specified:                             01898100
.*  1) NEWAUTH=(reg)       --> "reg" contains the addr of the value     01898200
.*  2) NEWAUTH=offset(reg) --> explicit basing specification            01898300
.*  3) NEWAUTH=name        --> variable name                            01898400
.*  4) NEWAUTH=value       --> hard-coded value                         01898500
.*                                                                      01898600
         AIF   ('&XNEWAUTH'(1,1) NE '(').PLNEWAUTHNOTREG           @D9A 01898700
&ZCGPR   SETC  '0('.'&XNEWAUTH'(2,K'&XNEWAUTH-2).')'               @D9A 01898800
         AGO   .PLENDNEWAUTHSETUP                                  @D9A 01898900
.PLNEWAUTHNOTREG ANOP ,                                            @D9A 01899000
&ZCGPR   SETC  '&XNEWAUTH'                                         @D9A 01899100
&ZC      SETC  '&XNEWAUTH'(1,1)                                    @D9A 01899200
         AIF   (T'&ZC NE 'N').PLENDNEWAUTHSETUP                    @D9A 01899300
&ZC      SETC  '&XNEWAUTH'                                         @D9A 01899400
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDNEWAUTHSETUP           @D9A 01899500
&ZCGPR   SETC  '=CL16''&XNEWAUTH'''                                @D9A 01899600
.PLENDNEWAUTHSETUP ANOP ,                                          @D9A 01899700
.*                                                                      01899800
         AIF   ('&REQUEST(1)' NE 'WRITE_LCONTROLS').PLNEWATHNOTWLC @D9A 01899900
.*                                                                      01900000
.*   _xNewAuth1                                                         01900100
         MVC   &PLOFF_XNEWAUTH1.(16,1),&ZCGPR                      @D9A 01900200
         AGO   .PLNEWAUTHSTOREEND                                  @D9A 01900300
.*                                                                      01900400
.PLNEWATHNOTWLC ANOP ,                                             @D9A 01900500
.*                                                                      01900600
.*   _xNewAuth2                                                         01900700
         MVC   &PLOFF_XNEWAUTH2.(16,1),&ZCGPR                      @D9A 01900800
.*                                                                      01900900
.PLNEWAUTHSTOREEND ANOP ,                                          @D9A 01901000
.PLNONEWAUTH ANOP ,                                                @D9A 01901100
.*                                                                      01901200
.*                                                                      01901300
.**------------------------------------------------------------------** 01901400
.**  End of code to fill in the parameter list                       ** 01901500
.**------------------------------------------------------------------** 01901600
.*                                                                      01901700
.*                                                                      01901800
.**------------------------------------------------------------------** 01901900
.**  Ensure AR1 is 0 for primary callers                             ** 01902000
.**------------------------------------------------------------------** 01902100
.*                                                                      01902200
.**  This code is necessary because the entry linkage of the called  ** 01902300
.**  routine needs to reference fields in the parameter list while   ** 01902400
.**  executing in AR mode without knowing the mode of the caller.    ** 01902500
.*                                                                      01902600
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    01902700
         LAE   1,0(1,0)                 Make sure AR1 is cleared        01902800
.CALLSKIPSETAR1 ANOP ,                                                  01902900
.*                                                                      01903000
.*                                                                      01903100
.**------------------------------------------------------------------** 01903200
.**  Generate the linkage to the list routine                        ** 01903300
.**------------------------------------------------------------------** 01903400
.*                                                                      01903500
.**  Note that in the following instructions the index register is   ** 01903600
.**  used instead of the base register so that ALET translation is   ** 01903700
.**  not performed and the code works the same in both primary and   ** 01903800
.**  AR mode.                                                        ** 01903900
.*                                                                      01904000
         L     15,16(0,0)               Get CVT address            @D1C 01904100
         L     15,140(15,0)             Get ECVT address           @D1C 01904200
         L     15,256(15,0)             Get XRAT address           @D1C 01904300
         L     15,36(15,0)              List mainline routine      @D1C 01904400
         BALR  14,15                    Branch to routine          @D1C 01904500
.*                                                                      01904600
.*                                                                      01904700
.ENDGENLINKAGE ANOP ,                                                   01904800
.*                                                                      01904900
.**------------------------------------------------------------------** 01905000
.**  End of user maclasm code                                        ** 01905100
.**------------------------------------------------------------------** 01905200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01905300
.ZLINKX               ANOP  ,                                           01905400
.*******************************************************************    01905500
.***AP.X01  FORMAT GENERATED CODE                                       01905600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            01905700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01905800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01905900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01906000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01906100
                      AIF   (K'&ZLD LE 0).ZL51                          01906200
&ZLC                  SETA  35             COMMENT COLUMN               01906300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   01906400
&ZLC                  SETA  33             COMMENT COLUMN               01906500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  01906600
&ZLV                  SETC  '&ZLV'.' '                                  01906700
                      AGO   .ZL31                                       01906800
.*                                                                      01906900
.ZL41                 ANOP  ,                                           01907000
&ZLV                  SETC  '&ZLV'.' '                                  01907100
.ZL51                 ANOP  ,                                           01907200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01907300
.*                                                                      01907400
&ZLL     &ZLOP &ZLV                                                     01907500
.*                                                                      01907600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01907700
                      AGO   .ZL21          CONTINUE LOOPING             01907800
.*                                                                      01907900
.ZLX1                 ANOP  ,                                           01908000
.*******************************************************************    01908100
.***AP.X02  END OF IXLLIST MACRO                                        01908200
&ZIXLLIST             SETC  'YES'          SET IXLLIST USED             01908300
         POP   PRINT                                                    01908400
*                                            IXLLIST-3                  01908500
         SPACE 1                                                        01908600
.ZLX2                 ANOP  ,                                           01908700
         MEND                                                           01908800
**********************************************************************/ 01908900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  01909000
*%IXLLIST: MACRO KEYS(REQUEST,TYPE,RESTOKEN,EXTRESTOKEN,ENTRYTYPE,      01909100
*                 ELEMNUM,LISTLIMIT,LISTDESC,LISTKEY,MAXLISTKEY,        01909200
*                 SETCURSOR,MOVETOLIST,MOVETOKEY,MOVETOPOS,DATAOPER,    01909300
*                 LISTTYPE,FIRSTELEM,LASTELEM,ACTION,VECTORINDEX,       01909400
*                 DRIVEEXIT,UNC,STARTINDEX,ENDINDEX,MOSVECTOR,          01909500
*                 CONTOKEN,REQID,BUFLIST,BUFADDRTYPE,PAGEABLE,          01909600
*                 BUFSTGKEY,BUFALET,BUFNUM,BUFINCRNUM,BUFFER,BUFSIZE,   01909700
*                 ADJAREA,LISTNUM,LISTPOS,ENTRYKEY,KEYREQTYPE,          01909800
*                 AUTHCOMP,AUTHCOMPTYPE,NEWAUTH,ENTRYID,ENTRYNAME,      01909900
*                 LOCBYCURSOR,UPDATECURSOR,CURSORUPDTYPE,LISTDIR,       01910000
*                 LISTKEYTYPE,LISTKEYINC,KEYCOMP,VERSCOMP,              01910100
*                 VERSCOMPTYPE,VERSUPDATE,NEWVERS,LOCKINDEX,LOCKOPER,   01910200
*                 LOCKMODE,LOCKDATA,LOCKCOMP,MODE,REQECB,REQDATA,       01910300
*                 REQTOKEN,ANSAREA,ANSLEN,FUNCTION,REDRIVE,LOCKVALUE,   01910400
*                 RETCODE,RSNCODE,PLISTVER,MF);                         01910500
*  ANS('?'!!MACLABEL!!' '!!'IXLLISTP '!!MACLIST!!                       01910600
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              01910700
*%END IXLLIST;                                                          01910800
