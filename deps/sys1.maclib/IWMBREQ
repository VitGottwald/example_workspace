*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMBREQ                               -01/19/15-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Batch Initiator Request Service           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1997, 2015                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77A0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMBREQ service requests WLM to start a single demand      * 00002100
*      batch or a set of demand batch initiators on the system where  * 00002200
*      this service is invoked.  The initiators will attempt to       * 00002300
*      select the jobs specified by JOBTOKEN= or JOBTOKENL=.          * 00002400
*                                                                     * 00002500
*01* EXTERNAL CLASSIFICATION:  NONE                                   * 00002600
*                                                                     * 00002700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002800
*                                                                     * 00002900
*01* ENVIRONMENT:                                                     * 00003000
*                                                                     * 00003100
*                                                                     * 00003200
*      Minimum authorization: Supervisor state or program key mask    * 00003300
*                        (PKM) allowing keys 0-7.                     * 00003400
*                                                                     * 00003500
*      Dispatchable unit mode: Task mode.                             * 00003600
*                                                                     * 00003700
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00003800
*                                                                     * 00003900
*      AMODE:            31-bit.                                      * 00004000
*                                                                     * 00004100
*      ASC mode:         Primary.                                     * 00004200
*                                                                     * 00004300
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004400
*                                                                     * 00004500
*      Locks:            No locks held.                               * 00004600
*                                                                     * 00004700
*      Control parameters: Control parameters must be in the primary  * 00004800
*                        address space.                               * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*01* PROGRAMMING REQUIREMENTS:                                        * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*    1.  The macro CVT must be included to use this macro.            * 00005600
*                                                                     * 00005700
*    2.  The macro IWMYCON must be included to use this macro.        * 00005800
*                                                                     * 00005900
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006000
*        it is included by IWMYCON.                                   * 00006100
*                                                                     * 00006200
*    4.  Note that the high order halfword of register 0, and the     * 00006300
*        reason code variable when specified, may be non-zero and     * 00006400
*        represents diagnostic data which is NOT part of the external * 00006500
*        interface.  The high order halfword should thus be excluded  * 00006600
*        from comparison with the reason code values described above. * 00006700
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00006800
*        be used for this purpose.                                    * 00006900
*                                                                     * 00007000
*    5.  The address space from which this service is invoked must    * 00007100
*        have previously registered a batch job queue using the token * 00007200
*        specified on QTOKEN=.                                        * 00007300
*                                                                     * 00007400
*    6.  The caller must provide serialization so that the IWMDISC    * 00007500
*        service cannot be issued in parallel with this service.      * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*01* RESTRICTIONS:                                                    * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*    1.  This macro may not be used prior to the completion of WLM    * 00008300
*        address space initialization.                                * 00008400
*                                                                     * 00008500
*    2.  This macro may only be used on MVS/ESA JBB6604 or higher.    * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*01* INPUT REGISTER INFORMATION:                                      * 00009000
*                                                                     * 00009100
*    Before issuing the IWMBREQ macro, the caller does not have to    * 00009200
*    place any information into any register unless using it in       * 00009300
*    register notation for a particular parameter, or using it as a   * 00009400
*    base register.                                                   * 00009500
*                                                                     * 00009600
*01* OUTPUT REGISTER INFORMATION:                                     * 00009700
*                                                                     * 00009800
*    When control returns to the caller, the GPRs contain:            * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*    REGISTER  CONTENTS                                               * 00010200
*                                                                     * 00010300
*    0         Reason code if GR15 return code is non-zero            * 00010400
*                                                                     * 00010500
*    1         Used as work registers by the system                   * 00010600
*                                                                     * 00010700
*    2-13      Unchanged                                              * 00010800
*                                                                     * 00010900
*    14        Used as work registers by the system                   * 00011000
*                                                                     * 00011100
*    15        Return code                                            * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*    When control returns to the caller, the ARs contain:             * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*    REGISTER  CONTENTS                                               * 00011900
*                                                                     * 00012000
*    0-1       Used as work registers by the system                   * 00012100
*                                                                     * 00012200
*    2-13      Unchanged                                              * 00012300
*                                                                     * 00012400
*    14-15     Used as work registers by the system                   * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*    Some callers depend on register contents remaining the same      * 00012900
*    before and after issuing a service.  If the system changes the   * 00013000
*    contents of registers on which the caller depends, the caller    * 00013100
*    must save them before issuing the service, and restore them      * 00013200
*    after the system returns control.                                * 00013300
*                                                                     * 00013400
*01* PERFORMANCE IMPLICATIONS:                                        * 00013500
*                                                                     * 00013600
*    None                                                             * 00013700
*                                                                     * 00013800
*01* SYNTAX:                                                          * 00013900
*                                                                     * 00014000
*Ýxlabel¨  IWMBREQ  Ð  JOBTOKEN=xjobtoken                             * 00014100
*                   ¿ ,JOBTOKENL=xjobtokenl                           * 00014200
*                        Ý,NUMJOBS=»xnumjobs!1º¨                      * 00014300
*                     ,QTOKEN=xqtoken                                 * 00014400
*                    Ý,RETCODE=xretcode¨                              * 00014500
*                    Ý,RSNCODE=xrsncode¨                              * 00014600
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00014700
*                   ÐÝ,MF=S¨                                          * 00014800
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00014900
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*      Where:                                                         * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*      Ýxlabel¨                                                       * 00015600
*          is an optional symbol, starting in column 1, that is the   * 00015700
*          name on the IWMBREQ macro invocation.  The name must       * 00015800
*          conform to the rules for an ordinary assembler language    * 00015900
*          symbol.                                                    * 00016000
*          DEFAULT: No name.                                          * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*      The following is a set of mutually exclusive keys.  This set   * 00016600
*      is required; only one key must be specified.                   * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*      JOBTOKEN=xjobtoken                                             * 00017000
*          belongs to a set of mutually exclusive keys. It is the     * 00017100
*          name (RS-type), or address in register (2)-(12), of an 8   * 00017200
*          character input which contains a unique JES job token for  * 00017300
*          the demand batch job to be run.  A demand batch initiator  * 00017400
*          will pass this job token back to JES through the job       * 00017500
*          select SSI when it is ready to run the job.                * 00017600
*                                                                     * 00017700
*      JOBTOKENL=xjobtokenl                                           * 00017800
*          belongs to a set of mutually exclusive keys. It is the     * 00017900
*          name (RS-type), or address in register (2)-(12), of a      * 00018000
*          character input of a non-empty list of unique JES job      * 00018100
*          tokens for the demand batch jobs to be run.  Each demand   * 00018200
*          batch initiator that WLM starts will pass one of these job * 00018300
*          tokens back to JES through the job select SSI when it is   * 00018400
*          ready to run the job.                                      * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*          ÝNUMJOBS=»xnumjobs!1º¨                                     * 00018800
*              is the name (RS-type), or address in register          * 00018900
*              (2)-(12), of an optional fullword input which contains * 00019000
*              the number of demand batch jobs to be run in the list  * 00019100
*              of job tokens (JOBTOKENL=).  Required if more than one * 00019200
*              job is to be run.                                      * 00019300
*              DEFAULT: 1 indicates that only one demand batch job is * 00019400
*              to be run. In that case, only the first entry of       * 00019500
*              JOBTOKENL is used.                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*      End of a set of mutually exclusive required keys.              * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*      QTOKEN=xqtoken                                                 * 00020600
*          is the name (RS-type), or address in register (2)-(12), of * 00020700
*          a required 16 character input which identifies the batch   * 00020800
*          job queue where the demand batch job or the group of       * 00020900
*          concurrent demand batch jobs is currently queued.          * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*      ÝRETCODE=xretcode¨                                             * 00021500
*          is the name (RS-type) of an optional fullword output       * 00021600
*          variable, or register (2)-(12) or (15), into which the     * 00021700
*          return code is to be copied from GPR 15.  If you specify   * 00021800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00021900
*          the value will be left in GPR 15.                          * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*      ÝRSNCODE=xrsncode¨                                             * 00022500
*          is the name (RS-type) of an optional fullword output       * 00022600
*          variable into which the reason code is to be copied from   * 00022700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00022800
*          R0 (within or without parentheses), the value will be left * 00022900
*          in GPR 0.                                                  * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00023500
*          is an optional byte input decimal value in the "0-0" range * 00023600
*          that specifies the macro version.  PLISTVER is the only    * 00023700
*          key allowed on the list form of MF and determines which    * 00023800
*          parameter list is generated.  Note that MAX may be         * 00023900
*          specified instead of a number, and the parameter list will * 00024000
*          be of the largest size currently supported. This size may  * 00024100
*          grow from release to release (thus possibly affecting the  * 00024200
*          amount of storage needed by your program).  If your        * 00024300
*          program can tolerate this, IBM recommends that you always  * 00024400
*          specify MAX when creating the list form parameter list as  * 00024500
*          that will ensure that the list form parameter list is      * 00024600
*          always long enough to hold whatever parameters might be    * 00024700
*          specified on the execute form.                             * 00024800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00024900
*          default is the lowest version which allows all of the      * 00025000
*          parameters specified on the invocation to be processed.    * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*      ÝMF=»S!L!Eº¨                                                   * 00025600
*          is an optional keyword input which specifies the macro     * 00025700
*          form.                                                      * 00025800
*          DEFAULT: S                                                 * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*          ÝMF=S¨                                                     * 00026200
*              specifies the standard form of the macro.  The "S"     * 00026300
*              form generates code to put the parameters into an      * 00026400
*              in-line parameter list and invoke the desired service. * 00026500
*              Full checking for required macro keys is done along    * 00026600
*              with supplying defaults for omitted optional           * 00026700
*              parameters.                                            * 00026800
*                                                                     * 00026900
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00027000
*              specifies the list form of the macro.  The "L" form    * 00027100
*              defines an area to be used for the parameter list.     * 00027200
*              Only the PLISTVER key may be specified on the          * 00027300
*              invocation.  All other macro parameters are flagged as * 00027400
*              errors.  If PLISTVER is not specified, the original    * 00027500
*              parameter list definition is used.                     * 00027600
*                                                                     * 00027700
*            ,xmfctrl                                                 * 00027800
*              is a required input.  It is the name of a storage area * 00027900
*              for the parameter list.                                * 00028000
*                                                                     * 00028100
*            »,xmfattr!0Dº                                            * 00028200
*              is an optional 60 character input string that varies   * 00028300
*              from 1 to 60 characters. Use it to force boundary      * 00028400
*              alignment of the parameter list. Use only 0F or 0D.    * 00028500
*              DEFAULT: 0D which forces the parameter list to a       * 00028600
*              doubleword boundary.                                   * 00028700
*                                                                     * 00028800
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00028900
*              specifies the execute form of the macro.  The "E" form * 00029000
*              generates code to put the parameters into the          * 00029100
*              parameter list specified by xmfctrl and provides full  * 00029200
*              syntax checking with default setting.                  * 00029300
*                                                                     * 00029400
*            ,xmfctrl                                                 * 00029500
*              is a required input.  It is the name (RS-type), or     * 00029600
*              address in register (1)-(12), of a storage area for    * 00029700
*              the parameter list.                                    * 00029800
*                                                                     * 00029900
*            »,COMPLETEº                                              * 00030000
*              is an optional keyword input which specifies the       * 00030100
*              degree of macro parameter syntax checking.             * 00030200
*              DEFAULT: COMPLETE                                      * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*              COMPLETE                                               * 00030600
*                  Checking for required macro keys is done and       * 00030700
*                  defaults are supplied for omitted optional         * 00030800
*                  parameters.                                        * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*01* ABEND CODES:  None.                                              * 00031700
*                                                                     * 00031800
*01* RETURN CODES:                                                    * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*            0    Name: IwmRetCodeOk                                  * 00032200
*                                                                     * 00032300
*                 Meaning: Successful completion.                     * 00032400
*                                                                     * 00032500
*                 Action: None required.                              * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*            8    Name: IwmRetCodeInvocError                          * 00032900
*                                                                     * 00033000
*                 Meaning: Invalid invocation environment or          * 00033100
*                 parameters.                                         * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*                 HEX REASON  MEANING/ACTION                          * 00033600
*                 CODE                                                * 00033700
*                                                                     * 00033800
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00033900
*                                                                     * 00034000
*                             Meaning: Error accessing parameter      * 00034100
*                             list.                                   * 00034200
*                                                                     * 00034300
*                             Action: Check for possible storage      * 00034400
*                             overlay.                                * 00034500
*                                                                     * 00034600
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00034700
*                                                                     * 00034800
*                             Meaning: Reserved field in parameter    * 00034900
*                             list was non-zero.                      * 00035000
*                                                                     * 00035100
*                             Action: Check for possible storage      * 00035200
*                             overlay of the parameter list.          * 00035300
*                                                                     * 00035400
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00035500
*                                                                     * 00035600
*                             Meaning: Version number in parameter    * 00035700
*                             list is not valid.                      * 00035800
*                                                                     * 00035900
*                             Action: Check for possible storage      * 00036000
*                             overlay of the parameter list.          * 00036100
*                                                                     * 00036200
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00036300
*                                                                     * 00036400
*                             Meaning: Caller's space connection is   * 00036500
*                             not enabled for this service.           * 00036600
*                                                                     * 00036700
*                             Action: The caller must register a      * 00036800
*                             batch job queue before requesting this  * 00036900
*                             service.                                * 00037000
*                                                                     * 00037100
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00037200
*                                                                     * 00037300
*                             Meaning: Caller's space is not          * 00037400
*                             connected to WLM.                       * 00037500
*                                                                     * 00037600
*                             Action:  Invoke the IWMCONN macro       * 00037700
*                             before invoking this macro.             * 00037800
*                                                                     * 00037900
*                 xxxx0861    Name: IwmRsnCodeQueueNotDefined         * 00038000
*                                                                     * 00038100
*                             Meaning: Input queue (QTOKEN=) is not   * 00038200
*                             defined to WLM                          * 00038300
*                                                                     * 00038400
*                             Action: Verify that the input queue     * 00038500
*                             token is correct and retry.             * 00038600
*                                                                     * 00038700
*                 xxxx08B8    Name: IwmRsnCodeBadNumJobs              * 00038800
*                                                                     * 00038900
*                             Meaning: The value for NUMJOBS was less * 00039000
*                             than 1 or greater than the maximum      * 00039100
*                             number of address spaces (at most       * 00039200
*                             32767)                                  * 00039300
*                                                                     * 00039400
*                             Action: Check for possible storage      * 00039500
*                             overlay of the parameter list.          * 00039600
*                                                                     * 00039700
*                 xxxx08BA    Name: IwmRsnCodeBadJobTokenL            * 00039800
*                                                                     * 00039900
*                             Meaning: Error accessing jobtoken list  * 00040000
*                             storage.                                * 00040100
*                                                                     * 00040200
*                             Action: Ensure that the JOBTOKENL is    * 00040300
*                             accesssible from the caller's primary   * 00040400
*                             address space.                          * 00040500
*                                                                     * 00040600
*                 xxxx08BB    Name: IwmRsnCodeNoJobTokenL             * 00040700
*                                                                     * 00040800
*                             Meaning: Jobtoken list did not contain  * 00040900
*                             any valid job tokens.                   * 00041000
*                                                                     * 00041100
*                             Action: Check for possible storage      * 00041200
*                             overlay of the jobtoken list.           * 00041300
*                                                                     * 00041400
*                 xxxx08BC    Name: IwmRsnCodeNumJobsTooLarge         * 00041500
*                                                                     * 00041600
*                             Meaning: The value for NUMJOBS was      * 00041700
*                             greater than the number of slots        * 00041800
*                             available for WLM to start initiators   * 00041900
*                                                                     * 00042000
*                             Action: Check for possible storage      * 00042100
*                             overlay of the parameter list.  If this * 00042200
*                             is not the cause of the error, check    * 00042300
*                             the MAXUSER setting in your IEASYSxx.   * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*            C    Name: IwmRetCodeEnvError                            * 00043000
*                                                                     * 00043100
*                 Meaning: Environmental error.                       * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*                 HEX REASON  MEANING/ACTION                          * 00043600
*                 CODE                                                * 00043700
*                                                                     * 00043800
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00043900
*                                                                     * 00044000
*                             Meaning: Storage is not available for   * 00044100
*                             the request.                            * 00044200
*                                                                     * 00044300
*                             Action: Caller must disconnect by       * 00044400
*                             invoking the IWMDISC macro.             * 00044500
*                                                                     * 00044600
*                 xxxx0C2E    Name: IwmRsnCodeWrongMode               * 00044700
*                                                                     * 00044800
*                             Meaning: This function is not available * 00044900
*                             in the current WLM system mode.         * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*            10   Name: IwmRetCodeCompError                           * 00045500
*                                                                     * 00045600
*                 Meaning: Component error.                           * 00045700
*                                                                     * 00045800
*                 Action: Contact your system programmer.             * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*01* REASON CODES:                                                    * 00046400
*                                                                     * 00046500
*       A unique reason code will be returned whenever the return     * 00046600
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00046700
*       under their corresponding return code.  Reason code and       * 00046800
*       return code constants are defined within IWMYCON.  Note that  * 00046900
*       the high order halfword of register 0, and the reason code    * 00047000
*       variable when specified, may be non-zero and represents       * 00047100
*       diagnostic data which is NOT part of the external interface.  * 00047200
*       The high order halfword should thus be excluded from          * 00047300
*       comparison with the reason code values described above.  The  * 00047400
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00047500
*       used for this purpose.                                        * 00047600
*                                                                     * 00047700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00047800
*                                                                     * 00047900
*02*   PROCESSOR:  ASSEM                                              * 00048000
*                                                                     * 00048100
*01* COMPONENT:  SCWLM                                                * 00048200
*                                                                     * 00048300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00048400
*                                                                     * 00048500
*01* EXAMPLES:                                                        * 00048600
*                                                                     * 00048700
*    To request a single demand batch initiator;                      * 00048800
*                                                                     * 00048900
*                IWMBREQ                                            X * 00049000
*                      JOBTOKEN=JOBTOKEN,QTOKEN=QTOKEN,             X * 00049100
*                      RETCODE=RC,RSNCODE=RSN                         * 00049200
*      *                                                              * 00049300
*      * Storage areas                                                * 00049400
*      *                                                              * 00049500
*      JOBTOKEN  DS   CL8             Contains a syspex unique JES    * 00049600
*      *                              job token of a demand batch job * 00049700
*      QTOKEN    DS   CL16            Contains the JES batch job      * 00049800
*      *                              queue token where the demand    * 00049900
*      *                              batch job is currently queued   * 00050000
*      RC        DS   F               Return code                     * 00050100
*      RSN       DS   F               Reason code                     * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*    To request a set of demand batch initiators;                     * 00050500
*                IWMBREQ                                            X * 00050600
*                      JOBTOKENL=JOBTKNL,QTOKEN=QTOKEN,             X * 00050700
*                      NUMJOBS=NUMJOBS,                             X * 00050800
*                      RETCODE=RC,RSNCODE=RSN                         * 00050900
*      *                                                              * 00051000
*      * Storage areas                                                * 00051100
*      *                                                              * 00051200
*      JOBTKNL   DS   CL8             List of 3 JES job tokens        * 00051300
*                DS   CL8             List of 3 JES job tokens        * 00051400
*                DS   CL8             List of 3 JES job tokens        * 00051500
*      NUMJOBS   DS   F               Number of job tokens in the     * 00051600
*      *                              list                            * 00051700
*      QTOKEN    DS   CL16            Contains the JES batch job      * 00051800
*      *                              queue token where the demand    * 00051900
*      *                              batch job is currently queued   * 00052000
*      RC        DS   F               Return code                     * 00052100
*      RSN       DS   F               Reason code                     * 00052200
*                                                                     * 00052300
*01* MACRO USAGE NOTES:                                               * 00052400
*                                                                     * 00052500
*                                                                     * 00052600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00052700
*        global macro variable.  Any value other than 'NO' will       * 00052800
*        result in the macro expansion being printed.  The default is * 00052900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00053000
*        variable should be set.                                      * 00053100
*                                                                     * 00053200
*                    GBLC &ZPRINT                                     * 00053300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00053400
*                                                                     * 00053500
*                                                                     * 00053600
*    2.  All keys currently contained in the IWMBREQ macro correspond * 00053700
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00053800
*        MAX.                                                         * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*01* CHANGE ACTIVITY:                                                 * 00054400
*                                                                     * 00054500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00054600
*                                                                     * 00054700
*    $L0=WLMP     JBB6604 960826 B9HADB:  Batch Initiator Management  * 00054800
*    $L1=JESCE    HBB77A0 141007 3241IS:  JES concurrent execution    * 00054900
****** END OF SPECIFICATIONS *****************************************/ 00055000
*/********************************************************************* 00055100
         MACRO                                                          00055200
&XLABEL  IWMBREQ &JOBTOKEN=,&JOBTOKENL=,&NUMJOBS=,&QTOKEN=,&RETCODE=,  *00055300
               &RSNCODE=,&PLISTVER=,&MF=                                00055400
.*                                                                      00055500
*               MACDATE -01/19/15-<0>                                   00055600
.*                                                                      00055700
.*******************************************************************    00055800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00055900
.*******************************************************************    00056000
               GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                  00056100
               GBLC  &ZTEST      YES=TEST NO=NO TEST                    00056200
               GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX            00056300
.*                                                                      00056400
               GBLC  &ZIWMBREQ   YES=MACRO USED AT LEAST ONCE           00056500
.*******************************************************************    00056600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00056700
.*******************************************************************    00056800
               LCLC  &ZMS        ERROR MESSAGE WORK AREA                00056900
               LCLC  &ZCNDX      SYSNDX CHARACTERS                      00057000
               LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED             00057100
               LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR            00057200
               LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE            00057300
               LCLA  &ZAWRK      USED AS A WORK AREA                    00057400
               LCLA  &ZASIZ      USED FOR SIZE OF VALUE                 00057500
               LCLA  &ZN         NUMERIC WORK VARIABLE                  00057600
               LCLC  &ZC         CHARACTER WORK VARIABLE                00057700
               LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE            00057800
               LCLA  &ZTLA       VALUE TOO LONG VARIABLE                00057900
               LCLC  &ZMAC_G     "G" or null                            00058000
&ZMAC_G        SETC  ''                                                 00058100
               LCLC  &ZMAC_LR                                           00058200
&ZMAC_LR       SETC  'LR'                                               00058300
               LCLC  &ZMAC_L                                            00058400
&ZMAC_L        SETC  'L'                                                00058500
               LCLC  &ZMAC_ST                                           00058600
&ZMAC_ST       SETC  'ST'                                               00058700
               LCLC  &ZMAC_LLGT                                         00058800
&ZMAC_LLGT     SETC  'L'                                                00058900
               LCLC  &ZMAC_LGR                                          00059000
&ZMAC_LGR      SETC  'LR'                                               00059100
               LCLC  &ZMAC_LG                                           00059200
&ZMAC_LG       SETC  'L'                                                00059300
               LCLC  &ZMAC_STG                                          00059400
&ZMAC_STG      SETC  'ST'                                               00059500
               LCLA  &ZMACRET    MACRO RETURN CODE                      00059600
&ZMACRET       SETA  0           ASSUME NO ERRORS                       00059700
.*                                                                      00059800
               LCLC  &ZCSYSLIST(255)            NONXKEY, POS ARRAY      00059900
               LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()             00060000
               LCLA  &ZPLLEN     PARAMETER LIST LENGTH                  00060100
               LCLC  &ZENDBASEPL                End of base PL          00060200
               LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                  00060300
.*******************************************************************    00060400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00060500
.*******************************************************************    00060600
               LCLA  &ZI         INDEX FOR ARRAY                        00060700
               LCLA  &ZJ         INDEX FOR PARMS                        00060800
               LCLA  &ZK         INDEX FOR PARSE                        00060900
               LCLA  &ZLO        LOW RANGE VALUE                        00061000
               LCLA  &ZHI        HIGH RANGE VALUE                       00061100
               LCLC  &ZW         WORK AREA FOR PARM                     00061200
.********************************************************************   00061300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00061400
.********************************************************************   00061500
               GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                00061600
               GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE         00061700
               GBLA  &SYSALVL    SYSSTATE ARCHLVL                       00061800
               GBLC  &SYSAM64    SYSSTATE AMODE64                       00061900
.*                                                                      00062000
               AIF   (K'&SYSASCE GT 0).ZSYS4    SYS STATE DEFINED       00062100
               AIF   (K'&SYSSPLV GT 0).ZSYS2    SP LEVEL DEFINED        00062200
               SPLEVEL  TEST                                            00062300
.ZSYS2         ANOP  ,                                                  00062400
               AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1              00062500
               AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1              00062600
               SYSSTATE TEST                                            00062700
               AGO   .ZSYS4                                             00062800
.ZSYS3         ANOP  ,                                                  00062900
&SYSASCE       SETC  'P'         ASSUME SYSSTATE PRIMARY                00063000
.ZSYS4         ANOP  ,                                                  00063100
               AIF   ('&SYSAM64' NE 'YES').ZSYSN64                      00063200
&ZMAC_LLGT     SETC 'LLGT'                                              00063300
&ZMAC_LGR      SETC 'LGR'                                               00063400
&ZMAC_LG       SETC 'LG'                                                00063500
&ZMAC_STG      SETC 'STG'                                               00063600
.ZSYSN64       ANOP  ,                                                  00063700
.*******************************************************************    00063800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00063900
.*******************************************************************    00064000
               LCLC  &XUSEDJOBTOKENKEY          ++ NAME                 00064100
               LCLC  &XJOBTOKEN  ++ NAME                                00064200
               LCLC  &XJOBTOKENL                ++ NAME                 00064300
               LCLC  &XNUMJOBS   ++ NAME                                00064400
               LCLC  &XQTOKEN    ++ NAME                                00064500
               LCLC  &XRETCODE   ++ NAME                                00064600
               LCLC  &XRSNCODE   ++ NAME                                00064700
               LCLA  &XPLISTVER  ++ VALUE                               00064800
               LCLC  &XMF        ++ VALUE                               00064900
               LCLC  &XMFCTRL    ++ NAME                                00065000
               LCLC  &XMFATTR    ++ VALUE                               00065100
               LCLC  &XMFSCK     ++ VALUE                               00065200
.*******************************************************************    00065300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00065400
.*******************************************************************    00065500
               LCLC  &ZXUSEDJOBTOKENKEY         ++ INPUT NAME           00065600
               LCLC  &ZXJOBTOKEN                ++ INPUT NAME           00065700
               LCLC  &ZXJOBTOKENL               ++ INPUT NAME           00065800
               LCLC  &ZXNUMJOBS  ++ INPUT NAME                          00065900
               LCLC  &ZXQTOKEN   ++ INPUT NAME                          00066000
               LCLC  &ZXRETCODE  ++ OUTPUT NAME                         00066100
               LCLC  &ZXRSNCODE  ++ OUTPUT NAME                         00066200
               LCLC  &ZXPLISTVER                ++ INPUT VALUE          00066300
               LCLC  &ZXMF       ++ INPUT VALUE                         00066400
               LCLC  &ZXMFCTRL   ++ INPUT NAME                          00066500
               LCLC  &ZXMFATTR   ++ INPUT VALUE                         00066600
               LCLC  &ZXMFSCK    ++ INPUT VALUE                         00066700
.********************************************************************   00066800
.***AC.PLV01  PROCESS PLISTVER                                      *   00066900
.********************************************************************   00067000
&XPLISTVER      SETA  0                                                 00067100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00067200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00067300
&XPLISTVER      SETA  0                                                 00067400
.ZPLV0          ANOP  ,                                                 00067500
.*                                                                      00067600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00067700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00067800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00067900
.*-------------------------------------------------------------------   00068000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00068100
&ZMS            SETC  '"PLISTVER='                                      00068200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00068300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00068400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00068500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00068600
                AGO   .ZPVCK2                                           00068700
.ZPVCK3         ANOP  ,                                                 00068800
.*-------------------------------------------------------------------   00068900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00069000
&ZMS            SETC  '"PLISTVER='                                      00069100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00069200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00069300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00069400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00069500
                AGO   .ZPVCKE                                           00069600
.ZPVCK2         ANOP  ,                                                 00069700
.*-------------------------------------------------------------------   00069800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00069900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00070000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00070100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00070200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00070300
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00070400
.ZPVCK6         ANOP  ,                                                 00070500
&ZMS            SETC  '"PLISTVER='                                      00070600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00070700
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00070800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00070900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00071000
&XPLISTVER      SETA  0                                                 00071100
                AGO   .ZPVCKE                                           00071200
.*-------------------------------------------------------------------   00071300
.ZPVCK4A        ANOP  ,                                                 00071400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00071500
&ZMS            SETC  'PLISTVER='                                       00071600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00071700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00071800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00071900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00072000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072100
                AGO   .ZPVCK5                                           00072200
.ZPVCK4         ANOP  ,                                                 00072300
&XPLISTVER      SETA  &PLISTVER(1)                                      00072400
.ZPVCK5         ANOP  ,                                                 00072500
.ZPVCKE         ANOP  ,                                                 00072600
.********************************************************************   00072700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00072800
.********************************************************************   00072900
               ACTR  10000                                              00073000
.*------------------------------------------------------------------    00073100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073200
&XMF           SETC  ''          INITIALIZE XVARIABLE                   00073300
.*-------------------------------------------------------------------   00073400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073500
.ZG22          ANOP  ,                                                  00073600
&ZTLC          SETC 'S'                                                 00073700
               AIF   ('&MF(1)' NE '&ZTLC').ZG23                         00073800
&XMF           SETC  'S'         SET KEYWORD                            00073900
               AIF   (N'&MF LE 1).ZG22A         CK NUM                  00074000
&ZMS           SETC  '"MF='                                             00074100
&ZMS           SETC  '&ZMS.&MF"'                                        00074200
&ZMS           SETC  '&ZMS "MF"'                                        00074300
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00074400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00074500
.ZG22A         ANOP  ,                                                  00074600
.*-------------------------------------------------------------------   00074700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074800
.ZG23          ANOP  ,                                                  00074900
&ZTLC          SETC 'L'                                                 00075000
               AIF   ('&MF(1)' NE '&ZTLC').ZG30                         00075100
&XMF           SETC  'L'         SET KEYWORD                            00075200
               AIF   (N'&MF LE 3).ZG23A         CK NUM                  00075300
&ZMS           SETC  '"MF='                                             00075400
&ZMS           SETC  '&ZMS.&MF"'                                        00075500
&ZMS           SETC  '&ZMS "MF"'                                        00075600
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00075700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00075800
.ZG23A         ANOP  ,                                                  00075900
.*-------------------------------------------------------------------   00076000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00076100
               AIF   (N'&SYSLIST NE 0).ZG23B    POSITIONALS?            00076200
               AIF   ('&JOBTOKEN' NE '').ZG23B  KEYS?                   00076300
               AIF   ('&JOBTOKENL' NE '').ZG23B  KEYS?                  00076400
               AIF   ('&NUMJOBS' NE '').ZG23B   KEYS?                   00076500
               AIF   ('&QTOKEN' NE '').ZG23B    KEYS?                   00076600
               AIF   ('&RETCODE' NE '').ZG23B   KEYS?                   00076700
               AIF   ('&RSNCODE' NE '').ZG23B   KEYS?                   00076800
               AGO    .ZG23C     INVOCATION OKAY                        00076900
.ZG23B         ANOP  ,                                                  00077000
&ZMS           SETC  'THE "L" FORM OF "MF"'                             00077100
&ZMS           SETC  '&ZMS CAN ONLY HAVE'                               00077200
&ZMS           SETC  '&ZMS THE "PLISTVER" KEY'                          00077300
               MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'             00077400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00077500
.ZG23C         ANOP  ,                                                  00077600
.*-------------------------------------------------------------------   00077700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00077800
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00077900
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00078000
               AIF   (N'&MF(2) GT 1).ZG25B      MULTI                   00078100
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00078200
.ZG25B         AIF   (K'&MF(2) GT 0).ZG25C                              00078300
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00078400
&ZMS           SETC  'WHEN "L" IS SPECIFIED'                            00078500
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00078600
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00078700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00078800
.ZG25C         ANOP  ,                                                  00078900
.*-------------------------------------------------------------------   00079000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00079100
               AIF   (K'&ZXMFCTRL LE 0).ZG25P   NOT I/O                 00079200
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG25P                     00079300
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00079400
&ZMS           SETC  '"MF='                                             00079500
&ZMS           SETC  '&ZMS.&MF"'                                        00079600
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00079700
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                  00079800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00079900
.ZG25P         ANOP  ,                                                  00080000
.*-------------------------------------------------------------------   00080100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00080200
&ZXMFATTR      SETC  'INPUT'     SET IN/OUTPUT                          00080300
&XMFATTR       SETC  '0D'                                               00080400
               AIF   (K'&MF(3) LE 0).ZG28B      PARM                    00080500
&XMFATTR       SETC  '&MF(3,1)'  SET XVARIABLE                          00080600
               AIF   (N'&MF(3) GT 1).ZG28B      MULTI                   00080700
&XMFATTR       SETC  '&MF(3)'    SET XVARIABLE                          00080800
.ZG28B         ANOP  ,                                                  00080900
.*-------------------------------------------------------------------   00081000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00081100
               AIF   (K'&ZXMFATTR LE 0).ZG28P   NOT I/O                 00081200
               AIF   ('&XMFATTR'(1,1) NE '(').ZG28P                     00081300
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00081400
&ZMS           SETC  '"MF='                                             00081500
&ZMS           SETC  '&ZMS.&MF"'                                        00081600
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00081700
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                  00081800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00081900
.ZG28P         ANOP  ,                                                  00082000
.*-------------------------------------------------------------------   00082100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00082200
               AIF   (K'&ZXMFATTR LE 0).ZG28S   NOT I/O                 00082300
               AIF   (K'&XMFATTR LE 60).ZG28S   LNG OK                  00082400
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00082500
&ZMS           SETC  '"MF='                                             00082600
&ZMS           SETC  '&ZMS.&MF"'                                        00082700
&ZMS           SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'              00082800
               MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                 00082900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00083000
.ZG28S         ANOP  ,                                                  00083100
.*-------------------------------------------------------------------   00083200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083300
.ZG30          ANOP  ,                                                  00083400
&ZTLC          SETC 'E'                                                 00083500
               AIF   ('&MF(1)' NE '&ZTLC').ZG38                         00083600
&XMF           SETC  'E'         SET KEYWORD                            00083700
               AIF   (N'&MF LE 3).ZG30A         CK NUM                  00083800
&ZMS           SETC  '"MF='                                             00083900
&ZMS           SETC  '&ZMS.&MF"'                                        00084000
&ZMS           SETC  '&ZMS "MF"'                                        00084100
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00084200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00084300
.ZG30A         ANOP  ,                                                  00084400
.*-------------------------------------------------------------------   00084500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00084600
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00084700
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00084800
               AIF   (N'&MF(2) GT 1).ZG32B      MULTI                   00084900
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00085000
.ZG32B         AIF   (K'&MF(2) GT 0).ZG32C                              00085100
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00085200
&ZMS           SETC  'WHEN "E" IS SPECIFIED'                            00085300
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00085400
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00085500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00085600
.ZG32C         ANOP  ,                                                  00085700
.*-------------------------------------------------------------------   00085800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00085900
               AIF   (K'&ZXMFCTRL LE 0).ZG32R   NOT I/O                 00086000
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG32R                     00086100
&ZCGPR         SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                         00086200
               AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                       00086300
               AIF   (K'&ZCGPR GT 2).ZG32Q                              00086400
               AIF   ('&ZCGPR' EQ '0').ZG32Q                            00086500
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00086600
               AIF   (T'&ZCGPR NE 'N').ZG32Q    INVALID REG NAME        00086700
.ZG32P         ANOP  ,                                                  00086800
               AIF   (T'&ZCGPR NE 'N').ZG32R    NON NUMERIC             00086900
               AIF   ('&ZCGPR' LT '1').ZG32Q                            00087000
               AIF   ('&ZCGPR' LE '12').ZG32R                           00087100
.ZG32Q         ANOP  ,                                                  00087200
&ZMS           SETC  '"MF='                                             00087300
&ZMS           SETC  '&ZMS.&MF"'                                        00087400
&ZMS           SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'          00087500
               MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                   00087600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00087700
.ZG32R         ANOP  ,                                                  00087800
.*-------------------------------------------------------------------   00087900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00088000
&XMFSCK        SETC  ''          INITIALIZE XVARIABLE                   00088100
.ZG36A   AIF   ('&MF(3)' NE 'COMPLETE').ZG37A                           00088200
&XMFSCK        SETC  'COMPLETE'  SET KEYWORD                            00088300
.*-------------------------------------------------------------------   00088400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00088500
.ZG37A         AIF   (K'&XMFSCK GT 0).ZG37C     KEYWORD                 00088600
               AIF   (K'&MF(3) LE 0).ZG37B                              00088700
&ZMS           SETC  '"MF='                                             00088800
&ZMS           SETC  '&ZMS.&MF"'                                        00088900
&ZMS           SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '          00089000
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00089100
&ZMS           SETC  '&ZMS "COMPLETE".'                                 00089200
               MNOTE 8,' &ZMS '                                         00089300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00089400
.ZG37B         ANOP  ,                                                  00089500
&XMFSCK        SETC  'COMPLETE'  SET DEFAULT KEYWORD                    00089600
.ZG37C         ANOP  ,                                                  00089700
&ZXMFSCK       SETC  'INPUT'     SET IN/OUTPUT                          00089800
.*------------------------------------------------------------------    00089900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00090000
.ZG38          ANOP  ,                                                  00090100
&ZXMF          SETC  'INPUT'     SET IN/OUTPUT                          00090200
               AIF   (K'&XMF GT 0).ZG38E        VALID ARG               00090300
               AIF   (T'&MF EQ 'O').ZG38D       OMITTED                 00090400
&ZASYSLNDX     SETA  0                                                  00090500
.ZG38A         ANOP  ,           POSITIONAL MACRO KEY                   00090600
&ZASYSLNDX     SETA  &ZASYSLNDX+1                                       00090700
               AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG38C                   00090800
&ZTLC          SETC 'MF'                                                00090900
               AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG38A          00091000
.ZG38B         ANOP  ,                                                  00091100
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00091200
&ZMS           SETC  'THE "MF" KEY'                                     00091300
&ZMS           SETC  '&ZMS MUST CONTAIN ONE'                            00091400
               MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                   00091500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00091600
               AGO   .ZG38E                                             00091700
.ZG38C         ANOP  ,                                                  00091800
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00091900
&ZMS           SETC  '"MF='                                             00092000
&ZMS           SETC  '&ZMS.&MF"'                                        00092100
&ZMS           SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '          00092200
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00092300
&ZMS           SETC  '&ZMS "S",'                                        00092400
&ZMS           SETC  '&ZMS "L",'                                        00092500
&ZMS           SETC  '&ZMS OR "E".'                                     00092600
               MNOTE 8,' &ZMS '                                         00092700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00092800
               AGO   .ZG38E                                             00092900
.ZG38D         ANOP  ,                                                  00093000
&XMF           SETC  'S'         SET DEFAULT KEYWORD                    00093100
&XMFSCK        SETC  'COMPLETE'  COMPLETE CHECKING                      00093200
.ZG38E         ANOP  ,                                                  00093300
.********************************************************************   00093400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00093500
.********************************************************************   00093600
               ACTR  10000                                              00093700
.*-------------------------------------------------------------------   00093800
.***AG.MF03 MF=(SLE)                                                    00093900
               AIF   ('&XMF' EQ 'L').ZGMFX                              00094000
.*----------------------------------------------------------------***   00094100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00094200
&XUSEDJOBTOKENKEY                SETC  ''       INITIALIZE XVARIABLE    00094300
               AIF   (K'&JOBTOKEN LE 0).ZG2C                            00094400
&ZXUSEDJOBTOKENKEY               SETC  'INPUT'  SET IN/OUTPUT           00094500
&XUSEDJOBTOKENKEY                SETC  'JOBTOKEN'  SET XVARIABLE        00094600
&ZXJOBTOKEN    SETC  'INPUT'     SET IN/OUTPUT                          00094700
&XJOBTOKEN     SETC  '&JOBTOKEN(1)'             SET XVARIABLE PARM      00094800
               AIF   (N'&JOBTOKEN GT 1).ZG2A                            00094900
&XJOBTOKEN     SETC  '&JOBTOKEN'                SET XVARIABLE PARM      00095000
.ZG2A          AIF   (N'&JOBTOKEN LE 1).ZG2B    CK NUM                  00095100
&ZMS           SETC  '"JOBTOKEN='                                       00095200
&ZMS           SETC  '&ZMS.&JOBTOKEN"'                                  00095300
&ZMS           SETC  '&ZMS "JOBTOKEN"'                                  00095400
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00095500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00095600
.ZG2B          AIF   (K'&XJOBTOKEN GT 0).ZG2C   ONE PARM                00095700
&ZXUSEDJOBTOKENKEY               SETC  ''       RESET IN/OUTPUT         00095800
&ZXJOBTOKEN    SETC  ''          RESET IN/OUTPUT                        00095900
&ZMS           SETC  ' '                                                00096000
&ZMS           SETC  '&ZMS "JOBTOKEN" KEY AND ITS'                      00096100
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00096200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00096300
.ZG2C          ANOP  ,                                                  00096400
.*----------------------------------------------------------------***   00096500
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00096600
               AIF   (K'&JOBTOKENL LE 0).ZG3D   NO ME KEY               00096700
               AIF   (N'&JOBTOKENL LE 1).ZG3A   CK NUM                  00096800
&ZMS           SETC  '"JOBTOKENL='                                      00096900
&ZMS           SETC  '&ZMS.&JOBTOKENL"'                                 00097000
&ZMS           SETC  '&ZMS "JOBTOKENL"'                                 00097100
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00097200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00097300
.ZG3A          AIF   (K'&XUSEDJOBTOKENKEY LE 0).ZG3B                    00097400
&ZMS           SETC  '"JOBTOKENL'                                       00097500
&ZMS           SETC  '&ZMS.=&JOBTOKENL"'                                00097600
&ZMS           SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'              00097700
&ZMS           SETC  '&ZMS "&XUSEDJOBTOKENKEY"'                         00097800
               MNOTE 8,' &ZMS KEY.'                                     00097900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00098000
               AGO   .ZG3D                                              00098100
.*                                                                      00098200
.ZG3B          ANOP  ,                                                  00098300
&ZXUSEDJOBTOKENKEY               SETC  'INPUT'  SET IN/OUTPUT           00098400
&XUSEDJOBTOKENKEY                SETC  'JOBTOKENL'  SET XVARIABLE       00098500
&ZXJOBTOKENL   SETC  'INPUT'     SET IN/OUTPUT                          00098600
&XJOBTOKENL    SETC  '&JOBTOKENL(1)'            SET XVARIABLE PARM      00098700
               AIF   (N'&JOBTOKENL GT 1).ZG3C                           00098800
&XJOBTOKENL    SETC  '&JOBTOKENL'               SET XVARIABLE PARM      00098900
.ZG3C          AIF   (K'&XJOBTOKENL GT 0).ZG3D  ONE PARM                00099000
&ZXUSEDJOBTOKENKEY               SETC  ''       RESET IN/OUTPUT         00099100
&ZXJOBTOKENL   SETC  ''          RESET IN/OUTPUT                        00099200
&ZMS           SETC  ' '                                                00099300
&ZMS           SETC  '&ZMS "JOBTOKENL" KEY AND ITS'                     00099400
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00099500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00099600
.ZG3D          ANOP  ,                                                  00099700
.*------------------------------------------------------------------    00099800
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00099900
               AIF   (K'&XUSEDJOBTOKENKEY GT 0).ZG7B                    00100000
&ZXUSEDJOBTOKENKEY               SETC  ''       RESET IN/OUTPUT         00100100
&ZXJOBTOKEN    SETC  ''          RESET IN/OUTPUT                        00100200
&XUSEDJOBTOKENKEY                SETC  ''       ENSURE NULL             00100300
&XJOBTOKEN     SETC  ''          ENSURE NULL                            00100400
&ZMS           SETC  'ONE OF THE FOLLOWING'                             00100500
&ZMS           SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                00100600
&ZMS           SETC  '&ZMS REQUIRED:'                                   00100700
&ZMS           SETC  '&ZMS "JOBTOKEN"'          VALID ME KEY            00100800
&ZMS           SETC  '&ZMS OR "JOBTOKENL".'     VALID ME KEY            00100900
               MNOTE 8,' &ZMS '                                         00101000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00101100
.ZG7B          ANOP  ,                                                  00101200
.*-------------------------------------------------------------------   00101300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00101400
.ZG2ZY  AIF    ('&XUSEDJOBTOKENKEY' NE 'JOBTOKEN').ZG3ZY                00101500
.*-------------------------------------------------------------------   00101600
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00101700
&ZCVAL         SETC ''           ERROR KEY FIELD                        00101800
.ZG2I0         AIF   (K'&NUMJOBS LE 0).ZG2I1                            00101900
&ZCVAL         SETC '&ZCVAL NUMJOBS'            DISALLOWED KEY          00102000
.ZG2I1         AIF   (K'&ZCVAL LE 0).ZG2J       KEY                     00102100
&ZCVAL         SETC '&ZCVAL'(2,K'&ZCVAL-1)                              00102200
&ZMS           SETC  '"JOBTOKEN'                                        00102300
&ZMS           SETC  '&ZMS.=&JOBTOKEN"'                                 00102400
&ZMS           SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'               00102500
               MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'               00102600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00102700
.ZG2J          ANOP  ,                                                  00102800
.*-------------------------------------------------------------------   00102900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00103000
               AIF   (K'&ZXJOBTOKEN LE 0).ZG2R  NOT I/O                 00103100
               AIF   ('&XJOBTOKEN'(1,1) NE '(').ZG2R                    00103200
&ZCGPR         SETC  '&XJOBTOKEN'(2,K'&XJOBTOKEN-2)                     00103300
               AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                        00103400
               AIF   (K'&ZCGPR GT 2).ZG2Q                               00103500
               AIF   ('&ZCGPR' EQ '0').ZG2Q                             00103600
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00103700
               AIF   (T'&ZCGPR NE 'N').ZG2Q     INVALID REG NAME        00103800
.ZG2P          ANOP  ,                                                  00103900
               AIF   (T'&ZCGPR NE 'N').ZG2R     NON NUMERIC             00104000
               AIF   ('&ZCGPR' LT '2').ZG2Q                             00104100
               AIF   ('&ZCGPR' LE '12').ZG2R                            00104200
.ZG2Q          ANOP  ,                                                  00104300
&ZMS           SETC  '"JOBTOKEN='                                       00104400
&ZMS           SETC  '&ZMS.&JOBTOKEN"'                                  00104500
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00104600
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00104700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00104800
.ZG2R          ANOP  ,                                                  00104900
.*-------------------------------------------------------------------   00105000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00105100
.ZG3ZY  AIF    ('&XUSEDJOBTOKENKEY' NE 'JOBTOKENL').ZG7ZY               00105200
.*-------------------------------------------------------------------   00105300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00105400
               AIF   (K'&ZXJOBTOKENL LE 0).ZG3R  NOT I/O                00105500
               AIF   ('&XJOBTOKENL'(1,1) NE '(').ZG3R                   00105600
&ZCGPR         SETC  '&XJOBTOKENL'(2,K'&XJOBTOKENL-2)                   00105700
               AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                        00105800
               AIF   (K'&ZCGPR GT 2).ZG3Q                               00105900
               AIF   ('&ZCGPR' EQ '0').ZG3Q                             00106000
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00106100
               AIF   (T'&ZCGPR NE 'N').ZG3Q     INVALID REG NAME        00106200
.ZG3P          ANOP  ,                                                  00106300
               AIF   (T'&ZCGPR NE 'N').ZG3R     NON NUMERIC             00106400
               AIF   ('&ZCGPR' LT '2').ZG3Q                             00106500
               AIF   ('&ZCGPR' LE '12').ZG3R                            00106600
.ZG3Q          ANOP  ,                                                  00106700
&ZMS           SETC  '"JOBTOKENL='                                      00106800
&ZMS           SETC  '&ZMS.&JOBTOKENL"'                                 00106900
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00107000
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00107100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00107200
.ZG3R          ANOP  ,                                                  00107300
.*----------------------------------------------------------------***   00107400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00107500
               AIF   (N'&NUMJOBS LE 1).ZG5A     CK NUM                  00107600
&ZMS           SETC  '"NUMJOBS='                                        00107700
&ZMS           SETC  '&ZMS.&NUMJOBS"'                                   00107800
&ZMS           SETC  '&ZMS "NUMJOBS"'                                   00107900
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00108000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00108100
.ZG5A          ANOP  ,                                                  00108200
.*-------------------------------------------------------------------   00108300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00108400
&ZXNUMJOBS     SETC  'INPUT'     SET IN/OUTPUT                          00108500
&XNUMJOBS      SETC  '1'                                                00108600
               AIF   (K'&NUMJOBS(1) LE 0).ZG5B  PARM                    00108700
&XNUMJOBS      SETC  '&NUMJOBS(1)'              SET XVARIABLE           00108800
               AIF   (N'&NUMJOBS GT 1).ZG5B     MULTI                   00108900
&XNUMJOBS      SETC  '&NUMJOBS'  SET XVARIABLE                          00109000
.ZG5B          ANOP  ,                                                  00109100
.*-------------------------------------------------------------------   00109200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00109300
               AIF   (K'&ZXNUMJOBS LE 0).ZG5R   NOT I/O                 00109400
               AIF   ('&XNUMJOBS'(1,1) NE '(').ZG5R                     00109500
&ZCGPR         SETC  '&XNUMJOBS'(2,K'&XNUMJOBS-2)                       00109600
               AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                        00109700
               AIF   (K'&ZCGPR GT 2).ZG5Q                               00109800
               AIF   ('&ZCGPR' EQ '0').ZG5Q                             00109900
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00110000
               AIF   (T'&ZCGPR NE 'N').ZG5Q     INVALID REG NAME        00110100
.ZG5P          ANOP  ,                                                  00110200
               AIF   (T'&ZCGPR NE 'N').ZG5R     NON NUMERIC             00110300
               AIF   ('&ZCGPR' LT '2').ZG5Q                             00110400
               AIF   ('&ZCGPR' LE '12').ZG5R                            00110500
.ZG5Q          ANOP  ,                                                  00110600
&ZMS           SETC  '"NUMJOBS='                                        00110700
&ZMS           SETC  '&ZMS.&NUMJOBS"'                                   00110800
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00110900
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00111000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00111100
.ZG5R          ANOP  ,                                                  00111200
.*-------------------------------------------------------------------   00111300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00111400
.ZG7ZY         ANOP ,            END MUTUALLY EXCLUSIVE KEYS            00111500
.*----------------------------------------------------------------***   00111600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00111700
               AIF   (N'&QTOKEN LE 1).ZG9A      CK NUM                  00111800
&ZMS           SETC  '"QTOKEN='                                         00111900
&ZMS           SETC  '&ZMS.&QTOKEN"'                                    00112000
&ZMS           SETC  '&ZMS "QTOKEN"'                                    00112100
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00112200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00112300
.ZG9A          ANOP  ,                                                  00112400
.*-------------------------------------------------------------------   00112500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00112600
&ZXQTOKEN      SETC  'INPUT'     SET IN/OUTPUT                          00112700
&XQTOKEN       SETC  '&QTOKEN(1)'               SET XVARIABLE           00112800
               AIF   (N'&QTOKEN GT 1).ZG9B      MULTI                   00112900
&XQTOKEN       SETC  '&QTOKEN'   SET XVARIABLE                          00113000
.ZG9B          AIF   (K'&QTOKEN(1) GT 0).ZG9C                           00113100
&ZXQTOKEN      SETC  ''          RESET IN/OUTPUT                        00113200
&ZMS           SETC  ' '                                                00113300
&ZMS           SETC  '&ZMS "QTOKEN" KEY AND ITS'                        00113400
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00113500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00113600
.ZG9C          ANOP  ,                                                  00113700
.*-------------------------------------------------------------------   00113800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00113900
               AIF   (K'&ZXQTOKEN LE 0).ZG9R    NOT I/O                 00114000
               AIF   ('&XQTOKEN'(1,1) NE '(').ZG9R                      00114100
&ZCGPR         SETC  '&XQTOKEN'(2,K'&XQTOKEN-2)                         00114200
               AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                        00114300
               AIF   (K'&ZCGPR GT 2).ZG9Q                               00114400
               AIF   ('&ZCGPR' EQ '0').ZG9Q                             00114500
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00114600
               AIF   (T'&ZCGPR NE 'N').ZG9Q     INVALID REG NAME        00114700
.ZG9P          ANOP  ,                                                  00114800
               AIF   (T'&ZCGPR NE 'N').ZG9R     NON NUMERIC             00114900
               AIF   ('&ZCGPR' LT '2').ZG9Q                             00115000
               AIF   ('&ZCGPR' LE '12').ZG9R                            00115100
.ZG9Q          ANOP  ,                                                  00115200
&ZMS           SETC  '"QTOKEN='                                         00115300
&ZMS           SETC  '&ZMS.&QTOKEN"'                                    00115400
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00115500
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00115600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00115700
.ZG9R          ANOP  ,                                                  00115800
.*----------------------------------------------------------------***   00115900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00116000
               AIF   (N'&RETCODE LE 1).ZG12A    CK NUM                  00116100
&ZMS           SETC  '"RETCODE='                                        00116200
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00116300
&ZMS           SETC  '&ZMS "RETCODE"'                                   00116400
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00116500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00116600
.ZG12A         ANOP  ,                                                  00116700
.*-------------------------------------------------------------------   00116800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00116900
               AIF   (K'&RETCODE(1) LE 0).ZG12C  NO PARM                00117000
&ZXRETCODE     SETC  'OUTPUT'    SET OUTPUT                             00117100
&XRETCODE      SETC  '&RETCODE(1)'              SET XVARIABLE           00117200
               AIF   (N'&RETCODE GT 1).ZG12C                            00117300
&XRETCODE      SETC  '&RETCODE'  SET XVARIABLE                          00117400
.ZG12C         ANOP  ,                                                  00117500
.*-------------------------------------------------------------------   00117600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00117700
               AIF   (K'&ZXRETCODE LE 0).ZG12R  NOT I/O                 00117800
               AIF   ('&XRETCODE'(1,1) NE '(').ZG12R                    00117900
&ZCGPR         SETC  '&XRETCODE'(2,K'&XRETCODE-2)                       00118000
               AIF   ('&ZCGPR'(1,1) NE '0').ZG12P                       00118100
               AIF   (K'&ZCGPR GT 2).ZG12Q                              00118200
               AIF   ('&ZCGPR' EQ '0').ZG12Q                            00118300
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00118400
               AIF   (T'&ZCGPR NE 'N').ZG12Q    INVALID REG NAME        00118500
.ZG12P         ANOP  ,                                                  00118600
               AIF   (T'&ZCGPR NE 'N').ZG12R    NON NUMERIC             00118700
               AIF   ('&ZCGPR' EQ '15').ZG12R                           00118800
               AIF   ('&ZCGPR' LT '2').ZG12Q                            00118900
               AIF   ('&ZCGPR' LE '12').ZG12R                           00119000
.ZG12Q         ANOP  ,                                                  00119100
&ZMS           SETC  '"RETCODE='                                        00119200
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00119300
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00119400
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'           00119500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00119600
.ZG12R         ANOP  ,                                                  00119700
.*----------------------------------------------------------------***   00119800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00119900
               AIF   (N'&RSNCODE LE 1).ZG15A    CK NUM                  00120000
&ZMS           SETC  '"RSNCODE='                                        00120100
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00120200
&ZMS           SETC  '&ZMS "RSNCODE"'                                   00120300
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00120400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00120500
.ZG15A         ANOP  ,                                                  00120600
.*-------------------------------------------------------------------   00120700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00120800
               AIF   (K'&RSNCODE(1) LE 0).ZG15C  NO PARM                00120900
&ZXRSNCODE     SETC  'OUTPUT'    SET OUTPUT                             00121000
&XRSNCODE      SETC  '&RSNCODE(1)'              SET XVARIABLE           00121100
               AIF   (N'&RSNCODE GT 1).ZG15C                            00121200
&XRSNCODE      SETC  '&RSNCODE'  SET XVARIABLE                          00121300
.ZG15C         ANOP  ,                                                  00121400
.*-------------------------------------------------------------------   00121500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00121600
               AIF   (K'&ZXRSNCODE LE 0).ZG15R  NOT I/O                 00121700
               AIF   ('&XRSNCODE'(1,1) NE '(').ZG15R                    00121800
&ZCGPR         SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                       00121900
               AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                       00122000
               AIF   (K'&ZCGPR GT 2).ZG15Q                              00122100
               AIF   ('&ZCGPR' EQ '0').ZG15R                            00122200
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00122300
               AIF   (T'&ZCGPR NE 'N').ZG15Q    INVALID REG NAME        00122400
.ZG15P         ANOP  ,                                                  00122500
               AIF   (T'&ZCGPR NE 'N').ZG15R    NON NUMERIC             00122600
               AIF   ('&ZCGPR' EQ '0').ZG15R                            00122700
               AIF   ('&ZCGPR' LT '2').ZG15Q                            00122800
               AIF   ('&ZCGPR' LE '12').ZG15R                           00122900
.ZG15Q         ANOP  ,                                                  00123000
&ZMS           SETC  '"RSNCODE='                                        00123100
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00123200
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00123300
               MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'            00123400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00123500
.ZG15R         ANOP  ,                                                  00123600
.******************************************************************     00123700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00123800
.******************************************************************     00123900
               ACTR  10000                                              00124000
.*----------------------------------------------------------------***   00124100
.***AH.P02 EXTRA POSITIONALS                                            00124200
               AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS               00124300
               AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL               00124400
               AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL           00124500
               AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL            00124600
.ZGLISTX1      ANOP  ,                                                  00124700
&ZCVAL         SETC  ''          ERROR FIELD                            00124800
&ZAWRK         SETA  0           POSITIONAL NUMBER                      00124900
.ZGLIST2       ANOP  ,                                                  00125000
&ZAWRK         SETA  &ZAWRK+1    NEXT POSITIONAL                        00125100
               AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE               00125200
&ZCVAL         SETC '&ZCVAL,&SYSLIST(&ZAWRK)'   EXTRA                   00125300
               AGO   .ZGLIST2                                           00125400
.*                                                                      00125500
.ZGLIST3       ANOP  ,                                                  00125600
&ZCVAL         SETC '&ZCVAL'(2,K'&ZCVAL-1)      STRIP COMMA             00125700
&ZMS           SETC  'POSITIONAL ARGUMENT(S),'                          00125800
&ZMS           SETC  '&ZMS "&ZCVAL"'                                    00125900
&ZMS           SETC  '&ZMS CANNOT BE USED.'                             00126000
&ZMS           SETC  '&ZMS NO POSITIONAL ARGUMENTS'                     00126100
               MNOTE 8,' &ZMS ARE ALLOWED.'                             00126200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00126300
.ZGLISTX       ANOP  ,                                                  00126400
&ZASYSLNDX     SETA  0                                                  00126500
.*-------------------------------------------------------------------   00126600
.***AG.MF04 MF=(SLE)                                                    00126700
.ZGMFX         ANOP  ,           END OF FULL SYNTAX CHECK               00126800
.*******************************************************************    00126900
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00127000
.*******************************************************************    00127100
               AIF   (&ZMACRET NE 0).ZLX2       ERROR DETECTED          00127200
.*******************************************************************    00127300
.***AE.01  START OF IWMBREQ MACRO CODE                                  00127400
.*******************************************************************    00127500
               LCLC  &M0M0001                 NAME                      00127600
&M0M0001       SETC  '&XLABEL'                SET NAME                  00127700
               AIF   (K'&XLABEL NE 0).XLAB2                             00127800
&M0M0001       SETC  'M00M&SYSNDX'            DEFAULT NAME              00127900
.*                                                                      00128000
.XLAB2         ANOP  ,                                                  00128100
               AIF   ('&XMF' EQ 'L').XLAB3                              00128200
&M0M0001 DS    0H                             IWMBREQ-0                 00128300
.XLAB3         ANOP  ,                                                  00128400
.*******************************************************************    00128500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00128600
.*******************************************************************    00128700
              PUSH  PRINT                                               00128800
               AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON         00128900
               PRINT OFF         ++ PR01                                00129000
               AGO   .ZPRNTXX                                           00129100
.ZPRINTX       PRINT ON                                                 00129200
.ZPRNTXX       ANOP  ,                                                  00129300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00129400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00129500
.********************************************************************   00129600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00129700
.********************************************************************   00129800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00129900
                      LCLA  &ZOPN1         INVOCATION INDEX             00130000
                      LCLC  &ZOPL(4095)    LABEL                        00130100
                      LCLC  &ZOPO(4095)    OPERATION                    00130200
                      LCLC  &ZOPV(4095)    VALUE                        00130300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00130400
.*                                                                      00130500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00130600
.******************************************************************     00130700
.***AL.L10 IWMBREQ FMT=LIST MF=S!L PARAMETERS                           00130800
.******************************************************************     00130900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00131000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00131100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00131200
&XMFATTR              SETC  '0D'                                        00131300
.*                                                                      00131400
&ZOPN                 SETA  &ZOPN+1                                     00131500
&ZOPL(&ZOPN)          SETC  ' '                                         00131600
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00131700
&ZOPO(&ZOPN)          SETC  'B'                                         00131800
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00131900
                      AGO   .ZALVL6B                                    00132000
.ZALVL6A              ANOP                                              00132100
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00132200
&ZOPV(&ZOPN)          SETC  '4,8'                                       00132300
&ZOPN                 SETA  &ZOPN+1                                     00132400
&ZOPL(&ZOPN)          SETC  ' '                                         00132500
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00132600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00132700
.ZALVL6B              ANOP                                              00132800
&ZOPD(&ZOPN)          SETC  '++ IWMBREQ ARG PARMS'                      00132900
.*                                                                      00133000
&ZOPN                 SETA  &ZOPN+1                                     00133100
&ZOPL(&ZOPN)          SETC  ' '                                         00133200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00133300
&ZOPV(&ZOPN)          SETC  '1'                                         00133400
&ZOPD(&ZOPN)          SETC  ' '                                         00133500
.*                                                                      00133600
.ZLMFSL2              ANOP  ,                                           00133700
.*-------------------------------------------------------------------   00133800
.***AM.L00  IWMBREQ FMT=LIST name                                       00133900
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00134000
&ZOPN                 SETA &ZOPN+1                                      00134100
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00134200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00134300
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00134400
&ZOPD(&ZOPN)          SETC '++ IWMBREQ NAME'                            00134500
.ZLMFSL2M             ANOP  ,                                           00134600
.*-------------------------------------------------------------------   00134700
.***AM.L01  IWMBREQ FMT=LIST PARAMETERS                                 00134800
&ZOPN                 SETA &ZOPN+1                                      00134900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00135000
&ZOPO(&ZOPN)          SETC 'DS'                                         00135100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00135200
&ZOPD(&ZOPN)          SETC '++ IWMBREQ PARM LIST'                       00135300
.*-------------------------------------------------------------------   00135400
.***AM.L02 XVERSION XL1                                                 00135500
&ZOPN                 SETA &ZOPN+1                                      00135600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00135700
&ZOPO(&ZOPN)          SETC 'DS'                                         00135800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00135900
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00136000
.*-------------------------------------------------------------------   00136100
.***AM.L03 XBREQ_OPTIONS BL.8                                           00136200
&ZOPN                 SETA &ZOPN+1                                      00136300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBREQ_OPTIONS'                    00136400
&ZOPO(&ZOPN)          SETC 'DS'                                         00136500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00136600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00136700
.*                                                                      00136800
&ZOPN                 SETA  &ZOPN+1                                     00136900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_JOBTOKENL'               00137000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00137100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00137200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00137300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).JOBTOKENL'                    00137400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00137500
.*                                                                      00137600
&ZOPN                 SETA  &ZOPN+1                                     00137700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_NUMJOBS'                 00137800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00137900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00138000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00138100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NUMJOBS'                      00138200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00138300
.*-------------------------------------------------------------------   00138400
.***AM.L09  XPLISTLEN XL2                                               00138500
&ZOPN                 SETA &ZOPN+1                                      00138600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00138700
&ZOPO(&ZOPN)          SETC 'DS'                                         00138800
&ZOPV(&ZOPN)          SETC 'XL2'                                        00138900
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00139000
.*-------------------------------------------------------------------   00139100
.***AM.L09  XJOBTOKEN CL8                                               00139200
&ZOPN                 SETA &ZOPN+1                                      00139300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XJOBTOKEN'                        00139400
&ZOPO(&ZOPN)          SETC 'DS'                                         00139500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00139600
&ZOPD(&ZOPN)          SETC '++ &ZXJOBTOKEN '                            00139700
.*-------------------------------------------------------------------   00139800
.***AM.L09  XQTOKEN CL16                                                00139900
&ZOPN                 SETA &ZOPN+1                                      00140000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQTOKEN'                          00140100
&ZOPO(&ZOPN)          SETC 'DS'                                         00140200
&ZOPV(&ZOPN)          SETC 'CL16'                                       00140300
&ZOPD(&ZOPN)          SETC '++ &ZXQTOKEN '                              00140400
.*-------------------------------------------------------------------   00140500
.***AM.L09  XNUMJOBS F                                                  00140600
&ZOPN                 SETA &ZOPN+1                                      00140700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMJOBS'                         00140800
&ZOPO(&ZOPN)          SETC 'DS'                                         00140900
&ZOPV(&ZOPN)          SETC 'F'                                          00141000
&ZOPD(&ZOPN)          SETC '++ &ZXNUMJOBS '                             00141100
.*-------------------------------------------------------------------   00141200
.***AM.L09 ADDR XJOBTOKENL A                                            00141300
&ZOPN                 SETA &ZOPN+1                                      00141400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XJOBTOKENL_ADDR'                  00141500
&ZOPO(&ZOPN)          SETC 'DS'                                         00141600
&ZOPV(&ZOPN)          SETC 'A'                                          00141700
&ZOPD(&ZOPN)          SETC '++ &ZXJOBTOKENL ADDR'                       00141800
.*-------------------------------------------------------------------   00141900
.***AM.L10 END OF IWMBREQ LIST PARAMETERS                               00142000
&ZOPN                 SETA &ZOPN+1                                      00142100
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00142200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00142300
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00142400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00142500
.*                                                                      00142600
&ZOPN                 SETA &ZOPN+1                                      00142700
&ZOPL(&ZOPN)          SETC ' '                                          00142800
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00142900
&ZOPV(&ZOPN)          SETC '1'                                          00143000
&ZOPD(&ZOPN)          SETC ' '                                          00143100
.*-------------------------------------------------------------------   00143200
.***AL.L12 IWMBREQ FMT=LIST MF=S!L PARAMETERS                           00143300
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00143400
.*                                                                      00143500
&ZOPN                 SETA  &ZOPN+1                                     00143600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00143700
&ZOPO(&ZOPN)          SETC  'DC'                                        00143800
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00143900
&ZOPD(&ZOPN)          SETC  '++ IWMBREQ ARG PARMS'                      00144000
.*                                                                      00144100
.ZLMFSLX              ANOP  ,                                           00144200
.*-------------------------------------------------------------------   00144300
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00144400
&ZPLLEN               SETA 36                                           00144500
.*                                                                      00144600
.******************************************************************     00144700
.***AI.L01 IWMBREQ FMT=LIST FILL IN PARAMETER AREA                      00144800
.******************************************************************     00144900
                      ACTR  10000                                       00145000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00145100
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00145200
&ZCVAL                SETC  'LAE'          XAX MODE                     00145300
.ZIMFXA               ANOP ,                                            00145400
.*                                                                      00145500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00145600
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00145700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00145800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00145900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00146000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00146100
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00146200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00146300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00146400
&ZOPN                 SETA  &ZOPN+1                                     00146500
&ZOPL(&ZOPN)          SETC  ' '                                         00146600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00146700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00146800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00146900
                      AGO   .ZIMFNX                                     00147000
.*                                                                      00147100
.ZIMFN2               ANOP ,                                            00147200
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00147300
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00147400
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00147500
&ZOPN                 SETA  &ZOPN+1                                     00147600
&ZOPL(&ZOPN)          SETC  ' '                                         00147700
&ZOPO(&ZOPN)          SETC  'LAE'                                       00147800
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00147900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00148000
                      AGO   .ZIMFNX                                     00148100
.ZIMFNX1              ANOP ,                                            00148200
&ZOPN                 SETA  &ZOPN+1                                     00148300
&ZOPL(&ZOPN)          SETC  ' '                                         00148400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00148500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00148600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00148700
.ZIMFNX               ANOP ,                                            00148800
.********************************************************************   00148900
.***AI.L02 IWMBREQ FMT=LIST INITIALIZE PARAMETER AREA                   00149000
.********************************************************************   00149100
.***AI.L03 MF=(SLE)                                                     00149200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00149300
.*                                                                      00149400
&ZOPN                 SETA  &ZOPN+1                                     00149500
&ZOPL(&ZOPN)          SETC  ' '                                         00149600
&ZOPO(&ZOPN)          SETC  'XC'                                        00149700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00149800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00149900
.ZIMFLX               ANOP  ,                                           00150000
.*-------------------------------------------------------------------   00150100
.***AI.L05 XBREQ_OPTIONS BL1                                            00150200
&ZW                   SETC  ''                                          00150300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00150400
.*-------------------------------------------------------------------   00150500
.***AI.L08 XBREQ_OPTIONS "JOBTOKENL"                                    00150600
.***      BL1'1XXXXXXX'                                                 00150700
         AIF   ('&JOBTOKENL' EQ '').ZI3A                                00150800
&ZW                   SETC  '&ZW.1'                                     00150900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00151000
                      AGO   .ZI3C                                       00151100
.*                                                                      00151200
.ZI3A                 ANOP  ,                                           00151300
&ZW                   SETC  '&ZW.0'                                     00151400
.ZI3C                 ANOP  ,                                           00151500
.*-------------------------------------------------------------------   00151600
.***AI.L08 XBREQ_OPTIONS "NUMJOBS"                                      00151700
.***      BL1'X1XXXXXX'                                                 00151800
         AIF   ('&NUMJOBS' EQ '').ZI4A                                  00151900
&ZW                   SETC  '&ZW.1000000'                               00152000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00152100
                      AGO   .ZI4C                                       00152200
.*                                                                      00152300
.ZI4A                 ANOP  ,                                           00152400
&ZW                   SETC  '&ZW.0000000'                               00152500
.ZI4C                 ANOP  ,                                           00152600
.*-------------------------------------------------------------------   00152700
.***AI.L11 XBREQ_OPTIONS BL1                                            00152800
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00152900
&ZOPN                 SETA  &ZOPN+1                                     00153000
&ZOPL(&ZOPN)          SETC  ' '                                         00153100
&ZOPO(&ZOPN)          SETC  'OI'                                        00153200
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00153300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00153400
.ZI4E                 ANOP  ,                                           00153500
.*-------------------------------------------------------------------   00153600
.***AI.L04 XPLISTLEN XL2                                                00153700
&ZOPN                 SETA  &ZOPN+1                                     00153800
&ZOPL(&ZOPN)          SETC  ' '                                         00153900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00154000
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00154100
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00154200
.*-------------------------------------------------------------------   00154300
.***AI.L25  XJOBTOKEN CL8                                               00154400
                      AIF   ('&ZXJOBTOKEN' EQ '').ZI6E                  00154500
                      AIF   ('&ZXJOBTOKEN' EQ 'OUTPUT').ZI6E            00154600
&ZCGPR                SETC  '&XJOBTOKEN'                                00154700
.*                                                                      00154800
                      AIF   ('&XJOBTOKEN'(1,1) NE '(').ZI6B             00154900
&ZCGPR   SETC  '0('.'&XJOBTOKEN'(2,K'&XJOBTOKEN-2).')'                  00155000
.ZI6B                 ANOP  ,                                           00155100
.*                                                                      00155200
&ZOPN                 SETA  &ZOPN+1                                     00155300
&ZOPL(&ZOPN)          SETC  ' '                                         00155400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00155500
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00155600
&ZOPD(&ZOPN)          SETC  '++ &ZXJOBTOKEN XJOBTOKEN'                  00155700
.*                                                                      00155800
.ZI6E                 ANOP  ,                                           00155900
.*-------------------------------------------------------------------   00156000
.***AI.L25  XQTOKEN CL16                                                00156100
                      AIF   ('&ZXQTOKEN' EQ '').ZI7E                    00156200
                      AIF   ('&ZXQTOKEN' EQ 'OUTPUT').ZI7E              00156300
&ZCGPR                SETC  '&XQTOKEN'                                  00156400
.*                                                                      00156500
                      AIF   ('&XQTOKEN'(1,1) NE '(').ZI7B               00156600
&ZCGPR   SETC  '0('.'&XQTOKEN'(2,K'&XQTOKEN-2).')'                      00156700
.ZI7B                 ANOP  ,                                           00156800
.*                                                                      00156900
&ZOPN                 SETA  &ZOPN+1                                     00157000
&ZOPL(&ZOPN)          SETC  ' '                                         00157100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00157200
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           00157300
&ZOPD(&ZOPN)          SETC  '++ &ZXQTOKEN XQTOKEN'                      00157400
.*                                                                      00157500
.ZI7E                 ANOP  ,                                           00157600
.*-------------------------------------------------------------------   00157700
.***AI.L25  XNUMJOBS F                                                  00157800
                      AIF   ('&ZXNUMJOBS' EQ '').ZI8E                   00157900
                      AIF   ('&ZXNUMJOBS' EQ 'OUTPUT').ZI8E             00158000
&ZCGPR                SETC  '&XNUMJOBS'                                 00158100
.*                                                                      00158200
                      AIF   ('&XNUMJOBS'(1,1) NE '(').ZI8B              00158300
&ZCGPR   SETC  '0('.'&XNUMJOBS'(2,K'&XNUMJOBS-2).')'                    00158400
                      AGO   .ZI8D                                       00158500
.ZI8B                 ANOP  ,                                           00158600
.*                                                                      00158700
&ZC                   SETC  '&XNUMJOBS'(1,1)                            00158800
                      AIF   (T'&ZC NE 'N').ZI8D                         00158900
&ZC                   SETC  '&XNUMJOBS'                                 00159000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00159100
&ZCGPR                SETC  '=FL4''&XNUMJOBS'''                         00159200
.*                                                                      00159300
.ZI8D                 ANOP  ,                                           00159400
.*                                                                      00159500
&ZOPN                 SETA  &ZOPN+1                                     00159600
&ZOPL(&ZOPN)          SETC  ' '                                         00159700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00159800
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00159900
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMJOBS XNUMJOBS'                    00160000
.*                                                                      00160100
.ZI8E                 ANOP  ,                                           00160200
.*-------------------------------------------------------------------   00160300
.***AI.L19 ADDR XJOBTOKENL A                                            00160400
                      AIF   ('&ZXJOBTOKENL' EQ '').ZI9H                 00160500
&ZCLNG                SETC  '&XJOBTOKENL'                               00160600
&ZCGPR                SETC  '14'                                        00160700
         AIF   ('&XJOBTOKENL'(1,1) EQ '(').ZI9F  IN GPR                 00160800
.*                                                                      00160900
&ZOPN                 SETA  &ZOPN+1                                     00161000
&ZOPL(&ZOPN)          SETC  ' '                                         00161100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00161200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00161300
&ZOPD(&ZOPN)          SETC  '++ &ZXJOBTOKENL XJOBTOKENL'                00161400
.*                                                                      00161500
                      AGO   .ZI9G                                       00161600
.*                                                                      00161700
.ZI9F                 ANOP  ,                                           00161800
&ZCGPR   SETC  '&XJOBTOKENL'(2,K'&XJOBTOKENL-2)                         00161900
.*                                                                      00162000
.ZI9G                 ANOP  ,                                           00162100
.*                                                                      00162200
&ZOPN                 SETA  &ZOPN+1                                     00162300
&ZOPL(&ZOPN)          SETC  ' '                                         00162400
&ZOPO(&ZOPN)          SETC  'ST'                                        00162500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00162600
&ZOPD(&ZOPN)          SETC  '++ &ZXJOBTOKENL XJOBTOKENL'                00162700
.*                                                                      00162800
.ZI9H                 ANOP  ,                                           00162900
.*-------------------------------------------------------------------   00163000
&ZOPN1                SETA &ZOPN                                        00163100
.*******************************************************************    00163200
.***  PROCESS IWMBREQ OUTPUT PARAMETERS                                 00163300
.*******************************************************************    00163400
                      ACTR  10000                                       00163500
.*******************************************************************    00163600
.***AO.X02  RETURN CODE PROCESSING                                      00163700
.*******************************************************************    00163800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00163900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00164000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00164100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00164200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00164300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00164400
&ZOPN                 SETA  &ZOPN+1                                     00164500
&ZOPL(&ZOPN)          SETC  ' '                                         00164600
&ZOPO(&ZOPN)          SETC  'ST'                                        00164700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00164800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00164900
                      AGO   .ZMRETX                                     00165000
.*                                                                      00165100
.ZMRET2               ANOP  ,                                           00165200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00165300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00165400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00165500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00165600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00165700
&ZOPN                 SETA  &ZOPN+1                                     00165800
&ZOPL(&ZOPN)          SETC  ' '                                         00165900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00166000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00166100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00166200
.ZMRETX               ANOP  ,                                           00166300
.*******************************************************************    00166400
.***AO.X03  REASON CODE PROCESSING                                      00166500
.*******************************************************************    00166600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00166700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00166800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00166900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00167000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00167100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00167200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00167300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00167400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00167500
&ZOPN                 SETA  &ZOPN+1                                     00167600
&ZOPL(&ZOPN)          SETC  ' '                                         00167700
&ZOPO(&ZOPN)          SETC  'ST'                                        00167800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00167900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00168000
                      AGO   .ZMRSNX                                     00168100
.*                                                                      00168200
.ZMRSN2               ANOP  ,                                           00168300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00168400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00168500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00168600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00168700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00168800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00168900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00169000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00169100
&ZOPN                 SETA  &ZOPN+1                                     00169200
&ZOPL(&ZOPN)          SETC  ' '                                         00169300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00169400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00169500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00169600
.ZMRSNX               ANOP  ,                                           00169700
.*******************************************************************    00169800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00169900
.*******************************************************************    00170000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00170100
.*******************************************************************    00170200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00170300
.*******************************************************************    00170400
                      ACTR  10000                                       00170500
.*                                                                      00170600
                      LCLA  &ZLC           COLUMN POSITION              00170700
                      LCLA  &ZOPX          LIST TABLE INDEX             00170800
                      LCLC  &ZLL           LABEL                        00170900
                      LCLC  &ZLOP          OPERATION                    00171000
                      LCLC  &ZLV           VALUE                        00171100
                      LCLC  &ZLD           DESCRIPTION                  00171200
.*                                                                      00171300
&ZOPX                 SETA  1                                           00171400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00171500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00171600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00171700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00171800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00171900
                      AIF   (K'&ZLD LE 0).ZL5                           00172000
&ZLC                  SETA  35             COMMENT COLUMN               00172100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00172200
&ZLC                  SETA  33             COMMMENT COLUMN              00172300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00172400
&ZLV                  SETC  '&ZLV'.' '                                  00172500
                      AGO   .ZL3                                        00172600
.*                                                                      00172700
.ZL4                  ANOP  ,                                           00172800
&ZLV                  SETC  '&ZLV'.' '                                  00172900
.ZL5                  ANOP  ,                                           00173000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00173100
.*                                                                      00173200
&ZLL     &ZLOP &ZLV                                                     00173300
.*                                                                      00173400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00173500
                      AGO   .ZL2           CONTINUE LOOPING             00173600
.*                                                                      00173700
.ZLX                  ANOP  ,                                           00173800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00173900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00174000
         L     14,16(0,0)              GET CVT ADDRESS                  00174100
         L     14,772(14,0)            GET SFT ADDRESS                  00174200
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00174300
         LA    15,73                   GET EX FOR SERVICE ROUTINE       00174400
         OR    14,15                   GET PC NUMBER                    00174500
         PC    0(14)                                                    00174600
END&SYSNDX DS    0H                    END LABEL                        00174700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00174800
.ZLINKX               ANOP  ,                                           00174900
.*******************************************************************    00175000
.***AP.X01  FORMAT GENERATED CODE                                       00175100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00175200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00175300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00175400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00175500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00175600
                      AIF   (K'&ZLD LE 0).ZL51                          00175700
&ZLC                  SETA  35             COMMENT COLUMN               00175800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00175900
&ZLC                  SETA  33             COMMENT COLUMN               00176000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00176100
&ZLV                  SETC  '&ZLV'.' '                                  00176200
                      AGO   .ZL31                                       00176300
.*                                                                      00176400
.ZL41                 ANOP  ,                                           00176500
&ZLV                  SETC  '&ZLV'.' '                                  00176600
.ZL51                 ANOP  ,                                           00176700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00176800
.*                                                                      00176900
&ZLL     &ZLOP &ZLV                                                     00177000
.*                                                                      00177100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00177200
                      AGO   .ZL21          CONTINUE LOOPING             00177300
.*                                                                      00177400
.ZLX1                 ANOP  ,                                           00177500
.*******************************************************************    00177600
.***AP.X02  END OF IWMBREQ MACRO                                        00177700
&ZIWMBREQ             SETC  'YES'          SET IWMBREQ USED             00177800
         POP   PRINT                                                    00177900
*                                            IWMBREQ-0                  00178000
         SPACE 1                                                        00178100
.ZLX2                 ANOP  ,                                           00178200
         MEND                                                           00178300
**********************************************************************/ 00178400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00178500
*%IWMBREQ: MACRO KEYS(JOBTOKEN,JOBTOKENL,NUMJOBS,QTOKEN,RETCODE,        00178600
*                 RSNCODE,PLISTVER,MF);                                 00178700
*  ANS('?'!!MACLABEL!!' '!!'IWMBREQP '!!MACLIST!!                       00178800
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00178900
*%END IWMBREQ;                                                          00179000
