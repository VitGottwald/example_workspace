*%/*                                                                    00010000
         MACRO                                                          00020000
&LABEL   LOCASCB &ASID=,     ADDRESS SPACE IDENTIFIER                  X00030000
               &STOKEN=      SPACE TOKEN                           @L1C 00040000
.**  START OF SPECIFICATIONS ****************************************** 00050000
.*                                                                      00060000
.*01*  MACRO NAME: LOCASCB                                              00070000
.*                                                                      00080000
.*01*  COPYRIGHT                                                        00090000
.*                                                                      00100000
.*      5650-ZOS                                                        00110000
.*      (C)COPYRIGHT IBM CORP. 1980, 2017                               00120000
.*      LICENSED MATERIALS - PROPERTY OF IBM                            00130000
.*                                                                      00140000
.*01*  STATUS: HBB77B0                                                  00150000
.*                                                                      00160000
.*01*  EXTERNAL CLASSIFICATION: PI                                      00170000
.*01*  END OF EXTERNAL CLASSIFICATION:                                  00180000
.*                                                                      00190000
.*01*  FUNCTION:                                                        00200000
.*        Provide the interface to service routines to obtain an        00210000
.*        ASCB address                                                  00220000
.*                                                                      00230000
.*        INPUT:    SERVICE ROUTINE:                LINKAGE:            00240000
.*                                                                      00250000
.*        ASID      IEAVLACB in module IEAVECMS     BALR                00260000
.*        STOKEN    IEAVESTA                        PC                  00270000
.*                                                                      00280000
.*                                                                      00290000
.*01* SYNTAX:                                                           00300000
.*        LOCASCB ASID=ASID-addr                                        00310000
.*                STOKEN=space-token-addr                               00320000
.*                                                                      00330000
.*01*  COMPONENT: SC1C5 (Supervisor Control)                            00340000
.*                                                                      00350000
.*01*  MACLIB: AMACLIB                                                  00360000
.*                                                                      00370000
.*01*  CHANGE ACTIVITY:                                                 00380000
.*   $L1=AR       HBB3310  860115  PD16H4: Access register support      00390000
.*   $L2=DATASPAC HBB3310  860220  PD22XB: AR-mode invoker support      00400000
.*   $L3=PR410    HBB4410  890403  PD16EI: PL/AS 4.0 changes            00410000
.*   $L4=GT128G   HBB7730  050331  PD162D: >128 gig support             00420000
.*   $P1=ME04858  HBB7730  051024  U2IAXZ: Get rid of 9-char. name.     00421000
.*   $P2=WI88172  HBB77B0  150615  PD00XB: ASABEGIN_CKARS               00422002
.*                                                                      00430000
.**** END OF SPECIFICATIONS ******************************************  00440000
.*                                                                      00450000
         LCLC  &OSFT         OFFSET IN THE SFT FOR LOCASCB SERVICE @L1A 00460000
&OSFT    SETC  '156'         (SLOT# 40-1)*4 BYTES/SLOT             @L1A 00470000
         LCLC  &KW           KEYWORD STRING FOR ERROR MESSAGE      @L1A 00480000
         GBLC  &SYSASCE      SYSSTATE value                        @L2A 00490000
         LCLC  &L                                                  @MXA 00500000
         GBLC  &SYSAM64                                            @MXA 00510000
         SYSSTATE TEST                                             @MXA 00520000
         AIF   ('&SYSAM64' EQ 'YES').AM640                         @MXA 00530000
&L       SETC  'L'                                                 @MXA 00540000
         AGO   .AM31640                                            @MXA 00550000
.AM640   ANOP                                                      @MXA 00560000
&L       SETC  'LLGT'                                              @MXA 00570000
.AM31640 ANOP                                                      @MXA 00580000
.*                                                                      00590000
*        MACDATE = 04/03/89                                        @L3C 00600000
.*                                                                      00610000
         AIF   (T'&LABEL EQ 'O').NOLABEL   CHECK IF A LABEL WAS GIVEN,  00620000
.*                                     IF YES THEN GENERATE LABEL       00630000
&LABEL   DC    0H'0'                   .BRANCH LABEL                    00640000
.*                                                                      00650000
.NOLABEL ANOP                                                           00660000
         AIF   (N'&SYSLIST NE 0).EXTRA   IF ANY POSITIONAL PARAMETERS   00670000
.*                                     ARE SPECIFIED THEN ISSUE MNOTE   00680000
.*                                     AND EXIT                         00690000
         AIF   (T'&STOKEN EQ 'O').APROC                            @L1A 00700000
.*                                                                      00710000
.********************************************************************   00720000
.*          PROCESS THE "STOKEN" KEYWORD OPTION                     *   00730000
.********************************************************************   00740000
.*                                      CHECK FOR INVALID FORMATS       00750000
         AIF   (T'&ASID NE 'O').BOTH    BOTH OPTIONS SPECIFIED     @L1A 00760000
         AIF   (T'&STOKEN EQ 'N').BADSTOK     SELF-DEFINING TERM   @L1A 00770000
         AIF   ('&STOKEN'(1,1) EQ '(').BADSTOK     REGISTER FORM   @L1A 00780000
.*                                                                      00790000
.*                                                                      00800000
.*                                                                      00810000
         LAE   1,&STOKEN             LOAD ADDRESS OF SPACE TOKEN        00820000
         &L    14,16(0,0)           .GET ADDR OF CVT                    00830000
         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  00840000
         L     14,&OSFT.(14,0)      .GET LX/EX FOR SERVICE ROUTINE      00850000
         PC    0(14)                .PC TO LOCASCB SERVICE              00860000
         MEXIT                                                     @L1A 00870000
.APROC   ANOP                                                      @L1A 00880000
         AIF   (T'&ASID EQ 'O').NOASID   IF AN ASID IS NOT SPECIFIED    00890000
.*                                     THEN ISSUE MNOTE AND EXIT        00900000
.*                                                                      00910000
.********************************************************************   00920000
.*          PROCESS THE "ASID" KEYWORD OPTION                       *   00930000
.********************************************************************   00940000
.*                                                                      00950000
         AIF   ('&ASID'(1,1) EQ '(').REGASID   IF THE ASID IS ALREADY   00960000
.*                                     IN A REGISTER THEN BRANCH        00970000
.*                                                                      00980000
         LH    1,&ASID                 .LOAD ASID INTO REGISTER 1       00990000
         AGO   .BALR                   GO GENERATE ENTRY LINKAGE CODE   01000000
.*                                                                      01010000
.REGASID ANOP                                                           01020000
         AIF   (N'&ASID NE 1).INVSUB   IF THE ASID PARAMETER DOES NOT   01030000
.*                                     HAVE ONE ELEMENT THEN ISSUE      01040000
.*                                     MNOTE AND EXIT                   01050000
         AIF   ('&ASID' EQ '(1)').BALR   IF THE ASID IS ALREADY IN      01060000
.*                                     REGISTER 1 GO GEN ENTRY LINKAGE  01070000
.*                                                                      01080000
         LR    1,&ASID(1)              .LOAD ASID INTO REGISTER 1       01090000
.*                                                                      01100000
.BALR    ANOP                                                           01110000
         AIF   ('SYSAM64' NE 'YES').AM641                               01120000
         MNOTE 12,'LOCASCB ---> BRANCH FORM NOT VALID IN AMODE 64'      01130000
.AM641   ANOP                                                           01140000
         L     15,16(0,0)              .LOAD CVT ADDRESS       @ZA52270 01150000
         L     15,X'364'(15,0)         .LOAD SVT ADDRESS           @L2C 01160000
         L     15,X'A4'(15,0)          .LOAD LOCASCB EPA           @L2C 01170000
         AIF   ('&SYSASCE' EQ 'P').NOAR1                           @L2A 01180000
         SAC   0                                                   @L2A 01190000
.NOAR1   ANOP                                                      @L2A 01200000
         BALR  14,15                   .ENTER THE LOCASCB ROUTINE       01210000
         AIF   ('&SYSASCE' EQ 'P').NOAR2                           @L2A 01220000
         SAC   X'200'                                              @L2A 01230000
.NOAR2   ANOP                                                      @L2A 01240000
         MEXIT                                                          01250000
.*                                                                      01260000
.********************************************************************** 01270000
.*                                                                    * 01280000
.*  THIS SECTION ISSUES ALL THE MNOTES USED BY THE MACRO              * 01290000
.*                                                                    * 01300000
.********************************************************************** 01310000
.*                                                                      01320000
.BOTH    ANOP                                                      @L1A 01330000
.*  IHB304 ASID AND STOKEN OPTIONS ARE MUTUALLY EXCLUSIVE               01340000
&KW      SETC  'ASID'                                              @L1A 01350000
&KW2     SETC  'STOKEN'                                            @L1A 01360000
         IHBERMAC 1304,&KW,&KW2                                    @L1A 01370000
         MEXIT                                                          01380000
.BADSTOK ANOP                                                      @L1A 01390000
.*  IHB002 INVALID STOKEN OPERAND SPECIFIED-&STOKEN.                    01400000
&KW      SETC  'STOKEN'                                            @L1A 01410000
         IHBERMAC 1001,&KW,&STOKEN                                 @L1A 01420000
         MEXIT                                                          01430000
.NOASID  ANOP                                                           01440000
.*  IHB001 ASID OR STOKEN OPERAND REQUIRED, NOT SPECIFIED               01450000
&KW      SETC  'ASID OR STOKEN'                                    @L1C 01460000
         IHBERMAC 1006,&KW                                         @L1C 01470000
         MEXIT                                                     @L1C 01480000
.*                                                                      01490000
.EXTRA   ANOP                                                           01500000
.*  IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED                    01510000
         IHBERMAC 238                                                   01520000
         MEXIT                                                          01530000
.*                                                                      01540000
.INVSUB  ANOP                                                           01550000
.*  IHB121 REGISTER SPECIFICATION INVALID. GENERATION TERMINATED        01560000
         IHBERMAC 203                                                   01570000
         MEXIT                                                          01580000
         MEND                                                           01590000
*%/*                                                                    01600000
* */                                                                    01610000
* LOCASCB:                                                              01620000
*         MACRO KEYS(ASID,STOKEN);                             /*@L1C*/ 01630000
*                                                                       01640000
* DCL EHAREGS CHAR EXT;                /* REGS FOR EPILOG            */ 01650000
* DCL EHAMAPS CHAR EXT;                /* STRUCTURES FOR EPILOG  @L1A*/ 01660000
* DCL RC FIXED;                        /* RETURN CODE FROM MACRO     */ 01670000
* DCL CMT CHAR;                        /* COMMENT FOR DO-END STMTS   */ 01680000
* DCL IVSFTINDEX CHAR;                 /* INDEX INTO THE SFT     @L1A*/ 01690000
* DCL SYSAM64 CHAR EXT;                                                 01700000
* ANS ('?SYSSTATE (TEST);') RESCAN;                                     01710000
* IVSFTINDEX='40';                     /* SET UP FOR LOCASCB STOKEN=    01720000
*                                         FUNCTION               @L1A*/ 01730000
*                                                                       01740000
* RC=12;                               /* INITIALIZE BAD RETURN CODE */ 01750000
* CMT=' ? '!!MACNAME!!' '!!MACLIST!!' '!!MACKEYS!!                      01760000
*       ' MACDATE(04/03/89)';          /* INIT MACRO COMMENT     @L3C*/ 01770000
* IF MACLABEL ^= '' THEN               /* LABEL ON MACRO?            */ 01780000
*    ANS(MACLABEL) COL(MACLMAR);       /* YES, GENERATE LABEL        */ 01790000
* IF NUMBER(MACLIST)^=0 THEN           /* MACLIST TOO LONG?          */ 01800000
*   DO;                                                                 01810000
*     ANS MSG('AHA0033 ''MACLIST'' IS TOO LONG, '!!                     01820000
*             'NO TEXT IS GENERATED');                                  01830000
*     /*    ON ERROR: MAKE INVOKING MACRO A COMMENT IN SOURCE CODE   */ 01840000
*     ANS('/* ' !! CMT !! ' */') COL(10) SKIP(2);              /*@L1A*/ 01850000
*     ANS ('@SPACE;') NORESCAN COL(MACLMAR);                   /*@L1A*/ 01860000
*     ANS ('/* AHA0033 ''MACLIST'' IS TOO LONG, '!!                     01870000
*            'NO TEXT IS GENERATED; */') COL(10) SKIP;         /*@L1A*/ 01880000
*     GOTO LHA0100;                                                     01890000
*   END;                                                                01900000
*                                                                       01910000
* IF NUMBER(STOKEN)>0 THEN                                              01920000
*   DO;                                                        /*@L1A*/ 01930000
*     /***************************************************************/ 01940000
*     /*    PROCESS SPACE TOKEN KEYWORD OPTION                       */ 01950000
*     /***************************************************************/ 01960000
* IF NUMBER(ASID)>0 THEN           /* STOKEN WITH ASID           @L1A*/ 01970000
*   DO;                                                                 01980000
*     ANS MSG('AHA0304 ''ASID'' AND ''STOKEN'' OPTIONS '!!              01990000
*             'ARE MUTUALLY EXCLUSIVE. '!!                              02000000
*             'NO TEXT IS GENERATED');                         /*@L1A*/ 02010000
*     /*    ON ERROR: MAKE INVOKING MACRO A COMMENT IN SOURCE CODE   */ 02020000
*     ANS('/* ' !! CMT !! ' */') COL(10) SKIP(2);              /*@L1A*/ 02030000
*     ANS ('@SPACE;') NORESCAN COL(MACLMAR);                   /*@L1A*/ 02040000
*     ANS ('/* AHA0304 ''ASID'' AND ''STOKEN'' OPTIONS '!!              02050000
*             'ARE MUTUALLY EXCLUSIVE. '!!                              02060000
*             'NO TEXT IS GENERATED; */') COL(10) SKIP;        /*@L1A*/ 02070000
*     GOTO LHA0100;                                                     02080000
*   END;                                                                02090000
* IF NUMBER(STOKEN)>1 THEN               /* MULTI-STOKENS        @L1A*/ 02100000
*   DO;                                                                 02110000
*     ANS MSG('AHA0033 ''STOKEN'' SPECIFICATION TOO LONG, '!!           02120000
*             'NO TEXT IS GENERATED');                         /*@L1A*/ 02130000
*     /*    ON ERROR: MAKE INVOKING MACRO A COMMENT IN SOURCE CODE   */ 02140000
*     ANS('/* ' !! CMT !! ' */') COL(10) SKIP(2);              /*@L1A*/ 02150000
*     ANS ('@SPACE;') NORESCAN COL(MACLMAR);                   /*@L1A*/ 02160000
*     ANS ('/* AHA0033 ''STOKEN'' SPECIFICATION IS TOO LONG, '!!        02170000
*             'NO TEXT IS GENERATED; */') COL(10) SKIP;        /*@L1A*/ 02180000
*     GOTO LHA0100;                                                     02190000
*   END;                                                                02200000
*     /***************************************************************/ 02210000
*     /* GENERATE PC LINKAGE TO LOCASCB STOKEN= SERVICE ROUTINE      */ 02220000
*     /***************************************************************/ 02230000
* ANS('DO; ' !! COMMENT(CMT) ) COL(MACCOL);     /* GENERATE DO   @L1A*/ 02240000
* ANS('RFY (GPR00F,GPR01F,GPR14P,GPR15F) RSTD;  /* RESTRICT '!!         02250000
*     'REGISTERS USED BY LOCASCB */') COL(MACCOL+2);           /*@L1A*/ 02260000
* ANS('GPR01P=ADDR('!!STOKEN(1)!!                                       02270000
*      ');  /* PUT PTR TO STOKEN INTO REG 1 */')                        02280000
*      COL(MACCOL+2);                                          /*@L1A*/ 02290000
* ANS('GPR14F=XM@('!!IVSFTINDEX!!');') COL(MACLMAR);                    02300000
* ANS(COMMENT(' GET LX/EX FOR LOCASCB FROM SFT'));             /*@L1A*/ 02310000
* DCL ASABEGIN_CKARS CHAR EXT;                                /* @P2A*/ 02311000
* IF ASABEGIN_CKARS = 'YES' THEN                              /* @P2A*/ 02312000
* DO;                                                         /* @P2A*/ 02313000
*   ANS('@enable check(integrity(Push));')                              02314000
*     SKIP COL(MACCOL+2) NORESCAN;                            /* @P2A*/ 02315001
*   ANS('@disable check(integrity(NoARs));')                            02316000
*     SKIP COL(MACCOL+2) NORESCAN;                            /* @P2A*/ 02317001
* END;                                                        /* @P2A*/ 02318000
* ANS('SAR (GPR01P,ALET(' !! STOKEN(1) !! ')) ; '!!                     02320000
*      COMMENT('SET ACCESS REGISTER 1'))                                02330000
*      COL(MACCOL+2) ;                                         /*@L1A*/ 02340000
* IF ASABEGIN_CKARS = 'YES' THEN                              /* @P2A*/ 02341000
* DO;                                                         /* @P2A*/ 02342000
*   ANS('@enable check(integrity(Pop));')                               02343000
*     SKIP COL(MACCOL+2) NORESCAN;                            /* @P2A*/ 02344001
* END;                                                        /* @P2A*/ 02345000
* ANS('PC(GPR14F);') COL(MACLMAR);                                      02350000
* ANS(COMMENT(' PC TO THE LOCASCB SERVICE ROUTINE'));          /*@L1A*/ 02360000
*                                                                       02370000
*/********************************************************************/ 02380000
*/*    GENERATE REGISTER RESPECIFY AND "END" FOR DO                  */ 02390000
*/********************************************************************/ 02400000
* ANS('RFY (GPR00F,GPR01F,GPR14P,GPR15F) UNRSTD; '!!                    02410000
*     '/* UNRESTRICT REGISTERS USED BY LOCASCB */')                     02420000
*     COL(MACCOL+2);                                           /*@L1A*/ 02430000
* ANS('END; '!!COMMENT(CMT)) COL(MACCOL);                      /*@L1A*/ 02440000
* /*****************************************************************/   02450000
* /*   ENSURE CROSS-MEMORY VARIABLES ARE DEFINED                   */   02460000
* /*****************************************************************/   02470000
*   IF INDEX(EHAREGS,'01P')=0 THEN                                      02480000
*     EHAREGS=EHAREGS!!'01P';                                  /*@L1A*/ 02490000
*   IF INDEX(EHAREGS,'14F')=0 THEN                                      02500000
*     EHAREGS=EHAREGS!!'14F';                                  /*@L1A*/ 02510000
*   IF INDEX(EHAMAPS,'XM@')=0 THEN                                      02520000
*     EHAMAPS=EHAMAPS!!'XM@,';                                 /*@L1A*/ 02530000
*     /***************************************************************/ 02540000
*     /*    END SPACE TOKEN PROCESSING                               */ 02550000
*     /***************************************************************/ 02560000
*   END;                                                       /*@L1A*/ 02570000
*                                                                       02580000
* ELSE IF NUMBER(ASID)>0 THEN                                           02590000
*   DO;                                                        /*@L1C*/ 02600000
*     /***************************************************************/ 02610000
*     /*    PROCESS ASID KEYWORD OPTION                              */ 02620000
*     /***************************************************************/ 02630000
*                                                                       02640000
* IF NUMBER(ASID)>1 THEN               /* MORE THAN ONE ASID         */ 02650000
*   DO;                                                                 02660000
*     ANS MSG('AHA0033 ''ASID'' SPECIFICATION IS TOO LONG, '!!          02670000
*             'NO TEXT IS GENERATED');                                  02680000
*     /*    ON ERROR: MAKE INVOKING MACRO A COMMENT IN SOURCE CODE   */ 02690000
*     ANS('/* ' !! CMT !! ' */') COL(10) SKIP(2);              /*@L1A*/ 02700000
*     ANS ('@SPACE;') NORESCAN COL(MACLMAR);                   /*@L1A*/ 02710000
*     ANS ('/* AHA0033 ''ASID'' SPECIFICATION IS TOO LONG, '!!          02720000
*             'NO TEXT IS GENERATED; */') COL(10) SKIP;        /*@L1A*/ 02730000
*     GOTO LHA0100;                                                     02740000
*   END;                                                                02750000
*/********************************************************************/ 02760000
*/*    GENERATE BALR LINKAGE TO LOCASCB ASID= SERVICE ROUTINE        */ 02770000
*/********************************************************************/ 02780000
* ANS('DO; ' !! COMMENT(CMT) ) COL(MACCOL);     /* GENERATE DO   @L1A*/ 02790000
* ANS('RFY (GPR00F,GPR01F,GPR15P) RSTD;  /* RESTRICT '!!                02800000
*     'REGISTERS USED BY LOCASCB */') COL(MACCOL+2);      /*     @L3C*/ 02810000
*                                                                       02820000
*/********************************************************************/ 02830000
*/*    GENERATE CALLING CODE FOR SERVICE ROUTINE                     */ 02840000
*/********************************************************************/ 02850000
* ANS('GPR01F='!!ASID(1)!!';  /* PUT ASID INTO REG 1 */')               02860000
*      COL(MACCOL+2);                                                   02870000
*  ANS('GPR15P=FLCCVT->IARR31P(1+868/4)->IARR31P(1+164/4);' !!          02880000
*      COMMENT('LOCASCB EPA '))                                         02890000
*      COL(MACCOL+2) NORESCAN SKIP(1);                    /*     @P1C*/ 02900000
* IF SYSAM64 = 'YES' THEN                                               02910000
* ANS('CALL GPR15P->I31ANY; '!!                                         02920000
*      COMMENT('ENTER LOCASCB ROUTINE '))                               02930000
*      COL(MACCOL+2) NORESCAN SKIP(1);                    /*     @L2C*/ 02940000
* ELSE                                                                  02950000
* ANS('CALL GPR15P->IANY24; '!!                                         02960000
*      COMMENT('ENTER LOCASCB ROUTINE '))                               02970000
*      COL(MACCOL+2) NORESCAN SKIP(1);                    /*     @L2C*/ 02980000
*                                                                       02990000
*/********************************************************************/ 03000000
*/*    GENERATE REGISTER RESPECIFY AND "END" FOR DO                  */ 03010000
*/********************************************************************/ 03020000
* ANS('RFY (GPR00F,GPR01F,GPR15P) UNRSTD; '!!                           03030000
*     '/* UNRESTRICT REGISTERS USED BY LOCASCB */') COL(MACCOL+2); /*   03040000
*                                                                @L3C*/ 03050000
* ANS('END; '!!COMMENT(CMT)) COL(MACCOL);                      /*@L1A*/ 03060000
*     /***************************************************************/ 03070000
*     /*    END ASID PROCESSING                                      */ 03080000
*     /***************************************************************/ 03090000
*   END;                                                                03100000
*                                                                       03110000
* ELSE                                                                  03120000
*   DO;                                                        /*@L1A*/ 03130000
*     /***************************************************************/ 03140000
*     /*    REQUIRED PARAMETER MISSING                               */ 03150000
*     /***************************************************************/ 03160000
*     ANS MSG('AHA0001 ''ASID'' OR ''STOKEN'' OPERAND REQUIRED,'!!      03170000
*             ' NOT SPECIFIED. NO TEXT IS GENERATED');         /*@L1C*/ 03180000
*     /*    ON ERROR: MAKE INVOKING MACRO A COMMENT IN SOURCE CODE   */ 03190000
*     ANS('/* ' !! CMT !! ' */') COL(10) SKIP(2);              /*@L1A*/ 03200000
*     ANS ('@SPACE;') NORESCAN COL(MACLMAR);                   /*@L1A*/ 03210000
*     ANS ('/* AHA0001 ''ASID'' OR ''STOKEN'' OPERAND REQUIRED,'!!      03220000
*        ' NOT SPECIFIED. NO TEXT IS GENERATED; */')           /*@L1A*/ 03230000
*        COL(10) SKIP;                                                  03240000
*     GOTO LHA0100;                                                     03250000
*   END;                                                                03260000
*                                                                       03270000
*                                                                       03280000
* IF INDEX(EHAREGS,'00F')=0 THEN                                        03290000
*   EHAREGS=EHAREGS!!'00F';                                             03300000
* IF INDEX(EHAREGS,'01F')=0 THEN                                        03310000
*   EHAREGS=EHAREGS!!'01F';                                             03320000
* IF INDEX(EHAREGS,'14P')=0 THEN                                        03330000
*   EHAREGS=EHAREGS!!'14P';                                             03340000
* IF INDEX(EHAREGS,'15F')=0 THEN                                        03350000
*   EHAREGS=EHAREGS!!'15F';                               /* @ZA52270*/ 03360000
* IF INDEX(EHAREGS,'15P')=0 THEN                          /*     @L2A*/ 03370000
*   EHAREGS=EHAREGS!!'15P';                               /*     @L2A*/ 03380000
*                                                                       03390000
* RC=0;                                                                 03400000
*                                                                       03410000
*LHA0100:                                                               03420000
* RETURN CODE(RC);                                                      03430000
* % END LOCASCB;                                                        03440000
