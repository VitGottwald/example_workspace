*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IARR2V                                -06/28/19-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Convert RSA to VSA                            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1994, 2019                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77C0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      Convert an input real storage address to a virtual storage     * 00002100
*      address, ASID, and STOKEN.                                     * 00002200
*                                                                     * 00002300
*                                                                     * 00002400
*      o   If the input real storage address is contained in a real   * 00002500
*          storage frame that backs a single page, the ASID will      * 00002600
*          indicate the address space that owns the frame (an ASID of * 00002700
*          X'FFFF' indicates that the frame backs a common area       * 00002800
*          page), and the STOKEN will indicate the address space or   * 00002900
*          data space that uses the frame.                            * 00003000
*                                                                     * 00003100
*      o   If the input real storage address is contained in a real   * 00003200
*          storage frame that backs multiple pages (i.e. backs a      * 00003300
*          shared page), a search is performed for the first virtual  * 00003400
*          address in the following list that is valid:               * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*          1.  Lowest fixed common area virtual address.              * 00003800
*                                                                     * 00003900
*          2.  Lowest fixed home address space virtual address.       * 00004000
*                                                                     * 00004100
*          3.  Lowest fixed data space virtual address for a data     * 00004200
*              space owned by the home address space.                 * 00004300
*                                                                     * 00004400
*          4.  Lowest DREF common area virtual address.               * 00004500
*                                                                     * 00004600
*          5.  Lowest DREF home address space virtual address.        * 00004700
*                                                                     * 00004800
*          6.  Lowest DREF data space virtual address for a data      * 00004900
*              space owned by the home address space.                 * 00005000
*                                                                     * 00005100
*          7.  Lowest pageable common area virtual address.           * 00005200
*                                                                     * 00005300
*          8.  Lowest pageable home address space virtual address.    * 00005400
*                                                                     * 00005500
*          9.  Lowest pageable data space virtual address for a data  * 00005600
*              space owned by the home address space.                 * 00005700
*                                                                     * 00005800
*          10. Lowest fixed primary address space virtual address.    * 00005900
*                                                                     * 00006000
*          11. Lowest DREF primary address space virtual address.     * 00006100
*                                                                     * 00006200
*          12. Lowest pageable primary address space virtual address. * 00006300
*                                                                     * 00006400
*          13. Lowest fixed data space virtual address for a data     * 00006500
*              space owned by the primary address space.              * 00006600
*                                                                     * 00006700
*          14. Lowest DREF data space virtual address for a data      * 00006800
*              space owned by the primary address space.              * 00006900
*                                                                     * 00007000
*          15. Lowest pageable data space virtual address for a data  * 00007100
*              space owned by the primary address space.              * 00007200
*                                                                     * 00007300
*          16. Lowest fixed secondary address space virtual address.  * 00007400
*                                                                     * 00007500
*          17. Lowest DREF secondary address space virtual address.   * 00007600
*                                                                     * 00007700
*          18. Lowest pageable secondary address space virtual        * 00007800
*              address.                                               * 00007900
*                                                                     * 00008000
*          19. Lowest fixed data space virtual address for a data     * 00008100
*              space owned by the secondary address space.            * 00008200
*                                                                     * 00008300
*          20. Lowest DREF data space virtual address for a data      * 00008400
*              space owned by the secondary address space.            * 00008500
*                                                                     * 00008600
*          21. Lowest pageable data space virtual address for a data  * 00008700
*              space owned by the secondary address space.            * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*          The ASID will indicate the address space that uses the     * 00009200
*          frame, and the STOKEN will indicate the address space or   * 00009300
*          data space that uses the frame.                            * 00009400
*                                                                     * 00009500
*      o   If the input real storage address is for a real storage    * 00009600
*          frame that backs high virtual shared page, a search is     * 00009700
*          performed in the following order to obtain the ASID which  * 00009800
*          has access to it (i.e. the address space which did a       * 00009900
*          ShareMemObj):                                              * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*          1.  Home address space                                     * 00010300
*                                                                     * 00010400
*          2.  Primary address space                                  * 00010500
*                                                                     * 00010600
*          3.  Secondary address space                                * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*          The first ASID and STOKEN of the address space which did   * 00011100
*          the ShareMemObj in above list will be returned to the      * 00011200
*          caller.                                                    * 00011300
*                                                                     * 00011400
*      o   In all other cases (the real storage frame does not back   * 00011500
*          any page, or backs a read-only nucleus page), a non-zero   * 00011600
*          return code and diagnostic reason code are issued.         * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00012100
*                                                                     * 00012200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00012300
*                                                                     * 00012400
*01* ENVIRONMENT:                                                     * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00012800
*                        key.                                         * 00012900
*                                                                     * 00013000
*      Dispatchable unit mode: Task, SRB, FLIH or DIE mode.           * 00013100
*                                                                     * 00013200
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00013300
*                                                                     * 00013400
*      AMODE:            24- or 31-bit.                               * 00013500
*                                                                     * 00013600
*      ASC mode:         Primary, Secondary, or Access Register.      * 00013700
*                                                                     * 00013800
*      Interrupt status: Enabled or disabled for I/O and external     * 00013900
*                        interrupts.                                  * 00014000
*                                                                     * 00014100
*      Locks:            No locks held, except the local lock and/or  * 00014200
*                        the CPU lock may be held.                    * 00014300
*                                                                     * 00014400
*      Control parameters: None.                                      * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*01* PROGRAMMING REQUIREMENTS:                                        * 00014900
*                                                                     * 00015000
*       None other than the interface requirements above.             * 00015100
*                                                                     * 00015200
*01* RESTRICTIONS:                                                    * 00015300
*                                                                     * 00015400
*       BRANCH linkage is restricted to supervisor state, key 0       * 00015500
*       callers.  If the caller is running in AR mode, the SYSSTATE   * 00015600
*       macro must be invoked specifying ASCENV(AR) before IARR2V     * 00015700
*       macro is issued.                                              * 00015800
*                                                                     * 00015900
*01* PERFORMANCE IMPLICATIONS:                                        * 00016000
*                                                                     * 00016100
*       None.                                                         * 00016200
*                                                                     * 00016300
*01* INPUT REGISTERS:  GR0-GR15    Undefined                          * 00016400
*                                                                     * 00016500
*  Before issuing the IARR2V macro, the caller does not have to place * 00016600
*  any information into any register unless using it in register      * 00016700
*  notation for a particular parameter, or using it as a base         * 00016800
*  register.                                                          * 00016900
*                                                                     * 00017000
*01* OUTPUT REGISTERS: GR0         ASID if return code is zero or     * 00017100
*                                  four, or reason code.              * 00017200
*                      GR1         Virtual storage address if return  * 00017300
*                                  code is zero or four.              * 00017400
*                      GR2-GR13    Unchanged.                         * 00017500
*                      GR14        Return address.                    * 00017600
*                      GR15        Return code.                       * 00017700
*                      AR0         First four bytes of STOKEN if      * 00017800
*                                  return code is zero or four.       * 00017900
*                      AR1         Last four bytes of STOKEN if       * 00018000
*                                  return code is zero or four.       * 00018100
*                      AR2-AR13    Unchanged.                         * 00018200
*                      AR14        Total shared view count if return  * 00018300
*                                  code is zero or four.              * 00018400
*                      AR15        Valid shared view count if return  * 00018500
*                                  code is zero or four.              * 00018600
*                                                                     * 00018700
*  Note: the ASID value will be 'FFFF' (hexadecimal) if the returned  * 00018800
*  address represents COMMON area storage.                            * 00018900
*                                                                     * 00019000
*  Access register 14 will contain the total number of interests in   * 00019100
*  the shared memory object including system interest if the real     * 00019200
*  address is for a high virtual shared page.                         * 00019300
*                                                                     * 00019400
*  Some callers depend on register contents remaining the same before * 00019500
*  and after issuing a service.  If the system changes the contents   * 00019600
*  of registers on which the caller depends, the caller must save     * 00019700
*  them before issuing the service, and restore them after the system * 00019800
*  returns control.                                                   * 00019900
*                                                                     * 00020000
*01* SYNTAX:                                                          * 00020100
*                                                                     * 00020200
*Ýxlabel¨  IARR2V  Ð  RSA=xrsa                                        * 00020300
*                  ¿ ,RSA64=xrsa64                                    * 00020400
*                  ÐÝ,VSA=Ýxvsa¨                                      * 00020500
*                  ¿ ,VSA64=Ýxvsa64¨¨                                 * 00020600
*                   Ý,ASID=xasid¨                                     * 00020700
*                   Ý,STOKEN=xstoken¨                                 * 00020800
*                   Ý,WORKREG=»xworkreg!NONEº                         * 00020900
*                       Ý,NUMVIEW=xnumview¨                           * 00021000
*                       Ý,NUMVALID=xnumvalid¨¨                        * 00021100
*                   Ý,LINKAGE=»SYSTEM!BRANCHº¨                        * 00021200
*                   Ý,RETCODE=xretcode¨                               * 00021300
*                   Ý,RSNCODE=xrsncode¨                               * 00021400
*                   Ý,COM=»xcom!NULLº¨                                * 00021500
*                   Ý,REM=»xrem!NULLº¨                                * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*      Where:                                                         * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*      Ýxlabel¨                                                       * 00022200
*          is an optional symbol, starting in column 1, that is the   * 00022300
*          name on the IARR2V macro invocation.  The name must        * 00022400
*          conform to the rules for an ordinary assembler language    * 00022500
*          symbol.                                                    * 00022600
*          DEFAULT: No name.                                          * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*      The following is a set of mutually exclusive keys.  This set   * 00023200
*      is required; only one key must be specified.                   * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*      RSA=xrsa                                                       * 00023600
*          belongs to a set of mutually exclusive keys. It is the     * 00023700
*          name (RS-type), or address in register (2)-(12), of a 4    * 00023800
*          byte input that contains the address (31-bit real storage  * 00023900
*          address) to be converted to a virtual storage address.     * 00024000
*                                                                     * 00024100
*      RSA64=xrsa64                                                   * 00024200
*          belongs to a set of mutually exclusive keys. It is the     * 00024300
*          name (RS-type), or address in register (2)-(12), of an 8   * 00024400
*          byte input that contains the address (64-bit real storage  * 00024500
*          address) to be converted to a virtual storage address. To  * 00024600
*          use this keyword, the SYSSTATE macro must be invoked       * 00024700
*          specifying ARCHLVL greater than 1.                         * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*      End of a set of mutually exclusive required keys.              * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*      The following is a set of mutually exclusive keys.  This set   * 00025600
*      is optional; only one key may be specified.                    * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*      ÝVSA=Ýxvsa¨                                                    * 00026000
*          belongs to a set of mutually exclusive keys. It is the     * 00026100
*          name (RS-type), or address in register (2)-(12), of an     * 00026200
*          optional 4 byte output that will contain the address       * 00026300
*          (virtual storage address) that maps to the input real      * 00026400
*          storage address.                                           * 00026500
*                                                                     * 00026600
*      VSA64=Ýxvsa64¨¨                                                * 00026700
*          belongs to a set of mutually exclusive keys. It is the     * 00026800
*          name (RS-type), or address in register (2)-(12), of an     * 00026900
*          optional 8 byte output that will contain the address       * 00027000
*          (64-bit virtual storage address) that maps to the input    * 00027100
*          real storage address. To use this keyword, the SYSSTATE    * 00027200
*          macro must be invoked specifying ARCHLVL greater than 1.   * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*      End of a set of mutually exclusive optional keys.              * 00027700
*      DEFAULT: VSA                                                   * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*      ÝASID=xasid¨                                                   * 00028200
*          is the name (RS-type), or address in register (2)-(12), of * 00028300
*          an optional fullword output that will contain the ASID of  * 00028400
*          the address space associated with the output virtual       * 00028500
*          storage address.  Bit 0 will be set to 1 if the input real * 00028600
*          storage address is contained in a frame that backs a       * 00028700
*          shared page, and will be set to 0 if the input real        * 00028800
*          storage address is contained in a frame that does not back * 00028900
*          a shared page.  Bit 1 will be set to 1 if the input real   * 00029000
*          storage address is contained in a frame that backs a       * 00029100
*          shared segment page, and will be set to 0 if the input     * 00029200
*          real storage address is contained in a frame that does not * 00029300
*          back a shared segment page.  Bit 2 will be set to 1 if the * 00029400
*          input real storage address is contained in a frame that    * 00029500
*          backs a high virtual shared page.  Bits 3-15 will always   * 00029600
*          be set to 0's.  Bits 16-31 will contain the 16-bit ASID.   * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*      ÝSTOKEN=xstoken¨                                               * 00030200
*          is the name (RS-type) of an optional 8 character output    * 00030300
*          that will contain the STOKEN for the address space or data * 00030400
*          space associated with the output virtual storage address.  * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*      ÝWORKREG=»xworkreg!NONEº                                       * 00031000
*          is an optional input.  It is the name (RS-type), or        * 00031100
*          address in register (2)-(12), that indicates a GR/AR pair  * 00031200
*          to be used as work registers if page sharing counts are to * 00031300
*          be returned.  If this keyword is not present on the macro  * 00031400
*          invocation, the page sharing counts will not be returned.  * 00031500
*          The GR/AR pair used as work registers must not be any of   * 00031600
*          the following: GR0/AR0, GR1/AR1, GR14/AR14, GR15/AR15.     * 00031700
*          DEFAULT: NONE                                              * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*          ÝNUMVIEW=xnumview¨                                         * 00032100
*              is the name (RS-type) of an optional fullword output   * 00032200
*              that will contain the number of page sharing views     * 00032300
*              associated with the input real storage address.  This  * 00032400
*              count will be non-zero only if bit 0 of the output     * 00032500
*              ASID is set to 1. If bit 2 of the output ASID is set   * 00032600
*              to 1, this field contains the total number of          * 00032700
*              interests in the shared memory object including the    * 00032800
*              system interest.                                       * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*          ÝNUMVALID=xnumvalid¨¨                                      * 00033400
*              is the name (RS-type) of an optional fullword output   * 00033500
*              that will contain the number of page sharing views     * 00033600
*              associated with the input real storage address that    * 00033700
*              are valid in real storage.  This count will be         * 00033800
*              non-zero only if bit 0 of the output ASID is set to 1. * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*      ÝLINKAGE=»SYSTEM!BRANCHº¨                                      * 00034600
*          is an optional keyword input that specifies whether the    * 00034700
*          real-to-virtual translation routine is invoked via a PC or * 00034800
*          via a direct branch.                                       * 00034900
*          DEFAULT: SYSTEM                                            * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*          LINKAGE=SYSTEM                                             * 00035300
*              specifies that the translation routine is invoked via  * 00035400
*              a PC.                                                  * 00035500
*                                                                     * 00035600
*          LINKAGE=BRANCH                                             * 00035700
*              specifies that the translation routine is invoked via  * 00035800
*              a direct branch (restricted to supervisor state key 0  * 00035900
*              callers).                                              * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*      ÝRETCODE=xretcode¨                                             * 00036700
*          is the name (RS-type) of an optional fullword output       * 00036800
*          variable, or register (2)-(12) or (15), into which the     * 00036900
*          return code is to be copied from GPR 15.  If you specify   * 00037000
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00037100
*          the value will be left in GPR 15.                          * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*      ÝRSNCODE=xrsncode¨                                             * 00037700
*          is the name (RS-type) of an optional 4 character output    * 00037800
*          variable into which the reason code is to be copied from   * 00037900
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00038000
*          R0 (within or without parentheses), the value will be left * 00038100
*          in GPR 0.                                                  * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*      ÝCOM=»xcom!NULLº¨                                              * 00038700
*          is an optional character input  that will appear in the    * 00038800
*          block comment before the macro invocation echo. It can be  * 00038900
*          used to comment the macro invocation.  The comment string  * 00039000
*          must be enclosed in quotes if it contains any lower case   * 00039100
*          characters.                                                * 00039200
*          DEFAULT: NULL                                              * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*      ÝREM=»xrem!NULLº¨                                              * 00039800
*          is an optional character input  that will appear in the    * 00039900
*          block comment with the macro invocation echo. It can be    * 00040000
*          used to comment the macro invocation. The remark string    * 00040100
*          must be enclosed in quotes if it contains any lower case   * 00040200
*          characters.                                                * 00040300
*          DEFAULT: NULL                                              * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*                                                                     * 00040700
*01* RETURN CODES:                                                    * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*       00        Successful completion.  The input real storage      * 00041100
*                 address translated to an address space virtual      * 00041200
*                 address.  Register 0 contains the ASID of the       * 00041300
*                 address space that owns the real storage frame (if  * 00041400
*                 the address space page is part of a page sharing    * 00041500
*                 group, bit 0 of register 0 is set to 1. If the page * 00041600
*                 is a high virtual shared page, bit 2 of register 0  * 00041700
*                 is set to 1.)                                       * 00041800
*                                                                     * 00041900
*       04        Successful completion.  The input real storage      * 00042000
*                 address translated to a data space virtual address. * 00042100
*                 Register 0 contains the ASID of the address space   * 00042200
*                 that owns the data space that owns the real storage * 00042300
*                 frame (if the data space page is part of a page     * 00042400
*                 sharing group, bit 0 of register 0 is set to 1).    * 00042500
*                                                                     * 00042600
*       08        Unsuccessful completion.                            * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*01* REASON CODES:                                                    * 00043100
*                                                                     * 00043200
*       REASON    RETURN                                              * 00043300
*       CODE      CODE      DESCRIPTION                               * 00043400
*       --------  --------  -----------                               * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*       xx0001xx  08        The input real storage address is not     * 00043800
*                           within the bounds of real storage.        * 00043900
*                                                                     * 00044000
*       xx0002xx  08        The frame corresponding to the input real * 00044100
*                           storage address is not assigned to a      * 00044200
*                           page.                                     * 00044300
*                                                                     * 00044400
*       xx0003xx  08        The frame corresponding to the input real * 00044500
*                           storage address contains shared data but  * 00044600
*                           no virtual address for any accessible     * 00044700
*                           address space (either home, primary, or   * 00044800
*                           secondary) maps to it.                    * 00044900
*                                                                     * 00045000
*       xx0004xx  08        IARR2V service was recursively invoked.   * 00045100
*                                                                     * 00045200
*       xx0005xx  08        The frame corresponding to the input real * 00045300
*                           storage address is assigned to a data     * 00045400
*                           space, but the data space STOKEN could    * 00045500
*                           not be found.                             * 00045600
*                                                                     * 00045700
*       xx0006xx  08        The mapped virtual address is above 2G,   * 00045800
*                           but the caller only provided a 4-byte     * 00045900
*                           output VSA. VSA64 should be provided      * 00046000
*                           instead.                                  * 00046100
*                                                                     * 00046200
*       xx0007xx  08        The frame corresponding to the input real * 00046300
*                           storage is used to back a high virtual    * 00046400
*                           shared page but the address space does    * 00046500
*                           not have access to it (none of its home,  * 00046600
*                           primary, or secondary address space did   * 00046700
*                           the ShareMemObj).                         * 00046800
*                                                                     * 00046900
*       xx0008xx  08        The frame corresponding to the input real * 00047000
*                           storage cannot be translated because the  * 00047100
*                           invoker holds the RSM lock or a lock      * 00047200
*                           higher in the locking hierarchy.          * 00047300
*                                                                     * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00047700
*                                                                     * 00047800
*02*   PROCESSOR:  ASSEM                                              * 00047900
*                                                                     * 00048000
*01* COMPONENT:  SC1CR                                                * 00048100
*                                                                     * 00048200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00048300
*                                                                     * 00048400
*01* MACRO USAGE NOTES:                                               * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00048800
*        global macro variable.  Any value other than 'NO' will       * 00048900
*        result in the macro expansion being printed.  The default is * 00049000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00049100
*        variable should be set.                                      * 00049200
*                                                                     * 00049300
*                    GBLC &ZPRINT                                     * 00049400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*                                                                     * 00049800
*01* CHANGE ACTIVITY:                                                 * 00049900
*                                                                     * 00050000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00050100
*                                                                     * 00050200
*    $L0=CAPTU3J@ HBB5520 931212 PD00KI:  Shared Data support.        * 00050300
*    $P1=PN71216  HBB5520 940728 PD00KI:  Shared Data support.        * 00050400
*    $01=OW19167  HBB5520 960417 PD00CS:  Common area view support.   * 00050500
*    $P2=PVT0162  HBB6606 971208 PD00HL:  PLX version of the macro    * 00050600
*                                         does not return the VSA     * 00050700
*                                         correctly.                  * 00050800
*    $L1=64BIT    HBB7703 981220 PD002D:  64-Bit Interface Changes.   * 00050900
*    $L2=64BIT    HBB7705 000410 PD002D:  64-Bit Virtual Support.     * 00051000
*    $P3=PX00710  HBB7705 001017 PD002D:  Fix checking for VSA.       * 00051100
*    $P4=PX00876  HBB7705 001113 PD002D:  Fix specification for       * 00051200
*                                         VSA64.                      * 00051300
*    $P5=PX00948  HBB7705 001121 PD002D:  Support AR mode for         * 00051400
*                                         Linkage(Branch).            * 00051500
*    $01=OW50975  HBB7703 011031 PD00SE:  Fix Register Restrictions.  * 00051600
*    $P6=PYN1013  HBB7708 021031 PD002D:  High virtual shared         * 00051700
*                                         support.                    * 00051800
*    $L3=PEV      HBB7730 050414 PD00XB:  Avoid assembler low-storage * 00051900
*                                         message                     * 00052000
*    $P7=OA27125  HBB7760 090206 PD00VE:  Correct saving of VSA       * 00052100
*                                         address.                    * 00052200
*    $L4=RMODE64  HBB7780 091101 PD00XB:  RMODE 64                    * 00052300
*    $L5=LRGPGSUP JBB778H 111024 PD00OH:  Ensure service can be       * 00052400
*                                         called in AMODE 64.         * 00052500
*    $P8=WI315868 HBB77C0 190530 PD00CS:  Added reason code for       * 00052600
*                                         locking (OA57695)           * 00052700
****** END OF SPECIFICATIONS *****************************************/ 00052800
*/********************************************************************* 00052900
         MACRO                                                          00053000
&XLABEL  IARR2V &RSA=,&RSA64=,&VSA=,&VSA64=,&ASID=,&STOKEN=,&WORKREG=, *00053100
               &NUMVIEW=,&NUMVALID=,&LINKAGE=,&RETCODE=,&RSNCODE=,     *00053200
               &COM=,&REM=                                              00053300
.*                                                                      00053400
*              MACDATE -06/28/19-<0>                                    00053500
.*                                                                      00053600
.*******************************************************************    00053700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00053800
.*******************************************************************    00053900
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00054000
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00054100
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00054200
.*                                                                      00054300
              GBLC  &ZIARR2V    YES=MACRO USED AT LEAST ONCE            00054400
.*******************************************************************    00054500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00054600
.*******************************************************************    00054700
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00054800
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00054900
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00055000
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00055100
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00055200
              LCLA  &ZAWRK      USED AS A WORK AREA                     00055300
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00055400
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00055500
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00055600
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00055700
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00055800
              LCLC  &ZMAC_G     "G" or null                             00055900
&ZMAC_G       SETC  ''                                                  00056000
              LCLC  &ZMAC_LR                                            00056100
&ZMAC_LR      SETC  'LR'                                                00056200
              LCLC  &ZMAC_L                                             00056300
&ZMAC_L       SETC  'L'                                                 00056400
              LCLC  &ZMAC_ST                                            00056500
&ZMAC_ST      SETC  'ST'                                                00056600
              LCLC  &ZMAC_LLGT                                          00056700
&ZMAC_LLGT    SETC  'L'                                                 00056800
              LCLC  &ZMAC_LGR                                           00056900
&ZMAC_LGR     SETC  'LR'                                                00057000
              LCLC  &ZMAC_LG                                            00057100
&ZMAC_LG      SETC  'L'                                                 00057200
              LCLC  &ZMAC_STG                                           00057300
&ZMAC_STG     SETC  'ST'                                                00057400
              LCLA  &ZMACRET    MACRO RETURN CODE                       00057500
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00057600
.*                                                                      00057700
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00057800
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00057900
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00058000
              LCLC  &ZENDBASEPL                 End of base PL          00058100
.*******************************************************************    00058200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00058300
.*******************************************************************    00058400
              LCLA  &ZI         INDEX FOR ARRAY                         00058500
              LCLA  &ZJ         INDEX FOR PARMS                         00058600
              LCLA  &ZK         INDEX FOR PARSE                         00058700
              LCLA  &ZLO        LOW RANGE VALUE                         00058800
              LCLA  &ZHI        HIGH RANGE VALUE                        00058900
              LCLC  &ZW         WORK AREA FOR PARM                      00059000
.*******************************************************************    00059100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00059200
.*******************************************************************    00059300
              LCLC  &XDUMMY1    ++ NAME                                 00059400
              LCLC  &XRSA       ++ NAME                                 00059500
              LCLC  &XRSA64     ++ NAME                                 00059600
              LCLC  &XDUMMY2    ++ NAME                                 00059700
              LCLC  &XVSA       ++ NAME                                 00059800
              LCLC  &XVSA64     ++ NAME                                 00059900
              LCLC  &XASID      ++ NAME                                 00060000
              LCLC  &XSTOKEN    ++ NAME                                 00060100
              LCLC  &XWORKREG   ++ NAME                                 00060200
              LCLC  &XNUMVIEW   ++ NAME                                 00060300
              LCLC  &XNUMVALID  ++ NAME                                 00060400
              LCLC  &XLINKAGE   ++ VALUE                                00060500
              LCLC  &XRETCODE   ++ NAME                                 00060600
              LCLC  &XRSNCODE   ++ NAME                                 00060700
              LCLC  &XCOM       ++ VALUE                                00060800
              LCLC  &XREM       ++ VALUE                                00060900
.*******************************************************************    00061000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00061100
.*******************************************************************    00061200
              LCLC  &ZXDUMMY1   ++ INPUT NAME                           00061300
              LCLC  &ZXRSA      ++ INPUT NAME                           00061400
              LCLC  &ZXRSA64    ++ INPUT NAME                           00061500
              LCLC  &ZXDUMMY2   ++ OUTPUT NAME                          00061600
              LCLC  &ZXVSA      ++ OUTPUT NAME                          00061700
              LCLC  &ZXVSA64    ++ OUTPUT NAME                          00061800
              LCLC  &ZXASID     ++ OUTPUT NAME                          00061900
              LCLC  &ZXSTOKEN   ++ OUTPUT NAME                          00062000
              LCLC  &ZXWORKREG  ++ INPUT NAME                           00062100
              LCLC  &ZXNUMVIEW  ++ OUTPUT NAME                          00062200
              LCLC  &ZXNUMVALID                 ++ OUTPUT NAME          00062300
              LCLC  &ZXLINKAGE  ++ INPUT VALUE                          00062400
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00062500
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00062600
              LCLC  &ZXCOM      ++ INPUT VALUE                          00062700
              LCLC  &ZXREM      ++ INPUT VALUE                          00062800
.********************************************************************   00062900
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00063000
.********************************************************************   00063100
              ACTR  10000                                               00063200
.*----------------------------------------------------------------***   00063300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00063400
&XDUMMY1      SETC  ''          INITIALIZE XVARIABLE                    00063500
              AIF   (K'&RSA LE 0).ZG2C                                  00063600
&ZXDUMMY1     SETC  'INPUT'     SET IN/OUTPUT                           00063700
&XDUMMY1      SETC  'RSA'       SET XVARIABLE                           00063800
&ZXRSA        SETC  'INPUT'     SET IN/OUTPUT                           00063900
&XRSA         SETC  '&RSA(1)'   SET XVARIABLE PARM                      00064000
              AIF   (N'&RSA GT 1).ZG2A                                  00064100
&XRSA         SETC  '&RSA'      SET XVARIABLE PARM                      00064200
.ZG2A         AIF   (N'&RSA LE 1).ZG2B          CK NUM                  00064300
&ZMS          SETC  '"RSA='                                             00064400
&ZMS          SETC  '&ZMS.&RSA"'                                        00064500
&ZMS          SETC  '&ZMS "RSA"'                                        00064600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00064700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064800
.ZG2B         AIF   (K'&XRSA GT 0).ZG2C         ONE PARM                00064900
&ZXDUMMY1     SETC  ''          RESET IN/OUTPUT                         00065000
&ZXRSA        SETC  ''          RESET IN/OUTPUT                         00065100
&ZMS          SETC  ' '                                                 00065200
&ZMS          SETC  '&ZMS "RSA" KEY AND ITS'                            00065300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00065400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065500
.ZG2C         ANOP  ,                                                   00065600
.*----------------------------------------------------------------***   00065700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00065800
              AIF   (K'&RSA64 LE 0).ZG3D        NO ME KEY               00065900
              AIF   (N'&RSA64 LE 1).ZG3A        CK NUM                  00066000
&ZMS          SETC  '"RSA64='                                           00066100
&ZMS          SETC  '&ZMS.&RSA64"'                                      00066200
&ZMS          SETC  '&ZMS "RSA64"'                                      00066300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00066400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066500
.ZG3A         AIF   (K'&XDUMMY1 LE 0).ZG3B                              00066600
&ZMS          SETC  '"RSA64'                                            00066700
&ZMS          SETC  '&ZMS.=&RSA64"'                                     00066800
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00066900
&ZMS          SETC  '&ZMS "&XDUMMY1"'                                   00067000
              MNOTE 8,' &ZMS KEY.'                                      00067100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067200
              AGO   .ZG3D                                               00067300
.*                                                                      00067400
.ZG3B         ANOP  ,                                                   00067500
&ZXDUMMY1     SETC  'INPUT'     SET IN/OUTPUT                           00067600
&XDUMMY1      SETC  'RSA64'     SET XVARIABLE                           00067700
&ZXRSA64      SETC  'INPUT'     SET IN/OUTPUT                           00067800
&XRSA64       SETC  '&RSA64(1)'                 SET XVARIABLE PARM      00067900
              AIF   (N'&RSA64 GT 1).ZG3C                                00068000
&XRSA64       SETC  '&RSA64'    SET XVARIABLE PARM                      00068100
.ZG3C         AIF   (K'&XRSA64 GT 0).ZG3D       ONE PARM                00068200
&ZXDUMMY1     SETC  ''          RESET IN/OUTPUT                         00068300
&ZXRSA64      SETC  ''          RESET IN/OUTPUT                         00068400
&ZMS          SETC  ' '                                                 00068500
&ZMS          SETC  '&ZMS "RSA64" KEY AND ITS'                          00068600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00068700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068800
.ZG3D         ANOP  ,                                                   00068900
.*------------------------------------------------------------------    00069000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00069100
              AIF   (K'&XDUMMY1 GT 0).ZG4B                              00069200
&ZXDUMMY1     SETC  ''          RESET IN/OUTPUT                         00069300
&ZXRSA        SETC  ''          RESET IN/OUTPUT                         00069400
&XDUMMY1      SETC  ''          ENSURE NULL                             00069500
&XRSA         SETC  ''          ENSURE NULL                             00069600
&ZMS          SETC  'ONE OF THE FOLLOWING'                              00069700
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00069800
&ZMS          SETC  '&ZMS REQUIRED:'                                    00069900
&ZMS          SETC  '&ZMS "RSA"'                VALID ME KEY            00070000
&ZMS          SETC  '&ZMS OR "RSA64".'          VALID ME KEY            00070100
              MNOTE 8,' &ZMS '                                          00070200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070300
.ZG4B         ANOP  ,                                                   00070400
.*-------------------------------------------------------------------   00070500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00070600
.ZG2ZY  AIF    ('&XDUMMY1' NE 'RSA').ZG3ZY                              00070700
.*-------------------------------------------------------------------   00070800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00070900
              AIF   (K'&ZXRSA LE 0).ZG2R        NOT I/O                 00071000
              AIF   ('&XRSA'(1,1) NE '(').ZG2R                          00071100
&ZCGPR        SETC  '&XRSA'(2,K'&XRSA-2)                                00071200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00071300
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00071400
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00071500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00071600
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00071700
.ZG2P         ANOP  ,                                                   00071800
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00071900
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00072000
              AIF   ('&ZCGPR' LE '12').ZG2R                             00072100
.ZG2Q         ANOP  ,                                                   00072200
&ZMS          SETC  '"RSA='                                             00072300
&ZMS          SETC  '&ZMS.&RSA"'                                        00072400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00072500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00072600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072700
.ZG2R         ANOP  ,                                                   00072800
.*-------------------------------------------------------------------   00072900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00073000
.ZG3ZY  AIF    ('&XDUMMY1' NE 'RSA64').ZG4ZY                            00073100
.*-------------------------------------------------------------------   00073200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00073300
              AIF   (K'&ZXRSA64 LE 0).ZG3R      NOT I/O                 00073400
              AIF   ('&XRSA64'(1,1) NE '(').ZG3R                        00073500
&ZCGPR        SETC  '&XRSA64'(2,K'&XRSA64-2)                            00073600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                         00073700
              AIF   (K'&ZCGPR GT 2).ZG3Q                                00073800
              AIF   ('&ZCGPR' EQ '0').ZG3Q                              00073900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00074000
              AIF   (T'&ZCGPR NE 'N').ZG3Q      INVALID REG NAME        00074100
.ZG3P         ANOP  ,                                                   00074200
              AIF   (T'&ZCGPR NE 'N').ZG3R      NON NUMERIC             00074300
              AIF   ('&ZCGPR' LT '2').ZG3Q                              00074400
              AIF   ('&ZCGPR' LE '12').ZG3R                             00074500
.ZG3Q         ANOP  ,                                                   00074600
&ZMS          SETC  '"RSA64='                                           00074700
&ZMS          SETC  '&ZMS.&RSA64"'                                      00074800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00074900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00075000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075100
.ZG3R         ANOP  ,                                                   00075200
.*-------------------------------------------------------------------   00075300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00075400
.ZG4ZY        ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00075500
.*----------------------------------------------------------------***   00075600
.***AG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00075700
&XDUMMY2      SETC  ''          INITIALIZE XVARIABLE                    00075800
              AIF   (K'&VSA LE 0).ZG6C                                  00075900
&ZXDUMMY2     SETC  'OUTPUT'    SET IN/OUTPUT                           00076000
&XDUMMY2      SETC  'VSA'       SET XVARIABLE                           00076100
&ZXVSA        SETC  'OUTPUT'    SET IN/OUTPUT                           00076200
&XVSA         SETC  '&VSA(1)'   SET XVARIABLE PARM                      00076300
              AIF   (N'&VSA GT 1).ZG6A                                  00076400
&XVSA         SETC  '&VSA'      SET XVARIABLE PARM                      00076500
.ZG6A         AIF   (N'&VSA LE 1).ZG6B          CK NUM                  00076600
&ZMS          SETC  '"VSA='                                             00076700
&ZMS          SETC  '&ZMS.&VSA"'                                        00076800
&ZMS          SETC  '&ZMS "VSA"'                                        00076900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00077000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077100
.ZG6B         AIF   (K'&XVSA GT 0).ZG6C         ONE PARM                00077200
&ZXDUMMY2     SETC  ''          RESET IN/OUTPUT                         00077300
&ZXVSA        SETC  ''          RESET IN/OUTPUT                         00077400
&ZMS          SETC  ' '                                                 00077500
&ZMS          SETC  '&ZMS "VSA" KEY AND ITS'                            00077600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00077700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077800
.ZG6C         ANOP  ,                                                   00077900
.*----------------------------------------------------------------***   00078000
.***AG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00078100
              AIF   (K'&VSA64 LE 0).ZG7D        NO ME KEY               00078200
              AIF   (N'&VSA64 LE 1).ZG7A        CK NUM                  00078300
&ZMS          SETC  '"VSA64='                                           00078400
&ZMS          SETC  '&ZMS.&VSA64"'                                      00078500
&ZMS          SETC  '&ZMS "VSA64"'                                      00078600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00078700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078800
.ZG7A         AIF   (K'&XDUMMY2 LE 0).ZG7B                              00078900
&ZMS          SETC  '"VSA64'                                            00079000
&ZMS          SETC  '&ZMS.=&VSA64"'                                     00079100
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00079200
&ZMS          SETC  '&ZMS "&XDUMMY2"'                                   00079300
              MNOTE 8,' &ZMS KEY.'                                      00079400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079500
              AGO   .ZG7D                                               00079600
.*                                                                      00079700
.ZG7B         ANOP  ,                                                   00079800
&ZXDUMMY2     SETC  'OUTPUT'    SET IN/OUTPUT                           00079900
&XDUMMY2      SETC  'VSA64'     SET XVARIABLE                           00080000
&ZXVSA64      SETC  'OUTPUT'    SET IN/OUTPUT                           00080100
&XVSA64       SETC  '&VSA64(1)'                 SET XVARIABLE PARM      00080200
              AIF   (N'&VSA64 GT 1).ZG7C                                00080300
&XVSA64       SETC  '&VSA64'    SET XVARIABLE PARM                      00080400
.ZG7C         AIF   (K'&XVSA64 GT 0).ZG7D       ONE PARM                00080500
&ZXDUMMY2     SETC  ''          RESET IN/OUTPUT                         00080600
&ZXVSA64      SETC  ''          RESET IN/OUTPUT                         00080700
&ZMS          SETC  ' '                                                 00080800
&ZMS          SETC  '&ZMS "VSA64" KEY AND ITS'                          00080900
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00081000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081100
.ZG7D         ANOP  ,                                                   00081200
.*------------------------------------------------------------------    00081300
.***AG.KMEKY08 NAME, OPT OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00081400
              AIF   (K'&XDUMMY2 GT 0).ZG8B                              00081500
&ZXDUMMY2     SETC  ''          RESET IN/OUTPUT                         00081600
&XDUMMY2      SETC  'VSA'       SET DEFAULT                             00081700
.ZG8B         ANOP  ,                                                   00081800
.*-------------------------------------------------------------------   00081900
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00082000
              AIF   (K'&ZXVSA64 LE 0).ZG8R      NOT I/O                 00082100
              AIF   ('&XVSA64'(1,1) NE '(').ZG8R                        00082200
&ZCGPR        SETC  '&XVSA64'(2,K'&XVSA64-2)                            00082300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00082400
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00082500
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00082600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00082700
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00082800
.ZG8P         ANOP  ,                                                   00082900
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00083000
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00083100
              AIF   ('&ZCGPR' LE '12').ZG8R                             00083200
.ZG8Q         ANOP  ,                                                   00083300
&ZMS          SETC  '"VSA64='                                           00083400
&ZMS          SETC  '&ZMS.&VSA64"'                                      00083500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00083600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00083700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00083800
.ZG8R         ANOP  ,                                                   00083900
.*-------------------------------------------------------------------   00084000
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00084100
.ZG6ZY  AIF    ('&XDUMMY2' NE 'VSA').ZG7ZY                              00084200
.*-------------------------------------------------------------------   00084300
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00084400
              AIF   (K'&ZXVSA LE 0).ZG6R        NOT I/O                 00084500
              AIF   ('&XVSA'(1,1) NE '(').ZG6R                          00084600
&ZCGPR        SETC  '&XVSA'(2,K'&XVSA-2)                                00084700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                         00084800
              AIF   (K'&ZCGPR GT 2).ZG6Q                                00084900
              AIF   ('&ZCGPR' EQ '0').ZG6Q                              00085000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00085100
              AIF   (T'&ZCGPR NE 'N').ZG6Q      INVALID REG NAME        00085200
.ZG6P         ANOP  ,                                                   00085300
              AIF   (T'&ZCGPR NE 'N').ZG6R      NON NUMERIC             00085400
              AIF   ('&ZCGPR' LT '2').ZG6Q                              00085500
              AIF   ('&ZCGPR' LE '12').ZG6R                             00085600
.ZG6Q         ANOP  ,                                                   00085700
&ZMS          SETC  '"VSA='                                             00085800
&ZMS          SETC  '&ZMS.&VSA"'                                        00085900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00086000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00086100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086200
.ZG6R         ANOP  ,                                                   00086300
.*-------------------------------------------------------------------   00086400
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00086500
.ZG7ZY  AIF    ('&XDUMMY2' NE 'VSA64').ZG8ZY                            00086600
.*-------------------------------------------------------------------   00086700
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00086800
              AIF   (K'&ZXVSA64 LE 0).ZG7R      NOT I/O                 00086900
              AIF   ('&XVSA64'(1,1) NE '(').ZG7R                        00087000
&ZCGPR        SETC  '&XVSA64'(2,K'&XVSA64-2)                            00087100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                         00087200
              AIF   (K'&ZCGPR GT 2).ZG7Q                                00087300
              AIF   ('&ZCGPR' EQ '0').ZG7Q                              00087400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00087500
              AIF   (T'&ZCGPR NE 'N').ZG7Q      INVALID REG NAME        00087600
.ZG7P         ANOP  ,                                                   00087700
              AIF   (T'&ZCGPR NE 'N').ZG7R      NON NUMERIC             00087800
              AIF   ('&ZCGPR' LT '2').ZG7Q                              00087900
              AIF   ('&ZCGPR' LE '12').ZG7R                             00088000
.ZG7Q         ANOP  ,                                                   00088100
&ZMS          SETC  '"VSA64='                                           00088200
&ZMS          SETC  '&ZMS.&VSA64"'                                      00088300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00088400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00088500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088600
.ZG7R         ANOP  ,                                                   00088700
.*-------------------------------------------------------------------   00088800
.***AG.KMEKY15 NAME, OPT OUTPUT, ME KEYS -END                           00088900
.ZG8ZY        ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00089000
.*----------------------------------------------------------------***   00089100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00089200
              AIF   (N'&ASID LE 1).ZG10A        CK NUM                  00089300
&ZMS          SETC  '"ASID='                                            00089400
&ZMS          SETC  '&ZMS.&ASID"'                                       00089500
&ZMS          SETC  '&ZMS "ASID"'                                       00089600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00089700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089800
.ZG10A        ANOP  ,                                                   00089900
.*-------------------------------------------------------------------   00090000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00090100
              AIF   (K'&ASID(1) LE 0).ZG10C     NO PARM                 00090200
&ZXASID       SETC  'OUTPUT'    SET OUTPUT                              00090300
&XASID        SETC  '&ASID(1)'  SET XVARIABLE                           00090400
              AIF   (N'&ASID GT 1).ZG10C                                00090500
&XASID        SETC  '&ASID'     SET XVARIABLE                           00090600
.ZG10C        ANOP  ,                                                   00090700
.*-------------------------------------------------------------------   00090800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00090900
              AIF   (K'&ZXASID LE 0).ZG10R      NOT I/O                 00091000
              AIF   ('&XASID'(1,1) NE '(').ZG10R                        00091100
&ZCGPR        SETC  '&XASID'(2,K'&XASID-2)                              00091200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                        00091300
              AIF   (K'&ZCGPR GT 2).ZG10Q                               00091400
              AIF   ('&ZCGPR' EQ '0').ZG10Q                             00091500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00091600
              AIF   (T'&ZCGPR NE 'N').ZG10Q     INVALID REG NAME        00091700
.ZG10P        ANOP  ,                                                   00091800
              AIF   (T'&ZCGPR NE 'N').ZG10R     NON NUMERIC             00091900
              AIF   ('&ZCGPR' LT '2').ZG10Q                             00092000
              AIF   ('&ZCGPR' LE '12').ZG10R                            00092100
.ZG10Q        ANOP  ,                                                   00092200
&ZMS          SETC  '"ASID='                                            00092300
&ZMS          SETC  '&ZMS.&ASID"'                                       00092400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00092500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00092600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092700
.ZG10R        ANOP  ,                                                   00092800
.*----------------------------------------------------------------***   00092900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00093000
              AIF   (N'&STOKEN LE 1).ZG13A      CK NUM                  00093100
&ZMS          SETC  '"STOKEN='                                          00093200
&ZMS          SETC  '&ZMS.&STOKEN"'                                     00093300
&ZMS          SETC  '&ZMS "STOKEN"'                                     00093400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00093500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00093600
.ZG13A        ANOP  ,                                                   00093700
.*-------------------------------------------------------------------   00093800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00093900
              AIF   (K'&STOKEN(1) LE 0).ZG13C   NO PARM                 00094000
&ZXSTOKEN     SETC  'OUTPUT'    SET OUTPUT                              00094100
&XSTOKEN      SETC  '&STOKEN(1)'                SET XVARIABLE           00094200
              AIF   (N'&STOKEN GT 1).ZG13C                              00094300
&XSTOKEN      SETC  '&STOKEN'   SET XVARIABLE                           00094400
.ZG13C        ANOP  ,                                                   00094500
.*-------------------------------------------------------------------   00094600
.***AG.KCK01 NAME, OPT OUTPUT, KEYS -GPR NOT ALLOWED                    00094700
              AIF   (K'&ZXSTOKEN LE 0).ZG13P    NOT I/O                 00094800
              AIF   ('&XSTOKEN'(1,1) NE '(').ZG13P                      00094900
&ZXSTOKEN     SETC  ''          RESET IN/OUTPUT                         00095000
&ZMS          SETC  '"STOKEN='                                          00095100
&ZMS          SETC  '&ZMS.&STOKEN"'                                     00095200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00095300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00095400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095500
.ZG13P        ANOP  ,                                                   00095600
.*----------------------------------------------------------------***   00095700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00095800
              AIF   (N'&WORKREG LE 1).ZG16A     CK NUM                  00095900
&ZMS          SETC  '"WORKREG='                                         00096000
&ZMS          SETC  '&ZMS.&WORKREG"'                                    00096100
&ZMS          SETC  '&ZMS "WORKREG"'                                    00096200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00096300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096400
.ZG16A        ANOP  ,                                                   00096500
.*-------------------------------------------------------------------   00096600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00096700
&ZXWORKREG    SETC  'INPUT'     SET IN/OUTPUT                           00096800
&XWORKREG     SETC  'NONE'                                              00096900
              AIF   (K'&WORKREG(1) LE 0).ZG16B  PARM                    00097000
&XWORKREG     SETC  '&WORKREG(1)'               SET XVARIABLE           00097100
              AIF   (N'&WORKREG GT 1).ZG16B     MULTI                   00097200
&XWORKREG     SETC  '&WORKREG'  SET XVARIABLE                           00097300
.ZG16B        ANOP  ,                                                   00097400
.*-------------------------------------------------------------------   00097500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00097600
              AIF   (K'&ZXWORKREG LE 0).ZG16R   NOT I/O                 00097700
         AIF   ('&XWORKREG' EQ 'NONE').ZG16R                            00097800
              AIF   ('&XWORKREG'(1,1) NE '(').ZG16R                     00097900
&ZCGPR        SETC  '&XWORKREG'(2,K'&XWORKREG-2)                        00098000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                        00098100
              AIF   (K'&ZCGPR GT 2).ZG16Q                               00098200
              AIF   ('&ZCGPR' EQ '0').ZG16Q                             00098300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00098400
              AIF   (T'&ZCGPR NE 'N').ZG16Q     INVALID REG NAME        00098500
.ZG16P        ANOP  ,                                                   00098600
              AIF   (T'&ZCGPR NE 'N').ZG16R     NON NUMERIC             00098700
              AIF   ('&ZCGPR' LT '2').ZG16Q                             00098800
              AIF   ('&ZCGPR' LE '12').ZG16R                            00098900
.ZG16Q        ANOP  ,                                                   00099000
&ZMS          SETC  '"WORKREG='                                         00099100
&ZMS          SETC  '&ZMS.&WORKREG"'                                    00099200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00099300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00099400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00099500
.ZG16R        ANOP  ,                                                   00099600
.*----------------------------------------------------------------***   00099700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00099800
              AIF   (N'&NUMVIEW LE 1).ZG18A     CK NUM                  00099900
&ZMS          SETC  '"NUMVIEW='                                         00100000
&ZMS          SETC  '&ZMS.&NUMVIEW"'                                    00100100
&ZMS          SETC  '&ZMS "NUMVIEW"'                                    00100200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00100300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100400
.ZG18A        ANOP  ,                                                   00100500
.*-------------------------------------------------------------------   00100600
.***AG.KXVAR18 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00100700
              AIF   (K'&NUMVIEW(1) LE 0).ZG18C  PARM                    00100800
&ZXNUMVIEW    SETC  'OUTPUT'    SET OUTPUT                              00100900
&XNUMVIEW     SETC  '&NUMVIEW(1)'               SET XVARIABLE           00101000
              AIF   (N'&NUMVIEW GT 1).ZG18B                             00101100
&XNUMVIEW     SETC  '&NUMVIEW'  SET XVARIABLE                           00101200
.ZG18B        AIF   (K'&WORKREG(1) GT 0).ZG18C  KEY                     00101300
&ZMS          SETC  '"NUMVIEW'                                          00101400
&ZMS          SETC  '&ZMS.=&NUMVIEW"'                                   00101500
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     00101600
&ZMS          SETC  '&ZMS '                                             00101700
&ZMS          SETC  '&ZMS "WORKREG"'                                    00101800
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        00101900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00102000
.ZG18C        ANOP  ,                                                   00102100
.*-------------------------------------------------------------------   00102200
.***AG.KCK01 NAME, OPT OUTPUT, KEYS -GPR NOT ALLOWED                    00102300
              AIF   (K'&ZXNUMVIEW LE 0).ZG18P   NOT I/O                 00102400
              AIF   ('&XNUMVIEW'(1,1) NE '(').ZG18P                     00102500
&ZXNUMVIEW    SETC  ''          RESET IN/OUTPUT                         00102600
&ZMS          SETC  '"NUMVIEW='                                         00102700
&ZMS          SETC  '&ZMS.&NUMVIEW"'                                    00102800
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00102900
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00103000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00103100
.ZG18P        ANOP  ,                                                   00103200
.*----------------------------------------------------------------***   00103300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00103400
              AIF   (N'&NUMVALID LE 1).ZG21A    CK NUM                  00103500
&ZMS          SETC  '"NUMVALID='                                        00103600
&ZMS          SETC  '&ZMS.&NUMVALID"'                                   00103700
&ZMS          SETC  '&ZMS "NUMVALID"'                                   00103800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00103900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00104000
.ZG21A        ANOP  ,                                                   00104100
.*-------------------------------------------------------------------   00104200
.***AG.KXVAR18 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00104300
              AIF   (K'&NUMVALID(1) LE 0).ZG21C  PARM                   00104400
&ZXNUMVALID   SETC  'OUTPUT'    SET OUTPUT                              00104500
&XNUMVALID    SETC  '&NUMVALID(1)'              SET XVARIABLE           00104600
              AIF   (N'&NUMVALID GT 1).ZG21B                            00104700
&XNUMVALID    SETC  '&NUMVALID'                 SET XVARIABLE           00104800
.ZG21B        AIF   (K'&WORKREG(1) GT 0).ZG21C  KEY                     00104900
&ZMS          SETC  '"NUMVALID'                                         00105000
&ZMS          SETC  '&ZMS.=&NUMVALID"'                                  00105100
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     00105200
&ZMS          SETC  '&ZMS '                                             00105300
&ZMS          SETC  '&ZMS "WORKREG"'                                    00105400
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        00105500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00105600
.ZG21C        ANOP  ,                                                   00105700
.*-------------------------------------------------------------------   00105800
.***AG.KCK01 NAME, OPT OUTPUT, KEYS -GPR NOT ALLOWED                    00105900
              AIF   (K'&ZXNUMVALID LE 0).ZG21P  NOT I/O                 00106000
              AIF   ('&XNUMVALID'(1,1) NE '(').ZG21P                    00106100
&ZXNUMVALID   SETC  ''          RESET IN/OUTPUT                         00106200
&ZMS          SETC  '"NUMVALID='                                        00106300
&ZMS          SETC  '&ZMS.&NUMVALID"'                                   00106400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00106500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00106600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00106700
.ZG21P        ANOP  ,                                                   00106800
.*----------------------------------------------------------------***   00106900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00107000
              AIF   (N'&LINKAGE LE 1).ZG25A     CK NUM                  00107100
&ZMS          SETC  '"LINKAGE='                                         00107200
&ZMS          SETC  '&ZMS.&LINKAGE"'                                    00107300
&ZMS          SETC  '&ZMS "LINKAGE"'                                    00107400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00107500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00107600
.ZG25A        ANOP  ,                                                   00107700
.*-------------------------------------------------------------------   00107800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00107900
&XLINKAGE     SETC  ''          INITIALIZE XVARIABLE                    00108000
.ZG26A   AIF   ('&LINKAGE(1)' NE 'SYSTEM').ZG27A                        00108100
&XLINKAGE     SETC  'SYSTEM'    SET KEYWORD                             00108200
.*-------------------------------------------------------------------   00108300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00108400
.ZG27A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZG28A                        00108500
&XLINKAGE     SETC  'BRANCH'    SET KEYWORD                             00108600
.*-------------------------------------------------------------------   00108700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00108800
.ZG28A        AIF   (K'&XLINKAGE GT 0).ZG28C    KEYWORD                 00108900
              AIF   (K'&LINKAGE(1) LE 0).ZG28B                          00109000
&ZMS          SETC  '"LINKAGE='                                         00109100
&ZMS          SETC  '&ZMS.&LINKAGE"'                                    00109200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00109300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00109400
&ZMS          SETC  '&ZMS "SYSTEM"'                                     00109500
&ZMS          SETC  '&ZMS OR "BRANCH".'                                 00109600
              MNOTE 8,' &ZMS '                                          00109700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00109800
.ZG28B        ANOP  ,                                                   00109900
&XLINKAGE     SETC  'SYSTEM'    SET DEFAULT KEYWORD                     00110000
.ZG28C        ANOP  ,                                                   00110100
&ZXLINKAGE    SETC  'INPUT'     SET IN/OUTPUT                           00110200
.*----------------------------------------------------------------***   00110300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00110400
              AIF   (N'&RETCODE LE 1).ZG30A     CK NUM                  00110500
&ZMS          SETC  '"RETCODE='                                         00110600
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00110700
&ZMS          SETC  '&ZMS "RETCODE"'                                    00110800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00110900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00111000
.ZG30A        ANOP  ,                                                   00111100
.*-------------------------------------------------------------------   00111200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00111300
              AIF   (K'&RETCODE(1) LE 0).ZG30C  NO PARM                 00111400
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00111500
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00111600
              AIF   (N'&RETCODE GT 1).ZG30C                             00111700
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00111800
.ZG30C        ANOP  ,                                                   00111900
.*-------------------------------------------------------------------   00112000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00112100
              AIF   (K'&ZXRETCODE LE 0).ZG30R   NOT I/O                 00112200
              AIF   ('&XRETCODE'(1,1) NE '(').ZG30R                     00112300
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00112400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                        00112500
              AIF   (K'&ZCGPR GT 2).ZG30Q                               00112600
              AIF   ('&ZCGPR' EQ '0').ZG30Q                             00112700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00112800
              AIF   (T'&ZCGPR NE 'N').ZG30Q     INVALID REG NAME        00112900
.ZG30P        ANOP  ,                                                   00113000
              AIF   (T'&ZCGPR NE 'N').ZG30R     NON NUMERIC             00113100
              AIF   ('&ZCGPR' EQ '15').ZG30R                            00113200
              AIF   ('&ZCGPR' LT '2').ZG30Q                             00113300
              AIF   ('&ZCGPR' LE '12').ZG30R                            00113400
.ZG30Q        ANOP  ,                                                   00113500
&ZMS          SETC  '"RETCODE='                                         00113600
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00113700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00113800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'            00113900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00114000
.ZG30R        ANOP  ,                                                   00114100
.*----------------------------------------------------------------***   00114200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00114300
              AIF   (N'&RSNCODE LE 1).ZG33A     CK NUM                  00114400
&ZMS          SETC  '"RSNCODE='                                         00114500
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00114600
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00114700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00114800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00114900
.ZG33A        ANOP  ,                                                   00115000
.*-------------------------------------------------------------------   00115100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00115200
              AIF   (K'&RSNCODE(1) LE 0).ZG33C  NO PARM                 00115300
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00115400
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00115500
              AIF   (N'&RSNCODE GT 1).ZG33C                             00115600
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00115700
.ZG33C        ANOP  ,                                                   00115800
.*-------------------------------------------------------------------   00115900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00116000
              AIF   (K'&ZXRSNCODE LE 0).ZG33R   NOT I/O                 00116100
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG33R                     00116200
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00116300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                        00116400
              AIF   (K'&ZCGPR GT 2).ZG33Q                               00116500
              AIF   ('&ZCGPR' EQ '0').ZG33R                             00116600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00116700
              AIF   (T'&ZCGPR NE 'N').ZG33Q     INVALID REG NAME        00116800
.ZG33P        ANOP  ,                                                   00116900
              AIF   (T'&ZCGPR NE 'N').ZG33R     NON NUMERIC             00117000
              AIF   ('&ZCGPR' EQ '0').ZG33R                             00117100
              AIF   ('&ZCGPR' LT '2').ZG33Q                             00117200
              AIF   ('&ZCGPR' LE '12').ZG33R                            00117300
.ZG33Q        ANOP  ,                                                   00117400
&ZMS          SETC  '"RSNCODE='                                         00117500
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00117600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00117700
              MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'             00117800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00117900
.ZG33R        ANOP  ,                                                   00118000
.*----------------------------------------------------------------***   00118100
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    00118200
              AIF   (N'&COM LE 1).ZG36A         CK NUM                  00118300
&ZMS          SETC  '"COM='                                             00118400
&ZMS          SETC  '&ZMS.&COM"'                                        00118500
&ZMS          SETC  '&ZMS "COM"'                                        00118600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00118700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00118800
.ZG36A        ANOP  ,                                                   00118900
.*-------------------------------------------------------------------   00119000
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        00119100
&ZXCOM        SETC  'INPUT'     SET IN/OUTPUT                           00119200
&XCOM         SETC  'NULL'                                              00119300
              AIF   (K'&COM(1) LE 0).ZG36B      PARM                    00119400
&XCOM         SETC  '&COM(1)'   SET XVARIABLE                           00119500
              AIF   (N'&COM GT 1).ZG36B         MULTI                   00119600
&XCOM         SETC  '&COM'      SET XVARIABLE                           00119700
.ZG36B        ANOP  ,                                                   00119800
.*-------------------------------------------------------------------   00119900
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    00120000
              AIF   (K'&ZXCOM LE 0).ZG36P       NOT I/O                 00120100
              AIF   ('&XCOM' EQ 'NULL').ZG36P                           00120200
              AIF   ('&XCOM'(1,1) NE '(').ZG36P                         00120300
&ZXCOM        SETC  ''          RESET IN/OUTPUT                         00120400
&ZMS          SETC  '"COM='                                             00120500
&ZMS          SETC  '&ZMS.&COM"'                                        00120600
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00120700
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00120800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00120900
.ZG36P        ANOP  ,                                                   00121000
.*-------------------------------------------------------------------   00121100
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   00121200
              AIF   (K'&ZXCOM LE 0).ZG36S       NOT I/O                 00121300
              AIF   ('&XCOM' EQ 'NULL').ZG36S                           00121400
              AIF   (K'&XCOM LE 256).ZG36S      LNG OK                  00121500
&ZXCOM        SETC  ''          RESET IN/OUTPUT                         00121600
&ZMS          SETC  '"COM='                                             00121700
&ZMS          SETC  '&ZMS.&COM"'                                        00121800
&ZMS          SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'               00121900
              MNOTE 8,' &ZMS LENGTH OF 256 CHARACTERS.'                 00122000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00122100
.ZG36S        ANOP  ,                                                   00122200
.*----------------------------------------------------------------***   00122300
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    00122400
              AIF   (N'&REM LE 1).ZG39A         CK NUM                  00122500
&ZMS          SETC  '"REM='                                             00122600
&ZMS          SETC  '&ZMS.&REM"'                                        00122700
&ZMS          SETC  '&ZMS "REM"'                                        00122800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00122900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00123000
.ZG39A        ANOP  ,                                                   00123100
.*-------------------------------------------------------------------   00123200
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        00123300
&ZXREM        SETC  'INPUT'     SET IN/OUTPUT                           00123400
&XREM         SETC  'NULL'                                              00123500
              AIF   (K'&REM(1) LE 0).ZG39B      PARM                    00123600
&XREM         SETC  '&REM(1)'   SET XVARIABLE                           00123700
              AIF   (N'&REM GT 1).ZG39B         MULTI                   00123800
&XREM         SETC  '&REM'      SET XVARIABLE                           00123900
.ZG39B        ANOP  ,                                                   00124000
.*-------------------------------------------------------------------   00124100
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    00124200
              AIF   (K'&ZXREM LE 0).ZG39P       NOT I/O                 00124300
              AIF   ('&XREM' EQ 'NULL').ZG39P                           00124400
              AIF   ('&XREM'(1,1) NE '(').ZG39P                         00124500
&ZXREM        SETC  ''          RESET IN/OUTPUT                         00124600
&ZMS          SETC  '"REM='                                             00124700
&ZMS          SETC  '&ZMS.&REM"'                                        00124800
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00124900
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00125000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00125100
.ZG39P        ANOP  ,                                                   00125200
.*-------------------------------------------------------------------   00125300
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   00125400
              AIF   (K'&ZXREM LE 0).ZG39S       NOT I/O                 00125500
              AIF   ('&XREM' EQ 'NULL').ZG39S                           00125600
              AIF   (K'&XREM LE 256).ZG39S      LNG OK                  00125700
&ZXREM        SETC  ''          RESET IN/OUTPUT                         00125800
&ZMS          SETC  '"REM='                                             00125900
&ZMS          SETC  '&ZMS.&REM"'                                        00126000
&ZMS          SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'               00126100
              MNOTE 8,' &ZMS LENGTH OF 256 CHARACTERS.'                 00126200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00126300
.ZG39S        ANOP  ,                                                   00126400
.******************************************************************     00126500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00126600
.******************************************************************     00126700
              ACTR  10000                                               00126800
.*----------------------------------------------------------------***   00126900
.***AH.P02 EXTRA POSITIONALS                                            00127000
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00127100
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00127200
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00127300
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00127400
.ZGLISTX1     ANOP  ,                                                   00127500
&ZCVAL        SETC  ''          ERROR FIELD                             00127600
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00127700
.ZGLIST2      ANOP  ,                                                   00127800
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00127900
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00128000
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00128100
              AGO   .ZGLIST2                                            00128200
.*                                                                      00128300
.ZGLIST3      ANOP  ,                                                   00128400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00128500
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00128600
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00128700
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00128800
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00128900
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00129000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00129100
.ZGLISTX      ANOP  ,                                                   00129200
&ZASYSLNDX    SETA  0                                                   00129300
.*******************************************************************    00129400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00129500
.*******************************************************************    00129600
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00129700
.*******************************************************************    00129800
.***AE.01  START OF IARR2V MACRO CODE                                   00129900
.*******************************************************************    00130000
              LCLC  &M0M0001                 NAME                       00130100
&M0M0001      SETC  '&XLABEL'                SET NAME                   00130200
              AIF   (K'&XLABEL NE 0).XLAB2                              00130300
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00130400
.*                                                                      00130500
.XLAB2        ANOP  ,                                                   00130600
&M0M0001 DS    0H                             IARR2V-0                  00130700
.*******************************************************************    00130800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00130900
.*******************************************************************    00131000
              PUSH  PRINT                                               00131100
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00131200
              PRINT OFF         ++ PR01                                 00131300
              AGO   .ZPRNTXX                                            00131400
.ZPRINTX      PRINT ON                                                  00131500
.ZPRNTXX      ANOP  ,                                                   00131600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00131700
         GBLC  &SYSAM64                                            @L5A 00131800
         GBLA  &SYSALVL                                                 00131900
         GBLC  &SYSASCE                                            @P5A 00132000
         AIF   (&ZMACRET NE 0).R2VDONE                                  00132100
         SYSSTATE TEST                                                  00132200
         AIF   (&SYSALVL LE 1 AND '&XRSA64' NE '').R2VFAIL              00132300
         AIF   (&SYSALVL LE 1 AND '&XVSA64' NE '').R2VFAL1         @L2A 00132400
         AIF   ('&XRSA' NE '' AND '&XVSA64' NE '').R2VFAL2         @L2A 00132500
         AIF   ('&XWORKREG' EQ '').R2VWRIN                              00132600
         AIF   ('&XWORKREG' EQ ' ').R2VWRIN                             00132700
         AIF   ('&XWORKREG' EQ 'NONE').R2VWRIN                          00132800
         LR    &XWORKREG,13            Save GR 13                       00132900
         CPYA  &XWORKREG,13            Save AR 13                       00133000
         AIF   ('&XRSA64' NE '').R2V64I If input is a 64-bit address    00133100
         SLR   1,1                     Input is a 31-bit address and   X00133200
                                       return page sharing counts       00133300
         AGO   .R2VWRIX                                                 00133400
.R2V64I  ANOP                                                           00133500
         LA    1,1                     Input is a 64-bit address and   X00133600
                                       return page sharing counts       00133700
         AGO   .R2VWRIX                                                 00133800
.R2VWRIN ANOP                                                           00133900
         AIF   ('&XRSA' NE '').R2VWRIA  If input is a 31-bit address    00134000
         LA    1,5                     Input is a 64-bit address and   X00134100
                                       don't return page sharing counts 00134200
         AGO   .R2VWRIX                                                 00134300
.R2VWRIA ANOP                                                           00134400
         LA    1,4                     Input is a 31-bit address and   X00134500
                                       don't return page sharing counts 00134600
.R2VWRIX ANOP                                                           00134700
         AIF   ('&XVSA64' EQ '').R2VSETR                           @L2A 00134800
         O     1,=X'00000002'          Indicate output will be 64-bit  X00134900
                                        VSA                        @L2A 00135000
.R2VSETR ANOP                                                      @L2A 00135100
         SAR   1,1                     Pass it in AR1                   00135200
         AIF   ('&XRSA64' NE '').R2VRSA64                               00135300
         AIF   ('&XRSA' EQ '(1)').R2VCALL                               00135400
         AIF   ('&XRSA'(1,1) EQ '(').R2VRSAR                            00135500
         L     1,&XRSA                 Get RSA                          00135600
         AGO   .R2VCALL                                                 00135700
.R2VRSAR LR    1,&XRSA                 Get RSA                          00135800
         AGO   .R2VCALL                                                 00135900
.R2VRSA64 ANOP                                                          00136000
         AIF   ('&XRSA64' EQ '(1)').R2VCALL                             00136100
         AIF   ('&XRSA64'(1,1) EQ '(').R2V64R                           00136200
         LG    1,&XRSA64               Get RSA64                        00136300
         AGO   .R2VCALL                                                 00136400
.R2V64R  LGR   1,&XRSA64               Get RSA64                        00136500
.R2VCALL AIF   ('&XLINKAGE' EQ 'SYSTEM').R2VPC                          00136600
         AIF   ('&XLINKAGE' EQ 'BRANCH').R2VBALR                        00136700
         AGO   .R2VRET                                                  00136800
.R2VPC   AIF   ('&SYSAM64' EQ 'YES').A64YP                         @L5A 00136900
         L     14,16                   Get CVT address             @L5C 00137000
         AGO   .A64NP                                              @L5A 00137100
.A64YP   LLGT  14,16                   GET CVT ADDRESS             @L5A 00137200
.A64NP   ANOP                                                      @L5A 00137300
         L     14,772(14,0)            Get function table address       00137400
         L     14,208(14,0)            Get LX for IARR2V service        00137500
         LA    15,13                   Get EX for IARR2V service        00137600
         OR    14,15                   Get PC number                    00137700
         PC    0(14)                   Call IARWTRVX                    00137800
         AGO   .R2VRET                                                  00137900
.R2VBALR AIF   ('&SYSAM64' EQ 'YES').A64YB                         @L5A 00138000
         L     15,16(0,0)              Get CVT address                  00138100
         AGO   .A64NB                                              @L5A 00138200
.A64YB   LLGT  15,16(0,0)              GET CVT ADDRESS             @L5A 00138300
.A64NB   ANOP                                                      @L5A 00138400
         L     15,356(15,0)            Get PVT address                  00138500
         L     15,16(15,0)             Get PVT extention address        00138600
         L     15,20(15,0)             Get IARWTRV entry point          00138700
         AIF   ('&SYSASCE' NE 'AR').R2VBP                          @P5A 00138800
         SAC   0                       Get in Primary mode         @P5A 00138900
         BASSM 14,15                   Call IARWTRV                     00139000
         SAC   512                     Get back in AR mode         @P5A 00139100
         AGO   .R2VRET                 Continue                    @P5A 00139200
.R2VBP   ANOP                          Caller runs in primary mode @P5A 00139300
         BASSM 14,15                   Call IARWTRV                @P5A 00139400
.R2VRET  ANOP                                                           00139500
         AIF   ('&XWORKREG' EQ '').R2VWROX                              00139600
         AIF   ('&XWORKREG' EQ ' ').R2VWROX                             00139700
         AIF   ('&XWORKREG' EQ 'NONE').R2VWROX                          00139800
         LR    13,&XWORKREG            Restore GR 13                    00139900
         CPYA  13,&XWORKREG            Restore AR 13                    00140000
.R2VWROX ANOP                                                           00140100
         AIF   ('&XVSA' EQ '' AND '&XASID' EQ '' AND                   *00140200
               '&XVSA64' EQ '' AND '&XSTOKEN' EQ '').R2VDONE       @P7C 00140300
         C     15,=F'8'                Bad return code?                 00140400
         BNL   R2V&SYSNDX              No...continue                    00140500
         AIF   ('&XVSA64' EQ '').R2VVA31                           @L2A 00140600
         AIF   ('&XVSA64' EQ '(1)').R2VVSAX                        @L2A 00140700
         AIF   ('&XVSA64'(1,1) EQ '(').R2VVA64                     @L2A 00140800
         STG   1,&XVSA64               Save VSA64                  @L2A 00140900
         AGO   .R2VVSAX                                            @L2A 00141000
.R2VVA64 LGR   &XVSA64,1               Save VSA64                  @L2A 00141100
.R2VVA31 ANOP                                                      @L2A 00141200
         AIF   ('&XVSA' EQ '(1)' OR '&XVSA' EQ '').R2VVSAX              00141300
         AIF   ('&XVSA'(1,1) EQ '(').R2VVSAR                            00141400
         ST    1,&XVSA                 Save VSA                         00141500
         AGO   .R2VVSAX                                                 00141600
.R2VVSAR LR    &XVSA,1                 Save VSA                         00141700
.R2VVSAX ANOP                                                           00141800
         AIF   ('&XASID' EQ '(0)' OR '&XASID' EQ '').R2VASIX            00141900
         AIF   ('&XASID'(1,1) EQ '(').R2VASIR                           00142000
         ST    0,&XASID                Save ASID                        00142100
         AGO   .R2VASIX                                                 00142200
.R2VASIR LR    &XASID,0                Save ASID                        00142300
.R2VASIX ANOP                                                           00142400
         AIF   ('&XSTOKEN' EQ '').R2VSTKX                               00142500
         STAM  0,1,&XSTOKEN            Save STOKEN                      00142600
.R2VSTKX ANOP                                                           00142700
         AIF   ('&XWORKREG' EQ '').R2VWRXX                              00142800
         AIF   ('&XWORKREG' EQ ' ').R2VWRXX                             00142900
         AIF   ('&XWORKREG' EQ 'NONE').R2VWRXX                          00143000
         AIF   ('&XNUMVIEW' EQ '').R2VNVWX                              00143100
         STAM  14,14,&XNUMVIEW         Save NUMVIEW                     00143200
.R2VNVWX ANOP                                                           00143300
         AIF   ('&XNUMVALID' EQ '').R2VNVLX                             00143400
         STAM  15,15,&XNUMVALID        Save NUMVALID                    00143500
         AGO   .R2VNVLX                                                 00143600
.R2VFAL1 ANOP                                                      @L2A 00143700
         MNOTE 8,'TO USE KEYWORD "VSA64", THE SYSSTATE MACRO MUST BE INx00143800
               VOKED WITH ARCHLVL GREATER THAN 1.'                      00143900
         AGO   .R2VNVLX                                            @L2A 00144000
.R2VFAL2 ANOP                                                      @L2A 00144100
         MNOTE 8,'WHEN KEYWORD "VSA64" IS USED, "RSA64" MUST BE USED INx00144200
               STEAD OF "RSA".'                                         00144300
         AGO   .R2VNVLX                                            @L2A 00144400
.R2VFAIL ANOP                                                           00144500
         MNOTE 8,'TO USE KEYWORD "RSA64", THE SYSSTATE MACRO MUST BE INx00144600
               VOKED WITH ARCHLVL GREATER THAN 1.'                      00144700
.R2VNVLX ANOP                                                           00144800
.R2VWRXX ANOP                                                           00144900
R2V&SYSNDX  DS    0H                                                    00145000
.R2VDONE ANOP                                                           00145100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00145200
.********************************************************************   00145300
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00145400
.********************************************************************   00145500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00145600
                      LCLA  &ZOPN1         INVOCATION INDEX             00145700
                      LCLC  &ZOPL(4095)    LABEL                        00145800
                      LCLC  &ZOPO(4095)    OPERATION                    00145900
                      LCLC  &ZOPV(4095)    VALUE                        00146000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00146100
.*                                                                      00146200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00146300
.*******************************************************************    00146400
.***AO.X02  RETURN CODE PROCESSING                                      00146500
.*******************************************************************    00146600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00146700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00146800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00146900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00147000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00147100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00147200
&ZOPN                 SETA  &ZOPN+1                                     00147300
&ZOPL(&ZOPN)          SETC  ' '                                         00147400
&ZOPO(&ZOPN)          SETC  'ST'                                        00147500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00147600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00147700
                      AGO   .ZMRETX                                     00147800
.*                                                                      00147900
.ZMRET2               ANOP  ,                                           00148000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00148100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00148200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00148300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00148400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00148500
&ZOPN                 SETA  &ZOPN+1                                     00148600
&ZOPL(&ZOPN)          SETC  ' '                                         00148700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00148800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00148900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00149000
.ZMRETX               ANOP  ,                                           00149100
.*******************************************************************    00149200
.***AO.X03  REASON CODE PROCESSING                                      00149300
.*******************************************************************    00149400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00149500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00149600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00149700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00149800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00149900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00150000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00150100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00150200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00150300
&ZOPN                 SETA  &ZOPN+1                                     00150400
&ZOPL(&ZOPN)          SETC  ' '                                         00150500
&ZOPO(&ZOPN)          SETC  'ST'                                        00150600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00150700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00150800
                      AGO   .ZMRSNX                                     00150900
.*                                                                      00151000
.ZMRSN2               ANOP  ,                                           00151100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00151200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00151300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00151400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00151500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00151600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00151700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00151800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00151900
&ZOPN                 SETA  &ZOPN+1                                     00152000
&ZOPL(&ZOPN)          SETC  ' '                                         00152100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00152200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00152300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00152400
.ZMRSNX               ANOP  ,                                           00152500
.*******************************************************************    00152600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00152700
.*******************************************************************    00152800
                      ACTR  10000                                       00152900
.*                                                                      00153000
                      LCLA  &ZLC           COLUMN POSITION              00153100
                      LCLA  &ZOPX          LIST TABLE INDEX             00153200
                      LCLC  &ZLL           LABEL                        00153300
                      LCLC  &ZLOP          OPERATION                    00153400
                      LCLC  &ZLV           VALUE                        00153500
                      LCLC  &ZLD           DESCRIPTION                  00153600
.*                                                                      00153700
&ZOPX                 SETA  1                                           00153800
.*******************************************************************    00153900
.***AP.X01  FORMAT GENERATED CODE                                       00154000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00154100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00154200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00154300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00154400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00154500
                      AIF   (K'&ZLD LE 0).ZL51                          00154600
&ZLC                  SETA  35             COMMENT COLUMN               00154700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00154800
&ZLC                  SETA  33             COMMENT COLUMN               00154900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00155000
&ZLV                  SETC  '&ZLV'.' '                                  00155100
                      AGO   .ZL31                                       00155200
.*                                                                      00155300
.ZL41                 ANOP  ,                                           00155400
&ZLV                  SETC  '&ZLV'.' '                                  00155500
.ZL51                 ANOP  ,                                           00155600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00155700
.*                                                                      00155800
&ZLL     &ZLOP &ZLV                                                     00155900
.*                                                                      00156000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00156100
                      AGO   .ZL21          CONTINUE LOOPING             00156200
.*                                                                      00156300
.ZLX1                 ANOP  ,                                           00156400
.*******************************************************************    00156500
.***AP.X02  END OF IARR2V MACRO                                         00156600
&ZIARR2V              SETC  'YES'          SET IARR2V USED              00156700
         POP   PRINT                                                    00156800
*                                            IARR2V-0                   00156900
         SPACE 1                                                        00157000
.ZLX2                 ANOP  ,                                           00157100
         MEND                                                           00157200
**********************************************************************/ 00157300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00157400
*%IARR2V: MACRO KEYS(RSA,RSA64,VSA,VSA64,ASID,STOKEN,WORKREG,NUMVIEW,   00157500
*                 NUMVALID,LINKAGE,RETCODE,RSNCODE,COM,REM);            00157600
*  ANS('?'!!MACLABEL!!' '!!'IARR2VP '!!MACLIST!!                        00157700
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00157800
*%END IARR2V;                                                           00157900
