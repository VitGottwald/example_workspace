*%;    /*                                                               00010000
         MACRO                                                          00020000
         IRRPCOMX &DSECT=YES                                         */ 00030000
*/****START OF SPECIFICATIONS****************************************** 00040000
*                                                                       00050000
*  $MAC (IRRPCOMX) COMP(SC1BN) PROD(SAF):                               00060000
*                                                                       00070000
*01* MACRO NAME: IRRPCOMX                                               00080000
*                                                                       00090000
*01* DSECT NAME: COMPX                                                  00100000
*                                                                       00110000
*01* DESCRIPTIVE NAME: OMVS Common Security Parameter List (64 bit)     00120000
*                                                                       00130000
*02*   ACRONYM: COMPX                                                   00140000
**/                                                                     00150000
*/*01* PROPRIETARY STATEMENT=                                        */ 00160000
*/***PROPRIETARY_STATEMENT********************************************/ 00170000
*/*                                                                  */ 00180000
*/*                                                                  */ 00190000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00200000
*/* 5650-ZOS COPYRIGHT IBM CORP. 2004, 2021                          */ 00210015
*/*                                                                  */ 00230000
*/* STATUS= HBB77D0                                                  */ 00240000
*/*                                                                  */ 00250000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00260000
*/*                                                                  */ 00270000
*/*01* EXTERNAL CLASSIFICATION: PI                               @L9C*/ 00280000
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00290000
*/*                                                                     00300000
*01* FUNCTION:                                                          00310000
*                                                                       00320000
*    This file contains the mapping of the common input                 00330000
*    parameter list for OMVS SAF and RACF routers. It also has          00340000
*    the input parameter lists for each of the 64 bit OMVS security     00350000
*    service routines. The input parameter lists in this file are:      00360000
*                                                                       00370000
*    DSECT NAME   STUB NAME      SECURITY FUNCTION                      00380000
*                                                                       00390000
*      COMPX      all         Common Security                           00400000
*                                                                       00410000
*                                                                       00420000
*      CDDLX      IRRSDL00    CDSA Data Lib Service (64 bit)            00430000
*      GSEC       IRRSGS00    Generic Security API                @L1A  00440000
*                                                                       00450000
*01* METHOD OF ACCESS:                                                  00460000
*                                                                       00470000
*02*   PL/X:  %INCLUDE(IRRPCOMX)                                        00480000
*                                                                       00490000
*             DECLARE COMPX_PTR PTR(64) or PTR(31)                      00500000
*             To contain the address of the   OMVS  SAF/RACF common     00510000
*             plist and any additional service routine plist.           00520000
*                                                                       00530000
*                                                                       00540000
*02*   ASM:   IRRPCOMX                                                  00550000
*             A DSECT is produced unless DSECT=NO is specified.         00560000
*                                                                       00570000
*             LA     REG,COMPX                                          00580000
*             USING  COMPX,REG                                          00590000
*                                                                       00600000
*             Where REG is any general register except 0.               00610000
*                                                                       00620000
*                                                                       00630000
*01* SIZE: Release dependent. Refer to the mapping.                     00640000
*                                                                       00650000
*01* POINTED TO BY: Address of COMPX is passed in register 1            00660000
*                   when invoking OMVSsecurity functions.               00670000
*                                                                       00680000
*01* CREATED BY: Invoker of OMVS security functions.                    00690000
*                                                                       00700000
*01* DELETED BY: Invoker of OMVS security functions.                    00710000
*                                                                       00720000
*01* STORAGE ATTRIBUTES:                                                00730000
*02*   SUBPOOL:  N/A                                                    00740000
*02*   KEY:      Any                                                    00750000
*02*   RESIDENCY: Invoker's primary address space                       00760000
*                                                                       00770000
*01* FREQUENCY: N/A                                                     00780000
*                                                                       00790000
*01* SERIALIZATION: N/A                                                 00800000
*                                                                       00810000
*01* DEPENDENCIES: None                                                 00820000
*                                                                       00830000
*01* NOTES:                                                             00830020
*  This part was heavily restructured in z/OS 2.5 to make it            00830040
*   compatible with the C-header generation utility used during build.  00830060
*   o The tool requires that all of the 'main' plist components         00830080
*     (COMPX, CDDL, GSEC) be contiguous, and not separated              00830100
*     by constants or parameter list sub-mappings. The 'main' plist     00830120
*     components are those which are specified on the CALL statement.   00830140
*   o The ASM portion is unaffected by these changes.                   00830160
*   o To add a new service to the PLX mapping:                          00830180
*     - Locate 'COMPX sub-declares'.                                    00830200
*     - Change the previous semi-colon to 'CompX_Term'                  00830220
*     - Add the main plist                                              00830240
*     - End it with a semi-colon                                        00830260
*   o All constants and additional data mappings should be added        00830280
*      to the very end of the macro.                              @LFC  00830300
*                                                                       00850000
*  Note: The build process puts the generated C file in:                00850000
*        - SYS1.SIEAHDR.H                                               00860000
*        - /usr/include/zos with a ".h" suffix                          00860000
*                                                                       00860000
*01* COMPONENT:   SAF (SC1BN)                                           00870000
*                                                                       00880000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00890000
*                                                                       00900000
*01* EYE-CATCHER: None - this is not a control block definition.        00910000
*02*   OFFSET:  N/A                                                     00920000
*02*   LENGTH:  N/A                                                     00930000
*                                                                       00940000
*01* CHANGE-ACTIVITY:                                                   00950000
*  $L0=64SAF    HBB7709 001114 PDER1   64 Bit support                   00960000
*  $L1=KRBGSS   HBB7709 020506 PDER1   Kerberos GSSAPI support   @L1A   00970000
*  $P1=PJK0835  HBB7709 030825 PDER1   PTM PJK0835               @P1A   00980000
*  $L2=PTCS     HBB7720 040111 PDMO1   PAssTicket Enhancements   @L2A   00990000
*  $P2=MG05219  HBB7730 051101 PDAWS1: Defect MG05219            @P2A   01000000
*  $L3=PKIS9    HBB7740 060127 PDTCG1: Writeable Keyring         @L3A   01010000
*  $L4=PKIS9    HBB7740 060406 PDRDC1: Writeable Keyring         @L4A   01020000
*  $L5=PKIS9    HBB7740 060420 PDRDC1: Writeable Keyring         @L5A   01030000
*  $L6=FIPS     HBB7760 080304 PDXS1:  FIPS support              @L6A   01040000
*  $L7=ME13506  HBB7760 080513 PDXS1:  FIPS support              @L7A   01050000
*  $L8=PKIS12R  HBB7770 090211 PDRDC1: Auto Serial Number        @L8A   01060000
*  $L9=ECC      HBB7770 090505 PDLAW1: ECC support               @L9A   01070000
*  $LA=ECC2     HBB7780 100314 PDSGW1: Hardware ECC              @LAA   01080000
*  $LB=SECTKDS  HBB7790 120203 PDALF1: LI3268.4                  @LBA   01090000
*  $LC=SECTKDS  HBB7790 120203 PDALF1: LI3268.4                  @LCA   01100000
*  $LD=RDATA    HBB77A0 130111 PDALF1: FP0347                    @LDA   01110000
*  $P3=ME26235  HBB77A0 130501 PDALF1: Defect ME26235            @P3A   01120008
*  $LE=RDATA    HBB77A0 130715 PDALF1: FP0347                    @LEA   01130006
*  $LF=CMACROS  HBB77D0 191211 PDM_O1: 352039                    @LFA   01130021
*  $LG=PASSTK4  HBB77D0 200810 PDRDC1: 384055 Enhanced PassTix   @LGA   01140000
*                                                                       01140000
*                                                                       01150000
*01* CHANGE-DESCRIPTIONS:                                               01160000
*    A000000-999999                                              @L0A   01170000
*  A - Add GSS-API functions                                     @L1A   01180000
*  C - Correct RETNAME parmlist                                  @P1A   01190000
*  A - Add Passticket to GSEC                                    @L2A   01200000
*  C - Corrected pointer declares so PL/X and ASM match          @P2A   01210000
*  A - Add new fspl for writeable keyring support                @L3A   01220000
*      - New functions: NewRing, DataPut, DataRemove, DelRing    @L3A   01230000
*  A - Update R_DataLib for writeable keyring support            @L4A   01240000
*  A - Update R_DataLib for writeable keyring support - Add      @L5A   01250000
*      HIGHTRUST                                                 @L5A   01260000
*  A - Add CDDLX_ATT_SKIPAUTH flag for FIPS support              @L6A   01270000
*  C - Change to limit CDDL_ATT_SKIPAUTH flag for only           @L7A   01280000
*      DataGetFirst, DataGetNext, CheckStatus, GetUpdateCode     @L7A   01290000
*      functions                                                 @L7A   01300000
*  A - Add CDDLX_ATT_SET_MIN_SERIAL for Auto Serial Number       @L8A   01310000
*  A - Support for Elliptic Curve Cryptography                   @L9A   01320000
*  A - Add key type CDDLX_ECC_ICSF                               @LAA   01330000
*  A - Support for Enterprise PKCS#11 Hardware Security          @LBA   01340000
*      - Add CDDLX_RSA_TKDS, CDDLX_ECC_TKDS, and CDDLX_DSA_TKDS  @LBA   01350000
*        key types                                               @LBA   01360000
*  C - Fix PADI assemble errors                                  @LCA   01370000
*  A - SAF program interface to RACDCERT                         @LDA   01380000
*  C - Change pointer declares from 31 bit to 64 bit             @P3A   01390003
*  A - SAF program interface to RACDCERT - Sprint 4              @LEA   01400006
*  A - Many updates to accommodate  CBGENC C-Header generation   @LFA   01400026
*      tool which causes C header files to be built magically    @LFA   01400046
*      during build. Mostly not change flagged because every     @LFA   01400066
*      PLX line is altered or moved.                             @LFA   01400086
*  A - Add R_Gensec PassTicket Generate Extended option          @LGA   01410000
*    - Add R_Gensec PassTicket Evaluate Extended option for      @LGA   01410000
*      this previously provided function                         @LGA   01410000
*                                                                       01400106
*  **Note. When making changes to this part, PLEASE refer to            01400126
*    the NOTES in the prolog. This part was changed significantly in    01400146
*    z/OS 2.5.                                                          01400166
*                                                                       01410000
****END OF SPECIFICATIONS*********************************************/ 01420000
*%;/*                                                                   01430000
*********************************************************************** 01440000
***                                                                  ** 01450000
***                   COMPX ASSEMBLER DECLARATIONS                   ** 01460000
***------------------------------------------------------------------** 01470000
***                                                                  ** 01480000
***   DECLARATION NAME = COMPX                                       ** 01490000
***                                                                  ** 01500000
***   DESCRIPTIVE NAME = OMVS Common SAF/RACF parameter list.        ** 01510000
***                                                                  ** 01520000
***   FUNCTION = Provides BAL mapping of the common input parameter  ** 01530000
***              list for the OMVS SAF/RACF routers.                 ** 01540000
***                                                                  ** 01550000
**********************************************************************/ 01560000
*%;   /*                                                                01570000
         AIF   ('&DSECT' EQ 'NO').COMPN                                 01580000
*                                                                       01590000
COMPX    DSECT ,                 OMVS SAF/RACF common plist.            01600000
         AGO   .COMPY                                                   01610000
.COMPN  ANOP                                                            01620000
COMPX    DS    0D                OMVS SAF/RACF common plist.            01630000
.COMPY  ANOP                                                            01640000
*                                                                       01650000
*                                                                       01660000
COMPX_PARMCNT@    DS  AD         Address of number of parameters        01670000
                  ORG COMPX_PARMCNT@                               @P2A 01680000
                  DS  A                                            @P2A 01690000
COMPX31_PARMCNT@  DS  A                                            @P2A 01700000
*                                                                       01710000
COMPX_WORKA_STOR@ DS  AD         Address of 1024 byte work area.        01720000
                  ORG COMPX_WORKA_STOR@                            @P2A 01730000
                  DS  A                                            @P2A 01740000
COMPX31_WORKA_STOR@ DS A                                           @P2A 01750000
*                                                                       01760000
COMPX_SAFRC_ALET@ DS  AD         Address of ALET for SAF Return Code.   01770000
                  ORG COMPX_SAFRC_ALET@                            @P2A 01780000
                  DS  A                                            @P2A 01790000
COMPX31_SAFRC_ALET@ DS A                                           @P2A 01800000
*                                                                       01810000
COMPX_SAFRC_STOR@ DS  AD         Address of SAF Return Code.            01820000
                  ORG COMPX_SAFRC_STOR@                            @P2A 01830000
                  DS  A                                            @P2A 01840000
COMPX31_SAFRC_STOR@ DS A                                           @P2A 01850000
*                                                                       01860000
COMPX_RACRC_ALET@ DS  AD         Address of ALET for RACF Return Code.  01870000
                  ORG COMPX_RACRC_ALET@                            @P2A 01880000
                  DS  A                                            @P2A 01890000
COMPX31_RACRC_ALET@ DS A                                           @P2A 01900000
*                                                                       01910000
COMPX_RACRC_STOR@ DS  AD         Address of RACF Return Code.           01920000
                  ORG COMPX_RACRC_STOR@                            @P2A 01930000
                  DS  A                                            @P2A 01940000
COMPX31_RACRC_STOR@ DS A                                           @P2A 01950000
*                                                                       01960000
COMPX_RACSC_ALET@ DS  AD         Address of ALET for RACF Reason Code.  01970000
                  ORG COMPX_RACSC_ALET@                            @P2A 01980000
                  DS  A                                            @P2A 01990000
COMPX31_RACSC_ALET@ DS A                                           @P2A 02000000
*                                                                       02010000
COMPX_RACSC_STOR@ DS  AD         Address of RACF Reason Code.           02020000
                  ORG COMPX_RACSC_STOR@                            @P2A 02030000
                  DS  A                                            @P2A 02040000
COMPX31_RACSC_STOR@ DS A                                           @P2A 02050000
*                                                                       02060000
COMPX_SERVR_PARMS DS  0C         Parameters for the service routines    02070000
*                                 start here.                           02080000
*                                                                       02090000
COMPX_LEN         EQU *-COMPX    Constant - Fixed length of the COMPX   02100000
*                                                                       02110000
*********************************************************************** 02120000
*                                                                     * 02130000
*                CDDLX ASSEMBLER DECLARATIONS                         * 02140000
*---------------------------------------------------------------------* 02150000
*                                                                     * 02160000
*  DECLARATION NAME = CDDLX                                           * 02170000
*                                                                     * 02180000
*  DESCRIPTIVE NAME = CDSA DataLib Service parameters (64 bit)        * 02190000
*                                                                     * 02200000
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 02210000
*             list for the CDSA Datalib callable service              * 02220000
*********************************************************************** 02230000
                     ORG   COMPX_SERVR_PARMS  Follows common plist      02240000
*                                                                       02250000
CDDLX                DS  0C     Mapping for CDDLX                       02260000
*                                                                       02270000
*                                                                       02280000
CDDLX_FUNC@          DS  AD     Address of 1 byte input function        02290000
*                               code.  Constants for the function       02300000
*                               codes are supplied below                02310000
*                                                                       02320000
CDDLX_ATTRIBUTES@    DS  AD     Address of full word of input           02330000
*                               attributes                              02340000
*                                                                       02350000
CDDLX_USERID@        DS  AD     Address of a 9 byte input area          02360000
*                               for the RACF userid (1 byte for the     02370000
*                               length followed by 8 bytes for          02380000
*                               the RACF userid itself).  A length      02390000
*                               of 0 indicates the current user is      02400000
*                               the ring owner                          02410000
*                                                                       02420000
CDDLX_RING@          DS  AD     Address of a variable length input area 02430000
*                               for the ring name (1 byte for the       02440000
*                               length followed by up to 237 bytes for  02450000
*                               the ring name).  Parameter ignored      02460000
*                               for functions CheckStatus, AbortQuery,  02470000
*                               and DataGetNext.                        02480000
*                                                                       02490000
CDDLX_VERSION@       DS  AD     Address of a 4 byte area containing the 02500000
*                               input version number for function       02510000
*                               specific parameter list pointed to by   02520000
*                               CDDLX_PARMLIST@. Must be set to 0.      02530000
*                                                                       02540000
CDDLX_PARMLIST@      DS  AD     Address of the input function specific  02550000
*                               parameter list                          02560000
CDDLX_LEN          EQU *-CDDLX  Constant - fixed length of CDDLX        02570000
*                                                                       02580000
*---------------------------------------------------------------------* 02590000
*                                                                       02600000
*   Parameter Count Constant                                            02610000
*                                                                       02620000
*---------------------------------------------------------------------* 02630000
CDDLX_PARMCNT        EQU X'0000000E'  Number of parameters expected     02640000
*                                                                       02650000
*---------------------------------------------------------------------* 02660000
*                                                                       02670000
*   Function Code Constants                                             02680000
*                                                                       02690000
*---------------------------------------------------------------------* 02700000
CDDLX_DATA_GET_FIRST EQU X'01'  DataGetFirst - locate and return        02710000
*                               the first certificate in the ring       02720000
*                               matching the specified criteria         02730000
CDDLX_DATA_GET_NEXT  EQU X'02'  DataGetNext - locate and return the     02740000
*                               next certificate in the ring matching   02750000
*                               the same criteria specified in the      02760000
*                               previous DataGetFirst/DataGetNext       02770000
*                               call                                    02780000
CDDLX_DATA_ABORT     EQU X'03'  DataAbortQuery - free resources         02790000
*                               from previous DataGetFirst or           02800000
*                               DataGetNext call                        02810000
CDDLX_CHECK_STATUS   EQU X'04'  CheckStatus - return the TRUST/NOTRUST  02820000
*                               status for a given certificate          02830000
CDDLX_GET_UPDATE_CODE EQU X'05' GetUpdateCode - returns the sequence    02840000
*                               number for a ring                       02850000
CDDLX_INC_SER_NUM    EQU X'06'  IncSerialNum - Increments the Serial    02860000
*                               Number for a Digital Certificate        02870000
CDDLX_NEW_RING       EQU X'07'  Create a new key ring or remove all     02880000
*                               certificates from an existing key       02890000
*                               ring                               @L3A 02900000
CDDLX_DATA_PUT       EQU X'08'  Add a certificate to RACF and connect   02910000
*                               it to a key ring                   @L3A 02920000
CDDLX_DATA_REMOVE    EQU X'09'  Remove a cert from a key ring and       02930000
*                               optionally delete it from RACF     @L3A 02940000
CDDLX_DEL_RING       EQU X'0A'  Delete a key ring                  @L3A 02950000
CDDLX_DATA_REFRESH   EQU X'0B'  Refresh the DIGTCERT class         @L4A 02960000
CDDLX_DATA_ALTER     EQU X'0C'  Change the status and/or the label of   02970000
*                               a certificate                      @LDA 02980000
CDDLX_GET_RING_INFO  EQU X'0D'  Return key ring information        @LEA 02990006
*                                                                       03000000
*                                                                       03010000
*   Attributes Word Bit Mapping (pointed to by CDDLX_ATTRIBUTES@)       03020000
*                                                                       03030000
CDDLX_ATT_ALL_KEYTYPES EQU X'80000000' -     Valid only for             03040000
*                                            DataGetFirst and           03050000
*                                            DataGetNext                03060000
*                                     - OFF- private key type returned  03070000
*                                            will be CDDLX_ICSF (for    03080000
*                                            ICSF or PCICC) or          03090000
*                                            CDDLX_PKCS1 (for all       03100000
*                                            others)                    03110000
*                                     - ON - private key type returned  03120000
*                                            will be CDDLX_ICSF,        03130000
*                                            CDDLX_PKCS1,               03140000
*                                            CDDLX_PCICC,               03150000
*                                            CDDLX_DSA,                 03160000
*                                            CDDLX_DH, CDDLX_ECC,       03170000
*                                            CDDLX_ECC_ICSF,            03180000
*                                            CDDLX_RSA_TKDS,            03190000
*                                            CDDLX_ECC_TKDS,            03200000
*                                            CDDLX_DSA_TKDS        @LBC 03210000
CDDLX_ATT_REUSE_RING   EQU X'80000000' - Valid for function NewRing     03220000
*                                       OFF: Indicates a new key ring   03230000
*                                            is to be created (don't    03240000
*                                            reuse existing ring)       03250000
*                                       ON: Indicates that if ring      03260000
*                                           exists, all certs are       03270000
*                                           removed.               @L3A 03280000
*                                                                       03290000
CDDLX_ATT_TRUST        EQU X'80000000' - Valid for DataPut              03300000
*                                       and DataAlter function          03310000
*                                       OFF: Indicate RACF will         03320000
*                                            determine status of        03330000
*                                            certificate.               03340000
*                                       ON: Indicates that the status   03350000
*                                           of the added certificate    03360000
*                                           should be set to TRUST @LDC 03370008
*                                                                       03380000
CDDLX_ATT_HIGHTRUST    EQU X'40000000' - Valid for DataPut              03390000
*                                       and DataAlter function          03400000
*                                       OFF: Indicate RACF will         03410000
*                                            determine status of        03420000
*                                            certificate.               03430000
*                                       ON: Indicates that the status   03440000
*                                           of the added certificate    03450000
*                                           should be set to HIGHTRUST  03460000
*                                                                  @LDC 03470008
*                                                                       03480000
CDDLX_ATT_NOTRUST      EQU X'20000000' - Valid for DataPut              03490000
*                                       and DataAlter function          03500000
*                                       OFF: Indicate RACF will         03510000
*                                            determine status of        03520000
*                                            certificate.               03530000
*                                       ON: Indicates that the status   03540000
*                                           of the added certificate    03550000
*                                           should be set to NOTRUST    03560000
*                                                                  @LDA 03570000
*                                                                       03580000
CDDLX_ATT_DEL_CERT_TOO EQU X'80000000' - Valid for DataRemove function  03590000
*                                       OFF: Indicates the certificate  03600000
*                                            is to be removed from the  03610000
*                                            key ring only              03620000
*                                       ON: Indicates the certificate   03630000
*                                           is to be deleted from RACF  03640000
*                                           in sddition to being        03650000
*                                           removed from the keyring    03660000
*                                           as long as it is not        03670000
*                                           connected to any other key  03680000
*                                           rings                  @L3A 03690000
CDDLX_ATT_DEL_CERT_ALLRINGS EQU X'40000000' - Valid for DataRemove      03700000
*                                       OFF: Indicates the certificate  03710000
*                                            is not to be deleted from  03720000
*                                            RACF if it is connected    03730000
*                                            to other key rings         03740000
*                                       ON: Indicates the certificate   03750000
*                                           is to be deleted from RACF  03760000
*                                           even if it is connected     03770000
*                                           to other key rings     @LDA 03780000
CDDLX_ATT_DEL_CERT_FORCE EQU X'20000000' - Valid for DataRemove         03790000
*                                       OFF: Indicates the certificate  03800000
*                                            is not to be deleted from  03810000
*                                            RACF if has been used to   03820000
*                                            generate a request         03830000
*                                       ON: Indicates the certificate   03840000
*                                           is to be deleted from RACF  03850000
*                                           even if it has been used to 03860000
*                                           generate a request     @LDA 03870000
CDDLX_ATT_SKIPAUTH     EQU X'20000000' - Valid for DataGetFirst,        03880000
*                                           DataGetNext, CheckStatus    03890000
*                                           and GetUpdateCode functions 03900000
*                                       OFF: Indicate RACF              03910000
*                                            authorization check need   03920000
*                                            to be performed            03930000
*                                       ON: Indicate RACF authorization 03940000
*                                           check will be bypassed for  03950000
*                                           supervisor state or system  03960000
*                                           key caller when request is  03970000
*                                           for a RACF key ring (not    03980000
*                                           applicable to an ICSF       03990000
*                                           token)                 @L7C 04000000
CDDLX_ATT_SET_MIN_SERIAL EQU X'80000000' - Valid for IncSerialNum       04010000
*                                           function                    04020000
*                                       OFF: Indicate Serial Number is  04030000
*                                            to be incremented by one.  04040000
*                                       ON: Indicate the Serial number  04050000
*                                           will be incremented to the  04060000
*                                           input serial number.   @L8A 04070000
*                                                                       04080000
*********************************************************************** 04090000
*                                                                     * 04100000
*                GSEC ASSEMBLER DECLARATIONS                          * 04110000
*---------------------------------------------------------------------* 04120000
*                                                                     * 04130000
*  DECLARATION NAME = GSEC                                            * 04140000
*                                                                     * 04150000
*  DESCRIPTIVE NAME = Generic Security API parameters                 * 04160000
*                                                                     * 04170000
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 04180000
*             list for the Generic Security callable service      @L1A* 04190000
*********************************************************************** 04200000
                     ORG   COMPX_SERVR_PARMS  Follows common plist @L1A 04210000
*                                                                       04220000
GSEC                 DS  0C     Mapping for GSEC                   @L1A 04230000
*                                                                       04240000
GSEC_OPT@            DS  AD     Address of option word (reserved)  @L1A 04250000
                  ORG GSEC_OPT@                                    @P2A 04260000
                     DS  A                                         @P2A 04270000
GSEC31_OPT@          DS  A                                         @P2A 04280000
*                                                                       04290000
GSEC_FUNC@           DS  AD     Address of 2 byte input function   @L1A 04300000
                  ORG GSEC_FUNC@                                   @P2A 04310000
                     DS  A                                         @P2A 04320000
GSEC31_FUNC@         DS  A                                         @P2A 04330000
*                               code                               @L1A 04340000
GSEC_FUNC_COUNT@     DS  AD     Address of number of subparms      @L1A 04350000
                  ORG GSEC_FUNC_COUNT@                             @P2A 04360000
                     DS  A                                         @P2A 04370000
GSEC31_FUNC_COUNT@   DS  A                                         @P2A 04380000
*                                                                       04390000
GSEC_PARMLIST@       DS  AD     Address of the input function      @L1A 04400000
                  ORG GSEC_PARMLIST@                               @P2A 04410000
                     DS  A                                         @P2A 04420000
GSEC31_PARMLIST@     DS  A                                         @P2A 04430000
*                               specific parameter list            @L1A 04440000
GSEC_LEN           EQU *-GSEC   Constant - fixed length of GSEC    @L1A 04450000
*                                                                       04460000
*---------------------------------------------------------------------* 04470000
*                                                                       04480000
*   Parameter Count Constant                                            04490000
*                                                                  @L1A 04500000
*---------------------------------------------------------------------* 04510000
GSEC_PARMCNT         EQU X'0000000C'  Number of parms expected     @L1A 04520000
*                                                                       04530000
*---------------------------------------------------------------------* 04540000
*                                                                       04550000
*   Function Code Constants                                             04560000
*                                                                  @L1A 04570000
*---------------------------------------------------------------------* 04580000
GSEC_EXTRACT         EQU X'01'  Extract from token                 @L1A 04590000
*                                                                       04600000
GSEC_RETURN_NAME     EQU X'01'  ReturnName - Extract principal     @L1A 04610000
*                               name from token and retun it to    @L1A 04620000
*                               the invoker                        @L1A 04630000
*                                                                       04640000
GSEC_GSSAPI          EQU X'02'  Invoke GSS-API service             @L1A 04650000
*                                                                       04660000
GSEC_INIT_SEC_CONTEXT EQU X'01' Initiate security context          @L1A 04670000
*                                                                       04680000
GSEC_CONT_SEC_CONTEXT EQU X'02' Continue initiation of security    @L1A 04690000
*                                context                           @L1A 04700000
*                                                                       04710000
GSEC_ACC_SEC_CONTEXT   EQU X'03' Accept security context           @L1A 04720000
*                                                                       04730000
GSEC_DEL_SEC_CONTEXT   EQU X'04' Delete security context           @L1A 04740000
*                                                                       04750000
GSEC_REL_CRED          EQU X'05' Release credential                @L1A 04760000
*                                                                       04770000
GSEC_GET_MIC           EQU X'06' Get MIC for message               @L1A 04780000
*                                                                       04790000
GSEC_VER_MIC           EQU X'07' Verify MIC for message            @L1A 04800000
*                                                                       04810000
GSEC_WRAP_MSG          EQU X'08' Wrap message                      @L1A 04820000
*                                                                       04830000
GSEC_UNWRAP_MSG        EQU X'09' Unwrap message                    @L1A 04840000
*                                                                       04850000
GSEC_EXPORT_SEC_CONTEXT EQU X'0A' Export security context          @L1A 04860000
*                                                                       04870000
GSEC_IMPORT_SEC_CONTEXT EQU X'0B' Import security context          @L1A 04880000
*                                                                       04890000
GSEC_EXPORT_CRED       EQU X'0C' Import credential                 @L1A 04900000
*                                                                       04910000
GSEC_IMPORT_CRED       EQU X'0D' Export credential                 @L1A 04920000
*                                                                       04930000
GSEC_ACQUIRE_CRED      EQU X'0E' Acquire credential                @L1A 04940000
*                                                                       04950000
GSEC_PASSTICKET        EQU X'03' PassTicket operation              @P2A 04960000
*                                                                       04970000
GSEC_PASSTICKET_GEN    EQU X'01' PassTicket generate               @P2A 04980000
*                                                                       04990000
GSEC_PASSTICKET_EVAL   EQU X'02' PassTicket evaluate               @P2A 05000000
*                                                                       05010000
GSEC_PASSTICKET_EVLX   EQU X'03' PassTicket evaluate extended      @LGA 05020000
*                                                                       05020001
GSEC_PASSTICKET_GENX   EQU X'04' PassTicket generate extended      @LGA 05020002
*                                                                       05020003
*---------------------------------------------------------------------* 05020000
*                                                                     * 05030000
*   CDDLX Function Specific Parameter Lists                           * 05040000
*                                                                     * 05050000
*---------------------------------------------------------------------* 05060000
CDDLX_ABORT          DSECT      Parameter list for DataAbortQuery       05070000
CDDLX_PREV_HANDLE    DS  AD     Address of an input/output area         05080000
*                               from previous DataGetFirst or           05090000
*                               DataGetNext call                        05100000
*                                                                       05110000
CDDLX_GET_CERT       DSECT      Parameter list for DataGetFirst         05120000
*                               and DataGetNext                         05130000
CDDLX_RES_HANDLE     DS  AD     Address of input/output area            05140000
*                               mapped by CDDLX_HANDLE_MAP              05150000
CDDLX_CERT_USAGE     DS  CL4    4 byte output area containing           05160000
*                               certificate usage flags                 05170000
*                                x'00000000' - Usage is SITE            05180000
*                                x'00000002' - Usage is CERTAUTH        05190000
*                                x'00000008' - Usage is PERSONAL        05200000
*                                x'FFFFFFF5' - reserved bits must be    05210000
*                                              set to 0                 05220000
CDDLX_CERT_DEFAULT   DS  F      output default indicator.  Zero         05230000
*                               value indicates not default certificate 05240000
*                               for ring, non-zero indicates this is    05250000
*                               the default certificate.                05260000
CDDLX_CERT_LEN       DS  F      On input, contains the length of the    05270000
*                               certificate area pointed to by          05280000
*                               CDDLX_CERT_PTR. On output, contains the 05290000
*                               actual size of the certificate returned 05300000
*                               or 0 if no certificate returned.        05310000
                     DS  F      alignment                               05320000
CDDLX_CERT_PTR       DS  AD     Input value specifying address of       05330000
*                               output certificate data area            05340000
CDDLX_PK_LEN         DS  F      On input, contains size of private      05350000
*                               key area pointed to by CDDLX_PK_PTR.    05360000
*                               On output contains the length of the    05370000
*                               private returned at address             05380000
*                               CDDLX_PK_PTR or 0 if no private key     05390000
*                               was returned.                           05400000
                     DS  F      alignment                               05410000
CDDLX_PK_PTR         DS  AD     Input value specifying address of       05420000
*                               private key output data area            05430000
CDDLX_PK_TYPE        DS  F      Output value indicating type of private 05440000
*                               key. See constants below.               05450000
CDDLX_PK_BITSIZE     DS  F      Output value indicating the size        05460000
*                               of the private key modulus in bits      05470000
CDDLX_LABEL_LEN      DS  F      On input, contains the length of the    05480000
*                               field pointed to by CDDLX_LABEL_PTR,    05490000
*                               and must be at least 32.  On output,    05500000
*                               contains the length of the label        05510000
*                               returned at the address in              05520000
*                               CDDLX_LABEL_PTR, and will be 32 or      05530000
*                               less.                                   05540000
                     DS  F      alignment                               05550000
CDDLX_LABEL_PTR      DS  AD     Input value specifying the address      05560000
*                               of output area to be used for the       05570000
*                               label name.                             05580000
CDDLX_RACF_USERID    DS  CL9    Input value containing a 1 byte length  05590000
*                               followed by the certificate owning      05600000
*                               userid. The combination of the output   05610000
*                               label and this field uniquely identify  05620000
*                               a certificate                           05630000
                     DS  CL3    Reserved                                05640000
CDDLX_SDN_LEN        DS  F      On input, contains the length of the    05650000
*                               output buffer pointed to by             05660000
*                               CDDLX_SDN_PTR. On output, contains the  05670000
*                               length of the BER encoded Subject's     05680000
*                               Distinguished Name returned in          05690000
*                               CDDLX_SDN_LEN.                          05700000
CDDLX_SDN_PTR        DS  AD     Input value specifying the address of   05710000
*                               the output area to be used for the      05720000
*                               Subject's Distinguished Name.           05730000
CDDLX_RECID_LEN      DS  F      Output value containing the length of   05740000
*                               the record ID returned in area pointed  05750000
*                               to by CDDLX_RECID_PTR, or 0 if no       05760000
*                               record returned.  This value must be    05770000
*                               preserved for subsequent calls to       05780000
*                               DataGetNext and DataAbortQuery          05790000
                     DS  F      alignment                               05800000
CDDLX_RECID_PTR      DS  AD     Input value specifying address of a     05810000
*                               246 byte area to contain output         05820000
*                               record ID data.   This value must be    05830000
*                               preserved for subsequent calls to       05840000
*                               DataGetNext and DataAbortQuery          05850000
CDDLX_STATUS         DS  CL4    Certificate status                      05860000
*                                x'80000000' - TRUST                    05870000
*                                x'40000000' - HIGHTRUST                05880000
*                                x'20000000' - NOTRUST                  05890000
*                                x'00000000' - ANY (input only)    @LDA 05900000
CDDLX_CRT_STATUS     DSECT      Parameter list for CheckStatus          05910000
CDDLX_CRT_LEN        DS  F      Input area containing the length of the 05920000
*                               certificate area pointed to by          05930000
*                               CDDLX_CRT_PTR.                          05940000
                     DS  F      alignment                               05950000
CDDLX_CRT_PTR        DS  AD     Input value specifying address of       05960000
*                               output certificate data area            05970000
CDDLX_GET_UPDATE     DSECT      Parameter list for                      05980000
*                               GetUpdateCode                           05990000
CDDLX_RING_SEQN      DS  F      Ring sequence number                    06000000
*                                                                       06010000
CDDLX_ISN            DSECT      Parm List for IncSerialNum              06020000
CDDLX_ISN_CLEN       DS  F      Length of DER Encoded input             06030000
*                               Digital Certificate                     06040000
                     DS  F      alignment                               06050000
CDDLX_ISN_CPTR       DS  AD     Address of DER Encoded input            06060000
*                               Digital Certificate                     06070000
CDDLX_ISN_SERNUM     DS  CL8    Output - Incremented Serial Number      06080000
*                                        of Digital Certificate         06090000
*                                                                       06100000
*---------------------------------------------------------------------* 06110000
*                                                                     * 06120000
*   Function specific parameter list for R_Datalib DataPut function   * 06130000
*                                                                     * 06140000
*---------------------------------------------------------------------* 06150000
CDDLX_PUT_CERT       DSECT      FSPL for DataPut function code     @L3A 06160000
CDDLX_PCERT_USAGE    DS  CL4    4 byte input area containing            06170000
*                               certificate usage flags                 06180000
*                                x'00000000' - Usage is SITE            06190000
*                                x'00000002' - Usage is CERTAUTH        06200000
*                                x'00000008' - Usage is PERSONAL        06210000
*                                x'80000000' - Usage is defaulted to    06220000
*                                              the usage of the cert    06230000
*                                x'7FFFFFF5' - reserved bits must be    06240000
*                                              set to 0            @L3A 06250000
CDDLX_PCERT_DEFAULT  DS  F      input default cert indicator. Non-zero  06260000
*                               value indicates input certificate       06270000
*                               is to made the default cert for         06280000
*                               the ring, zero indicates to not set     06290000
*                               the certificate as the default     @L3A 06300000
CDDLX_PCERT_LEN      DS  F      Input value containing the length of    06310000
*                               the certificate pointed to by           06320000
*                               CDDLX_PCERT_PTR.                   @L3A 06330000
                     DS  F      Alignment Word.                    @L3A 06340000
CDDLX_PCERT_PTR      DS  AD     Input value specifying address of       06350000
*                               input certificate data area        @L3A 06360000
CDDLX_PKEY_LEN       DS  F      Input value containing the size of      06370000
*                               the private key pointed to by the       06380000
*                               CDDLX_PKEY_PTR. A value of zero         06390000
*                               indicates a private key is not being    06400000
*                               added.                             @L3A 06410000
                     DS  F      Alignment Word.                    @L3A 06420000
CDDLX_PKEY_PTR       DS  AD     Input value specifying address of       06430000
*                               private key, ignored if CDDLX_PKEY_LEN  06440000
*                               value is zero.                     @L3A 06450000
CDDLX_PLABEL_LEN     DS  F      On input, it contains the length of     06460000
*                               the label to be assigned to the added   06470000
*                               certificate. On output, it contains     06480000
*                               the length of the label of the existing 06490000
*                               certificate if the input certificate    06500000
*                               is already installed in RACF.      @L3A 06510000
                     DS  F      Alignment Word.                    @L3A 06520000
CDDLX_PLABEL_PTR     DS  AD     On input, it contains the address of    06530000
*                               the label area. On output, it contains  06540000
*                               the label of the existing certificate   06550000
*                               if the input certificate is already     06560000
*                               installed in RACF. The label area must  06570000
*                               be 32 bytes.                       @L3A 06580000
CDDLX_PCERT_USERID   DS  CL9    On input, it indicates the owner of     06590000
*                               the certificate, in the format of a     06600000
*                               1 byte length followed by the user ID.  06610000
*                               On output it contains the owner of      06620000
*                               the existing certificate if the input   06630000
*                               certificate is already installed in     06640000
*                               RACF. The 1 byte length must be 8 and   06650000
*                               the user ID must be left-justified and  06660000
*                               padded with blanks.                @L3A 06670000
                     DS  CL3    Reserved space                     @L3A 06680000
*                                                                       06690000
*---------------------------------------------------------------------* 06700000
*                                                                     * 06710000
*   Function specific parameter list for R_Datalib DataRemove function* 06720000
*                                                                     * 06730000
*---------------------------------------------------------------------* 06740000
CDDLX_REMOVE_CERT    DSECT      FSPL for DataRemove function code  @L3A 06750000
CDDLX_RLABEL_LEN     DS  F      A 4 byte input value contains the       06760000
*                               length of the label of the certificate  06770000
*                               to be removed pointed by                06780000
*                               CDDLX_RLABEL_PTR                   @L3A 06790000
                     DS  F      Alignment Word.                    @L3A 06800000
CDDLX_RLABEL_PTR     DS  AD     An input value contains the address     06810000
*                               of the label  of the certificate to     06820000
*                               be removed                         @L3A 06830000
CDDLX_RCERT_USERID   DS  CL9    A 9 byte input value indicates the      06840000
*                               owner of the certificate to be          06850000
*                               removed, in the format of a 1 byte      06860000
*                               length followed by the user ID. The     06870000
*                               1 byte length must be 8 and the user    06880000
*                               ID must be left-justified and padded    06890000
*                               with blanks.                       @L3A 06900000
                     DS  CL3    Reserved space                     @L3A 06910000
*                                                                       06920000
*---------------------------------------------------------------------* 06930000
*                                                                     * 06940000
*   Function specific parameter list for R_Datalib DataAlter function * 06950000
*                                                                     * 06960000
*---------------------------------------------------------------------* 06970000
CDDLX_ALTER_CERT     DSECT      FSPL for DataAlter function code   @LDA 06980000
CDDLX_ALABEL_LEN     DS  F      A 4 byte value containing the length    06990000
*                               of the input certificate label.    @LDA 07000000
                     DS  F      Alignment Word.                    @P3A 07010003
CDDLX_ALABEL_PTR     DS  AD     A value containing the address of the   07020003
*                               input certificate label.           @P3C 07030003
CDDLX_ANEW_LABEL_LEN DS  F      A 4 byte value containing the length    07040000
*                               of the new label which will be assigned 07050000
*                               to the certificate. A zero indicates    07060000
*                               that the change is not on the           07070000
*                               label.                             @LDA 07080000
                     DS  F      Alignment Word.                    @P3A 07090003
CDDLX_ANEW_LABEL_PTR DS  AD     A value containing the address of the   07100003
*                               new certificate label. This field is    07110000
*                               ignored if CDDLX_ANEW_LABEL_LEN is      07120000
*                               zero.                              @P3C 07130003
CDDLX_ACERT_USERID   DS  CL9    A 9 byte input value indicating         07140000
*                               the owner of the certificate, in        07150000
*                               the format of a 1 byte length           07160000
*                               followed by the user ID.  The 1         07170000
*                               byte length must be 8 and the user      07180000
*                               ID must be left-justified and           07190000
*                               padded with blanks. For CERTAUTH        07200000
*                               certificates, this parameter            07210000
*                               should be set to either 'irrcerta'      07220000
*                               or '*AUTH*'. For SITE                   07230000
*                               certificates, this parameter            07240000
*                               should be set to either 'irrsitec'      07250000
*                               or '*SITE*'. If the length is           07260000
*                               zero, the caller's ID is used.     @LDA 07270000
                     DS  CL3    Reserved space                          07280000
*                                                                       07290001
*---------------------------------------------------------------------* 07300001
*                                                                     * 07310001
*   Function specific parameter list for R_Datalib GetRingInfo        * 07320001
*                                                                     * 07330001
*---------------------------------------------------------------------* 07340001
CDDLX_GET_RING       DSECT      FSPL for GetRingInfo function code @LEA 07350006
CDDLX_RING_SRCH_TYPE DS  CL4    A 4 byte input value which              07360001
*                               identifies more rings to be             07370001
*                               returned  when both ring owner          07380001
*                               and ring name are specified             07390001
*                               x'00000000' - Return just the ring      07400011
*                                             with the specified        07410011
*                                             ring owner and ring       07420011
*                                             name                      07430011
*                               x'00000001' - Return all rings          07440001
*                                             after the ring            07450010
*                                             specified by ring         07460010
*                                             owner and ring name       07470010
*                               x'00000002' - Return all rings          07480010
*                                             with the same owner       07490010
*                                             after the ring            07500010
*                                             specified by ring         07510010
*                                             owner and ring name       07520010
*                               x'00000003' - Return all rings          07530010
*                                             with the same name        07540010
*                                             after the ring            07550010
*                                             specified by ring         07560010
*                                             owner and ring name   LEA 07570010
CDDLX_RING_RES_LEN   DS  F      A 4 byte value containing               07580001
*                               the size of the field pointed           07590001
*                               to by Ring_result_ptr              @LEA 07600006
CDDLX_RING_RES_PTR   DS  AD     An input value containing the           07610004
*                               address of the ring result              07620001
*                               area                               @LEA 07630006
*                                                                       07640000
*---------------------------------------------------------------------* 07650000
*                                                                       07660000
*   Private Key Type Constants returned in CDDLX_PK_TYPE                07670000
*                                                                       07680000
CDDLX_PKCS1          EQU 1      Private key is PKCS#1 DER encoded  @L9A 07690000
* The following constant, CDDLX_PKCS10, should not be used, as its @L9A 07700000
* name is misleading.  It is kept strictly for compatibility.      @L9A 07710000
* Instead use CDDLX_PKCS1.                                         @L9A 07720000
CDDLX_PKCS10         EQU 1      Private key is PKCS#1 DER encoded       07730000
CDDLX_ICSF           EQU 2      Private key is a ICSF token             07740000
* The following constant, CDDLX_ICSF10, should not be used, as its @L9A 07750000
* name is misleading.  It is kept strictly for compatibility.      @L9A 07760000
* Instead use CDDLX_ICSF.                                          @L9A 07770000
CDDLX_ICSF10         EQU 2      Alias of private key is ICSF token @P2A 07780000
CDDLX_PCICC          EQU 3      Private key is a PCICC token label      07790000
CDDLX_DSA            EQU 4      Private key is DSA                 @L9A 07800000
CDDLX_DH             EQU 6      Private key is Diffie-Hellman      @L9A 07810000
CDDLX_ECC            EQU 7      Private key is ECC                 @L9A 07820000
CDDLX_ECC_ICSF       EQU 9      Private key is PKDS token for ECC  @LBC 07830000
CDDLX_RSA_TKDS       EQU 11     Private key is TKDS token for RSA  @LBA 07840000
CDDLX_ECC_TKDS       EQU 13     Private key is TKDS token for ECC  @LBA 07850000
CDDLX_DSA_TKDS       EQU 14     Private key is TKDS token for DSA  @LBA 07860000
*---------------------------------------------------------------------* 07870000
*                                                                     * 07880000
*    Mapping of input/output area pointed to by CDDLX_RES_HANDLE      * 07890000
*                                                                     * 07900000
*---------------------------------------------------------------------* 07910000
CDDLX_HANDLE_MAP     DSECT      Mapping of area pointed to by           07920000
*                               CDDLX_RES_HANDLE & CDDLX_PREV_HANDLE    07930000
CDDLX_TOKEN          DS  F      Reserved for use by the security        07940000
*                               server.  This value must be preserved   07950000
*                               for subsequent calls to DataGetNext     07960000
*                               and DataAbortQuery                      07970000
CDDLX_PREDICATES     DS  F      Input value specifying the selection    07980000
*                               criteria.  See constants below          07990000
CDDLX_ATTR_ID        DS  F      Input value specifying the attribute    08000000
*                               to query on.  Ignored if                08010000
*                               CDDLX_PREDICATES is 0. See constants    08020000
*                               below for possible values.              08030000
CDDLX_ATTR_LEN       DS  F      Input value containing the length       08040000
*                               of the attributes supplied in           08050000
*                               CDDLX_ATTR_PTR                          08060000
CDDLX_ATTR_PTR       DS  AD     Input value containing the address      08070000
*                               of query attribute data.  Type of       08080000
*                               data supplied determined by             08090000
*                               CDDLX_ATTR_ID                           08100000
*---------------------------------------------------------------------* 08110000
*                                                                       08120000
*   Input selection criteria constants supplied in CDDLX_PREDICATES     08130000
*                                                                       08140000
CDDLX_NONE           EQU 0      No selection criteria                   08150000
CDDLX_ATTR           EQU 1      Query on a particular attribute         08160000
*---------------------------------------------------------------------* 08170000
*                                                                       08180000
*   Input query attributes supplied in CDDLX_ATTR_ID                    08190000
*                                                                       08200000
CDDLX_LABEL          EQU 1      The certificate label, up to 32         08210000
*                               characters long                         08220000
CDDLX_DEFAULT        EQU 2      The default flag, a 4 byte field        08230000
*                               specified as 0 for NO, or a             08240000
*                               non-zero value for YES                  08250000
CDDLX_SUBJECT        EQU 3      BER encoded subjects name               08260000
*---------------------------------------------------------------------* 08270002
*                                                                       08280002
*   Input selection criteria supplied in CDDLX_RING_SRCH_TYPE      @LEA 08290006
*                                                                       08300002
CDDLX_ONE_RING       EQU 0      Return just the ring with the           08310002
*                               specified ring owner and ring name @LEA 08320006
CDDLX_ALL_RINGS      EQU 1      Return all rings after the ring         08330011
*                               specified by ring owner and ring        08340011
*                               name                               @LEA 08350011
CDDLX_SAME_OWNER     EQU 2      Return all rings with the same owner    08360011
*                               after the ring specifed by ring         08370011
*                               owner and ring name                @LEA 08380011
CDDLX_SAME_NAME      EQU 3      Return all rings with the same name     08390011
*                               after the ring specified by ring        08400011
*                               owner and ring name                @LEA 08410006
*---------------------------------------------------------------------* 08420000
*                                                                       08430000
*                                                                       08440000
*---------------------------------------------------------------------* 08450000
*                                                                     * 08460000
*   GSEC Function Specific Parameter Lists                            * 08470000
*                                                                 @L1A* 08480000
*---------------------------------------------------------------------* 08490000
GSEC_RETNAME         DSECT      Parameter list for Return name     @L1A 08500000
GSEC_RET_FUNC@        DS  AD    Address of function code word      @L1A 08510000
GSEC_RET_CRED_LEN@    DS  AD    Address of an input token length   @P1C 08520000
GSEC_RET_INPUT_CRED@  DS  AD    Address of an input token          @P1C 08530000
GSEC_RET_OID@         DS  AD    Address of 24 byte reserved area   @P1A 08540000
GSEC_RET_TICKET_PRIN@ DS  AD    Address of area to contain 2 byte  @L1A 08550000
*                               length followed by returned        @L1A 08560000
*                               principal name (242 bytes)         @L1A 08570000
GSEC_RET_RC@          DS  AD    Address of function return code    @L1A 08580000
*                                                                       08590000
GSEC31_RETNAME         DSECT    Parameter list for Return name     @L1A 08600000
GSEC31_RET_FUNC@        DS  A   Address of function code word      @L1A 08610000
GSEC31_RET_CRED_LEN@    DS  A   Address of an input token length   @P1C 08620000
GSEC31_RET_INPUT_CRED@  DS  A   Address of an input token          @P1C 08630000
GSEC31_RET_OID@         DS  A   Address of 24 byte reserved area   @P1A 08640000
GSEC31_RET_TICKET_PRIN@ DS  A   Address of area to contain 2 byte  @L1A 08650000
*                               length followed by returned        @L1A 08660000
*                               principal name (242 bytes)         @L1A 08670000
GSEC31_RET_RC@          DS  A   Address of function return code    @L1A 08680000
*                                                                       08690000
*                                                                       08700000
GSEC_GSSAPI_COMMON     DSECT    Common parms for GSSAPI functions  @L1A 08710000
GSEC_GSS_FUNC@       DS  AD     Address of function code word      @L1A 08720000
GSEC_GSS_MAJOR@      DS  AD     Address of area for returned major @L1A 08730000
*                               status                             @L1A 08740000
GSEC_GSS_MINOR@      DS  AD     Address of area for returned minor @L1A 08750000
*                               status                             @L1A 08760000
GSEC_GSS_ACEE@       DS  AD     Address of ACEE                    @L1A 08770000
*                                                                       08780000
GSEC31_GSSAPI_COMMON   DSECT    Common parms for GSSAPI functions  @L1A 08790000
GSEC31_GSS_FUNC@       DS  A    Address of function code word      @L1A 08800000
GSEC31_GSS_MAJOR@      DS  A    Address of area for returned major @L1A 08810000
*                               status                             @L1A 08820000
GSEC31_GSS_MINOR@      DS  A    Address of area for returned minor @L1A 08830000
*                               status                             @L1A 08840000
GSEC31_GSS_ACEE@       DS  A    Address of ACEE                    @L1A 08850000
*                                                                       08860000
*                                                                       08870000
GSEC_INITSECCONTEXT DSECT       Parameter list for Initiate        @L1A 08880000
*                               Securty context                    @L1A 08890000
                      DS 4AD    Common parms                       @L1A 08900000
GSEC_INIT_TGT_PRIN@   DS AD     Address of target principal        @L1A 08910000
GSEC_INIT_REQ_FLAGS@ DS AD      Address of request flags           @L1A 08920000
GSEC_INIT_REQ_EXPIRE@ DS AD     Address of requested context       @L1A 08930000
*                               expiration                         @L1A 08940000
GSEC_INIT_CRED_HNDL@ DS AD      Address of credential handle       @L1A 08950000
GSEC_INIT_CNTXT_HNDL@ DS AD     Address of returned context handle @L1A 08960000
GSEC_INIT_RET_FLAGS@ DS AD      Address of area for return flags   @L1A 08970000
GSEC_INIT_CNTXT_EXPIRE@ DS AD   Address of area for actual context @L1A 08980000
*                               expiration                         @L1A 08990000
GSEC_INIT_OUT_TOKEN@ DS AD      Address of returned token          @L1A 09000000
*                                                                       09010000
GSEC31_INITSECCONTEXT DSECT     Parameter list for Initiate        @L1A 09020000
*                               Securty context                    @L1A 09030000
                        DS 4A   Common parms                       @L1A 09040000
GSEC31_INIT_TGT_PRIN@   DS A    Address of target principal        @L1A 09050000
GSEC31_INIT_REQ_FLAGS@ DS A     Address of request flags           @L1A 09060000
GSEC31_INIT_REQ_EXPIRE@ DS A    Address of requested context       @L1A 09070000
*                               expiration                         @L1A 09080000
GSEC31_INIT_CRED_HNDL@ DS A     Address of credential handle       @L1A 09090000
GSEC31_INIT_CNTXT_HNDL@ DS A    Address of returned context handle @L1A 09100000
GSEC31_INIT_RET_FLAGS@ DS A     Address of area for return flags   @L1A 09110000
GSEC31_INIT_CNTXT_EXPIRE@ DS A  Address of area for actual context @L1A 09120000
*                               expiration                         @L1A 09130000
GSEC31_INIT_OUT_TOKEN@ DS A     Address of returned token          @L1A 09140000
*                                                                       09150000
*                                                                       09160000
GSEC_CONTSECCONTEXT DSECT       Parameter list for Continue        @L1A 09170000
*                               initiation of security context     @L1A 09180000
                      DS 4AD    Common parms                       @L1A 09190000
GSEC_CONT_CNTXT_HNDL@ DS AD     Address of context handle          @L1A 09200000
GSEC_CONT_TOKLN@      DS AD     Address of token length            @L1A 09210000
GSEC_CONT_TOKEN@      DS AD     Address of acceptor context token  @L1A 09220000
GSEC_CONT_RET_FLAGS@  DS AD     Address of area for return flags   @L1A 09230000
GSEC_CONT_EXPIRE@     DS AD     Address of area for actual context @L1A 09240000
*                               expiration                         @L1A 09250000
*                                                                       09260000
GSEC31_CONTSECCONTEXT DSECT     Parameter list for Continue        @L1A 09270000
*                               initiation of security context     @L1A 09280000
                      DS 4A     Common parms                       @L1A 09290000
GSEC31_CONT_CNTXT_HNDL@ DS A    Address of context handle          @L1A 09300000
GSEC31_CONT_TOKLN@      DS A    Address of token length            @L1A 09310000
GSEC31_CONT_TOKEN@      DS A    Address of acceptor context token  @L1A 09320000
GSEC31_CONT_RET_FLAGS@  DS A    Address of area for return flags   @L1A 09330000
GSEC31_CONT_EXPIRE@     DS A    Address of area for actual context @L1A 09340000
*                               expiration                         @L1A 09350000
*                                                                       09360000
*                                                                       09370000
GSEC_ACCSECCONTEXT   DSECT      Parameter list for Accept security @L1A 09380000
*                               context                            @L1A 09390000
                      DS 4AD    Common parms                       @L1A 09400000
GSEC_ACC_TOKLN@       DS AD     Address of token length            @L1A 09410000
GSEC_ACC_TOKEN@       DS AD     Address of initiator context token @L1A 09420000
GSEC_ACC_CONTXT_HNDL@ DS AD     Address of returned context handle @L1A 09430000
GSEC_ACC_PRIN@        DS AD     Address of area for source         @L1A 09440000
*                               principal                          @L1A 09450000
GSEC_ACC_RET_FLAGS@   DS AD     Address of area for return flags   @L1A 09460000
GSEC_ACC_CNTXT_EXPIRE@ DS AD    Address of area for context        @L1A 09470000
*                               expiration                         @L1A 09480000
GSEC_ACC_OUT_TOKEN@   DS AD     Address of returned token          @L1A 09490000
GSEC_ACC_CRED_HNDL@   DS AD     Address of returned credential     @L1A 09500000
*                               handle                             @L1A 09510000
*                                                                       09520000
GSEC31_ACCSECCONTEXT   DSECT    Parameter list for Accept security @L1A 09530000
*                               context                            @L1A 09540000
                      DS 4A     Common parms                       @L1A 09550000
GSEC31_ACC_TOKLN@       DS A    Address of token length            @L1A 09560000
GSEC31_ACC_TOKEN@       DS A    Address of initiator context token @L1A 09570000
GSEC31_ACC_CONTXT_HNDL@ DS A    Address of returned context handle @L1A 09580000
GSEC31_ACC_PRIN@        DS A    Address of area for source         @L1A 09590000
*                               principal                          @L1A 09600000
GSEC31_ACC_RET_FLAGS@   DS A    Address of area for return flags   @L1A 09610000
GSEC31_ACC_CNTXT_EXPIRE@ DS A   Address of area for context        @L1A 09620000
*                               expiration                         @L1A 09630000
GSEC31_ACC_OUT_TOKEN@   DS A    Address of returned token          @L1A 09640000
GSEC31_ACC_CRED_HNDL@   DS A    Address of returned credential     @L1A 09650000
*                               handle                             @L1A 09660000
*                                                                       09670000
*                                                                       09680000
GSEC_DELSECCONTEXT   DSECT      Parameter list for Delete security @L1A 09690000
*                               context                            @L1A 09700000
                      DS 4AD    Common parms                       @L1A 09710000
GSEC_DEL_CNTXT_HNDL@ DS AD      Address of context handle          @L1A 09720000
*                                                                       09730000
GSEC31_DELSECCONTEXT   DSECT    Parameter list for Delete security @L1A 09740000
*                               context                            @L1A 09750000
                       DS 4A    Common parms                       @L1A 09760000
GSEC31_DEL_CNTXT_HNDL@ DS A     Address of context handle          @L1A 09770000
*                                                                       09780000
*                                                                       09790000
GSEC_RELCRED         DSECT      Parameter list for Releasxe        @L1A 09800000
*                               credential                         @L1A 09810000
                      DS 4AD    Common parms                       @L1A 09820000
GSEC_REL_CRED_HNDL@    DS AD    Address of credential handle       @L1A 09830000
*                                                                       09840000
GSEC31_RELCRED       DSECT      Parameter list for Releasxe        @L1A 09850000
*                               credential                         @L1A 09860000
                      DS 4A     Common parms                       @L1A 09870000
GSEC31_REL_CRED_HNDL@    DS A   Address of credential handle       @L1A 09880000
*                                                                       09890000
*                                                                       09900000
GSEC_GETMIC          DSECT      Paramater list for Get MIC for     @L1A 09910000
*                               message                            @L1A 09920000
                      DS 4AD    Common parms                       @L1A 09930000
GSEC_GET_CONTXT_HNDL@ DS AD     Address of context handle          @L1A 09940000
GSEC_GET_MSGLN@        DS AD    Address of message length          @L1A 09950000
GSEC_GET_MSG@          DS AD    Address of message                 @L1A 09960000
GSEC_GET_OUT_TOK@      DS AD    Address of returned token          @L1A 09970000
*                                                                       09980000
GSEC31_GETMIC        DSECT      Paramater list for Get MIC for     @L1A 09990000
*                               message                            @L1A 10000000
                      DS 4A     Common parms                       @L1A 10010000
GSEC31_GET_CONTXT_HNDL@ DS A    Address of context handle          @L1A 10020000
GSEC31_GET_MSGLN@        DS A   Address of message length          @L1A 10030000
GSEC31_GET_MSG@          DS A   Address of message                 @L1A 10040000
GSEC31_GET_OUT_TOK@      DS A   Address of returned token          @L1A 10050000
*                                                                       10060000
*                                                                       10070000
GSEC_VERMIC          DSECT      Parameter list for Verify MIC for  @L1A 10080000
*                               message                                 10090000
                      DS 4AD    Common parms                       @L1A 10100000
GSEC_VER_CONTXT_HNDL@ DS AD     Address of context handle          @L1A 10110000
GSEC_VER_MSGLN@        DS AD    Address of message length          @L1A 10120000
GSEC_VER_MSG@          DS AD    Address of message                 @L1A 10130000
GSEC_VER_TOKLN@        DS AD    Address of length of token         @L1A 10140000
GSEC_VER_TOKEN@        DS AD    Address of token                   @L1A 10150000
*                                                                       10160000
GSEC31_VERMIC        DSECT      Parameter list for Verify MIC for  @L1A 10170000
*                               message                                 10180000
                      DS 4A     Common parms                       @L1A 10190000
GSEC31_VER_CONTXT_HNDL@ DS A    Address of context handle          @L1A 10200000
GSEC31_VER_MSGLN@        DS A   Address of message length          @L1A 10210000
GSEC31_VER_MSG@          DS A   Address of message                 @L1A 10220000
GSEC31_VER_TOKLN@        DS A   Address of length of token         @L1A 10230000
GSEC31_VER_TOKEN@        DS A   Address of token                   @L1A 10240000
*                                                                       10250000
*                                                                       10260000
GSEC_WRAPMSG         DSECT      Parameter list for Wrap a message  @L1A 10270000
                      DS 4AD    Common parms                       @L1A 10280000
GSEC_WRAP_CONTXT_HNDL@ DS AD    Address of context handle          @L1A 10290000
GSEC_WRAP_REQ_FLAG@    DS AD    Address of conf-identiality        @L1A 10300000
*                               request flag                       @L1A 10310000
GSEC_WRAP_MSGLN@       DS AD    Address of message length          @L1A 10320000
GSEC_WRAP_MSG@         DS AD    Address of message                 @L1A 10330000
GSEC_WRAP_STATE@       DS AD    Address of area for                @L1A 10340000
*                               conf-identiality state             @L1A 10350000
GSEC_WRAP_OUT_TOK@     DS AD    Address of returned token          @L1A 10360000
*                                                                       10370000
GSEC31_WRAPMSG       DSECT      Parameter list for Wrap a message  @L1A 10380000
                      DS 4A     Common parms                       @L1A 10390000
GSEC31_WRAP_CONTXT_HNDL@ DS A   Address of context handle          @L1A 10400000
GSEC31_WRAP_REQ_FLAG@    DS A   Address of conf-identiality        @L1A 10410000
*                               request flag                       @L1A 10420000
GSEC31_WRAP_MSGLN@       DS A   Address of message length          @L1A 10430000
GSEC31_WRAP_MSG@         DS A   Address of message                 @L1A 10440000
GSEC31_WRAP_STATE@       DS A   Address of area for                @L1A 10450000
*                               conf-identiality state             @L1A 10460000
GSEC31_WRAP_OUT_TOK@     DS A   Address of returned token          @L1A 10470000
*                                                                       10480000
*                                                                       10490000
GSEC_UNWRAPMSG       DSECT      Parameter list for Unwrap a msg    @L1A 10500000
                      DS 4AD    Common parms                       @L1A 10510000
GSEC_UNWRAP_CONTXT_HNDL@ DS AD  Address of context handle          @L1A 10520000
GSEC_UNWRAP_TOKLN@     DS AD    Address of token length            @L1A 10530000
GSEC_UNWRAP_TOKEN@     DS AD    Address of token                   @L1A 10540000
GSEC_UNWRAP_MSG@       DS AD    Address of returned message        @L1A 10550000
GSEC_UNWRAP_STATE@     DS AD    Address of area for                @L1A 10560000
*                               conf-identiality state             @L1A 10570000
*                                                                       10580000
GSEC31_UNWRAPMSG     DSECT      Parameter list for Unwrap a msg    @L1A 10590000
                      DS 4A     Common parms                       @P2C 10600000
GSEC31_UNWRAP_CONTXT_HNDL@ DS A Address of context handle          @L1A 10610000
GSEC31_UNWRAP_TOKLN@   DS A     Address of token length            @L1A 10620000
GSEC31_UNWRAP_TOKEN@   DS A     Address of token                   @L1A 10630000
GSEC31_UNWRAP_MSG@     DS A     Address of returned message        @L1A 10640000
GSEC31_UNWRAP_STATE@   DS A     Address of area for                @L1A 10650000
*                               conf-identiality state             @L1A 10660000
*                                                                       10670000
*                                                                       10680000
GSEC_EXPORTSECCONTEXT DSECT     Parameter list for Export security @L1A 10690000
*                               context                            @L1A 10700000
                      DS 4AD    Common parms                       @L1A 10710000
GSEC_EXPSEC_CONTXT_HNDL@ DS AD  Address of context handle          @L1A 10720000
GSEC_EXPSEC_OUT_TOK@   DS AD    Address of returned token          @L1A 10730000
*                                                                       10740000
GSEC31_EXPORTSECCONTEXT DSECT   Parameter list for Export security @L1A 10750000
*                               context                            @L1A 10760000
                      DS 4A     Common parms                       @L1A 10770000
GSEC31_EXPSEC_CONTXT_HNDL@ DS A Address of context handle          @L1A 10780000
GSEC31_EXPSEC_OUT_TOK@   DS A   Address of returned token          @L1A 10790000
*                                                                       10800000
*                                                                       10810000
GSEC_IMPORTSECCONTEXT DSECT     Parameter list for Import security @L1A 10820000
*                               context                            @L1A 10830000
                      DS 4AD    Common parms                       @L1A 10840000
GSEC_IMPSEC_TOKLN@     DS AD    Address of length of token         @L1A 10850000
GSEC_IMPSEC_TOKEN@     DS AD    Address of token                   @L1A 10860000
GSEC_IMPSEC_CONTXT_HNDL@ DS AD  Address of area for context handle @L1A 10870000
*                                                                       10880000
GSEC31_IMPORTSECCONTEXT DSECT   Parameter list for Import security @L1A 10890000
*                               context                            @L1A 10900000
                      DS 4A     Common parms                       @L1A 10910000
GSEC31_IMPSEC_TOKLN@     DS A   Address of length of token         @L1A 10920000
GSEC31_IMPSEC_TOKEN@     DS A   Address of token                   @L1A 10930000
GSEC31_IMPSEC_CONTXT_HNDL@ DS A Address of area for cntxt handle   @L1A 10940000
*                                                                       10950000
*                                                                       10960000
GSEC_EXPORTCRED      DSECT      Parameter list for Export          @L1A 10970000
*                               credential                         @L1A 10980000
                      DS 4AD    Common parms                       @L1A 10990000
GSEC_EXPCRD_CRED_HNDL@ DS AD    Address of credential handle       @L1A 11000000
GSEC_EXPCRD_OUT_TOK@   DS AD    Address of returned token          @L1A 11010000
*                                                                       11020000
GSEC31_EXPORTCRED    DSECT      Parameter list for Export          @L1A 11030000
*                               credential                         @L1A 11040000
                      DS 4A     Common parms                       @L1A 11050000
GSEC31_EXPCRD_CRED_HNDL@ DS A   Address of credential handle       @L1A 11060000
GSEC31_EXPCRD_OUT_TOK@   DS A   Address of returned token          @L1A 11070000
*                                                                       11080000
*                                                                       11090000
GSEC_IMPORTCRED      DSECT      Parameter list for Import          @L1A 11100000
*                               credential                         @L1A 11110000
                      DS 4AD    Common parms                       @L1A 11120000
GSEC_IMPCRD_TOKLN@     DS AD    Address of length of token         @L1A 11130000
GSEC_IMPCRD_TOKEN@     DS AD    Address of token                   @L1A 11140000
GSEC_IMPCRD_CRED_HNDL@ DS AD    Address of area for credential     @L1A 11150000
*                               handle                             @L1A 11160000
GSEC31_IMPORTCRED    DSECT      Parameter list for Import          @L1A 11170000
*                               credential                         @L1A 11180000
                      DS 4A     Common parms                       @L1A 11190000
GSEC31_IMPCRD_TOKLN@     DS A   Address of length of token         @L1A 11200000
GSEC31_IMPCRD_TOKEN@     DS A   Address of token                   @L1A 11210000
GSEC31_IMPCRD_CRED_HNDL@ DS A   Address of area for credential     @L1A 11220000
*                               handle                             @L1A 11230000
*                                                                       11240000
GSEC_ACQUIRECRED     DSECT      Parameter list for Acquire         @L1A 11250000
*                               initiator credential               @L1A 11260000
                      DS 4AD    Common parms                       @L1A 11270000
GSEC_ACQCRD_REQ_EXPIRE@ DS AD   Address of requested credential    @L1A 11280000
*                               expiration time                    @L1A 11290000
GSEC_ACQCRD_CRED_HNDL@ DS AD    Address of area for credential     @L1A 11300000
*                               handle                             @L1A 11310000
GSEC_ACQCRD_PRIN@      DS AD    Address of area for principal name @L1A 11320000
GSEC_ACQCRD_CRED_EXPIRE@ DS AD  Address of area for actual         @L1A 11330000
*                               credential expiration time         @L1A 11340000
*                                                                       11350000
GSEC31_ACQUIRECRED   DSECT      Parameter list for Acquire         @L1A 11360000
*                               initiator credential               @L1A 11370000
                      DS 4A     Common parms                       @L1A 11380000
GSEC31_ACQCRD_REQ_EXPIRE@ DS A  Address of requested credential    @L1A 11390000
*                               expiration time                    @L1A 11400000
GSEC31_ACQCRD_CRED_HNDL@ DS A   Address of area for credential     @L1A 11410000
*                               handle                             @L1A 11420000
GSEC31_ACQCRD_PRIN@      DS A   Address of area for principal name @L1A 11430000
GSEC31_ACQCRD_CRED_EXPIRE@ DS A Address of area for actual         @L1A 11440000
*                               credential expiration time         @L1A 11450000
GSEC_PASSTICKET_PARMS DSECT     Parameter list for PassTicket      @L2A 11460000
GSEC_TICKET_OPTIONS     DS AD   Address of Passticket option:      @L2A 11470000
*                                 1=generate, 2=evaluate           @L2A 11480000
GSEC_TICKET             DS AD   Address of source or destination   @L2A 11490000
*                                 PassTicket                       @L2A 11500000
GSEC_USERID             DS AD   Address of Userid for PassTicket   @L2A 11510000
*                                  operation                       @L2A 11520000
GSEC_APPLICATION        DS AD   Address of PassTicket              @L2A 11530000
GSEC31_PASSTICKET_PARMS DSECT   Parameter list for PassTicket      @L2A 11540000
GSEC31_TICKET_OPTIONS     DS A  Address of Passticket option:      @L2A 11550000
*                                 1=generate, 2=evaluate           @L2A 11560000
GSEC31_TICKET             DS A  Address of source or destination   @L2A 11570000
*                                 PassTicket                       @L2A 11580000
GSEC31_USERID             DS A  Address of Userid for PassTicket   @L2A 11590000
*                                  operation                       @L2A 11600000
GSEC31_APPLICATION        DS A  Address of PassTicket              @L2A 11610000
*                                                                  @L2A 11620000
*                                                                       11630000
                   MEND                                              */ 11640000
*                                                                       11650000
*                                                                       11660000
*                                                                       11670000
*                                                                       11680000
*                                                                       11690000
*                                                                       11700000
*                                                                       11710000
*/********************************************************************/ 11720000
*/********************************************************************/ 11730000
*/********************************************************************/ 11740000
*/*                                                                  */ 11750000
*/*                     COMPX   PL/X DECLARATIONS                    */ 11760000
*/*------------------------------------------------------------------*/ 11770000
*/*                                                                  */ 11780000
*/*   DECLARATION NAME = COMPX                                       */ 11790000
*/*                                                                  */ 11800000
*/*   DESCRIPTIVE NAME = OMVS common SAF/RACF parameter list.        */ 11810000
*/*                                                                  */ 11820000
*/*   FUNCTION = Provides PL/X mapping of the common input parameter */ 11830000
*/*              list for the   OMVS  SAF/RACF routers.              */ 11840000
*/*                                                                  */ 11850000
*/********************************************************************/ 11860000
*                                                                       11870000
* DECLARE                                                               11880000
*  1 COMPX BASED BDY(DWORD),     /* Common SAF/RACF plist.           */ 11890000
*                                                                       11900000
*   3 COMPX_PARMCNT@ PTR(64),    /* Addr of number of parameters     */ 11910000
*    4 * PTR(31),                                                       11920000
*    4 COMPX31_PARMCNT@ PTR(31),                                        11930000
*                                                                       11940000
*   3 COMPX_WORKA_STOR@ PTR(64), /* Addr of 1024 byte work area.     */ 11950000
*    4 * PTR(31),                                                       11960000
*    4 COMPX31_WORKA_STOR@ PTR(31),                                     11970000
*                                                                       11980000
*   3 COMPX_SAFRC_ALET@ PTR(64), /* Addr of ALET for SAF RC.         */ 11990000
*    4 * PTR(31),                                                       12000000
*    4 COMPX31_safrc_alet@ PTR(31),                                     12010000
*                                                                       12020000
*   3 COMPX_SAFRC_STOR@ PTR(64), /* Addr of SAF Return Code.         */ 12030000
*    4 * PTR(31),                                                       12040000
*    4 COMPX31_safrc_stor@ PTR(31),                                     12050000
*                                                                       12060000
*   3 COMPX_RACRC_ALET@ PTR(64), /* Addr of ALET for RACF Return Code*/ 12070000
*    4 * PTR(31),                                                       12080000
*    4 COMPX31_racrc_alet@ PTR(31),                                     12090000
*                                                                       12100000
*   3 COMPX_RACRC_STOR@ PTR(64), /* Addr of RACF Return Code.        */ 12110000
*    4 * PTR(31),                                                       12120000
*    4 COMPX31_racrc_stor@ PTR(31),                                     12130000
*                                                                       12140000
*   3 COMPX_RACSC_ALET@ PTR(64), /* Addr of ALET for RACF Reason Code*/ 12150000
*    4 * PTR(31),                                                       12160000
*    4 COMPX31_racsc_alet@ PTR(31),                                     12170000
*                                                                       12180000
*   3 COMPX_RACSC_STOR@ PTR(64), /* Addr of RACF Reason Code.        */ 12190000
*    4 * PTR(31),                                                       12200000
*    4 COMPX31_racsc_stor@ PTR(31),                                     12210000
*                                                                       12220000
* ] Set up magic for C header generation.  If we are not generating a   12220015
* ]  C header, the last part of COMPX is the COMPX_SERVR_PARM char(0)   12220030
* ]  declaration, and everything else is based or defined on            12220045
* ]  COMPX_SERVR_PARMS.  Each service has a separate mapping declared.  12220060
* %If Translate(IBM_CBGENC) ^= 'YES' %Then                    /* @LFA*/ 12220080
* %Do;                                                        /* @LFA*/ 12220100
*   3 COMPX_SERVR_PARMS CHAR(0);  /* Service routine parameter lists    12220120
*                                    begin here.                     */ 12220140
*   %COMPX_Lvl = '1';                                         /* @LFA*/ 12220160
*   %COMPX_Bas = 'Based(Addr(COMPX_SERVR_PARMS))';            /* @LFA*/ 12220180
*   %COMPX_Def = 'Defined(COMPX_SERVR_PARMS)';                /* @LFA*/ 12220200
*   %COMPX_Term = ';';                                        /* @LFA*/ 12220220
*   %COMPX_Dcl = 'Declare';                                   /* @LFA*/ 12220240
* %End;                                                       /* @LFA*/ 12220260
* ] If we are generating a                                              12220275
* ]  C header, the last part of COMPX_SERVR_PARMS is a UNION            12220290
* ]  declaration, and everything else is declared inside that           12220305
* ]  UNION, resulting in COMPX being a single, giant UNION of all       12220320
* ]   of the service parameter lists.                                   12220335
* %Else %Do;                                                  /* @LFA*/ 12220355
*   3 COMPX_SERVR_PARMS Union,    /* Service routine parameter lists    12220375
*                                    begin here.                 @LFA*/ 12220395
*   %COMPX_Lvl = '4';                                         /* @LFA*/ 12220415
*   %COMPX_Bas = '';                                          /* @LFA*/ 12220435
*   %COMPX_Def = '';                                          /* @LFA*/ 12220455
*   %COMPX_Term = ',';                                        /* @LFA*/ 12220475
*   %COMPX_Dcl = '';                                          /* @LFA*/ 12220495
* %End;                                                       /* @LFA*/ 12220515
*                                                                       12260000
*                                                                       12300000
*/********************************************************************/ 12310000
*/*                                                                  */ 12320000
*/*                CDDLX PL/X DECLARATIONS                           */ 12330000
*/*------------------------------------------------------------------*/ 12340000
*/*                                                                  */ 12350000
*/*  DECLARATION NAME = CDDLX                                        */ 12360000
*/*                                                                  */ 12370000
*/*  DESCRIPTIVE NAME =   CDSA DataLib Service parameters (64 bit)   */ 12380000
*/*                                                                  */ 12390000
*/*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter */ 12400000
*/*             list for the CDSA Datalib callable service           */ 12410000
*/********************************************************************/ 12420000
* COMPX_Dcl                                                             12430000
*  COMPX_Lvl CDDLX COMPX_Bas,     ] Mapping for CDDLX                   12440000
*   5 CDDLX_FUNC@      PTR(64),   /* Address of 1 byte input function   12450000
*                                    code.  Constants for the function  12460000
*                                    codes are supplied below        */ 12470000
*   5 CDDLX_ATTRIBUTES@ PTR(64),  /* Address of full word of input      12480000
*                                    attributes */                      12490000
*   5 CDDLX_USERID@    PTR(64),   /* Address of a 9 byte input area     12500000
*                                    for the RACF userid (1 byte for    12510000
*                                    the length followed by 8 bytes     12520000
*                                    for the RACF userid itself).       12530000
*                                    A length of 0 indicates the        12540000
*                                    current user is the ring owner  */ 12550000
*   5 CDDLX_RING@      PTR(64),   /* Address of a variable length       12560000
*                                    input area for the ring name       12570000
*                                    (1 byte for the length followed    12580000
*                                    by up to 237 bytes for the ring    12590000
*                                    name).  Parameter ignored for      12600000
*                                    CheckStatus, AbortQuery, and       12610000
*                                    DataGetNext                     */ 12620000
*   5 CDDLX_VERSION@   PTR(64),   /* Address of a 4 byte area           12630000
*                                    containing the input version       12640000
*                                    number for the function specific   12650000
*                                    specific parameter list pointed    12660000
*                                    to by CDDLX_PARMLIST@. Must be     12670000
*                                    set to 0.                       */ 12680000
*                                                                       12690000
*   5 CDDLX_PARMLIST@  PTR(64)    /* Address of the input function      12700000
*                                    specific parameter list         */ 12710000
*                                                                       12760000
*   COMPX_Term                                                          18550000
*/********************************************************************/ 18560000
*/*                                                                  */ 18570000
*/*                GSEC PL/X DECLARATIONS                            */ 18580000
*/*------------------------------------------------------------------*/ 18590000
*/*                                                                  */ 18600000
*/*  DECLARATION NAME = GSEC                                         */ 18610000
*/*                                                                  */ 18620000
*/*  DESCRIPTIVE NAME =   Kerberos services parameters (64 bit)      */ 18630000
*/*                                                                  */ 18640000
*/*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter */ 18650000
*/*             list for the Kerberos services callable service  @L1A*/ 18660000
*/********************************************************************/ 18670000
* COMPX_Dcl                                                             18680000
*  COMPX_Lvl GSEC COMPX_Bas,                      ] Mapping GSEC @L1A   18690000
*   5 GSEC_OPT@        PTR(64),   /* Address of option word      @L1A*/ 18700000
*    6 * PTR(31),                 /*                             @L1A*/ 18710000
*    6 GSEC31_OPT@     PTR(31),   /*                             @L1A*/ 18720000
*   5 GSEC_FUNC@       PTR(64),   /* Address of 2 byte input function   18730000
*                                    code.  Constants for the function  18740000
*                                    codes are supplied below    @L1A*/ 18750000
*    6 * PTR(31),                 /*                             @L1A*/ 18760000
*    6 GSEC31_FUNC@    PTR(31),   /*                             @L1A*/ 18770000
*                                                                       18780000
*   5 GSEC_FUNC_COUNT@ PTR(64),   /* Address of # of subparms    @L1A*/ 18790000
*    6 * PTR(31),                 /*                             @L1A*/ 18800000
*    6 GSEC31_FUNC_COUNT@ PTR(31),/*                             @L1A*/ 18810000
*                                                                       18820000
*   5 GSEC_PARMLIST@   PTR(64),   /* Address of function specific       18830000
*                                    parameter list              @L1A*/ 18840000
*    6 * PTR(31),                 /*                             @L1A*/ 18850000
*    6 GSEC31_PARMLIST@ PTR(31)  /*                              @L1A*/ 18860000
*    ;                                                                  18870000
*                                                                       22770000
*/* Add new service here.  Change previous semi-colon to COMPX_Term. */ 22770020
*/*   End new service declaration with semi-colon.                   */ 22770040
*/* Put only the main arguments specified on the CALL                */ 22770060
*/*   statement here.  Constants and other mappings                  */ 22770080
*/*   should be added at the very end of  this macro.                */ 22770100
*                                                                       22770120
*/********************************************************************/ 22770140
*/*                COMPX sub-declares                                */ 22770160
*/********************************************************************/ 22770180
*                                                                       22770200
* DECLARE                                                               22770220
*  COMPX_LEN FIXED(31) CONSTANT(LENGTH(COMPX)); /* block length      */ 22770240
*                                                                       22770260
*/********************************************************************/ 22770280
*/*                CDDLX sub-declares                                */ 22770300
*/********************************************************************/ 22770320
*                                                                       22770340
* DECLARE                                                               22770360
*  CDDLX_LEN FIXED(31) CONSTANT(LENGTH(CDDLX));/* Constant - length of  22770380
*                                    CDDLX                           */ 22770400
*                                                                       22770420
*/*------------------------------------------------------------------*/ 22770440
*/*                                                                  */ 22770460
*/*   Attributes word mapping (pointed to by CDDLX_ATTRIBUTES@)      */ 22770480
*/*                                                                  */ 22770500
*/*------------------------------------------------------------------*/ 22770520
*/* This structure contains attribute flags that are applicable to   */ 22770540
*/* multiple function codes. Do not reuse any of these values in the */ 22770560
*/* applicable function-specific mappings below                  @L7C*/ 22770580
* Declare                                                     /* @L3C*/ 22770600
*   1 CDDLX_ATTRIBUTES_MAP Bit(32) Based,                               22770620
*     3 *                  Bit(2),     /*    reserved            @L6A*/ 22770640
*     3 CDDLX_ATT_SKIPAUTH Bit(1);     /*    Valid for DataGetFirst,    22770660
*                                            DataGetNext, CheckStatus   22770680
*                                            and GetUpdateCode          22770700
*                                            functions                  22770720
*                                       OFF: Indicate RACF              22770740
*                                            authorization check need   22770760
*                                            to be performed            22770780
*                                       ON: Indicate RACF authorization 22770800
*                                           will be bypassed for        22770820
*                                           supervisor state or system  22770840
*                                           key caller when request is  22770860
*                                           for a RACF key ring (not    22770880
*                                           applicable to an ICSF       22770900
*                                           token)               @L7C*/ 22770920
* Declare                                                               22770940
*   1 CDDLX_ATTR_MAP_DATAGET Defined(CDDLX_ATTRIBUTES_MAP),             22770960
*     3 CDDLX_ATT_ALL_KEYTYPES BIT(1); /*    Valid only for             22770980
*                                            DataGetFirst and           22771000
*                                            DataGetNext                22771020
*                                     - OFF- private key type returned  22771040
*                                            will be CDDLX_ICSF (for    22771060
*                                            ICSF or PCICC) or          22771080
*                                            CDDLX_PKCS1 (for all       22771100
*                                            others)                    22771120
*                                     - ON - private key type returned  22771140
*                                            will be CDDLX_ICSF,        22771160
*                                            CDDLX_PKCS1,               22771180
*                                            CDDLX_PCICC,               22771200
*                                            CDDLX_DSA,                 22771220
*                                            CDDLX_DH,                  22771240
*                                            CDDLX_ECC,                 22771260
*                                            CDDLX_ECC_ICSF,            22771280
*                                            CDDLX_RSA_TKDS,            22771300
*                                            CDDLX_ECC_TKDS,            22771320
*                                            CDDLX_DSA_TKDS      @LBC*/ 22771340
* Declare                                                               22771360
*   1 CDDLX_ATTR_MAP_NEWRING Defined(CDDLX_ATTRIBUTES_MAP),             22771380
*     3 CDDLX_ATT_REUSE_RING Bit(1); /* Valid for function NewRing      22771400
*                                       OFF: Indicates a new key ring   22771420
*                                            is to be created (don't    22771440
*                                            reuse existing ring)       22771460
*                                       ON: Indicates that if ring      22771480
*                                           exists, all certs are       22771500
*                                           removed.             @L3A*/ 22771520
*                                                                       22771540
* Declare                                                               22771560
*   1 CDDLX_ATTR_MAP_DATAPUT Defined(CDDLX_ATTRIBUTES_MAP),             22771580
*     3 CDDLX_ATT_TRUST      Bit(1), /* Valid for DataPut               22771600
*                                       and DataAlter function          22771620
*                                       OFF: Indicate RACF will         22771640
*                                            determine status of        22771660
*                                            certificate.               22771680
*                                       ON: Indicates that the status   22771700
*                                           of the added certificate    22771720
*                                           should be set to TRUST      22771740
*                                                                @LDC*/ 22771760
*                                                                       22771780
*     3 CDDLX_ATT_HIGHTRUST  Bit(1), /* Valid for DataPut               22771800
*                                       and DataAlter function          22771820
*                                       OFF: Indicate RACF will         22771840
*                                            determine status of        22771860
*                                            certificate.               22771880
*                                       ON: Indicates that the status   22771900
*                                           of the added certificate    22771920
*                                           should be set to HIGHTRUST  22771940
*                                                                @LDC*/ 22771960
*     3 CDDLX_ATT_NOTRUST    Bit(1); /* Valid for DataPut               22771980
*                                       and DataAlter function          22772000
*                                       OFF: Indicate RACF will         22772020
*                                            determine status of        22772040
*                                            certificate.               22772060
*                                       ON: Indicates that the status   22772080
*                                           of the added certificate    22772100
*                                           should be set to NOTRUST    22772120
*                                                                @LDA*/ 22772140
*                                                                       22772160
* Declare                                                               22772180
*   1 CDDLX_ATTR_MAP_DATAREMOVE Defined(CDDLX_ATTRIBUTES_MAP),          22772200
*     3 CDDLX_ATT_DEL_CERT_TOO Bit(1), /* Valid for DataRemove function 22772220
*                                       OFF: Indicates the certificate  22772240
*                                            is to be removed from the  22772260
*                                            key ring only              22772280
*                                       ON: Indicates the certificate   22772300
*                                           is to be deleted from RACF  22772320
*                                           in sddition to being        22772340
*                                           removed from the keyring    22772360
*                                           as long as it is not        22772380
*                                           connected to any other key  22772400
*                                           rings                @LDC*/ 22772420
*     3 CDDLX_ATT_DEL_CERT_ALLRINGS Bit(1), /* Valid for DataRemove     22772440
*                                       OFF: Indicates the certificate  22772460
*                                            is not to be deleted from  22772480
*                                            RACF if it is connected    22772500
*                                            to other key rings         22772520
*                                       ON: Indicates the certificate   22772540
*                                           is to be deleted from RACF  22772560
*                                           even if it is connected     22772580
*                                           to other key rings   @LDA*/ 22772600
*     3 CDDLX_ATT_DEL_CERT_FORCE Bit(1); /* Valid for DataRemove        22772620
*                                       OFF: Indicates the certificate  22772640
*                                            is not to be deleted from  22772660
*                                            RACF if has been used to   22772680
*                                            generate a request         22772700
*                                       ON: Indicates the certificate   22772720
*                                           is to be deleted from RACF  22772740
*                                           even if it has been used to 22772760
*                                           generate a request   @LDA*/ 22772780
*                                                                       22772800
* Declare                                                               22772820
*   1 CDDLX_ATTR_MAP_INCSERIALNUM Defined(CDDLX_ATTRIBUTES_MAP),        22772840
*     3 CDDLX_ATT_SET_MIN_SERIAL Bit(1); /* Valid for IncSerialNum      22772860
*                                          function.                    22772880
*                                       OFF: Indicate Serial Number is  22772900
*                                            to be incremented by one.  22772920
*                                       ON: Indicate the Serial number  22772940
*                                           will be incremented to the  22772960
*                                           input serial number.        22772980
*                                                                @L8C*/ 22773000
*                                                                       22773020
*/*------------------------------------------------------------------*/ 22773040
*/*                                                                  */ 22773060
*/*                 Function code constants                          */ 22773080
*/*                                                                  */ 22773100
*/*------------------------------------------------------------------*/ 22773120
* DECLARE                                                               22773140
*                                                                       22773160
*  CDDLX_PARMCNT FIXED(32) CONSTANT(14); /* Number of parameters        22773180
*                                          expected                  */ 22773200
*                                                                       22773220
*/*------------------------------------------------------------------*/ 22773240
*/*                                                                  */ 22773260
*/*                 Function code constants                          */ 22773280
*/*                                                                  */ 22773300
*/*------------------------------------------------------------------*/ 22773320
* DECLARE                                                               22773340
*                                                                       22773360
*  CDDLX_DATA_GET_FIRST FIXED(8) CONSTANT(1), /* DataGetFirst - locate  22773380
*                                    and return the first               22773400
*                                    certificate in the ring            22773420
*                                    matching the specified criteria */ 22773440
*  CDDLX_DATA_GET_NEXT FIXED(8) CONSTANT(2), /* DataGetNext -           22773460
*                                    locate and return the next         22773480
*                                    certificate in the ring            22773500
*                                    matching the same criteria         22773520
*                                    specified in the previous          22773540
*                                    DataGetFirst/DataGetNext           22773560
*                                    call                            */ 22773580
*  CDDLX_DATA_ABORT    FIXED(8) CONSTANT(3), /* DataAbortQuery -        22773600
*                                    free resources from previous       22773620
*                                    DataGetFirst or DataGetNext        22773640
*                                    call                            */ 22773660
*  CDDLX_CHECK_STATUS  FIXED(8) CONSTANT(4), /* CheckStatus - return    22773680
*                                    the TRUST/NOTRUST status for a     22773700
*                                    given certificate               */ 22773720
*  CDDLX_GET_UPDATE_CODE FIXED(8) CONSTANT(5), /* GetUpdateCode -       22773740
*                                    returns the sequence number for    22773760
*                                    for a ring                      */ 22773780
*  CDDLX_INC_SER_NUM   FIXED(8) CONSTANT(6), /* IncSerialNum -          22773800
*                                    Increments the Serial Number       22773820
*                                    for a Digital Certificate   @L3C*/ 22773840
*  CDDLX_NEW_RING      Fixed(8) Constant(7), /* Create a new key ring   22773860
*                                    or remove all certificates from    22773880
*                                    an existing key ring        @L3A*/ 22773900
*  CDDLX_DATA_PUT      Fixed(8) Constant(8), /* Add a certificate to    22773920
*                                    RACF and connect it to a key       22773940
*                                    ring                        @L3A*/ 22773960
*  CDDLX_DATA_REMOVE   Fixed(8) Constant(9), /* Remove a cert from a    22773980
*                                    key ring and optionally delete     22774000
*                                    it from RACF                @L3A*/ 22774020
*  CDDLX_DEL_RING      Fixed(8) Constant(10), /* Delete a key ring      22774040
*                                                                @L3A*/ 22774060
*  CDDLX_DATA_REFRESH   Fixed(8) Constant(11), /* Refresh the DIGTCERT  22774080
*                                    class.                      @LDC*/ 22774100
*  CDDLX_DATA_ALTER     Fixed(8) Constant(12), /* Change the status     22774120
*                                    and/or the label of a              22774140
*                                    certificate.                @LEC*/ 22774160
*  CDDLX_GET_RING_INFO  Fixed(8) Constant(13); /* Return key ring       22774180
*                                    information.                @LEA*/ 22774200
*                                                                       22774220
*/*------------------------------------------------------------------*/ 22774240
*/*                                                                  */ 22774260
*/* Function Specific Parameter Lists                                */ 22774280
*/*                                                                  */ 22774300
*/*------------------------------------------------------------------*/ 22774320
* DECLARE                         /* Function code CDDLX_DATA_ABORT  */ 22774340
*  1 CDDLX_ABORT BASED,           /* Parameter list for                 22774360
*                                    DataAbortQuery                  */ 22774380
*    3 CDDLX_PREV_HANDLE PTR(64); /* Address of an input/output area    22774400
*                                    from previous DataGetFirst or      22774420
*                                    DataGetNext call                */ 22774440
* DECLARE                         /* Function codes                     22774460
*                                    CDDLX_DATA_GET_FIRST and           22774480
*                                    CDDLX_DATA_GET_NEXT             */ 22774500
*  1 CDDLX_GET_CERT BASED,        /* Parameter list for DataGetFirst    22774520
*                                    and DataGetNext                 */ 22774540
*    3 CDDLX_RES_HANDLE PTR(64),  /* Address of input/output area       22774560
*                                    mapped by CDDLX_HANDLE_MAP      */ 22774580
*    3 CDDLX_CERT_USAGE CHAR(4),  /* 4 byte output area containing      22774600
*                                    certificate usage flags            22774620
*                                    x'00000000' - Usage is SITE        22774640
*                                    x'00000002' - Usage is CERTAUTH    22774660
*                                    x'00000008' - Usage is PERSONAL    22774680
*                                    x'FFFFFFF5' - reserved bits must   22774700
*                                                 be set to zero     */ 22774720
*    3 CDDLX_CERT_DEFAULT FIXED(32), /* Output default indicator.       22774740
*                                    Zero value indicates not           22774760
*                                    default certificate for ring,      22774780
*                                    non-zero indicates this is         22774800
*                                    the default certificate.        */ 22774820
*    3 CDDLX_CERT_LEN   FIXED(32), /* On input, contains the length     22774840
*                                    of the certificate area pointed    22774860
*                                    to by CDDLX_CERT_PTR. On output,   22774880
*                                    contains the actual size of the    22774900
*                                    certificate returned or 0 if no    22774920
*                                    certificate returned.           */ 22774940
*    3 * fixed,                      /* alignment                    */ 22774960
*    3 CDDLX_CERT_PTR PTR(64),    /* Input value specifying             22774980
*                                    address of output certificate      22775000
*                                    data area                       */ 22775020
*    3 CDDLX_PK_LEN FIXED(32),    /* On input, contains size of         22775040
*                                    private key area pointed to by     22775060
*                                    CDDLX_PK_PTR. On output            22775080
*                                    contains the length of the         22775100
*                                    private key returned at            22775120
*                                    address CDDLX_PK_PTR or 0 if no    22775140
*                                    private key was returned        */ 22775160
*    3 * fixed,                      /* alignment                    */ 22775180
*    3 CDDLX_PK_PTR PTR(64),      /* Input value specifying address     22775200
*                                    of private key output data         22775220
*                                    area                            */ 22775240
*    3 CDDLX_PK_TYPE FIXED(32),   /* Output value indicating            22775260
*                                    type of private key. See           22775280
*                                    constants below.                */ 22775300
*    3 CDDLX_PK_BITSIZE FIXED(32), /* Output value indicating the       22775320
*                                    size of the private key            22775340
*                                    modulus in bits                 */ 22775360
*    3 CDDLX_LABEL_LEN FIXED(32), /* On input, contains the length of   22775380
*                                    the field pointed to by            22775400
*                                    CDDLX_LABEL_PTR, and must be at    22775420
*                                    least 32.  On output, contains     22775440
*                                    the length of the label returned   22775460
*                                    at the address in                  22775480
*                                    CDDLX_LABEL_PTR, and will be 32    22775500
*                                    or less.                        */ 22775520
*    3 * fixed,                      /* alignment                    */ 22775540
*    3 CDDLX_LABEL_PTR PTR(64),   /* Input value specifying the         22775560
*                                    address of the output area         22775580
*                                    to be used for the label name   */ 22775600
*    3 CDDLX_RACF_USERID CHAR(9), /* Input value containing a           22775620
*                                    1 byte length followed by the      22775640
*                                    certificate owning userid. The     22775660
*                                    combination of the output          22775680
*                                    label and this field uniquely      22775700
*                                    identify a certificate          */ 22775720
*    3 *            CHAR(3),      /* Reserved                        */ 22775740
*    3 CDDLX_SDN_LEN FIXED(32),   /* On input, contains the length of   22775760
*                                    the output buffer pointed to by    22775780
*                                    CDDLX_SDN_PTR. On output, contains 22775800
*                                    the length of the BER encoded      22775820
*                                    Subject's Distinguished Name       22775840
*                                    returned in CDDLX_SDN_LEN.      */ 22775860
*    3 CDDLX_SDN_PTR PTR(64),     /* Input value specifying the         22775880
*                                    address of the output area to be   22775900
*                                    used for the Subjects's            22775920
*                                    Distinguished Name.             */ 22775940
*    3 CDDLX_RECID_LEN FIXED(32), /* Output value containing the        22775960
*                                    length of the record ID            22775980
*                                    returned in area pointed to by     22776000
*                                    CDDLX_RECID_PTR, or 0 if no        22776020
*                                    record returned.                */ 22776040
*    3 * fixed,                      /* alignment                    */ 22776060
*    3 CDDLX_RECID_PTR PTR(64),   /* Input value specifying the         22776080
*                                    address of a 246 byte area to      22776100
*                                    contain output record ID data      22776120
*                                                                @LDC*/ 22776140
*    3 CDDLX_STATUS CHAR(4);      /* Certificate status                 22776160
*                                    x'80000000' - TRUST                22776180
*                                    x'40000000' - HIGHTRUST            22776200
*                                    x'20000000' - NOTRUST              22776220
*                                    x'00000000' - ANY (input only)     22776240
*                                                                @LDA*/ 22776260
* DECLARE                         /* Function codes for CheckStatus  */ 22776280
*  1 CDDLX_CRT_STATUS BASED,  /* Parameter list for CheckStatus      */ 22776300
*    3 CDDLX_CRT_LEN FIXED(32), /* On input, contains the length of     22776320
*                                 the certificate area pointed to by    22776340
*                                 CDDLX_CRT_PTR.                     */ 22776360
*    3 * fixed,                      /* alignment                    */ 22776380
*    3 CDDLX_CRT_PTR  PTR(64); /* Input value specifying address of     22776400
*                              output certificate data area          */ 22776420
* DECLARE                                                               22776440
*  1 CDDLX_GET_UPDATE  BASED,    /* Parm list for GetUpdateCode      */ 22776460
*    3 CDDLX_RING_SEQN FIXED(32); /* Ring sequence number            */ 22776480
*                                                                       22776500
* DECLARE                                                               22776520
*  1 CDDLX_ISN   BASED,            /* Parm List for IncSerialNum     */ 22776540
*    3 CDDLX_ISN_CLEN   FIXED(32), /* Length of DER Encoded input       22776560
*                                    Digital Certificate             */ 22776580
*    3 * fixed,                    /* alignment                      */ 22776600
*    3 CDDLX_ISN_CPTR   PTR(64),   /* Address of DER Encoded input      22776620
*                                    Digital Certificate             */ 22776640
*    3 CDDLX_ISN_SERNUM CHAR(8);   /* Output - Incremented Serial       22776660
*                                    Number of Digital Certificate   */ 22776680
* Declare                                                               22776700
*  1 CDDLX_PUT_CERT     Based,    /* FSPL for DataPut function   @L3A*/ 22776720
*    3 CDDLX_PCERT_USAGE Char(4), /* 4 byte input area containing       22776740
*                                    certificate usage flags            22776760
*                                    x'00000000' - Usage is SITE        22776780
*                                    x'00000002' - Usage is CERTAUTH    22776800
*                                    x'00000008' - Usage is PERSONAL    22776820
*                                    x'80000000' - Usage is defaulted   22776840
*                                                  to the usage of the  22776860
*                                                  cert                 22776880
*                                    x'7FFFFFF5' - reserved bits must   22776900
*                                                  be set to 0   @L3A*/ 22776920
*    3 CDDLX_PCERT_DEFAULT Fixed(32),/* Input default cert indicator.   22776940
*                                    Non-zero value indicates input     22776960
*                                    certificate is to made the default 22776980
*                                    cert for the ring, zero indicates  22777000
*                                    to not set the certificate as the  22777020
*                                    default                     @L3A*/ 22777040
*    3 CDDLX_PCERT_LEN Fixed(32), /* Input value containing the length  22777060
*                                    of the certificate pointed to by   22777080
*                                    CDDLX_PCERT_PTR.            @L3A*/ 22777100
*    3 *                Fixed,    /* reserved for alignment      @L3A*/ 22777120
*    3 CDDLX_PCERT_PTR Ptr(64),   /* Input value specifying address of  22777140
*                                    input certificate data area @L3A*/ 22777160
*    3 CDDLX_PKEY_LEN  Fixed(32), /* Input value containing the size of 22777180
*                                    the private key pointed to by the  22777200
*                                    CDDLX_PKEY_PTR. A value of zero    22777220
*                                    indicates a private key is not     22777240
*                                    being added.                @L3A*/ 22777260
*    3 *                Fixed,    /* reserved for alignment      @L3A*/ 22777280
*    3 CDDLX_PKEY_PTR  Ptr(64),   /* Input value specifying address of  22777300
*                                    private key, ignored if            22777320
*                                    CDDLX_PKEY_LEN value is zero       22777340
*                                                                @L3A*/ 22777360
*    3 CDDLX_PLABEL_LEN Fixed(31),/* On input, it contains the length   22777380
*                                    of the label to be assigned to     22777400
*                                    the added certificate. On output,  22777420
*                                    it contains the length of the      22777440
*                                    label of the existing certificate  22777460
*                                    if the input certificate is        22777480
*                                    already installed in RACF.  @L3A*/ 22777500
*    3 *                Fixed,    /* reserved for alignment      @L3A*/ 22777520
*    3 CDDLX_PLABEL_PTR Ptr(64),  /* On input, it contains the address  22777540
*                                    of the label area. On output, it   22777560
*                                    contains the label of the existing 22777580
*                                    certificate if the input           22777600
*                                    certificate is already installed   22777620
*                                    in RACF. The label area must be    22777640
*                                    32 bytes.                   @L3A*/ 22777660
*    3 CDDLX_PCERT_USERID Char(9),/* On input, it indicates the owner   22777680
*                                    of the certificate, in the format  22777700
*                                    of a 1 byte length followed by     22777720
*                                    the user ID. On output it contains 22777740
*                                    the owner of the existing          22777760
*                                    certificate if the input           22777780
*                                    certificate is already installed   22777800
*                                    in RACF. The 1 byte length must    22777820
*                                    be 8 and the user ID must be       22777840
*                                    left-justified and padded with     22777860
*                                    blanks.                     @L3A*/ 22777880
*    3 *                 Char(3); /* Reserved space              @L3A*/ 22777900
*                                                                       22777920
* Declare                                                               22777940
*  1 CDDLX_REMOVE_CERT Based,     /* FSPL for DataRemove function@L3A*/ 22777960
*    3 CDDLX_RLABEL_LEN Fixed(32),/* A 4 byte input value contains the  22777980
*                                    length of the label of the         22778000
*                                    certificate to be removed pointed  22778020
*                                    to by CDDLX_RLABEL_PTR      @L3A*/ 22778040
*    3 *                Fixed,    /* reserved for alignment      @L3A*/ 22778060
*    3 CDDLX_RLABEL_PTR Ptr(64),  /* An input value contains the        22778080
*                                    address of the label  of the       22778100
*                                    certificate to be removed   @L3A*/ 22778120
*    3 CDDLX_RCERT_USERID Char(9),/* A 9 byte input value indicates the 22778140
*                                    owner of the certificate to be     22778160
*                                    removed, in the format of a 1 byte 22778180
*                                    length followed by the user ID.    22778200
*                                    The 1 byte length must be 8 and    22778220
*                                    the user ID must be left-justified 22778240
*                                    and padded with blanks.     @L3A*/ 22778260
*    3 *                 Char(3); /* Reserved space              @L3A*/ 22778280
*                                                                       22778300
* Declare                                                               22778320
*  1 CDDLX_ALTER_CERT  Based,     /* FSPL for DataAlter function @LDA*/ 22778340
*    3 CDDLX_ALABEL_LEN Fixed(32),/* A 4 byte value containing the      22778360
*                                    length of the input certificate    22778380
*                                    label.                      @LDA*/ 22778400
*    3 *                Fixed,    /* reserved for alignment      @P3A*/ 22778420
*    3 CDDLX_ALABEL_PTR Ptr(64),  /* A value containing the address     22778440
*                                    of the input certificate           22778460
*                                    label.                      @P3C*/ 22778480
*    3 CDDLX_ANEW_LABEL_LEN Fixed(32),/* A 4 byte value containing the  22778500
*                                    length of the new label which      22778520
*                                    will be assigned to the            22778540
*                                    certificate. A zero indicates      22778560
*                                    that the change is not on the      22778580
*                                    label.                      @LDA*/ 22778600
*    3 *                Fixed,    /* reserved for alignment      @P3A*/ 22778620
*    3 CDDLX_ANEW_LABEL_PTR Ptr(64),/* A value containing the address   22778640
*                                    of the new certificate label.      22778660
*                                    This field is ignored if           22778680
*                                    CDDLX_ANEW_LABEL_LEN is zero.      22778700
*                                                                @P3C*/ 22778720
*    3 CDDLX_ACERT_USERID Char(9),/* A 9 byte input value indicating    22778740
*                                    the owner of the certificate, in   22778760
*                                    the format of a 1 byte length      22778780
*                                    followed by the user ID.  The 1    22778800
*                                    byte length must be 8 and the user 22778820
*                                    ID must be left-justified and      22778840
*                                    padded with blanks. For CERTAUTH   22778860
*                                    certificates, this parameter       22778880
*                                    should be set to either 'irrcerta' 22778900
*                                    or '*AUTH*'. For SITE              22778920
*                                    certificates, this parameter       22778940
*                                    should be set to either 'irrsitec' 22778960
*                                    or '*SITE*'. If the length is      22778980
*                                    zero, the caller's ID is used.     22779000
*                                                                @LDA*/ 22779020
*    3 *                 Char(3); /* Reserved space              @LDA*/ 22779040
*                                                                       22779060
* Declare                                                               22779080
*  1 CDDLX_GET_RING    Based,     /* FSPL for GetRingInfo        @LEA*/ 22779100
*    3 CDDLX_RING_SRCH_TYPE Char(4), /* A 4 byte input value which      22779120
*                                    identifies more rings to be        22779140
*                                    returned  when both ring owner     22779160
*                                    and ring name are specified        22779180
*                                    x'00000000' - Return just the      22779200
*                                                  ring with the        22779220
*                                                  specified ring       22779240
*                                                  owner and ring       22779260
*                                                  name                 22779280
*                                    x'00000001' - Return all rings     22779300
*                                                  after the ring       22779320
*                                                  specified by ring    22779340
*                                                  owner and ring name  22779360
*                                    x'00000002' - Return all rings     22779380
*                                                  with the same owner  22779400
*                                                  after the ring       22779420
*                                                  specified by ring    22779440
*                                                  owner and ring name  22779460
*                                    x'00000003' - Return all rings     22779480
*                                                  with the same name   22779500
*                                                  after the ring       22779520
*                                                  specified by ring    22779540
*                                                  owner and ring       22779560
*                                                  name          @LEA*/ 22779580
*    3 CDDLX_RING_RES_LEN Fixed(32),/* A 4 byte value containing        22779600
*                                    the size of the field pointed      22779620
*                                    to by Ring_result_ptr       @LEA*/ 22779640
*    3 CDDLX_RING_RES_PTR Ptr(64);/* An input value containing the      22779660
*                                    address of the ring result         22779680
*                                    area                        @LEA*/ 22779700
*                                                                       22779720
*/*------------------------------------------------------------------*/ 22779740
*/*                                                                  */ 22779760
*/*       Private Key Type Constants returned in CDDLX_PK_TYPE       */ 22779780
*/*                                                                  */ 22779800
*/*------------------------------------------------------------------*/ 22779820
* DECLARE                                                               22779840
*  CDDLX_PKCS1        FIXED(32) CONSTANT(1), /* Private key is          22779860
*                                     PKCS#1 DER encoded         @L9A*/ 22779880
*/*------------------------------------------------------------------*/ 22779900
*/* The following constant, CDDLX_PKCS10 should not be used, as  @L9A*/ 22779920
*/* its name is misleading.  It is kept strictly for             @L9A*/ 22779940
*/* compatibility.  Instead use CDDLX_PKCS1.                     @L9A*/ 22779960
*/*------------------------------------------------------------------*/ 22779980
*  CDDLX_PKCS10       FIXED(32) CONSTANT(1), /* Private key is          22780000
*                                     PKCS#1 DER encoded             */ 22780020
*/*------------------------------------------------------------------*/ 22780040
*/* The following constant, CDDLX_ICSF10 should not be used, as  @L9A*/ 22780060
*/* its name is misleading.  It is kept strictly for             @L9A*/ 22780080
*/* compatibility.  Instead use CDDLX_ICSF.                      @L9A*/ 22780100
*/*------------------------------------------------------------------*/ 22780120
*  CDDLX_ICSF10       FIXED(32) CONSTANT(2), /* Private key is          22780140
*                                     a ICSF token                   */ 22780160
*  CDDLX_ICSF         FIXED(32) CONSTANT(2), /* Alias of private key    22780180
*                                     is a ICSF token            @P2A*/ 22780200
*  CDDLX_PCICC        FIXED(32) CONSTANT(3), /* Private key is          22780220
*                                     a PCICC token label            */ 22780240
*  CDDLX_DSA          FIXED(32) CONSTANT(4), /* Private key is          22780260
*                                               DSA              @L9A*/ 22780280
*  CDDLX_DH           FIXED(32) CONSTANT(6), /* Private key is          22780300
*                                               Diffie-Hellman   @L9A*/ 22780320
*  CDDLX_ECC          FIXED(32) CONSTANT(7), /* Private key is          22780340
*                                               ECC              @LAC*/ 22780360
*  CDDLX_ECC_ICSF     FIXED(32) CONSTANT(9), /* Private key is ECC      22780380
*                                               PKDS key token   @LBC*/ 22780400
*  CDDLX_RSA_TKDS     FIXED(32) CONSTANT(11),/* Private key is RSA      22780420
*                                               TKDS key token   @LBA*/ 22780440
*  CDDLX_ECC_TKDS     FIXED(32) CONSTANT(13),/* Private key is ECC      22780460
*                                               TKDS key token   @LBA*/ 22780480
*  CDDLX_DSA_TKDS     FIXED(32) CONSTANT(14);/* Private key is DSA      22780500
*                                               TKDS key token   @LBA*/ 22780520
*/*------------------------------------------------------------------*/ 22780540
*/*                                                                  */ 22780560
*/*  Mapping of input/output area pointed to by CDDLX_RES_HANDLE     */ 22780580
*/*                                                                  */ 22780600
*/*------------------------------------------------------------------*/ 22780620
* DECLARE                                                               22780640
*  1 CDDLX_HANDLE_MAP BASED,      /* Mapping of area pointed to by      22780660
*                                  CDDLX_RES_HANDLE & CDDLX_PREV_HANDLE 22780680
*                                                                    */ 22780700
*    3 CDDLX_TOKEN PTR(32),       /* Reserved for use by the security   22780720
*                                    server.  This value must be        22780740
*                                    preserved for subsequent calls     22780760
*                                    to DataGetNext and                 22780780
*                                    DataAbortQuery                  */ 22780800
*    3 CDDLX_PREDICATES FIXED(32), /* Input value specifying            22780820
*                                    the selection criteria.  See       22780840
*                                    constants below                 */ 22780860
*    3 CDDLX_ATTR_ID FIXED(32),   /* Input value specifying             22780880
*                                    the attribute to query on.         22780900
*                                    Ignored if CDDLX_PREDICATES is 0.  22780920
*                                    See constants below for possible   22780940
*                                    values.                         */ 22780960
*    3 CDDLX_ATTR_LEN FIXED(32),  /* Input value containing the         22780980
*                                    length of the attributes           22781000
*                                    supplied in CDDLX_ATTR_PTR      */ 22781020
*    3 CDDLX_ATTR_PTR PTR(64);    /* Input value containing             22781040
*                                    the address of query               22781060
*                                    attribute data.  Type of data      22781080
*                                    supplied determined by             22781100
*                                    CDDLX_ATTR_ID                   */ 22781120
*/*------------------------------------------------------------------*/ 22781140
*/*                                                                  */ 22781160
*/* Input selection criteria constants supplied in CDDLX_PREDICATES  */ 22781180
*/*                                                                  */ 22781200
*/*------------------------------------------------------------------*/ 22781220
* DECLARE                                                               22781240
*  CDDLX_NONE         FIXED(32) CONSTANT(0), /* No selection criteria*/ 22781260
*  CDDLX_ATTR         FIXED(32) CONSTANT(1); /* Query on a              22781280
*                                    particular attribute            */ 22781300
*/*------------------------------------------------------------------*/ 22781320
*/*                                                                  */ 22781340
*/* Input query attributes supplied in CDDLX_ATTR_ID                 */ 22781360
*/*                                                                  */ 22781380
*/*------------------------------------------------------------------*/ 22781400
* DECLARE                                                               22781420
*  CDDLX_LABEL FIXED(32) CONSTANT(1), /* The certificate label, up to   22781440
*                                       32 characters long           */ 22781460
*  CDDLX_DEFAULT FIXED(32) CONSTANT(2), /* The default flag, a 4 byte   22781480
*                                    field specified as 0 for NO, or    22781500
*                                    a non-zero value for YES        */ 22781520
*  CDDLX_SUBJECT FIXED(32) CONSTANT(3);/* BER encoded subject's         22781540
*                                    name                        @LCC*/ 22781560
*/*------------------------------------------------------------------*/ 22781580
*/*                                                                  */ 22781600
*/* Input selection criteria supplied in CDDLX_RING_SRCH_TYPE        */ 22781620
*/*                                                                  */ 22781640
*/*------------------------------------------------------------------*/ 22781660
* DECLARE                                                               22781680
*  CDDLX_ONE_RING FIXED(32) CONSTANT(0), /* Return just the ring with   22781700
*                                    the specified ring owner and       22781720
*                                    ring name                   @LEA*/ 22781740
*  CDDLX_ALL_RINGS FIXED(32) CONSTANT(1), /* Return all rings after     22781760
*                                    the ring specifed by ring owner    22781780
*                                    and ring name               @LEA*/ 22781800
*  CDDLX_SAME_OWNER FIXED(32) CONSTANT(2), /* Return all rings with     22781820
*                                    the same owner after the ring      22781840
*                                    specified by ring owner and        22781860
*                                    ring name                   @LEA*/ 22781880
*  CDDLX_SAME_NAME FIXED(32) CONSTANT(3); /* Return all rings with      22781900
*                                    the same name after the ring       22781920
*                                    specified by ring owner and        22781940
*                                    ring name                   @LEA*/ 22781960
*                                                                       22781980
*/********************************************************************/ 22782000
*/*                GSEC  sub-declares                                */ 22782020
*/********************************************************************/ 22782040
* DECLARE                                                               22782060
*  GSEC_LEN FIXED(31) CONSTANT(LENGTH(GSEC));/* Constant - length of    22782080
*                                    GSEC                        @L1A*/ 22782100
*                                                                       22782120
* DECLARE                                                               22782140
*  GSEC_PARMCNT FIXED(32) CONSTANT(12); /* Number of parameters         22782160
*                                          expected              @L1A*/ 22782180
*                                                                       22782200
*/*------------------------------------------------------------------*/ 22782220
*/*                                                                  */ 22782240
*/*                 Function code constants                          */ 22782260
*/*                                                                  */ 22782280
*/*------------------------------------------------------------------*/ 22782300
* DECLARE                                                               22782320
*                                                                       22782340
*  GSEC_EXTRACT         FIXED(8) CONSTANT(1), /* Extract from token     22782360
*                                                                @L1A*/ 22782380
*                                                                       22782400
*  GSEC_RETURN_NAME     FIXED(8) CONSTANT(1), /* ReturnName - Extract   22782420
*                                principal name from token and return   22782440
*                                it to the invoker               @L1A*/ 22782460
*                                                                       22782480
*  GSEC_GSSAPI          FIXED(8) CONSTANT(2), /* Invoke GSS-API service 22782500
*                                                                @L1A*/ 22782520
*  GSEC_INIT_SEC_CONTEXT FIXED(8) CONSTANT(1),/* Initiate security      22782540
*                                  context                       @L1A*/ 22782560
*                                                                       22782580
*  GSEC_CONT_SEC_CONTEXT FIXED(8) CONSTANT(2),/* Continue initiation    22782600
*                                  of security context           @LCC*/ 22782620
*                                                                       22782640
*  GSEC_ACC_SEC_CONTEXT   FIXED(8) CONSTANT(3),/* Accept security       22782660
*                                  context                       @L1A*/ 22782680
*                                                                       22782700
*  GSEC_DEL_SEC_CONTEXT   FIXED(8) CONSTANT(4),/* Delete security       22782720
*                                  context                       @L1A*/ 22782740
*                                                                       22782760
*  GSEC_REL_CRED        FIXED(8) CONSTANT(5), /* Release credential     22782780
*                                                                @L1A*/ 22782800
*                                                                       22782820
*  GSEC_GET_MIC         FIXED(8) CONSTANT(6), /* Get MIC for message    22782840
*                                                                @L1A*/ 22782860
*                                                                       22782880
*  GSEC_VER_MIC         FIXED(8) CONSTANT(7), /* Verify MIC for message 22782900
*                                                                @L1A*/ 22782920
*                                                                       22782940
*  GSEC_WRAP_MSG        FIXED(8) CONSTANT(8), /* Wrap message    @L1A*/ 22782960
*                                                                       22782980
*  GSEC_UNWRAP_MSG      FIXED(8) CONSTANT(9), /* Unwrap message  @L1A*/ 22783000
*                                                                       22783020
*  GSEC_EXPORT_SEC_CONTEXT FIXED(8) CONSTANT(10),/* Export security     22783040
*                                    context                     @L1A*/ 22783060
*                                                                       22783080
*  GSEC_IMPORT_SEC_CONTEXT FIXED(8) CONSTANT(11),/* Import security     22783100
*                                    context                     @L1A*/ 22783120
*                                                                       22783140
*  GSEC_EXPORT_CRED     FIXED(8) CONSTANT(12),/* Import credential      22783160
*                                                                @L1A*/ 22783180
*                                                                       22783200
*  GSEC_IMPORT_CRED     FIXED(8) CONSTANT(13),/* Export credential      22783220
*                                                                @L1A*/ 22783240
*                                                                       22783260
*  GSEC_ACQUIRE_CRED    FIXED(8) CONSTANT(14),/* Acquire credential     22783280
*                                                                @L1A*/ 22783300
*  GSEC_PASSTICKET      FIXED(8) CONSTANT(3), /* PassTicket operation   22783320
*                                                                @L2A*/ 22783340
*  GSEC_PASSTICKET_GEN  FIXED(8) CONSTANT(1), /* PassTicket generate    22783360
*                                                                @L2A*/ 22783380
*  GSEC_PASSTICKET_EVAL FIXED(8) CONSTANT(2), /* PassTicket evaluate    22783400
*                                                                @L2A*/ 22783420
*  GSEC_PASSTICKET_EVLX FIXED(8) CONSTANT(3), /* PassTicket evaluate    19570000
*                                                extended        @LGA*/ 19570001
*  GSEC_PASSTICKET_GENX FIXED(8) CONSTANT(4); /* PassTicket generate    19570002
*                                                extended        @LGA*/ 19570003
*/*------------------------------------------------------------------*/ 22783440
*/*                                                                  */ 22783460
*/* Function Specific Parameter Lists                                */ 22783480
*/*                                                              @L1A*/ 22783500
*/*------------------------------------------------------------------*/ 22783520
* DECLARE                       ]                                  @L1A 22783540
* 1 GSEC_RETNAME BASED,         ] Parameter list for Return name   @L1A 22783560
*  3 GSEC_RET_FUNC@ PTR(64),    ] Address of function code         @L1A 22783580
*  3 GSEC_RET_CRED_LEN@ PTR(64),] Address of input credential len  @P1A 22783600
*  3 GSEC_RET_INPUT_CRED@ PTR(64), ] Address of input credential   @L1A 22783620
*  3 GSEC_RET_OID@  PTR(64),    ] Address of reserved field        @P1C 22783640
*  3 GSEC_RET_TICKET_PRIN@ PTR(64),] Address of area to contain 2  @L1A 22783660
*                               ] byte length followed by returned @L1A 22783680
*                               ] principal name                   @L1A 22783700
*  3 GSEC_RET_RC@ PTR(64),      ] Address of function return code  @L1A 22783720
*                                                                       22783740
* 1 GSEC31_RETNAME BASED,       ] Parameter list for Return name   @L1A 22783760
*  3 GSEC31_RET_FUNC@ PTR(31),  ]                                  @L1A 22783780
*  3 GSEC31_RET_CRED_LEN@ PTR(31),]                                @P1A 22783800
*  3 GSEC31_RET_INPUT_CRED@ PTR(31),]                              @L1A 22783820
*  3 GSEC31_RET_OID@ PTR(31),   ]                                  @P1C 22783840
*  3 GSEC31_RET_TICKET_PRIN@ PTR(31),]                             @L1A 22783860
*  3 GSEC31_RET_RC@ PTR(31),    ]                                  @L1A 22783880
*                                                                       22783900
*                                                                       22783920
* 1 GSEC_GSSAPI_COMMON BASED,] Common parms for GSSAPI functions   @L1A 22783940
*  3 GSEC_GSS_FUNC@ PTR(64), ] Address of function code word       @L1A 22783960
*  3 GSEC_GSS_MAJOR@ PTR(64),] Address of area for returned major  @L1A 22783980
*                            ] status                              @L1A 22784000
*  3 GSEC_GSS_MINOR@ PTR(64),] Address of area for returned minor  @L1A 22784020
*                            ] status                              @L1A 22784040
*  3 GSEC_GSS_ACEE@ PTR(64), ] Address of ACEE                     @L1A 22784060
*                                                                       22784080
* 1 GSEC31_GSSAPI_COMMON BASED,] Common parms for GSSAPI functions @L1A 22784100
*  3 GSEC31_GSS_FUNC@ PTR(31), ]                                   @L1A 22784120
*  3 GSEC31_GSS_MAJOR@ PTR(31),]                                   @L1A 22784140
*  3 GSEC31_GSS_MINOR@ PTR(31),]                                   @L1A 22784160
*  3 GSEC31_GSS_ACEE@ PTR(31), ]                                   @L1A 22784180
*                                                                       22784200
*                                                                       22784220
*                                                                       22784240
* 1 GSEC_INITSECCONTEXT BASED,] Parameter list for Initiate        @L1A 22784260
*                              ] Securty context                   @L1A 22784280
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22784300
*  3 GSEC_INIT_TGT_PRIN@ PTR(64),] Address of target principal     @L1A 22784320
*  3 GSEC_INIT_REQ_FLAGS@ PTR(64),] Address of request flags       @L1A 22784340
*  3 GSEC_INIT_REQ_EXPIRE@ PTR(64),] Address of requested context  @L1A 22784360
*                                   ] expiration                   @L1A 22784380
*  3 GSEC_INIT_CRED_HNDL@ PTR(64),] Address of credential handle   @L1A 22784400
*  3 GSEC_INIT_CNTXT_HNDL@ PTR(64),] Address of returned context   @L1A 22784420
*                                   ] handle                       @L1A 22784440
*  3 GSEC_INIT_RET_FLAGS@ PTR(64), ] Address of area for return    @L1A 22784460
*                                   ] flags                        @L1A 22784480
*  3 GSEC_INIT_CNTXT_EXPIRE@ PTR(64),] Address of area for actual  @L1A 22784500
*                                     ] context expiration         @L1A 22784520
*  3 GSEC_INIT_OUT_TOKEN@ PTR(64),] Address of returned token      @L1A 22784540
*                                                                       22784560
* 1 GSEC31_INITSECCONTEXT BASED,] Parameter list for Initiate      @L1A 22784580
*                              ] Securty context                   @L1A 22784600
*  3 *(4) PTR(31),             ]                                   @L1A 22784620
*  3 GSEC31_INIT_TGT_PRIN@ PTR(31),]                               @L1A 22784640
*  3 GSEC31_INIT_REQ_FLAGS@ PTR(31),]                              @L1A 22784660
*  3 GSEC31_INIT_REQ_EXPIRE@ PTR(31),]                             @L1A 22784680
*  3 GSEC31_INIT_CRED_HNDL@ PTR(31),]                              @L1A 22784700
*  3 GSEC31_INIT_CNTXT_HNDL@ PTR(31),]                             @L1A 22784720
*  3 GSEC31_INIT_RET_FLAGS@ PTR(31), ]                             @L1A 22784740
*  3 GSEC31_INIT_CNTXT_EXPIRE@ PTR(31),]                           @L1A 22784760
*  3 GSEC31_INIT_OUT_TOKEN@ PTR(31),]                              @L1A 22784780
*                                                                       22784800
*                                                                       22784820
* 1 GSEC_CONTSECCONTEXT BASED,] Parameter list for Continue        @L1A 22784840
*                              ] initiation of security context    @L1A 22784860
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22784880
*  3 GSEC_CONT_CNTXT_HNDL@ PTR(64),] Address of context handle     @L1A 22784900
*  3 GSEC_CONT_TOKLN@ PTR(64),] Address of token length            @L1A 22784920
*  3 GSEC_CONT_TOKEN@ PTR(64),] Address of acceptor context token @L1A  22784940
*  3 GSEC_CONT_RET_FLAGS@ PTR(64),] Address of area for return     @L1A 22784960
*                                  ] flags                         @L1A 22784980
*  3 GSEC_CONT_EXPIRE@ PTR(64),] Address of area for actual        @L1A 22785000
*                               ] context expiration               @L1A 22785020
*                                                                       22785040
* 1 GSEC31_CONTSECCONTEXT BASED,] Parameter list for Continue      @L1A 22785060
*                              ] initiation of security context    @L1A 22785080
*  3 *(4) PTR(31),             ]                                   @L1A 22785100
*  3 GSEC31_CONT_CNTXT_HNDL@ PTR(31),]                             @P2C 22785120
*  3 GSEC31_CONT_TOKLN@ PTR(31),]                                  @L1A 22785140
*  3 GSEC31_CONT_TOKEN@ PTR(31),]                                  @L1A 22785160
*  3 GSEC31_CONT_RET_FLAGS@ PTR(31),]                              @L1A 22785180
*  3 GSEC31_CONT_EXPIRE@ PTR(31),]                                 @L1A 22785200
*                                                                       22785220
*                                                                       22785240
* 1 GSEC_ACCSECCONTEXT BASED, ] Parameter list for Accept          @L1A 22785260
*                              ] security context                  @L1A 22785280
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22785300
*  3 GSEC_ACC_TOKLN@ PTR(64), ] Address of token length            @L1A 22785320
*  3 GSEC_ACC_TOKEN@ PTR(64), ] Address of initiator context       @L1A 22785340
*                              ] token                             @L1A 22785360
*  3 GSEC_ACC_CONTXT_HNDL@ PTR(64),] Address of returned context   @L1A 22785380
*                                   ] handle                       @L1A 22785400
*  3 GSEC_ACC_PRIN@   PTR(64), ] Address of area for source        @L1A 22785420
*                              ] principal                         @L1A 22785440
*  3 GSEC_ACC_RET_FLAGS@ PTR(64),] Address of area for return      @L1A 22785460
*                                 ] flags                          @L1A 22785480
*  3 GSEC_ACC_CNTXT_EXPIRE@ PTR(64),] Address of area for context @L1A  22785500
*                                    ] expiration                  @L1A 22785520
*  3 GSEC_ACC_OUT_TOKEN@ PTR(64),] Address of returned token       @L1A 22785540
*  3 GSEC_ACC_CRED_HNDL@ PTR(64),] Address of returned credential @L1A  22785560
*                                 ] handle                         @L1A 22785580
*                                                                       22785600
* 1 GSEC31_ACCSECCONTEXT BASED, ] Parameter list for Accept        @L1A 22785620
*                               ] security context                 @L1A 22785640
*  3 *(4) PTR(31),              ]                                  @L1A 22785660
*  3 GSEC31_ACC_TOKLN@ PTR(31), ]                                  @L1A 22785680
*  3 GSEC31_ACC_TOKEN@ PTR(31), ]                                  @L1A 22785700
*  3 GSEC31_ACC_CONTXT_HNDL@ PTR(31),]                             @L1A 22785720
*  3 GSEC31_ACC_PRIN@   PTR(31), ]                                 @L1A 22785740
*  3 GSEC31_ACC_RET_FLAGS@ PTR(31),]                               @L1A 22785760
*  3 GSEC31_ACC_CNTXT_EXPIRE@ PTR(31),]                            @L1A 22785780
*  3 GSEC31_ACC_OUT_TOKEN@ PTR(31),]                               @L1A 22785800
*  3 GSEC31_ACC_CRED_HNDL@ PTR(31),]                               @L1A 22785820
*                                                                       22785840
*                                                                       22785860
* 1 GSEC_DELSECCONTEXT BASED, ] Parameter list for Delete          @L1A 22785880
*                              ] security context                  @L1A 22785900
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22785920
*  3 GSEC_DEL_CNTXT_HNDL@ PTR(64),] Address of context handle      @L1A 22785940
*                                                                       22785960
* 1 GSEC31_DELSECCONTEXT BASED, ] Parameter list for Delete        @L1A 22785980
*                              ] security context                  @L1A 22786000
*  3 *(4) PTR(31),             ]                                   @L1A 22786020
*  3 GSEC31_DEL_CNTXT_HNDL@ PTR(31),]                              @L1A 22786040
*                                                                       22786060
*                                                                       22786080
* 1 GSEC_RELCRED     BASED,    ] Parameter list for Release        @L1A 22786100
*                              ] credential                        @L1A 22786120
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22786140
*  3 GSEC_REL_CRED_HNDL@ PTR(64),] Address of credential handle    @L1A 22786160
*                                                                       22786180
*                                                                       22786200
* 1 GSEC31_RELCRED   BASED,    ] Parameter list for Release        @L1A 22786220
*                              ] credential                        @L1A 22786240
*  3 *(4) PTR(31),             ]                                   @L1A 22786260
*  3 GSEC31_REL_CRED_HNDL@ PTR(31),]                               @L1A 22786280
*                                                                       22786300
*                                                                       22786320
* 1 GSEC_GETMIC      BASED,    ] Parameter list for Get MIC for    @L1A 22786340
*                              ] message                           @L1A 22786360
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22786380
*  3 GSEC_GET_CONTXT_HNDL@ PTR(64),] Address of context handle     @L1A 22786400
*  3 GSEC_GET_MSGLN@   PTR(64),] Address of message length         @L1A 22786420
*  3 GSEC_GET_MSG@     PTR(64),] Address of message                @L1A 22786440
*  3 GSEC_GET_OUT_TOK@ PTR(64),] Address of returned token         @L1A 22786460
*                                                                       22786480
* 1 GSEC31_GETMIC    BASED,    ] Parameter list for Get MIC for    @L1A 22786500
*                              ] message                           @L1A 22786520
*  3 *(4) PTR(31),             ]                                   @L1A 22786540
*  3 GSEC31_GET_CONTXT_HNDL@ PTR(31),]                             @L1A 22786560
*  3 GSEC31_GET_MSGLN@   PTR(31),]                                 @L1A 22786580
*  3 GSEC31_GET_MSG@     PTR(31),]                                 @L1A 22786600
*  3 GSEC31_GET_OUT_TOK@ PTR(31),]                                 @L1A 22786620
*                                                                       22786640
*                                                                       22786660
* 1 GSEC_VERMIC      BASED,    ] Parameter list for Verify MIC for @L1A 22786680
*                              ] message                                22786700
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22786720
*  3 GSEC_VER_CONTXT_HNDL@ PTR(64),] Address of context handle     @L1A 22786740
*  3 GSEC_VER_MSGLN@   PTR(64),] Address of message length         @L1A 22786760
*  3 GSEC_VER_MSG@     PTR(64),] Address of message                @L1A 22786780
*  3 GSEC_VER_TOKLN@   PTR(64),] Address of length of token        @L1A 22786800
*  3 GSEC_VER_TOKEN@   PTR(64),] Address of token                  @L1A 22786820
*                                                                       22786840
* 1 GSEC31_VERMIC    BASED,    ] Parameter list for Verify MIC for @L1A 22786860
*                              ] message                                22786880
*  3 *(4) PTR(31),             ]                                   @P2C 22786900
*  3 GSEC31_VER_CONTXT_HNDL@ PTR(31),]                             @L1A 22786920
*  3 GSEC31_VER_MSGLN@   PTR(31),]                                 @L1A 22786940
*  3 GSEC31_VER_MSG@     PTR(31),]                                 @L1A 22786960
*  3 GSEC31_VER_TOKLN@   PTR(31),]                                 @L1A 22786980
*  3 GSEC31_VER_TOKEN@   PTR(31),]                                 @L1A 22787000
*                                                                       22787020
*                                                                       22787040
* 1 GSEC_WRAPMSG     BASED,    ] Parameter list for Wrap a message @L1A 22787060
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22787080
*  3 GSEC_WRAP_CONTXT_HNDL@ PTR(64),] Address of context handle    @L1A 22787100
*  3 GSEC_WRAP_REQ_FLAG@ PTR(64),] Address of conf-identiality     @L1A 22787120
*                                 ] request flag                   @L1A 22787140
*  3 GSEC_WRAP_MSGLN@ PTR(64),] Address of message length          @L1A 22787160
*  3 GSEC_WRAP_MSG@    PTR(64),] Address of message                @L1A 22787180
*  3 GSEC_WRAP_STATE@ PTR(64),] Address of area for                @L1A 22787200
*                              ] conf-identiality state            @L1A 22787220
*  3 GSEC_WRAP_OUT_TOK@ PTR(64),] Address of returned token        @L1A 22787240
*                                                                       22787260
* 1 GSEC31_WRAPMSG   BASED,    ] Parameter list for Wrap a message @L1A 22787280
*  3 *(4) PTR(31),             ]                                   @P2C 22787300
*  3 GSEC31_WRAP_CONTXT_HNDL@ PTR(31),]                            @L1A 22787320
*  3 GSEC31_WRAP_REQ_FLAG@ PTR(31),]                               @L1A 22787340
*  3 GSEC31_WRAP_MSGLN@ PTR(31),]                                  @L1A 22787360
*  3 GSEC31_WRAP_MSG@    PTR(31),]                                 @L1A 22787380
*  3 GSEC31_WRAP_STATE@ PTR(31),]                                  @L1A 22787400
*  3 GSEC31_WRAP_OUT_TOK@ PTR(31),]                                @L1A 22787420
*                                                                       22787440
*                                                                       22787460
* 1 GSEC_UNWRAPMSG   BASED,    ] Parameter list for Unwrap a msg   @L1A 22787480
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22787500
*  3 GSEC_UNWRAP_CONTXT_HNDL@ PTR(64),] Address of context handle  @L1A 22787520
*  3 GSEC_UNWRAP_TOKLN@ PTR(64),] Address of token length          @L1A 22787540
*  3 GSEC_UNWRAP_TOKEN@ PTR(64),] Address of token                 @L1A 22787560
*  3 GSEC_UNWRAP_MSG@ PTR(64),] Address of returned message        @L1A 22787580
*  3 GSEC_UNWRAP_STATE@ PTR(64),] Address of area for              @L1A 22787600
*                                ] conf-identiality state          @L1A 22787620
*                                                                       22787640
* 1 GSEC31_UNWRAPMSG BASED,    ] Parameter list for Unwrap a msg   @L1A 22787660
*  3 *(4) PTR(31),             ]                                   @L1A 22787680
*  3 GSEC31_UNWRAP_CONTXT_HNDL@ PTR(31),]                         @L1A  22787700
*  3 GSEC31_UNWRAP_TOKLN@ PTR(31),]                                @L1A 22787720
*  3 GSEC31_UNWRAP_TOKEN@ PTR(31),]                                @L1A 22787740
*  3 GSEC31_UNWRAP_MSG@ PTR(31),]                                  @L1A 22787760
*  3 GSEC31_UNWRAP_STATE@ PTR(31),]                                @L1A 22787780
*                                                                       22787800
*                                                                       22787820
* 1 GSEC_EXPORTSECCONTEXT BASED,] Parameter list for Export        @L1A 22787840
*                                ] security context                @L1A 22787860
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22787880
*  3 GSEC_EXPSEC_CONTXT_HNDL@ PTR(64),] Address of context handle @L1A  22787900
*  3 GSEC_EXPSEC_OUT_TOK@ PTR(64),] Address of returned token      @L1A 22787920
*                                                                       22787940
* 1 GSEC31_EXPORTSECCONTEXT BASED,] Parameter list for Export      @L1A 22787960
*                                 ] security context               @L1A 22787980
*  3 *(4) PTR(31),             ]                                   @L1A 22788000
*  3 GSEC31_EXPSEC_CONTXT_HNDL@ PTR(31),]                          @L1A 22788020
*  3 GSEC31_EXPSEC_OUT_TOK@ PTR(31),]                              @L1A 22788040
*                                                                       22788060
*                                                                       22788080
* 1 GSEC_IMPORTSECCONTEXT BASED,] Parameter list for Import        @L1A 22788100
*                                ] security context                @L1A 22788120
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22788140
*  3 GSEC_IMPSEC_TOKLN@ PTR(64),] Address of length of token       @L1A 22788160
*  3 GSEC_IMPSEC_TOKEN@ PTR(64),] Address of token                 @L1A 22788180
*  3 GSEC_IMPSEC_CONTXT_HNDL@ PTR(64),] Address of area for        @L1A 22788200
*                                      ] context handle            @L1A 22788220
*                                                                       22788240
* 1 GSEC31_IMPORTSECCONTEXT BASED,] Parameter list for Import      @L1A 22788260
*                                 ] security context               @L1A 22788280
*  3 *(4) PTR(31),              ]                                  @L1A 22788300
*  3 GSEC31_IMPSEC_TOKLN@ PTR(31),]                                @L1A 22788320
*  3 GSEC31_IMPSEC_TOKEN@ PTR(31),]                                @L1A 22788340
*  3 GSEC31_IMPSEC_CONTXT_HNDL@ PTR(31),]                          @L1A 22788360
*                                                                       22788380
*                                                                       22788400
* 1 GSEC_EXPORTCRED BASED,     ] Parameter list for Export         @L1A 22788420
*                              ] credential                        @L1A 22788440
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22788460
*  3 GSEC_EXPCRD_CRED_HNDL@ PTR(64),] Address of credential        @L1A 22788480
*                                    ] handle                      @L1A 22788500
*  3 GSEC_EXPCRD_OUT_TOK@ PTR(64),] Address of returned token      @L1A 22788520
*                                                                       22788540
* 1 GSEC31_EXPORTCRED BASED,   ] Parameter list for Export         @L1A 22788560
*                              ] credential                        @L1A 22788580
*  3 *(4) PTR(31),             ]                                   @L1A 22788600
*  3 GSEC31_EXPCRD_CRED_HNDL@ PTR(31),]                            @L1A 22788620
*  3 GSEC31_EXPCRD_OUT_TOK@ PTR(31),]                              @L1A 22788640
*                                                                       22788660
*                                                                       22788680
* 1 GSEC_IMPORTCRED BASED,     ] Parameter list for Import         @L1A 22788700
*                              ] credential                        @L1A 22788720
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22788740
*  3 GSEC_IMPCRD_TOKLN@ PTR(64),] Address of length of token       @L1A 22788760
*  3 GSEC_IMPCRD_TOKEN@ PTR(64),] Address of token                 @L1A 22788780
*  3 GSEC_IMPCRD_CRED_HNDL@ PTR(64),] Address of area for          @L1A 22788800
*                                    ] credential handle           @L1A 22788820
*                                                                       22788840
* 1 GSEC31_IMPORTCRED BASED,   ] Parameter list for Import         @L1A 22788860
*                              ] credential                        @L1A 22788880
*  3 *(4) PTR(31),             ]                                   @L1A 22788900
*  3 GSEC31_IMPCRD_TOKLN@ PTR(31),]                                @L1A 22788920
*  3 GSEC31_IMPCRD_TOKEN@ PTR(31),]                                @L1A 22788940
*  3 GSEC31_IMPCRD_CRED_HNDL@ PTR(31),]                            @L1A 22788960
*                                                                       22788980
*                                                                       22789000
* 1 GSEC_ACQUIRECRED BASED,    ] Parameter list for Acquire        @L1A 22789020
*                              ] initiator credential              @L1A 22789040
*  3 *(4) PTR(64),             ] Common parms                      @L1A 22789060
*  3 GSEC_ACQCRD_REQ_EXPIRE@ PTR(64),] Address of requested        @L1A 22789080
*                                    ] credential expiraition time @L1A 22789100
*  3 GSEC_ACQCRD_CRED_HNDL@ PTR(64),] Address of area for          @L1A 22789120
*                                   ] credential handle            @L1A 22789140
*  3 GSEC_ACQCRD_PRIN@ PTR(64),] Address of area for principal     @L1A 22789160
*                               ] name                             @L1A 22789180
*  3 GSEC_ACQCRD_CRED_EXPIRE@ PTR(64),] Address of area for        @L1A 22789200
*                              ] actual credential expiration time @L1A 22789220
*                                                                       22789240
* 1 GSEC31_ACQUIRECRED BASED,  ] Parameter list for Acquire        @L1A 22789260
*                              ] initiator credential              @L1A 22789280
*  3 *(4) PTR(31),             ]                                   @L1A 22789300
*  3 GSEC31_ACQCRD_REQ_EXPIRE@ PTR(31),]                           @L1A 22789320
*  3 GSEC31_ACQCRD_CRED_HNDL@ PTR(31),]                            @L1A 22789340
*  3 GSEC31_ACQCRD_PRIN@ PTR(31),]                                 @L1A 22789360
*  3 GSEC31_ACQCRD_CRED_EXPIRE@ PTR(31),]                          @L1A 22789380
*                                                                       22789400
* ] GSEC_FUNC FUNCTION CODE 3                                      @L2A 22789420
* 1 GSEC_PASSTICKET_PARMS BASED,] Parameter list for PassTicket    @L2A 22789440
*  3 GSEC_TICKET_OPTIONS PTR(64), ] Address of Passticket option:  @L2A 22789460
*                               ]     1=generate, 2=evaluate       @L2A 22789480
*  3 GSEC_TICKET     PTR(64),   ] Address of source or destination @L2A 22789500
*                               ]   PassTicket                     @L2A 22789520
*  3 GSEC_USERID PTR(64),       ] Address of Userid for PassTicket      22789540
*                               ]   operation                      @L2A 22789560
*  3 GSEC_APPLICATION PTR(64),  ] Address of PassTicket                 22789580
*                               ]   application ID                 @L2A 22789600
*                                                                       22789620
* 1 GSEC31_PASSTICKET_PARMS BASED,] Parameter list for PassTicket  @L2A 22789640
*  3 GSEC31_TICKET_OPTIONS PTR(31),] Address of Passticket option: @L2A 22789660
*                               ]     1=generate, 2=evaluate       @L2A 22789680
*  3 GSEC31_TICKET     PTR(31), ] Address of source or destination @L2A 22789700
*                               ]   PassTicket                     @L2A 22789720
*  3 GSEC31_USERID PTR(31),       ] Address of Userid for PassTicket    22789740
*                               ]   operation                      @L2A 22789760
*  3 GSEC31_APPLICATION PTR(31);  ] Address of PassTicket               22789780
*                               ]   application ID                 @L2A 22789800
*                                                                       22789820
