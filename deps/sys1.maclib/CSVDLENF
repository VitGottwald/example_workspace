*                                                                       00001000
* %DCL CSVDLENF_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE CSVDLENF_INCLUDED;                                        00003000
* %IF CSVDLENF_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 15225. CBGEN compile date 12258         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         CSVDLENF &DSECT=YES,&LIST=YES,&TITLE=YES,&DLENF=YES            00009000
         GBLC  &CSVDLENF_INCLUDED                                       00010000
         GBLC  &ZCBPRINT                                                00011000
&CSVDLENF_INCLUDED SETC 'YES'                                           00012000
         AIF   ('&LIST' EQ 'NONE').P0                                   00013000
         AIF   ('&TITLE' EQ 'NO').P5                                    00014000
 TITLE   'CSVDLENF  - Dynamic Lnklst ENF mapping (event code 52)     '  00015000
.P5      ANOP                                                           00016000
**/ CSVDLENF_1:;                                                        00017000
*/* START OF SPECIFICATIONS ******************************************* 00018000
*                                                                       00019000
*  **PROPRIETARY_STATEMENT********************************************  00020000
***01* PROPRIETARY STATEMENT=                                        *  00021000
*                                                                    *  00022000
*                                                                    *  00023000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  00024000
*   5650-ZOS COPYRIGHT IBM CORP. 1997,2017                           *  00025000
*                                                                    *  00026000
*   STATUS= HBB77B0                                                  *  00027000
*                                                                    *  00028000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  00029000
*                                                                       00030000
*01* DESCRIPTIVE NAME:  Dynamic Lnklst ENF mapping (event code 52)      00031000
*02*  ACRONYM:  DLEN                                                    00032000
*                                                                       00033000
*01* MACRO NAME:  CSVDLENF                                              00034000
*                                                                       00035000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00036000
*01* END OF EXTERNAL CLASSIFICATION:                                    00037000
*                                                                       00038000
*01* DSECT NAME:                                                        00039000
*     DLENF                                                             00040000
*                                                                       00041000
*01* COMPONENT:  Contents Supervision (SC1CJ)                           00042000
*                                                                       00043000
*01* EYE-CATCHER:  DLEN                                                 00044000
*02*   OFFSET: 0                                                        00045000
*02*   LENGTH: 4                                                        00046000
*                                                                       00047000
*01* STORAGE ATTRIBUTES:                                                00048000
*02*  SUBPOOL:  247 for ENF signal                                      00049000
*02*  KEY:  0                                                           00050000
*02*  RESIDENCY:  Above 16M                                             00051000
*                                                                       00052000
*01* SIZE:                                                              00053000
*                DLENF -- X'0088' bytes                                 00054000
*                                                                       00055000
*01* CREATED BY:                                                        00056000
*     Dynamic LNKLST processing, and provided to ENF listeners          00057000
*      for event 052.                                                   00058000
*                                                                       00059000
*01* POINTED TO BY:                                                     00060000
*     R1 on entry to ENF listening routine                              00061000
*                                                                       00062000
*01* SERIALIZATION:                                                     00063000
*     None required                                                     00064000
*                                                                       00065000
*01* FUNCTION:                                                          00066000
*02* Maps the data provided for ENF event 052.                          00067000
*                                                                       00068000
*                                                                       00069000
*                                                                       00070000
*01* METHOD OF ACCESS:                                                  00071000
*02*  ASM:                                                              00072000
*      CSVDLENF                                                         00073000
*           DSECT=YES!NO  -- Request DSECT definition                   00074000
*           DLENF=YES!NO!COND -- Request mapping                        00075000
*                            USING on DLENF                             00076000
*     Default: DSECT=YES,DLENF=YES                                      00077000
*     Notes: name=YES  => expand                                        00078000
*            name=NO   => do not expand                                 00079000
*            name=COND => expand only if DSECT=YES                      00080000
*                                                                       00081000
*02*  PL/AS:                                                            00082000
*      %INCLUDE SYSLIB(CSVDLENF)                                        00083000
*                                                                       00084000
*01* DELETED BY:  ENF processing                                        00085000
*                                                                       00086000
*01* FREQUENCY:  Created for ACTIVATE request                           00087000
*                                                                       00088000
*01* DEPENDENCIES:  None                                                00089000
*                                                                       00090000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00091000
*                                                                       00092000
*01* CHANGE ACTIVITY:                                                   00093000
*   $L0=DYNLLCBG ,HBB6603,941231,PD00XB: Dynamic LNKLST                 00094000
*   $L1=DYNLLCSV ,HBB6603,941231,PD00XB: Dynamic LNKLST                 00095000
*   $L2=WI91716  ,HBB77B0 150806 PD00XB: Consname                       00096000
*   **CAUTION: The intent is that this match EXACTLY CSVDLSMF           00097000
*   **CAUTION: with the addition of eyecatcher and compID.              00098000
*   **CAUTION: Update CSVDLSMF and the SMF                              00099000
*   **CAUTION: section in CSVDLPR if this macro changes.                00100000
*                                                                       00101000
* END OF SPECIFICATIONS *********************************************/  00102000
*% /*                                                                   00103000
.P0      ANOP                                                           00104000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00105000
         AIF   ('&LIST' EQ 'YES').P2                                    00106000
.P1      ANOP                                                           00107000
         PUSH  PRINT                                                    00108000
         PRINT OFF                                                      00109000
.P2      ANOP                                                           00110000
         AIF   ('&DLENF' EQ 'NO').L0002                                 00111000
         AIF   ('&DSECT' EQ 'YES').L0003                                00112000
         AIF   ('&DLENF' NE 'YES').L0002                                00113000
DLENF    DS    0D        Dynamic LNKLST Event Notification Parameter   *00114000
                         List                                           00115000
         AGO   .L0004                                                   00116000
.L0003   ANOP                                                           00117000
DLENF    DSECT           Dynamic LNKLST Event Notification Parameter   *00118000
                         List                                           00119000
.L0004   ANOP                                                           00120000
DLENFID  DS    CL4       Eyecatcher 'DLEN'                              00121000
DLENFCOMPONENT DS CL5    Component acronym 'SC1CJ'                      00122000
         DS    CL3       Unused                                         00123000
DLENFLNKLSTSEQ# DS F     Seq# of the LNKLST set. Note that the number  *00124000
                         always increases when a new LNKLST set, or a  *00125000
                         not-in-use old LNKLST set, is activated. But  *00126000
                         if an in-use LNKLST set is activated, the     *00127000
                         number of that LNKLST set does not change.    *00128000
                         That means that on an activation, the LNKLST  *00129000
                         sequence number does change from what it was  *00130000
                         (ignoring the the uninteresting case where    *00131000
                         you activate the current LNKLST set, which is *00132000
                         effectively a no-op), but does not             00133000
*                        necessarily increase.                          00134000
DLENFLNKLSTNAME DS CL16  Name of the LNKLST set that was just          *00135000
                         activated                                      00136000
DLENFTIMESTAMP DS CL8    Time value (from STCK) of the activation       00137000
DLENFCONSID DS F         Console ID of the issuer of the activation     00138000
DLENFUTOKEN DS CL80      Security product user token of issuer of the  *00139000
                         activation                                     00140000
DLENFCONSNAME DS CL8     Console name of the issuer of the activation   00141000
         DS    CL4       Unused                                         00142000
DLENFIDCHARS EQU C'DLEN' Eyecatcher                                     00143000
DLENF_LEN EQU  *-DLENF                                                  00144000
.L0002   ANOP                                                           00145000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00146000
         AIF   ('&LIST' EQ 'YES').P4                                    00147000
.P3      ANOP                                                           00148000
         POP   PRINT                                                    00149000
.P4      ANOP                                                           00150000
.P_EXIT  ANOP                                                           00151000
         MEND                                                           00152000
**/ CSVDLENF_2:;                                                        00153000
* %CSVDLENF_INCLUDED = 'YES';                                           00154000
* %DCL ZCBPRINT CHAR EXT;                                               00155000
* %DEACTIVATE ZCBPRINT;                                                 00156000
* %DCL CSVDLENF_LIST CHAR EXT;                                          00157000
* %DEACTIVATE CSVDLENF_LIST;                                            00158000
* %IF CSVDLENF_LIST ^= 'NO' &                                           00159000
*    ZCBPRINT ^= 'NO' %THEN                                             00160000
*   %GOTO CSVDLENF_3;                                                   00161000
*   @LIST PUSH NOECHO;                                                  00162000
*   @LIST NOASSEMBLE NOECHO;                                            00163000
*   @LIST OFF C NOECHO;                                                 00164000
* %CSVDLENF_3:;                                                         00165000
*/* Start of PL/X Source                                             */ 00166000
* %SELECT(DLENF_BASED);            /*                            @L1A*/ 00167000
*   %WHEN('')                      /* Not specified?             @L1A*/ 00168000
*     %DLENF_BASED = 'BASED(*)'; /* Default to simply based      @L1A*/ 00169000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 00170000
*       %DLENF_BASED = '';         /* Nullify the basing expression     00171000
*                                                                @L1A*/ 00172000
*   %OTHERWISE %;                  /* Else leave what user supplied     00173000
*                                                                @L1A*/ 00174000
* %END SELECT;                     /*                            @L1A*/ 00175000
*   DECLARE                                                             00176000
*     1    DLENF DLENF_BASED,         /* Dynamic LNKLST Event           00177000
*                                   Notification Parameter List  @L1A*/ 00178000
*       3    DlenfID CHAR(4),         /* Eyecatcher 'DLEN'       @L1A*/ 00179000
*       3    DlenfComponent CHAR(5),  /* Component acronym 'SC1CJ'      00180000
*                                                                @L1A*/ 00181000
*       3    * CHAR(3),               /* Unused                  @L1A*/ 00182000
*       3    DlenfLnklstSeq# Fixed,   /* Seq# of the LNKLST set.        00183000
*                     Note that the number always increases             00184000
*                     when a new LNKLST set, or a not-in-use            00185000
*                     old LNKLST set, is activated. But if an           00186000
*                     in-use LNKLST set is activated, the number        00187000
*                     of that LNKLST set does not change. That means    00188000
*                     that on an activation, the LNKLST sequence        00189000
*                     number does change from what it was (ignoring     00190000
*                     the the uninteresting case where you activate     00191000
*                     the current LNKLST set, which is effectively a    00192000
*                     no-op), but does not necessarily increase.        00193000
*                                                                @P1C*/ 00194000
*       3    DlenfLnklstName CHAR(16),  /* Name of the LNKLST set that  00195000
*                                    was just activated          @L1A*/ 00196000
*       3    DlenfTimeStamp CHAR(8),    /* Time value (from STCK) of    00197000
*                                    the activation              @L1A*/ 00198000
*       3    DlenfConsid FIXED(32),     /* Console ID of the issuer of  00199000
*                                    the activation              @L1A*/ 00200000
*       3    DlenfUToken CHAR(80),      /* Security product user token  00201000
*                                    of issuer of the activation @L1A*/ 00202000
*       3    DlenfConsname Char(8),   /* Console name of the issuer of  00203000
*                                    the activation              @L2A*/ 00204000
*       3    * CHAR(4),                 /* Unused                @L1A*/ 00205000
*       3    * CHAR(0) Bdy(DWORD);    /* End of ENF area         @L1A*/ 00206000
*                                                                       00207000
*   Declare                                                             00208000
*     DlenfIdChars CHAR(*) CONSTANT('DLEN'); /* Eyecatcher       @L1A*/ 00209000
* @LOGIC;                                                               00210000
* #PRAGMA TOOL=CBGEN.                                                   00211000
* #USEORG.                                                              00212000
* #EPRAGMA.                                                             00213000
* @ENDLOGIC;                                                            00214000
*/* End of PL/X Source                                               */ 00215000
* %IF CSVDLENF_LIST ^= 'NO' &                                           00216000
*    ZCBPRINT ^= 'NO' %THEN                                             00217000
*   %GOTO CSVDLENF_4;                                                   00218000
*   @LIST POP NOECHO;                                                   00219000
* %CSVDLENF_4:;                                                         00220000
* %END;                                                                 00221000
