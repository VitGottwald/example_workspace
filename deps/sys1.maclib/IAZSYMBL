*      % IAZSYMBL: MACRO KEYS(PARM,RC);                                 00010000
*        GOTO SYMBPLX;               /* Bilingual macro                 00020000
         MACRO                                                          00030000
&LABEL   IAZSYMBL &PARM=                                                00040000
.*                                                                      00050000
.****** START OF SPECIFICATIONS **************************************  00060000
.****PROPRIETARY-STATEMENT********************************************  00070000
.*01* PROPRIETARY STATEMENT:                                         *  00080000
.*                                                                   *  00090000
.*   LICENSED MATERIALS-PROPERTY OF IBM                              *  00100000
.*   5650-ZOS Copyright IBM Corp. 2013, 2021                         *  00110000
.*                                                                   *  00120000
.*   STATUS:  HBB77D0                                                *  00130000
.*                                                                   *  00140000
.****END-OF-PROPRIETARY-STATEMENT*************************************  00150000
.*                                                                   *  00160000
.*01* DESCRIPTIVE NAME: Invoke JES symbol service IAZSYMBL           *  00170000
.*                                                                   *  00180000
.*01* EXTERNAL CLASSIFICATION:  GUPI                                 *  00190000
.*01* END OF EXTERNAL CLASSIFICATION:                                *  00200000
.*                                                                   *  00210000
.*01* COMPONENT ID:  JES Common (SC141)                              *  00220000
.*                                                                   *  00230000
.*01* FUNCTION:                                                      *  00240000
.*                                                                   *  00250000
.*     This macro invokes JES symbol service IAZSYMBL.               *  00260000
.*     Parameter structure of the JES symbol service is mapped       *  00270000
.*     by the IAZSYMDF macro.                                        *  00280000
.*                                                                   *  00290000
.*     IAZSYMBL service performs operations on JES symbols           *  00300000
.*     defined for the current task or job step:                     *  00310000
.*      - Create symbols (names and values)                          *  00320000
.*      - Update symbol values given symbol names                    *  00330000
.*      - Delete symbols                                             *  00340000
.*      - Clear  symbols                                             *  00350000
.*      - Extract symbol values given symbol names                   *  00360000
.*                                                                   *  00370000
.*01* SYNTAX:                                                        *  00380000
.*                                                                   *  00390000
.*02*  ASM:                                                          *  00400000
.*                                                                   *  00410000
.*      IAZSYMBL PARM=prmlst                                         *  00420000
.*                                                                   *  00430000
.*        PARM=prmlst  RX-type address of the parameter list.        *  00440000
.*                     The parameter list structure and data         *  00450000
.*                     returned by the service are mapped            *  00460000
.*                     by IAZSYMDF macro.                            *  00470000
.*        or                                                         *  00480000
.*                                                                   *  00490000
.*        PARM=(reg)   Address of a parameter list was loaded        *  00500000
.*                     by the caller to register reg.                *  00510000
.*        or                                                         *  00520000
.*                                                                   *  00530000
.*        PARM=        If PARM keyword is omitted, it is assumed     *  00540000
.*                     that caller loaded parameter list address     *  00550000
.*                     in register 1.                                *  00560000
.*                                                                   *  00570000
.*        Invocation return code is in register 15.                  *  00580000
.*        If invocation was successful (R15 = 0), return code from   *  00590000
.*        the IAZSYMBL service is in JSYMRETN in the parameter       *  00600000
.*        list.                                                      *  00610000
.*                                                                   *  00620000
.*02*  PL/X:                                                         *  00630000
.*                                                                   *  00640000
.*      ?IAZSYMBL PARM(prmlst)                                       *  00650000
.*                RC(rc)                                             *  00660000
.*                                                                   *  00670000
.*        PARM(prmlst) Optional keyword.                             *  00680000
.*                     prmlst is the parameter list passed           *  00690000
.*                     to the service.                               *  00700000
.*                     The parameter list structure and data         *  00710000
.*                     returned by the service are mapped            *  00720000
.*                     by ?IAZSYMDF macro.                           *  00730000
.*                                                                   *  00740000
.*                     If PARM keyword is omitted, it is assumed     *  00750000
.*                     that caller loaded parameter list address     *  00760000
.*                     in register 1.                                *  00770000
.*                                                                   *  00780000
.*        RC(rc)       Optional keyword.                             *  00790000
.*                     Invocation return code set in register 15     *  00800000
.*                     will be assigned to variable rc.              *  00810000
.*                     If invocation was successful (R15 = 0),       *  00820000
.*                     return code from the IAZSYMBL service is in   *  00830000
.*                     JSYMRETN in the parameter list.               *  00840000
.*                                                                   *  00850000
.*01*  REGISTER USAGE (ENTRY/EXIT):                                  *  00860000
.*                                                                   *  00870000
.*     REG       VALUE ON ENTRY       VALUE ON EXIT                  *  00880000
.*               TO MACRO             FROM MACRO                     *  00890000
.*                                                                   *  00900000
.*     R0        n/a                  unchanged                      *  00910000
.*     R1        n/a                  destroyed                      *  00920000
.*     R2-R13    n/a                  unchanged                      *  00930000
.*     R14       n/a                  destroyed                      *  00940000
.*     R15       n/a                  return code                    *  00950000
.*                                                                   *  00960000
.*01*  RETURN CODES (R15 ON EXIT):                                   *  00970000
.*                                                                   *  00980000
.*     0  - Service was successfully called.                         *  00990000
.*          Result of the call is reflected in the parameter list.   *  01000000
.*          See return code in JSYMRETN and reason code in JSYMREAS. *  01010000
.*     8  - Parameter list is unusable:                              *  01020000
.*           - no parameter passed                                   *  01030000
.*           - wrong eyecatcher                                      *  01040000
.*           - wrong version                                         *  01050000
.*           - wrong length                                          *  01060000
.*     12 - Not enough storage to invoke service                     *  01070000
.*     16 - Service not available.                                   *  01080000
.*                                                                   *  01090000
.*01* ENVIRONMENT:                                                   *  01100000
.*                                                                   *  01110000
.*    IAZSYMBL service should be called in primary access mode       *  01120000
.*    in 31-bit addressing mode.                                     *  01130000
.*                                                                   *  01140000
.*    Minimum authorization:                                         *  01150000
.*                 Problem or Supervisor state. Any PSW key.         *  01160000
.*                                                                   *  01170000
.*    Dispatchable unit mode:                                        *  01180000
.*       Task mode unless option JSYMLVNJ is used.                   *  01190000
.*                                                                   *  01200000
.*    Cross Memory Mode: PASN=HASN=SASN.                             *  01210000
.*                                                                   *  01220000
.*    AMODE:       31-bit.                                           *  01230000
.*                                                                   *  01240000
.*    ASC mode:    Primary.                                          *  01250000
.*                                                                   *  01260000
.*    Locks:       No locks held unless option JSYMLVNJ is used.     *  01270000
.*                                                                   *  01280000
.*01* NOTES:                                                         *  01290000
.*                                                                   *  01300000
.*    1.Dependencies:                                                *  01310000
.*      - CVT and IHAECVT macros are required to map CVT and ECVT    *  01320000
.*        respectively.                                              *  01330000
.*      - In addition, for PL/X the following is required:           *  01340000
.*          - the EPILOG macro is required                           *  01350000
.*                                                                   *  01380000
.****** END OF SPECIFICATIONS ****************************************  01390000
.*********************************************************************  01400000
.*01* CHANGE ACTIVITY:                                               *  01410000
.* $Z21LSYM=JCLSYM   HBB7790 111107 ALP:  Instream substitution      *  01415000
.*                                                                   *  01416000
.*                                                                   *  01420000
.*01* A000000-999999    Created for z/OS rel 2.1              @Z22LSYM  01430000
.*********************************************************************  01440000
.*                                                                      01450000
         LCLC  &LAB                                                     01460000
&LAB     SETC  '&LABEL'                                                 01470000
.*                                                                      01480000
         AIF   (N'&SYSLIST EQ 0).NOPOS                                  01490000
.*                                                                      01500000
&I       SETA  1                                                        01510000
.CHKPOS  AIF   ('&SYSLIST(&I)' EQ '').NEXTPOS                           01520000
         MNOTE 8,'IAZSYMBL - Invalid parameter ''&SYSLIST(&I)'''        01530000
         AGO   .NOPOS                                                   01540000
.NEXTPOS ANOP                                                           01550000
&I       SETA  &I+1                                                     01560000
         AIF   (&I LE N'&SYSLIST).CHKPOS                                01570000
.*                                                                      01580000
.NOPOS   AIF   ('&PARM' EQ '').INVOKE,                                 C01590000
               ('&PARM'(1,1) EQ '(').DOREG                              01600000
&LAB     LA    1,&PARM             Load parameter address               01610000
&LAB     SETC  ''                                                       01620000
         AGO   .INVOKE                                                  01630000
.*                                                                      01640000
.DOREG   ANOP                                                           01650000
         AIF   ('&PARM(1)' EQ '1').INVOKE,                             C01660000
               ('&PARM(1)' EQ 'R1').INVOKE,                            C01670000
               ('&PARM(1)' EQ 'GPR1').INVOKE                            01680000
&LAB     LR    1,&PARM(1)          Load parameter address               01690000
&LAB     SETC  ''                                                       01700000
.*                                                                      01710000
.INVOKE  ANOP                                                           01720000
&LAB     LHI   15,16                   Assume no service                01730000
         L     14,CVTPTR(,0)           Point to the CVT                 01740000
         L     14,CVTECVT-CVTMAP(,14)  Point to the ECVT                01750000
         ICM   14,B'1111',ECVTJCCT-ECVT(14)  Point to JCCT              01760000
         JZ    *+16                            None, failed             01770000
         ICM   14,B'1111',44(14)       Load LX/EX                       01780000
         JZ    *+8                       Not set, failure               01790000
         PC    0(14)                   Invoke IAZSYMBL service          01800000
.*                                                                      01810000
         MEND                                                           01820000
.*                                                                      01830000
**/                                                                     01840000
*  SYMBPLX: ;                                                           01850000
*                                                                       01860000
*  DCL MAC$RET FIXED;          /* macro return code                  */ 01870000
*  DCL IDENT CHAR;             /* macro invocation                   */ 01880000
*  DCL CMT CHAR;               /* field used to build comments       */ 01890000
*  DCL INDENT FIXED;           /* indentation column                 */ 01900000
*  DCL EHAREGS CHAR EXTERNAL;  /* Registers used                     */ 01910000
*                                                                       01920000
*/********************************************************************/ 01930000
*/*                                                                  */ 01940000
*/*      Initialize variables                                        */ 01950000
*/*                                                                  */ 01960000
*/********************************************************************/ 01970000
*                                                                       01980000
*  MAC$RET = 0;              /* start off assuming no compile errors */ 01990000
*  INDENT = MACCOL;          /* start where macro coded              */ 02000000
*  IDENT = MACLABEL!!MACNAME!!MACLIST!!' '!!MACKEYS;  /* macro          02010000
*                                                         invocation */ 02020000
*                                                                       02030000
*  ANS(MACLABEL) COL(MACLMAR);   /* label the answered code          */ 02040000
*  INDENT = INDENT + 2;                                                 02050000
*  ANS('DO; '!!COMMENT(IDENT)) COL(INDENT); /* bracket the answered     02060000
*                               code with DO/END and echo the           02070000
*                               invocation as a comment              */ 02080000
*  INDENT = INDENT + 2;                                                 02090000
*                                                                       02100000
*/********************************************************************/ 02110000
*/*                                                                  */ 02120000
*/*      Make sure there are no positional parameters                */ 02130000
*/*                                                                  */ 02140000
*/********************************************************************/ 02150000
*                                                                       02160000
*  IF NUMBER(MACLIST) > 0 THEN                                          02170000
*    DO;                                                                02180000
*      ANS MSG('IAZSYMBL - Invalid positional parameters '!!            02190000
*                    'are specified');                                  02200000
*      MAC$RET = 8;                                                     02210000
*    END;                                                               02220000
*                                                                       02230000
*/********************************************************************/ 02240000
*/*                                                                  */ 02250000
*/*      Restrict registers used by the service and make sure        */ 02260000
*/*      that they are declared by the EPILOG macro.                 */ 02270000
*/*                                                                  */ 02280000
*/********************************************************************/ 02290000
*                                                                       02300000
*  CMT = 'Restrict registers';                                          02310000
*  ANS('RFY (GPR01P,GPR14P,GPR15F) RSTD; ' !!COMMENT(CMT))              02320000
*    COL(INDENT) NORESCAN;                                              02330000
*  IF (INDEX(EHAREGS,'01P')=0) THEN      /* Make sure register 1 is  */ 02340000
*    EHAREGS = EHAREGS!!'01P';           /*  declared                */ 02350000
*  IF (INDEX(EHAREGS,'14P')=0) THEN      /* Make sure register 14 is */ 02360000
*    EHAREGS = EHAREGS!!'14P';           /*  declared                */ 02370000
*  IF (INDEX(EHAREGS,'15F')=0) THEN      /* Make sure register 15 is */ 02380000
*    EHAREGS = EHAREGS!!'15F';           /*  declared                */ 02390000
*                                                                       02400000
*/********************************************************************/ 02410000
*/*                                                                  */ 02420000
*/*      If PARM() keyword was specified, put parameter address      */ 02430000
*/*      in register 1.                                              */ 02440000
*/*                                                                  */ 02450000
*/********************************************************************/ 02460000
*  IF PARM ^= '' THEN                                                   02470000
*    DO;                                                                02480000
*      CMT = 'Load parameter address';                                  02490000
*      ANS('GPR01P = ADDR('!!PARM(1)!!');' !!COMMENT(CMT))              02500000
*      COL(INDENT) NORESCAN;                                            02510000
*    END;                                                               02520000
*                                                                       02530000
*  CMT = 'Assume invocation failure';                                   02540000
*  ANS('GPR15F = 16;' !!COMMENT(CMT)) COL(INDENT) NORESCAN;             02550000
*                                                                       02560000
*/********************************************************************/ 02570000
*/*                                                                  */ 02580000
*/*      Generate invocation sequence.                               */ 02590000
*/*                                                                  */ 02600000
*/********************************************************************/ 02610000
*                                                                       02620000
*  CMT = 'Get pointer to JCCT';                                         02630000
*  ANS('GPR14P = CS$CVT->CVTMAP.CVTECVT->ECVT.ECVTJCCT; ' !!            02640000
*    COMMENT(CMT)) COL(INDENT) NORESCAN;                                02650000
*                                                                       02660000
*  CMT = 'If JCCT is available';                                        02670000
*  ANS('IF GPR14P ^= 0 THEN '!!COMMENT(CMT))                            02680000
*    COL(INDENT) NORESCAN;                                              02690000
*  ANS('DO;') COL(INDENT) NORESCAN;                                     02700000
*  INDENT = INDENT + 2;                                                 02710000
*                                                                       02720000
*  CMT = 'Load service LX/EX';                                          02730000
*  ANS('GPR14P = GPR14P -> I256C(45::4);' !!COMMENT(CMT))               02740000
*    COL(INDENT) NORESCAN;                                              02750000
*  CMT = 'If service registered';                                       02760000
*  ANS('IF GPR14P ^= 0 THEN ' !!COMMENT(CMT))                           02770000
*    COL(INDENT) NORESCAN;                                              02780000
*  CMT = 'Call the service';                                            02790000
*  ANS('GENERATE CODE(PC 0(14)); ' !!COMMENT(CMT))                      02800000
*    COL(INDENT) NORESCAN;                                              02810000
*                                                                       02820000
*  INDENT = INDENT - 2;                                                 02830000
*  CMT = 'End invocation sequence';                                     02840000
*  ANS('END; '!!COMMENT(CMT)) COL(INDENT) NORESCAN;                     02850000
*                                                                       02860000
*/********************************************************************/ 02870000
*/*                                                                  */ 02880000
*/*      If RC was specified, handle return code.                    */ 02890000
*/*                                                                  */ 02900000
*/********************************************************************/ 02910000
*                                                                       02920000
*  IF RC ^= '' THEN                                                     02930000
*  DO;                                                                  02940000
*    CMT = 'Save return code';                                          02950000
*    ANS(RC(1) !! ' = GPR15F; ' !!COMMENT(CMT))                         02960000
*      COL(INDENT) NORESCAN;                                            02970000
*  END;                                                                 02980000
*                                                                       02990000
*/********************************************************************/ 03000000
*/*                                                                  */ 03010000
*/*      Unrestrict registers.                                       */ 03020000
*/*                                                                  */ 03030000
*/********************************************************************/ 03040000
*                                                                       03050000
*  CMT = 'Unrestrict registers';                                        03060000
*  ANS('RFY (GPR01P,GPR14P,GPR15F) UNRSTD; ' !!COMMENT(CMT))            03070000
*    COL(INDENT) NORESCAN;                                              03080000
*                                                                       03090000
*  INDENT = INDENT - 2;                                                 03100000
*  ANS('END;'!!COMMENT(IDENT)) COL(INDENT); /* bracket answered         03110000
*                               code with DO/END and echo the           03120000
*                               invocation as a comment              */ 03130000
*  RETURN CODE(MAC$RET);                                                03140000
*                                                                       03150000
* % END;                                                                03160000
* @Logic;                                                               03170000
* #PRAGMA TOOL=PADI.                                                    03180000
* #ASMLINE.  CVT                                                        03190000
* #ASMLINE.  IHAECVT                                                    03200000
* #ASMLINE.  IEFSSOBH                                                   03210000
* #ASMLINE.  IAZSSST DSECT=YES                                          03220000
* #LINE.Dcl CVTPTR Pointer(31);                                         03230000
* #PADIDELETE.STTRXTYP                                                  03240000
*#EPRAGMA                                                               03250000
*@ENDLOGIC;                                                             03260000
*/*                                  End of macro                    */ 99999999
