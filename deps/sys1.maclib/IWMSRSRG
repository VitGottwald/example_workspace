*%IWMSRSRG: MACRO KEYS(LOCATION,NETWORK_ID,LUNAME,STOKEN,USERDATA,      00000100
*                 HOST,HEALTH,RETCODE,RSNCODE,PLISTVER,MF);             00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWMSRSRG                              -07/02/15-<3> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Sysplex Routing Registration                  * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     5694-A01 COPYRIGHT IBM CORP. 1994, 2006                         * 00001400
*                                                                     * 00001500
* STATUS= HBB7730                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*      IWMSRSRG will register a server that wishes to participate in  * 00002200
*      sysplex workload balancing and to associate the server with a  * 00002300
*      health indicator. The service allows the caller to identify an * 00002400
*      address space to be associated with a triplet, corresponding   * 00002500
*      to location name, network id and LU name.  This triplet is     * 00002600
*      expected to be unique across all registered spaces in the      * 00002700
*      sysplex, and in fact should be unique across all networks.     * 00002800
*      The caller can additionally associate the triplet to a host    * 00002900
*      name.  Host name is optional and if not coded will be set to   * 00003000
*      blanks by the system. A list of eligible servers is made       * 00003100
*      available to IWMSRSRS. These work requests include enclaves    * 00003200
*      owned by the space as well as the address space's activity     * 00003300
*      itself.                                                        * 00003400
*                                                                     * 00003500
*      If this macro is issued to register a                          * 00003600
*      LOCATION.NETWORK_ID.LUNAME that already exists on the issuing  * 00003700
*      MVS image, the second registration will be ignored (IWMSRDRS   * 00003800
*      should first be used to deregister the triplet). This          * 00003900
*      condition will be identified through a unique return and       * 00004000
*      reason code.  Due to timing considerations, sysplex-wide       * 00004100
*      uniqueness is not enforced, and so is the responsibility of    * 00004200
*      the caller.                                                    * 00004300
*                                                                     * 00004400
*      The caller can additionally associate the server with a health * 00004500
*      indicator. This is a value between 0 and 100, that indicates   * 00004600
*      the percentage up to which the server is capable of doing its  * 00004700
*      normal work. This health indicator is used by the routing      * 00004800
*      service to modify the routing recommendations according to     * 00004900
*      this indicator.  It can be modfied by calling this service     * 00005000
*      again with another HEALTH value. In this case the return and   * 00005100
*      reason code for already registered servers will not be         * 00005200
*      returned.                                                      * 00005300
*                                                                     * 00005400
*      After a server registers by issuing this macro, the Sysplex    * 00005500
*      Routing Service (IWMSRSRS) can be issued to return a weighted  * 00005600
*      list of registered servers in the sysplex to which work could  * 00005700
*      be directed. Alternatively, the Sysplex Routing Service        * 00005800
*      (IWMSRSRS) can be used to obtain a complete list of servers    * 00005900
*      associated with a given location or to obtain the user data    * 00006000
*      associated with each server. Since the propagation of the      * 00006100
*      registration to other systems is asynchronous, a newly         * 00006200
*      registered triplet will not be immediately visible to other    * 00006300
*      systems.                                                       * 00006400
*                                                                     * 00006500
*      A server will be automatically deregistered during job         * 00006600
*      termination or memory termination.                             * 00006700
*                                                                     * 00006800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00006900
*                                                                     * 00007000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00007100
*                                                                     * 00007200
*01* ENVIRONMENT:                                                     * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*      Minimum authorization:                                         * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*                        o   Problem state with any PSW key if the    * 00007900
*                            address space token specified with       * 00008000
*                            STOKEN=stoken equals the address space   * 00008100
*                            token of the home address space. If      * 00008200
*                            resource BPX.WLMSERVER is defined in the * 00008300
*                            FACILITY class, an unauthorized caller   * 00008400
*                            requires access authority to this        * 00008500
*                            resource or the IWM.SERVER.REGISTER      * 00008600
*                            resource in the FACILITY class.          * 00008700
*                                                                     * 00008800
*                        o   If the address space token specified     * 00008900
*                            with STOKEN=stoken is not the address    * 00009000
*                            space token of the home address space,   * 00009100
*                            one of the following:                    * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                            -   Supervisor state                     * 00009500
*                                                                     * 00009600
*                            -   Program key mask (PKM) allowing at   * 00009700
*                                least one of the keys 0-7            * 00009800
*                                                                     * 00009900
*                            -   The caller has access authority to   * 00010000
*                                the resource IWM.SERVER.REGISTER in  * 00010100
*                                the FACILITY class. If this resource * 00010200
*                                is not defined, access authority to  * 00010300
*                                the FACILITY class resource          * 00010400
*                                BPX.WLMSERVER is required.           * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*      Dispatchable unit mode: Task or SRB mode.                      * 00011100
*                                                                     * 00011200
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00011300
*                                                                     * 00011400
*      AMODE:            31-bit.                                      * 00011500
*                                                                     * 00011600
*      ASC mode:         Primary.                                     * 00011700
*                                                                     * 00011800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00011900
*                                                                     * 00012000
*      Locks:            No locks held.  FRRs may be established.     * 00012100
*                                                                     * 00012200
*      Control parameters: Control parameters must be in the primary  * 00012300
*                        address space.                               * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*01* PROGRAMMING REQUIREMENTS:                                        * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*    1.  The macro CVT must be included to use this macro.            * 00013100
*                                                                     * 00013200
*    2.  The macro IWMYCON must be included to use this macro.        * 00013300
*                                                                     * 00013400
*    3.  The macro IWMPB must be in the library concatenation, since  * 00013500
*        it is included by IWMYCON.                                   * 00013600
*                                                                     * 00013700
*    4.  Note that the high order halfword of register 0, and the     * 00013800
*        reason code variable when specified, may be non-zero and     * 00013900
*        represents diagnostic data which is NOT part of the external * 00014000
*        interface.  The high order halfword should thus be excluded  * 00014100
*        from comparison with the reason code values described above. * 00014200
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00014300
*        be used for this purpose.                                    * 00014400
*                                                                     * 00014500
*    5.  All character data, unless otherwise specified, is assumed   * 00014600
*        to be left justified and padded with blanks on the right, as * 00014700
*        needed, to occupy the specified number of bytes.             * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*01* RESTRICTIONS:                                                    * 00015200
*    This macro may not be used prior to the completion of WLM        * 00015300
*    address space initialization                                     * 00015400
*                                                                     * 00015500
*01* INPUT REGISTER INFORMATION:                                      * 00015600
*                                                                     * 00015700
*    Before issuing the IWMSRSRG macro, the caller does not have to   * 00015800
*    place any information into any register unless using it in       * 00015900
*    register notation for a particular parameter, or using it as a   * 00016000
*    base register.                                                   * 00016100
*                                                                     * 00016200
*01* OUTPUT REGISTER INFORMATION:                                     * 00016300
*                                                                     * 00016400
*    When control returns to the caller, the GPRs contain:            * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*    REGISTER  CONTENTS                                               * 00016800
*                                                                     * 00016900
*    0         Reason code if GR15 return code is non-zero            * 00017000
*                                                                     * 00017100
*    1         Used as work register by the system                    * 00017200
*                                                                     * 00017300
*    2-13      Unchanged                                              * 00017400
*                                                                     * 00017500
*    14        Used as work register by the system                    * 00017600
*                                                                     * 00017700
*    15        Return code                                            * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*    When control returns to the caller, the ARs contain:             * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*    REGISTER  CONTENTS                                               * 00018500
*                                                                     * 00018600
*    0-1       Used as work registers by the system                   * 00018700
*                                                                     * 00018800
*    2-13      Unchanged                                              * 00018900
*                                                                     * 00019000
*    14-15     Used as work registers by the system                   * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*    Some callers depend on register contents remaining the same      * 00019500
*    before and after issuing a service.  If the system changes the   * 00019600
*    contents of registers on which the caller depends, the caller    * 00019700
*    must save them before issuing the service, and restore them      * 00019800
*    after the system returns control.                                * 00019900
*                                                                     * 00020000
*01* PERFORMANCE IMPLICATIONS:                                        * 00020100
*                                                                     * 00020200
*    None                                                             * 00020300
*                                                                     * 00020400
*01* SYNTAX:                                                          * 00020500
*                                                                     * 00020600
*Ýxlabel¨  IWMSRSRG     LOCATION=xlocation                            * 00020700
*                      ,NETWORK_ID=xnetwork_id                        * 00020800
*                      ,LUNAME=xluname                                * 00020900
*                      ,STOKEN=xstoken                                * 00021000
*                     Ý,USERDATA=»xuserdata!NO_USERDATAº¨             * 00021100
*                     Ý,HOST=»xhost!NO_HOSTº¨                         * 00021200
*                     Ý,HEALTH=»xhealth!NO_HEALTHº¨                   * 00021300
*                     Ý,RETCODE=xretcode¨                             * 00021400
*                     Ý,RSNCODE=xrsncode¨                             * 00021500
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00021600
*                    ÐÝ,MF=S¨                                         * 00021700
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00021800
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*      Where:                                                         * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*      Ýxlabel¨                                                       * 00022500
*          is an optional symbol, starting in column 1, that is the   * 00022600
*          name on the IWMSRSRG macro invocation.  The name must      * 00022700
*          conform to the rules for an ordinary assembler language    * 00022800
*          symbol.                                                    * 00022900
*          DEFAULT: No name.                                          * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*      LOCATION(xlocation)                                            * 00023500
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00023600
*          only) of a required 18 character input which contains the  * 00023700
*          server LOCATION associated with the address space to be    * 00023800
*          registered. The value should be padded on the right with   * 00023900
*          blanks for any unused characters.                          * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*      NETWORK_ID(xnetwork_id)                                        * 00024500
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00024600
*          only) of a required 8 character input which contains the   * 00024700
*          Network ID associated with the address space to be         * 00024800
*          registered.                                                * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*      LUNAME(xluname)                                                * 00025400
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00025500
*          only) of a required 8 character input which contains the   * 00025600
*          server Logical Unit name associated with the address space * 00025700
*          to be registered.                                          * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*      STOKEN(xstoken)                                                * 00026300
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00026400
*          only) of a required 64 bit input which contains the        * 00026500
*          address space token of the server to be registered.        * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*      ÝUSERDATA(»xuserdata!NO_USERDATAº)¨                            * 00027100
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00027200
*          only) of an optional 64 character input which contains     * 00027300
*          data meaningful to the user of this service.  This user    * 00027400
*          data is available to caller of the IWMSRSRS service when   * 00027500
*          invoked on a system running OS/390 R3 or higher.           * 00027600
*                                                                     * 00027700
*          Userdata may only be passed via IWMSRSRG when running on   * 00027800
*          OS/390 R3 or higher - when passed to lower level systems   * 00027900
*          the data will be ignored and no return code set to reflect * 00028000
*          this condition.  The format is undefined to MVS.           * 00028100
*          DEFAULT: NO_USERDATA indicates that no user data was       * 00028200
*          passed.                                                    * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*      ÝHOST(»xhost!NO_HOSTº)¨                                        * 00028800
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00028900
*          only) of an optional 64 character input which contains the * 00029000
*          host name associated with the address space to be          * 00029100
*          registered. The value should be padded on the right with   * 00029200
*          blanks for any unused characters.                          * 00029300
*          DEFAULT: NO_HOST indicates that a host name was not        * 00029400
*          passed.                                                    * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*      ÝHEALTH(»xhealth!NO_HEALTHº)¨                                  * 00030000
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00030100
*          only) of an optional fullword input which contains the     * 00030200
*          health factor associated with the address space. This is a * 00030300
*          value, that expresses, up to which percentage this address * 00030400
*          space is capable to handle requests.                       * 00030500
*          DEFAULT: NO_HEALTH indicates that a health indicator was   * 00030600
*          not passed. In this case a health value of 100 is assumed, * 00030700
*          when the server is registered.                             * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*      ÝRETCODE(xretcode)¨                                            * 00031300
*          is the name (RS-type) of an optional fullword output       * 00031400
*          variable (or register (2)-(12) or (15) ASM only) into      * 00031500
*          which the return code is to be copied from GPR 15.  If you * 00031600
*          specify 15, GPR15, REG15, or R15 (within or without        * 00031700
*          parentheses), the value will be left in GPR 15.            * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*      ÝRSNCODE(xrsncode)¨                                            * 00032300
*          is the name (RS-type) of an optional fullword output       * 00032400
*          variable into which the reason code is to be copied from   * 00032500
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00032600
*          R0 (within or without parentheses), the value will be left * 00032700
*          in GPR 0.                                                  * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*      ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨                        * 00033300
*          is an optional byte input decimal value in the "0-3" range * 00033400
*          that specifies the macro version.  PLISTVER is the only    * 00033500
*          key allowed on the list form of MF and determines which    * 00033600
*          parameter list is generated.  The macro keys associated    * 00033700
*          with each supported version of the macro are listed in     * 00033800
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00033900
*          instead of a number, and the parameter list will be of the * 00034000
*          largest size currently supported. This size may grow from  * 00034100
*          release to release (thus possibly affecting the amount of  * 00034200
*          storage needed by your program).  If your program can      * 00034300
*          tolerate this, IBM recommends that you always specify MAX  * 00034400
*          when creating the list form parameter list as that will    * 00034500
*          ensure that the list form parameter list is always long    * 00034600
*          enough to hold whatever parameters might be specified on   * 00034700
*          the execute form.                                          * 00034800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00034900
*          default is the lowest version which allows all of the      * 00035000
*          parameters specified on the invocation to be processed.    * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*      ÝMF(»S!L!Eº)¨                                                  * 00035600
*          is an optional keyword input which specifies the macro     * 00035700
*          form.                                                      * 00035800
*          DEFAULT: S                                                 * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*          ÝMF(S)¨                                                    * 00036200
*              specifies the standard form of the macro.  The "S"     * 00036300
*              form generates code to put the parameters into the     * 00036400
*              parameter list and invoke the desired service.  Full   * 00036500
*              checking for required macro keys is done along with    * 00036600
*              supplying defaults for omitted optional parameters.    * 00036700
*              The ?EPILOG macro must be invoked at the end of the    * 00036800
*              module.                                                * 00036900
*                                                                     * 00037000
*              For assembly language code modules, the "S" form       * 00037100
*              generates code to put the parameters into an in-line   * 00037200
*              parameter list and invoke the desired service.  Full   * 00037300
*              checking for required macro keys is done along with    * 00037400
*              supplying defaults for omitted optional parameters.    * 00037500
*                                                                     * 00037600
*          ÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨                       * 00037700
*              specifies the list form of the macro.  The "L" form    * 00037800
*              defines an area to be used for the parameter list.     * 00037900
*              Only the PLISTVER key may be specified on the          * 00038000
*              invocation.  All other macro parameters are flagged as * 00038100
*              errors.  If PLISTVER is not specified, the original    * 00038200
*              parameter list definition is used.                     * 00038300
*                                                                     * 00038400
*            ,xmfctrl                                                 * 00038500
*              is a required input.  It is the name of a storage area * 00038600
*              for the parameter list.                                * 00038700
*                                                                     * 00038800
*            »,xmfattr!BDY(DWORD)º                                    * 00038900
*              is an optional 60 character input string that varies   * 00039000
*              from 1 to 60 characters. Use it to force boundary      * 00039100
*              alignment of the parameter list. Use only 0F or 0D     * 00039200
*              (assembler-only).                                      * 00039300
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00039400
*              forces the parameter list to a doubleword boundary.    * 00039500
*                                                                     * 00039600
*          ÝMF(E,xmfctrl»,COMPLETEº)¨                                 * 00039700
*              specifies the execute form of the macro.  The "E" form * 00039800
*              generates code to put the parameters into the          * 00039900
*              parameter list specified by xmfctrl and provides full  * 00040000
*              syntax checking with default setting.                  * 00040100
*                                                                     * 00040200
*            ,xmfctrl                                                 * 00040300
*              is a required input.  It is the name (RS-type) (or     * 00040400
*              address in register (1)-(12) ASM only) of a storage    * 00040500
*              area for the parameter list.                           * 00040600
*                                                                     * 00040700
*            »,COMPLETEº                                              * 00040800
*              is an optional keyword input which specifies the       * 00040900
*              degree of macro parameter syntax checking.             * 00041000
*              DEFAULT: COMPLETE                                      * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*              COMPLETE                                               * 00041400
*                  Checking for required macro keys is done and       * 00041500
*                  defaults are supplied for omitted optional         * 00041600
*                  parameters.                                        * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*01* ABEND CODES:  None.                                              * 00042500
*                                                                     * 00042600
*01* RETURN CODES:                                                    * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*            0    Name: IwmRetCodeOk                                  * 00043000
*                                                                     * 00043100
*                 Meaning: Successful completion.                     * 00043200
*                                                                     * 00043300
*                 Action: None required.                              * 00043400
*                                                                     * 00043500
*            4    Name: IwmRetCodeWarning                             * 00043600
*                                                                     * 00043700
*                 Meaning: Successful completion, unusual conditions  * 00043800
*                 noted.                                              * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                 HEX REASON  MEANING/ACTION                          * 00044200
*                 CODE                                                * 00044300
*                                                                     * 00044400
*                 xxxx0419    Name: IwmRsnCodeServerAlreadyReg        * 00044500
*                                                                     * 00044600
*                             Meaning:  Server already registered.    * 00044700
*                                                                     * 00044800
*                             Action: None required.                  * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*            8    Name: IwmRetCodeInvocError                          * 00045300
*                                                                     * 00045400
*                 Meaning: Invalid invocation environment or          * 00045500
*                 parameters.                                         * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*                 HEX REASON  MEANING/ACTION                          * 00045900
*                 CODE                                                * 00046000
*                                                                     * 00046100
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00046200
*                                                                     * 00046300
*                             Meaning: Caller is disabled.            * 00046400
*                                                                     * 00046500
*                             Action: Avoid requesting this function  * 00046600
*                             while disabled.                         * 00046700
*                                                                     * 00046800
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00046900
*                                                                     * 00047000
*                             Meaning: Caller is locked.              * 00047100
*                                                                     * 00047200
*                             Action: Avoid requesting this function  * 00047300
*                             while locked.                           * 00047400
*                                                                     * 00047500
*                 xxxx0807    Name: IwmRsnCodeBadSTOKEN               * 00047600
*                                                                     * 00047700
*                             Meaning:  Bad STOKEN passed.            * 00047800
*                                                                     * 00047900
*                             Action: Check for possible storage      * 00048000
*                             overlay.                                * 00048100
*                                                                     * 00048200
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00048300
*                                                                     * 00048400
*                             Meaning:  Error accessing parameter     * 00048500
*                             list.                                   * 00048600
*                                                                     * 00048700
*                             Action: Check for possible storage      * 00048800
*                             overlay.                                * 00048900
*                                                                     * 00049000
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00049100
*                                                                     * 00049200
*                             Meaning: Caller invoked service while   * 00049300
*                             DATOFF                                  * 00049400
*                                                                     * 00049500
*                             Action: Avoid requesting this function  * 00049600
*                             in this environment.                    * 00049700
*                                                                     * 00049800
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00049900
*                                                                     * 00050000
*                             Meaning: Caller invoked service but was * 00050100
*                             in 24 bit addressing mode.              * 00050200
*                                                                     * 00050300
*                             Action: Request this function only when * 00050400
*                             you are in 31 bit addressing mode.      * 00050500
*                                                                     * 00050600
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00050700
*                                                                     * 00050800
*                             Meaning: Caller invoked service but was * 00050900
*                             not DAT on Primary ASC mode.            * 00051000
*                                                                     * 00051100
*                             Action: Avoid requesting this function  * 00051200
*                             in this environment.                    * 00051300
*                                                                     * 00051400
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00051500
*                                                                     * 00051600
*                             Meaning: Version number in parameter    * 00051700
*                             list or version length field is not     * 00051800
*                             valid.                                  * 00051900
*                                                                     * 00052000
*                             Action: Check for possible storage      * 00052100
*                             overlay of the parameter list.          * 00052200
*                                                                     * 00052300
*                 xxxx08A2    Name: IwmRsnCodeBadHealth               * 00052400
*                                                                     * 00052500
*                             Meaning:  Health Value out of range     * 00052600
*                                                                     * 00052700
*                             Action: Check for possible storage      * 00052800
*                             overlay.                                * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*                                                                     * 00053200
*            C    Name: IwmRetCodeEnvError                            * 00053300
*                                                                     * 00053400
*                 Meaning: Environmental error.                       * 00053500
*                                                                     * 00053600
*                                                                     * 00053700
*                 HEX REASON  MEANING/ACTION                          * 00053800
*                 CODE                                                * 00053900
*                                                                     * 00054000
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00054100
*                                                                     * 00054200
*                             Meaning:  Storage is not available for  * 00054300
*                             the request.                            * 00054400
*                                                                     * 00054500
*                             Action: There is a storage shortage.    * 00054600
*                             The function may work successfully at a * 00054700
*                             later time.                             * 00054800
*                                                                     * 00054900
*                 xxxx0C35    Name: IwmRsnCodeNotSecAuthServReg       * 00055000
*                                                                     * 00055100
*                             Meaning:  The caller is not authorized  * 00055200
*                             by SAF to register a server.            * 00055300
*                                                                     * 00055400
*                             Action:  Invoke the function with the   * 00055500
*                             authorization requirements fulfilled.   * 00055600
*                             Unauthorized callers (problem state or  * 00055700
*                             none of the authorized keys 0 to 7)     * 00055800
*                             require access authority to the RACF    * 00055900
*                             resource IWM.SERVER.REGISTER in the     * 00056000
*                             FACILITY class. If this resource is not * 00056100
*                             defined, access authority to the        * 00056200
*                             FACILITY class resource BPX.WLMSERVER   * 00056300
*                             is required.                            * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*                                                                     * 00056700
*           10    Name: IwmRetCodeCompError                           * 00056800
*                                                                     * 00056900
*                 Meaning: Component error (no reason codes)          * 00057000
*                                                                     * 00057100
*                                                                     * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*                                                                     * 00057500
*01* REASON CODES:                                                    * 00057600
*                                                                     * 00057700
*       A unique reason code will be returned whenever the return     * 00057800
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00057900
*       under their corresponding return code.  Reason code and       * 00058000
*       return code constants are defined within IWMYCON.  Note that  * 00058100
*       the high order halfword of register 0, and the reason code    * 00058200
*       variable when specified, may be non-zero and represents       * 00058300
*       diagnostic data which is NOT part of the external interface.  * 00058400
*       The high order halfword should thus be excluded from          * 00058500
*       comparison with the reason code values described above.  The  * 00058600
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00058700
*       used for this purpose.                                        * 00058800
*                                                                     * 00058900
*01* MODULE TYPE:  ASSEM-PL/X MACRO                                   * 00059000
*                                                                     * 00059100
*02*   PROCESSOR:  ASSEM-PL/X                                         * 00059200
*                                                                     * 00059300
*01* COMPONENT:  SCWLM                                                * 00059400
*                                                                     * 00059500
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00059600
*                                                                     * 00059700
*01* EXAMPLES:                                                        * 00059800
*                                                                     * 00059900
*    To register an instance of a given location:                     * 00060000
*                                                                     * 00060100
*               IWMSRSRG LOCATION=LOC,NETWORK_ID=NET,LUNAME=LU,       * 00060200
*                        STOKEN=STKN,HOST=HST,HEALTH=HLTH,            * 00060300
*                        USERDATA=DATA,RETCODE=RC,RSNCODE=RSN         * 00060400
*      *                                                              * 00060500
*      * Storage areas                                                * 00060600
*      *                                                              * 00060700
*      LOC      DS    CL18            Contains the Location           * 00060800
*      *                              associated with the server      * 00060900
*      *                              instance                        * 00061000
*      NET      DS    CL8             Contains the Network id         * 00061100
*      *                              associated with the server      * 00061200
*      *                              instance                        * 00061300
*      LU       DS    CL8             Contains the LU name            * 00061400
*      *                              associated with the server      * 00061500
*      *                              instance                        * 00061600
*      STKN     DS    CL8             Contains the STOKEN             * 00061700
*      *                              associated with the server      * 00061800
*      *                              instance                        * 00061900
*      DATA     DS    CL64            Contains the user data          * 00062000
*      *                              associated with the server      * 00062100
*      *                              instance                        * 00062200
*      HST      DS    CL64            Contains the Host name          * 00062300
*      *                              associated with the server      * 00062400
*      *                              instance                        * 00062500
*      HLTH     DS    F               Contains the Health indicator   * 00062600
*      *                              associated with the server      * 00062700
*      *                              instance                        * 00062800
*      RC       DS    F               Return code                     * 00062900
*      RSN      DS    F               Reason code                     * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*01* MACRO USAGE NOTES:                                               * 00063300
*                                                                     * 00063400
*                                                                     * 00063500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00063600
*        global macro variable.  Any value other than 'NO' will       * 00063700
*        result in the macro expansion being printed.  The default is * 00063800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00063900
*        variable should be set.                                      * 00064000
*                                                                     * 00064100
*                    GBLC &ZPRINT                                     * 00064200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00064300
*                                                                     * 00064400
*                                                                     * 00064500
*    2.  The IWMSRSRG macro supports multiple versions. The macro key * 00064600
*        list  below  contains the version level in which the key was * 00064700
*        first  introduced.  Positionals  are  identified by the word * 00064800
*        'Positional'  followed by the numeric value of its position. * 00064900
*        Nested  positionals  are  preceded  by their outer key.  The * 00065000
*        lowest value represents the original version and the highest * 00065100
*        value  represents  the  most  recent version of the IWMSRSRG * 00065200
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00065300
*        least  as high as the highest version number of all the keys * 00065400
*        being used.                                                  * 00065500
*                                                                     * 00065600
*        VERSION   KEY                                                * 00065700
*                                                                     * 00065800
*              0      LOCATION                                        * 00065900
*                     LUNAME                                          * 00066000
*                     NETWORK_ID                                      * 00066100
*                     STOKEN                                          * 00066200
*              1      USERDATA                                        * 00066300
*              2      HOST                                            * 00066400
*              3      HEALTH                                          * 00066500
*                                                                     * 00066600
*                                                                     * 00066700
*                                                                     * 00066800
*01* CHANGE ACTIVITY:                                                 * 00066900
*                                                                     * 00067000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00067100
*                                                                     * 00067200
*    $L0=ENCLV    HBB5520 940222 PDDD:  Sysplex Router.               * 00067300
*    $L1=WLMP     HBB6603 960220 PD16:  DB2 TCP/IP Support.           * 00067400
*    $L2=WLMPDNS  JBB6604 961031 PDKP:  Host name Support.            * 00067500
*    $L3=WLMPSTR  HBB7730 050131 PB:  Support for Health Indicator.   * 00067600
*    $L4=ME05431  HBB7730 060112 3241BH:  Correct macfmid and         * 00067700
*                                         macfmid1 values.            * 00067800
*    $P1=OA46405  HBB77A0 141031 3241MG:  Doc updates.                * 00067900
****** END OF SPECIFICATIONS *****************************************/ 00068000
*/********************************************************************* 00068100
         MACRO                                                          00068200
&XLABEL  IWMSRSRG &LOCATION=,&NETWORK_ID=,&LUNAME=,&STOKEN=,&USERDATA=,*00068300
               &HOST=,&HEALTH=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=      00068400
.*                                                                      00068500
*                MACDATE -07/02/15-<3>                                  00068600
.*                                                                      00068700
.*******************************************************************    00068800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00068900
.*******************************************************************    00069000
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00069100
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00069200
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00069300
.*                                                                      00069400
                GBLC  &ZIWMSRSRG  YES=MACRO USED AT LEAST ONCE          00069500
.*******************************************************************    00069600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00069700
.*******************************************************************    00069800
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00069900
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00070000
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00070100
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00070200
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00070300
                LCLA  &ZAWRK      USED AS A WORK AREA                   00070400
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00070500
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00070600
                LCLC  &ZC         CHARACTER WORK VARIABLE               00070700
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00070800
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00070900
                LCLC  &ZMAC_G     "G" or null                           00071000
&ZMAC_G         SETC  ''                                                00071100
                LCLC  &ZMAC_LR                                          00071200
&ZMAC_LR        SETC  'LR'                                              00071300
                LCLC  &ZMAC_L                                           00071400
&ZMAC_L         SETC  'L'                                               00071500
                LCLC  &ZMAC_ST                                          00071600
&ZMAC_ST        SETC  'ST'                                              00071700
                LCLC  &ZMAC_LLGT                                        00071800
&ZMAC_LLGT      SETC  'L'                                               00071900
                LCLC  &ZMAC_LGR                                         00072000
&ZMAC_LGR       SETC  'LR'                                              00072100
                LCLC  &ZMAC_LG                                          00072200
&ZMAC_LG        SETC  'L'                                               00072300
                LCLC  &ZMAC_STG                                         00072400
&ZMAC_STG       SETC  'ST'                                              00072500
                LCLA  &ZMACRET    MACRO RETURN CODE                     00072600
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00072700
.*                                                                      00072800
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00072900
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00073000
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00073100
                LCLC  &ZENDBASEPL               End of base PL          00073200
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00073300
.*******************************************************************    00073400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00073500
.*******************************************************************    00073600
                LCLA  &ZI         INDEX FOR ARRAY                       00073700
                LCLA  &ZJ         INDEX FOR PARMS                       00073800
                LCLA  &ZK         INDEX FOR PARSE                       00073900
                LCLA  &ZLO        LOW RANGE VALUE                       00074000
                LCLA  &ZHI        HIGH RANGE VALUE                      00074100
                LCLC  &ZW         WORK AREA FOR PARM                    00074200
.********************************************************************   00074300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00074400
.********************************************************************   00074500
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00074600
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00074700
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00074800
                GBLC  &SYSAM64    SYSSTATE AMODE64                      00074900
.*                                                                      00075000
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00075100
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00075200
                SPLEVEL  TEST                                           00075300
.ZSYS2          ANOP  ,                                                 00075400
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00075500
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00075600
                SYSSTATE TEST                                           00075700
                AGO   .ZSYS4                                            00075800
.ZSYS3          ANOP  ,                                                 00075900
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00076000
.ZSYS4          ANOP  ,                                                 00076100
                AIF   ('&SYSAM64' NE 'YES').ZSYSN64                     00076200
&ZMAC_LLGT      SETC 'LLGT'                                             00076300
&ZMAC_LGR       SETC 'LGR'                                              00076400
&ZMAC_LG        SETC 'LG'                                               00076500
&ZMAC_STG       SETC 'STG'                                              00076600
.ZSYSN64        ANOP  ,                                                 00076700
.*******************************************************************    00076800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00076900
.*******************************************************************    00077000
                LCLC  &XLOCATION  ++ NAME                               00077100
                LCLC  &XNETWORK_ID              ++ NAME                 00077200
                LCLC  &XLUNAME    ++ NAME                               00077300
                LCLC  &XSTOKEN    ++ NAME                               00077400
                LCLC  &XUSERDATA  ++ NAME                               00077500
                LCLC  &XHOST      ++ NAME                               00077600
                LCLC  &XHEALTH    ++ NAME                               00077700
                LCLC  &XRETCODE   ++ NAME                               00077800
                LCLC  &XRSNCODE   ++ NAME                               00077900
                LCLA  &XPLISTVER  ++ VALUE                              00078000
                LCLC  &XMF        ++ VALUE                              00078100
                LCLC  &XMFCTRL    ++ NAME                               00078200
                LCLC  &XMFATTR    ++ VALUE                              00078300
                LCLC  &XMFSCK     ++ VALUE                              00078400
.*******************************************************************    00078500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00078600
.*******************************************************************    00078700
                LCLC  &ZXLOCATION               ++ INPUT NAME           00078800
                LCLC  &ZXNETWORK_ID             ++ INPUT NAME           00078900
                LCLC  &ZXLUNAME   ++ INPUT NAME                         00079000
                LCLC  &ZXSTOKEN   ++ INPUT NAME                         00079100
                LCLC  &ZXUSERDATA               ++ INPUT NAME           00079200
                LCLC  &ZXHOST     ++ INPUT NAME                         00079300
                LCLC  &ZXHEALTH   ++ INPUT NAME                         00079400
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00079500
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00079600
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00079700
                LCLC  &ZXMF       ++ INPUT VALUE                        00079800
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00079900
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00080000
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00080100
.********************************************************************   00080200
.***AC.PLV01  PROCESS PLISTVER                                      *   00080300
.********************************************************************   00080400
&XPLISTVER      SETA  0                                                 00080500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00080600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00080700
&XPLISTVER      SETA  3                                                 00080800
.ZPLV0          ANOP  ,                                                 00080900
.*                                                                      00081000
                AIF   ('&USERDATA' EQ '').ZPLV1E                        00081100
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00081200
&XPLISTVER      SETA  1                                                 00081300
.ZPLV1E         ANOP  ,                                                 00081400
.*                                                                      00081500
                AIF   ('&HOST' EQ '').ZPLV2E                            00081600
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00081700
&XPLISTVER      SETA  2                                                 00081800
.ZPLV2E         ANOP  ,                                                 00081900
.*                                                                      00082000
                AIF   ('&HEALTH' EQ '').ZPLV3E                          00082100
                AIF   (&XPLISTVER GE 3).ZPLV3E                          00082200
&XPLISTVER      SETA  3                                                 00082300
.ZPLV3E         ANOP  ,                                                 00082400
.*                                                                      00082500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00082600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00082700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00082800
.*-------------------------------------------------------------------   00082900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00083000
&ZMS            SETC  '"PLISTVER='                                      00083100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00083200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00083300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00083400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00083500
                AGO   .ZPVCK2                                           00083600
.ZPVCK3         ANOP  ,                                                 00083700
.*-------------------------------------------------------------------   00083800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00083900
&ZMS            SETC  '"PLISTVER='                                      00084000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00084100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00084200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00084300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00084400
                AGO   .ZPVCKE                                           00084500
.ZPVCK2         ANOP  ,                                                 00084600
.*-------------------------------------------------------------------   00084700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00084800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00084900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00085000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00085100
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00085200
                AIF   (&ZN LE 3).ZPVCK4A   NOT HIGH                     00085300
.ZPVCK6         ANOP  ,                                                 00085400
&ZMS            SETC  '"PLISTVER='                                      00085500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00085600
&ZMS            SETC  '&ZMS THE RANGE IS "0-3"'                         00085700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00085800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00085900
&XPLISTVER      SETA  3                                                 00086000
                AGO   .ZPVCKE                                           00086100
.*-------------------------------------------------------------------   00086200
.ZPVCK4A        ANOP  ,                                                 00086300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00086400
&ZMS            SETC  'PLISTVER='                                       00086500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00086600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00086700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00086800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00086900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00087000
                AGO   .ZPVCK5                                           00087100
.ZPVCK4         ANOP  ,                                                 00087200
&XPLISTVER      SETA  &PLISTVER(1)                                      00087300
.ZPVCK5         ANOP  ,                                                 00087400
.ZPVCKE         ANOP  ,                                                 00087500
.********************************************************************   00087600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00087700
.********************************************************************   00087800
                ACTR  10000                                             00087900
.*------------------------------------------------------------------    00088000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088100
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00088200
.*-------------------------------------------------------------------   00088300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088400
.ZG33           ANOP  ,                                                 00088500
&ZTLC           SETC 'S'                                                00088600
                AIF   ('&MF(1)' NE '&ZTLC').ZG34                        00088700
&XMF            SETC  'S'         SET KEYWORD                           00088800
                AIF   (N'&MF LE 1).ZG33A        CK NUM                  00088900
&ZMS            SETC  '"MF='                                            00089000
&ZMS            SETC  '&ZMS.&MF"'                                       00089100
&ZMS            SETC  '&ZMS "MF"'                                       00089200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00089300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00089400
.ZG33A          ANOP  ,                                                 00089500
.*-------------------------------------------------------------------   00089600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089700
.ZG34           ANOP  ,                                                 00089800
&ZTLC           SETC 'L'                                                00089900
                AIF   ('&MF(1)' NE '&ZTLC').ZG41                        00090000
&XMF            SETC  'L'         SET KEYWORD                           00090100
                AIF   (N'&MF LE 3).ZG34A        CK NUM                  00090200
&ZMS            SETC  '"MF='                                            00090300
&ZMS            SETC  '&ZMS.&MF"'                                       00090400
&ZMS            SETC  '&ZMS "MF"'                                       00090500
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00090600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090700
.ZG34A          ANOP  ,                                                 00090800
.*-------------------------------------------------------------------   00090900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00091000
                AIF   (N'&SYSLIST NE 0).ZG34B   POSITIONALS?            00091100
                AIF   ('&LOCATION' NE '').ZG34B  KEYS?                  00091200
                AIF   ('&NETWORK_ID' NE '').ZG34B  KEYS?                00091300
                AIF   ('&LUNAME' NE '').ZG34B   KEYS?                   00091400
                AIF   ('&STOKEN' NE '').ZG34B   KEYS?                   00091500
                AIF   ('&USERDATA' NE '').ZG34B  KEYS?                  00091600
                AIF   ('&HOST' NE '').ZG34B     KEYS?                   00091700
                AIF   ('&HEALTH' NE '').ZG34B   KEYS?                   00091800
                AIF   ('&RETCODE' NE '').ZG34B  KEYS?                   00091900
                AIF   ('&RSNCODE' NE '').ZG34B  KEYS?                   00092000
                AGO    .ZG34C     INVOCATION OKAY                       00092100
.ZG34B          ANOP  ,                                                 00092200
&ZMS            SETC  'THE "L" FORM OF "MF"'                            00092300
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00092400
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00092500
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00092600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092700
.ZG34C          ANOP  ,                                                 00092800
.*-------------------------------------------------------------------   00092900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00093000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00093100
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00093200
                AIF   (N'&MF(2) GT 1).ZG36B     MULTI                   00093300
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00093400
.ZG36B          AIF   (K'&MF(2) GT 0).ZG36C                             00093500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00093600
&ZMS            SETC  'WHEN "L" IS SPECIFIED'                           00093700
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00093800
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00093900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00094000
.ZG36C          ANOP  ,                                                 00094100
.*-------------------------------------------------------------------   00094200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00094300
                AIF   (K'&ZXMFCTRL LE 0).ZG36P  NOT I/O                 00094400
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG36P                    00094500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00094600
&ZMS            SETC  '"MF='                                            00094700
&ZMS            SETC  '&ZMS.&MF"'                                       00094800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00094900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00095000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095100
.ZG36P          ANOP  ,                                                 00095200
.*-------------------------------------------------------------------   00095300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00095400
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00095500
&XMFATTR        SETC  '0D'                                              00095600
                AIF   (K'&MF(3) LE 0).ZG39B     PARM                    00095700
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00095800
                AIF   (N'&MF(3) GT 1).ZG39B     MULTI                   00095900
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00096000
.ZG39B          ANOP  ,                                                 00096100
.*-------------------------------------------------------------------   00096200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00096300
                AIF   (K'&ZXMFATTR LE 0).ZG39P  NOT I/O                 00096400
                AIF   ('&XMFATTR'(1,1) NE '(').ZG39P                    00096500
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00096600
&ZMS            SETC  '"MF='                                            00096700
&ZMS            SETC  '&ZMS.&MF"'                                       00096800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00096900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00097000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00097100
.ZG39P          ANOP  ,                                                 00097200
.*-------------------------------------------------------------------   00097300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00097400
                AIF   (K'&ZXMFATTR LE 0).ZG39S  NOT I/O                 00097500
                AIF   (K'&XMFATTR LE 60).ZG39S  LNG OK                  00097600
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00097700
&ZMS            SETC  '"MF='                                            00097800
&ZMS            SETC  '&ZMS.&MF"'                                       00097900
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00098000
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00098100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00098200
.ZG39S          ANOP  ,                                                 00098300
.*-------------------------------------------------------------------   00098400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00098500
.ZG41           ANOP  ,                                                 00098600
&ZTLC           SETC 'E'                                                00098700
                AIF   ('&MF(1)' NE '&ZTLC').ZG49                        00098800
&XMF            SETC  'E'         SET KEYWORD                           00098900
                AIF   (N'&MF LE 3).ZG41A        CK NUM                  00099000
&ZMS            SETC  '"MF='                                            00099100
&ZMS            SETC  '&ZMS.&MF"'                                       00099200
&ZMS            SETC  '&ZMS "MF"'                                       00099300
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00099400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099500
.ZG41A          ANOP  ,                                                 00099600
.*-------------------------------------------------------------------   00099700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00099800
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00099900
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00100000
                AIF   (N'&MF(2) GT 1).ZG43B     MULTI                   00100100
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00100200
.ZG43B          AIF   (K'&MF(2) GT 0).ZG43C                             00100300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00100400
&ZMS            SETC  'WHEN "E" IS SPECIFIED'                           00100500
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00100600
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00100700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00100800
.ZG43C          ANOP  ,                                                 00100900
.*-------------------------------------------------------------------   00101000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00101100
                AIF   (K'&ZXMFCTRL LE 0).ZG43R  NOT I/O                 00101200
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG43R                    00101300
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00101400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                      00101500
                AIF   (K'&ZCGPR GT 2).ZG43Q                             00101600
                AIF   ('&ZCGPR' EQ '0').ZG43Q                           00101700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00101800
                AIF   (T'&ZCGPR NE 'N').ZG43Q   INVALID REG NAME        00101900
.ZG43P          ANOP  ,                                                 00102000
                AIF   (T'&ZCGPR NE 'N').ZG43R   NON NUMERIC             00102100
                AIF   ('&ZCGPR' LT '1').ZG43Q                           00102200
                AIF   ('&ZCGPR' LE '12').ZG43R                          00102300
.ZG43Q          ANOP  ,                                                 00102400
&ZMS            SETC  '"MF='                                            00102500
&ZMS            SETC  '&ZMS.&MF"'                                       00102600
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00102700
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00102800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00102900
.ZG43R          ANOP  ,                                                 00103000
.*-------------------------------------------------------------------   00103100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00103200
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00103300
.ZG47A   AIF   ('&MF(3)' NE 'COMPLETE').ZG48A                           00103400
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00103500
.*-------------------------------------------------------------------   00103600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00103700
.ZG48A          AIF   (K'&XMFSCK GT 0).ZG48C    KEYWORD                 00103800
                AIF   (K'&MF(3) LE 0).ZG48B                             00103900
&ZMS            SETC  '"MF='                                            00104000
&ZMS            SETC  '&ZMS.&MF"'                                       00104100
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00104200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00104300
&ZMS            SETC  '&ZMS "COMPLETE".'                                00104400
                MNOTE 8,' &ZMS '                                        00104500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00104600
.ZG48B          ANOP  ,                                                 00104700
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00104800
.ZG48C          ANOP  ,                                                 00104900
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00105000
.*------------------------------------------------------------------    00105100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00105200
.ZG49           ANOP  ,                                                 00105300
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00105400
                AIF   (K'&XMF GT 0).ZG49E       VALID ARG               00105500
                AIF   (T'&MF EQ 'O').ZG49D      OMITTED                 00105600
&ZASYSLNDX      SETA  0                                                 00105700
.ZG49A          ANOP  ,           POSITIONAL MACRO KEY                  00105800
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00105900
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG49C                  00106000
&ZTLC           SETC 'MF'                                               00106100
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG49A         00106200
.ZG49B          ANOP  ,                                                 00106300
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00106400
&ZMS            SETC  'THE "MF" KEY'                                    00106500
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00106600
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00106700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106800
                AGO   .ZG49E                                            00106900
.ZG49C          ANOP  ,                                                 00107000
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00107100
&ZMS            SETC  '"MF='                                            00107200
&ZMS            SETC  '&ZMS.&MF"'                                       00107300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00107400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00107500
&ZMS            SETC  '&ZMS "S",'                                       00107600
&ZMS            SETC  '&ZMS "L",'                                       00107700
&ZMS            SETC  '&ZMS OR "E".'                                    00107800
                MNOTE 8,' &ZMS '                                        00107900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00108000
                AGO   .ZG49E                                            00108100
.ZG49D          ANOP  ,                                                 00108200
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00108300
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00108400
.ZG49E          ANOP  ,                                                 00108500
.********************************************************************   00108600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00108700
.********************************************************************   00108800
                ACTR  10000                                             00108900
.*-------------------------------------------------------------------   00109000
.***AG.MF03 MF=(SLE)                                                    00109100
                AIF   ('&XMF' EQ 'L').ZGMFX                             00109200
.*----------------------------------------------------------------***   00109300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00109400
                AIF   (N'&LOCATION LE 1).ZG2A   CK NUM                  00109500
&ZMS            SETC  '"LOCATION='                                      00109600
&ZMS            SETC  '&ZMS.&LOCATION"'                                 00109700
&ZMS            SETC  '&ZMS "LOCATION"'                                 00109800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00109900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00110000
.ZG2A           ANOP  ,                                                 00110100
.*-------------------------------------------------------------------   00110200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00110300
&ZXLOCATION     SETC  'INPUT'     SET IN/OUTPUT                         00110400
&XLOCATION      SETC  '&LOCATION(1)'            SET XVARIABLE           00110500
                AIF   (N'&LOCATION GT 1).ZG2B   MULTI                   00110600
&XLOCATION      SETC  '&LOCATION'               SET XVARIABLE           00110700
.ZG2B           AIF   (K'&LOCATION(1) GT 0).ZG2C                        00110800
&ZXLOCATION     SETC  ''          RESET IN/OUTPUT                       00110900
&ZMS            SETC  ' '                                               00111000
&ZMS            SETC  '&ZMS "LOCATION" KEY AND ITS'                     00111100
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00111200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00111300
.ZG2C           ANOP  ,                                                 00111400
.*-------------------------------------------------------------------   00111500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00111600
                AIF   (K'&ZXLOCATION LE 0).ZG2R  NOT I/O                00111700
                AIF   ('&XLOCATION'(1,1) NE '(').ZG2R                   00111800
&ZCGPR          SETC  '&XLOCATION'(2,K'&XLOCATION-2)                    00111900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00112000
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00112100
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00112200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00112300
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00112400
.ZG2P           ANOP  ,                                                 00112500
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00112600
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00112700
                AIF   ('&ZCGPR' LE '12').ZG2R                           00112800
.ZG2Q           ANOP  ,                                                 00112900
&ZMS            SETC  '"LOCATION='                                      00113000
&ZMS            SETC  '&ZMS.&LOCATION"'                                 00113100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00113200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00113300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00113400
.ZG2R           ANOP  ,                                                 00113500
.*----------------------------------------------------------------***   00113600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00113700
                AIF   (N'&NETWORK_ID LE 1).ZG5A  CK NUM                 00113800
&ZMS            SETC  '"NETWORK_ID='                                    00113900
&ZMS            SETC  '&ZMS.&NETWORK_ID"'                               00114000
&ZMS            SETC  '&ZMS "NETWORK_ID"'                               00114100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00114200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00114300
.ZG5A           ANOP  ,                                                 00114400
.*-------------------------------------------------------------------   00114500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00114600
&ZXNETWORK_ID   SETC  'INPUT'     SET IN/OUTPUT                         00114700
&XNETWORK_ID    SETC  '&NETWORK_ID(1)'          SET XVARIABLE           00114800
                AIF   (N'&NETWORK_ID GT 1).ZG5B  MULTI                  00114900
&XNETWORK_ID    SETC  '&NETWORK_ID'             SET XVARIABLE           00115000
.ZG5B           AIF   (K'&NETWORK_ID(1) GT 0).ZG5C                      00115100
&ZXNETWORK_ID   SETC  ''          RESET IN/OUTPUT                       00115200
&ZMS            SETC  ' '                                               00115300
&ZMS            SETC  '&ZMS "NETWORK_ID" KEY AND ITS'                   00115400
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00115500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00115600
.ZG5C           ANOP  ,                                                 00115700
.*-------------------------------------------------------------------   00115800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00115900
                AIF   (K'&ZXNETWORK_ID LE 0).ZG5R  NOT I/O              00116000
                AIF   ('&XNETWORK_ID'(1,1) NE '(').ZG5R                 00116100
&ZCGPR          SETC  '&XNETWORK_ID'(2,K'&XNETWORK_ID-2)                00116200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00116300
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00116400
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00116500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00116600
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00116700
.ZG5P           ANOP  ,                                                 00116800
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00116900
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00117000
                AIF   ('&ZCGPR' LE '12').ZG5R                           00117100
.ZG5Q           ANOP  ,                                                 00117200
&ZMS            SETC  '"NETWORK_ID='                                    00117300
&ZMS            SETC  '&ZMS.&NETWORK_ID"'                               00117400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00117500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00117600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00117700
.ZG5R           ANOP  ,                                                 00117800
.*----------------------------------------------------------------***   00117900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00118000
                AIF   (N'&LUNAME LE 1).ZG8A     CK NUM                  00118100
&ZMS            SETC  '"LUNAME='                                        00118200
&ZMS            SETC  '&ZMS.&LUNAME"'                                   00118300
&ZMS            SETC  '&ZMS "LUNAME"'                                   00118400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00118500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00118600
.ZG8A           ANOP  ,                                                 00118700
.*-------------------------------------------------------------------   00118800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00118900
&ZXLUNAME       SETC  'INPUT'     SET IN/OUTPUT                         00119000
&XLUNAME        SETC  '&LUNAME(1)'              SET XVARIABLE           00119100
                AIF   (N'&LUNAME GT 1).ZG8B     MULTI                   00119200
&XLUNAME        SETC  '&LUNAME'   SET XVARIABLE                         00119300
.ZG8B           AIF   (K'&LUNAME(1) GT 0).ZG8C                          00119400
&ZXLUNAME       SETC  ''          RESET IN/OUTPUT                       00119500
&ZMS            SETC  ' '                                               00119600
&ZMS            SETC  '&ZMS "LUNAME" KEY AND ITS'                       00119700
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00119800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00119900
.ZG8C           ANOP  ,                                                 00120000
.*-------------------------------------------------------------------   00120100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00120200
                AIF   (K'&ZXLUNAME LE 0).ZG8R   NOT I/O                 00120300
                AIF   ('&XLUNAME'(1,1) NE '(').ZG8R                     00120400
&ZCGPR          SETC  '&XLUNAME'(2,K'&XLUNAME-2)                        00120500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                       00120600
                AIF   (K'&ZCGPR GT 2).ZG8Q                              00120700
                AIF   ('&ZCGPR' EQ '0').ZG8Q                            00120800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00120900
                AIF   (T'&ZCGPR NE 'N').ZG8Q    INVALID REG NAME        00121000
.ZG8P           ANOP  ,                                                 00121100
                AIF   (T'&ZCGPR NE 'N').ZG8R    NON NUMERIC             00121200
                AIF   ('&ZCGPR' LT '2').ZG8Q                            00121300
                AIF   ('&ZCGPR' LE '12').ZG8R                           00121400
.ZG8Q           ANOP  ,                                                 00121500
&ZMS            SETC  '"LUNAME='                                        00121600
&ZMS            SETC  '&ZMS.&LUNAME"'                                   00121700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00121800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00121900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00122000
.ZG8R           ANOP  ,                                                 00122100
.*----------------------------------------------------------------***   00122200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00122300
                AIF   (N'&STOKEN LE 1).ZG11A    CK NUM                  00122400
&ZMS            SETC  '"STOKEN='                                        00122500
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00122600
&ZMS            SETC  '&ZMS "STOKEN"'                                   00122700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00122800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00122900
.ZG11A          ANOP  ,                                                 00123000
.*-------------------------------------------------------------------   00123100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00123200
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00123300
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00123400
                AIF   (N'&STOKEN GT 1).ZG11B    MULTI                   00123500
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00123600
.ZG11B          AIF   (K'&STOKEN(1) GT 0).ZG11C                         00123700
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00123800
&ZMS            SETC  ' '                                               00123900
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS'                       00124000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00124100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00124200
.ZG11C          ANOP  ,                                                 00124300
.*-------------------------------------------------------------------   00124400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00124500
                AIF   (K'&ZXSTOKEN LE 0).ZG11R  NOT I/O                 00124600
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG11R                    00124700
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00124800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00124900
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00125000
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00125100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00125200
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00125300
.ZG11P          ANOP  ,                                                 00125400
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00125500
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00125600
                AIF   ('&ZCGPR' LE '12').ZG11R                          00125700
.ZG11Q          ANOP  ,                                                 00125800
&ZMS            SETC  '"STOKEN='                                        00125900
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00126000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00126100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00126200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00126300
.ZG11R          ANOP  ,                                                 00126400
.*----------------------------------------------------------------***   00126500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00126600
                AIF   (N'&USERDATA LE 1).ZG14A  CK NUM                  00126700
&ZMS            SETC  '"USERDATA='                                      00126800
&ZMS            SETC  '&ZMS.&USERDATA"'                                 00126900
&ZMS            SETC  '&ZMS "USERDATA"'                                 00127000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00127100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00127200
.ZG14A          ANOP  ,                                                 00127300
.*-------------------------------------------------------------------   00127400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00127500
&ZXUSERDATA     SETC  'INPUT'     SET IN/OUTPUT                         00127600
&XUSERDATA      SETC  'NO_USERDATA'                                     00127700
                AIF   (K'&USERDATA(1) LE 0).ZG14B  PARM                 00127800
&XUSERDATA      SETC  '&USERDATA(1)'            SET XVARIABLE           00127900
                AIF   (N'&USERDATA GT 1).ZG14B  MULTI                   00128000
&XUSERDATA      SETC  '&USERDATA'               SET XVARIABLE           00128100
.ZG14B          ANOP  ,                                                 00128200
.*-------------------------------------------------------------------   00128300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00128400
                AIF   (K'&ZXUSERDATA LE 0).ZG14R  NOT I/O               00128500
         AIF   ('&XUSERDATA' EQ 'NO_USERDATA').ZG14R                    00128600
                AIF   ('&XUSERDATA'(1,1) NE '(').ZG14R                  00128700
&ZCGPR          SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                    00128800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                      00128900
                AIF   (K'&ZCGPR GT 2).ZG14Q                             00129000
                AIF   ('&ZCGPR' EQ '0').ZG14Q                           00129100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00129200
                AIF   (T'&ZCGPR NE 'N').ZG14Q   INVALID REG NAME        00129300
.ZG14P          ANOP  ,                                                 00129400
                AIF   (T'&ZCGPR NE 'N').ZG14R   NON NUMERIC             00129500
                AIF   ('&ZCGPR' LT '2').ZG14Q                           00129600
                AIF   ('&ZCGPR' LE '12').ZG14R                          00129700
.ZG14Q          ANOP  ,                                                 00129800
&ZMS            SETC  '"USERDATA='                                      00129900
&ZMS            SETC  '&ZMS.&USERDATA"'                                 00130000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00130100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00130200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00130300
.ZG14R          ANOP  ,                                                 00130400
.*----------------------------------------------------------------***   00130500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00130600
                AIF   (N'&HOST LE 1).ZG17A      CK NUM                  00130700
&ZMS            SETC  '"HOST='                                          00130800
&ZMS            SETC  '&ZMS.&HOST"'                                     00130900
&ZMS            SETC  '&ZMS "HOST"'                                     00131000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00131100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00131200
.ZG17A          ANOP  ,                                                 00131300
.*-------------------------------------------------------------------   00131400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00131500
&ZXHOST         SETC  'INPUT'     SET IN/OUTPUT                         00131600
&XHOST          SETC  'NO_HOST'                                         00131700
                AIF   (K'&HOST(1) LE 0).ZG17B   PARM                    00131800
&XHOST          SETC  '&HOST(1)'  SET XVARIABLE                         00131900
                AIF   (N'&HOST GT 1).ZG17B      MULTI                   00132000
&XHOST          SETC  '&HOST'     SET XVARIABLE                         00132100
.ZG17B          ANOP  ,                                                 00132200
.*-------------------------------------------------------------------   00132300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00132400
                AIF   (K'&ZXHOST LE 0).ZG17R    NOT I/O                 00132500
         AIF   ('&XHOST' EQ 'NO_HOST').ZG17R                            00132600
                AIF   ('&XHOST'(1,1) NE '(').ZG17R                      00132700
&ZCGPR          SETC  '&XHOST'(2,K'&XHOST-2)                            00132800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                      00132900
                AIF   (K'&ZCGPR GT 2).ZG17Q                             00133000
                AIF   ('&ZCGPR' EQ '0').ZG17Q                           00133100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00133200
                AIF   (T'&ZCGPR NE 'N').ZG17Q   INVALID REG NAME        00133300
.ZG17P          ANOP  ,                                                 00133400
                AIF   (T'&ZCGPR NE 'N').ZG17R   NON NUMERIC             00133500
                AIF   ('&ZCGPR' LT '2').ZG17Q                           00133600
                AIF   ('&ZCGPR' LE '12').ZG17R                          00133700
.ZG17Q          ANOP  ,                                                 00133800
&ZMS            SETC  '"HOST='                                          00133900
&ZMS            SETC  '&ZMS.&HOST"'                                     00134000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00134100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00134200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00134300
.ZG17R          ANOP  ,                                                 00134400
.*----------------------------------------------------------------***   00134500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00134600
                AIF   (N'&HEALTH LE 1).ZG20A    CK NUM                  00134700
&ZMS            SETC  '"HEALTH='                                        00134800
&ZMS            SETC  '&ZMS.&HEALTH"'                                   00134900
&ZMS            SETC  '&ZMS "HEALTH"'                                   00135000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00135100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00135200
.ZG20A          ANOP  ,                                                 00135300
.*-------------------------------------------------------------------   00135400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00135500
&ZXHEALTH       SETC  'INPUT'     SET IN/OUTPUT                         00135600
&XHEALTH        SETC  'NO_HEALTH'                                       00135700
                AIF   (K'&HEALTH(1) LE 0).ZG20B  PARM                   00135800
&XHEALTH        SETC  '&HEALTH(1)'              SET XVARIABLE           00135900
                AIF   (N'&HEALTH GT 1).ZG20B    MULTI                   00136000
&XHEALTH        SETC  '&HEALTH'   SET XVARIABLE                         00136100
.ZG20B          ANOP  ,                                                 00136200
.*-------------------------------------------------------------------   00136300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00136400
                AIF   (K'&ZXHEALTH LE 0).ZG20R  NOT I/O                 00136500
         AIF   ('&XHEALTH' EQ 'NO_HEALTH').ZG20R                        00136600
                AIF   ('&XHEALTH'(1,1) NE '(').ZG20R                    00136700
&ZCGPR          SETC  '&XHEALTH'(2,K'&XHEALTH-2)                        00136800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                      00136900
                AIF   (K'&ZCGPR GT 2).ZG20Q                             00137000
                AIF   ('&ZCGPR' EQ '0').ZG20Q                           00137100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00137200
                AIF   (T'&ZCGPR NE 'N').ZG20Q   INVALID REG NAME        00137300
.ZG20P          ANOP  ,                                                 00137400
                AIF   (T'&ZCGPR NE 'N').ZG20R   NON NUMERIC             00137500
                AIF   ('&ZCGPR' LT '2').ZG20Q                           00137600
                AIF   ('&ZCGPR' LE '12').ZG20R                          00137700
.ZG20Q          ANOP  ,                                                 00137800
&ZMS            SETC  '"HEALTH='                                        00137900
&ZMS            SETC  '&ZMS.&HEALTH"'                                   00138000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00138100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00138200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00138300
.ZG20R          ANOP  ,                                                 00138400
.*----------------------------------------------------------------***   00138500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00138600
                AIF   (N'&RETCODE LE 1).ZG23A   CK NUM                  00138700
&ZMS            SETC  '"RETCODE='                                       00138800
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00138900
&ZMS            SETC  '&ZMS "RETCODE"'                                  00139000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00139100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00139200
.ZG23A          ANOP  ,                                                 00139300
.*-------------------------------------------------------------------   00139400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00139500
                AIF   (K'&RETCODE(1) LE 0).ZG23C  NO PARM               00139600
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00139700
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00139800
                AIF   (N'&RETCODE GT 1).ZG23C                           00139900
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00140000
.ZG23C          ANOP  ,                                                 00140100
.*-------------------------------------------------------------------   00140200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00140300
                AIF   (K'&ZXRETCODE LE 0).ZG23R  NOT I/O                00140400
                AIF   ('&XRETCODE'(1,1) NE '(').ZG23R                   00140500
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00140600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                      00140700
                AIF   (K'&ZCGPR GT 2).ZG23Q                             00140800
                AIF   ('&ZCGPR' EQ '0').ZG23Q                           00140900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00141000
                AIF   (T'&ZCGPR NE 'N').ZG23Q   INVALID REG NAME        00141100
.ZG23P          ANOP  ,                                                 00141200
                AIF   (T'&ZCGPR NE 'N').ZG23R   NON NUMERIC             00141300
                AIF   ('&ZCGPR' EQ '15').ZG23R                          00141400
                AIF   ('&ZCGPR' LT '2').ZG23Q                           00141500
                AIF   ('&ZCGPR' LE '12').ZG23R                          00141600
.ZG23Q          ANOP  ,                                                 00141700
&ZMS            SETC  '"RETCODE='                                       00141800
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00141900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00142000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'          00142100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00142200
.ZG23R          ANOP  ,                                                 00142300
.*----------------------------------------------------------------***   00142400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00142500
                AIF   (N'&RSNCODE LE 1).ZG26A   CK NUM                  00142600
&ZMS            SETC  '"RSNCODE='                                       00142700
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00142800
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00142900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00143000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00143100
.ZG26A          ANOP  ,                                                 00143200
.*-------------------------------------------------------------------   00143300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00143400
                AIF   (K'&RSNCODE(1) LE 0).ZG26C  NO PARM               00143500
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00143600
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00143700
                AIF   (N'&RSNCODE GT 1).ZG26C                           00143800
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00143900
.ZG26C          ANOP  ,                                                 00144000
.*-------------------------------------------------------------------   00144100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00144200
                AIF   (K'&ZXRSNCODE LE 0).ZG26R  NOT I/O                00144300
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG26R                   00144400
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00144500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                      00144600
                AIF   (K'&ZCGPR GT 2).ZG26Q                             00144700
                AIF   ('&ZCGPR' EQ '0').ZG26R                           00144800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00144900
                AIF   (T'&ZCGPR NE 'N').ZG26Q   INVALID REG NAME        00145000
.ZG26P          ANOP  ,                                                 00145100
                AIF   (T'&ZCGPR NE 'N').ZG26R   NON NUMERIC             00145200
                AIF   ('&ZCGPR' EQ '0').ZG26R                           00145300
                AIF   ('&ZCGPR' LT '2').ZG26Q                           00145400
                AIF   ('&ZCGPR' LE '12').ZG26R                          00145500
.ZG26Q          ANOP  ,                                                 00145600
&ZMS            SETC  '"RSNCODE='                                       00145700
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00145800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00145900
                MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'           00146000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00146100
.ZG26R          ANOP  ,                                                 00146200
.******************************************************************     00146300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00146400
.******************************************************************     00146500
                ACTR  10000                                             00146600
.*----------------------------------------------------------------***   00146700
.***AH.P02 EXTRA POSITIONALS                                            00146800
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00146900
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00147000
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00147100
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00147200
.ZGLISTX1       ANOP  ,                                                 00147300
&ZCVAL          SETC  ''          ERROR FIELD                           00147400
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00147500
.ZGLIST2        ANOP  ,                                                 00147600
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00147700
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00147800
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00147900
                AGO   .ZGLIST2                                          00148000
.*                                                                      00148100
.ZGLIST3        ANOP  ,                                                 00148200
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00148300
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00148400
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00148500
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00148600
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00148700
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00148800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00148900
.ZGLISTX        ANOP  ,                                                 00149000
&ZASYSLNDX      SETA  0                                                 00149100
.*-------------------------------------------------------------------   00149200
.***AG.MF04 MF=(SLE)                                                    00149300
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00149400
.*******************************************************************    00149500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00149600
.*******************************************************************    00149700
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00149800
.*******************************************************************    00149900
.***AE.01  START OF IWMSRSRG MACRO CODE                                 00150000
.*******************************************************************    00150100
                LCLC  &M0M0001                 NAME                     00150200
&M0M0001        SETC  '&XLABEL'                SET NAME                 00150300
                AIF   (K'&XLABEL NE 0).XLAB2                            00150400
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00150500
.*                                                                      00150600
.XLAB2          ANOP  ,                                                 00150700
                AIF   ('&XMF' EQ 'L').XLAB3                             00150800
&M0M0001 DS    0H                             IWMSRSRG-3                00150900
.XLAB3          ANOP  ,                                                 00151000
.*******************************************************************    00151100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00151200
.*******************************************************************    00151300
              PUSH  PRINT                                               00151400
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00151500
                PRINT OFF         ++ PR01                               00151600
                AGO   .ZPRNTXX                                          00151700
.ZPRINTX        PRINT ON                                                00151800
.ZPRNTXX        ANOP  ,                                                 00151900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00152000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00152100
.********************************************************************   00152200
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00152300
.********************************************************************   00152400
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00152500
                      LCLA  &ZOPN1         INVOCATION INDEX             00152600
                      LCLC  &ZOPL(4095)    LABEL                        00152700
                      LCLC  &ZOPO(4095)    OPERATION                    00152800
                      LCLC  &ZOPV(4095)    VALUE                        00152900
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00153000
.*                                                                      00153100
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00153200
.******************************************************************     00153300
.***AL.L10 IWMSRSRG FMT=LIST MF=S!L PARAMETERS                          00153400
.******************************************************************     00153500
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00153600
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00153700
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00153800
&XMFATTR              SETC  '0D'                                        00153900
.*                                                                      00154000
&ZOPN                 SETA  &ZOPN+1                                     00154100
&ZOPL(&ZOPN)          SETC  ' '                                         00154200
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00154300
&ZOPO(&ZOPN)          SETC  'B'                                         00154400
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00154500
                      AGO   .ZALVL6B                                    00154600
.ZALVL6A              ANOP                                              00154700
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00154800
&ZOPV(&ZOPN)          SETC  '4,8'                                       00154900
&ZOPN                 SETA  &ZOPN+1                                     00155000
&ZOPL(&ZOPN)          SETC  ' '                                         00155100
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00155200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00155300
.ZALVL6B              ANOP                                              00155400
&ZOPD(&ZOPN)          SETC  '++ IWMSRSRG ARG PARMS'                     00155500
.*                                                                      00155600
&ZOPN                 SETA  &ZOPN+1                                     00155700
&ZOPL(&ZOPN)          SETC  ' '                                         00155800
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00155900
&ZOPV(&ZOPN)          SETC  '1'                                         00156000
&ZOPD(&ZOPN)          SETC  ' '                                         00156100
.*                                                                      00156200
.ZLMFSL2              ANOP  ,                                           00156300
.*-------------------------------------------------------------------   00156400
.***AM.L00  IWMSRSRG FMT=LIST name                                      00156500
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00156600
&ZOPN                 SETA &ZOPN+1                                      00156700
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00156800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00156900
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00157000
&ZOPD(&ZOPN)          SETC '++ IWMSRSRG NAME'                           00157100
.ZLMFSL2M             ANOP  ,                                           00157200
.*-------------------------------------------------------------------   00157300
.***AM.L01  IWMSRSRG FMT=LIST PARAMETERS                                00157400
&ZOPN                 SETA &ZOPN+1                                      00157500
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00157600
&ZOPO(&ZOPN)          SETC 'DS'                                         00157700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00157800
&ZOPD(&ZOPN)          SETC '++ IWMSRSRG PARM LIST'                      00157900
.*-------------------------------------------------------------------   00158000
.***AM.L02 XVERSION XL1                                                 00158100
&ZOPN                 SETA &ZOPN+1                                      00158200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00158300
&ZOPO(&ZOPN)          SETC 'DS'                                         00158400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00158500
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00158600
.*-------------------------------------------------------------------   00158700
.***AM.L09  XLUNAME CL8                                                 00158800
&ZOPN                 SETA &ZOPN+1                                      00158900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLUNAME'                          00159000
&ZOPO(&ZOPN)          SETC 'DS'                                         00159100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00159200
&ZOPD(&ZOPN)          SETC '++ &ZXLUNAME '                              00159300
.*-------------------------------------------------------------------   00159400
.***AM.L09  XNETWORK_ID CL8                                             00159500
&ZOPN                 SETA &ZOPN+1                                      00159600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNETWORK_ID'                      00159700
&ZOPO(&ZOPN)          SETC 'DS'                                         00159800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00159900
&ZOPD(&ZOPN)          SETC '++ &ZXNETWORK_ID '                          00160000
.*-------------------------------------------------------------------   00160100
.***AM.L09  XLOCATION CL18                                              00160200
&ZOPN                 SETA &ZOPN+1                                      00160300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCATION'                        00160400
&ZOPO(&ZOPN)          SETC 'DS'                                         00160500
&ZOPV(&ZOPN)          SETC 'CL18'                                       00160600
&ZOPD(&ZOPN)          SETC '++ &ZXLOCATION '                            00160700
.*-------------------------------------------------------------------   00160800
.***AM.L09  XSTOKEN BL.64                                               00160900
&ZOPN                 SETA &ZOPN+1                                      00161000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTOKEN'                          00161100
&ZOPO(&ZOPN)          SETC 'DS'                                         00161200
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00161300
&ZOPD(&ZOPN)          SETC '++ &ZXSTOKEN '                              00161400
.*-------------------------------------------------------------------   00161500
.***AM.L09  XRSV001A CL4                                                00161600
&ZOPN                 SETA &ZOPN+1                                      00161700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001A'                         00161800
&ZOPO(&ZOPN)          SETC 'DS'                                         00161900
&ZOPV(&ZOPN)          SETC 'CL4'                                        00162000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00162100
.*-------------------------------------------------------------------   00162200
.***AM.MLM2 SAVED LOCATION COUNTER                                      00162300
                      AIF  (&XPLISTVER GE 1).ZL6LA                      00162400
                      AIF  ('&ZENDBASEPL' NE '').ZL6LA                  00162500
&ZENDBASEPL           SETC 'YES'                                        00162600
&ZOPN                 SETA &ZOPN+1                                      00162700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00162800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00162900
&ZOPV(&ZOPN)          SETC '*'                                          00163000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00163100
.ZL6LA                ANOP  ,                                           00163200
.*-------------------------------------------------------------------   00163300
.***AM.LVER1                                                            00163400
                      AIF  (&XPLISTVER LT 1).ZL6L                       00163500
.*-------------------------------------------------------------------   00163600
.*-------------------------------------------------------------------   00163700
.***AM.L09  XRSV002F CL1                                                00163800
&ZOPN                 SETA &ZOPN+1                                      00163900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002F'                         00164000
&ZOPO(&ZOPN)          SETC 'DS'                                         00164100
&ZOPV(&ZOPN)          SETC 'CL1'                                        00164200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00164300
.*-------------------------------------------------------------------   00164400
.***AM.LVER2                                                            00164500
.ZL6L                 ANOP  ,                                           00164600
.*-------------------------------------------------------------------   00164700
.*-------------------------------------------------------------------   00164800
.***AM.LVER1                                                            00164900
                      AIF  (&XPLISTVER LT 1).ZL7L                       00165000
.*-------------------------------------------------------------------   00165100
.*-------------------------------------------------------------------   00165200
.***AM.L09  XPLISTLEN XL2                                               00165300
&ZOPN                 SETA &ZOPN+1                                      00165400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00165500
&ZOPO(&ZOPN)          SETC 'DS'                                         00165600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00165700
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00165800
.*-------------------------------------------------------------------   00165900
.***AM.LVER2                                                            00166000
.ZL7L                 ANOP  ,                                           00166100
.*-------------------------------------------------------------------   00166200
.*-------------------------------------------------------------------   00166300
.***AM.LVER1                                                            00166400
                      AIF  (&XPLISTVER LT 1).ZL8L                       00166500
.*-------------------------------------------------------------------   00166600
.*-------------------------------------------------------------------   00166700
.***AM.L09  XRSV0032 CL2                                                00166800
&ZOPN                 SETA &ZOPN+1                                      00166900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0032'                         00167000
&ZOPO(&ZOPN)          SETC 'DS'                                         00167100
&ZOPV(&ZOPN)          SETC 'CL2'                                        00167200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00167300
.*-------------------------------------------------------------------   00167400
.***AM.LVER2                                                            00167500
.ZL8L                 ANOP  ,                                           00167600
.*-------------------------------------------------------------------   00167700
.*-------------------------------------------------------------------   00167800
.***AM.LVER1                                                            00167900
                      AIF  (&XPLISTVER LT 1).ZL9L                       00168000
.*-------------------------------------------------------------------   00168100
.*-------------------------------------------------------------------   00168200
.***AM.L09 ADDR XUSERDATA A                                             00168300
&ZOPN                 SETA &ZOPN+1                                      00168400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA_ADDR'                   00168500
&ZOPO(&ZOPN)          SETC 'DS'                                         00168600
&ZOPV(&ZOPN)          SETC 'A'                                          00168700
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA ADDR'                        00168800
.*-------------------------------------------------------------------   00168900
.***AM.LVER2                                                            00169000
.ZL9L                 ANOP  ,                                           00169100
.*-------------------------------------------------------------------   00169200
.*-------------------------------------------------------------------   00169300
.***AM.MLM2 SAVED LOCATION COUNTER                                      00169400
                      AIF  (&XPLISTVER GE 2).ZL10LA                     00169500
                      AIF  ('&ZENDBASEPL' NE '').ZL10LA                 00169600
&ZENDBASEPL           SETC 'YES'                                        00169700
&ZOPN                 SETA &ZOPN+1                                      00169800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00169900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00170000
&ZOPV(&ZOPN)          SETC '*'                                          00170100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00170200
.ZL10LA               ANOP  ,                                           00170300
.*-------------------------------------------------------------------   00170400
.***AM.LVER1                                                            00170500
                      AIF  (&XPLISTVER LT 2).ZL10L                      00170600
.*-------------------------------------------------------------------   00170700
.*-------------------------------------------------------------------   00170800
.***AM.L09 ADDR XHOST A                                                 00170900
&ZOPN                 SETA &ZOPN+1                                      00171000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XHOST_ADDR'                       00171100
&ZOPO(&ZOPN)          SETC 'DS'                                         00171200
&ZOPV(&ZOPN)          SETC 'A'                                          00171300
&ZOPD(&ZOPN)          SETC '++ &ZXHOST ADDR'                            00171400
.*-------------------------------------------------------------------   00171500
.***AM.LVER2                                                            00171600
.ZL10L                ANOP  ,                                           00171700
.*-------------------------------------------------------------------   00171800
.*-------------------------------------------------------------------   00171900
.***AM.MLM2 SAVED LOCATION COUNTER                                      00172000
                      AIF  (&XPLISTVER GE 3).ZL11LA                     00172100
                      AIF  ('&ZENDBASEPL' NE '').ZL11LA                 00172200
&ZENDBASEPL           SETC 'YES'                                        00172300
&ZOPN                 SETA &ZOPN+1                                      00172400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00172500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00172600
&ZOPV(&ZOPN)          SETC '*'                                          00172700
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00172800
.ZL11LA               ANOP  ,                                           00172900
.*-------------------------------------------------------------------   00173000
.***AM.LVER1                                                            00173100
                      AIF  (&XPLISTVER LT 3).ZL11L                      00173200
.*-------------------------------------------------------------------   00173300
.*-------------------------------------------------------------------   00173400
.***AM.L09 ADDR XHEALTH A                                               00173500
&ZOPN                 SETA &ZOPN+1                                      00173600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XHEALTH_ADDR'                     00173700
&ZOPO(&ZOPN)          SETC 'DS'                                         00173800
&ZOPV(&ZOPN)          SETC 'A'                                          00173900
&ZOPD(&ZOPN)          SETC '++ &ZXHEALTH ADDR'                          00174000
.*-------------------------------------------------------------------   00174100
.***AM.LVER2                                                            00174200
.ZL11L                ANOP  ,                                           00174300
.*-------------------------------------------------------------------   00174400
.*-------------------------------------------------------------------   00174500
.***AM.L10 END OF IWMSRSRG LIST PARAMETERS                              00174600
&ZOPN                 SETA &ZOPN+1                                      00174700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00174800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00174900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00175000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00175100
.*                                                                      00175200
&ZOPN                 SETA &ZOPN+1                                      00175300
&ZOPL(&ZOPN)          SETC ' '                                          00175400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00175500
&ZOPV(&ZOPN)          SETC '1'                                          00175600
&ZOPD(&ZOPN)          SETC ' '                                          00175700
.*-------------------------------------------------------------------   00175800
.***AL.L12 IWMSRSRG FMT=LIST MF=S!L PARAMETERS                          00175900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00176000
.*                                                                      00176100
&ZOPN                 SETA  &ZOPN+1                                     00176200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00176300
&ZOPO(&ZOPN)          SETC  'DC'                                        00176400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00176500
&ZOPD(&ZOPN)          SETC  '++ IWMSRSRG ARG PARMS'                     00176600
.*                                                                      00176700
.ZLMFSLX              ANOP  ,                                           00176800
.*-------------------------------------------------------------------   00176900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00177000
&ZPLLEN               SETA 47                                           00177100
.*                                                                      00177200
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00177300
&ZPLLEN               SETA 56                                           00177400
.ZLLEN2Z              ANOP  ,                                           00177500
.*                                                                      00177600
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00177700
&ZPLLEN               SETA 60                                           00177800
.ZLLEN3Z              ANOP  ,                                           00177900
.*                                                                      00178000
                      AIF  (&XPLISTVER LT 3).ZLLEN4Z                    00178100
&ZPLLEN               SETA 64                                           00178200
.ZLLEN4Z              ANOP  ,                                           00178300
.*                                                                      00178400
.******************************************************************     00178500
.***AI.L01 IWMSRSRG FMT=LIST FILL IN PARAMETER AREA                     00178600
.******************************************************************     00178700
                      ACTR  10000                                       00178800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00178900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00179000
&ZCVAL                SETC  'LAE'          XAX MODE                     00179100
.ZIMFXA               ANOP ,                                            00179200
.*                                                                      00179300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00179400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00179500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00179600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00179700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00179800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00179900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00180000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00180100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00180200
&ZOPN                 SETA  &ZOPN+1                                     00180300
&ZOPL(&ZOPN)          SETC  ' '                                         00180400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00180500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00180600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00180700
                      AGO   .ZIMFNX                                     00180800
.*                                                                      00180900
.ZIMFN2               ANOP ,                                            00181000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00181100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00181200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00181300
&ZOPN                 SETA  &ZOPN+1                                     00181400
&ZOPL(&ZOPN)          SETC  ' '                                         00181500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00181600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00181700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00181800
                      AGO   .ZIMFNX                                     00181900
.ZIMFNX1              ANOP ,                                            00182000
&ZOPN                 SETA  &ZOPN+1                                     00182100
&ZOPL(&ZOPN)          SETC  ' '                                         00182200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00182300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00182400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00182500
.ZIMFNX               ANOP ,                                            00182600
.********************************************************************   00182700
.***AI.L02 IWMSRSRG FMT=LIST INITIALIZE PARAMETER AREA                  00182800
.********************************************************************   00182900
.***AI.L03 MF=(SLE)                                                     00183000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00183100
.*                                                                      00183200
&ZOPN                 SETA  &ZOPN+1                                     00183300
&ZOPL(&ZOPN)          SETC  ' '                                         00183400
&ZOPO(&ZOPN)          SETC  'XC'                                        00183500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00183600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00183700
.ZIMFLX               ANOP  ,                                           00183800
.*-------------------------------------------------------------------   00183900
.***AI.L04A XVERSION XL1                                                00184000
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00184100
&ZOPN                 SETA  &ZOPN+1                                     00184200
&ZOPL(&ZOPN)          SETC  ' '                                         00184300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00184400
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00184500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00184600
.ZIMFVW               ANOP  ,                                           00184700
.*-------------------------------------------------------------------   00184800
.***AI.L25  XLUNAME CL8                                                 00184900
                      AIF   ('&ZXLUNAME' EQ '').ZI2E                    00185000
                      AIF   ('&ZXLUNAME' EQ 'OUTPUT').ZI2E              00185100
&ZCGPR                SETC  '&XLUNAME'                                  00185200
.*                                                                      00185300
                      AIF   ('&XLUNAME'(1,1) NE '(').ZI2B               00185400
&ZCGPR   SETC  '0('.'&XLUNAME'(2,K'&XLUNAME-2).')'                      00185500
.ZI2B                 ANOP  ,                                           00185600
.*                                                                      00185700
&ZOPN                 SETA  &ZOPN+1                                     00185800
&ZOPL(&ZOPN)          SETC  ' '                                         00185900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00186000
&ZOPV(&ZOPN)          SETC  '1(8,1),&ZCGPR'                             00186100
&ZOPD(&ZOPN)          SETC  '++ &ZXLUNAME XLUNAME'                      00186200
.*                                                                      00186300
.ZI2E                 ANOP  ,                                           00186400
.*-------------------------------------------------------------------   00186500
.***AI.L25  XNETWORK_ID CL8                                             00186600
                      AIF   ('&ZXNETWORK_ID' EQ '').ZI3E                00186700
                      AIF   ('&ZXNETWORK_ID' EQ 'OUTPUT').ZI3E          00186800
&ZCGPR                SETC  '&XNETWORK_ID'                              00186900
.*                                                                      00187000
                      AIF   ('&XNETWORK_ID'(1,1) NE '(').ZI3B           00187100
&ZCGPR   SETC  '0('.'&XNETWORK_ID'(2,K'&XNETWORK_ID-2).')'              00187200
.ZI3B                 ANOP  ,                                           00187300
.*                                                                      00187400
&ZOPN                 SETA  &ZOPN+1                                     00187500
&ZOPL(&ZOPN)          SETC  ' '                                         00187600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00187700
&ZOPV(&ZOPN)          SETC  '9(8,1),&ZCGPR'                             00187800
&ZOPD(&ZOPN)          SETC  '++ &ZXNETWORK_ID XNETWORK_ID'              00187900
.*                                                                      00188000
.ZI3E                 ANOP  ,                                           00188100
.*-------------------------------------------------------------------   00188200
.***AI.L25  XLOCATION CL18                                              00188300
                      AIF   ('&ZXLOCATION' EQ '').ZI4E                  00188400
                      AIF   ('&ZXLOCATION' EQ 'OUTPUT').ZI4E            00188500
&ZCGPR                SETC  '&XLOCATION'                                00188600
.*                                                                      00188700
                      AIF   ('&XLOCATION'(1,1) NE '(').ZI4B             00188800
&ZCGPR   SETC  '0('.'&XLOCATION'(2,K'&XLOCATION-2).')'                  00188900
.ZI4B                 ANOP  ,                                           00189000
.*                                                                      00189100
&ZOPN                 SETA  &ZOPN+1                                     00189200
&ZOPL(&ZOPN)          SETC  ' '                                         00189300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00189400
&ZOPV(&ZOPN)          SETC  '17(18,1),&ZCGPR'                           00189500
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCATION XLOCATION'                  00189600
.*                                                                      00189700
.ZI4E                 ANOP  ,                                           00189800
.*-------------------------------------------------------------------   00189900
.***AI.L25  XSTOKEN XL8                                                 00190000
                      AIF   ('&ZXSTOKEN' EQ '').ZI5E                    00190100
                      AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZI5E              00190200
&ZCGPR                SETC  '&XSTOKEN'                                  00190300
.*                                                                      00190400
                      AIF   ('&XSTOKEN'(1,1) NE '(').ZI5B               00190500
&ZCGPR   SETC  '0('.'&XSTOKEN'(2,K'&XSTOKEN-2).')'                      00190600
                      AGO   .ZI5D                                       00190700
.ZI5B                 ANOP  ,                                           00190800
.*                                                                      00190900
&ZC                   SETC  '&XSTOKEN'(1,1)                             00191000
                      AIF   (T'&ZC NE 'N').ZI5D                         00191100
&ZC                   SETC  '&XSTOKEN'                                  00191200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00191300
&ZCGPR                SETC  '=BL8''&XSTOKEN'''                          00191400
.*                                                                      00191500
.ZI5D                 ANOP  ,                                           00191600
.*                                                                      00191700
&ZOPN                 SETA  &ZOPN+1                                     00191800
&ZOPL(&ZOPN)          SETC  ' '                                         00191900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00192000
&ZOPV(&ZOPN)          SETC  '35(8,1),&ZCGPR'                            00192100
&ZOPD(&ZOPN)          SETC  '++ &ZXSTOKEN XSTOKEN'                      00192200
.*                                                                      00192300
.ZI5E                 ANOP  ,                                           00192400
.*-------------------------------------------------------------------   00192500
.***AI.LVER01                                                           00192600
                      AIF  (&XPLISTVER LT 1).ZI7Z                       00192700
.*-------------------------------------------------------------------   00192800
.***AI.LVER02                                                           00192900
.ZI7Z                 ANOP  ,                                           00193000
.*-------------------------------------------------------------------   00193100
.***AI.LVER01                                                           00193200
                      AIF  (&XPLISTVER LT 1).ZI8Z                       00193300
.*-------------------------------------------------------------------   00193400
.***AI.L04 XPLISTLEN XL2                                                00193500
&ZOPN                 SETA  &ZOPN+1                                     00193600
&ZOPL(&ZOPN)          SETC  ' '                                         00193700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00193800
&ZOPV(&ZOPN)          SETC  '48(2,1),=AL2(&ZPLLEN)'                     00193900
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00194000
.*-------------------------------------------------------------------   00194100
.***AI.LVER02                                                           00194200
.ZI8Z                 ANOP  ,                                           00194300
.*-------------------------------------------------------------------   00194400
.***AI.LVER01                                                           00194500
                      AIF  (&XPLISTVER LT 1).ZI9Z                       00194600
.*-------------------------------------------------------------------   00194700
.***AI.LVER02                                                           00194800
.ZI9Z                 ANOP  ,                                           00194900
.*-------------------------------------------------------------------   00195000
.***AI.LVER01                                                           00195100
                      AIF  (&XPLISTVER LT 1).ZI10Z                      00195200
.*-------------------------------------------------------------------   00195300
.***AI.L18 ADDR XUSERDATA A                                             00195400
         AIF   ('&XUSERDATA' NE 'NO_USERDATA').ZI10                     00195500
&ZXUSERDATA           SETC  ''             RESET INPUT/OUTPUT           00195600
.ZI10                 ANOP  ,                                           00195700
.*-------------------------------------------------------------------   00195800
.***AI.L19 ADDR XUSERDATA A                                             00195900
                      AIF   ('&ZXUSERDATA' EQ '').ZI10H                 00196000
&ZCLNG                SETC  '&XUSERDATA'                                00196100
&ZCGPR                SETC  '14'                                        00196200
         AIF   ('&XUSERDATA'(1,1) EQ '(').ZI10F  IN GPR                 00196300
.*                                                                      00196400
&ZOPN                 SETA  &ZOPN+1                                     00196500
&ZOPL(&ZOPN)          SETC  ' '                                         00196600
&ZOPO(&ZOPN)          SETC  'LA'                                        00196700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00196800
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00196900
.*                                                                      00197000
                      AGO   .ZI10G                                      00197100
.*                                                                      00197200
.ZI10F                ANOP  ,                                           00197300
&ZCGPR   SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                           00197400
.*                                                                      00197500
.ZI10G                ANOP  ,                                           00197600
.*                                                                      00197700
&ZOPN                 SETA  &ZOPN+1                                     00197800
&ZOPL(&ZOPN)          SETC  ' '                                         00197900
&ZOPO(&ZOPN)          SETC  'ST'                                        00198000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             00198100
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00198200
.*                                                                      00198300
.ZI10H                ANOP  ,                                           00198400
.*-------------------------------------------------------------------   00198500
.***AI.LVER02                                                           00198600
.ZI10Z                ANOP  ,                                           00198700
.*-------------------------------------------------------------------   00198800
.***AI.LVER01                                                           00198900
                      AIF  (&XPLISTVER LT 2).ZI11Z                      00199000
.*-------------------------------------------------------------------   00199100
.***AI.L18 ADDR XHOST A                                                 00199200
         AIF   ('&XHOST' NE 'NO_HOST').ZI11                             00199300
&ZXHOST               SETC  ''             RESET INPUT/OUTPUT           00199400
.ZI11                 ANOP  ,                                           00199500
.*-------------------------------------------------------------------   00199600
.***AI.L19 ADDR XHOST A                                                 00199700
                      AIF   ('&ZXHOST' EQ '').ZI11H                     00199800
&ZCLNG                SETC  '&XHOST'                                    00199900
&ZCGPR                SETC  '14'                                        00200000
         AIF   ('&XHOST'(1,1) EQ '(').ZI11F  IN GPR                     00200100
.*                                                                      00200200
&ZOPN                 SETA  &ZOPN+1                                     00200300
&ZOPL(&ZOPN)          SETC  ' '                                         00200400
&ZOPO(&ZOPN)          SETC  'LA'                                        00200500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00200600
&ZOPD(&ZOPN)          SETC  '++ &ZXHOST XHOST'                          00200700
.*                                                                      00200800
                      AGO   .ZI11G                                      00200900
.*                                                                      00201000
.ZI11F                ANOP  ,                                           00201100
&ZCGPR   SETC  '&XHOST'(2,K'&XHOST-2)                                   00201200
.*                                                                      00201300
.ZI11G                ANOP  ,                                           00201400
.*                                                                      00201500
&ZOPN                 SETA  &ZOPN+1                                     00201600
&ZOPL(&ZOPN)          SETC  ' '                                         00201700
&ZOPO(&ZOPN)          SETC  'ST'                                        00201800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,56(,1)'                             00201900
&ZOPD(&ZOPN)          SETC  '++ &ZXHOST XHOST'                          00202000
.*                                                                      00202100
.ZI11H                ANOP  ,                                           00202200
.*-------------------------------------------------------------------   00202300
.***AI.LVER02                                                           00202400
.ZI11Z                ANOP  ,                                           00202500
.*-------------------------------------------------------------------   00202600
.***AI.LVER01                                                           00202700
                      AIF  (&XPLISTVER LT 3).ZI12Z                      00202800
.*-------------------------------------------------------------------   00202900
.***AI.L18 ADDR XHEALTH A                                               00203000
         AIF   ('&XHEALTH' NE 'NO_HEALTH').ZI12                         00203100
&ZXHEALTH             SETC  ''             RESET INPUT/OUTPUT           00203200
.ZI12                 ANOP  ,                                           00203300
.*-------------------------------------------------------------------   00203400
.***AI.L19 ADDR XHEALTH A                                               00203500
                      AIF   ('&ZXHEALTH' EQ '').ZI12H                   00203600
&ZCLNG                SETC  '&XHEALTH'                                  00203700
&ZCGPR                SETC  '14'                                        00203800
         AIF   ('&XHEALTH'(1,1) EQ '(').ZI12F  IN GPR                   00203900
.*                                                                      00204000
&ZOPN                 SETA  &ZOPN+1                                     00204100
&ZOPL(&ZOPN)          SETC  ' '                                         00204200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00204300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00204400
&ZOPD(&ZOPN)          SETC  '++ &ZXHEALTH XHEALTH'                      00204500
.*                                                                      00204600
                      AGO   .ZI12G                                      00204700
.*                                                                      00204800
.ZI12F                ANOP  ,                                           00204900
&ZCGPR   SETC  '&XHEALTH'(2,K'&XHEALTH-2)                               00205000
.*                                                                      00205100
.ZI12G                ANOP  ,                                           00205200
.*                                                                      00205300
&ZOPN                 SETA  &ZOPN+1                                     00205400
&ZOPL(&ZOPN)          SETC  ' '                                         00205500
&ZOPO(&ZOPN)          SETC  'ST'                                        00205600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             00205700
&ZOPD(&ZOPN)          SETC  '++ &ZXHEALTH XHEALTH'                      00205800
.*                                                                      00205900
.ZI12H                ANOP  ,                                           00206000
.*-------------------------------------------------------------------   00206100
.***AI.LVER02                                                           00206200
.ZI12Z                ANOP  ,                                           00206300
.*-------------------------------------------------------------------   00206400
&ZOPN1                SETA &ZOPN                                        00206500
.*******************************************************************    00206600
.***  PROCESS IWMSRSRG OUTPUT PARAMETERS                                00206700
.*******************************************************************    00206800
                      ACTR  10000                                       00206900
.*******************************************************************    00207000
.***AO.X02  RETURN CODE PROCESSING                                      00207100
.*******************************************************************    00207200
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00207300
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00207400
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00207500
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00207600
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00207700
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00207800
&ZOPN                 SETA  &ZOPN+1                                     00207900
&ZOPL(&ZOPN)          SETC  ' '                                         00208000
&ZOPO(&ZOPN)          SETC  'ST'                                        00208100
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00208200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00208300
                      AGO   .ZMRETX                                     00208400
.*                                                                      00208500
.ZMRET2               ANOP  ,                                           00208600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00208700
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00208800
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00208900
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00209000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00209100
&ZOPN                 SETA  &ZOPN+1                                     00209200
&ZOPL(&ZOPN)          SETC  ' '                                         00209300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00209400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00209500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00209600
.ZMRETX               ANOP  ,                                           00209700
.*******************************************************************    00209800
.***AO.X03  REASON CODE PROCESSING                                      00209900
.*******************************************************************    00210000
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00210100
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00210200
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00210300
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00210400
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00210500
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00210600
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00210700
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00210800
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00210900
&ZOPN                 SETA  &ZOPN+1                                     00211000
&ZOPL(&ZOPN)          SETC  ' '                                         00211100
&ZOPO(&ZOPN)          SETC  'ST'                                        00211200
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00211300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00211400
                      AGO   .ZMRSNX                                     00211500
.*                                                                      00211600
.ZMRSN2               ANOP  ,                                           00211700
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00211800
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00211900
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00212000
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00212100
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00212200
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00212300
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00212400
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00212500
&ZOPN                 SETA  &ZOPN+1                                     00212600
&ZOPL(&ZOPN)          SETC  ' '                                         00212700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00212800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00212900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00213000
.ZMRSNX               ANOP  ,                                           00213100
.*******************************************************************    00213200
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00213300
.*******************************************************************    00213400
.ZMFLX                ANOP  ,              MF=L PROCESSING              00213500
.*******************************************************************    00213600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00213700
.*******************************************************************    00213800
                      ACTR  10000                                       00213900
.*                                                                      00214000
                      LCLA  &ZLC           COLUMN POSITION              00214100
                      LCLA  &ZOPX          LIST TABLE INDEX             00214200
                      LCLC  &ZLL           LABEL                        00214300
                      LCLC  &ZLOP          OPERATION                    00214400
                      LCLC  &ZLV           VALUE                        00214500
                      LCLC  &ZLD           DESCRIPTION                  00214600
.*                                                                      00214700
&ZOPX                 SETA  1                                           00214800
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00214900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00215000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00215100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00215200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00215300
                      AIF   (K'&ZLD LE 0).ZL5                           00215400
&ZLC                  SETA  35             COMMENT COLUMN               00215500
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00215600
&ZLC                  SETA  33             COMMMENT COLUMN              00215700
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00215800
&ZLV                  SETC  '&ZLV'.' '                                  00215900
                      AGO   .ZL3                                        00216000
.*                                                                      00216100
.ZL4                  ANOP  ,                                           00216200
&ZLV                  SETC  '&ZLV'.' '                                  00216300
.ZL5                  ANOP  ,                                           00216400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00216500
.*                                                                      00216600
&ZLL     &ZLOP &ZLV                                                     00216700
.*                                                                      00216800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00216900
                      AGO   .ZL2           CONTINUE LOOPING             00217000
.*                                                                      00217100
.ZLX                  ANOP  ,                                           00217200
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00217300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00217400
         L     14,16(0,0)              GET CVT ADDRESS                  00217500
         L     14,772(14,0)            GET SFT ADDRESS                  00217600
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00217700
         LA    15,28                   GET EX FOR SERVICE ROUTINE       00217800
         OR    14,15                   GET PC NUMBER                    00217900
         PC    0(14)                                                    00218000
END&SYSNDX DS    0H                    END LABEL                        00218100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00218200
.ZLINKX               ANOP  ,                                           00218300
.*******************************************************************    00218400
.***AP.X01  FORMAT GENERATED CODE                                       00218500
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00218600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00218700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00218800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00218900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00219000
                      AIF   (K'&ZLD LE 0).ZL51                          00219100
&ZLC                  SETA  35             COMMENT COLUMN               00219200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00219300
&ZLC                  SETA  33             COMMENT COLUMN               00219400
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00219500
&ZLV                  SETC  '&ZLV'.' '                                  00219600
                      AGO   .ZL31                                       00219700
.*                                                                      00219800
.ZL41                 ANOP  ,                                           00219900
&ZLV                  SETC  '&ZLV'.' '                                  00220000
.ZL51                 ANOP  ,                                           00220100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00220200
.*                                                                      00220300
&ZLL     &ZLOP &ZLV                                                     00220400
.*                                                                      00220500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00220600
                      AGO   .ZL21          CONTINUE LOOPING             00220700
.*                                                                      00220800
.ZLX1                 ANOP  ,                                           00220900
.*******************************************************************    00221000
.***AP.X02  END OF IWMSRSRG MACRO                                       00221100
&ZIWMSRSRG            SETC  'YES'          SET IWMSRSRG USED            00221200
         POP   PRINT                                                    00221300
*                                            IWMSRSRG-3                 00221400
         SPACE 1                                                        00221500
.ZLX2                 ANOP  ,                                           00221600
         MEND                                                           00221700
**********************************************************************/ 00221800
*/**** START OF SPECIFICATIONS **************************************** 00221900
*                                                                     * 00222000
*                                                                     * 00222100
*01* MACRO NAME:  IWMSRSRG                              -07/02/15-<3> * 00222200
*                                                                     * 00222300
*                                                                     * 00222400
*01* DESCRIPTIVE NAME:  Sysplex Routing Registration                  * 00222500
*                                                                     * 00222600
*01* PROPRIETARY STATEMENT:                                           * 00222700
*                                                                     * 00222800
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00222900
*     5694-A01 COPYRIGHT IBM CORP. 1994, 2006                         * 00223000
*                                                                     * 00223100
* STATUS= HBB7730                                                     * 00223200
*                                                                     * 00223300
*                                                                     * 00223400
*                                                                     * 00223500
*01* FUNCTION:                                                        * 00223600
*       See the IWMSRSRG macro prologue for details.                  * 00223700
*                                                                     * 00223800
*01* INPUT:                                                           * 00223900
*                                                                     * 00224000
*            ?IWMSRSRG     LOCATION(xlocation)                        * 00224100
*                          NETWORK_ID(xnetwork_id)                    * 00224200
*                          LUNAME(xluname)                            * 00224300
*                          STOKEN(xstoken)                            * 00224400
*                         ÝUSERDATA(»xuserdata!NO_USERDATAº)¨         * 00224500
*                         ÝHOST(»xhost!NO_HOSTº)¨                     * 00224600
*                         ÝHEALTH(»xhealth!NO_HEALTHº)¨               * 00224700
*                         ÝRETCODE(xretcode)¨                         * 00224800
*                         ÝRSNCODE(xrsncode)¨                         * 00224900
*                         ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨     * 00225000
*                        ÐÝMF(S)¨                                     * 00225100
*                        ÔÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨        * 00225200
*                        ¿ÝMF(E,xmfctrl»,COMPLETEº)¨                  * 00225300
*                                                                     * 00225400
****** END OF SPECIFICATIONS *****************************************/ 00225500
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00225600
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00225700
*  ANS('/* ? IWMSRSRG '!!MACLIST!!' ')                                  00225800
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00225900
*                                                                       00226000
*  DCL ZELO  FIXED;                                                     00226100
*  DCL ZECOL FIXED;                                                     00226200
*                                                                       00226300
*  ZELO=1;     /* STARTING COLUMN */                                    00226400
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00226500
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00226600
*    IF ZECOL>0                                                         00226700
*      THEN                                                             00226800
*        DO;   /* PARENTHESIS FOUND */                                  00226900
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)!!' ')                         00227000
*             NORESCAN COL(MACLMAR+5);                                  00227100
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00227200
*        END;                                                           00227300
*      ELSE                                                             00227400
*        DO;   /* REMAINING KEYS */                                     00227500
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00227600
*             NORESCAN COL(MACLMAR+5);                                  00227700
*          ZELO=LENGTH(MACKEYS)+1;                                      00227800
*        END;                                                           00227900
*  END;                                                                 00228000
*  ANS(' -07/02/15-3- */')                                              00228100
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00228200
*/********************************************************************/ 00228300
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00228400
*/********************************************************************/ 00228500
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00228600
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00228700
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00228800
*                                                                       00228900
*  DCL   ZIWMSRSRG CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00229000
*  DEACT ZIWMSRSRG;                                                     00229100
*                                                                       00229200
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00229300
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00229400
*                                                                       00229500
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00229600
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00229700
*                                                                       00229800
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00229900
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00230000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00230100
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00230200
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00230300
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00230400
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00230500
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00230600
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00230700
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00230800
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00230900
*                                                                       00231000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00231100
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00231200
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00231300
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00231400
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00231500
*  DCL EHAREGS64 CHARACTER EXTERNAL; /* REG DCLS                     */ 00231600
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00231700
*/*******************************************************************/  00231800
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00231900
*/*******************************************************************/  00232000
*  DCL XLOCATION;  DEACT XLOCATION;  /***PV.XVAR02 INPUT NAME */        00232100
*  DCL ZXLOCATION; DEACT ZXLOCATION;  /***INPUT/OUTPUT CONTROL */       00232200
*  DCL   XNETWORK_ID;              /***PV.XVAR03 INPUT NAME */          00232300
*  DEACT XNETWORK_ID;              /***PV.XVAR03 INPUT NAME */          00232400
*  DCL   ZXNETWORK_ID;             /***INPUT/OUTPUT CONTROL */          00232500
*  DEACT ZXNETWORK_ID;             /***INPUT/OUTPUT CONTROL */          00232600
*  DCL XLUNAME;  DEACT XLUNAME;    /***PV.XVAR02 INPUT NAME */          00232700
*  DCL ZXLUNAME; DEACT ZXLUNAME;   /***INPUT/OUTPUT CONTROL */          00232800
*  DCL XSTOKEN;  DEACT XSTOKEN;    /***PV.XVAR02 INPUT NAME */          00232900
*  DCL ZXSTOKEN; DEACT ZXSTOKEN;   /***INPUT/OUTPUT CONTROL */          00233000
*  DCL XUSERDATA;  DEACT XUSERDATA;  /***PV.XVAR02 INPUT NAME */        00233100
*  DCL ZXUSERDATA; DEACT ZXUSERDATA;  /***INPUT/OUTPUT CONTROL */       00233200
*  DCL XHOST;  DEACT XHOST;        /***PV.XVAR02 INPUT NAME */          00233300
*  DCL ZXHOST; DEACT ZXHOST;       /***INPUT/OUTPUT CONTROL */          00233400
*  DCL XHEALTH;  DEACT XHEALTH;    /***PV.XVAR02 INPUT NAME */          00233500
*  DCL ZXHEALTH; DEACT ZXHEALTH;   /***INPUT/OUTPUT CONTROL */          00233600
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00233700
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00233800
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00233900
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00234000
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00234100
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00234200
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00234300
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00234400
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00234500
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00234600
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00234700
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00234800
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00234900
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00235000
*/********************************************************************/ 00235100
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00235200
*/********************************************************************/ 00235300
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00235400
*    XPLISTVER=3;                                                       00235500
*  ELSE                                                                 00235600
*    XPLISTVER=0;                                                       00235700
*  IF USERDATA^='' & XPLISTVER<1                                        00235800
*    THEN                                                               00235900
*      XPLISTVER=1;                                                     00236000
*  IF HOST^='' & XPLISTVER<2                                            00236100
*    THEN                                                               00236200
*      XPLISTVER=2;                                                     00236300
*  IF HEALTH^='' & XPLISTVER<3                                          00236400
*    THEN                                                               00236500
*      XPLISTVER=3;                                                     00236600
*  IF PLISTVER^=''                                                      00236700
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00236800
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00236900
*    THEN                                                               00237000
*      DO;                                                              00237100
*                                                                       00237200
*        ZCVAL='';                           /* ERROR FLAG */           00237300
*        IF PLISTVER='PLISTVER' ! PLISTVER='()'  /*CHECK ENTRY*/        00237400
*          THEN                                                         00237500
*            DO;                                                        00237600
*              ZMS=' 8, THE "PLISTVER" KEY'!! /**KOPTP* MSG*/           00237700
*                  ' MUST CONTAIN ONE'!!                                00237800
*                  ' (OR MORE) ARGUMENT(S).';                           00237900
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00238000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00238100
*              ZMACRET=8;                    /* MACRO ERROR */          00238200
*              ZCVAL='NO_ARGUMENT';                                     00238300
*            END;                                                       00238400
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00238500
*          THEN                                                         00238600
*            DO;                                                        00238700
*              ZMS=' 8, "PLISTVER'!!         /**KPOSP* MSG*/            00238800
*                  PLISTVER!!                                           00238900
*                  '" "PLISTVER"'!!                                     00239000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00239100
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00239200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00239300
*              ZMACRET=8;                    /* MACRO ERROR */          00239400
*            END;                                                       00239500
*                                                                       00239600
*        ZC=PLISTVER(1);                                                00239700
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00239800
*          IF ZC(ZL:ZL)<'0' !                /* MUST BE NUMERIC */      00239900
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00240000
*            THEN                                                       00240100
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00240200
*        END;                                                           00240300
*        IF ZCVAL=''                                                    00240400
*          THEN                                                         00240500
*            DO;                             /* CHECK RANGE LIMITS */   00240600
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00240700
*              THEN                                                     00240800
*                XPLISTVER=FIXED(PLISTVER(1));                          00240900
*              ELSE                                                     00241000
*                DO;                                                    00241100
*              ZMS=' 8, PLISTVER='!!         /**KVALP* MSG*/            00241200
*                    PLISTVER(1)!!                                      00241300
*                  ', BUT PLISTVER OF '!!                               00241400
*                    CHAR(XPLISTVER)!!                                  00241500
*                  ' IS REQUIRED.';                                     00241600
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00241700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00241800
*              ZMACRET=8;                    /* MACRO ERROR */          00241900
*                END;                                                   00242000
*              IF XPLISTVER<0 !              /* LOW LIMIT */            00242100
*                 XPLISTVER>3                /* HIGH LIMIT */           00242200
*                THEN                                                   00242300
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00242400
*            END;                                                       00242500
*        IF ZCVAL^=''                                                   00242600
*          THEN                                                         00242700
*            DO;                             /* RANGE ERROR */          00242800
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00242900
*              ZMS=' 8, "PLISTVER '!!        /**KRNGP* MSG*/            00243000
*                  PLISTVER!!                                           00243100
*                  '" THE RANGE IS "0-3"'!!                             00243200
*                  ' FOR ARGUMENT 1.';                                  00243300
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00243400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00243500
*              ZMACRET=8;                    /* MACRO ERROR */          00243600
*            END;                                                       00243700
*      END;                                                             00243800
*                                                                       00243900
*/********************************************************************/ 00244000
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00244100
*/********************************************************************/ 00244200
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00244300
*  XMF='';                                                              00244400
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00244500
*  IF TRANSLATE(MF(1))                                                  00244600
*              = 'S'                         /* CHECK FOR KEYWORD */    00244700
*    THEN                                                               00244800
*      DO;                                                              00244900
*        XMF='S';                            /* SET XVARIABLE */        00245000
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00245100
*          THEN                                                         00245200
*            DO;                                                        00245300
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00245400
*                  MF!!                                                 00245500
*                  '" "MF"'!!                                           00245600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00245700
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00245800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00245900
*              ZMACRET=8;                    /* MACRO ERROR */          00246000
*            END;                                                       00246100
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00246200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00246300
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00246400
*  IF TRANSLATE(MF(1))                                                  00246500
*              = 'L'                         /* CHECK FOR KEYWORD */    00246600
*    THEN                                                               00246700
*      DO;                                                              00246800
*        XMF='L';                            /* SET XVARIABLE */        00246900
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00247000
*          THEN                                                         00247100
*            DO;                                                        00247200
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00247300
*                  MF!!                                                 00247400
*                  '" "MF"'!!                                           00247500
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00247600
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00247700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00247800
*              ZMACRET=8;                    /* MACRO ERROR */          00247900
*            END;                                                       00248000
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00248100
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00248200
*        IF PLISTVER ^= ''                                              00248300
*          THEN                                                         00248400
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00248500
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN !                            00248600
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00248700
*          THEN                                                         00248800
*            DO;                                                        00248900
*              ZMS=' 8, THE "L" FORM OF "MF"'!! /**MFLP* MSG*/          00249000
*                  ' CAN ONLY HAVE'!!                                   00249100
*                  ' THE "PLISTVER" KEY'!!                              00249200
*                  ' SPECIFIED ON THE INVOCATION.';                     00249300
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00249400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00249500
*              ZMACRET=8;                    /* MACRO ERROR */          00249600
*            END;                                                       00249700
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00249800
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00249900
*  IF MF(2)=''                               /* CHECK FOR NULL */       00250000
*   THEN                                                                00250100
*    DO;                                     /* KEY IS REQUIRED */      00250200
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00250300
*        ZMS=' 8, WHEN "L" IS SPECIFIED'!!                              00250400
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          00250500
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00250600
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00250700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00250800
*        ZMACRET=8;                          /* MACRO ERROR */          00250900
*    END;                                                               00251000
*  ELSE                                                                 00251100
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00251200
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00251300
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00251400
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00251500
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00251600
*    THEN                                                               00251700
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00251800
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00251900
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00252000
*     LENGTH(XMFATTR)>60                                                00252100
*    THEN                                                               00252200
*      DO;                                                              00252300
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00252400
*        ZMS=' 8, "MF'!!                     /**KLNGP* MSG*/            00252500
*            MF!!                                                       00252600
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'!!                       00252700
*            ' LENGTH OF 60 CHARACTERS. ';                              00252800
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00252900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00253000
*        ZMACRET=8;                          /* MACRO ERROR */          00253100
*      END;                                                             00253200
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00253300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00253400
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00253500
*  IF TRANSLATE(MF(1))                                                  00253600
*              = 'E'                         /* CHECK FOR KEYWORD */    00253700
*    THEN                                                               00253800
*      DO;                                                              00253900
*        XMF='E';                            /* SET XVARIABLE */        00254000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00254100
*          THEN                                                         00254200
*            DO;                                                        00254300
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00254400
*                  MF!!                                                 00254500
*                  '" "MF"'!!                                           00254600
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00254700
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00254800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00254900
*              ZMACRET=8;                    /* MACRO ERROR */          00255000
*            END;                                                       00255100
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00255200
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00255300
*  IF MF(2)=''                               /* CHECK FOR NULL */       00255400
*   THEN                                                                00255500
*    DO;                                     /* KEY IS REQUIRED */      00255600
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00255700
*        ZMS=' 8, WHEN "E" IS SPECIFIED'!!                              00255800
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          00255900
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00256000
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00256100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00256200
*        ZMACRET=8;                          /* MACRO ERROR */          00256300
*    END;                                                               00256400
*  ELSE                                                                 00256500
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00256600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00256700
*  XMFSCK='';                                /* RESET XVARIABLE */      00256800
*  IF TRANSLATE(MF(3))                                                  00256900
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00257000
*    THEN                                                               00257100
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00257200
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00257300
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00257400
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00257500
*    THEN                                                               00257600
*      DO;                                   /* KEYWORD NOT ENTERED */  00257700
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00257800
*        IF MF(3)^=''                                                   00257900
*          THEN                                                         00258000
*            DO;                                                        00258100
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00258200
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            00258300
*                  MF!!'"'!!                                            00258400
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '!!              00258500
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    00258600
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00258700
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00258800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00258900
*              ZMACRET=8;                    /* MACRO ERROR */          00259000
*            END;                                                       00259100
*      END;                                                             00259200
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00259300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00259400
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00259500
*  IF MF='MF'                                                           00259600
*    ! MF='()'                               /*CHECK ENTRY*/            00259700
*     THEN                                                              00259800
*       DO;                                                             00259900
*              ZMS=' 8, THE "MF" KEY'!!      /**KOPTP* MSG*/            00260000
*                  ' MUST CONTAIN ONE'!!                                00260100
*                  ' (OR MORE) ARGUMENT(S).';                           00260200
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00260300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00260400
*              ZMACRET=8;                    /* MACRO ERROR */          00260500
*       END;                                                            00260600
*  ELSE                                                                 00260700
*    DO;                                                                00260800
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00260900
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00261000
*        THEN                                                           00261100
*          DO;                               /* KEYWORD NOT ENTERED */  00261200
*            XMF='S';                        /* SET DEFAULT */          00261300
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00261400
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00261500
*              THEN                                                     00261600
*                DO;                                                    00261700
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00261800
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            00261900
*                  MF!!'"'!!                                            00262000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              00262100
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    00262200
*                  ' "S",'!!                 /* VALID KEYWORD */        00262300
*                  ' "L",'!!                 /* VALID KEYWORD */        00262400
*                  ' OR "E".';               /* VALID KEYWORD */        00262500
*              ANS MSG('?IWMSRSRG ---> '!!ZMS);                         00262600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00262700
*              ZMACRET=8;                    /* MACRO ERROR */          00262800
*                END;                                                   00262900
*          END;                                                         00263000
*    END;                                                               00263100
*/********************************************************************/ 00263200
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00263300
*/********************************************************************/ 00263400
*  IF PLISTVER=''                                                       00263500
*     ! PLISTVER(1)='IMPLIED_VERSION'                                   00263600
*    THEN                                                               00263700
*      ZC='ON';                              /* DEFAULT FLAG ON */      00263800
*    ELSE                                                               00263900
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00264000
*/********************************************************************/ 00264100
*/***PD.P02 DEFAULT ECHO                                             */ 00264200
*/********************************************************************/ 00264300
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00264400
*  IF XMF^='L'                                                          00264500
*    THEN                                                               00264600
*      DO;                                   /* FULL SYNTAX CHECK */    00264700
*        ANS('/*DEFAULT(S): */')                                        00264800
*           NORESCAN COL(MACLMAR+5);                                    00264900
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00265000
*  XUSERDATA='';                                                        00265100
*  IF USERDATA(1)=''                                                    00265200
*    THEN                                                               00265300
*      DO;                                                              00265400
*        XUSERDATA='NO_USERDATA';            /* SET DEFAULT */          00265500
*        ZC='ON';                            /* DEFAULT FLAG ON */      00265600
*      END;                                                             00265700
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00265800
*  IF XPLISTVER>=1                                                      00265900
*    THEN                                                               00266000
*      DO;                                                              00266100
*  IF XUSERDATA^=''                                                     00266200
*    THEN DO;                                                           00266300
*      ANS('/* USERDATA('!!                                             00266400
*          XUSERDATA!!                                                  00266500
*          ')*/')                                                       00266600
*          NORESCAN COL(MACLMAR+5);                                     00266700
*      XUSERDATA = '';                                                  00266800
*    END;                                                               00266900
*      END;                                                             00267000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00267100
*  XHOST='';                                                            00267200
*  IF HOST(1)=''                                                        00267300
*    THEN                                                               00267400
*      DO;                                                              00267500
*        XHOST='NO_HOST';                    /* SET DEFAULT */          00267600
*        ZC='ON';                            /* DEFAULT FLAG ON */      00267700
*      END;                                                             00267800
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00267900
*  IF XPLISTVER>=2                                                      00268000
*    THEN                                                               00268100
*      DO;                                                              00268200
*  IF XHOST^=''                                                         00268300
*    THEN DO;                                                           00268400
*      ANS('/* HOST('!!                                                 00268500
*          XHOST!!                                                      00268600
*          ')*/')                                                       00268700
*          NORESCAN COL(MACLMAR+5);                                     00268800
*      XHOST = '';                                                      00268900
*    END;                                                               00269000
*      END;                                                             00269100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00269200
*  XHEALTH='';                                                          00269300
*  IF HEALTH(1)=''                                                      00269400
*    THEN                                                               00269500
*      DO;                                                              00269600
*        XHEALTH='NO_HEALTH';                /* SET DEFAULT */          00269700
*        ZC='ON';                            /* DEFAULT FLAG ON */      00269800
*      END;                                                             00269900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00270000
*  IF XPLISTVER>=3                                                      00270100
*    THEN                                                               00270200
*      DO;                                                              00270300
*  IF XHEALTH^=''                                                       00270400
*    THEN DO;                                                           00270500
*      ANS('/* HEALTH('!!                                               00270600
*          XHEALTH!!                                                    00270700
*          ')*/')                                                       00270800
*          NORESCAN COL(MACLMAR+5);                                     00270900
*      XHEALTH = '';                                                    00271000
*    END;                                                               00271100
*      END;                                                             00271200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00271300
*  IF PLISTVER=''                                                       00271400
*    THEN DO;                                                           00271500
*      ANS('/* PLISTVER('!!                                             00271600
*          CHAR(XPLISTVER)!!                                            00271700
*          ')*/')                                                       00271800
*          NORESCAN COL(MACLMAR+5);                                     00271900
*    END;                                                               00272000
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00272100
*    THEN                                                               00272200
*      ANS('/* NONE. */')                                               00272300
*         NORESCAN COL(MACLMAR+5);                                      00272400
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00272500
*      END;                                                             00272600
*/********************************************************************/ 00272700
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00272800
*/********************************************************************/ 00272900
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00273000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00273100
*  DCL SYSAM64 CHAR EXTERNAL; DEACT SYSAM64;                            00273200
*  DCL SYSALVL FIXED EXTERNAL; DEACT SYSALVL;                           00273300
*                                                                       00273400
*  IF SYSASCE=''                                                        00273500
*    THEN                                                               00273600
*      DO;                                                              00273700
*        IF SYSSPLV=''                                                  00273800
*          THEN                                                         00273900
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00274000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00274100
*          THEN                                                         00274200
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00274300
*          ELSE                                                         00274400
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00274500
*      END;                                                             00274600
*/********************************************************************/ 00274700
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00274800
*/********************************************************************/ 00274900
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00275000
*  IF XMF^='L'                                                          00275100
*    THEN                                                               00275200
*      DO;                                   /* FULL SYNTAX CHECK */    00275300
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00275400
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00275500
*    THEN                                                               00275600
*      DO;                                                              00275700
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'!! /**PPOSP* MSG*/            00275800
*            ' "'!!MACLIST!!'"'!!                                       00275900
*            ' CANNOT BE USED.'!!                                       00276000
*            ' NO POSITIONAL ARGUMENTS'!!                               00276100
*            ' ARE ALLOWED.';                                           00276200
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00276300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00276400
*        ZMACRET=8;                          /* MACRO ERROR */          00276500
*      END;                                                             00276600
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00276700
*  IF NUMBER(LOCATION)>1                     /* CHECK POSITIONALS */    00276800
*    THEN                                                               00276900
*      DO;                                                              00277000
*        ZMS=' 8, "LOCATION'!!               /**KPOSP* MSG*/            00277100
*            LOCATION!!                                                 00277200
*            '" "LOCATION"'!!                                           00277300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00277400
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00277500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00277600
*        ZMACRET=8;                          /* MACRO ERROR */          00277700
*      END;                                                             00277800
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00277900
*  XLOCATION=LOCATION(1);                    /* SET XVARIABLE */        00278000
*  IF LOCATION(1)=''                         /* CHECK FOR NULL */       00278100
*   THEN                                                                00278200
*    DO;                                     /* KEY IS REQUIRED */      00278300
*        ZXLOCATION='';                      /* RESET IN/OUTPUT */      00278400
*        ZMS=' 8,  '!!                                                  00278500
*            ' "LOCATION" KEY AND ITS'!!                                00278600
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00278700
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00278800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00278900
*        ZMACRET=8;                          /* MACRO ERROR */          00279000
*    END;                                                               00279100
*  ELSE                                                                 00279200
*    ZXLOCATION='INPUT';                     /* SET IN/OUTPUT */        00279300
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00279400
*  IF NUMBER(NETWORK_ID)>1                   /* CHECK POSITIONALS */    00279500
*    THEN                                                               00279600
*      DO;                                                              00279700
*        ZMS=' 8, "NETWORK_ID'!!             /**KPOSP* MSG*/            00279800
*            NETWORK_ID!!                                               00279900
*            '" "NETWORK_ID"'!!                                         00280000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00280100
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00280200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00280300
*        ZMACRET=8;                          /* MACRO ERROR */          00280400
*      END;                                                             00280500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00280600
*  XNETWORK_ID=NETWORK_ID(1);                /* SET XVARIABLE */        00280700
*  IF NETWORK_ID(1)=''                       /* CHECK FOR NULL */       00280800
*   THEN                                                                00280900
*    DO;                                     /* KEY IS REQUIRED */      00281000
*        ZXNETWORK_ID='';                    /* RESET IN/OUTPUT */      00281100
*        ZMS=' 8,  '!!                                                  00281200
*            ' "NETWORK_ID" KEY AND ITS'!!                              00281300
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00281400
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00281500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00281600
*        ZMACRET=8;                          /* MACRO ERROR */          00281700
*    END;                                                               00281800
*  ELSE                                                                 00281900
*    ZXNETWORK_ID='INPUT';                   /* SET IN/OUTPUT */        00282000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00282100
*  IF NUMBER(LUNAME)>1                       /* CHECK POSITIONALS */    00282200
*    THEN                                                               00282300
*      DO;                                                              00282400
*        ZMS=' 8, "LUNAME'!!                 /**KPOSP* MSG*/            00282500
*            LUNAME!!                                                   00282600
*            '" "LUNAME"'!!                                             00282700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00282800
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00282900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00283000
*        ZMACRET=8;                          /* MACRO ERROR */          00283100
*      END;                                                             00283200
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00283300
*  XLUNAME=LUNAME(1);                        /* SET XVARIABLE */        00283400
*  IF LUNAME(1)=''                           /* CHECK FOR NULL */       00283500
*   THEN                                                                00283600
*    DO;                                     /* KEY IS REQUIRED */      00283700
*        ZXLUNAME='';                        /* RESET IN/OUTPUT */      00283800
*        ZMS=' 8,  '!!                                                  00283900
*            ' "LUNAME" KEY AND ITS'!!                                  00284000
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00284100
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00284200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00284300
*        ZMACRET=8;                          /* MACRO ERROR */          00284400
*    END;                                                               00284500
*  ELSE                                                                 00284600
*    ZXLUNAME='INPUT';                       /* SET IN/OUTPUT */        00284700
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00284800
*  IF NUMBER(STOKEN)>1                       /* CHECK POSITIONALS */    00284900
*    THEN                                                               00285000
*      DO;                                                              00285100
*        ZMS=' 8, "STOKEN'!!                 /**KPOSP* MSG*/            00285200
*            STOKEN!!                                                   00285300
*            '" "STOKEN"'!!                                             00285400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00285500
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00285600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00285700
*        ZMACRET=8;                          /* MACRO ERROR */          00285800
*      END;                                                             00285900
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00286000
*  XSTOKEN=STOKEN(1);                        /* SET XVARIABLE */        00286100
*  IF STOKEN(1)=''                           /* CHECK FOR NULL */       00286200
*   THEN                                                                00286300
*    DO;                                     /* KEY IS REQUIRED */      00286400
*        ZXSTOKEN='';                        /* RESET IN/OUTPUT */      00286500
*        ZMS=' 8,  '!!                                                  00286600
*            ' "STOKEN" KEY AND ITS'!!                                  00286700
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00286800
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00286900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00287000
*        ZMACRET=8;                          /* MACRO ERROR */          00287100
*    END;                                                               00287200
*  ELSE                                                                 00287300
*    ZXSTOKEN='INPUT';                       /* SET IN/OUTPUT */        00287400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00287500
*  IF USERDATA='USERDATA' ! USERDATA='()'    /*CHECK ENTRY*/            00287600
*    THEN                                                               00287700
*      DO;                                                              00287800
*        ZMS=' 8, THE "USERDATA" KEY'!!      /**KOPTP* MSG*/            00287900
*            ' MUST CONTAIN ONE'!!                                      00288000
*            ' (OR MORE) ARGUMENT(S).';                                 00288100
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00288200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00288300
*        ZMACRET=8;                          /* MACRO ERROR */          00288400
*      END;                                                             00288500
*  IF NUMBER(USERDATA)>1                     /* CHECK POSITIONALS */    00288600
*    THEN                                                               00288700
*      DO;                                                              00288800
*        ZMS=' 8, "USERDATA'!!               /**KPOSP* MSG*/            00288900
*            USERDATA!!                                                 00289000
*            '" "USERDATA"'!!                                           00289100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00289200
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00289300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00289400
*        ZMACRET=8;                          /* MACRO ERROR */          00289500
*      END;                                                             00289600
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00289700
*  ZXUSERDATA='INPUT';                       /* SET IN/OUTPUT */        00289800
*  XUSERDATA='NO_USERDATA';                  /* SET DEFAULT */          00289900
*  IF USERDATA(1)^=''                        /* CHECK FOR NULL */       00290000
*    THEN                                                               00290100
*      XUSERDATA=USERDATA(1);                /* SET XVARIABLE */        00290200
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00290300
*  IF HOST='HOST' ! HOST='()'                /*CHECK ENTRY*/            00290400
*    THEN                                                               00290500
*      DO;                                                              00290600
*        ZMS=' 8, THE "HOST" KEY'!!          /**KOPTP* MSG*/            00290700
*            ' MUST CONTAIN ONE'!!                                      00290800
*            ' (OR MORE) ARGUMENT(S).';                                 00290900
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00291000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00291100
*        ZMACRET=8;                          /* MACRO ERROR */          00291200
*      END;                                                             00291300
*  IF NUMBER(HOST)>1                         /* CHECK POSITIONALS */    00291400
*    THEN                                                               00291500
*      DO;                                                              00291600
*        ZMS=' 8, "HOST'!!                   /**KPOSP* MSG*/            00291700
*            HOST!!                                                     00291800
*            '" "HOST"'!!                                               00291900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00292000
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00292100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00292200
*        ZMACRET=8;                          /* MACRO ERROR */          00292300
*      END;                                                             00292400
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00292500
*  ZXHOST='INPUT';                           /* SET IN/OUTPUT */        00292600
*  XHOST='NO_HOST';                          /* SET DEFAULT */          00292700
*  IF HOST(1)^=''                            /* CHECK FOR NULL */       00292800
*    THEN                                                               00292900
*      XHOST=HOST(1);                        /* SET XVARIABLE */        00293000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00293100
*  IF HEALTH='HEALTH' ! HEALTH='()'          /*CHECK ENTRY*/            00293200
*    THEN                                                               00293300
*      DO;                                                              00293400
*        ZMS=' 8, THE "HEALTH" KEY'!!        /**KOPTP* MSG*/            00293500
*            ' MUST CONTAIN ONE'!!                                      00293600
*            ' (OR MORE) ARGUMENT(S).';                                 00293700
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00293800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00293900
*        ZMACRET=8;                          /* MACRO ERROR */          00294000
*      END;                                                             00294100
*  IF NUMBER(HEALTH)>1                       /* CHECK POSITIONALS */    00294200
*    THEN                                                               00294300
*      DO;                                                              00294400
*        ZMS=' 8, "HEALTH'!!                 /**KPOSP* MSG*/            00294500
*            HEALTH!!                                                   00294600
*            '" "HEALTH"'!!                                             00294700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00294800
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00294900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00295000
*        ZMACRET=8;                          /* MACRO ERROR */          00295100
*      END;                                                             00295200
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00295300
*  ZXHEALTH='INPUT';                         /* SET IN/OUTPUT */        00295400
*  XHEALTH='NO_HEALTH';                      /* SET DEFAULT */          00295500
*  IF HEALTH(1)^=''                          /* CHECK FOR NULL */       00295600
*    THEN                                                               00295700
*      XHEALTH=HEALTH(1);                    /* SET XVARIABLE */        00295800
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00295900
*  IF RETCODE='RETCODE' ! RETCODE='()'       /*CHECK ENTRY*/            00296000
*    THEN                                                               00296100
*      DO;                                                              00296200
*        ZMS=' 8, THE "RETCODE" KEY'!!       /**KOPTP* MSG*/            00296300
*            ' MUST CONTAIN ONE'!!                                      00296400
*            ' (OR MORE) ARGUMENT(S).';                                 00296500
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00296600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00296700
*        ZMACRET=8;                          /* MACRO ERROR */          00296800
*      END;                                                             00296900
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00297000
*    THEN                                                               00297100
*      DO;                                                              00297200
*        ZMS=' 8, "RETCODE'!!                /**KPOSP* MSG*/            00297300
*            RETCODE!!                                                  00297400
*            '" "RETCODE"'!!                                            00297500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00297600
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00297700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00297800
*        ZMACRET=8;                          /* MACRO ERROR */          00297900
*      END;                                                             00298000
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00298100
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00298200
*    THEN                                                               00298300
*      DO;                                                              00298400
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00298500
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00298600
*      END;                                                             00298700
*  ELSE                                                                 00298800
*    IF ZXRETCODE^=''                                                   00298900
*      THEN                                                             00299000
*        ZXRETCODE='';                       /* RESET OUTPUT */         00299100
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00299200
*  IF RSNCODE='RSNCODE' ! RSNCODE='()'       /*CHECK ENTRY*/            00299300
*    THEN                                                               00299400
*      DO;                                                              00299500
*        ZMS=' 8, THE "RSNCODE" KEY'!!       /**KOPTP* MSG*/            00299600
*            ' MUST CONTAIN ONE'!!                                      00299700
*            ' (OR MORE) ARGUMENT(S).';                                 00299800
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00299900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00300000
*        ZMACRET=8;                          /* MACRO ERROR */          00300100
*      END;                                                             00300200
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00300300
*    THEN                                                               00300400
*      DO;                                                              00300500
*        ZMS=' 8, "RSNCODE'!!                /**KPOSP* MSG*/            00300600
*            RSNCODE!!                                                  00300700
*            '" "RSNCODE"'!!                                            00300800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00300900
*        ANS MSG('?IWMSRSRG ---> '!!ZMS);                               00301000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00301100
*        ZMACRET=8;                          /* MACRO ERROR */          00301200
*      END;                                                             00301300
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00301400
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00301500
*    THEN                                                               00301600
*      DO;                                                              00301700
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00301800
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00301900
*      END;                                                             00302000
*  ELSE                                                                 00302100
*    IF ZXRSNCODE^=''                                                   00302200
*      THEN                                                             00302300
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00302400
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00302500
*      END;                                  /* END COMPLETE CHECKING*/ 00302600
*/********************************************************************/ 00302700
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00302800
*/********************************************************************/ 00302900
*  IF ZMACRET = 0                                                       00303000
*    THEN                                                               00303100
*      DO;                                                              00303200
*/********************************************************************/ 00303300
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00303400
*/********************************************************************/ 00303500
*  ANS(MACCONC!!'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00303600
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00303700
*    THEN                                                               00303800
*      ANS(MACCONC!!'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00303900
*    ELSE                                                               00304000
*      ANS(MACCONC!!'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00304100
*/********************************************************************/ 00304200
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00304300
*  IF XMF^='L'                                                          00304400
*    THEN                                                               00304500
*      ANS('DO; /* IWMSRSRG-PLISTVER */')                               00304600
*          NORESCAN COL(MACLMAR);                                       00304700
*/*MCMPLS01 RFY 15*/                                                    00304800
*  IF XMF^='L' & ZMACRET = 0                                            00304900
*    THEN                                                               00305000
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   00305100
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00305200
       DCL EHAMAPS CHAR EXTERNAL;                                       00305300
       IF INDEX(EHAMAPS,'XM@')=0 THEN                                   00305400
         EHAMAPS=EHAMAPS!!'XM@,';                                       00305500
       IF INDEX(EHAREGS,'00F')=0                                        00305600
         THEN                                                           00305700
           EHAREGS=EHAREGS!!'00F'; /* GPR00F                      */    00305800
       IF INDEX(EHAREGS,'15F')=0                                        00305900
         THEN                                                           00306000
           EHAREGS=EHAREGS!!'15F'; /* GPR15F                      */    00306100
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00306200
*/*PL.LL01 ?IWMSRSRG MF=L PARAMETER LIST-----------------------------*/ 00306300
*  IF XMF='L'                                                           00306400
*    THEN                                                               00306500
*      DO;                                                              00306600
*        ANS('DCL 1 '!!XMFCTRL!!' '!!XMFATTR!!', '!!                    00306700
*            '/* ?IWMSRSRG PARM LIST*/')                                00306800
*            NORESCAN COL(MACLMAR);                                     00306900
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00307000
*        ANS('2 '!!XMFCTRL!!                                            00307100
*            '_XVERSION FIXED(8), '!!                                   00307200
*            '/* INPUT XVERSION*/')                                     00307300
*            NORESCAN COL(MACLMAR+2);                                   00307400
*/*PL.LL13  XLUNAME CHAR(8) INPUT------------------------------------*/ 00307500
*        ANS('2 '!!XMFCTRL                                              00307600
*         !! '_XLUNAME CHAR(8), '                                       00307700
*         !! '/* '!!ZXLUNAME                                            00307800
*         !! ' XLUNAME */'                                              00307900
*            ) NORESCAN COL(MACLMAR+2);                                 00308000
*/*PL.LL13  XNETWORK_ID CHAR(8) INPUT--------------------------------*/ 00308100
*        ANS('2 '!!XMFCTRL                                              00308200
*         !! '_XNETWORK_ID CHAR(8), '                                   00308300
*         !! '/* '!!ZXNETWORK_ID                                        00308400
*         !! ' XNETWORK_ID */'                                          00308500
*            ) NORESCAN COL(MACLMAR+2);                                 00308600
*/*PL.LL13  XLOCATION CHAR(18) INPUT---------------------------------*/ 00308700
*        ANS('2 '!!XMFCTRL                                              00308800
*         !! '_XLOCATION CHAR(18), '                                    00308900
*         !! '/* '!!ZXLOCATION                                          00309000
*         !! ' XLOCATION */'                                            00309100
*            ) NORESCAN COL(MACLMAR+2);                                 00309200
*/*PL.LL13  XSTOKEN BIT(64) INPUT------------------------------------*/ 00309300
*        ANS('2 '!!XMFCTRL                                              00309400
*         !! '_XSTOKEN BIT(64), '                                       00309500
*         !! '/* '!!ZXSTOKEN                                            00309600
*         !! ' XSTOKEN */'                                              00309700
*            ) NORESCAN COL(MACLMAR+2);                                 00309800
*/*PL.LL13  XRSV001A CHAR(4) RESERVED--------------------------------*/ 00309900
*        ANS('2 '!!XMFCTRL                                              00310000
*         !! '_XRSV001A CHAR(4), '                                      00310100
*         !! '/* RESERVED */'                                           00310200
*            ) NORESCAN COL(MACLMAR+2);                                 00310300
*/*PL.LPVER01 -------------------------------------------------------*/ 00310400
*  IF XPLISTVER>=1                                                      00310500
*    THEN                                                               00310600
*      DO;                                                              00310700
*/*PL.LL13  XRSV002F CHAR(1) RESERVED--------------------------------*/ 00310800
*        ANS('2 '!!XMFCTRL                                              00310900
*         !! '_XRSV002F CHAR(1), '                                      00311000
*         !! '/* RESERVED */'                                           00311100
*            ) NORESCAN COL(MACLMAR+2);                                 00311200
*/*PL.LPVER02 -------------------------------------------------------*/ 00311300
*      END;                                                             00311400
*/*PL.LPVER01 -------------------------------------------------------*/ 00311500
*  IF XPLISTVER>=1                                                      00311600
*    THEN                                                               00311700
*      DO;                                                              00311800
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00311900
*        ANS('2 '!!XMFCTRL!!                                            00312000
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                       00312100
*            '/* INPUT XPLISTLEN*/')                                    00312200
*            NORESCAN COL(MACLMAR+2);                                   00312300
*/*PL.LPVER02 -------------------------------------------------------*/ 00312400
*      END;                                                             00312500
*/*PL.LPVER01 -------------------------------------------------------*/ 00312600
*  IF XPLISTVER>=1                                                      00312700
*    THEN                                                               00312800
*      DO;                                                              00312900
*/*PL.LL13  XRSV0032 CHAR(2) RESERVED--------------------------------*/ 00313000
*        ANS('2 '!!XMFCTRL                                              00313100
*         !! '_XRSV0032 CHAR(2), '                                      00313200
*         !! '/* RESERVED */'                                           00313300
*            ) NORESCAN COL(MACLMAR+2);                                 00313400
*/*PL.LPVER02 -------------------------------------------------------*/ 00313500
*      END;                                                             00313600
*/*PL.LPVER01 -------------------------------------------------------*/ 00313700
*  IF XPLISTVER>=1                                                      00313800
*    THEN                                                               00313900
*      DO;                                                              00314000
*/*PL.LL13 ADDR XUSERDATA PTR(31) INPUT ADDR-------------------------*/ 00314100
*        ANS('2 '!!XMFCTRL                                              00314200
*         !! '_XUSERDATA_ADDR PTR(31), '                                00314300
*         !! '/* '!!ZXUSERDATA_ADDR                                     00314400
*         !! ' XUSERDATA_ADDR */'                                       00314500
*            ) NORESCAN COL(MACLMAR+2);                                 00314600
*/*PL.LPVER02 -------------------------------------------------------*/ 00314700
*      END;                                                             00314800
*/*PL.LPVER01 -------------------------------------------------------*/ 00314900
*  IF XPLISTVER>=2                                                      00315000
*    THEN                                                               00315100
*      DO;                                                              00315200
*/*PL.LL13 ADDR XHOST PTR(31) INPUT ADDR-----------------------------*/ 00315300
*        ANS('2 '!!XMFCTRL                                              00315400
*         !! '_XHOST_ADDR PTR(31), '                                    00315500
*         !! '/* '!!ZXHOST_ADDR                                         00315600
*         !! ' XHOST_ADDR */'                                           00315700
*            ) NORESCAN COL(MACLMAR+2);                                 00315800
*/*PL.LPVER02 -------------------------------------------------------*/ 00315900
*      END;                                                             00316000
*/*PL.LPVER01 -------------------------------------------------------*/ 00316100
*  IF XPLISTVER>=3                                                      00316200
*    THEN                                                               00316300
*      DO;                                                              00316400
*/*PL.LL13 ADDR XHEALTH PTR(31) INPUT ADDR---------------------------*/ 00316500
*        ANS('2 '!!XMFCTRL                                              00316600
*         !! '_XHEALTH_ADDR PTR(31), '                                  00316700
*         !! '/* '!!ZXHEALTH_ADDR                                       00316800
*         !! ' XHEALTH_ADDR */'                                         00316900
*            ) NORESCAN COL(MACLMAR+2);                                 00317000
*/*PL.LPVER02 -------------------------------------------------------*/ 00317100
*      END;                                                             00317200
*/*PL.LL18 ----------------------------------------------------------*/ 00317300
*        ANS('2 * CHAR(0);')                                            00317400
*            NORESCAN COL(MACLMAR+2);                                   00317500
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00317600
*      END;                                                             00317700
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00317800
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00317900
*  DEACT ZPRMLINE;                                                      00318000
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00318100
*  DEACT ZNDX;                                                          00318200
*  ZNDX=MACINDEX;              /* MACINDEX                          */  00318300
*  DCL XVERSION CHAR;                                                   00318400
*  DEACT XVERSION;                                                      00318500
*/*PL.L02 ?IWMSRSRG PARAMETER LIST-----------------------------------*/ 00318600
*  IF XMF^='L'                                                          00318700
*    THEN                                                               00318800
*      DO;                                                              00318900
*/*PL.L03 ?IWMSRSRG PARAMETER LIST-----------------------------------*/ 00319000
*        IF XMF='S'                                                     00319100
*          THEN                                                         00319200
*            XMFCTRL='#ZPLIST';                                         00319300
*/*PL.L04 ?IWMSRSRG PARAMETER LIST-----------------------------------*/ 00319400
*        ZPRMLINE='DCL 1 #Z'!!ZNDX!!' DEF('!!                           00319500
*                 XMFCTRL!!'),'!!                                       00319600
*                 ' /* ?IWMSRSRG PARM LIST*/';                          00319700
*/*PL.L05 ADDR XVERSION FIXED(8) INPUT-------------------------------*/ 00319800
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00319900
*                 '_XVERSION FIXED(8), '!!                              00320000
*                 '/* INPUT XVERSION*/';                                00320100
*/*PL.L08  XLUNAME CHAR(8) INPUT-------------------------------------*/ 00320200
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00320300
*                 '_XLUNAME CHAR(8), '!!                                00320400
*                 '/* '!!ZXLUNAME!!                                     00320500
*                 ' XLUNAME */';                                        00320600
*/*PL.L08  XNETWORK_ID CHAR(8) INPUT---------------------------------*/ 00320700
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00320800
*                 '_XNETWORK_ID CHAR(8), '!!                            00320900
*                 '/* '!!ZXNETWORK_ID!!                                 00321000
*                 ' XNETWORK_ID */';                                    00321100
*/*PL.L08  XLOCATION CHAR(18) INPUT----------------------------------*/ 00321200
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00321300
*                 '_XLOCATION CHAR(18), '!!                             00321400
*                 '/* '!!ZXLOCATION!!                                   00321500
*                 ' XLOCATION */';                                      00321600
*/*PL.L08  XSTOKEN BIT(64) INPUT-------------------------------------*/ 00321700
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00321800
*                 '_XSTOKEN BIT(64), '!!                                00321900
*                 '/* '!!ZXSTOKEN!!                                     00322000
*                 ' XSTOKEN */';                                        00322100
*/*PL.L08  XRSV001A CHAR(4) RESERVED---------------------------------*/ 00322200
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00322300
*                 '_XRSV001A CHAR(4), '!!                               00322400
*                 '/* RESERVED */';                                     00322500
*/*PL.LPVER03 -------------------------------------------------------*/ 00322600
*  IF XPLISTVER>=1                                                      00322700
*    THEN                                                               00322800
*      DO;                                                              00322900
*/*PL.L08  XRSV002F CHAR(1) RESERVED---------------------------------*/ 00323000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00323100
*                 '_XRSV002F CHAR(1), '!!                               00323200
*                 '/* RESERVED */';                                     00323300
*/*PL.LPVER04 -------------------------------------------------------*/ 00323400
*      END;                                                             00323500
*/*PL.LPVER03 -------------------------------------------------------*/ 00323600
*  IF XPLISTVER>=1                                                      00323700
*    THEN                                                               00323800
*      DO;                                                              00323900
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00324000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00324100
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                  00324200
*                 '/* INPUT XPLISTLEN*/';                               00324300
*/*PL.LPVER04 -------------------------------------------------------*/ 00324400
*      END;                                                             00324500
*/*PL.LPVER03 -------------------------------------------------------*/ 00324600
*  IF XPLISTVER>=1                                                      00324700
*    THEN                                                               00324800
*      DO;                                                              00324900
*/*PL.L08  XRSV0032 CHAR(2) RESERVED---------------------------------*/ 00325000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00325100
*                 '_XRSV0032 CHAR(2), '!!                               00325200
*                 '/* RESERVED */';                                     00325300
*/*PL.LPVER04 -------------------------------------------------------*/ 00325400
*      END;                                                             00325500
*/*PL.LPVER03 -------------------------------------------------------*/ 00325600
*  IF XPLISTVER>=1                                                      00325700
*    THEN                                                               00325800
*      DO;                                                              00325900
*/*PL.L08 ADDR XUSERDATA PTR(31) INPUT ADDR--------------------------*/ 00326000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00326100
*                 '_XUSERDATA_ADDR PTR(31), '!!                         00326200
*                 '/* '!!ZXUSERDATA_ADDR!!                              00326300
*                 ' XUSERDATA_ADDR */';                                 00326400
*/*PL.LPVER04 -------------------------------------------------------*/ 00326500
*      END;                                                             00326600
*/*PL.LPVER03 -------------------------------------------------------*/ 00326700
*  IF XPLISTVER>=2                                                      00326800
*    THEN                                                               00326900
*      DO;                                                              00327000
*/*PL.L08 ADDR XHOST PTR(31) INPUT ADDR------------------------------*/ 00327100
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00327200
*                 '_XHOST_ADDR PTR(31), '!!                             00327300
*                 '/* '!!ZXHOST_ADDR!!                                  00327400
*                 ' XHOST_ADDR */';                                     00327500
*/*PL.LPVER04 -------------------------------------------------------*/ 00327600
*      END;                                                             00327700
*/*PL.LPVER03 -------------------------------------------------------*/ 00327800
*  IF XPLISTVER>=3                                                      00327900
*    THEN                                                               00328000
*      DO;                                                              00328100
*/*PL.L08 ADDR XHEALTH PTR(31) INPUT ADDR----------------------------*/ 00328200
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00328300
*                 '_XHEALTH_ADDR PTR(31), '!!                           00328400
*                 '/* '!!ZXHEALTH_ADDR!!                                00328500
*                 ' XHEALTH_ADDR */';                                   00328600
*/*PL.LPVER04 -------------------------------------------------------*/ 00328700
*      END;                                                             00328800
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00328900
*        ZPRMNUM=ZPRMNUM+1;                                             00329000
*        ZPRM(ZPRMNUM)=ZPRMLINE!!' 2 * CHAR(0);';                       00329100
*        IF XPLISTVER^=0                                                00329200
*           & XMF^='S'                                                  00329300
*          THEN                                                         00329400
*            DO;                                                        00329500
*              ZPRMNUM=ZPRMNUM+1;                                       00329600
*              ZPRM(ZPRMNUM)=                                           00329700
*               'DCL #Z'!!ZNDX!!'_LENCHECK FIXED(32) CONSTANT('!!       00329800
*               'LENGTH('!!XMFCTRL!!')-LENGTH(#Z'!!ZNDX!!'));'!!        00329900
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'!!            00330000
*               ' IS LONG ENOUGH */';                                   00330100
*            END;                                                       00330200
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00330300
*        ZPLLEN=47;                                                     00330400
*        IF XPLISTVER>=1                                                00330500
*          THEN                                                         00330600
*            ZPLLEN=56;                                                 00330700
*        IF XPLISTVER>=2                                                00330800
*          THEN                                                         00330900
*            ZPLLEN=60;                                                 00331000
*        IF XPLISTVER>=3                                                00331100
*          THEN                                                         00331200
*            ZPLLEN=64;                                                 00331300
*        IF ZPRMMAX<ZPLLEN                                              00331400
*           & XMF^='E'                                                  00331500
*          THEN                                                         00331600
*            ZPRMMAX=ZPLLEN;                                            00331700
*/*PL.L13 -----------------------------------------------------------*/ 00331800
*      END;                                                             00331900
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00332000
*  IF XMF^='L'                                                          00332100
*    THEN                                                               00332200
*      DO;                                                              00332300
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               00332400
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00332500
*            ANS('#Z'!!ZNDX!!'=''''B;'!!                                00332600
*                '/* CLEAR PARAMETER AREA */')                          00332700
*                NORESCAN COL(MACLMAR);                                 00332800
*/*PI.L05A XVERSION FIXED(8)-----------------------------------------*/ 00332900
*        IF XPLISTVER^=0                                                00333000
*          THEN                                                         00333100
*            ANS('#Z'!!ZNDX!!'_XVERSION='!!CHAR(XPLISTVER)!!'; '!!      00333200
*                '/* XVERSION FIXED(8) */')                             00333300
*                NORESCAN COL(MACLMAR);                                 00333400
*/*PI.L21 XLUNAME NAME CHAR(8)---------------------------------------*/ 00333500
*        IF ZXLUNAME='INPUT' !                                          00333600
*           ZXLUNAME='INOUT'                                            00333700
*          THEN                                                         00333800
*            ANS('#Z'!!ZNDX!!'_XLUNAME='!!                              00333900
*                XLUNAME!!';'!!                                         00334000
*                '/* XLUNAME CHAR(8) */')                               00334100
*                NORESCAN COL(MACLMAR);                                 00334200
*/*PI.L21 XNETWORK_ID NAME CHAR(8)-----------------------------------*/ 00334300
*        IF ZXNETWORK_ID='INPUT' !                                      00334400
*           ZXNETWORK_ID='INOUT'                                        00334500
*          THEN                                                         00334600
*            ANS('#Z'!!ZNDX!!'_XNETWORK_ID='!!                          00334700
*                XNETWORK_ID!!';'!!                                     00334800
*                '/* XNETWORK_ID CHAR(8) */')                           00334900
*                NORESCAN COL(MACLMAR);                                 00335000
*/*PI.L21 XLOCATION NAME CHAR(18)------------------------------------*/ 00335100
*        IF ZXLOCATION='INPUT' !                                        00335200
*           ZXLOCATION='INOUT'                                          00335300
*          THEN                                                         00335400
*            ANS('#Z'!!ZNDX!!'_XLOCATION='!!                            00335500
*                XLOCATION!!';'!!                                       00335600
*                '/* XLOCATION CHAR(18) */')                            00335700
*                NORESCAN COL(MACLMAR);                                 00335800
*/*PI.L19 XSTOKEN NAME BIT(64)---------------------------------------*/ 00335900
*        IF ZXSTOKEN='INPUT' !                                          00336000
*           ZXSTOKEN='INOUT'                                            00336100
*          THEN                                                         00336200
*            IF (XSTOKEN(1:1)^='0' &                                    00336300
*               XSTOKEN(1:1)^='1')                                      00336400
*              THEN                                                     00336500
*                ANS('#Z'!!ZNDX!!'_XSTOKEN='!!                          00336600
*                    XSTOKEN!!';'!!                                     00336700
*                    '/* XSTOKEN BIT(64) */')                           00336800
*                    NORESCAN COL(MACLMAR);                             00336900
*              ELSE                                                     00337000
*                ANS('#Z'!!ZNDX!!'_XSTOKEN='!!                          00337100
*                    ''''!!XSTOKEN!!'''B;'!!                            00337200
*                    '/* XSTOKEN BIT(64) */')                           00337300
*                    NORESCAN COL(MACLMAR);                             00337400
*/*PI.LPVER01 -------------------------------------------------------*/ 00337500
*  IF XPLISTVER>=1                                                      00337600
*    THEN                                                               00337700
*      DO;                                                              00337800
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00337900
*        ANS('#Z'!!ZNDX!!'_XPLISTLEN=LENGTH(#Z'!!ZNDX!!');'!!           00338000
*            '/* XPLISTLEN FIXED(16) */')                               00338100
*            NORESCAN COL(MACLMAR);                                     00338200
*/*PI.LPVER02 -------------------------------------------------------*/ 00338300
*      END;                                                             00338400
*/*PI.LPVER01 -------------------------------------------------------*/ 00338500
*  IF XPLISTVER>=1                                                      00338600
*    THEN                                                               00338700
*      DO;                                                              00338800
*/*PI.L14 CHECK FOR * AS THE CHAR(64) ARGUMENT-----------------------*/ 00338900
*        IF TRANSLATE(XUSERDATA)                                        00339000
*                    = 'NO_USERDATA'                                    00339100
*          THEN                                                         00339200
*            ZXUSERDATA='';                  /* RESET INPUT/INOUT */    00339300
*/*PI.L15 ADDR(XUSERDATA) CHAR(64)-----------------------------------*/ 00339400
*        IF ZXUSERDATA^=''                                              00339500
*          THEN                                                         00339600
*            ANS('#Z'!!ZNDX!!'_XUSERDATA_ADDR='!!                       00339700
*                'ADDR('!!XUSERDATA!!');'!!                             00339800
*                '/* ADDR XUSERDATA CHAR(64) */')                       00339900
*                NORESCAN COL(MACLMAR);                                 00340000
*/*PI.LPVER02 -------------------------------------------------------*/ 00340100
*      END;                                                             00340200
*/*PI.LPVER01 -------------------------------------------------------*/ 00340300
*  IF XPLISTVER>=2                                                      00340400
*    THEN                                                               00340500
*      DO;                                                              00340600
*/*PI.L14 CHECK FOR * AS THE CHAR(64) ARGUMENT-----------------------*/ 00340700
*        IF TRANSLATE(XHOST)                                            00340800
*                    = 'NO_HOST'                                        00340900
*          THEN                                                         00341000
*            ZXHOST='';                      /* RESET INPUT/INOUT */    00341100
*/*PI.L15 ADDR(XHOST) CHAR(64)---------------------------------------*/ 00341200
*        IF ZXHOST^=''                                                  00341300
*          THEN                                                         00341400
*            ANS('#Z'!!ZNDX!!'_XHOST_ADDR='!!                           00341500
*                'ADDR('!!XHOST!!');'!!                                 00341600
*                '/* ADDR XHOST CHAR(64) */')                           00341700
*                NORESCAN COL(MACLMAR);                                 00341800
*/*PI.LPVER02 -------------------------------------------------------*/ 00341900
*      END;                                                             00342000
*/*PI.LPVER01 -------------------------------------------------------*/ 00342100
*  IF XPLISTVER>=3                                                      00342200
*    THEN                                                               00342300
*      DO;                                                              00342400
*/*PI.L14 CHECK FOR * AS THE FIXED(31) ARGUMENT----------------------*/ 00342500
*        IF TRANSLATE(XHEALTH)                                          00342600
*                    = 'NO_HEALTH'                                      00342700
*          THEN                                                         00342800
*            ZXHEALTH='';                    /* RESET INPUT/INOUT */    00342900
*/*PI.L15 ADDR(XHEALTH) FIXED(31)------------------------------------*/ 00343000
*        IF ZXHEALTH^=''                                                00343100
*          THEN                                                         00343200
*            ANS('#Z'!!ZNDX!!'_XHEALTH_ADDR='!!                         00343300
*                'ADDR('!!XHEALTH!!');'!!                               00343400
*                '/* ADDR XHEALTH FIXED(31) */')                        00343500
*                NORESCAN COL(MACLMAR);                                 00343600
*/*PI.LPVER02 -------------------------------------------------------*/ 00343700
*      END;                                                             00343800
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00343900
*              IF NUMBER(RSNCODE)>0                                     00344000
*                THEN                                                   00344100
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00344200
*              IF NUMBER(RETCODE)>0                                     00344300
*                THEN                                                   00344400
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00344500
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00344600
*              ANS('GPR01P=ADDR(#Z'!!ZNDX!!');'!!                       00344700
*                  '/* PARAMETER LIST */')                              00344800
*                  NORESCAN COL(MACLMAR);                               00344900
*              IF SYSASCE^='P'                                          00345000
*                THEN                                                   00345100
*                  ANS('SAR(GPR01P,ALET(#Z'!!ZNDX!!'));'!!              00345200
*                      '/* PARAMETER LIST AR */')                       00345300
*                      NORESCAN COL(MACLMAR);                           00345400
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00345500
         ANS('PC(XM@(96)!28);') SKIP COL(5);                            00345600
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00345700
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00345800
*/*PO.L08 XRETCODE RETURN CODE---------------------------------------*/ 00345900
*              IF NUMBER(RETCODE)>0                                     00346000
*                THEN                                                   00346100
*                    ANS(XRETCODE!!                                     00346200
*                     '=GPR15F; /* SET RETURN CODE */')                 00346300
*                      NORESCAN COL(MACLMAR);                           00346400
*/*PO.L09 XRSNCODE REASON CODE---------------------------------------*/ 00346500
*              IF NUMBER(RSNCODE)>0                                     00346600
*                THEN                                                   00346700
*                    ANS(XRSNCODE!!                                     00346800
*                     '=GPR00F; /* SET REASON CODE */')                 00346900
*                      NORESCAN COL(MACLMAR);                           00347000
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00347100
*              IF NUMBER(RSNCODE)>0                                     00347200
*                THEN                                                   00347300
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00347400
*              IF NUMBER(RETCODE)>0                                     00347500
*                THEN                                                   00347600
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00347700
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00347800
*      END;                                                             00347900
*/*PO.L13 IWMSRSRG USAGE INDICATOR-----------------------------------*/ 00348000
*  ZIWMSRSRG='YES';                          /* SET IWMSRSRG USED */    00348100
*/*PO.L15 END OF EXECUTABLE IWMSRSRG-PLISTVER MACRO------------------*/ 00348200
*  IF XMF^='L'                                                          00348300
*    THEN                                                               00348400
*      ANS('END; /* IWMSRSRG-PLISTVER */')                              00348500
*          NORESCAN COL(MACLMAR);                                       00348600
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00348700
*  ANS(MACCONC!!'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00348800
*/*PO.L17 END OF IWMSRSRG MACRO--------------------------------------*/ 00348900
*  ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                        00349000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00349100
*/*******************************************************************/  00349200
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00349300
*/*******************************************************************/  00349400
*      END;                                                             00349500
*/*******************************************************************/  00349600
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00349700
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00349800
*/*******************************************************************/  00349900
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00350000
*    THEN                                                               00350100
*      DO;                                                              00350200
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00350300
*                                      DOUBLEWORD MULTIPLES        */   00350400
*/*******************************************************************/  00350500
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00350600
*/*******************************************************************/  00350700
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00350800
*          THEN                                                         00350900
*            DO;                                                        00351000
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00351100
*                THEN                                                   00351200
*                  DO;                                                  00351300
*                    ANS('?EPILOG                                       00351400
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00351500
*                    EHALIST=EHALIST!!',AMG,';                          00351600
*                  END;                                                 00351700
*            END;                                                       00351800
*/*******************************************************************/  00351900
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00352000
*/*******************************************************************/  00352100
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00352200
*          THEN                                                         00352300
*            DO;                                                        00352400
*              IF ZPRMMAX>EHAMAXLEN                                     00352500
*                THEN                                                   00352600
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00352700
*            END;                                                       00352800
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00352900
*          ANS('?EPILOG STRING('''!!ZPRM(ZI)!!''');')                   00353000
*              COL(MACLMAR);                                            00353100
*        END;                                                           00353200
*      END;                                                             00353300
*/*-----------------------------------------------------------------*/  00353400
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00353500
*/*        BY ?EPILOG                                               */  00353600
*/*-----------------------------------------------------------------*/  00353700
*        IF INDEX(EHAREGS,'01P')=0                                      00353800
*          THEN                                                         00353900
*            EHAREGS=EHAREGS!!'01P'; /* GPR01P                      */  00354000
*        IF INDEX(EHAREGS,'00F')=0                                      00354100
*          & NUMBER(RSNCODE)>0                                          00354200
*          THEN                                                         00354300
*            EHAREGS=EHAREGS!!'00F'; /* GPR00F                      */  00354400
*        IF INDEX(EHAREGS,'15F')=0                                      00354500
*          THEN                                                         00354600
*            EHAREGS=EHAREGS!!'15F'; /* GPR15F                      */  00354700
*  RETURN CODE(ZMACRET);                                                00354800
*%END IWMSRSRG;                                                         00354900
