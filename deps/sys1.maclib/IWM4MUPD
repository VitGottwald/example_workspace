*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4MUPD                              -01/31/13-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Updates Data of a Work Unit                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2013                               * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to update data about a work     * 00002100
*      unit which has been started by IWM4MSTR. A work unit started   * 00002200
*      by IWM4MINI is not affected by this service.                   * 00002300
*                                                                     * 00002400
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00002500
*                                                                     * 00002600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002700
*                                                                     * 00002800
*01* ENVIRONMENT:                                                     * 00002900
*                                                                     * 00003000
*                                                                     * 00003100
*      Dispatchable unit mode: Task or SRB mode.                      * 00003200
*                                                                     * 00003300
*      Minimum authorization: Supervisor state or program key mask    * 00003400
*                        (PKM) allowing keys 0-7.                     * 00003500
*                                                                     * 00003600
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00003700
*                        mode, code SYSSTATE AMODE64=YES before       * 00003800
*                        invoking this macro.                         * 00003900
*                                                                     * 00004000
*      ASC mode:         Primary.                                     * 00004100
*                                                                     * 00004200
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004300
*                                                                     * 00004400
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004500
*                                                                     * 00004600
*      Locks:            No locks held.  No restriction.              * 00004700
*                                                                     * 00004800
*      Control parameters: Control parameters must be in the primary  * 00004900
*                        address space.                               * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*01* PROGRAMMING REQUIREMENTS:                                        * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*    1.  The macro CVT must be included to use this macro.            * 00005700
*                                                                     * 00005800
*    2.  The macro IWMYCON must be included to use this macro.        * 00005900
*                                                                     * 00006000
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006100
*        it is included by IWMYCON.                                   * 00006200
*                                                                     * 00006300
*    4.  Note that the high order halfword of bits 0-31 of register   * 00006400
*        0, and the reason code variable when specified, may be       * 00006500
*        non-zero and represents diagnostic data which is NOT part of * 00006600
*        the external interface.  The high order halfword should thus * 00006700
*        be excluded from comparison with the reason code values      * 00006800
*        described above.  The constant, IWMRSNCODE_MASK_CONST        * 00006900
*        defined in IWMYCON, may be used for this purpose.            * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*01* RESTRICTIONS:                                                    * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*    1.  This macro may not be used prior to the completion of WLM    * 00007700
*        address space initialization                                 * 00007800
*                                                                     * 00007900
*    2.  Caller must have issued the IWM4MSTR macro successfully      * 00008000
*                                                                     * 00008100
*    3.  Caller is responsible for error recovery                     * 00008200
*                                                                     * 00008300
*    4.  The current PSW key must be 0 or match the key specified on  * 00008400
*        IWM4MCRE provided the latter is a system key (0-7)           * 00008500
*                                                                     * 00008600
*    5.  The caller must serialize to prevent any delay monitoring    * 00008700
*        services from being invoked concurrently for the environment * 00008800
*        represented by the monitoring token                          * 00008900
*                                                                     * 00009000
*    6.  This macro may only be used on z/OS V2R1 or higher.          * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*01* INPUT REGISTER INFORMATION:                                      * 00009500
*                                                                     * 00009600
*    Before issuing the IWM4MUPD macro, the caller does not have to   * 00009700
*    place any information into any register unless using it in       * 00009800
*    register notation for a particular parameter, or using it as a   * 00009900
*    base register.                                                   * 00010000
*                                                                     * 00010100
*    The following general purpose registers (GPRs) have to contain   * 00010200
*    the specified information:                                       * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*    REGISTER  CONTENTS                                               * 00010600
*                                                                     * 00010700
*    13        The address of a 216-byte standard save area in the    * 00010800
*              primary address space.                                 * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*01* OUTPUT REGISTER INFORMATION:                                     * 00011300
*                                                                     * 00011400
*    When control returns to the caller, the GPRs contain:            * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*    REGISTER  CONTENTS                                               * 00011800
*                                                                     * 00011900
*    0         Reason code if the return code in GPR 15 is not 0,     * 00012000
*              otherwise, used as a work register by the system. The  * 00012100
*              reason code is stored in bits 0-31                     * 00012200
*                                                                     * 00012300
*    1         Used as work register by the system                    * 00012400
*                                                                     * 00012500
*    2-13      Unchanged                                              * 00012600
*                                                                     * 00012700
*    14        Used as work register by the system                    * 00012800
*                                                                     * 00012900
*    15        Return code stored in bits 0-31                        * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*    When control returns to the caller, the ARs contain:             * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*    REGISTER  CONTENTS                                               * 00013700
*                                                                     * 00013800
*    0-1       Used as work registers by the system                   * 00013900
*                                                                     * 00014000
*    2-13      Unchanged                                              * 00014100
*                                                                     * 00014200
*    14-15     Used as work registers by the system.                  * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*    Some callers depend on register contents remaining the same      * 00014700
*    before and after issuing a service.  If the system changes the   * 00014800
*    contents of registers on which the caller depends, the caller    * 00014900
*    must save them before issuing the service, and restore them      * 00015000
*    after the system returns control.                                * 00015100
*                                                                     * 00015200
*01* PERFORMANCE IMPLICATIONS:                                        * 00015300
*                                                                     * 00015400
*    None                                                             * 00015500
*                                                                     * 00015600
*01* SYNTAX:                                                          * 00015700
*                                                                     * 00015800
*Ýxlabel¨  IWM4MUPD  Ð  MONTKN=xmontkn                                * 00015900
*                    ¿ ,MONTKN64=xmontkn64                            * 00016000
*                     Ý,EWLM=»NOº¨                                    * 00016100
*                     Ý,END_FLOW=»NO!YESº¨                            * 00016200
*                     Ý,MESSAGES_SENT                                 * 00016300
*                                     =»xmessages_sent!NO_MESSAGES_SE * 00016400
*                                     NTº¨                            * 00016500
*                     Ý,EWLM_RCVD_CORR                                * 00016600
*                                      =»xewlm_rcvd_corr!NO_EWLM_RCVD * 00016700
*                                      _CORRº                         * 00016800
*                         Ý,AFTER_STRT=»NO!YESº¨¨                     * 00016900
*                     Ý,RETCODE=xretcode¨                             * 00017000
*                     Ý,RSNCODE=xrsncode¨                             * 00017100
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00017200
*                    ÐÝ,MF=S¨                                         * 00017300
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00017400
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*      Where:                                                         * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*      Ýxlabel¨                                                       * 00018100
*          is an optional symbol, starting in column 1, that is the   * 00018200
*          name on the IWM4MUPD macro invocation.  The name must      * 00018300
*          conform to the rules for an ordinary assembler language    * 00018400
*          symbol.                                                    * 00018500
*          DEFAULT: No name.                                          * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*      The following is a set of mutually exclusive keys.  This set   * 00019100
*      is required; only one key must be specified.                   * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*      MONTKN=xmontkn                                                 * 00019500
*          belongs to a set of mutually exclusive keys. It is the     * 00019600
*          name (RS-type), or address in register (2)-(12), of a 32   * 00019700
*          bit input which contains the delay monitoring token.       * 00019800
*                                                                     * 00019900
*      MONTKN64=xmontkn64                                             * 00020000
*          belongs to a set of mutually exclusive keys. It is the     * 00020100
*          name (RS-type), or address in register (2)-(12), of a 64   * 00020200
*          bit input which contains the long delay monitoring token.  * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*      End of a set of mutually exclusive required keys.              * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*      ÝEWLM=»NOº¨                                                    * 00021100
*          is an optional keyword input which indicates if this work  * 00021200
*          manager intents to participate in cross platform           * 00021300
*          Enterprise Workload Management (eWLM).                     * 00021400
*          DEFAULT: NO                                                * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*          EWLM=NO                                                    * 00021800
*              The work manager interacts only with WLM and no        * 00021900
*              interaction with eWLM takes place.                     * 00022000
*              DEFAULT: NO                                            * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*      ÝEND_FLOW=»NO!YESº¨                                            * 00022800
*          is an optional keyword input which indicates the           * 00022900
*          completion of a message flow.                              * 00023000
*          DEFAULT: NO                                                * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*          END_FLOW=NO                                                * 00023400
*                                                                     * 00023500
*              indicates that a message flow has not completed.       * 00023600
*                                                                     * 00023700
*          END_FLOW=YES                                               * 00023800
*                                                                     * 00023900
*              indicates that a message flow has completed.  Specify  * 00024000
*              END_FLOW=YES, if you know that the running work unit   * 00024100
*              is the last one in a work unit flow. This indication   * 00024200
*              can not be cleared, if it has been set.                * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*      ÝMESSAGES_SENT=»xmessages_sent!NO_MESSAGES_SENTº¨              * 00025000
*          is the name (RS-type), or address in register (2)-(12), of * 00025100
*          an optional fullword input which contains the number of    * 00025200
*          messages sent to other applications. This  value is added  * 00025300
*          to the total messages_sent value of the work unit. The     * 00025400
*          total messages_sent value should not exceed 32767.         * 00025500
*          DEFAULT: NO_MESSAGES_SENT indicates that parameter         * 00025600
*          MESSAGES_SEND has not been specified.                      * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*      ÝEWLM_RCVD_CORR=»xewlm_rcvd_corr!NO_EWLM_RCVD_CORRº            * 00026200
*          is the name (RS-type), or address in register (2)-(12), of * 00026300
*          an optional character input which contains a cross         * 00026400
*          platform Enterprise Workload Management (EWLM) correlator  * 00026500
*          received from another application.  Workflows often have   * 00026600
*          multiple parent work units that must complete before a new * 00026700
*          work unit can be initiated. You can pass only 1 parent     * 00026800
*          correlator to the IWM4MSTR macro and one additional parent * 00026900
*          correlator to the IWM4MSTO macro. You have to issue this   * 00027000
*          macro, if more than two parent correlators should be       * 00027100
*          assigned to a work unit.                                   * 00027200
*          This correlator is ignored, if it is an unknown EWLM       * 00027300
*          correlator.                                                * 00027400
*          DEFAULT: NO_EWLM_RCVD_CORR indicates that parameter        * 00027500
*          EWLM_RCVD_CORR has not been specified.                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*          ÝAFTER_STRT=»NO!YESº¨¨                                     * 00027900
*              is an optional keyword input which indicates the       * 00028000
*              moment the correlator has been received.               * 00028100
*              DEFAULT: NO                                            * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*              AFTER_STRT=NO                                          * 00028500
*                                                                     * 00028600
*                  indicates that the correlator has been received    * 00028700
*                  before this work unit has been started by          * 00028800
*                  IWM4MSTR.                                          * 00028900
*                                                                     * 00029000
*              AFTER_STRT=YES                                         * 00029100
*                                                                     * 00029200
*                  indicates that the correlator has arrived within   * 00029300
*                  the scope of this work unit that means after       * 00029400
*                  issuing IWM4MSTR.                                  * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*      ÝRETCODE=xretcode¨                                             * 00030400
*          is the name (RS-type) of an optional fullword output       * 00030500
*          variable, or register (2)-(12) or (15), into which the     * 00030600
*          return code is to be copied from GPR 15.  If you specify   * 00030700
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00030800
*          the value will be left in GPR 15.                          * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*      ÝRSNCODE=xrsncode¨                                             * 00031400
*          is the name (RS-type) of an optional fullword output       * 00031500
*          variable into which the reason code is to be copied from   * 00031600
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00031700
*          R0 (within or without parentheses), the value will be left * 00031800
*          in GPR 0.                                                  * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00032400
*          is an optional byte input decimal value in the "0-0" range * 00032500
*          that specifies the macro version.  PLISTVER is the only    * 00032600
*          key allowed on the list form of MF and determines which    * 00032700
*          parameter list is generated.  Note that MAX may be         * 00032800
*          specified instead of a number, and the parameter list will * 00032900
*          be of the largest size currently supported. This size may  * 00033000
*          grow from release to release (thus possibly affecting the  * 00033100
*          amount of storage needed by your program).  If your        * 00033200
*          program can tolerate this, IBM recommends that you always  * 00033300
*          specify MAX when creating the list form parameter list as  * 00033400
*          that will ensure that the list form parameter list is      * 00033500
*          always long enough to hold whatever parameters might be    * 00033600
*          specified on the execute form.                             * 00033700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00033800
*          default is the lowest version which allows all of the      * 00033900
*          parameters specified on the invocation to be processed.    * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*      ÝMF=»S!L!Eº¨                                                   * 00034500
*          is an optional keyword input which specifies the macro     * 00034600
*          form.                                                      * 00034700
*          DEFAULT: S                                                 * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*          ÝMF=S¨                                                     * 00035100
*              specifies the standard form of the macro.  The "S"     * 00035200
*              form generates code to put the parameters into an      * 00035300
*              in-line parameter list and invoke the desired service. * 00035400
*              Full checking for required macro keys is done along    * 00035500
*              with supplying defaults for omitted optional           * 00035600
*              parameters.                                            * 00035700
*                                                                     * 00035800
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00035900
*              specifies the list form of the macro.  The "L" form    * 00036000
*              defines an area to be used for the parameter list.     * 00036100
*              Only the PLISTVER key may be specified on the          * 00036200
*              invocation.  All other macro parameters are flagged as * 00036300
*              errors.  If PLISTVER is not specified, the original    * 00036400
*              parameter list definition is used.                     * 00036500
*                                                                     * 00036600
*            ,xmfctrl                                                 * 00036700
*              is a required input.  It is the name of a storage area * 00036800
*              for the parameter list.                                * 00036900
*                                                                     * 00037000
*            »,xmfattr!0Dº                                            * 00037100
*              is an optional 60 character input string that varies   * 00037200
*              from 1 to 60 characters. Use it to force boundary      * 00037300
*              alignment of the parameter list. Use only 0F or 0D.    * 00037400
*              DEFAULT: 0D which forces the parameter list to a       * 00037500
*              doubleword boundary.                                   * 00037600
*                                                                     * 00037700
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00037800
*              specifies the execute form of the macro.  The "E" form * 00037900
*              generates code to put the parameters into the          * 00038000
*              parameter list specified by xmfctrl and provides full  * 00038100
*              syntax checking with default setting.                  * 00038200
*                                                                     * 00038300
*            ,xmfctrl                                                 * 00038400
*              is a required input.  It is the name (RS-type), or     * 00038500
*              address in register (1)-(12), of a storage area for    * 00038600
*              the parameter list.                                    * 00038700
*                                                                     * 00038800
*            »,COMPLETEº                                              * 00038900
*              is an optional keyword input which specifies the       * 00039000
*              degree of macro parameter syntax checking.             * 00039100
*              DEFAULT: COMPLETE                                      * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*              COMPLETE                                               * 00039500
*                  Checking for required macro keys is done and       * 00039600
*                  defaults are supplied for omitted optional         * 00039700
*                  parameters.                                        * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*01* ABEND CODES:  None.                                              * 00040600
*                                                                     * 00040700
*01* RETURN CODES:                                                    * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*            0    Name: IwmRetCodeOk                                  * 00041100
*                                                                     * 00041200
*                 Meaning: Successful completion.                     * 00041300
*                                                                     * 00041400
*                 Action: None required.                              * 00041500
*                                                                     * 00041600
*            4    Name: IwmRetCodeWarning                             * 00041700
*                                                                     * 00041800
*                 Meaning: Successful completion, unusual conditions  * 00041900
*                 noted.                                              * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                 HEX REASON  MEANING/ACTION                          * 00042300
*                 CODE                                                * 00042400
*                                                                     * 00042500
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 00042600
*                                                                     * 00042700
*                             Meaning:  The input monitoring token    * 00042800
*                             indicates no monitoring environment was * 00042900
*                             established.                            * 00043000
*                                                                     * 00043100
*                             Action: Establish a monitoring          * 00043200
*                             environment by macro IWM4MCRE.          * 00043300
*                                                                     * 00043400
*                 xxxx0441    Name: IwmRsnCodeTooManyMsgCorrs         * 00043500
*                                                                     * 00043600
*                             Meaning:  The correlator passed to      * 00043700
*                             EWLM_RCVD_CORR is ignored, since the    * 00043800
*                             maximum number of supported correlators * 00043900
*                             has been reached.                       * 00044000
*                                                                     * 00044100
*                             Action: None required.                  * 00044200
*                                                                     * 00044300
*                 xxxx0443    Name: IwmRsnCodeTooManyMsgsSent         * 00044400
*                                                                     * 00044500
*                             Meaning:  The value passed to           * 00044600
*                             MESSAGES_SENT is ignored, since the     * 00044700
*                             maximum number of messages sent is      * 00044800
*                             reached.                                * 00044900
*                                                                     * 00045000
*                             Action: None required.                  * 00045100
*                                                                     * 00045200
*                 xxxx0444    Name: IwmRsnCodeTooManyMsgsReceived     * 00045300
*                                                                     * 00045400
*                             Meaning:  The messages received counter * 00045500
*                             has reached the maximum value.          * 00045600
*                                                                     * 00045700
*                             Action: None required.                  * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*            8    Name: IwmRetCodeInvocError                          * 00046200
*                                                                     * 00046300
*                 Meaning: Invalid invocation environment or          * 00046400
*                 parameters.                                         * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*                 HEX REASON  MEANING/ACTION                          * 00046800
*                 CODE                                                * 00046900
*                                                                     * 00047000
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 00047100
*                                                                     * 00047200
*                             Meaning:  Input monitoring environment  * 00047300
*                             does not pass short form validity       * 00047400
*                             checking.                               * 00047500
*                                                                     * 00047600
*                             Action: Check for possible storage      * 00047700
*                             overlay.                                * 00047800
*                                                                     * 00047900
*                 xxxx08AC    Name: IwmRsnCodeTranNotStarted          * 00048000
*                                                                     * 00048100
*                             Meaning:  No work unit has been started * 00048200
*                             by IWM4MSTR for the specified           * 00048300
*                             monitoring environment.                 * 00048400
*                                                                     * 00048500
*                             Action: Start a work unit by IWM4MSTR   * 00048600
*                             macro, before issuing this macro.       * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*01* REASON CODES:                                                    * 00049300
*                                                                     * 00049400
*       A reason code will be returned whenever the return code is    * 00049500
*       non-zero.  Reason codes, as appropriate, are defined under    * 00049600
*       their corresponding return code.  Reason code and return code * 00049700
*       constants are defined within IWMYCON.  Note that the high     * 00049800
*       order halfword of bits 0-31 of register 0, and the reason     * 00049900
*       code variable when specified, may be non-zero and represents  * 00050000
*       diagnostic data which is NOT part of the external interface.  * 00050100
*       The high order halfword should thus be excluded from          * 00050200
*       comparison with the reason code values described above.  The  * 00050300
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00050400
*       used for this purpose.                                        * 00050500
*                                                                     * 00050600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00050700
*                                                                     * 00050800
*02*   PROCESSOR:  ASSEM                                              * 00050900
*                                                                     * 00051000
*01* COMPONENT:  SCWLM                                                * 00051100
*                                                                     * 00051200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00051300
*                                                                     * 00051400
*01* EXAMPLES:                                                        * 00051500
*                                                                     * 00051600
*01* MACRO USAGE NOTES:                                               * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00052000
*        global macro variable.  Any value other than 'NO' will       * 00052100
*        result in the macro expansion being printed.  The default is * 00052200
*        'YES'.  The following examples illustrate how the ZPRINT     * 00052300
*        variable should be set.                                      * 00052400
*                                                                     * 00052500
*                    GBLC &ZPRINT                                     * 00052600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*    2.  All   keys   currently   contained  in  the  IWM4MUPD  macro * 00053000
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00053100
*        value of 0 or MAX.                                           * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                                                                     * 00053600
*01* CHANGE ACTIVITY:                                                 * 00053700
*                                                                     * 00053800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00053900
*                                                                     * 00054000
*    $L0=LPBABV   HBB7790 121023 3241AH:  Initial version PB above 2G * 00054100
*    $P0=ME24923  HBB7790 121016 3241AH:  Fix SYSAM64 logic           * 00054200
*    $P1=ME25540  HBB7790 130122 3241DW:  Literal not accessible in   * 00054300
*                                         AMODE 64                    * 00054400
****** END OF SPECIFICATIONS *****************************************/ 00054500
*/********************************************************************* 00054600
         MACRO                                                          00054700
&XLABEL  IWM4MUPD &MONTKN=,&MONTKN64=,&EWLM=,&END_FLOW=,               *00054800
               &MESSAGES_SENT=,&EWLM_RCVD_CORR=,&AFTER_STRT=,&RETCODE=,*00054900
               &RSNCODE=,&PLISTVER=,&MF=                                00055000
.*                                                                      00055100
*                    MACDATE -01/31/13-<0>                              00055200
.*                                                                      00055300
.*******************************************************************    00055400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00055500
.*******************************************************************    00055600
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00055700
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00055800
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00055900
.*                                                                      00056000
                    GBLC  &ZIWM4MUPD  YES=MACRO USED AT LEAST ONCE      00056100
.*******************************************************************    00056200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00056300
.*******************************************************************    00056400
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00056500
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00056600
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00056700
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00056800
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00056900
                    LCLA  &ZAWRK      USED AS A WORK AREA               00057000
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00057100
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00057200
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00057300
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00057400
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00057500
                    LCLC  &ZMAC_G     "G" or null                       00057600
&ZMAC_G             SETC  ''                                            00057700
                    LCLC  &ZMAC_LR                                      00057800
&ZMAC_LR            SETC  'LR'                                          00057900
                    LCLC  &ZMAC_L                                       00058000
&ZMAC_L             SETC  'L'                                           00058100
                    LCLC  &ZMAC_ST                                      00058200
&ZMAC_ST            SETC  'ST'                                          00058300
                    LCLC  &ZMAC_LLGT                                    00058400
&ZMAC_LLGT          SETC  'L'                                           00058500
                    LCLC  &ZMAC_LGR                                     00058600
&ZMAC_LGR           SETC  'LR'                                          00058700
                    LCLC  &ZMAC_LG                                      00058800
&ZMAC_LG            SETC  'L'                                           00058900
                    LCLC  &ZMAC_STG                                     00059000
&ZMAC_STG           SETC  'ST'                                          00059100
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00059200
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00059300
.*                                                                      00059400
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00059500
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00059600
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00059700
                    LCLC  &ZENDBASEPL           End of base PL          00059800
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00059900
.*******************************************************************    00060000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00060100
.*******************************************************************    00060200
                    LCLA  &ZI         INDEX FOR ARRAY                   00060300
                    LCLA  &ZJ         INDEX FOR PARMS                   00060400
                    LCLA  &ZK         INDEX FOR PARSE                   00060500
                    LCLA  &ZLO        LOW RANGE VALUE                   00060600
                    LCLA  &ZHI        HIGH RANGE VALUE                  00060700
                    LCLC  &ZW         WORK AREA FOR PARM                00060800
.********************************************************************   00060900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00061000
.********************************************************************   00061100
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00061200
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00061300
                    GBLA  &SYSALVL    SYSSTATE ARCHLVL                  00061400
                    GBLC  &SYSAM64    SYSSTATE AMODE64                  00061500
.*                                                                      00061600
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00061700
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00061800
                    SPLEVEL  TEST                                       00061900
.ZSYS2              ANOP  ,                                             00062000
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00062100
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00062200
                    SYSSTATE TEST                                       00062300
                    AGO   .ZSYS4                                        00062400
.ZSYS3              ANOP  ,                                             00062500
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00062600
.ZSYS4              ANOP  ,                                             00062700
                    AIF   ('&SYSAM64' NE 'YES').ZSYSN64                 00062800
&ZMAC_LLGT          SETC 'LLGT'                                         00062900
&ZMAC_LGR           SETC 'LGR'                                          00063000
&ZMAC_LG            SETC 'LG'                                           00063100
&ZMAC_STG           SETC 'STG'                                          00063200
.ZSYSN64            ANOP  ,                                             00063300
&ZMAC_G             SETC 'G'                                            00063400
&ZMAC_LR            SETC 'LGR'                                          00063500
&ZMAC_L             SETC 'LG'                                           00063600
&ZMAC_ST            SETC 'STG'                                          00063700
.*******************************************************************    00063800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00063900
.*******************************************************************    00064000
                    LCLC  &XUSEDMONTKNKEY       ++ NAME                 00064100
                    LCLC  &XMONTKN    ++ NAME                           00064200
                    LCLC  &XMONTKN64  ++ NAME                           00064300
                    LCLC  &XEWLM      ++ VALUE                          00064400
                    LCLC  &XEND_FLOW  ++ VALUE                          00064500
                    LCLC  &XMESSAGES_SENT       ++ NAME                 00064600
                    LCLC  &XEWLM_RCVD_CORR      ++ NAME                 00064700
                    LCLC  &XAFTER_STRT          ++ VALUE                00064800
                    LCLC  &XRETCODE   ++ NAME                           00064900
                    LCLC  &XRSNCODE   ++ NAME                           00065000
                    LCLA  &XPLISTVER  ++ VALUE                          00065100
                    LCLC  &XMF        ++ VALUE                          00065200
                    LCLC  &XMFCTRL    ++ NAME                           00065300
                    LCLC  &XMFATTR    ++ VALUE                          00065400
                    LCLC  &XMFSCK     ++ VALUE                          00065500
.*******************************************************************    00065600
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00065700
.*******************************************************************    00065800
                    LCLC  &ZXUSEDMONTKNKEY      ++ INPUT NAME           00065900
                    LCLC  &ZXMONTKN   ++ INPUT NAME                     00066000
                    LCLC  &ZXMONTKN64           ++ INPUT NAME           00066100
                    LCLC  &ZXEWLM     ++ INPUT VALUE                    00066200
                    LCLC  &ZXEND_FLOW           ++ INPUT VALUE          00066300
                    LCLC  &ZXMESSAGES_SENT      ++ INPUT NAME           00066400
                    LCLC  &ZXEWLM_RCVD_CORR     ++ INPUT NAME           00066500
                    LCLC  &ZXAFTER_STRT         ++ INPUT VALUE          00066600
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00066700
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00066800
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00066900
                    LCLC  &ZXMF       ++ INPUT VALUE                    00067000
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00067100
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00067200
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00067300
.********************************************************************   00067400
.***AC.PLV01  PROCESS PLISTVER                                      *   00067500
.********************************************************************   00067600
&XPLISTVER      SETA  0                                                 00067700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00067800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00067900
&XPLISTVER      SETA  0                                                 00068000
.ZPLV0          ANOP  ,                                                 00068100
.*                                                                      00068200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00068300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00068400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00068500
.*-------------------------------------------------------------------   00068600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00068700
&ZMS            SETC  '"PLISTVER='                                      00068800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00068900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00069000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00069100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00069200
                AGO   .ZPVCK2                                           00069300
.ZPVCK3         ANOP  ,                                                 00069400
.*-------------------------------------------------------------------   00069500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00069600
&ZMS            SETC  '"PLISTVER='                                      00069700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00069800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00069900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00070000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00070100
                AGO   .ZPVCKE                                           00070200
.ZPVCK2         ANOP  ,                                                 00070300
.*-------------------------------------------------------------------   00070400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00070500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00070600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00070700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00070800
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00070900
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00071000
.ZPVCK6         ANOP  ,                                                 00071100
&ZMS            SETC  '"PLISTVER='                                      00071200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00071300
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00071400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00071500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00071600
&XPLISTVER      SETA  0                                                 00071700
                AGO   .ZPVCKE                                           00071800
.*-------------------------------------------------------------------   00071900
.ZPVCK4A        ANOP  ,                                                 00072000
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00072100
&ZMS            SETC  'PLISTVER='                                       00072200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00072300
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00072400
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00072500
                MNOTE 8,' &ZMS IS REQUIRED.'                            00072600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072700
                AGO   .ZPVCK5                                           00072800
.ZPVCK4         ANOP  ,                                                 00072900
&XPLISTVER      SETA  &PLISTVER(1)                                      00073000
.ZPVCK5         ANOP  ,                                                 00073100
.ZPVCKE         ANOP  ,                                                 00073200
.********************************************************************   00073300
.***AG.MF01 PROCESS MF MACRO FORMS                                      00073400
.********************************************************************   00073500
                    ACTR  10000                                         00073600
.*------------------------------------------------------------------    00073700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073800
&XMF                SETC  ''          INITIALIZE XVARIABLE              00073900
.*-------------------------------------------------------------------   00074000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074100
.ZG36               ANOP  ,                                             00074200
&ZTLC               SETC 'S'                                            00074300
                    AIF   ('&MF(1)' NE '&ZTLC').ZG37                    00074400
&XMF                SETC  'S'         SET KEYWORD                       00074500
                    AIF   (N'&MF LE 1).ZG36A    CK NUM                  00074600
&ZMS                SETC  '"MF='                                        00074700
&ZMS                SETC  '&ZMS.&MF"'                                   00074800
&ZMS                SETC  '&ZMS "MF"'                                   00074900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00075000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00075100
.ZG36A              ANOP  ,                                             00075200
.*-------------------------------------------------------------------   00075300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075400
.ZG37               ANOP  ,                                             00075500
&ZTLC               SETC 'L'                                            00075600
                    AIF   ('&MF(1)' NE '&ZTLC').ZG44                    00075700
&XMF                SETC  'L'         SET KEYWORD                       00075800
                    AIF   (N'&MF LE 3).ZG37A    CK NUM                  00075900
&ZMS                SETC  '"MF='                                        00076000
&ZMS                SETC  '&ZMS.&MF"'                                   00076100
&ZMS                SETC  '&ZMS "MF"'                                   00076200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00076300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00076400
.ZG37A              ANOP  ,                                             00076500
.*-------------------------------------------------------------------   00076600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00076700
                    AIF   (N'&SYSLIST NE 0).ZG37B  POSITIONALS?         00076800
                    AIF   ('&MONTKN' NE '').ZG37B  KEYS?                00076900
                    AIF   ('&MONTKN64' NE '').ZG37B  KEYS?              00077000
                    AIF   ('&EWLM' NE '').ZG37B  KEYS?                  00077100
                    AIF   ('&END_FLOW' NE '').ZG37B  KEYS?              00077200
                    AIF   ('&MESSAGES_SENT' NE '').ZG37B  KEYS?         00077300
                    AIF   ('&EWLM_RCVD_CORR' NE '').ZG37B  KEYS?        00077400
                    AIF   ('&AFTER_STRT' NE '').ZG37B  KEYS?            00077500
                    AIF   ('&RETCODE' NE '').ZG37B  KEYS?               00077600
                    AIF   ('&RSNCODE' NE '').ZG37B  KEYS?               00077700
                    AGO    .ZG37C     INVOCATION OKAY                   00077800
.ZG37B              ANOP  ,                                             00077900
&ZMS                SETC  'THE "L" FORM OF "MF"'                        00078000
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00078100
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00078200
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00078300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00078400
.ZG37C              ANOP  ,                                             00078500
.*-------------------------------------------------------------------   00078600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00078700
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00078800
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00078900
                    AIF   (N'&MF(2) GT 1).ZG39B  MULTI PARMS            00079000
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00079100
.ZG39B              AIF   (K'&MF(2) GT 0).ZG39C                         00079200
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00079300
&ZMS                SETC  'WHEN "L" IS SPECIFIED'                       00079400
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00079500
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00079600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00079700
.ZG39C              ANOP  ,                                             00079800
.*-------------------------------------------------------------------   00079900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00080000
                    AIF   (K'&ZXMFCTRL LE 0).ZG39P  NOT I/O             00080100
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG39P                00080200
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00080300
&ZMS                SETC  '"MF='                                        00080400
&ZMS                SETC  '&ZMS.&MF"'                                   00080500
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00080600
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00080700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00080800
.ZG39P              ANOP  ,                                             00080900
.*-------------------------------------------------------------------   00081000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00081100
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00081200
&XMFATTR            SETC  '0D'                                          00081300
                    AIF   (K'&MF(3) LE 0).ZG42B  PARM                   00081400
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00081500
                    AIF   (N'&MF(3) GT 1).ZG42B  MULTI                  00081600
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00081700
.ZG42B              ANOP  ,                                             00081800
.*-------------------------------------------------------------------   00081900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00082000
                    AIF   (K'&ZXMFATTR LE 0).ZG42P  NOT I/O             00082100
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG42P                00082200
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00082300
&ZMS                SETC  '"MF='                                        00082400
&ZMS                SETC  '&ZMS.&MF"'                                   00082500
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00082600
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00082700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00082800
.ZG42P              ANOP  ,                                             00082900
.*-------------------------------------------------------------------   00083000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00083100
                    AIF   (K'&ZXMFATTR LE 0).ZG42S  NOT I/O             00083200
                    AIF   (K'&XMFATTR LE 60).ZG42S  LNG OK              00083300
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00083400
&ZMS                SETC  '"MF='                                        00083500
&ZMS                SETC  '&ZMS.&MF"'                                   00083600
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00083700
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00083800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00083900
.ZG42S              ANOP  ,                                             00084000
.*-------------------------------------------------------------------   00084100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00084200
.ZG44               ANOP  ,                                             00084300
&ZTLC               SETC 'E'                                            00084400
                    AIF   ('&MF(1)' NE '&ZTLC').ZG52                    00084500
&XMF                SETC  'E'         SET KEYWORD                       00084600
                    AIF   (N'&MF LE 3).ZG44A    CK NUM                  00084700
&ZMS                SETC  '"MF='                                        00084800
&ZMS                SETC  '&ZMS.&MF"'                                   00084900
&ZMS                SETC  '&ZMS "MF"'                                   00085000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00085100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00085200
.ZG44A              ANOP  ,                                             00085300
.*-------------------------------------------------------------------   00085400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00085500
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00085600
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00085700
                    AIF   (N'&MF(2) GT 1).ZG46B  MULTI PARMS            00085800
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00085900
.ZG46B              AIF   (K'&MF(2) GT 0).ZG46C                         00086000
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00086100
&ZMS                SETC  'WHEN "E" IS SPECIFIED'                       00086200
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00086300
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00086400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00086500
.ZG46C              ANOP  ,                                             00086600
.*-------------------------------------------------------------------   00086700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00086800
                    AIF   (K'&ZXMFCTRL LE 0).ZG46R  NOT I/O             00086900
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG46R                00087000
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00087100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                  00087200
                    AIF   (K'&ZCGPR GT 2).ZG46Q                         00087300
                    AIF   ('&ZCGPR' EQ '0').ZG46Q                       00087400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00087500
                    AIF   (T'&ZCGPR NE 'N').ZG46Q  INVALID REG NAME     00087600
.ZG46P              ANOP  ,                                             00087700
                    AIF   (T'&ZCGPR NE 'N').ZG46R  NON NUMERIC          00087800
                    AIF   ('&ZCGPR' LT '1').ZG46Q                       00087900
                    AIF   ('&ZCGPR' LE '12').ZG46R                      00088000
.ZG46Q              ANOP  ,                                             00088100
&ZMS                SETC  '"MF='                                        00088200
&ZMS                SETC  '&ZMS.&MF"'                                   00088300
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00088400
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00088500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00088600
.ZG46R              ANOP  ,                                             00088700
.*-------------------------------------------------------------------   00088800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00088900
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00089000
.ZG50A   AIF   ('&MF(3)' NE 'COMPLETE').ZG51A                           00089100
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00089200
.*-------------------------------------------------------------------   00089300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00089400
.ZG51A              AIF   (K'&XMFSCK GT 0).ZG51C  KEYWORD               00089500
                    AIF   (K'&MF(3) LE 0).ZG51B                         00089600
&ZMS                SETC  '"MF='                                        00089700
&ZMS                SETC  '&ZMS.&MF"'                                   00089800
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00089900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00090000
&ZMS                SETC  '&ZMS "COMPLETE".'                            00090100
                    MNOTE 8,' &ZMS '                                    00090200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00090300
.ZG51B              ANOP  ,                                             00090400
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00090500
.ZG51C              ANOP  ,                                             00090600
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00090700
.*------------------------------------------------------------------    00090800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00090900
.ZG52               ANOP  ,                                             00091000
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00091100
                    AIF   (K'&XMF GT 0).ZG52E   VALID ARG               00091200
                    AIF   (T'&MF EQ 'O').ZG52D  OMITTED                 00091300
&ZASYSLNDX          SETA  0                                             00091400
.ZG52A              ANOP  ,           POSITIONAL MACRO KEY              00091500
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00091600
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG52C              00091700
&ZTLC               SETC 'MF'                                           00091800
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG52A     00091900
.ZG52B              ANOP  ,                                             00092000
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00092100
&ZMS                SETC  'THE "MF" KEY'                                00092200
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00092300
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00092400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00092500
                    AGO   .ZG52E                                        00092600
.ZG52C              ANOP  ,                                             00092700
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00092800
&ZMS                SETC  '"MF='                                        00092900
&ZMS                SETC  '&ZMS.&MF"'                                   00093000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00093100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00093200
&ZMS                SETC  '&ZMS "S",'                                   00093300
&ZMS                SETC  '&ZMS "L",'                                   00093400
&ZMS                SETC  '&ZMS OR "E".'                                00093500
                    MNOTE 8,' &ZMS '                                    00093600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00093700
                    AGO   .ZG52E                                        00093800
.ZG52D              ANOP  ,                                             00093900
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00094000
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00094100
.ZG52E              ANOP  ,                                             00094200
.********************************************************************   00094300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00094400
.********************************************************************   00094500
                    ACTR  10000                                         00094600
.*-------------------------------------------------------------------   00094700
.***AG.MF03 MF=(SLE)                                                    00094800
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00094900
.*----------------------------------------------------------------***   00095000
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00095100
&XUSEDMONTKNKEY     SETC  ''          INITIALIZE XVARIABLE              00095200
                    AIF   (K'&MONTKN LE 0).ZG2C                         00095300
&ZXUSEDMONTKNKEY    SETC  'INPUT'     SET IN/OUTPUT                     00095400
&XUSEDMONTKNKEY     SETC  'MONTKN'    SET XVARIABLE                     00095500
&ZXMONTKN           SETC  'INPUT'     SET IN/OUTPUT                     00095600
&XMONTKN            SETC  '&MONTKN(1)'          SET XVARIABLE PARM      00095700
                    AIF   (N'&MONTKN GT 1).ZG2A                         00095800
&XMONTKN            SETC  '&MONTKN'   SET XVARIABLE PARM                00095900
.ZG2A               AIF   (N'&MONTKN LE 1).ZG2B  CK NUM                 00096000
&ZMS                SETC  '"MONTKN='                                    00096100
&ZMS                SETC  '&ZMS.&MONTKN"'                               00096200
&ZMS                SETC  '&ZMS "MONTKN"'                               00096300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00096400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00096500
.ZG2B               AIF   (K'&XMONTKN GT 0).ZG2C  ONE PARM              00096600
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00096700
&ZXMONTKN           SETC  ''          RESET IN/OUTPUT                   00096800
&ZMS                SETC  ' '                                           00096900
&ZMS                SETC  '&ZMS "MONTKN" KEY AND ITS'                   00097000
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00097100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00097200
.ZG2C               ANOP  ,                                             00097300
.*----------------------------------------------------------------***   00097400
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00097500
                    AIF   (K'&MONTKN64 LE 0).ZG3D  NO ME KEY            00097600
                    AIF   (N'&MONTKN64 LE 1).ZG3A  CK NUM               00097700
&ZMS                SETC  '"MONTKN64='                                  00097800
&ZMS                SETC  '&ZMS.&MONTKN64"'                             00097900
&ZMS                SETC  '&ZMS "MONTKN64"'                             00098000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00098100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00098200
.ZG3A               AIF   (K'&XUSEDMONTKNKEY LE 0).ZG3B                 00098300
&ZMS                SETC  '"MONTKN64'                                   00098400
&ZMS                SETC  '&ZMS.=&MONTKN64"'                            00098500
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00098600
&ZMS                SETC  '&ZMS "&XUSEDMONTKNKEY"'                      00098700
                    MNOTE 8,' &ZMS KEY.'                                00098800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00098900
                    AGO   .ZG3D                                         00099000
.*                                                                      00099100
.ZG3B               ANOP  ,                                             00099200
&ZXUSEDMONTKNKEY    SETC  'INPUT'     SET IN/OUTPUT                     00099300
&XUSEDMONTKNKEY     SETC  'MONTKN64'  SET XVARIABLE                     00099400
&ZXMONTKN64         SETC  'INPUT'     SET IN/OUTPUT                     00099500
&XMONTKN64          SETC  '&MONTKN64(1)'        SET XVARIABLE PARM      00099600
                    AIF   (N'&MONTKN64 GT 1).ZG3C                       00099700
&XMONTKN64          SETC  '&MONTKN64'           SET XVARIABLE PARM      00099800
.ZG3C               AIF   (K'&XMONTKN64 GT 0).ZG3D  ONE PARM            00099900
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00100000
&ZXMONTKN64         SETC  ''          RESET IN/OUTPUT                   00100100
&ZMS                SETC  ' '                                           00100200
&ZMS                SETC  '&ZMS "MONTKN64" KEY AND ITS'                 00100300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00100400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00100500
.ZG3D               ANOP  ,                                             00100600
.*------------------------------------------------------------------    00100700
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00100800
                    AIF   (K'&XUSEDMONTKNKEY GT 0).ZG4B                 00100900
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00101000
&ZXMONTKN           SETC  ''          RESET IN/OUTPUT                   00101100
&XUSEDMONTKNKEY     SETC  ''          ENSURE NULL                       00101200
&XMONTKN            SETC  ''          ENSURE NULL                       00101300
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00101400
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00101500
&ZMS                SETC  '&ZMS REQUIRED:'                              00101600
&ZMS                SETC  '&ZMS "MONTKN"'       VALID ME KEY            00101700
&ZMS                SETC  '&ZMS OR "MONTKN64".'  VALID ME KEY           00101800
                    MNOTE 8,' &ZMS '                                    00101900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00102000
.ZG4B               ANOP  ,                                             00102100
.*-------------------------------------------------------------------   00102200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00102300
.ZG2ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN').ZG3ZY                    00102400
.*-------------------------------------------------------------------   00102500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00102600
                    AIF   (K'&ZXMONTKN LE 0).ZG2R  NOT I/O              00102700
                    AIF   ('&XMONTKN'(1,1) NE '(').ZG2R                 00102800
&ZCGPR              SETC  '&XMONTKN'(2,K'&XMONTKN-2)                    00102900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                   00103000
                    AIF   (K'&ZCGPR GT 2).ZG2Q                          00103100
                    AIF   ('&ZCGPR' EQ '0').ZG2Q                        00103200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00103300
                    AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME      00103400
.ZG2P               ANOP  ,                                             00103500
                    AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC           00103600
                    AIF   ('&ZCGPR' LT '2').ZG2Q                        00103700
                    AIF   ('&ZCGPR' LE '12').ZG2R                       00103800
.ZG2Q               ANOP  ,                                             00103900
&ZMS                SETC  '"MONTKN='                                    00104000
&ZMS                SETC  '&ZMS.&MONTKN"'                               00104100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00104200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00104300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00104400
.ZG2R               ANOP  ,                                             00104500
.*-------------------------------------------------------------------   00104600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00104700
.ZG3ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN64').ZG4ZY                  00104800
.*-------------------------------------------------------------------   00104900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00105000
                    AIF   (K'&ZXMONTKN64 LE 0).ZG3R  NOT I/O            00105100
                    AIF   ('&XMONTKN64'(1,1) NE '(').ZG3R               00105200
&ZCGPR              SETC  '&XMONTKN64'(2,K'&XMONTKN64-2)                00105300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                   00105400
                    AIF   (K'&ZCGPR GT 2).ZG3Q                          00105500
                    AIF   ('&ZCGPR' EQ '0').ZG3Q                        00105600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00105700
                    AIF   (T'&ZCGPR NE 'N').ZG3Q  INVALID REG NAME      00105800
.ZG3P               ANOP  ,                                             00105900
                    AIF   (T'&ZCGPR NE 'N').ZG3R  NON NUMERIC           00106000
                    AIF   ('&ZCGPR' LT '2').ZG3Q                        00106100
                    AIF   ('&ZCGPR' LE '12').ZG3R                       00106200
.ZG3Q               ANOP  ,                                             00106300
&ZMS                SETC  '"MONTKN64='                                  00106400
&ZMS                SETC  '&ZMS.&MONTKN64"'                             00106500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00106600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00106700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00106800
.ZG3R               ANOP  ,                                             00106900
.*-------------------------------------------------------------------   00107000
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00107100
.ZG4ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00107200
.*----------------------------------------------------------------***   00107300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00107400
                    AIF   (N'&EWLM LE 1).ZG6A   CK NUM                  00107500
&ZMS                SETC  '"EWLM='                                      00107600
&ZMS                SETC  '&ZMS.&EWLM"'                                 00107700
&ZMS                SETC  '&ZMS "EWLM"'                                 00107800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00107900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00108000
.ZG6A               ANOP  ,                                             00108100
.*-------------------------------------------------------------------   00108200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00108300
&XEWLM              SETC  ''          INITIALIZE XVARIABLE              00108400
.ZG7A   AIF   ('&EWLM(1)' NE 'NO').ZG8A                                 00108500
&XEWLM              SETC  'NO'        SET KEYWORD                       00108600
.*-------------------------------------------------------------------   00108700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00108800
.ZG8A               AIF   (K'&XEWLM GT 0).ZG8C  KEYWORD                 00108900
                    AIF   (K'&EWLM(1) LE 0).ZG8B                        00109000
&ZMS                SETC  '"EWLM='                                      00109100
&ZMS                SETC  '&ZMS.&EWLM"'                                 00109200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00109300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00109400
&ZMS                SETC  '&ZMS "NO".'                                  00109500
                    MNOTE 8,' &ZMS '                                    00109600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00109700
.ZG8B               ANOP  ,                                             00109800
&XEWLM              SETC  'NO'        SET DEFAULT KEYWORD               00109900
.ZG8C               ANOP  ,                                             00110000
&ZXEWLM             SETC  'INPUT'     SET IN/OUTPUT                     00110100
.*----------------------------------------------------------------***   00110200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00110300
                    AIF   (N'&END_FLOW LE 1).ZG10A  CK NUM              00110400
&ZMS                SETC  '"END_FLOW='                                  00110500
&ZMS                SETC  '&ZMS.&END_FLOW"'                             00110600
&ZMS                SETC  '&ZMS "END_FLOW"'                             00110700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00110800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00110900
.ZG10A              ANOP  ,                                             00111000
.*-------------------------------------------------------------------   00111100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00111200
&XEND_FLOW          SETC  ''          INITIALIZE XVARIABLE              00111300
.ZG11A   AIF   ('&END_FLOW(1)' NE 'NO').ZG12A                           00111400
&XEND_FLOW          SETC  'NO'        SET KEYWORD                       00111500
.*-------------------------------------------------------------------   00111600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00111700
.ZG12A   AIF   ('&END_FLOW(1)' NE 'YES').ZG13A                          00111800
&XEND_FLOW          SETC  'YES'       SET KEYWORD                       00111900
.*-------------------------------------------------------------------   00112000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00112100
.ZG13A              AIF   (K'&XEND_FLOW GT 0).ZG13C  KEYWORD            00112200
                    AIF   (K'&END_FLOW(1) LE 0).ZG13B                   00112300
&ZMS                SETC  '"END_FLOW='                                  00112400
&ZMS                SETC  '&ZMS.&END_FLOW"'                             00112500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00112600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00112700
&ZMS                SETC  '&ZMS "NO"'                                   00112800
&ZMS                SETC  '&ZMS OR "YES".'                              00112900
                    MNOTE 8,' &ZMS '                                    00113000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00113100
.ZG13B              ANOP  ,                                             00113200
&XEND_FLOW          SETC  'NO'        SET DEFAULT KEYWORD               00113300
.ZG13C              ANOP  ,                                             00113400
&ZXEND_FLOW         SETC  'INPUT'     SET IN/OUTPUT                     00113500
.*----------------------------------------------------------------***   00113600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00113700
                    AIF   (N'&MESSAGES_SENT LE 1).ZG15A  CK NUM         00113800
&ZMS                SETC  '"MESSAGES_SENT='                             00113900
&ZMS                SETC  '&ZMS.&MESSAGES_SENT"'                        00114000
&ZMS                SETC  '&ZMS "MESSAGES_SENT"'                        00114100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00114200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00114300
.ZG15A              ANOP  ,                                             00114400
.*-------------------------------------------------------------------   00114500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00114600
&ZXMESSAGES_SENT    SETC  'INPUT'     SET IN/OUTPUT                     00114700
&XMESSAGES_SENT     SETC  'NO_MESSAGES_SENT'                            00114800
                    AIF   (K'&MESSAGES_SENT(1) LE 0).ZG15B  PARM        00114900
&XMESSAGES_SENT     SETC  '&MESSAGES_SENT(1)'   SET XVARIABLE           00115000
                    AIF   (N'&MESSAGES_SENT GT 1).ZG15B  MULTI          00115100
&XMESSAGES_SENT     SETC  '&MESSAGES_SENT'      SET XVARIABLE           00115200
.ZG15B              ANOP  ,                                             00115300
.*-------------------------------------------------------------------   00115400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00115500
                    AIF   (K'&ZXMESSAGES_SENT LE 0).ZG15R  NOT I/O      00115600
         AIF   ('&XMESSAGES_SENT' EQ 'NO_MESSAGES_SENT').ZG15R          00115700
                    AIF   ('&XMESSAGES_SENT'(1,1) NE '(').ZG15R         00115800
&ZCGPR              SETC  '&XMESSAGES_SENT'(2,K'&XMESSAGES_SENT-2)      00115900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                  00116000
                    AIF   (K'&ZCGPR GT 2).ZG15Q                         00116100
                    AIF   ('&ZCGPR' EQ '0').ZG15Q                       00116200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00116300
                    AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME     00116400
.ZG15P              ANOP  ,                                             00116500
                    AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC          00116600
                    AIF   ('&ZCGPR' LT '2').ZG15Q                       00116700
                    AIF   ('&ZCGPR' LE '12').ZG15R                      00116800
.ZG15Q              ANOP  ,                                             00116900
&ZMS                SETC  '"MESSAGES_SENT='                             00117000
&ZMS                SETC  '&ZMS.&MESSAGES_SENT"'                        00117100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00117200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00117300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00117400
.ZG15R              ANOP  ,                                             00117500
.*----------------------------------------------------------------***   00117600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00117700
                    AIF   (N'&EWLM_RCVD_CORR LE 1).ZG18A  CK NUM        00117800
&ZMS                SETC  '"EWLM_RCVD_CORR='                            00117900
&ZMS                SETC  '&ZMS.&EWLM_RCVD_CORR"'                       00118000
&ZMS                SETC  '&ZMS "EWLM_RCVD_CORR"'                       00118100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00118200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00118300
.ZG18A              ANOP  ,                                             00118400
.*-------------------------------------------------------------------   00118500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00118600
&ZXEWLM_RCVD_CORR   SETC  'INPUT'     SET IN/OUTPUT                     00118700
&XEWLM_RCVD_CORR    SETC  'NO_EWLM_RCVD_CORR'                           00118800
                    AIF   (K'&EWLM_RCVD_CORR(1) LE 0).ZG18B  PARM       00118900
&XEWLM_RCVD_CORR    SETC  '&EWLM_RCVD_CORR(1)'  SET XVARIABLE           00119000
                    AIF   (N'&EWLM_RCVD_CORR GT 1).ZG18B  MULTI         00119100
&XEWLM_RCVD_CORR    SETC  '&EWLM_RCVD_CORR'     SET XVARIABLE           00119200
.ZG18B              ANOP  ,                                             00119300
.*-------------------------------------------------------------------   00119400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00119500
                    AIF   (K'&ZXEWLM_RCVD_CORR LE 0).ZG18R  NOT I/O     00119600
         AIF   ('&XEWLM_RCVD_CORR' EQ 'NO_EWLM_RCVD_CORR').ZG18R        00119700
                    AIF   ('&XEWLM_RCVD_CORR'(1,1) NE '(').ZG18R        00119800
&ZCGPR              SETC  '&XEWLM_RCVD_CORR'(2,K'&XEWLM_RCVD_CORR-2)    00119900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                  00120000
                    AIF   (K'&ZCGPR GT 2).ZG18Q                         00120100
                    AIF   ('&ZCGPR' EQ '0').ZG18Q                       00120200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00120300
                    AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME     00120400
.ZG18P              ANOP  ,                                             00120500
                    AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC          00120600
                    AIF   ('&ZCGPR' LT '2').ZG18Q                       00120700
                    AIF   ('&ZCGPR' LE '12').ZG18R                      00120800
.ZG18Q              ANOP  ,                                             00120900
&ZMS                SETC  '"EWLM_RCVD_CORR='                            00121000
&ZMS                SETC  '&ZMS.&EWLM_RCVD_CORR"'                       00121100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00121200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00121300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00121400
.ZG18R              ANOP  ,                                             00121500
.*----------------------------------------------------------------***   00121600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00121700
                    AIF   (N'&AFTER_STRT LE 1).ZG20A  CK NUM            00121800
&ZMS                SETC  '"AFTER_STRT='                                00121900
&ZMS                SETC  '&ZMS.&AFTER_STRT"'                           00122000
&ZMS                SETC  '&ZMS "AFTER_STRT"'                           00122100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00122200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00122300
.ZG20A              ANOP  ,                                             00122400
.*-------------------------------------------------------------------   00122500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00122600
&XAFTER_STRT        SETC  ''          INITIALIZE XVARIABLE              00122700
.ZG21A   AIF   ('&AFTER_STRT(1)' NE 'NO').ZG22A                         00122800
&XAFTER_STRT        SETC  'NO'        SET KEYWORD                       00122900
.*-------------------------------------------------------------------   00123000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00123100
.ZG22A   AIF   ('&AFTER_STRT(1)' NE 'YES').ZG23A                        00123200
&XAFTER_STRT        SETC  'YES'       SET KEYWORD                       00123300
.*-------------------------------------------------------------------   00123400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00123500
.ZG23A              AIF   (K'&XAFTER_STRT GT 0).ZG23C  KEYWORD          00123600
                    AIF   (K'&AFTER_STRT(1) LE 0).ZG23B                 00123700
&ZMS                SETC  '"AFTER_STRT='                                00123800
&ZMS                SETC  '&ZMS.&AFTER_STRT"'                           00123900
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00124000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00124100
&ZMS                SETC  '&ZMS "NO"'                                   00124200
&ZMS                SETC  '&ZMS OR "YES".'                              00124300
                    MNOTE 8,' &ZMS '                                    00124400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00124500
.ZG23B              ANOP  ,                                             00124600
&XAFTER_STRT        SETC  'NO'        SET DEFAULT KEYWORD               00124700
.ZG23C              ANOP  ,                                             00124800
&ZXAFTER_STRT       SETC  'INPUT'     SET IN/OUTPUT                     00124900
.*-------------------------------------------------------------------   00125000
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00125100
                    AIF   (K'&EWLM_RCVD_CORR(1) GT 0).ZG23D  KEY        00125200
                    AIF   (K'&AFTER_STRT(1) LE 0).ZG23D  PARM           00125300
&ZMS                SETC  '"AFTER_STRT'                                 00125400
&ZMS                SETC  '&ZMS.=&AFTER_STRT"'                          00125500
&ZMS                SETC  '&ZMS CAN ONLY BE SPECIFIED IF'               00125600
&ZMS                SETC  '&ZMS '                                       00125700
&ZMS                SETC  '&ZMS "EWLM_RCVD_CORR"'                       00125800
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00125900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00126000
.ZG23D              ANOP  ,                                             00126100
.*----------------------------------------------------------------***   00126200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00126300
                    AIF   (N'&RETCODE LE 1).ZG26A  CK NUM               00126400
&ZMS                SETC  '"RETCODE='                                   00126500
&ZMS                SETC  '&ZMS.&RETCODE"'                              00126600
&ZMS                SETC  '&ZMS "RETCODE"'                              00126700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00126800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00126900
.ZG26A              ANOP  ,                                             00127000
.*-------------------------------------------------------------------   00127100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00127200
                    AIF   (K'&RETCODE(1) LE 0).ZG26C  NO PARM           00127300
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00127400
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00127500
                    AIF   (N'&RETCODE GT 1).ZG26C                       00127600
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00127700
.ZG26C              ANOP  ,                                             00127800
.*-------------------------------------------------------------------   00127900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00128000
                    AIF   (K'&ZXRETCODE LE 0).ZG26R  NOT I/O            00128100
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG26R               00128200
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00128300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                  00128400
                    AIF   (K'&ZCGPR GT 2).ZG26Q                         00128500
                    AIF   ('&ZCGPR' EQ '0').ZG26Q                       00128600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00128700
                    AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME     00128800
.ZG26P              ANOP  ,                                             00128900
                    AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC          00129000
                    AIF   ('&ZCGPR' EQ '15').ZG26R                      00129100
                    AIF   ('&ZCGPR' LT '2').ZG26Q                       00129200
                    AIF   ('&ZCGPR' LE '12').ZG26R                      00129300
.ZG26Q              ANOP  ,                                             00129400
&ZMS                SETC  '"RETCODE='                                   00129500
&ZMS                SETC  '&ZMS.&RETCODE"'                              00129600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00129700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'      00129800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00129900
.ZG26R              ANOP  ,                                             00130000
.*----------------------------------------------------------------***   00130100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00130200
                    AIF   (N'&RSNCODE LE 1).ZG29A  CK NUM               00130300
&ZMS                SETC  '"RSNCODE='                                   00130400
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00130500
&ZMS                SETC  '&ZMS "RSNCODE"'                              00130600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00130700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00130800
.ZG29A              ANOP  ,                                             00130900
.*-------------------------------------------------------------------   00131000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00131100
                    AIF   (K'&RSNCODE(1) LE 0).ZG29C  NO PARM           00131200
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00131300
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00131400
                    AIF   (N'&RSNCODE GT 1).ZG29C                       00131500
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00131600
.ZG29C              ANOP  ,                                             00131700
.*-------------------------------------------------------------------   00131800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00131900
                    AIF   (K'&ZXRSNCODE LE 0).ZG29R  NOT I/O            00132000
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG29R               00132100
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00132200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                  00132300
                    AIF   (K'&ZCGPR GT 2).ZG29Q                         00132400
                    AIF   ('&ZCGPR' EQ '0').ZG29R                       00132500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00132600
                    AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME     00132700
.ZG29P              ANOP  ,                                             00132800
                    AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC          00132900
                    AIF   ('&ZCGPR' EQ '0').ZG29R                       00133000
                    AIF   ('&ZCGPR' LT '2').ZG29Q                       00133100
                    AIF   ('&ZCGPR' LE '12').ZG29R                      00133200
.ZG29Q              ANOP  ,                                             00133300
&ZMS                SETC  '"RSNCODE='                                   00133400
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00133500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00133600
                    MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'       00133700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00133800
.ZG29R              ANOP  ,                                             00133900
.******************************************************************     00134000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00134100
.******************************************************************     00134200
                    ACTR  10000                                         00134300
.*----------------------------------------------------------------***   00134400
.***AH.P02 EXTRA POSITIONALS                                            00134500
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          00134600
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          00134700
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      00134800
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       00134900
.ZGLISTX1           ANOP  ,                                             00135000
&ZCVAL              SETC  ''          ERROR FIELD                       00135100
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00135200
.ZGLIST2            ANOP  ,                                             00135300
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00135400
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          00135500
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00135600
                    AGO   .ZGLIST2                                      00135700
.*                                                                      00135800
.ZGLIST3            ANOP  ,                                             00135900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00136000
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00136100
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00136200
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00136300
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00136400
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00136500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00136600
.ZGLISTX            ANOP  ,                                             00136700
&ZASYSLNDX          SETA  0                                             00136800
.*-------------------------------------------------------------------   00136900
.***AG.MF04 MF=(SLE)                                                    00137000
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00137100
.*******************************************************************    00137200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00137300
.*******************************************************************    00137400
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00137500
.*******************************************************************    00137600
.***AE.01  START OF IWM4MUPD MACRO CODE                                 00137700
.*******************************************************************    00137800
                    LCLC  &M0M0001                 NAME                 00137900
&M0M0001            SETC  '&XLABEL'                SET NAME             00138000
                    AIF   (K'&XLABEL NE 0).XLAB2                        00138100
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00138200
.*                                                                      00138300
.XLAB2              ANOP  ,                                             00138400
                    AIF   ('&XMF' EQ 'L').XLAB3                         00138500
&M0M0001 DS    0H                             IWM4MUPD-0                00138600
.XLAB3              ANOP  ,                                             00138700
.*******************************************************************    00138800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00138900
.*******************************************************************    00139000
              PUSH  PRINT                                               00139100
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00139200
                    PRINT OFF         ++ PR01                           00139300
                    AGO   .ZPRNTXX                                      00139400
.ZPRINTX            PRINT ON                                            00139500
.ZPRNTXX            ANOP  ,                                             00139600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00139700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00139800
.********************************************************************   00139900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00140000
.********************************************************************   00140100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00140200
                      LCLA  &ZOPN1         INVOCATION INDEX             00140300
                      LCLC  &ZOPL(4095)    LABEL                        00140400
                      LCLC  &ZOPO(4095)    OPERATION                    00140500
                      LCLC  &ZOPV(4095)    VALUE                        00140600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00140700
.*                                                                      00140800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00140900
.******************************************************************     00141000
.***AL.L10 IWM4MUPD FMT=LIST MF=S!L PARAMETERS                          00141100
.******************************************************************     00141200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00141300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00141400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00141500
&XMFATTR              SETC  '0D'                                        00141600
.*                                                                      00141700
&ZOPN                 SETA  &ZOPN+1                                     00141800
&ZOPL(&ZOPN)          SETC  ' '                                         00141900
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00142000
&ZOPV(&ZOPN)          SETC  '4,8'                                       00142100
&ZOPN                 SETA  &ZOPN+1                                     00142200
&ZOPL(&ZOPN)          SETC  ' '                                         00142300
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00142400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00142500
&ZOPD(&ZOPN)          SETC  '++ IWM4MUPD ARG PARMS'                     00142600
.*                                                                      00142700
&ZOPN                 SETA  &ZOPN+1                                     00142800
&ZOPL(&ZOPN)          SETC  ' '                                         00142900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00143000
&ZOPV(&ZOPN)          SETC  '1'                                         00143100
&ZOPD(&ZOPN)          SETC  ' '                                         00143200
.*                                                                      00143300
.ZLMFSL2              ANOP  ,                                           00143400
.*-------------------------------------------------------------------   00143500
.***AM.L00  IWM4MUPD FMT=LIST name                                      00143600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00143700
&ZOPN                 SETA &ZOPN+1                                      00143800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00143900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00144000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00144100
&ZOPD(&ZOPN)          SETC '++ IWM4MUPD NAME'                           00144200
.ZLMFSL2M             ANOP  ,                                           00144300
.*-------------------------------------------------------------------   00144400
.***AM.L01  IWM4MUPD FMT=LIST PARAMETERS                                00144500
&ZOPN                 SETA &ZOPN+1                                      00144600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00144700
&ZOPO(&ZOPN)          SETC 'DS'                                         00144800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00144900
&ZOPD(&ZOPN)          SETC '++ IWM4MUPD PARM LIST'                      00145000
.*-------------------------------------------------------------------   00145100
.***AM.L02 XVERSION XL1                                                 00145200
&ZOPN                 SETA &ZOPN+1                                      00145300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00145400
&ZOPO(&ZOPN)          SETC 'DS'                                         00145500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00145600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00145700
.*-------------------------------------------------------------------   00145800
.***AM.L03 XMUPD_OPTIONS BL.16                                          00145900
&ZOPN                 SETA &ZOPN+1                                      00146000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMUPD_OPTIONS'                    00146100
&ZOPO(&ZOPN)          SETC 'DS'                                         00146200
&ZOPV(&ZOPN)          SETC 'BL.16'                                      00146300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00146400
.*                                                                      00146500
&ZOPN                 SETA  &ZOPN+1                                     00146600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEND_FLOW_YES'                   00146700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00146800
&ZOPV(&ZOPN)          SETC  'B''1000000000000000'''                     00146900
&ZOPD(&ZOPN)          SETC  '++ XEND_FLOW.'                             00147000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00147100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00147200
.*                                                                      00147300
&ZOPN                 SETA  &ZOPN+1                                     00147400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAFTER_STRT_YES'                 00147500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00147600
&ZOPV(&ZOPN)          SETC  'B''0100000000000000'''                     00147700
&ZOPD(&ZOPN)          SETC  '++ XAFTER_STRT.'                           00147800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00147900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00148000
.*                                                                      00148100
&ZOPN                 SETA  &ZOPN+1                                     00148200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IWM4MUPD'                        00148300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00148400
&ZOPV(&ZOPN)          SETC  'B''0000000000000001'''                     00148500
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00148600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IWM4MUPD'                     00148700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00148800
.*-------------------------------------------------------------------   00148900
.***AM.L09  XRSV0003 CL1                                                00149000
&ZOPN                 SETA &ZOPN+1                                      00149100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0003'                         00149200
&ZOPO(&ZOPN)          SETC 'DS'                                         00149300
&ZOPV(&ZOPN)          SETC 'CL1'                                        00149400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00149500
.*-------------------------------------------------------------------   00149600
.***AM.L09  XRSV0004 CL4                                                00149700
&ZOPN                 SETA &ZOPN+1                                      00149800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0004'                         00149900
&ZOPO(&ZOPN)          SETC 'DS'                                         00150000
&ZOPV(&ZOPN)          SETC 'CL4'                                        00150100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00150200
.*-------------------------------------------------------------------   00150300
.***AM.L09  XMONTKN BL.32                                               00150400
&ZOPN                 SETA &ZOPN+1                                      00150500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN'                          00150600
&ZOPO(&ZOPN)          SETC 'DS'                                         00150700
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00150800
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN '                              00150900
.*-------------------------------------------------------------------   00151000
.***AM.L09  XMESSAGES_SENT F                                            00151100
&ZOPN                 SETA &ZOPN+1                                      00151200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMESSAGES_SENT'                   00151300
&ZOPO(&ZOPN)          SETC 'DS'                                         00151400
&ZOPV(&ZOPN)          SETC 'F'                                          00151500
&ZOPD(&ZOPN)          SETC '++ &ZXMESSAGES_SENT '                       00151600
.*-------------------------------------------------------------------   00151700
.***AM.L09  XMONTKN64 BL.64                                             00151800
&ZOPN                 SETA &ZOPN+1                                      00151900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN64'                        00152000
&ZOPO(&ZOPN)          SETC 'DS'                                         00152100
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00152200
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN64 '                            00152300
.*-------------------------------------------------------------------   00152400
.***AM.L09 ADDR3164 XEWLM_RCVD_CORR AD                                  00152500
&ZOPN                 SETA &ZOPN+1                                      00152600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEWLM_RCVD_CORR_ADDR3164'         00152700
&ZOPO(&ZOPN)          SETC 'DS'                                         00152800
&ZOPV(&ZOPN)          SETC 'AD'                                         00152900
&ZOPD(&ZOPN)          SETC '++ &ZXEWLM_RCVD_CORR ADDR3164'              00153000
.*-------------------------------------------------------------------   00153100
.***AM.L10 END OF IWM4MUPD LIST PARAMETERS                              00153200
&ZOPN                 SETA &ZOPN+1                                      00153300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00153400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00153500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00153600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00153700
.*                                                                      00153800
&ZOPN                 SETA &ZOPN+1                                      00153900
&ZOPL(&ZOPN)          SETC ' '                                          00154000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00154100
&ZOPV(&ZOPN)          SETC '1'                                          00154200
&ZOPD(&ZOPN)          SETC ' '                                          00154300
.*-------------------------------------------------------------------   00154400
.***AL.L12 IWM4MUPD FMT=LIST MF=S!L PARAMETERS                          00154500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00154600
.*                                                                      00154700
&ZOPN                 SETA  &ZOPN+1                                     00154800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00154900
&ZOPO(&ZOPN)          SETC  'DC'                                        00155000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00155100
&ZOPD(&ZOPN)          SETC  '++ IWM4MUPD ARG PARMS'                     00155200
.*                                                                      00155300
.ZLMFSLX              ANOP  ,                                           00155400
.*-------------------------------------------------------------------   00155500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00155600
&ZPLLEN               SETA 32                                           00155700
.*                                                                      00155800
.******************************************************************     00155900
.***AI.L01 IWM4MUPD FMT=LIST FILL IN PARAMETER AREA                     00156000
.******************************************************************     00156100
                      ACTR  10000                                       00156200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00156300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00156400
&ZCVAL                SETC  'LAE'          XAX MODE                     00156500
.ZIMFXA               ANOP ,                                            00156600
.*                                                                      00156700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00156800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00156900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00157000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00157100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00157200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00157300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00157400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00157500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00157600
&ZOPN                 SETA  &ZOPN+1                                     00157700
&ZOPL(&ZOPN)          SETC  ' '                                         00157800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00157900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00158000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00158100
                      AGO   .ZIMFNX                                     00158200
.*                                                                      00158300
.ZIMFN2               ANOP ,                                            00158400
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00158500
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00158600
&ZOPN                 SETA  &ZOPN+1                                     00158700
&ZOPL(&ZOPN)          SETC  ' '                                         00158800
&ZOPO(&ZOPN)          SETC  'LAE'                                       00158900
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00159000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00159100
                      AGO   .ZIMFNX                                     00159200
.ZIMFNX1              ANOP ,                                            00159300
&ZOPN                 SETA  &ZOPN+1                                     00159400
&ZOPL(&ZOPN)          SETC  ' '                                         00159500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00159600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00159700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00159800
.ZIMFNX               ANOP ,                                            00159900
.********************************************************************   00160000
.***AI.L02 IWM4MUPD FMT=LIST INITIALIZE PARAMETER AREA                  00160100
.********************************************************************   00160200
.***AI.L03 MF=(SLE)                                                     00160300
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00160400
.*                                                                      00160500
&ZOPN                 SETA  &ZOPN+1                                     00160600
&ZOPL(&ZOPN)          SETC  ' '                                         00160700
&ZOPO(&ZOPN)          SETC  'XC'                                        00160800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00160900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00161000
.ZIMFLX               ANOP  ,                                           00161100
.*-------------------------------------------------------------------   00161200
.***AI.L05 XMUPD_OPTIONS BL2                                            00161300
&ZW                   SETC  ''                                          00161400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00161500
.*-------------------------------------------------------------------   00161600
.***AI.L08 XMUPD_OPTIONS "YES"                                          00161700
.***      BL2'1XXXXXXXXXXXXXXX'                                         00161800
         AIF   ('&XEND_FLOW' NE 'YES').ZI3A                             00161900
&ZW                   SETC  '&ZW.1'                                     00162000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00162100
                      AGO   .ZI3C                                       00162200
.*                                                                      00162300
.ZI3A                 ANOP  ,                                           00162400
&ZW                   SETC  '&ZW.0'                                     00162500
.ZI3C                 ANOP  ,                                           00162600
.*-------------------------------------------------------------------   00162700
.***AI.L08 XMUPD_OPTIONS "YES"                                          00162800
.***      BL2'X1XXXXXXXXXXXXXX'                                         00162900
         AIF   ('&XAFTER_STRT' NE 'YES').ZI4A                           00163000
&ZW                   SETC  '&ZW.1'                                     00163100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00163200
                      AGO   .ZI4C                                       00163300
.*                                                                      00163400
.ZI4A                 ANOP  ,                                           00163500
&ZW                   SETC  '&ZW.0'                                     00163600
.ZI4C                 ANOP  ,                                           00163700
.*-------------------------------------------------------------------   00163800
.***AI.L08 XMUPD_OPTIONS "IWM4MUPD"                                     00163900
.***      BL2'XXXXXXXXXXXXXXX1'                                         00164000
&ZW                   SETC  '&ZW.00000000000001'                        00164100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00164200
.*-------------------------------------------------------------------   00164300
.***AI.L10 XMUPD_OPTIONS BL2                                            00164400
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00164500
&ZOPN                 SETA  &ZOPN+1                                     00164600
&ZOPL(&ZOPN)          SETC  ' '                                         00164700
&ZOPO(&ZOPN)          SETC  'OC'                                        00164800
&ZOPV(&ZOPN)          SETC  '1(2,1),=BL2''&ZW'''                        00164900
&ZOPD(&ZOPN)          SETC  '++ 52 BL2'                                 00165000
.ZI5E                 ANOP  ,                                           00165100
.*-------------------------------------------------------------------   00165200
.***AI.L25  XMONTKN XL4                                                 00165300
                      AIF   ('&ZXMONTKN' EQ '').ZI8E                    00165400
                      AIF   ('&ZXMONTKN' EQ 'OUTPUT').ZI8E              00165500
&ZCGPR                SETC  '&XMONTKN'                                  00165600
.*                                                                      00165700
                      AIF   ('&XMONTKN'(1,1) NE '(').ZI8B               00165800
&ZCGPR   SETC  '0('.'&XMONTKN'(2,K'&XMONTKN-2).')'                      00165900
                      AGO   .ZI8D                                       00166000
.ZI8B                 ANOP  ,                                           00166100
.*                                                                      00166200
&ZC                   SETC  '&XMONTKN'(1,1)                             00166300
                      AIF   (T'&ZC NE 'N').ZI8D                         00166400
&ZC                   SETC  '&XMONTKN'                                  00166500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00166600
&ZCGPR                SETC  '=BL4''&XMONTKN'''                          00166700
.*                                                                      00166800
.ZI8D                 ANOP  ,                                           00166900
.*                                                                      00167000
&ZOPN                 SETA  &ZOPN+1                                     00167100
&ZOPL(&ZOPN)          SETC  ' '                                         00167200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00167300
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00167400
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN XMONTKN'                      00167500
.*                                                                      00167600
.ZI8E                 ANOP  ,                                           00167700
.*-------------------------------------------------------------------   00167800
.***AI.L18  XMESSAGES_SENT F                                            00167900
         AIF   ('&XMESSAGES_SENT' NE 'NO_MESSAGES_SENT').ZI9            00168000
&ZXMESSAGES_SENT      SETC  ''             RESET INPUT/OUTPUT           00168100
.ZI9                  ANOP  ,                                           00168200
.*-------------------------------------------------------------------   00168300
.***AI.L25  XMESSAGES_SENT F                                            00168400
                      AIF   ('&ZXMESSAGES_SENT' EQ '').ZI9E             00168500
                      AIF   ('&ZXMESSAGES_SENT' EQ 'OUTPUT').ZI9E       00168600
&ZCGPR                SETC  '&XMESSAGES_SENT'                           00168700
.*                                                                      00168800
                      AIF   ('&XMESSAGES_SENT'(1,1) NE '(').ZI9B        00168900
&ZCGPR   SETC  '0('.'&XMESSAGES_SENT'(2,K'&XMESSAGES_SENT-2).')'        00169000
                      AGO   .ZI9D                                       00169100
.ZI9B                 ANOP  ,                                           00169200
.*                                                                      00169300
&ZC                   SETC  '&XMESSAGES_SENT'(1,1)                      00169400
                      AIF   (T'&ZC NE 'N').ZI9D                         00169500
&ZC                   SETC  '&XMESSAGES_SENT'                           00169600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00169700
&ZCGPR                SETC  '=FL4''&XMESSAGES_SENT'''                   00169800
.*                                                                      00169900
.ZI9D                 ANOP  ,                                           00170000
.*                                                                      00170100
&ZOPN                 SETA  &ZOPN+1                                     00170200
&ZOPL(&ZOPN)          SETC  ' '                                         00170300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00170400
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            00170500
&ZOPD(&ZOPN)          SETC  '++ &ZXMESSAGES_SENT XMESSAGES_SENT'        00170600
.*                                                                      00170700
.ZI9E                 ANOP  ,                                           00170800
.*-------------------------------------------------------------------   00170900
.***AI.L25  XMONTKN64 XL8                                               00171000
                      AIF   ('&ZXMONTKN64' EQ '').ZI10E                 00171100
                      AIF   ('&ZXMONTKN64' EQ 'OUTPUT').ZI10E           00171200
&ZCGPR                SETC  '&XMONTKN64'                                00171300
.*                                                                      00171400
                      AIF   ('&XMONTKN64'(1,1) NE '(').ZI10B            00171500
&ZCGPR   SETC  '0('.'&XMONTKN64'(2,K'&XMONTKN64-2).')'                  00171600
                      AGO   .ZI10D                                      00171700
.ZI10B                ANOP  ,                                           00171800
.*                                                                      00171900
&ZC                   SETC  '&XMONTKN64'(1,1)                           00172000
                      AIF   (T'&ZC NE 'N').ZI10D                        00172100
&ZC                   SETC  '&XMONTKN64'                                00172200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00172300
&ZCGPR                SETC  '=BL8''&XMONTKN64'''                        00172400
.*                                                                      00172500
.ZI10D                ANOP  ,                                           00172600
.*                                                                      00172700
&ZOPN                 SETA  &ZOPN+1                                     00172800
&ZOPL(&ZOPN)          SETC  ' '                                         00172900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00173000
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00173100
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN64 XMONTKN64'                  00173200
.*                                                                      00173300
.ZI10E                ANOP  ,                                           00173400
.*-------------------------------------------------------------------   00173500
.***AI.L18 ADDR3164 XEWLM_RCVD_CORR AD                                  00173600
         AIF   ('&XEWLM_RCVD_CORR' NE 'NO_EWLM_RCVD_CORR').ZI11         00173700
&ZXEWLM_RCVD_CORR     SETC  ''             RESET INPUT/OUTPUT           00173800
.ZI11                 ANOP  ,                                           00173900
.*-------------------------------------------------------------------   00174000
.***AI.L19 ADDR3164 XEWLM_RCVD_CORR AD                                  00174100
                      AIF   ('&ZXEWLM_RCVD_CORR' EQ '').ZI11H           00174200
&ZCLNG                SETC  '&XEWLM_RCVD_CORR'                          00174300
&ZCGPR                SETC  '14'                                        00174400
         AIF   ('&XEWLM_RCVD_CORR'(1,1) EQ '(').ZI11F  IN GPR           00174500
.*                                                                      00174600
&ZOPN                 SETA  &ZOPN+1                                     00174700
&ZOPL(&ZOPN)          SETC  ' '                                         00174800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00174900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00175000
&ZOPD(&ZOPN)          SETC  '++ &ZXEWLM_RCVD_CORR XEWLM_RCVD_CORR'      00175100
.*                                                                      00175200
                      AGO   .ZI11G                                      00175300
.*                                                                      00175400
.ZI11F                ANOP  ,                                           00175500
&ZCGPR   SETC  '&XEWLM_RCVD_CORR'(2,K'&XEWLM_RCVD_CORR-2)               00175600
.*                                                                      00175700
.ZI11G                ANOP  ,                                           00175800
                      AIF   ('&SYSAM64' EQ 'YES').ZI11H1A               00175900
.*                                                                      00176000
&ZOPN                 SETA  &ZOPN+1                                     00176100
&ZOPL(&ZOPN)          SETC  ' '                                         00176200
&ZOPO(&ZOPN)          SETC  'ST'                                        00176300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+24(,1)'                           00176400
&ZOPD(&ZOPN)          SETC  '++ &ZXEWLM_RCVD_CORR XEWLM_RCVD_CORR'      00176500
.*                                                                      00176600
                      AGO   .ZI11H                                      00176700
.ZI11H1A              ANOP  ,                                           00176800
.*                                                                      00176900
&ZOPN                 SETA  &ZOPN+1                                     00177000
&ZOPL(&ZOPN)          SETC  ' '                                         00177100
&ZOPO(&ZOPN)          SETC  'STG'                                       00177200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00177300
&ZOPD(&ZOPN)          SETC  '++ &ZXEWLM_RCVD_CORR XEWLM_RCVD_CORR'      00177400
.*                                                                      00177500
.ZI11H                ANOP  ,                                           00177600
.*-------------------------------------------------------------------   00177700
&ZOPN1                SETA &ZOPN                                        00177800
.*******************************************************************    00177900
.***  PROCESS IWM4MUPD OUTPUT PARAMETERS                                00178000
.*******************************************************************    00178100
                      ACTR  10000                                       00178200
.*******************************************************************    00178300
.***AO.X02  RETURN CODE PROCESSING                                      00178400
.*******************************************************************    00178500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00178600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00178700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00178800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00178900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00179000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00179100
&ZOPN                 SETA  &ZOPN+1                                     00179200
&ZOPL(&ZOPN)          SETC  ' '                                         00179300
&ZOPO(&ZOPN)          SETC  'ST'                                        00179400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00179500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00179600
                      AGO   .ZMRETX                                     00179700
.*                                                                      00179800
.ZMRET2               ANOP  ,                                           00179900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00180000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00180100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00180200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00180300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00180400
&ZOPN                 SETA  &ZOPN+1                                     00180500
&ZOPL(&ZOPN)          SETC  ' '                                         00180600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00180700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00180800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00180900
.ZMRETX               ANOP  ,                                           00181000
.*******************************************************************    00181100
.***AO.X03  REASON CODE PROCESSING                                      00181200
.*******************************************************************    00181300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00181400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00181500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00181600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00181700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00181800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00181900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00182000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00182100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00182200
&ZOPN                 SETA  &ZOPN+1                                     00182300
&ZOPL(&ZOPN)          SETC  ' '                                         00182400
&ZOPO(&ZOPN)          SETC  'ST'                                        00182500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00182600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00182700
                      AGO   .ZMRSNX                                     00182800
.*                                                                      00182900
.ZMRSN2               ANOP  ,                                           00183000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00183100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00183200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00183300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00183400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00183500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00183600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00183700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00183800
&ZOPN                 SETA  &ZOPN+1                                     00183900
&ZOPL(&ZOPN)          SETC  ' '                                         00184000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00184100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00184200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00184300
.ZMRSNX               ANOP  ,                                           00184400
.*******************************************************************    00184500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00184600
.*******************************************************************    00184700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00184800
.*******************************************************************    00184900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00185000
.*******************************************************************    00185100
                      ACTR  10000                                       00185200
.*                                                                      00185300
                      LCLA  &ZLC           COLUMN POSITION              00185400
                      LCLA  &ZOPX          LIST TABLE INDEX             00185500
                      LCLC  &ZLL           LABEL                        00185600
                      LCLC  &ZLOP          OPERATION                    00185700
                      LCLC  &ZLV           VALUE                        00185800
                      LCLC  &ZLD           DESCRIPTION                  00185900
.*                                                                      00186000
&ZOPX                 SETA  1                                           00186100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00186200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00186300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00186400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00186500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00186600
                      AIF   (K'&ZLD LE 0).ZL5                           00186700
&ZLC                  SETA  35             COMMENT COLUMN               00186800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00186900
&ZLC                  SETA  33             COMMMENT COLUMN              00187000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00187100
&ZLV                  SETC  '&ZLV'.' '                                  00187200
                      AGO   .ZL3                                        00187300
.*                                                                      00187400
.ZL4                  ANOP  ,                                           00187500
&ZLV                  SETC  '&ZLV'.' '                                  00187600
.ZL5                  ANOP  ,                                           00187700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00187800
.*                                                                      00187900
&ZLL     &ZLOP &ZLV                                                     00188000
.*                                                                      00188100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00188200
                      AGO   .ZL2           CONTINUE LOOPING             00188300
.*                                                                      00188400
.ZLX                  ANOP  ,                                           00188500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00188600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00188700
         AIF   ('&XEWLM' NE 'YES').Mupd_NoEwlm                     @L0A 00188800
         LCLC  &T_Montkn                                                00188900
.*--------------------------------------------------------------------- 00189000
.* Do we run on HBB7790 or higher                                       00189100
.*--------------------------------------------------------------------- 00189200
         LLGT  14,16(0,0)              Get CVT address                  00189300
         TM    CVTOSLV6-CVT(14),CVTH7790   Test for HBB7790             00189400
         JO    Mupd&SYSNDX._Begin       Branch when Lvl is present @P1C 00189500
         LA    0,IwmRsnCodeBadVersion  HBB7790 is required              00189600
         LA    15,IwmRetCodeInvocError Set Return Code                  00189700
         J     Mupd&SYSNDX._End        Branch to end label         @P1C 00189800
Mupd&SYSNDX._Begin DS 0H                                                00189900
.*--------------------------------------------------------------------- 00190000
.* MONTKN / MONTKN64 - Setup                                            00190100
.*--------------------------------------------------------------------- 00190200
         AIF ('&MONTKN' EQ '').Mupd_Montkn64                            00190300
&T_Montkn SETC '&MONTKN'                                                00190400
         AIF   ('&MONTKN'(1,1) NE '(').Mupd_Montkn31_Code               00190500
&T_Montkn SETC '&MONTKN'(2,K'&MONTKN-2)                                 00190600
&T_Montkn SETC '0(&T_Montkn.)'                                          00190700
.Mupd_Montkn31_Code ANOP                                                00190800
.* R14 is now a valid base displacement                                 00190900
         LLGT  14,&T_Montkn            Fetch 31bit Monitoring Token     00191000
         AGO .Mupd_Montkn_End                                           00191100
.Mupd_Montkn64 ANOP                                                     00191200
&T_Montkn SETC '&MONTKN64'                                              00191300
         AIF   ('&MONTKN64'(1,1) NE '(').Mupd_Montkn64_Code             00191400
&T_Montkn SETC '&MONTKN64'(2,K'&MONTKN-2)                               00191500
&T_Montkn SETC '0(&T_Montkn.)'                                          00191600
.Mupd_Montkn64_Code ANOP                                                00191700
.* R14 is now a valid base displacement                                 00191800
         LG    14,&T_Montkn            Fetch 64bit Monitoring Token     00191900
.Mupd_Montkn_End ANOP                                                   00192000
         LTGR  14,14                   Test the MONTKN value            00192100
         JNZ   Mupd&SYSNDX._EnvPresent Branch when MON env is present   00192200
*                                                                  @P1C 00192300
         LA    0,IwmRsnCodeNoMonenv    Set reason code = No Mon Env     00192400
         LA    15,IwmRetCodeWarning    Set warning return code          00192500
         J     Mupd&SYSNDX._End        Branch to end label         @P1C 00192600
Mupd&SYSNDX._EnvPresent DS 0H                                           00192700
         AIF   ('&SYSAM64' EQ 'YES').Mupd_A64_Switch1              @P0C 00192800
         SAM64                                                          00192900
.Mupd_A64_Switch1 ANOP                                                  00193000
         LLILF 15,PB_ID_CONST          Load eyecatcher into R15    @P1A 00193100
         CL    15,PB_ID-PB(,14)        Test Mon eyecatcher         @P1C 00193200
         JE    Mupd&SYSNDX._EnvOk      Branch when MON env passes  @P1C 00193300
         AIF   ('&SYSAM64' EQ 'YES').Mupd_A31_Switch1              @P0C 00193400
         SAM31                                                          00193500
.Mupd_A31_Switch1 ANOP                                                  00193600
         LA    0,IwmRsnCodeBadMonenv   Set reason code = Bad Mon Env    00193700
         LA    15,IwmRetCodeInvocError SET INVOCATION ERROR RETURN CODE 00193800
         J     Mupd&SYSNDX._End        Branch to end label         @P1C 00193900
Mupd&SYSNDX._EnvOk DS 0H                                                00194000
**  Why do we not store the value into the parameter list?? Dieter      00194100
         ST    1,PB_EWLM_PARMLIST-PB(,14) Store Addr of parmlist        00194200
         MVI   PB_EWLM_REQUEST-PB(14),PB_EWLM_REQUEST_IWM4MUPD          00194300
         AIF   ('&SYSAM64' EQ 'YES').Mupd_A31_Switch2              @P0C 00194400
         SAM31                                                          00194500
.Mupd_A31_Switch2 ANOP                                                  00194600
         LGR   1,14                    GPR1  ->  PB                     00194700
         LLGT  14,16(0,0)              Get CVT Address                  00194800
         LLGT  14,X'8C'(14,0)          Get ECVT Address                 00194900
         LLGT  14,X'C4'(14,0)          Get WMVT Address                 00195000
         AIF   ('&SYSAM64' NE 'YES').Mupd_Amode31                       00195100
         LLGT  15,X'16C'(14,0)         Get M_Upde Entry Point Addr      00195200
         BASR  14,15                   Call 64bit Entry Point           00195300
         AGO   .Mupd_End                                                00195400
.Mupd_Amode31 ANOP                                                      00195500
         LLGTR 1,1                     Clear High Half of R1            00195600
         LLGT  15,X'168'(14,0)         Get M_Upde Entry Point Addr      00195700
         BASR  14,15                   Call 31bit Entry Point           00195800
         AGO   .Mupd_End                                           @L0A 00195900
.Mupd_NoEwlm ANOP                                                  @L0A 00196000
         LA  15,IWMRETCODEOK           Set RC=0                    @L0A 00196100
.Mupd_End ANOP                                                          00196200
Mupd&SYSNDX._End DS 0H                 END LABEL                        00196300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00196400
.ZLINKX               ANOP  ,                                           00196500
.*******************************************************************    00196600
.***AP.X01  FORMAT GENERATED CODE                                       00196700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00196800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00196900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00197000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00197100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00197200
                      AIF   (K'&ZLD LE 0).ZL51                          00197300
&ZLC                  SETA  35             COMMENT COLUMN               00197400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00197500
&ZLC                  SETA  33             COMMENT COLUMN               00197600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00197700
&ZLV                  SETC  '&ZLV'.' '                                  00197800
                      AGO   .ZL31                                       00197900
.*                                                                      00198000
.ZL41                 ANOP  ,                                           00198100
&ZLV                  SETC  '&ZLV'.' '                                  00198200
.ZL51                 ANOP  ,                                           00198300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00198400
.*                                                                      00198500
&ZLL     &ZLOP &ZLV                                                     00198600
.*                                                                      00198700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00198800
                      AGO   .ZL21          CONTINUE LOOPING             00198900
.*                                                                      00199000
.ZLX1                 ANOP  ,                                           00199100
.*******************************************************************    00199200
.***AP.X02  END OF IWM4MUPD MACRO                                       00199300
&ZIWM4MUPD            SETC  'YES'          SET IWM4MUPD USED            00199400
         POP   PRINT                                                    00199500
*                                            IWM4MUPD-0                 00199600
         SPACE 1                                                        00199700
.ZLX2                 ANOP  ,                                           00199800
         MEND                                                           00199900
**********************************************************************/ 00200000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00200100
*%IWM4MUPD: MACRO KEYS(MONTKN,MONTKN64,EWLM,END_FLOW,MESSAGES_SENT,     00200200
*                 EWLM_RCVD_CORR,AFTER_STRT,RETCODE,RSNCODE,PLISTVER,   00200300
*                 MF);                                                  00200400
*  ANS('?'!!MACLABEL!!' '!!'IWM4MUPP '!!MACLIST!!                       00200500
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00200600
*%END IWM4MUPD;                                                         00200700
