*                                                                       00001000
* %DCL CSVEXAA_INCLUDED CHAR EXT;                                       00002000
* %DEACTIVATE CSVEXAA_INCLUDED;                                         00003000
* %IF CSVEXAA_INCLUDED = '' %THEN                                       00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 17002. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         CSVEXAA &DSECT=YES,&LIST=YES,&TITLE=YES,&EXAAHDR=YES,         *00009000
               &EXAAE=COND,&EXAAM=COND,&EXAAM1=COND,&EXAAM2=COND,      *00010000
               &EXAAM3=COND                                             00011000
         GBLC  &CSVEXAA_INCLUDED                                        00012000
         GBLC  &ZCBPRINT                                                00013000
&CSVEXAA_INCLUDED SETC 'YES'                                            00014000
         AIF   ('&LIST' EQ 'NONE').P0                                   00015000
         AIF   ('&TITLE' EQ 'NO').P5                                    00016000
 TITLE   'CSVEXAA  - Exit Answer Area                               '   00017000
.P5      ANOP                                                           00018000
**/ CSVEXAA_1:;                                                         00019000
*/* START OF SPECIFICATIONS ******************************************* 00020000
*                                                                       00021000
*  **PROPRIETARY_STATEMENT********************************************  00022000
***01* PROPRIETARY STATEMENT=                                        *  00023000
*                                                                    *  00024000
*                                                                    *  00025000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  00026000
*   5650-ZOS COPYRIGHT IBM CORP. 1993,2017                           *  00027000
*                                                                    *  00028000
*   STATUS= HBB77B0                                                  *  00029000
*                                                                    *  00030000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  00031000
*                                                                       00032000
*01* DESCRIPTIVE NAME:  Exit Answer Area                                00033000
*02*  ACRONYM:  EXAA                                                    00034000
*                                                                       00035000
*01* MACRO NAME:  CSVEXAA                                               00036000
*                                                                       00037000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00038000
*01* END OF EXTERNAL CLASSIFICATION:                                    00039000
*                                                                       00040000
*01* DSECT NAME:                                                        00041000
*     EXAAHDR                                                           00042000
*     EXAAE                                                             00043000
*     EXAAM                                                             00044000
*     EXAAM1                                                            00045000
*     EXAAM2                                                            00046000
*     EXAAM3                                                            00047000
*                                                                       00048000
*01* COMPONENT:  Contents Supervision (SC1CJ)                           00049000
*                                                                       00050000
*01* EYE-CATCHER:  NONE                                                 00051000
*                                                                       00052000
*01* STORAGE ATTRIBUTES:                                                00053000
*02*  SUBPOOL:  Caller-supplied                                         00054000
*02*  KEY:  Caller-supplied                                             00055000
*02*  RESIDENCY:  Caller-supplied                                       00056000
*                                                                       00057000
*01* SIZE:  Variable                                                    00058000
*                EXAAHDR -- X'0010' bytes                               00059000
*                EXAAE   -- X'0028' bytes                               00060000
*                EXAAM   -- X'0018' bytes                               00061000
*                EXAAM1  -- X'0024' bytes                               00062000
*                EXAAM2  -- X'0034' bytes                               00063000
*                EXAAM3  -- X'003C' bytes                               00064000
*                                                                       00065000
*01* CREATED BY:                                                        00066000
*     Caller and passed as parameter on ANSAREA keyword                 00067000
*      on CSVDYNEX LIST                                                 00068000
*                                                                       00069000
*01* POINTED TO BY:                                                     00070000
*     CSVDYNEX parameter list                                           00071000
*                                                                       00072000
*01* SERIALIZATION:                                                     00073000
*     None required                                                     00074000
*                                                                       00075000
*01* FUNCTION:                                                          00076000
*02* Maps the data returned by the CSVDYNEX macro, LIST request.        00077000
*                                                                       00078000
*02* The returned information consists of a header (EXAAHDR)            00079000
*    which indicates how many exit entries (EXAAE) follow.              00080000
*    EXAAHFIRSTADDR is a pointer to the first EXAAE, and each EXAAE     00081000
*    points to the next (EXAAENEXTADDR). The count provided in header   00082000
*    field EXAAHNumREC should be used to determine the number of        00083000
*    exit entries to examine.                                           00084000
*                                                                       00085000
*02* The caller indicates, via the ExaaVer keyword, whether module      00086000
*    entries are mapped by EXAAM (the default, ExaaVer=0),              00087000
*    EXAAM1 (ExaaVer=1),  EXAAM2 (ExaaVer=2), EXAAM3 (Exaaver=3)        00088000
*                                                                       00089000
*02* Each EXAAE indicates how many module entries                       00090000
*    (EXAAM / EXAAM1 / EXAAM2 / EXAAM3) are associated with it.         00091000
*    EXAAEFIRSTENTADDR is a pointer to the first                        00092000
*    EXAAM/EXAAM1/EXAAM2/EXAAM3, and each EXAAM/EXAAM1/EXAAM2/EXAAM3    00093000
*    points to the next (EXAAMNEXTADDR/EXAAM1NEXTADDR/EXAAM2NEXTADDR/   00094000
*    EXAAM3NEXTADDR). The                                               00095000
*    count provided in exit entry field EXAAENumENT should be used to   00096000
*    determine the number of module entries to examine.                 00097000
*                                                                       00098000
*01* METHOD OF ACCESS:                                                  00099000
*02*  ASM:                                                              00100000
*      CSVEXAA                                                          00101000
*           DSECT=YES!NO  -- Request DSECT definition                   00102000
*           EXAAHDR=YES!NO!COND -- Request Header record mapping        00103000
*                            USING on EXAAHDR                           00104000
*           EXAAE=YES!NO!COND -- Request exit record mapping            00105000
*                            USING on EXAAE                             00106000
*           EXAAM=YES!NO!COND -- Request module record mapping          00107000
*                            USING on EXAAM                             00108000
*           EXAAM1=YES!NO!COND -- Request module record mapping         00109000
*                            USING on EXAAM1                            00110000
*           EXAAM2=YES!NO!COND -- Request module record mapping         00111000
*                            USING on EXAAM2                            00112000
*           EXAAM3=YES!NO!COND -- Request module record mapping         00113000
*                            USING on EXAAM3                            00114000
*     Default: DSECT=YES,EXAAHDR=YES,EXAAE=COND,EXAAM=COND,EXAAM1=COND, 00115000
*              EXAAM2=COND,EXAAM3=COND                                  00116000
*     Notes: name=YES  => expand                                        00117000
*            name=NO   => do not expand                                 00118000
*            name=COND => expand only if DSECT=YES                      00119000
*                                                                       00120000
*02*  PL/AS:                                                            00121000
*      %INCLUDE SYSLIB(CSVEXAA)                                         00122000
*                                                                       00123000
*01* DELETED BY:  Caller                                                00124000
*                                                                       00125000
*01* FREQUENCY:  Created for response to CSVDYNEX LIST                  00126000
*                                                                       00127000
*01* DEPENDENCIES:  None                                                00128000
*                                                                       00129000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00130000
*                                                                       00131000
*01* CHANGE ACTIVITY:                                                   00132000
*   $L0=PE2STCBG ,HBB5510,901112,PD00XB: Exit List Answer Area          00133000
*   $L1=PE2STCSV ,HBB5510,901112,PD00XB: Exit List Answer Area          00134000
*   $D1=DIG0058  ,HBB5510,930107,PD00XB: Jobname/Stoken                 00135000
*   $01=OW10893  ,HBB5520,950110,PD00XB: AnyKey                         00136000
*   $02=OW10893  ,HBB5520,950115,PD00XB: ModAddr, ModLen                00137000
*   $L2=CSV12    ,HBB7770,081105,PD00XB: EXAAM2                         00138000
*   $L3=ME18554   HBB7780 100205 PD00XB: More EXAA                      00139000
*   $L4=ME22674   HBB7790 111007 PD00XB: More EXAA                      00140000
*   $L5=LONGSYM   HBB77A0,130430,PD00XB: EXAAM3                         00141000
*   $L6=RMODE64   HBB77B0 150901 PD00XB: KeepFirst / KeepLast           00142000
*                                                                       00143000
* END OF SPECIFICATIONS *********************************************/  00144000
*% /*                                                                   00145000
.P0      ANOP                                                           00146000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00147000
         AIF   ('&LIST' EQ 'YES').P2                                    00148000
.P1      ANOP                                                           00149000
         PUSH  PRINT                                                    00150000
         PRINT OFF                                                      00151000
.P2      ANOP                                                           00152000
         AIF   ('&EXAAHDR' EQ 'NO').L0002                               00153000
         AIF   ('&DSECT' EQ 'YES').L0003                                00154000
         AIF   ('&EXAAHDR' NE 'YES').L0002                              00155000
EXAAHDR  DS    0F        Header section                                 00156000
         AGO   .L0004                                                   00157000
.L0003   ANOP                                                           00158000
EXAAHDR  DSECT           Header section                                 00159000
.L0004   ANOP                                                           00160000
EXAAHNUMREC DS F         Number of EXAAE entries which follow           00161000
         ORG   EXAAHNUMREC                                              00162000
EXAAH#REC DS   F         Same as EXAAHNumREC                            00163000
EXAAHNUMREM DS F         Number of EXAAE entries which were not        *00164000
                         returned because of insufficient space         00165000
         ORG   EXAAHNUMREM                                              00166000
EXAAH#REM DS   F         Same as EXAAHNumREM                            00167000
EXAAHTLEN DS   F         Total length of answer area needed to contain *00168000
                         all the requested information. This includes  *00169000
                         the area for the records that were returned   *00170000
                         on this call.                                  00171000
EXAAHFIRSTADDR DS A      Address of first EXAAE                         00172000
         ORG   EXAAHFIRSTADDR                                           00173000
EXAAHFIRST@ DS A         Same as EXAAHFIRSTADDR                         00174000
EXAAHDR_LEN EQU *-EXAAHDR                                               00175000
.L0002   ANOP                                                           00176000
         AIF   ('&EXAAE' EQ 'NO').L0005                                 00177000
         AIF   ('&DSECT' EQ 'YES').L0006                                00178000
         AIF   ('&EXAAE' NE 'YES').L0005                                00179000
EXAAE    DS    0F        EXAAE Record data format                       00180000
         AGO   .L0007                                                   00181000
.L0006   ANOP                                                           00182000
EXAAE    DSECT           EXAAE Record data format                       00183000
.L0007   ANOP                                                           00184000
EXAAENEXTADDR DS A       Address of next EXAAE. EXAAHNumREC must be    *00185000
                         used to determine how far along this chain to *00186000
                         go.                                            00187000
         ORG   EXAAENEXTADDR                                            00188000
EXAAENEXT@ DS  A         Same as EXAAENEXTADDR                          00189000
EXAAEFIRSTENTADDR DS A   Address of first EXAAM / EXAAM1 / EXAAM2 /    *00190000
                         EXAAM3 for this EXAAE                          00191000
         ORG   EXAAEFIRSTENTADDR                                        00192000
EXAAEFIRSTENT@ DS A      Same as EXAAEFIRSTENTADDR                      00193000
EXAAENAME DS   CL16      Name of exit                                   00194000
EXAAENUMENT DS H         Number of EXAAM/EXAAM1/EXAAM2/EXAAM3 entries  *00195000
                         associated with this exit                      00196000
         ORG   EXAAENUMENT                                              00197000
EXAAE#ENT DS   H         Same as EXAAENumENT                            00198000
EXAAEAMODE DS  X         Amode: 0 = Amode 31, 1 = Amode 24, 2 = Amode  *00199000
                         Defined. Equates are provided below. They     *00200000
                         begin with EXAAEAMODE_                         00201000
EXAAEKEY DS    X         Defined Key                                    00202000
EXAAEFLAGS DS  B                                                        00203000
*  Bit definitions:                                                     00204000
EXAAEFASTPATHOK EQU X'80' Fast path acceptable for this                 00205000
EXAAEDEFINED EQU X'40'   Whether exit has been explicitly defined or   *00206000
                         simply has had modules added to it             00207000
EXAAEREENTRANTREQUIRED EQU X'20' Reentrant was required for this exit   00208000
EXAAEONEMODULEONLY EQU X'10' This exit is defined to allow only one    *00209000
                         module to be associated with it at a time.     00210000
EXAAEABENDCONSEC EQU X'08' Whether or not the exit requested           *00211000
                         consecutive abends                             00212000
EXAAEANYKEY EQU X'04'    Fast path exit supports any key                00213000
EXAAEEXITTYPEINSTALLATION EQU X'02' This is an installation exit. It   *00214000
                         is possible that neither this nor the program *00215000
                         exit bit is on.                                00216000
EXAAEEXITTYPEPROGRAM EQU X'01' This is a program exit. It is possible  *00217000
                         that neither this nor the installation exit   *00218000
                         bit is on.                                     00219000
EXAAEFLAGS1 DS B                                                        00220000
*  Bit definitions:                                                     00221000
EXAAELOADAPFYES EQU X'80' LOADAPF=YES was requested for this exit       00222000
EXAAEPERSISTJOBSTEPTASK EQU X'40' PERSIST=JOBSTEPTASK was requested    *00223000
                         for this exit                                  00224000
EXAAEPERSISTADDRESSSPACE EQU X'20' PERSIST=ADDRESSSPACE was requested  *00225000
                         for this exit                                  00226000
EXAAEPERSISTIPL EQU X'10' PERSIST=IPL was requested for this exit       00227000
EXAAEDISABLEDCALLOK EQU X'08' DISABLEDCALL=OK was requested for this   *00228000
                         exit                                           00229000
EXAAEKEEPFIRST EQU X'04' Some exit routine is KeepFirst                 00230000
EXAAEKEEPLAST EQU X'02'  Some exit routine is KeepLast                  00231000
         DS    CL2       Reserved                                       00232000
EXAAEABENDNUM DS F       Number of abends allowed                       00233000
EXAAEPRECALLROUTINEADDR DS A 050201                                     00234000
EXAAEAMODE_31 EQU 0      Value for ExaaeAmode indicating AMODE 31       00235000
EXAAEAMODE_24 EQU 1      Value for ExaaeAmode indicating AMODE 24       00236000
EXAAEAMODE_DEFINED EQU 2 Value for ExaaeAmode indicating AMODE DEFINED  00237000
EXAAE_LEN EQU  *-EXAAE                                                  00238000
.L0005   ANOP                                                           00239000
         AIF   ('&EXAAM' EQ 'NO').L0008                                 00240000
         AIF   ('&DSECT' EQ 'YES').L0009                                00241000
         AIF   ('&EXAAM' NE 'YES').L0008                                00242000
.L0009   ANOP                                                           00243000
*                                                                       00244000
*   The EXAAMs are provided in the same order that the exit routines    00245000
*   will be called.                                                     00246000
*                                                                       00247000
*                                                                       00248000
         AIF   ('&DSECT' EQ 'YES').L000A                                00249000
EXAAM    DS    0F        EXAAM Record data format                       00250000
         AGO   .L000B                                                   00251000
.L000A   ANOP                                                           00252000
EXAAM    DSECT           EXAAM Record data format                       00253000
.L000B   ANOP                                                           00254000
EXAAMNEXTADDR DS A       Address of next EXAAM. EXAAENumENT must be    *00255000
                         used to determine how far along this chain to *00256000
                         go.                                            00257000
         ORG   EXAAMNEXTADDR                                            00258000
EXAAMNEXT@ DS  A         Same as EXAAMNEXTADDR                          00259000
EXAAMNAME DS   CL8       Module name                                    00260000
EXAAMFLAGS DS  B                                                        00261000
*  Bit definitions:                                                     00262000
EXAAMACTIVE EQU X'80'    If on, state of module is active               00263000
EXAAMJOBNAMEPROVIDED EQU X'40' If on, jobname filtering was requested.  00264000
EXAAMSTOKENPROVIDED EQU X'20' If on, stoken filtering was requested.    00265000
         DS    CL3       Reserved                                       00266000
EXAAMSTOKEN DS CL8       If ExaamStokenProvided is on, this contains   *00267000
                         the STOKEN.                                    00268000
         ORG   EXAAMSTOKEN                                              00269000
EXAAMJOBNAME DS CL8      If ExaamJobnameProvided is on, this contains  *00270000
                         the jobname.                                   00271000
EXAAM_LEN EQU  *-EXAAM                                                  00272000
.L0008   ANOP                                                           00273000
         AIF   ('&EXAAM1' EQ 'NO').L000C                                00274000
         AIF   ('&DSECT' EQ 'YES').L000D                                00275000
         AIF   ('&EXAAM1' NE 'YES').L000C                               00276000
.L000D   ANOP                                                           00277000
*                                                                       00278000
*   The EXAAM1s are provided in the same order that the exit routines   00279000
*   will be called.                                                     00280000
*                                                                       00281000
*                                                                       00282000
         AIF   ('&DSECT' EQ 'YES').L000E                                00283000
EXAAM1   DS    0F        Exaam1 Record data format                      00284000
         AGO   .L000F                                                   00285000
.L000E   ANOP                                                           00286000
EXAAM1   DSECT           Exaam1 Record data format                      00287000
.L000F   ANOP                                                           00288000
EXAAM1NEXTADDR DS A      Address of next Exaam1. EXAAENumENT must be   *00289000
                         used to determine how far along this chain to *00290000
                         go.                                            00291000
         ORG   EXAAM1NEXTADDR                                           00292000
EXAAM1NEXT@ DS A         Same as EXAAM1NEXTADDR                         00293000
EXAAM1NAME DS  CL8       Module name                                    00294000
EXAAM1FLAGS DS B                                                        00295000
*  Bit definitions:                                                     00296000
EXAAM1ACTIVE EQU X'80'   If on, state of module is active               00297000
EXAAM1JOBNAMEPROVIDED EQU X'40' If on, jobname filtering was           *00298000
                         requested.                                     00299000
EXAAM1STOKENPROVIDED EQU X'20' If on, stoken filtering was requested.   00300000
         DS    CL3       Reserved                                       00301000
EXAAM1STOKEN DS CL8      If Exaam1StokenProvided is on, this contains  *00302000
                         the STOKEN.                                    00303000
         ORG   EXAAM1STOKEN                                             00304000
EXAAM1JOBNAME DS CL8     If Exaam1JobnameProvided is on, this contains *00305000
                         the jobname.                                   00306000
EXAAM1EPADDR DS A        Entry point address of exit module. This was  *00307000
                         either determined by the system or provided   *00308000
                         by the issuer of CSVDYNEX REQUEST=ADD via the *00309000
                         MODADDR keyword. Bit 0 of this word is on if  *00310000
                         the module is to be called in 31-bit AMODE.    00311000
EXAAM1LOADPT DS A        Load point of exit module. When 0, the load   *00312000
                         point is not known. The load point is only    *00313000
                         known when the module was located by the      *00314000
                         system from the lnklst or a user-specified    *00315000
                         data set.                                      00316000
EXAAM1MODLEN DS F        The length of the exit routine load module.   *00317000
                         When 0, no length is known. The length is     *00318000
                         only known when the module was located by the *00319000
                         system from the lnklst or a user-specified    *00320000
                         data set. Note that this is the length of the *00321000
                         load module containing the exit module.        00322000
EXAAM1_LEN EQU *-EXAAM1                                                 00323000
.L000C   ANOP                                                           00324000
         AIF   ('&EXAAM2' EQ 'NO').L0010                                00325000
         AIF   ('&DSECT' EQ 'YES').L0011                                00326000
         AIF   ('&EXAAM2' NE 'YES').L0010                               00327000
.L0011   ANOP                                                           00328000
*                                                                       00329000
*   The EXAAM2s are provided in the same order that the exit routines   00330000
*   will be called.                                                     00331000
*                                                                       00332000
*                                                                       00333000
         AIF   ('&DSECT' EQ 'YES').L0012                                00334000
EXAAM2   DS    0F        Exaam2 Record data format                      00335000
         AGO   .L0013                                                   00336000
.L0012   ANOP                                                           00337000
EXAAM2   DSECT           Exaam2 Record data format                      00338000
.L0013   ANOP                                                           00339000
EXAAM2NEXTADDR DS A      Address of next Exaam2. EXAAENumENT must be   *00340000
                         used to determine how far along this chain to *00341000
                         go.                                            00342000
         ORG   EXAAM2NEXTADDR                                           00343000
EXAAM2NEXT@ DS A         Same as EXAAM2NEXTADDR                         00344000
EXAAM2NAME DS  CL8       Module name                                    00345000
EXAAM2FLAGS DS B                                                        00346000
*  Bit definitions:                                                     00347000
EXAAM2ACTIVE EQU X'80'   If on, state of module is active               00348000
EXAAM2JOBNAMEPROVIDED EQU X'40' If on, jobname filtering was           *00349000
                         requested.                                     00350000
EXAAM2STOKENPROVIDED EQU X'20' If on, stoken filtering was requested.   00351000
EXAAM2ABENDCONSEC EQU X'10' If on, consecutive-abend is active for     *00352000
                         this routine, either because it is active for *00353000
                         the whole exit or for this routine             00354000
EXAAM2REQUESTEDPOS DS X  The POS requested when the exit routine was   *00355000
                         added. Values are as defined by CSVDYNEX      *00356000
                         MF=(L,xxx) with names beginning xxx_xPOS_.    *00357000
                         Due to subsequent EXIT ADD requests, an exit  *00358000
                         routine that was added FIRST (or LAST) might  *00359000
                         not currently be FIRST (or LAST).              00360000
         DS    CL2       Reserved                                       00361000
EXAAM2STOKEN DS CL8      If Exaam2StokenProvided is on, this contains  *00362000
                         the STOKEN.                                    00363000
         ORG   EXAAM2STOKEN                                             00364000
EXAAM2JOBNAME DS CL8     If Exaam2JobnameProvided is on, this contains *00365000
                         the jobname.                                   00366000
EXAAM2EPADDR DS A        Entry point address of exit module. This was  *00367000
                         either determined by the system or provided   *00368000
                         by the issuer of CSVDYNEX REQUEST=ADD via the *00369000
                         MODADDR keyword. Bit 0 of this word is on if  *00370000
                         the module is to be called in 31-bit AMODE.    00371000
EXAAM2LOADPT DS A        Load point of exit module. When 0, the load   *00372000
                         point is not known. The load point is only    *00373000
                         known when the module was located by the      *00374000
                         system from the lnklst or a user-specified    *00375000
                         data set.                                      00376000
EXAAM2MODLEN DS F        The length of the exit routine load module.   *00377000
                         When 0, no length is known. The length is     *00378000
                         only known when the module was located by the *00379000
                         system from the lnklst or a user-specified    *00380000
                         data set. Note that this is the length of the *00381000
                         load module containing the exit module.        00382000
EXAAM2PARAM DS CL8       The parameter associated with the exit        *00383000
                         routine                                        00384000
EXAAM2ABENDNUM DS F      The ABENDNUM parameter associated with the    *00385000
                         exit routine, or if there is none associated, *00386000
                         then the parameter associated with the exit.   00387000
EXAAM2NUMABENDSLEFT DS F The number of abends left before the exit     *00388000
                         routine might be disabled. Initially, or for  *00389000
                         an AbendConsec exit routine after a call      *00390000
                         completes without abend, the value is set to  *00391000
                         the abendnum. The value is decremented on     *00392000
                         each abend. A value of 1 indicates that       *00393000
                         disablement will occur on the next abend.      00394000
EXAAM2_LEN EQU *-EXAAM2                                                 00395000
.L0010   ANOP                                                           00396000
         AIF   ('&EXAAM3' EQ 'NO').L0014                                00397000
         AIF   ('&DSECT' EQ 'YES').L0015                                00398000
         AIF   ('&EXAAM3' NE 'YES').L0014                               00399000
.L0015   ANOP                                                           00400000
*                                                                       00401000
*   The EXAAM3s are provided in the same order that the exit routines   00402000
*   will be called.                                                     00403000
*                                                                       00404000
*                                                                       00405000
         AIF   ('&DSECT' EQ 'YES').L0016                                00406000
EXAAM3   DS    0F        Exaam3 Record data format                      00407000
         AGO   .L0017                                                   00408000
.L0016   ANOP                                                           00409000
EXAAM3   DSECT           Exaam3 Record data format                      00410000
.L0017   ANOP                                                           00411000
EXAAM3NEXTADDR DS A      Address of next Exaam3. EXAAENumENT must be   *00412000
                         used to determine how far along this chain to *00413000
                         go.                                            00414000
         ORG   EXAAM3NEXTADDR                                           00415000
EXAAM3NEXT@ DS A         Same as EXAAM3NEXTADDR                         00416000
EXAAM3NAME DS  CL8       Module name                                    00417000
EXAAM3FLAGS DS B                                                        00418000
*  Bit definitions:                                                     00419000
EXAAM3ACTIVE EQU X'80'   If on, state of module is active               00420000
EXAAM3JOBNAMEPROVIDED EQU X'40' If on, jobname filtering was           *00421000
                         requested.                                     00422000
EXAAM3STOKENPROVIDED EQU X'20' If on, stoken filtering was requested.   00423000
EXAAM3ABENDCONSEC EQU X'10' If on, consecutive-abend is active for     *00424000
                         this routine, either because it is active for *00425000
                         the whole exit or for this routine             00426000
EXAAM3SERVICEMASKPROVIDED EQU X'08' If on, a Service Mask was provided  00427000
EXAAM3DELETEFORCEYES EQU X'04' If on, the exit routine was added with  *00428000
                         DELETEFORCE=YES                                00429000
EXAAM3REQUESTEDPOS DS X  The POS requested when the exit routine was   *00430000
                         added. Values are as defined by CSVDYNEX      *00431000
                         MF=(L,xxx) with names beginning xxx_xPOS_.    *00432000
                         Due to subsequent EXIT ADD requests, an exit  *00433000
                         routine that was added FIRST (or LAST) might  *00434000
                         not currently be FIRST (or LAST).              00435000
         DS    CL2       Reserved                                       00436000
EXAAM3STOKEN DS CL8      If Exaam3StokenProvided is on, this contains  *00437000
                         the STOKEN.                                    00438000
         ORG   EXAAM3STOKEN                                             00439000
EXAAM3JOBNAME DS CL8     If Exaam3JobnameProvided is on, this contains *00440000
                         the jobname.                                   00441000
EXAAM3EPADDR DS A        Entry point address of exit module. This was  *00442000
                         either determined by the system or provided   *00443000
                         by the issuer of CSVDYNEX REQUEST=ADD via the *00444000
                         MODADDR keyword. Bit 0 of this word is on if  *00445000
                         the module is to be called in 31-bit AMODE.    00446000
EXAAM3LOADPT DS A        Load point of exit module. When 0, the load   *00447000
                         point is not known. The load point is only    *00448000
                         known when the module was located by the      *00449000
                         system from the lnklst or a user-specified    *00450000
                         data set.                                      00451000
EXAAM3MODLEN DS F        The length of the exit routine load module.   *00452000
                         When 0, no length is known. The length is     *00453000
                         only known when the module was located by the *00454000
                         system from the lnklst or a user-specified    *00455000
                         data set. Note that this is the length of the *00456000
                         load module containing the exit module.        00457000
EXAAM3PARAM DS CL8       The parameter associated with the exit        *00458000
                         routine                                        00459000
EXAAM3ABENDNUM DS F      The ABENDNUM parameter associated with the    *00460000
                         exit routine, or if there is none associated, *00461000
                         then the parameter associated with the exit.   00462000
EXAAM3NUMABENDSLEFT DS F The number of abends left before the exit     *00463000
                         routine might be disabled. Initially, or for  *00464000
                         an AbendConsec exit routine after a call      *00465000
                         completes without abend, the value is set to  *00466000
                         the abendnum. The value is decremented on     *00467000
                         each abend. A value of 1 indicates that       *00468000
                         disablement will occur on the next abend.      00469000
EXAAM3SERVICEMASK DS CL8 A 64-bit mask provided by the exit ADDer that *00470000
                         identifies for which calls the exit routine   *00471000
                         is to get control. This corresponds to the    *00472000
                         ServiceID mask of the exit CALLer and the     *00473000
                         exit owner has defined what the bits in the   *00474000
                         mask mean.                                     00475000
EXAAM3_LEN EQU *-EXAAM3                                                 00476000
.L0014   ANOP                                                           00477000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00478000
         AIF   ('&LIST' EQ 'YES').P4                                    00479000
.P3      ANOP                                                           00480000
         POP   PRINT                                                    00481000
.P4      ANOP                                                           00482000
.P_EXIT  ANOP                                                           00483000
         MEND                                                           00484000
**/ CSVEXAA_2:;                                                         00485000
* %CSVEXAA_INCLUDED = 'YES';                                            00486000
* %DCL ZCBPRINT CHAR EXT;                                               00487000
* %DEACTIVATE ZCBPRINT;                                                 00488000
* %DCL CSVEXAA_LIST CHAR EXT;                                           00489000
* %DEACTIVATE CSVEXAA_LIST;                                             00490000
* %IF CSVEXAA_LIST ^= 'NO' &                                            00491000
*    ZCBPRINT ^= 'NO' %THEN                                             00492000
*   %GOTO CSVEXAA_3;                                                    00493000
*   @LIST PUSH NOECHO;                                                  00494000
*   @LIST NOASSEMBLE NOECHO;                                            00495000
*   @LIST OFF C NOECHO;                                                 00496000
* %CSVEXAA_3:;                                                          00497000
*/* Start of PL/X Source                                             */ 00498000
*%IF EXAA_ALET = '' %THEN /*                                     @L1A*/ 00499000
*  %EXAA_ALET = '0';       /*                                    @L1A*/ 00500000
*%EXAA_VIA='';            /*                                     @L1A*/ 00501000
*%IF EXAA_ALET^='0' %THEN  /*                                    @L1A*/ 00502000
*  %EXAA_VIA='VIA(EXAA_ALET)';   /*                              @L1A*/ 00503000
*DCL 1 EXAAHDR BASED EXAA_VIA,      /* Header section            @L1A*/ 00504000
*     2 EXAAHNumREC FIXED(32),/* Number of EXAAE entries which follow   00505000
*                                                                @L1A*/ 00506000
*       3 EXAAH#REC FIXED(32),/* Same as EXAAHNumREC                 */ 00507000
*     2 EXAAHNumREM FIXED(32),/* Number of EXAAE                        00508000
*                             entries which were not returned because   00509000
*                             of insufficient space              @L1A*/ 00510000
*       3 EXAAH#REM FIXED(32),/* Same as EXAAHNumREM                 */ 00511000
*     2 EXAAHTLEN FIXED(32),/* Total length of answer area needed to    00512000
*                             contain all the requested information.    00513000
*                             This includes the area for the records    00514000
*                             that were returned on this call.   @L1A*/ 00515000
*     2 EXAAHFIRSTADDR PTR(31), /* Address of first EXAAE        @L1A*/ 00516000
*       3 EXAAHFIRST@ PTR(31); /* Same as EXAAHFIRSTADDR         @L1A*/ 00517000
*DCL 1 EXAAE BASED EXAA_VIA, /* EXAAE Record data format         @L1A*/ 00518000
*     2 EXAAENEXTADDR PTR(31), /* Address of next EXAAE. EXAAHNumREC    00519000
*               must be used to determine how far along this chain      00520000
*               to go.                                           @L1A*/ 00521000
*       3 EXAAENEXT@ PTR(31), /* Same as EXAAENEXTADDR               */ 00522000
*     2 EXAAEFirstENTADDR PTR(31), /* Address of first EXAAM / EXAAM1   00523000
*                              / EXAAM2 / EXAAM3 for this EXAAE  @L1A*/ 00524000
*       3 EXAAEFirstENT@ PTR(31), /* Same as EXAAEFIRSTENTADDR       */ 00525000
*     2 EXAAENAME CHAR(16),   /* Name of exit                    @L1A*/ 00526000
*     2 EXAAENumENT FIXED(16), /* Number of EXAAM/EXAAM1/EXAAM2/EXAAM3  00527000
*                              entries associated with this exit @L1A*/ 00528000
*       3 EXAAE#ENT FIXED(16), /* Same as EXAAENumENT                */ 00529000
*     2 ExaaeAmode Fixed(8),  /* Amode: 0 = Amode 31, 1 = Amode 24,     00530000
*                                2 = Amode Defined. Equates are         00531000
*                                provided below. They begin with        00532000
*                                EXAAEAMODE_                     @L1A*/ 00533000
*     2 ExaaeKey   Fixed(8),  /* Defined Key                     @L1A*/ 00534000
*     2 ExaaeFlags Bit(8),    /*                                 @L1A*/ 00535000
*       3 ExaaeFastPathOk Bit(1), /* Fast path acceptable for this      00536000
*                                                                @L1A*/ 00537000
*       3 ExaaeDefined Bit(1), /* Whether exit has been explicitly      00538000
*              defined or simply has had modules added to it     @L1A*/ 00539000
*       3 ExaaeReentrantRequired Bit(1), /* Reentrant was required for  00540000
*                             this exit                          @L1A*/ 00541000
*       3 ExaaeOneModuleOnly Bit(1),  /* This exit is defined to allow  00542000
*                     only one module to be associated with it at       00543000
*                     a time.                                    @L1A*/ 00544000
*       3 ExaaeAbendConsec Bit(1), /* Whether or not the exit           00545000
*                     requested consecutive abends               @L1A*/ 00546000
*       3 ExaaeAnyKey Bit(1),     /* Fast path exit supports any key    00547000
*                                                                @01A*/ 00548000
*       3 ExaaeExitTypeInstallation Bit(1),      /* This is an          00549000
*                             installation exit. It is possible that    00550000
*                             neither this nor the program exit         00551000
*                             bit is on.                         @L3A*/ 00552000
*       3 ExaaeExitTypeProgram Bit(1),      /* This is a program        00553000
*                             exit. It is possible that neither this    00554000
*                             nor the installation exit bit is on.      00555000
*                                                                @L3A*/ 00556000
*     2 ExaaeFlags1 Bit(8),   /*                                 @L3A*/ 00557000
*       3 ExaaeLoadAPFYes Bit(1), /* LOADAPF=YES was requested for      00558000
*                             this exit                          @L3A*/ 00559000
*       3 ExaaePersistJobstepTask Bit(1),  /* PERSIST=JOBSTEPTASK was   00560000
*                             requested for this exit            @L3A*/ 00561000
*       3 ExaaePersistAddressSpace Bit(1), /* PERSIST=ADDRESSSPACE was  00562000
*                             requested for this exit            @L3A*/ 00563000
*       3 ExaaePersistIPL Bit(1),  /* PERSIST=IPL was requested for     00564000
*                             this exit                          @L3A*/ 00565000
*       3 ExaaeDisabledCallOK Bit(1), /* DISABLEDCALL=OK was requested  00566000
*                             for this exit                      @L5A*/ 00567000
*       3 ExaaeKeepFirst Bit(1),      /* Some exit routine is           00568000
*                             KeepFirst                          @L6A*/ 00569000
*       3 ExaaeKeepLast Bit(1),       /* Some exit routine is           00570000
*                             KeepLast                           @L6A*/ 00571000
*     2 * Char(2),         /* Reserved                           @L3C*/ 00572000
*     2 ExaaeAbendNum Fixed(31),   /* Number of abends allowed   @L1A*/ 00573000
*     2 ExaaePrecallRoutineAddr Ptr(31),  /*                   050201*/ 00574000
*     2 * CHAR(0);         /* Reserved                           @L1A*/ 00575000
*Dcl ExaaeAmode_31 Fixed(8) Constant(0);  /* Value for ExaaeAmode       00576000
*                             indicating AMODE 31                @L1A*/ 00577000
*Dcl ExaaeAmode_24 Fixed(8) Constant(1);  /* Value for ExaaeAmode       00578000
*                             indicating AMODE 24                @L1A*/ 00579000
*Dcl ExaaeAmode_Defined Fixed(8) Constant(2);   /* Value for ExaaeAmode 00580000
*                             indicating AMODE DEFINED           @L1A*/ 00581000
*/* The EXAAMs are provided in the same order that the exit routines    00582000
*   will be called.                                                  */ 00583000
*DCL 1 EXAAM  BASED EXAA_VIA, /* EXAAM Record data format        @L1A*/ 00584000
*     2 EXAAMNEXTADDR PTR(31), /* Address of next EXAAM. EXAAENumENT    00585000
*               must be used to determine how far along this chain      00586000
*               to go.                                           @L1A*/ 00587000
*       3 EXAAMNEXT@ PTR(31), /* Same as EXAAMNEXTADDR               */ 00588000
*     2 EXAAMNAME CHAR(8), /* Module name                        @L1A*/ 00589000
*     2 EXAAMFLAGS BIT(8), /*                                    @L1A*/ 00590000
*       3 EXAAMACTIVE BIT(1),  /* If on, state of module is active      00591000
*                                                                @L1A*/ 00592000
*       3 ExaamJobnameProvided BIT(1),  /* If on, jobname filtering     00593000
*                                 was requested.                 @D1A*/ 00594000
*       3 ExaamStokenProvided BIT(1),  /* If on, stoken filtering       00595000
*                                 was requested.                 @D1A*/ 00596000
*     2 * CHAR(3),         /* Reserved                           @L1A*/ 00597000
*     2 ExaamStoken CHAR(8),  /*                                        00598000
*                     If ExaamStokenProvided is on, this contains       00599000
*                     the STOKEN.                                @D1A*/ 00600000
*       3 ExaamJobname CHAR(8), /* If ExaamJobnameProvided is on,       00601000
*                     this contains the jobname.                 @D1A*/ 00602000
*     2 * CHAR(0);         /* Reserved                           @L1A*/ 00603000
*                                                                       00604000
*/* The EXAAM1s are provided in the same order that the exit routines   00605000
*   will be called.                                                  */ 00606000
*DCL 1 Exaam1 BASED EXAA_VIA, /* Exaam1 Record data format       @02P*/ 00607000
*     2 Exaam1NEXTADDR PTR(31), /* Address of next Exaam1. EXAAENumENT  00608000
*             must be used to determine how far along this chain to go. 00609000
*                                                                @02P*/ 00610000
*       3 Exaam1NEXT@ PTR(31), /* Same as EXAAM1NEXTADDR             */ 00611000
*     2 Exaam1NAME CHAR(8), /* Module name                       @02P*/ 00612000
*     2 Exaam1FLAGS BIT(8), /*                                   @02P*/ 00613000
*       3 Exaam1ACTIVE BIT(1), /* If on, state of module is active      00614000
*                                                                @02P*/ 00615000
*       3 Exaam1JobnameProvided BIT(1), /* If on, jobname filtering     00616000
*                                 was requested.                 @02P*/ 00617000
*       3 Exaam1StokenProvided BIT(1), /* If on, stoken filtering       00618000
*                                 was requested.                 @02P*/ 00619000
*     2 * CHAR(3),         /* Reserved                           @02P*/ 00620000
*     2 Exaam1Stoken CHAR(8), /*                                        00621000
*                     If Exaam1StokenProvided is on, this contains      00622000
*                     the STOKEN.                                @02P*/ 00623000
*       3 Exaam1Jobname CHAR(8), /* If Exaam1JobnameProvided is on,     00624000
*                     this contains the jobname.                 @02P*/ 00625000
*     2 Exaam1EpAddr PTR(31),  /* Entry point address of exit           00626000
*               module. This was either determined by                   00627000
*               the system or provided by the                           00628000
*               issuer of CSVDYNEX REQUEST=ADD via the MODADDR          00629000
*               keyword. Bit 0 of this word is on if the module         00630000
*               is to be called in 31-bit AMODE.                 @02A*/ 00631000
*     2 Exaam1LoadPt PTR(31),  /* Load point of exit module.            00632000
*               When 0, the load point is not known. The load           00633000
*               point is only known when the module was located         00634000
*               by the system from the lnklst or a user-specified       00635000
*               data set.                                        @02A*/ 00636000
*     2 Exaam1ModLen FIXED(31), /* The length of the exit routine       00637000
*               load module. When 0,                                    00638000
*               no length is known. The length is only known when the   00639000
*               module was located by the system from the lnklst or     00640000
*               a user-specified data set. Note that this is the        00641000
*               length of the load module containing the exit           00642000
*               module.                                          @02A*/ 00643000
*     2 * CHAR(0);         /* Reserved                           @02P*/ 00644000
*                                                                       00645000
*/* The EXAAM2s are provided in the same order that the exit routines   00646000
*   will be called.                                                  */ 00647000
*DCL 1 Exaam2 BASED EXAA_VIA, /* Exaam2 Record data format       @L2P*/ 00648000
*     2 Exaam2NEXTADDR PTR(31), /* Address of next Exaam2. EXAAENumENT  00649000
*             must be used to determine how far along this chain to go. 00650000
*                                                                @02P*/ 00651000
*       3 Exaam2NEXT@ PTR(31), /* Same as EXAAM2NEXTADDR             */ 00652000
*     2 Exaam2NAME CHAR(8), /* Module name                       @L2P*/ 00653000
*     2 Exaam2FLAGS BIT(8), /*                                   @L2P*/ 00654000
*       3 Exaam2ACTIVE BIT(1), /* If on, state of module is active      00655000
*                                                                @L2P*/ 00656000
*       3 Exaam2JobnameProvided BIT(1), /* If on, jobname filtering     00657000
*                                 was requested.                 @L2P*/ 00658000
*       3 Exaam2StokenProvided BIT(1), /* If on, stoken filtering       00659000
*                                 was requested.                 @L2P*/ 00660000
*       3 Exaam2AbendConsec BIT(1),    /* If on, consecutive-abend      00661000
*               is active for this routine, either because it is        00662000
*               active for the whole exit or for this routine    @L4A*/ 00663000
*     2 Exaam2RequestedPOS FIXED(8),  /* The POS requested when         00664000
*               the exit routine was added. Values are as defined       00665000
*               by CSVDYNEX MF=(L,xxx) with names beginning             00666000
*               xxx_xPOS_. Due to subsequent EXIT ADD requests,         00667000
*               an exit routine that was added FIRST (or LAST) might    00668000
*               not currently be FIRST (or LAST).                @L3A*/ 00669000
*     2 * CHAR(2),         /* Reserved                           @L3C*/ 00670000
*     2 Exaam2Stoken CHAR(8), /*                                        00671000
*                     If Exaam2StokenProvided is on, this contains      00672000
*                     the STOKEN.                                @L2P*/ 00673000
*       3 Exaam2Jobname CHAR(8), /* If Exaam2JobnameProvided is on,     00674000
*                     this contains the jobname.                 @L2P*/ 00675000
*     2 Exaam2EpAddr PTR(31),  /* Entry point address of exit           00676000
*               module. This was either determined by                   00677000
*               the system or provided by the                           00678000
*               issuer of CSVDYNEX REQUEST=ADD via the MODADDR          00679000
*               keyword. Bit 0 of this word is on if the module         00680000
*               is to be called in 31-bit AMODE.                 @L2P*/ 00681000
*     2 Exaam2LoadPt PTR(31),  /* Load point of exit module.            00682000
*               When 0, the load point is not known. The load           00683000
*               point is only known when the module was located         00684000
*               by the system from the lnklst or a user-specified       00685000
*               data set.                                        @L2P*/ 00686000
*     2 Exaam2ModLen FIXED(31), /* The length of the exit routine       00687000
*               load module. When 0,                                    00688000
*               no length is known. The length is only known when the   00689000
*               module was located by the system from the lnklst or     00690000
*               a user-specified data set. Note that this is the        00691000
*               length of the load module containing the exit           00692000
*               module.                                          @L2P*/ 00693000
*     2 Exaam2Param Char(8),    /* The parameter associated with        00694000
*               the exit routine                                 @L2A*/ 00695000
*     2 Exaam2AbendNum Fixed(31),  /* The ABENDNUM parameter associated 00696000
*               with the exit routine, or if there is none associated,  00697000
*               then the parameter associated with the exit.     @L4A*/ 00698000
*     2 Exaam2NumAbendsLeft Fixed(31), /* The number of abends left     00699000
*               before the exit routine might be disabled.              00700000
*               Initially, or for an AbendConsec exit routine after a   00701000
*               call completes without abend, the value is set to the   00702000
*               abendnum. The value is decremented on each abend.       00703000
*               A value of 1 indicates that disablement will occur      00704000
*               on the next abend.                               @L4A*/ 00705000
*     2 * CHAR(0);         /* Reserved                           @L2P*/ 00706000
*                                                                       00707000
*/* The EXAAM3s are provided in the same order that the exit routines   00708000
*   will be called.                                                  */ 00709000
*DCL 1 EXAAM3 BASED EXAA_VIA, /* Exaam3 Record data format       @L5P*/ 00710000
*     2 Exaam3NEXTADDR PTR(31), /* Address of next Exaam3. EXAAENumENT  00711000
*             must be used to determine how far along this chain to go. 00712000
*                                                                @02P*/ 00713000
*       3 Exaam3NEXT@ PTR(31), /* Same as EXAAM3NEXTADDR             */ 00714000
*     2 Exaam3NAME CHAR(8), /* Module name                       @L5P*/ 00715000
*     2 Exaam3FLAGS BIT(8), /*                                   @L5P*/ 00716000
*       3 Exaam3ACTIVE BIT(1), /* If on, state of module is active      00717000
*                                                                @L5P*/ 00718000
*       3 Exaam3JobnameProvided BIT(1), /* If on, jobname filtering     00719000
*                                 was requested.                 @L5P*/ 00720000
*       3 Exaam3StokenProvided BIT(1), /* If on, stoken filtering       00721000
*                                 was requested.                 @L5P*/ 00722000
*       3 Exaam3AbendConsec BIT(1),    /* If on, consecutive-abend      00723000
*               is active for this routine, either because it is        00724000
*               active for the whole exit or for this routine    @L5P*/ 00725000
*       3 Exaam3ServiceMaskProvided BIT(1), /* If on, a Service Mask    00726000
*                                 was provided                   @L5A*/ 00727000
*       3 Exaam3DeleteForceYes BIT(1), /* If on, the exit routine was   00728000
*                                 added with DELETEFORCE=YES     @L5A*/ 00729000
*     2 Exaam3RequestedPOS FIXED(8),  /* The POS requested when         00730000
*               the exit routine was added. Values are as defined       00731000
*               by CSVDYNEX MF=(L,xxx) with names beginning             00732000
*               xxx_xPOS_. Due to subsequent EXIT ADD requests,         00733000
*               an exit routine that was added FIRST (or LAST) might    00734000
*               not currently be FIRST (or LAST).                @L5P*/ 00735000
*     2 * CHAR(2),         /* Reserved                           @L5P*/ 00736000
*     2 Exaam3Stoken CHAR(8), /*                                        00737000
*                     If Exaam3StokenProvided is on, this contains      00738000
*                     the STOKEN.                                @L5P*/ 00739000
*       3 Exaam3Jobname CHAR(8), /* If Exaam3JobnameProvided is on,     00740000
*                     this contains the jobname.                 @L5P*/ 00741000
*     2 Exaam3EpAddr PTR(31),  /* Entry point address of exit           00742000
*               module. This was either determined by                   00743000
*               the system or provided by the                           00744000
*               issuer of CSVDYNEX REQUEST=ADD via the MODADDR          00745000
*               keyword. Bit 0 of this word is on if the module         00746000
*               is to be called in 31-bit AMODE.                 @L5P*/ 00747000
*     2 Exaam3LoadPt PTR(31),  /* Load point of exit module.            00748000
*               When 0, the load point is not known. The load           00749000
*               point is only known when the module was located         00750000
*               by the system from the lnklst or a user-specified       00751000
*               data set.                                        @L5P*/ 00752000
*     2 Exaam3ModLen FIXED(31), /* The length of the exit routine       00753000
*               load module. When 0,                                    00754000
*               no length is known. The length is only known when the   00755000
*               module was located by the system from the lnklst or     00756000
*               a user-specified data set. Note that this is the        00757000
*               length of the load module containing the exit           00758000
*               module.                                          @L5P*/ 00759000
*     2 Exaam3Param Char(8),    /* The parameter associated with        00760000
*               the exit routine                                 @L5P*/ 00761000
*     2 Exaam3AbendNum Fixed(31),  /* The ABENDNUM parameter associated 00762000
*               with the exit routine, or if there is none associated,  00763000
*               then the parameter associated with the exit.     @L5P*/ 00764000
*     2 Exaam3NumAbendsLeft Fixed(31), /* The number of abends left     00765000
*               before the exit routine might be disabled.              00766000
*               Initially, or for an AbendConsec exit routine after a   00767000
*               call completes without abend, the value is set to the   00768000
*               abendnum. The value is decremented on each abend.       00769000
*               A value of 1 indicates that disablement will occur      00770000
*               on the next abend.                               @L5P*/ 00771000
*     2 Exaam3ServiceMask Char(8), /* A 64-bit mask provided by the     00772000
*               exit ADDer that identifies for which calls the          00773000
*               exit routine is to get control. This corresponds to     00774000
*               the ServiceID mask of the exit CALLer and the           00775000
*               exit owner has defined what the bits in the mask        00776000
*               mean.                                            @L5A*/ 00777000
*     2 * CHAR(0);         /* Reserved                           @L5P*/ 00778000
*                                                                       00779000
* @LOGIC;                                                               00780000
* #PRAGMA TOOL=CBGEN.                                                   00781000
* #USEORG.                                                              00782000
* #EPRAGMA.                                                             00783000
* @ENDLOGIC;                                                            00784000
*/* End of PL/X Source                                               */ 00785000
* %IF CSVEXAA_LIST ^= 'NO' &                                            00786000
*    ZCBPRINT ^= 'NO' %THEN                                             00787000
*   %GOTO CSVEXAA_4;                                                    00788000
*   @LIST POP NOECHO;                                                   00789000
* %CSVEXAA_4:;                                                          00790000
* %END;                                                                 00791000
