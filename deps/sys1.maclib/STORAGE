* %       GOTO PLSSKIP;                                                 00010000
*/********************************************************************/ 00020000
*/*                                                                  */ 00030000
*/* MACRO: STORAGE                                                   */ 00040000
*/*                                                                  */ 00050000
*/*01* PROPRIETARY STATEMENT=                                        */ 00060000
*/***PROPRIETARY_STATEMENT********************************************/ 00070000
*/*                                                                  */ 00080000
*/*                                                                  */ 00090000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00100000
*/* 5650-ZOS COPYRIGHT IBM CORP. 1988, 2021                          */ 00110000
*/*                                                                  */ 00120000
*/* STATUS= HBB77D0                                                  */ 00130000
*/*                                                                  */ 00140000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00150000
*/*                                                                  */ 00160000
*/*01* EXTERNAL CLASSIFICATION:                                      */ 00170000
*/*02* PI: BASE                                                      */ 00180000
*/*02* NONE: FIELDS                                                  */ 00190000
*/*          FLAGVALUE                                               */ 00200000
*/*          AR15VALUE                                               */ 00210000
*/*          AR1VALUE                                                */ 00220000
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00230000
*/*                                                                  */ 00240000
*/* FUNCTION: INTERFACE TO STORAGE ROUTINES                          */ 00250000
*/*                                                                  */ 00260000
*/* SYNTAX: STORAGE OBTAIN!RELEASE                                   */ 00270000
*/*                <,COND=YES!NO>                                    */ 00280000
*/*                <INADDR=VARIABLE1>                                */ 00290000
*/*                <,ADDR=RX-TYPE ADDRESS!REGISTER(1),(2)-(12)>  @D3C*/ 00300000
*/*                <,ALET=SYMBOL!DECIMAL DIGIT                       */ 00310000
*/*                       !ACCESS REGISTER(1),(2)-(12)>              */ 00320000
*/*                <,LENGTH=(LENGTH1=SYMBOL!DECIMAL DIGIT!           */ 00330000
*/*                              REGISTER(0),(2)-(12))               */ 00340000
*/*                         (,LENGTH2=SYMBOL!DECIMAL VALUE!          */ 00350000
*/*                              REGISTER(1),(2)-(12))>              */ 00360000
*/*                <,SP=DECIMAL NUMBER!REGISTER(15),(2)-(12)>        */ 00370000
*/*                <,BNDRY=DBLWD!PAGE>                               */ 00380000
*/*                <,KEY=DECIMAL NUMBER!REGISTER(2)-(12)>            */ 00390000
*/*                <,LOC=(RES!24!31!EXPLICIT<,ANY>)!                 */ 00400000
*/*                  RES!24!31!EXPLICIT!EXPLICIT,31!EXPLICIT,64! @L9A*/ 00410000
*/*                  EXPLICIT,PAGEFRAMESIZE1MB!                  @L9A*/ 00420000
*/*                  31,PAGEFRAMESIZE1MB>                        @L9A*/ 00430000
*/*                <,LINKAGE=SYSTEM!SVC!BRANCH!GLOBALBRANCH>         */ 00440000
*/*                <,RTCD=SYMBOL!REGISTER(15),(2)-(12)>              */ 00450000
*/*                <,OWNER=HOME!PRIMARY!SECONDARY!SYSTEM>        @L3A*/ 00460000
*/*                <,OWNERASID=DECIMAL NUMBER!REGISTER(2)-(12)>  @PBA*/ 00470000
*/*                            ! RS-TYPE ADDRESS>                @PBA*/ 00480000
*/*                <,CAUB=CURRENT!ADDRSPACE>                     @PBA*/ 00490000
*/*                <,TCBADDR=RS-TYPE ADDRESS ! REGISTER(2)-(12)> @D4A*/ 00500000
*/*                <,CHECKZERO=YES!NO>                           @D5A*/ 00510000
*/*                <,BACK=BYSPT!NONE!ALL>                        @PBA*/ 00520000
*/*                <,FIX=NONE!SHORT!LONG>                        @PBA*/ 00530000
*/*                <,STARTBDY=value>                             @L8A*/ 00540000
*/*                <,CONTBDY=value>                              @L8A*/ 00550000
*/*                <,EXECUTABLE= YES ! NO                        @A5A*/ 00560000
*/*                <,RELATED=ANY VALID MACRO KEYWORD SPECIFIED>      */ 00570000
*/*                                                                  */ 00580000
*/*                                                                  */ 00590000
*/* NOTE: THE DEFAULT FOR THE ALET OPERAND IS '0'                    */ 00600000
*/*       THE DEFAULT FOR THE BNDRY OPERAND IS 'DBLWD'               */ 00610000
*/*       THE DEFAULT FOR THE COND OPERAND IS 'NO'                   */ 00620000
*/*       THE DEFAULT FOR THE KEY OPERAND IS '0'                     */ 00630000
*/*       THE DEFAULT FOR THE LINKAGE OPERAND IS 'SYSTEM'            */ 00640000
*/*       THE DEFAULT FOR THE LOC OPERAND IS 'RES'                   */ 00650000
*/*       THE DEFAULT FOR THE SP OPERAND IS '0'                      */ 00660000
*/*       THE DEFAULT FOR THE OWNER OPERAND IS 'HOME'            @L3A*/ 00670000
*/*       The default for the BACK operand is 'BYSPT'            @PBA*/ 00680000
*/*       The default for the FIX operand is 'NONE'              @PBA*/ 00690000
*/*       The default for the CAUB operand is 'CURRENT'          @PBA*/ 00700000
*/*       THE DEFAULT FOR THE CHECKZERO OPERAND IS 'NO'          @D5A*/ 00710000
*/*       The default for the EXECUTABLE operand is 'YES'        @A5A*/ 00720000
*/*       BNDRY OPERAND IS NOT VALID WITH RELEASE                    */ 00730000
*/*       CONTBDY PARAMETER IS NOT VALID WITH RELEASE            @L8A*/ 00740000
*/*       STARTBDY PARAMETER IS NOT VALID WITH RELEASE           @L8A*/ 00750000
*/*       CONTBDY PARAMETER IS NOT VALID WITH VARIABLE           @L8A*/ 00760000
*/*       STARTBDY PARAMETER IS NOT VALID WITH VARIABLE          @L8A*/ 00770000
*/*       CONTBDY PARAMETER IS NOT VALID WITH LOC=EXPLICIT       @L8A*/ 00780000
*/*       STARTBDY PARAMETER IS NOT VALID WITH LOC=EXPLICIT      @L8A*/ 00790000
*/*       CONTBDY PARAMETER IS NOT VALID WITH BNDRY              @L8A*/ 00800000
*/*       STARTBDY PARAMETER IS NOT VALID WITH BNDRY             @L8A*/ 00810000
*/*       OWNER PARAMETER IS NOT VALID WITH RELEASE              @L3A*/ 00820000
*/*       CHECKZERO PARAMETER IS NOT VALID WITH RELEASE          @D5A*/ 00830000
*/*       BACK parameter is not valid with RELEASE               @PBA*/ 00840000
*/*       FIX parameter is not valid with release                @PBA*/ 00850000
*/*       LOC OPERAND IS NOT VALID WITH RELEASE                      */ 00860000
*/*       CALLRKY OPERAND IS NOT VALID WITH KEY                  @L2A*/ 00870000
*/*       RTCD OPERAND IS NOT VALID WITH both COND=NO            @D5C*/ 00880000
*/*         and CHECKZERO=NO                                     @D5C*/ 00890000
*/*       SP OPERAND IS REQUIRED WHEN KEY IS SPECIFIED               */ 00900000
*/*       BNDRY OPERAND IS NOT VALID WITH LOC=EXPLICIT           @L4A*/ 00910000
*/*       LOC=EXPLICIT REQUIRED WITH INADDR                      @P7C*/ 00920000
*/*       INADDR OPERAND IS NOT VALID WITH RELEASE               @L4A*/ 00930000
*/*       OWNER required with OWNERASID                          @PBA*/ 00940000
*/*       OWNER required with CAUB                               @PBA*/ 00950000
*/*       OWNERASID parameter is not valid with ALET             @PBA*/ 00960000
*/*       OWNERASID parameter is not valid with RELEASE          @PBA*/ 00970000
*/*       PAGEFRAMESIZE1MB only Valid with EXPLICIT or 31        @L9A*/ 00980000
*/*                                                                  */ 01000000
*/* !KEYWORDS->!   ! L ! L !   !   !   !   !   ! L !   !   ! R !C! ! */ 01010000
*/* !          !   ! E ! E !   !   !   !   !   ! I !   !   ! E !A!I! */ 01020000
*/* !          !   ! N ! N !   !   ! B !   !   ! N !   !   ! L !L!N! */ 01030000
*/* !          ! C ! G ! G !   ! A ! N !   !   ! K ! A ! R ! A !L!A! */ 01040000
*/* !          ! O ! T ! T !   ! L ! D ! K ! L ! A ! D ! T ! T !R!D! */ 01050000
*/* !          ! N ! H ! H ! S ! E ! R ! E ! O ! G ! D ! C ! E !K!D! */ 01060000
*/* !          ! D !(1)!(2)! P ! T ! Y ! Y ! C ! E ! R ! D ! D !Y!R! */ 01070000
*/* !__________!___!___!___!___!___!___!___!___!___!___!___!___!_!_! */ 01080000
*/* !OBTAIN    ! O ! R ! O ! O ! O ! O ! O ! O ! O ! O ! O ! O !O!O! */ 01090000
*/* !__________!___!___!___!___!___!___!___!___!___!___!___!___!_!_! */ 01100000
*/* !RELEASE   ! O ! R ! I ! O ! O ! E ! O ! E ! O ! R ! O ! O !O!E! */ 01110000
*/* !          !   !(*)!   !(*)!   !   !   !   !   !(*)!   !   ! ! ! */ 01120000
*/* !__________!___!___!___!___!___!___!___!___!___!___!___!___!_!_! */ 01130000
*/*                                                                  */ 01140000
*/* !KEYWORDS->!   ! T ! C ! C ! O ! B ! F ! E !   !   !   !   ! ! ! */ 01150000
*/* !          !   ! C ! H ! A ! W ! A ! I ! X !   !   !   !   ! ! ! */ 01160000
*/* !          ! O ! B ! E ! U ! N ! C ! X ! E !   !   !   !   ! ! ! */ 01170000
*/* !          ! W ! A ! C ! B ! E ! K !   ! C !   !   !   !   ! ! ! */ 01180000
*/* !          ! N ! D ! K !   ! R !   !   ! U !   !   !   !   ! ! ! */ 01190000
*/* !          ! E ! D ! Z !   ! A !   !   ! T !   !   !   !   ! ! ! */ 01200000
*/* !          ! R ! R ! E !   ! S !   !   ! A !   !   !   !   ! ! ! */ 01210000
*/* !          !   !   ! R !   ! I !   !   ! B !   !   !   !   ! ! ! */ 01220000
*/* !          !   !   ! O !   ! D !   !   ! L !   !   !   !   ! ! ! */ 01230000
*/* !          !   !   !   !   !   !   !   ! E !   !   !   !   ! ! ! */ 01240000
*/* !__________!___!___!___!___!___!___!___!___!___!___!___!___!_!_! */ 01250000
*/* !OBTAIN    ! O ! O ! O ! O ! O ! O ! O ! O !   !   !   !   ! ! ! */ 01260000
*/* !__________!___!___!___!___!___!___!___!___!___!___!___!___!_!_! */ 01270000
*/* !RELEASE   ! E ! O ! E ! E ! E ! E ! E ! O !   !   !   !   ! ! ! */ 01271000
*/* !          !   !   !   !   !   !   !   !   !   !   !   !   ! ! ! */ 01290000
*/* !__________!___!___!___!___!___!___!___!___!___!___!___!___!_!_! */ 01300000
*/*                                                                  */ 01310000
*/*                                                                  */ 01320000
*/*            E = ERROR IF SPECIFIED                                */ 01330000
*/*            I = IGNORED                                           */ 01340000
*/*            O = OPTIONAL                                          */ 01350000
*/*            R = REQUIRED                                          */ 01360000
*/*           (1)= SINGLE LENGTH REQUEST OR MAXIMUM LENGTH REQUEST   */ 01370000
*/*           (2)= MINIMUM LENGTH REQUEST                            */ 01380000
*/*           (*)= For subpool release, SP must be specified without */ 01390000
*/*                ADDR and LENGTH.                                  */ 01400000
*/*                For a "normal" release (i.e. not a subpool        */ 01410000
*/*                  release),                                       */ 01420000
*/*                - ADDR AND LENGTH ARE REQUIRED,                   */ 01430000
*/*                  AND SP IS OPTIONAL.                             */ 01440000
*/*                                                                  */ 01450000
*/* Valid uses of registers to pass the subpool and key follow.      */ 01460000
*/* (All others are not valid)                                       */ 01470000
*/*                                                                  */ 01480000
*/* Valid use #1:    ------------------------------------------------*/ 01490000
*/*                                                                  */ 01500000
*/* Reg X:  xxxx xxxx  xxxx xxxx  xxxx xxxx KKKK xxxx                */ 01510000
*/* Reg Y:  xxxx xxxx  xxxx xxxx  xxxx xxxx SSSS SSSS                */ 01520000
*/*                                                                  */ 01530000
*/* Each 'x' represents 1 bit.                                       */ 01540000
*/* KKKK represents the key, SSSS SSSS represents the subpool.       */ 01550000
*/* Reg X can be any of the following registers: 2-12, 15.           */ 01560000
*/* Reg Y can be any of the following registers: 2-12, 15.           */ 01570000
*/* Reg X cannot be the same as reg Y.                               */ 01580000
*/*                                                                  */ 01590000
*/*                                                                  */ 01600000
*/* Valid use #2, both subpool and key in 1 reg:  -------------------*/ 01610000
*/*                                                                  */ 01620000
*/* Reg X:  xxxx xxxx  KKKK xxxx  SSSS SSSS xxxx xxxx                */ 01630000
*/*                                                                  */ 01640000
*/* Each 'x' represents 1 bit.                                       */ 01650000
*/* KKKK represents the key, SSSS SSSS represents the subpool.       */ 01660000
*/* Reg X can be any of the following registers: 2-12, 15.           */ 01670000
*/*                                                                  */ 01680000
*/*                                                                  */ 01690000
*/* INPUT TO 'OBTAIN':                                               */ 01700000
*/*   REGISTER 0  -  LENGTH OF SINGLE LENGTH REQUEST                 */ 01710000
*/*               -  MAXIMUM LENGTH OF VARIABLE LENGTH REQUEST       */ 01720000
*/*   REGISTER 1  -  Input address for EXPLICIT request          @L4C*/ 01730000
*/*               -  MINIMUM LENGTH OF VARIABLE LENGTH REQUEST       */ 01740000
*/*   REGISTER 14 -  PC NUMBER TO INVOKE THE STORAGE ROUTINE         */ 01750000
*/*   REGISTER 15 (REG 3 for Branch LINKAGE)                         */ 01760000
*/*     BYTE 0       FLAGS                                       @L2C*/ 01770000
*/*       BIT 0      RESERVED                                        */ 01780000
*/*       BIT 1      0 ==> CALLRKY NOT SPECIFIED                 @L2A*/ 01790000
*/*                  1 ==> CALLRKY SPECIFIED                     @L2A*/ 01800000
*/*       BIT 2      0 ==> No AR15 stuff                         @L8C*/ 01810000
*/*                  1 ==> AR15 stuff                            @L8C*/ 01820000
*/*       BIT 3      0 ==> Not LOC=(,64)                         @L7C*/ 01830000
*/*                  1 ==> LOC=(,64)                             @L7C*/ 01840000
*/*       BIT 4      0 ==> CHECKZERO=NO specified or defaulted   @D5A*/ 01850000
*/*                  1 ==> CHECKZERO=YES specified               @D5A*/ 01860000
*/*       BIT  5     TCBADDR PROVIDED                            @D4A*/ 01870000
*/*       BITS 6-7   OWNER (00=H, 01=P, 10=S, 11=SY)             @L3A*/ 01880000
*/*     BYTE 1       KEY (BITS 8-11)                                 */ 01890000
*/*     BYTE 2       SUBPOOL NUMBER                                  */ 01900000
*/*     BYTE 3       FLAGS                                           */ 01910000
*/*       BIT 0      0 ==> ALET NOT SPECIFIED                        */ 01920000
*/*                  1 ==> ALET SPECIFIED                            */ 01930000
*/*       BIT 1      WHEN LOC=EXPLICIT CODED                     @L4A*/ 01940000
*/*                  0 ==> LOC=(,24) SPECIFIED                   @L4A*/ 01950000
*/*                  1 ==> LOC=(,31) SPECIFIED OR DEFAULTED      @L4A*/ 01960000
*/*                     OR LOC=(,64) SPECIFIED OR DEFAULTED      @L7A*/ 01970000
*/*                  OTHERWISE                                   @L4A*/ 01980000
*/*                  0 ==> LOC=(,31) NOT SPECIFIED                   */ 01990000
*/*                  1 ==> LOC=(,31) OR LOC=(,64)                @L7C*/ 02000000
*/*       BITS 2-3   00 ==> LOC=RES SPECIFIED                        */ 02010000
*/*                  01 ==> LOC=24 SPECIFIED                         */ 02020000
*/*                  10 ==> LOC=EXPLICIT SPECIFIED                   */ 02030000
*/*                  11 ==> LOC=31 SPECIFIED                         */ 02040000
*/*       BIT 4      0 ==> SINGLE LENGTH REQUEST                     */ 02050000
*/*                  1 ==> VARIABLE LENGTH REQUEST                   */ 02060000
*/*       BIT 5      0 ==> DOUBLEWORD BOUNDARY                       */ 02070000
*/*                  1 ==> PAGE BOUNDARY                             */ 02080000
*/*       BIT 6      0 ==> COND=YES                                  */ 02090000
*/*                  1 ==> COND=NO                                   */ 02100000
*/*       BIT 7      0 ==> OBTAIN REQUEST                            */ 02110000
*/*                  1 ==> RELEASE REQUEST                           */ 02120000
*/*   ACCESS REG0 -  IGNORED IF TCBADDR PARAMETER IS NOT SPECIFIED   */ 02130000
*/*               -  INDICATES THE INPUT TCB                     @D4A*/ 02140000
*/*   ACCESS REG1 -  If ALET parameter is specified,                 */ 02150000
*/*                  indicates which address space private storage   */ 02160000
*/*                  is to be obtained from                          */ 02170000
*/*               -  If OWNERASID parameter is specified,            */ 02180000
*/*                  bytes 2-3 indicate the ASID of the address      */ 02190000
*/*                  space which owns the storage for Common Storage */ 02200000
*/*                  Tracking purposes.                          @PBC*/ 02210000
*/*   ACCESS REG15-  Ignored unless BIT 2 of flags is on         @L8A*/ 02220000
*/*     BYTE 0       Extended Flags                              @L9A*/ 02230000
*/*       BIT 0      Reserved                                    @L9A*/ 02240000
*/*       BIT 1      0 ==> LOC=XX,PAGEFRAMESIZE1MB not specified @L9A*/ 02250000
*/*                  1 ==> LOC=XX,PAGEFRAMESIZE1MB was specified @L9A*/ 02260000
*/*       BIT 2      0 ==> EXECUTABLE(NO) was not specified      @A5A*/ 02270001
*/*                  1 ==> EXECUTABLE(NO) was specified          @A5A*/ 02290000
*/*       BIT 3      0 ==> EXECUTABLE(YES) was not specified     @LAA*/ 02291001
*/*                  1 ==> EXECUTABLE(YES) was specified         @LAA*/ 02292001
*/*     BYTE 1       containing boundary                             */ 02300000
*/*     BYTE 2       starting boundary                               */ 02310000
*/*     BYTE 3       FLAGS                                           */ 02320000
*/*       BIT 0      0 ==> CAUB=CURRENT                          @PBA*/ 02330000
*/*                  1 ==> CAUB=ADDRSPACE                        @PBA*/ 02340000
*/*       BIT 1      0 ==> OWNERASID was not specified           @PBA*/ 02350000
*/*                  1 ==> OWNERASID was specified               @PBA*/ 02360000
*/*       BITS 2-3   00 ==> FIX=NONE                                 */ 02370000
*/*                  01 ==> FIX=SHORT                                */ 02380000
*/*                  10 ==> FIX=LONG                                 */ 02390000
*/*                  11 ==> Reserved                                 */ 02400000
*/*       BITS 4-5   00 ==> BACK=BYSPT   (i.e. by system rules)      */ 02410000
*/*                  01 ==> BACK=NONE                                */ 02420000
*/*                  10 ==> BACK=ALL                                 */ 02430000
*/*                  11 ==> Reserved                                 */ 02440000
*/*       BIT 6      0 ==> byte 1 is ignored                         */ 02450000
*/*                  1 ==> byte 1 contains containing boundary       */ 02460000
*/*       BIT 7      0 ==> byte 2 is ignored                         */ 02470000
*/*                  1 ==> byte 2 contains start boundary            */ 02480000
*/*                                                                  */ 02490000
*/* OUTPUT OF 'OBTAIN':                                              */ 02500000
*/*   REGISTER 0    -  UNPREDICTABLE IF SINGLE LENGTH REQUEST        */ 02510000
*/*                 -  MAXIMUM LENGTH OF VARIABLE LENGTH REQUEST     */ 02520000
*/*   REGISTER 1    -  ADDRESS OF OBTAINED STORAGE                   */ 02530000
*/*   REGISTER 2-13 -  UNCHANGED                                     */ 02540000
*/*   REGISTER 14   -  UNPREDICTABLE                                 */ 02550000
*/*   REGISTER 15   -  Return code for COND=YES or ZEROCHK=YES only  */ 02560000
*/*                    0 ==> VIRTUAL STORAGE WAS ALLOCATED           */ 02570000
*/*                    4 ==> EXPLICIT REQUEST: storage requested @L4C*/ 02580000
*/*                          was outside the region boundaries       */ 02590000
*/*                          OTHERWISE: insufficient contiguous      */ 02600000
*/*                          virtual storage in region to satisfy    */ 02610000
*/*                          request.                                */ 02620000
*/*                    8 ==> REAL STORAGE WAS NOT AVAILABLE          */ 02630000
*/*                          FOR BACKING THE REQUEST OR INTERNAL     */ 02640000
*/*                          STORAGE MANAGEMENT CONTROL BLOCKS       */ 02650000
*/*                    10==> EXPLICIT REQUEST: Storage requested @L4A*/ 02660000
*/*                          is not available for one of four        */ 02670000
*/*                          reasons:                                */ 02680000
*/*                          - some or all is already allocated      */ 02690000
*/*                          - some part of a page containing part   */ 02700000
*/*                            of the storage requested              */ 02710000
*/*                            a) is allocated to another subpool    */ 02720000
*/*                            b) has a real storage attribute which */ 02730000
*/*                               conflicts with the real storage    */ 02740000
*/*                               attribute requested                */ 02750000
*/*                            c) is allocated with a key that is    */ 02760000
*/*                               different from the key of the      */ 02770000
*/*                               storage requested                  */ 02780000
*/*                    14==> Virtual storage was allocated, and  @D5A*/ 02790000
*/*                          the value of every byte of the storage  */ 02800000
*/*                          is X'00'.  This return code value is    */ 02810000
*/*                          returned only if CHECKZERO=YES was      */ 02820000
*/*                          specified.                              */ 02830000
*/*   ACCESS REG0   -  Unpredictable                                 */ 02840000
*/*   ACCESS REG1   -  0 ==> IF ALET PARAMETER IS NOT SPECIFIED      */ 02850000
*/*                 -  ALET OF OBTAINED STORAGE                      */ 02860000
*/*   ACCESS REG 2-13 - Unchanged                                    */ 02870000
*/*   ACCESS REG 14 -  Unpredictable                                 */ 02880000
*/*   ACCESS REG 15 -  Unpredictable                                 */ 02890000
*/*                                                                  */ 02900000
*/* INPUT TO 'RELEASE':                                              */ 02910000
*/*   REGISTER 0  -  LENGTH OF STORAGE BEING RELEASED                */ 02920000
*/*               -  0 ==> RELEASE ENTIRE SUBPOOL                    */ 02930000
*/*   REGISTER 1  -  ADDRESS OF STORAGE BEING RELEASED               */ 02940000
*/*               -  0 ==> RELEASE ENTIRE SUBPOOL                    */ 02950000
*/*   REGISTER 14 -  PC NUMBER TO INVOKE THE STORAGE ROUTINE         */ 02960000
*/*   REGISTER 15 -  (REG 3 for branch linkage)                      */ 02970000
*/*     BYTE 0       FLAGS                                       @L2C*/ 02980000
*/*       BIT 0      RESERVED                                        */ 02990000
*/*       BIT 1      0 ==> CALLRKY NOT SPECIFIED                 @L2A*/ 03000000
*/*                  1 ==> CALLRKY SPECIFIED                     @L2A*/ 03010000
*/*       BITS 2-4   RESERVED                                    @D4C*/ 03020000
*/*       BIT  5     TCBADDR PROVIDED                            @D4A*/ 03030000
*/*       BITS 6-7   RESERVED                                    @D4C*/ 03040000
*/*     BYTE 1       KEY (BITS 8-11)                                 */ 03050000
*/*     BYTE 2       SUBPOOL NUMBER                                  */ 03060000
*/*     BYTE 3       FLAGS                                           */ 03070000
*/*       BIT 0      0 ==> ALET NOT SPECIFIED                        */ 03080000
*/*                  1 ==> ALET SPECIFIED                            */ 03090000
*/*       BITS 1-5   RESERVED                                        */ 03100000
*/*       BIT 6      0 ==> COND=YES                                  */ 03110000
*/*                  1 ==> COND=NO                                   */ 03120000
*/*       BIT 7      0 ==> OBTAIN REQUEST                            */ 03130000
*/*                  1 ==> RELEASE REQUEST                           */ 03140000
*/*   ACCESS REG0 -  IGNORED IF TCBADDR PARAMETER IS NOT SPECIFIED   */ 03150000
*/*               -  INDICATES THE INPUT TCB                     @D4A*/ 03160000
*/*   ACCESS REG1 -  IGNORED IF ALET PARAMETER IS NOT SPECIFIED      */ 03170000
*/*               -  INDICATE WHICH ADDRESS SPACE STORAGE            */ 03180000
*/*                  IS TO BE RELEASED FROM                          */ 03190000
*/*                                                                  */ 03200000
*/* OUTPUT OF 'RELEASE':                                             */ 03210000
*/*   REGISTER 0    -  UNPREDICTABLE                                 */ 03220000
*/*   REGISTER 1    -  UNPREDICTABLE                                 */ 03230000
*/*   REGISTER 2-13 -  UNCHANGED                                     */ 03240000
*/*   REGISTER 14   -  UNPREDICTABLE                                 */ 03250000
*/*   REGISTER 15   -  RETURN CODE FOR COND=YES ONLY                 */ 03260000
*/*                    0 ==> VIRTUAL STORAGE WAS FREED               */ 03270000
*/*                    4 ==> NOT ALL VIRTUAL STORAGE WAS FREED       */ 03280000
*/*                    8 ==> PART OF AREA BEING FREED IS STILL FIXED.*/ 03290000
*/*                          THIS CONDITION CAUSES AN A78 ABEND      */ 03300000
*/*                          UNLESS TCBEOTFM INDICATOR IS ON.        */ 03310000
*/*   ACCESS REG0   -  Unpredictable                                 */ 03320000
*/*   ACCESS REG1   -  Unpredictable                                    03330000
*/*   ACCESS REG 2-13 - Unchanged                                    */ 03340000
*/*   ACCESS REG 14 -  Unpredictable                                 */ 03350000
*/*   ACCESS REG 15 -  Unpredictable                                 */ 03360000
*/*                                                                  */ 03370000
*/* MACROS: NONE                                                     */ 03380000
*/*                                                                  */ 03390000
*/* CHANGE ACTIVITY:                                                 */ 03400000
*/*                                                                  */ 03410000
*/*        $L0=AR,HBB3310,850925,PDFT: STORAGE MACRO                 */ 03420000
*/*        $P1=PC40005,HBB3310,860115,PDFT:                          */ 03430000
*/*            MNOTE MUST BE ISSUED WHEN MORE THAN ONE POSITIONAL    */ 03440000
*/*            PARAMETER IS SPECIFIED                            @P1A*/ 03450000
*/*        $P2=PC40006,HBB3310,860115,PDFT:                          */ 03460000
*/*            MNOTE SHOULD BE ISSUED IN ORDER TO BE CONSISTENT      */ 03470000
*/*            WITH OTHER PARAMETERS.                                */ 03480000
*/*            (I.E. STORAGE OBTAIN,COND=YES,LENGTH=8,ADDR=(,(1)),   */ 03490000
*/*            SP=(,255),RTCD=(,(15))                                */ 03500000
*/*            THERE ARE 2 MNOTES ISSUED FOR THE SP KEYWORD,         */ 03510000
*/*            BUT THERE IS 1 MNOTE ISSUED EACH FOR THE ADDR KEYWORD */ 03520000
*/*            AND THE RTCD KEYWORD.)                            @P2A*/ 03530000
*/*        $P3=PC40009,HBB3310,860115,PDFT:                          */ 03540000
*/*            KEY CAN BE SPECIFIED AS A NUMBER OR                   */ 03550000
*/*            REGISTER (2)-(12)                                 @P3A*/ 03560000
*/*        $D1=DCR3,HBB3310,860219,PDFT:                             */ 03570000
*/*            REGISTER 15 HAS THE FOLLOWING INPUT:                  */ 03580000
*/*            BYTE 0: RESERVED                                      */ 03590000
*/*            BYTE 1: KEY (BITS 8-11)                               */ 03600000
*/*            BYTE 2: SUBPOOL                                       */ 03610000
*/*            BYTE 3: FLAGS                                     @D1A*/ 03620000
*/*        $P4=PC40029,HBB3310,860219,PDFT:                          */ 03630000
*/*            STORAGE UPDATE                                    @P4A*/ 03640000
*/*        $P5=PC40056,HBB3310,860418,PDFT:                          */ 03650000
*/*            DIFFERENT PC NUMBER FOR STORAGE OBTAIN AND            */ 03660000
*/*            STORAGE RELEASE                                   @P5A*/ 03670000
*/*        $P6=PC40014,HBB3310,860728,PDFT:                          */ 03680000
*/*            ONLY ONE MNOTE ISSUED WHEN                            */ 03690000
*/*            'COND=NO' OR DEFAULT OF 'COND' SPECIFIED              */ 03700000
*/*              WITH 'RTCD'                                     @P6A*/ 03710000
*/*        $D2=DCR173,HBB3310,861229,PDT6:  Change the               */ 03720000
*/*            requirements for specifying subpool release.      @D2A*/ 03730000
*/*        $L1=PROD310,HBB3310,870603,PDF5:                          */ 03740000
*/*            C-p-y-right changes                               @L1A*/ 03750000
*/*        $D3=DCR303,HBB3310,880120,PDT6:  Fix documentation        */ 03760000
*/*            about the ADDR parameter (RX-type address).       @D3A*/ 03770000
*/*        OY30573 - Change KEY processing to not alter the          */ 03780000
*/*            register it was passed in and add mnote if any        */ 03790000
*/*            parameter uses an invalid register            @YA30573*/ 03800000
*/*        $L2=TCSAU,  HBB4430,910805,PDXB: CALLRKY                  */ 03810000
*/*        $L3=TCSAU  ,HBB4430,911003,PDXB:  OWNER                   */ 03820000
*/*        $L4=POSIXVSM,HBB4430,910722,PD00BV:                       */ 03830000
*/*            STORAGE OBTAIN BY ADDRESS                         @L4A*/ 03840000
*/*        $P7=PKB2328 ,HBB4430,920429,PD00XB: Fix messages          */ 03850000
*/*        $D4=DKB0110 ,HBB4430,920617,PD00XB: TCBADDR               */ 03860000
*/*        $P8=PIG2882 ,HBB5510,930907,PD00XB: AREA                  */ 03870000
*/*        $L5=DYLPAVSM,JBB6604,960808,PD00XB: FLAGVALUE             */ 03880000
*/*        $D5=DVT0002 ,HBB6606,980119,PD00H6: CHECKZERO             */ 03890000
*/*        $L6=50MEGVSM,JBB6609,990201,PD00XB:                       */ 03900000
*/*        $L7=64BITVSM,HBB7703,980101,PD00XB: CONTBDY,STARTBDY      */ 03910000
*/*        $L8=64BITVSM HBB7703 980101 PD00XB: StartBdy/ContBdy      */ 03920000
*/*        $01=OW45896  HBB7703 000817 PD00XB: Check &BAR15          */ 03930000
*/*        $02=OW46191  HBB7703 000909 PD00XB: Set LOC(,31) when     */ 03940000
*/*                                            LOC(,64)              */ 03950000
*/*        $P9=PX01764 ,HBB7705,010420,PD00XB: ARCHLVL=1             */ 03960000
*/*        $PA=PJK1373  HBB7709 040115 PD00H6: FIX, ASCBADDR         */ 03970000
*/*        $PB=ME05943  HBB7730 060228 PD00H6: OWNERASID, CAUB,      */ 03980000
*/*                                            BACK, FIX, AR1VALUE   */ 03990000
*/*        $PC=ME11943  HBB7750 071110 PD00XB: Some use of LHI       */ 04000000
*/*        $L9=LPAGE31  HBB7780 100105 PD00I6: 31-Bit Large Pages    */ 04010000
*/*        $PD=ME19268  HBB7780 100527 PD00I6: Fix AR15 setting for  */ 04020000
*/*                                            PAGEFRAMESIZE1MB      */ 04030000
*/*        $A5=FP1582   HBB77B0 161104 PD00ED: Non-executable memory */ 04040000
*/*        $LA=W338814  HBB77D0 190918 PD00XB: EXECUTABLE=YES bit    */ 04041000
*/********************************************************************/ 04050000
*/* A - 000000-999999                                                */ 04060000
*/*                                                                     04070000
         MACRO                                                          04080000
&LABEL   STORAGE &TYPE,                                                +04090000
               &COND=,                                                 +04100000
               &INADDR=,                                           @L4A+04110000
               &ADDR=,                                                 +04120000
               &ALET=,                                                 +04130000
               &LENGTH=,                                               +04140000
               &SP=,                                                   +04150000
               &BNDRY=,                                                +04160000
               &KEY=,                                                  +04170000
               &LOC=,                                                  +04180000
               &LINKAGE=,                                              +04190000
               &RTCD=,                                                 +04200000
               &CALLRKY=,                                          @L2A+04210000
               &OWNER=,                                            @L3A+04220000
               &TCBADDR=,                                          @D4A+04230000
               &CHECKZERO=,                                        @D5A+04240000
               &CONTBDY=,                                          @L8A+04250000
               &STARTBDY=,                                         @L8A+04260000
               &FLAGVALUE=,                                        @L8A+04270000
               &AR15VALUE=,                                        @L8A+04280000
               &AR1VALUE=,                                         @PBA+04290000
               &BACK=,                                             @PBA+04300000
               &FIX=,                                              @PBA+04310000
               &OWNERASID=,                                        @PBA+04320000
               &CAUB=,                                             @PBA+04330000
               &EXECUTABLE=,                                       @A5A+04340000
               &RELATED=                                                04350000
.*                                                                      04360000
.********************************************************************** 04370000
.*                                                                      04380000
.*       DECLARE INTERNAL VARIABLES                                     04390000
.*                                                                      04400000
.********************************************************************** 04410000
.*                                                                      04420000
         LCLB   &ADDRREG           1 ==> ADDRESS IS IN A REGISTER       04430000
         LCLB   &ALETREG           1 ==> ALET IS IN A REGISTER          04440000
         LCLC   &ARGM1             FIRST ARGUMENT                       04450000
         LCLC   &ARGM2             SECOND ARGUMENT                      04460000
         LCLC   &BALET             INDICATOR IF ALET SPECIFIED          04470000
         LCLC   &BBND              INDICATOR IF PAGE SPECIFIED          04480000
         LCLC   &BFUNC             INDICATOR IF RELEASE SPECIFIED       04490000
         LCLC   &BLOC            00 FOR RES, 01 FOR 24, 11 FOR 31       04500000
         LCLC   &BREAL             INDICATOR IF 31 REAL SPECIFIED       04510000
         LCLC   &BREAL64           INDICATOR IF 64 REAL            @L7A 04520000
         LCLC   &BFRSZMB           INDICATOR IF PAGEFRAMESIZE1MB   @L9A 04530000
         LCLB   &BSPRLS            1 ==> SUBPOOL RELEASE                04540000
         LCLC   &BUNCN             INDICATOR IF COND=YES/NO             04550000
         LCLC   &BCKEY             INDICATOR IF CALLRKY=YES/NO     @L2A 04560000
         LCLC   &BKEY              INDICATOR IF KEY specified (only     04570000
.*                                   for non-LINKAGE=SYSTEM)            04580000
         LCLC   &BVAR              INDICATOR IF MIN-VALUE SPECIFIED     04590000
         LCLC   &BCHKZ             1 ==> CHECKZERO=YES specified   @D5A 04600000
         LCLC   &BAR15             1 ==> AR15 stuff                @L8A 04610000
         LCLC   &BCBDY             1 ==> CONTBDY=YES specified     @L8A 04620000
         LCLC   &BSBDY             1 ==> STARTBDY=YES specified    @L8A 04630000
         LCLC   &BCAUB             1 ==> CAUB=ADDRSPACE specified  @PBA 04640000
         LCLC   &BOWNA             1 ==> OWNERASID specified       @PBA 04650000
         LCLA   &ERROR4            ERROR CODE OF 4                      04660000
         LCLA   &ERROR12           ERROR CODE OF 12                     04670000
         LCLC   &FLAGS             FLAGS FOR OBTAIN AND RELEASE         04680000
         LCLC   &GNAME             VARIABLE NAME                        04690000
         LCLC   &GNAMEA,&GNAMEL,&GNAMEM,&GNAMEF,&GNAMEA15               04700000
         LCLC   &IADDR             ADDRESS OF STORAGE                   04710000
         LCLB   &IADRREG           1 ==> INADDR IS IN A REGISTER   @L4A 04720000
         LCLC   &ICHKZ             Value of CHECKZERO              @D5A 04730000
         LCLC   &ICAUB             Value of CAUB                   @PBA 04740000
         LCLC   &IAR1              Value of AR1VALUE               @PBA 04750000
         LCLC   &IAR15             Value of AR15VALUE              @PBA 04760000
         LCLC   &IOWNA             Value of OWNERASID              @PBA 04770000
         LCLC   &ICBDY,&ICBDY1     Value of CONTBDY                @L8A 04780000
         LCLC   &ISBDY,&ISBDY1     Value of STARTBDY               @L8A 04790000
         LCLC   &IALET             ACCESS LIST ENTRY TOKEN              04800000
         LCLC   &IBNDRY            BOUNDARY                             04810000
         LCLC   &ICOND             COND(YES!NO)                         04820000
         LCLC   &ICKEY             CALLRKY(YES!NO)                 @L2A 04830000
         LCLC   &IFUNC             FUNCTION SPECIFIED                   04840000
         LCLC   &IKEY              KEY                                  04850000
         LCLC   &ILEN1             FIRST ARGUMENT OF LENGTH PARAMETER   04860000
         LCLC   &ILEN2             SECOND ARGUMENT OF LENGTH PARAMETER  04870000
         LCLC   &ILINK             LINKAGE                              04880000
         LCLC   &ILOC1             FIRST ARGUMENT OF LOC PARAMETER      04890000
         LCLC   &ILOC2             SECOND ARGUMENT OF LOC PARAMETER     04900000
         LCLC   &IINADDR           ADDRESS OF STORAGE TO OBTAIN    @L4A 04910000
         LCLC   &INAME             INVOCATION MACRO NAME                04920000
         LCLC   &INVALID           INVALID MESSAGE TEXT                 04930000
         LCLC   &IOWN              OWNER information               @L3A 04940000
         LCLC   &IBACK             BACK information                @PBA 04950000
         LCLC   &IFIX              FIX information                 @PBA 04960000
         LCLC   &ITCBADD           TCBADDR information             @D4A 04970000
         LCLC   &ITCBADB           TCBADDR 0 or 1 (Bit info)       @D4A 04980000
         LCLC   &IREGS             USE OR SAVE REGISTERS                04990000
         LCLC   &IRTCD             RTCD NAME                            05000000
         LCLC   &ISP               SUBPOOL                              05010000
         LCLC   &I313              MESSAGE ID                           05020000
         LCLC   &I323              MESSAGE ID                           05030000
         LCLC   &I331              MESSAGE ID                           05040000
         LCLC   &I343              MESSAGE ID                           05050000
         LCLC   &I351              MESSAGE ID                           05060000
         LCLC   &IEXECUTNO         EXECUTABLE=NO                   @LAC 05070000
         LCLC   &IEXECUTYES        EXECUTABLE=YES                  @LAA 05071000
         LCLB   &KEYREG            1 ==> KEY IS IN A REGISTER           05080000
         LCLB   &LEN1REG           1 ==> LENGTH(1) IS IN A REGISTER     05090000
         LCLB   &LEN2REG           1 ==> LENGTH(2) IS IN A REGISTER     05100000
         LCLB   &AR1REG            1 ==>AR1VALUE is in a register  @PBA 05110000
         LCLB   &AR15REG           1 ==>AR15VALUE is in a register @PBA 05120000
         LCLB   &FLAGRG            1 ==>FLAGVALUE is in a register @PBA 05130000
         LCLC   &NOARG             MESSAGE TEXT                         05140000
         LCLC   &NOTSPEC           MESSAGE TEXT                         05150000
         LCLC   &NOVALU1           MESSAGE TEXT                         05160000
         LCLC   &NOVALU2           MESSAGE TEXT                         05170000
         LCLC   &REGNOGD           MESSAGE TEXT                @YA30573 05180000
         LCLB   &RTCDREG           1 ==> RETURN CODE IS IN A REGISTER   05190000
         LCLB   &SPREG             1 ==> SUBPOOL IS IN A REGISTER       05200000
         LCLB   &OWNAREG           1 ==> OWNERASID is in a register     05210000
.*                                                                 @PBA 05220000
         LCLB   &TCBAREG           1 ==> TCBADDR IS IN A REGISTER  @D4A 05230000
         LCLC   &TOLONG            MESSAGE TEXT                         05240000
.*                                                                      05250000
.********************************************************************** 05260000
.*                                                                      05270000
.*       INITIALIZE INTERNAL VARIABLES                                  05280000
.*                                                                      05290000
.********************************************************************** 05300000
.*                                                                      05310000
&ADDRREG SETB   0                  ASSUME ADDR NOT IN REG               05320000
&ALETREG SETB   0                  ASSUME ALET NOT IN REG               05330000
&BSPRLS  SETB   0                  ASSUME NOT SUBPOOL RELEASE           05340000
&ERROR4  SETA   0                  ASSUME NO ERROR                      05350000
&ERROR12 SETA   0                  ASSUME NO ERROR                      05360000
&GNAME   SETC   'IHB'.'&SYSNDX'    VARIABLE NAME                        05370000
&IADRREG SETB   0                  ASSUME INADDR NOT IN REG       @L4A  05380000
&INAME   SETC   '&LABEL'           MACRO LABEL                          05390000
&KEYREG  SETB   0                  ASSUME KEY NOT IN REG                05400000
&LEN1REG SETB   0                  ASSUME LEN1 NOT IN REG               05410000
&LEN2REG SETB   0                  ASSUME LEN2 NOT IN REG               05420000
&RTCDREG SETB   0                  ASSUME RTCD NOT IN REG               05430000
&SPREG   SETB   0                  ASSUME SP NOT IN REG                 05440000
&OWNAREG SETB   0                  Assume OWNERASID not in reg     @PBA 05450000
&AR1REG  SETB   0                  Assume AR1VALUE not in reg      @PBA 05460000
&AR15REG SETB   0                  Assume AR15VALUE not in reg     @PBA 05470000
&FLAGRG  SETB    0                 Assume FLAGVALUE not in reg     @PBA 05480000
&TCBAREG SETB   0                  ASSUME TCBADDR NOT IN REG      @D4A  05490000
&BAR15   SETC   '0'                Initialize                      @L8A 05500000
.*                                                                      05510000
.********************************************************************** 05520000
.*                                                                      05530000
.*       MESSAGES TO BE GENERATED                                       05540000
.*                                                                      05550000
.********************************************************************** 05560000
.*                                                                      05570000
&ARGM1   SETC   'THE FIRST ARGUMENT IN'                                 05580000
&ARGM2   SETC   'THE SECOND ARGUMENT IN'                                05590000
&I313    SETC   'IHB313 NO TEXT GENERATED.'                             05600000
&I323    SETC   'IHB323 NO TEXT GENERATED.'                             05610000
&I331    SETC   'IHB331 '                                               05620000
&I343    SETC   'IHB343 NO TEXT GENERATED.'                             05630000
&I351    SETC   'IHB351 NO TEXT GENERATED.'                             05640000
&INVALID SETC   'IS NOT VALID WITH'                                     05650000
&NOARG   SETC   'NO ARGUMENT SPECIFIED FOR THE'                         05660000
&NOTSPEC SETC   'IS REQUIRED BUT NOT SPECIFIED.'                        05670000
&NOVALU1 SETC   'NO VALUE SPECIFIED FOR THE FIRST     ARGUMENT OF THE'  05680000
&NOVALU2 SETC   'NO VALUE SPECIFIED FOR THE SECOND    ARGUMENT OF THE'  05690000
&REGNOGD SETC   'REGISTER SPECIFIED IS NOT VALID FOR'          @YA30573 05700000
&TOLONG  SETC   'HAS TOO MANY ARGUMENTS. TRUNCATED TO:'                 05710000
&VALDREG SETC   'PARAMETER.  VALID REGISTERS ARE'              @YA30573 05720000
.*                                                                      05730000
.********************************************************************** 05740000
.*       Initialize SYSSTATE indicators                                 05750000
.********************************************************************** 05760000
         LCLC  &L,&LR                                              @P9A 05770000
         LCLC  &FLAGREG                Flag Reg                    @P9A 05780000
         GBLA  &SYSALVL                Architecture level          @P9A 05790000
         GBLC  &SYSASCE                                                 05800000
         GBLC  &SYSAM64                Global character variable -      05810000
.*                                     indicates whether the invoker    05820000
.*                                     of GETMAIN is in AMODE 64 or     05830000
.*                                     AMODE 24/31                 @L8A 05840000
         SYSSTATE TEST            This macro sets SYSASCE and      @L8A 05850000
.*                                SYSAM64. SYSAM64 is used to      @L8A 05860000
.*                                determine whether the caller is  @L8A 05870000
.*                                in AMODE 64 or not.              @L8A 05880000
.*                                                                      05890000
         AIF   ('&SYSAM64' EQ 'YES').AM640                         @P9A 05900000
&L       SETC  'L'                                                 @P9A 05910000
&LR      SETC  'LR'                                                @P9A 05920000
         AGO   .AM31640                                            @P9A 05930000
.AM640   ANOP                                                      @P9A 05940000
&L       SETC  'LLGT'                                              @P9A 05950000
&LR      SETC  'LGR'                                               @P9A 05960000
.AM31640 ANOP                                                      @P9A 05970000
.********************************************************************** 05980000
.*                                                                      05990000
.*       CHECK VALIDITY OF MACRO OPERANDS                               06000000
.*                                                                      06010000
.********************************************************************** 06020000
.*                                                                      06030000
.*                                                                      06040000
.********************************************************************** 06050000
.* CHECK FIRST POSITIONAL PARAMETER FOR OBTAIN OR RELEASE               06060000
.********************************************************************** 06070000
.*                                                                      06080000
         AIF ('&TYPE(1)' EQ '').FUNCER IF TYPE WAS NOT SPECIFIED        06090000
         AIF ((N'&TYPE GT 1) OR (N'&SYSLIST GT 1)).FUNCER1 IF TOO      +06100000
                                       MANY SUBFIELDS OR TOO MANY      +06110000
                                       POSITIONAL PARAMETERS            06120000
         AIF ('&TYPE(1)' NE 'OBTAIN').CHKFUNC  IF OBTAIN NOT SPECIFIED  06130000
&IFUNC   SETC   'OBTAIN'               OBTAIN WAS SPECIFIED             06140000
&BFUNC   SETC   '0'                    SET INDICATOR BIT FOR OBTAIN     06150000
         AGO    .CHKFUNCEND            CONTINUE TO CHECK NEXT KEYWORD   06160000
.CHKFUNC ANOP                                                           06170000
         AIF ('&TYPE(1)' NE 'RELEASE').FUNCER IF RELEASE NOT SPECIFIED  06180000
&IFUNC   SETC   'RELEASE'              RELEASE WAS SPECIFIED            06190000
&BFUNC   SETC   '1'                    SET INDICATOR BIT FOR RELEASE    06200000
         AGO    .CHKFUNCEND            CONTINUE TO CHECK NEXT KEYWORD   06210000
.FUNCER  ANOP                          NEITHER OBTAIN NOR RELEASE WAS  +06220000
                                       SPECIFIED                        06230000
         MNOTE  12,'&I343 POSITIONAL PARAMETER MUST BE         ''OBTAIN+06240000
               '' OR ''RELEASE''.'                                      06250000
&ERROR12 SETA   12                     INDICATE ERROR                   06260000
         MEXIT                                                          06270000
.FUNCER1 ANOP                          TOO MANY POSITIONAL PARMS        06280000
         MNOTE  12,'&I343 TOO MANY POSITIONAL PARAMETERS.'              06290000
&ERROR12 SETA   12                     INDICATE ERROR                   06300000
         MEXIT                                                          06310000
.CHKFUNCEND ANOP                                                        06320000
.*                                                                      06330000
.********************************************************************** 06340000
.*                                                                      06350000
.* CHECK KEYWORD FOR THE LINKAGE.                                       06360000
.*                                                                      06370000
.********************************************************************** 06380000
.*                                                                      06390000
.CHKLINK ANOP                                                           06400000
&FLAGREG SETC   '15'                   Reg 15 for flags                 06410000
&ILINK   SETC   'SYSTEM'               ASSUME LINKAGE SYSTEM            06420000
         AIF ('&LINKAGE' EQ '').CHKLINKEND IF LINKAGE WAS NOT SPECIFIED 06430000
         AIF (N'&LINKAGE  LT 2).CHKLINK1 IF NUMBER OF ARGUMENTS LT 2    06440000
         MNOTE  4,'&I331 ''LINKAGE=&LINKAGE'' &TOLONG ''LINKAGE=&LINKAG+06450000
               E(1)''.'                                                 06460000
&ERROR4  SETA   4                      NOTE ERROR                       06470000
.CHKLINK1 ANOP                                                          06480000
&ILINK   SETC   '&LINKAGE(1)'          SAVE LINKAGE SPECIFICATION       06490000
         AIF ('&ILINK' NE '').CHKLINK2 IF ARGUMENT NOT NULL             06500000
         MNOTE  12,'&I313 &NOARG        ''LINKAGE'' PARAMETER.'         06510000
&ERROR12 SETA   12                     NOTE ERROR                       06520000
         AGO    .CHKLINKEND            CONTINUE TO CHECK NEXT KEYWORD   06530000
.CHKLINK2 ANOP                                                          06540000
         AIF ('&ILINK' EQ 'SYSTEM').CHKLINKEND IF NOT EQUAL TO SYSTEM   06550000
         AIF ('&ILINK' EQ 'SVC').CHKLINKEND                             06560000
&FLAGREG SETC   '3'                    Reg 3 for flags                  06570000
         AIF ('&ILINK' EQ 'BRANCH').CHKLINKEND                          06580000
         AIF ('&ILINK' EQ 'GLOBALBRANCH').CHKLINKEND                    06590000
         MNOTE 12,'&I343 ''&LINKAGE(1)'' IN ''LINKAGE=&LINKAGE'' MUST B+06600000
               E ''SYSTEM'', ''SVC'', ''BRANCH'' OR ''GLOBALBRANCH''.'  06610000
&ERROR12 SETA   12                     NOTE ERROR                       06620000
.CHKLINKEND ANOP                                                   @L3A 06630000
.*                                                                      06640000
.********************************************************************** 06650000
.*                                                                      06660000
.* CHECK KEYWORD FOR THE FLAGVALUE.                                     06670000
.*                                                                      06680000
.********************************************************************** 06690000
.*                                                                      06700000
.CHKFLAGV ANOP                                                          06710000
         AIF ('&FLAGVALUE' EQ '').CHKFLAGVEND                           06720000
         AIF (N'&FLAGVALUE LT 2).CHKFLAGV5 IF NUMBER OF ARGUMENTS LT 2  06730000
         MNOTE  4,'&I331 ''FLAGVALUE=&FLAGVALUE'' &TOLONG ''FLAGVALUE=&+06740000
               FLAGVALUE(1)''.'                                         06750000
&ERROR4  SETA   4                      NOTE ERROR                       06760000
&IFLAG   SETC   '&FLAGVALUE(1)'      Save FLAGVALUE specification  @PBA 06770000
         AGO    .CHKFLAGV1                                         @PBA 06780000
.CHKFLAGV5 ANOP                                                         06790000
&IFLAG   SETC   '&FLAGVALUE'         Save FLAGVALUE specification  @PBA 06800000
.CHKFLAGV1 ANOP                                                         06810000
&FLAGRG  SETB  ('&IFLAG'(1,1) EQ '(')  Set bit if parm in register @PBA 06820000
         AIF (NOT &FLAGRG).CHKFLAGV4   If parm is not in register  @PBA 06830000
&IFLAG   SETC '&IFLAG'(2,K'&IFLAG-2)   Strip parens                @PBA 06840000
.CHKFLAGV4 ANOP                                                    @PBA 06850000
         AIF ('&SP' NE '').CHKFLAGV2                                    06860000
         AIF ('&ALET' NE '').CHKFLAGV2                                  06870000
         AIF ('&BNDRY' NE '').CHKFLAGV2                                 06880000
         AIF ('&KEY' NE '').CHKFLAGV2                                   06890000
         AIF ('&LOC' NE '').CHKFLAGV2                                   06900000
         AIF ('&CALLRKY' NE '').CHKFLAGV2                               06910000
         AIF ('&OWNER' NE '').CHKFLAGV2                                 06920000
         AIF ('&CHECKZERO' NE '').CHKFLAGV2                             06930000
         AIF ('&CONTBDY' NE '').CHKFLAGV2                               06940000
         AIF ('&STARTBDY' NE '').CHKFLAGV2                              06950000
         AIF ('&TCBADDR' NE '').CHKFLAGV2                               06960000
         AIF ('&COND' NE '').CHKFLAGV2                                  06970000
         AIF ('&CAUB' NE '').CHKFLAGV2                             @PBA 06980000
         AIF ('&OWNERASID' NE '').CHKFLAGV2                        @PBA 06990000
         AIF ('&BACK' NE '').CHKFLAGV2                             @PBA 07000000
         AIF ('&FIX' NE '').CHKFLAGV2                              @PBA 07010000
         AGO .CHKFLAGVEND                                               07020000
.CHKFLAGV2 ANOP                                                         07030000
         MNOTE 12,'STORAGE --> FLAGVALUE MAY NOT BE USED WITH ''SP'', '+07040000
               'ALET'', ''BNDRY'', ''KEY'', ''LOC'', ''CALLRKY'', ''OWN+07050000
               ER'', ''CHECKZERO'', ''CONTBDY'', ''STARTBDY'', ''TCBADD+07060000
               R'', ''COND'', ''CAUB'', OWNERASID'', ''BACK'', ''FIX''' 07070000
.*                                                                 @PBC 07080000
&ERROR12 SETA   12                     NOTE ERROR                       07090000
.CHKFLAGVEND ANOP                                                  @L3A 07100000
.*                                                                      07110000
.********************************************************************** 07120000
.*                                                                      07130000
.* CHECK KEYWORD FOR THE AR15VALUE.                                     07140000
.*                                                                      07150000
.********************************************************************** 07160000
.*                                                                      07170000
.CHKAR15V ANOP                                                          07180000
         AIF ('&AR15VALUE' EQ '').CHKAR15VEND                           07190000
         AIF (N'&AR15VALUE LT 2).CHKAR15V5 IF NUMBER OF ARGUMENTS LT 2  07200000
         MNOTE  4,'&I331 ''AR15VALUE=&AR15VALUE'' &TOLONG ''AR15VALUE=&+07210000
               AR15VALUE(1)''.'                                         07220000
&ERROR4  SETA   4                      NOTE ERROR                       07230000
&IAR15   SETC   '&AR15VALUE(1)'      Save AR15VALUE specification  @PBA 07240000
         AGO    .CHKAR15V1                                         @PBA 07250000
.CHKAR15V5 ANOP                                                         07260000
&IAR15   SETC   '&AR15VALUE'         Save AR15VALUE specification  @PBA 07270000
.CHKAR15V1 ANOP                                                         07280000
&AR15REG SETB  ('&IAR15'(1,1) EQ '(')  Set bit if parm in register @PBA 07290000
         AIF (NOT &AR15REG).CHKAR15V4  If parm is not in register  @PBA 07300000
&IAR15   SETC '&IAR15'(2,K'&IAR15-2)   Strip parens                @PBA 07310000
.CHKAR15V4 ANOP                                                    @PBA 07320000
         AIF ('&SP' NE '').CHKAR15V2                                    07330000
         AIF ('&ALET' NE '').CHKAR15V2                                  07340000
         AIF ('&BNDRY' NE '').CHKAR15V2                                 07350000
         AIF ('&KEY' NE '').CHKAR15V2                                   07360000
         AIF ('&LOC' NE '').CHKAR15V2                                   07370000
         AIF ('&CALLRKY' NE '').CHKAR15V2                               07380000
         AIF ('&OWNER' NE '').CHKAR15V2                                 07390000
         AIF ('&CHECKZERO' NE '').CHKAR15V2                             07400000
         AIF ('&CONTBDY' NE '').CHKAR15V2                               07410000
         AIF ('&STARTBDY' NE '').CHKAR15V2                              07420000
         AIF ('&TCBADDR' NE '').CHKAR15V2                               07430000
         AIF ('&COND' NE '').CHKAR15V2                                  07440000
         AIF ('&CONTBDY' NE '').CHKAR15V2                               07450000
         AIF ('&STARTBDY' NE '').CHKAR15V2                              07460000
         AIF ('&CAUB' NE '').CHKAR15V2                             @PBA 07470000
         AIF ('&OWNERASID' NE '').CHAR15GV2                        @PBA 07480000
         AIF ('&BACK' NE '').CHKAR15V2                             @PBA 07490000
         AIF ('&FIX' NE '').CHKAR15V2                              @PBA 07500000
         AIF ('&EXECUTABLE' NE '').CHKAR15V2                       @A5A 07510000
         AGO .CHKAR15V2A                                                07520000
.CHKAR15V2 ANOP                                                         07530000
         MNOTE 12,'STORAGE --> AR15VALUE MAY NOT BE USED WITH ''SP'', '+07540000
               'ALET'', ''BNDRY'', ''KEY'', ''LOC'', ''CALLRKY'', ''OWN+07550000
               ER'', ''CHECKZERO'', ''CONTBDY'', ''STARTBDY'', ''TCBADD+07560000
               R'', ''COND'', ''CAUB'', OWNERASID'', ''BACK'', ''FIX'',+07570000
               ''EXECUTABLE'''                                          07580000
.*                                                                 @A5C 07590000
&ERROR12 SETA   12                     NOTE ERROR                       07600000
.CHKAR15V2A ANOP                                                        07610000
         AIF ('&FLAGVALUE' NE '').CHKAR15V3                             07620000
         MNOTE 12,'STORAGE --> AR15VALUE MAY NOT BE USED WITHOUT ''FLAG+07630000
               VALUE'''                                                 07640000
&ERROR12 SETA   12                     NOTE ERROR                       07650000
.CHKAR15V3 ANOP                                                         07660000
.CHKAR15VEND ANOP                                                  @L3A 07670000
.*                                                                      07680000
.********************************************************************** 07690000
.*                                                                      07700000
.* CHECK KEYWORD FOR THE AR1VALUE.                                      07710000
.*                                                                      07720000
.********************************************************************** 07730000
.*                                                                      07740000
         AIF ('&AR1VALUE' EQ '').CHKAR1VEND                             07750000
         AIF (N'&AR1VALUE LT 2).CHKAR1V5 IF NUMBER OF ARGUMENTS LT 2    07760000
         MNOTE  4,'&I331 ''AR1VALUE=&AR1VALUE'' &TOLONG ''AR1VALUE=&AR1+07770000
               VALUE(1)''.'                                             07780000
&ERROR4  SETA   4                      NOTE ERROR                       07790000
&IAR1    SETC   '&AR1VALUE(1)'       Save AR1VALUE specification   @PBA 07800000
         AGO    .CHKAR1V1                                          @PBA 07810000
.CHKAR1V5 ANOP                                                          07820000
&IAR1    SETC   '&AR1VALUE'          Save AR1VALUE specification   @PBA 07830000
.CHKAR1V1 ANOP                                                          07840000
&AR1REG  SETB  ('&IAR1'(1,1) EQ '(')   Set bit if parm in register @PBA 07850000
         AIF (NOT &AR1REG).CHKAR1V4    If parm is not in register  @PBA 07860000
&IAR1    SETC '&IAR1'(2,K'&IAR1-2)     Strip parens                @PBA 07870000
.CHKAR1V4 ANOP                                                     @PBA 07880000
         AIF ('&SP' NE '').CHKAR1V2                                     07890000
         AIF ('&ALET' NE '').CHKAR1V2                                   07900000
         AIF ('&BNDRY' NE '').CHKAR1V2                                  07910000
         AIF ('&KEY' NE '').CHKAR1V2                                    07920000
         AIF ('&LOC' NE '').CHKAR1V2                                    07930000
         AIF ('&CALLRKY' NE '').CHKAR1V2                                07940000
         AIF ('&OWNER' NE '').CHKAR1V2                                  07950000
         AIF ('&CHECKZERO' NE '').CHKAR1V2                              07960000
         AIF ('&CONTBDY' NE '').CHKAR1V2                                07970000
         AIF ('&STARTBDY' NE '').CHKAR1V2                               07980000
         AIF ('&TCBADDR' NE '').CHKAR1V2                                07990000
         AIF ('&COND' NE '').CHKAR1V2                                   08000000
         AIF ('&CONTBDY' NE '').CHKAR1V2                                08010000
         AIF ('&STARTBDY' NE '').CHKAR1V2                               08020000
         AIF ('&CAUB' NE '').CHKAR1V2                              @PBA 08030000
         AIF ('&OWNERASID' NE '').CHAR1GV2                         @PBA 08040000
         AIF ('&BACK' NE '').CHKAR1V2                              @PBA 08050000
         AIF ('&FIX' NE '').CHKAR1V2                               @PBA 08060000
         AGO .CHKAR1V2A                                                 08070000
.CHKAR1V2 ANOP                                                          08080000
         MNOTE 12,'STORAGE --> AR1VALUE MAY NOT BE USED WITH ''SP'', ''+08090000
               ALET'', ''BNDRY'', ''KEY'', ''LOC'', ''CALLRKY'', ''OWNE+08100000
               R'', ''CHECKZERO'', ''CONTBDY'', ''STARTBDY'', ''TCBADDR+08110000
               '', ''COND'', ''CAUB'', OWNERASID'', ''BACK'', ''FIX'''  08120000
.*                                                                 @PBC 08130000
&ERROR12 SETA   12                     NOTE ERROR                       08140000
.CHKAR1V2A ANOP                                                         08150000
         AIF ('&FLAGVALUE' NE '').CHKAR1V3                              08160000
         MNOTE 12,'STORAGE --> AR1VALUE MAY NOT BE USED WITHOUT ''FLAGV+08170000
               ALUE'''                                                  08180000
&ERROR12 SETA   12                     NOTE ERROR                       08190000
.CHKAR1V3 ANOP                                                          08200000
.CHKAR1VEND ANOP                                                   @L3A 08210000
.*                                                                      08220000
.********************************************************************** 08230000
.*                                                                      08240000
.* CHECK KEYWORD FOR THE COND SPECIFICATION. ARGUMENT CAN BE EITHER     08250000
.* 'YES' OR 'NO'.                                                       08260000
.*                                                                      08270000
.********************************************************************** 08280000
.*                                                                      08290000
.CHKCOND ANOP                                                           08300000
&BUNCN   SETC   '1'       SET INDICATOR BIT TO ASSUME COND=NO SPECIFIED 08310000
&ICOND   SETC   'NO'      SET ARGUMENT TO ASSUME COND=NO SPECIFIED      08320000
         AIF ('&COND' EQ '').CHKCKEY   IF COND WAS NOT SPECIFIED @L2A   08330000
         AIF (N'&COND LT 2).CHKCON1    IF NUMBER OF ARGUMENTS LT 2      08340000
         MNOTE  4,'&I331 ''COND=&COND'' &TOLONG ''COND=&COND(1)''.'     08350000
&ERROR4  SETA   4                      NOTE ERROR                       08360000
.CHKCON1 ANOP                                                           08370000
&ICOND   SETC   '&COND(1)'                SAVE COND SPECIFICATION       08380000
         AIF ('&ICOND' EQ '').CHKCON2     IF NO ARGUMENT FOR COND       08390000
         AIF ('&ICOND' EQ 'NO').CHKCKEY   IF COND=NO SPECIFIED     @L2A 08400000
         AIF ('&ICOND' EQ 'YES').CHKCON3  IF COND=YES SPECIFIED         08410000
         MNOTE  12,'&I343 ''&COND(1)'' IN ''COND=&COND'' MUST BE ''YES'+08420000
               ' OR ''NO''.'                                            08430000
&ERROR12 SETA   12                     NOTE ERROR                       08440000
         AGO    .CHKCKEY               CONTINUE TO CHECK NEXT      @L2A 08450000
.CHKCON2 ANOP                                                           08460000
         MNOTE  12,'&I313 &NOARG        ''COND'' PARAMETER.'            08470000
&ERROR12 SETA   12                     NOTE ERROR                       08480000
         AGO    .CHKCKEY               CONTINUE TO CHECK NEXT      @L2A 08490000
.CHKCON3 ANOP                                                           08500000
&BUNCN   SETC   '0'                    SET INDICATOR BIT FOR COND=YES   08510000
.*                                                                      08520000
.********************************************************************** 08530000
.*                                                                      08540000
.* CHECK KEYWORD FOR THE CALLRKY SPECIFICATION.                         08550000
.* ARGUMENT CAN BE EITHER 'YES' OR 'NO'.                          @L2A  08560000
.*                                                                      08570000
.********************************************************************** 08580000
.*                                                                      08590000
.CHKCKEY ANOP                                                      @L2A 08600000
&BCKEY   SETC   '0'  SET INDICATOR BIT TO ASSUME CKEY=NO SPECIFIED @L2A 08610000
&ICKEY   SETC   'NO'      SET ARGUMENT TO ASSUME CKEY=NO SPECIFIED @L2A 08620000
         AIF ('&CALLRKY' EQ '').ENDCKEY IF CKEY WAS NOT SPECIFIED  @D5C 08630000
         AIF ('&KEY' EQ '').CKEYOK                                 @L2A 08640000
         AIF ('&CALLRKY(1)' EQ 'NO').CKEYOK OK w/ CALLRKY=NO       @P9C 08650000
       MNOTE  12,'&I323 ''CALLRKY'' PARAMETER &INVALID ''KEY''.'   @L2A 08660000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 08670000
.CKEYOK  ANOP                                                      @L2A 08680000
         AIF ('&ILINK' EQ 'SYSTEM').CKEYLINKOK                          08690000
    MNOTE  12,'STORAGE --> CALLRKY is valid only with LINKAGE=SYSTEM'   08700000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 08710000
.CKEYLINKOK ANOP                                                        08720000
      AIF (N'&CALLRKY LT 2).CHKCKEY1 IF NUMBER OF ARGUMENTS LT 2   @L2A 08730000
         MNOTE  4,'&I331 ''CALLRKY=&CALLRKY'' &TOLONG ''CALLRKY=&CALLRK+08740000
               Y(1)''.'                                            @L2A 08750000
&ERROR4  SETA   4                      NOTE ERROR                  @L2A 08760000
.CHKCKEY1 ANOP                                                     @L2A 08770000
&ICKEY   SETC   '&CALLRKY(1)'          SAVE CALLRKY SPECIFICATION  @L2A 08780000
         AIF ('&ICKEY' EQ '').CHKCKEY2    IF NO ARGUMENT FOR CKEY  @L2A 08790000
         AIF ('&ICKEY' EQ 'NO').ENDCKEY   IF CALLRKY=NO SPECIFIED  @D5C 08800000
         AIF ('&ICKEY' EQ 'YES').CHKCKEY3 IF CALLRKY=YES           @L2A 08810000
         MNOTE  12,'&I343 ''&CALLRKY(1)'' IN ''CALLRKY=&CALLRKY'' MUST +08820000
               BE ''YES'' OR ''NO''.'                              @L2A 08830000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 08840000
         AGO    .ENDCKEY            CONTINUE TO CHECK NEXT KEYWORD @D5C 08850000
.CHKCKEY2 ANOP                                                     @L2A 08860000
         MNOTE  12,'&I313 &NOARG        ''CALLRKY'' PARAMETER.'    @L2A 08870000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 08880000
         AGO    .ENDCKEY            CONTINUE TO CHECK NEXT KEYWORD @D5C 08890000
.CHKCKEY3 ANOP                                                     @L2A 08900000
&BCKEY   SETC   '1'                 SET INDICATOR BIT FOR CKEY=YES @L2A 08910000
.ENDCKEY ANOP                       End of CALLRKY processing      @D5C 08920000
.*                                                                      08930000
.********************************************************************** 08940000
.*                                                                      08950000
.* Check keyword for the CHECKZERO specification.                       08960000
.* Argument can be either 'YES' or 'NO'.                                08970000
.* CHECKZERO is not allowed with RELEASE.                         @D5A  08980000
.*                                                                      08990000
.********************************************************************** 09000000
.*                                                                      09010000
&BCHKZ   SETC   '0'  SET INDICATOR BIT TO ASSUME CHKZ=NO SPECIFIED @D5A 09020000
&ICHKZ   SETC   'NO'      SET ARGUMENT TO ASSUME CHKZ=NO SPECIFIED @D5A 09030000
         AIF ('&CHECKZERO' EQ '').ENDCHKZ IF CHKZ WAS NOT SPECed   @D5A 09040000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKCHKZ4 IF 'OBTAIN' FUNCTION  @D5A 09050000
         MNOTE  12,'&I323 ''CHECKZERO'' PARAMETER &INVALID  ''&IFUNC''.+09060000
               '                                                   @D5A 09070000
&ERROR12 SETA   12                     NOTE ERROR                  @D5A 09080000
         AGO    .ENDCHKZ            CONTINUE TO CHECK NEXT KEYWORD @D5A 09090000
.CHKCHKZ4 ANOP                                                     @D5A 09100000
      AIF (N'&CHECKZERO LT 2).CHKCHKZ1 IF NUMBER OF ARGUMENTS LT 2 @D5A 09110000
         MNOTE  4,'&I331 ''CHECKZERO=&CHECKZERO'' &TOLONG ''CHECKZERO=&+09120000
               CHECKZERO(1)''.'                                    @D5A 09130000
&ERROR4  SETA   4                      NOTE ERROR                  @D5A 09140000
.CHKCHKZ1 ANOP                                                     @D5A 09150000
&ICHKZ   SETC   '&CHECKZERO(1)'      SAVE CHECKZERO SPECIFICATION  @D5A 09160000
         AIF ('&ICHKZ' EQ '').CHKCHKZ2    IF NO ARGUMENT FOR CHKZ  @D5A 09170000
         AIF ('&ICHKZ' EQ 'NO').ENDCHKZ  IF CHECKZERO=NO SPECIFIED @D5A 09180000
         AIF ('&ICHKZ' EQ 'YES').CHKCHKZ3 IF CHECKZERO=YES         @D5A 09190000
         MNOTE  12,'&I343 ''&CHECKZERO(1)'' IN ''CHECKZERO=&CHECKZERO''+09200000
                MUST BE ''YES'' OR ''NO''.'                        @D5A 09210000
&ERROR12 SETA   12                     NOTE ERROR                  @D5A 09220000
         AGO    .ENDCHKZ            CONTINUE TO CHECK NEXT KEYWORD @D5A 09230000
.CHKCHKZ2 ANOP                                                     @D5A 09240000
         MNOTE  12,'&I313 &NOARG        ''CHECKZERO'' PARAMETER.'  @D5A 09250000
&ERROR12 SETA   12                     NOTE ERROR                  @D5A 09260000
         AGO    .ENDCHKZ            CONTINUE TO CHECK NEXT KEYWORD @D5A 09270000
.CHKCHKZ3 ANOP                                                     @D5A 09280000
&BCHKZ   SETC   '1'                 SET INDICATOR BIT FOR CHKZ=YES @D5A 09290000
.ENDCHKZ ANOP                       End of CHECKZERO processing    @D5A 09300000
.*                                                                      09310000
.********************************************************************** 09320000
.*                                                                      09330000
.* Check keyword for the CAUB specification.                            09340000
.* Argument can be either 'ADDRSPACE' or 'CURRENT'.                     09350000
.* CAUB is not allowed with RELEASE.                                    09360000
.* CAUB is not allowed without OWNER.                                   09370000
.*                                                                 @PBA 09380000
.********************************************************************** 09390000
.*                                                                      09400000
&BCAUB   SETC   '0'  Set indicator bit to assume CAUB=CURRENT specified 09410000
.*                                                                 @PBA 09420000
&ICAUB   SETC   'CURRENT' Set argument to assume CAUB=CURRENT specified 09430000
.*                                                                 @PBA 09440000
         AIF ('&CAUB' EQ '').ENDCAUB If CAUB was not SPECed        @PBA 09450000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKCAUB4 If 'OBTAIN' function  @PBA 09460000
         MNOTE  12,'&I323 ''CAUB'' PARAMETER &INVALID  ''&IFUNC''.'    +09470000
                                                                   @PBA 09480000
&ERROR12 SETA   12                     Note error                  @PBA 09490000
         AGO    .ENDCAUB            Continue to check next keyword @PBA 09500000
.CHKCAUB4 ANOP                                                     @PBA 09510000
         AIF ('&OWNER' NE '').CHKCAUB5 If OWNER specified          @PBA 09520000
         MNOTE  12,'&I351 ''OWNER'' IS REQUIRED WHEN ''CAUB'' IS SPECIF+09530000
               IED.'                                               @PBA 09540000
&ERROR12 SETA   12                     Note error                  @PBA 09550000
         AGO    .ENDCAUB            Continue to check next keyword @PBA 09560000
.CHKCAUB5 ANOP                                                     @PBA 09570000
      AIF (N'&CAUB LT 2).CHKCAUB1 If number of arguments LT 2      @PBA 09580000
         MNOTE  4,'&I331 ''CAUB=&CAUB'' &TOLONG ''CAUB=&CAUB(1)''.'    +09590000
                                                                   @PBA 09600000
&ERROR4  SETA   4                      Note error                  @PBA 09610000
.CHKCAUB1 ANOP                                                     @PBA 09620000
&ICAUB   SETC   '&CAUB(1)'           Save CAUB specification       @PBA 09630000
         AIF ('&ICAUB' EQ '').CHKCAUB2    If no argument for CAUB  @PBA 09640000
         AIF ('&ICAUB' EQ 'CURRENT').ENDCAUB If CAUB=CURRENT specified  09650000
.*                                                                 @PBA 09660000
         AIF ('&ICAUB' EQ 'ADDRSPACE').CHKCAUB3 If CAUB=ADDRSPACE  @PBA 09670000
         MNOTE  12,'&I343 ''&CAUB(1)'' IN ''CAUB=&CAUB'' MUST BE ''ADDR+09680000
               SPACE'' OR ''CURRENT''.'                            @PBA 09690000
&ERROR12 SETA   12                     Note error                  @PBA 09700000
         AGO    .ENDCAUB            Continue to check next keyword @PBA 09710000
.CHKCAUB2 ANOP                                                     @PBA 09720000
         MNOTE  12,'&I313 &NOARG        ''CAUB'' PARAMETER.'       @PBA 09730000
&ERROR12 SETA   12                     Note error                  @PBA 09740000
         AGO    .ENDCAUB            Continue to check next keyword @PBA 09750000
.CHKCAUB3 ANOP                                                     @PBA 09760000
&BCAUB   SETC   '1'                 Set the indicator for               09770000
.*                                  CAUB=ADDRSPACE                 @PBA 09780000
&BAR15   SETC   '1'                 Set indicator bit for AR 15    @PBA 09790000
.ENDCAUB ANOP                       End of CAUB processing         @PBA 09800000
.*                                                                      09810000
.********************************************************************** 09820000
.*                                                                      09830000
.* Check keyword for the OWNERASID specification.                       09840000
.* Argument can be decimal number!register(2)-(12)!RS-Type address      09850000
.* OWNERASID is not allowed with RELEASE.                               09860000
.* OWNERASID is not allowed with ALET.                                  09870000
.* OWNERASID is not allowed without OWNER.                              09880000
.*                                                                 @PBA 09890000
.********************************************************************** 09900000
.*                                                                      09910000
&BOWNA   SETC   '0'  Set indicator bit to assume OWNERASID not          09920000
.*                                  specified                      @PBA 09930000
&IOWNA   SETC   ''   Set argument to assume OWNERASID not specified     09940000
.*                                                                 @PBA 09950000
         AIF ('&OWNERASID' EQ '').ENDOWNA If OWNERASID was not SPECed   09960000
.*                                                                 @PBA 09970000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKOWNA4 If 'OBTAIN' function  @PBA 09980000
         MNOTE  12,'&I323 ''OWNERASID'' PARAMETER &INVALID  ''&IFUNC''.+09990000
               '                                                   @PBA 10000000
&ERROR12 SETA   12                     Note error                  @PBA 10010000
         AGO    .ENDOWNA            Continue to check next keyword @PBA 10020000
.CHKOWNA4 ANOP                                                     @PBA 10030000
         AIF ('&OWNER' NE '').CHKOWNA5 If OWNER specified          @PBA 10040000
         MNOTE  12,'&I351 ''OWNER'' IS REQUIRED WHEN ''OWNERASID'' IS S+10050000
               PECIFIED.'                                          @PBA 10060000
&ERROR12 SETA   12                     Note error                  @PBA 10070000
         AGO    .ENDOWNA            Continue to check next keyword @PBA 10080000
.CHKOWNA5 ANOP                                                     @PBA 10090000
         AIF ('&ALET' EQ '').CHKOWNA6 If ALET specified            @PBA 10100000
         MNOTE  12,'&I323 ''OWNERASID'' PARAMETER &INVALID  ''ALET''.' +10110000
                                                                   @PBA 10120000
&ERROR12 SETA   12                     Note error                  @PBA 10130000
         AGO    .ENDOWNA            Continue to check next keyword @PBA 10140000
.CHKOWNA6 ANOP                                                     @PBA 10150000
      AIF (N'&OWNERASID LT 2).CHKOWNA1 If number of arguments LT 2 @PBA 10160000
         MNOTE 4,'&I331 ''OWNERASID=&OWNERASID'' &TOLONG ''OWNERASID=&O+10170000
               WNERASID(1)''.'                                     @PBA 10180000
&ERROR4  SETA   4                      Note error                  @PBA 10190000
&IOWNA   SETC   '&OWNERASID(1)'      Save OWNERASID specification  @PBA 10200000
         AGO    .CHKOWNA7           Continue to check next keyword @PBA 10210000
.CHKOWNA1 ANOP                                                     @PBA 10220000
&IOWNA   SETC   '&OWNERASID'         Save OWNERASID specification  @PBA 10230000
.CHKOWNA7 ANOP                                                     @PBA 10240000
         AIF ('&IOWNA' NE '').CHKOWNA2 If argument for OWNERASID   @PBA 10250000
         MNOTE  12,'&I313 &NOARG        ''OWNERASID'' PARAMETER.'  @PBA 10260000
&ERROR12 SETA   12                     Note error                  @PBA 10270000
         AGO    .ENDOWNA            Continue to check next keyword @PBA 10280000
.CHKOWNA2 ANOP                                                     @PBA 10290000
&OWNAREG SETB  ('&IOWNA'(1,1) EQ '(')  Set bit if parm in register @PBA 10300000
         AIF (NOT &OWNAREG).CHKOWNA3   If parm is not in register  @PBA 10310000
&IOWNA   SETC '&IOWNA'(2,K'&IOWNA-2)   Strip parens                @PBA 10320000
.CHKOWNA3 ANOP                                                     @PBA 10330000
&BOWNA   SETC   '1'                 Set the indicator for               10340000
.*                                  OWNERASID                      @PBA 10350000
&BAR15   SETC   '1'                 Set indicator bit for AR 15    @PBA 10360000
.ENDOWNA ANOP                       End of OWNERASID processing    @PBA 10370000
.*                                                                      10380000
.********************************************************************** 10390000
.*                                                                      10400000
.* Check keyword for the CONTBDY specification.                         10410000
.* CONTBDY is not allowed with RELEASE.                            @L8A 10420000
.* CONTBDY is not allowed with variable-form                       @L8A 10430000
.* CONTBDY is not allowed with LOC=EXPLICIT                        @L8A 10440000
.* CONTBDY is not allowed with BNDRY                               @L8A 10450000
.*                                                                      10460000
.********************************************************************** 10470000
.*                                                                      10480000
&BCBDY   SETC   '0'  SET INDICATOR BIT TO ASSUME NO CBDY           @L8A 10490000
&ICBDY   SETC   ''        SET ARGUMENT TO ASSUME NO CBDY           @L8A 10500000
         AIF ('&CONTBDY' EQ '').ENDCBDY IF CBDY WAS NOT SPECed     @L8A 10510000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKCBDY4 IF 'OBTAIN' FUNCTION  @L8A 10520000
         MNOTE  12,'&I323 ''CONTBDY'' PARAMETER &INVALID  ''&IFUNC''.' +10530000
                                                                   @L8A 10540000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 10550000
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 10560000
.CHKCBDY4 ANOP                                                     @L8A 10570000
         AIF (N'&LENGTH LT 2).CHKCBDY5  Variable-length            @L8A 10580000
         MNOTE 12,'&I323 ''CONTBDY'' PARAMETER &INVALID ''LENGTH=&LENGT+10590000
               H''.'                                               @L8A 10600000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 10610000
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 10620000
.CHKCBDY5 ANOP                                                     @L8A 10630000
   AIF ('&ILOC1' NE 'EXPLICIT').CHKCBDY6 IF LOC=EXPLICIT           @L8A 10640000
  MNOTE  12,'&I323 ''CONTBDY'' PARAMETER &INVALID  ''LOC=EXPLICIT''.'  +10650000
                                                                   @L8A 10660000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 10670000
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 10680000
.CHKCBDY6 ANOP                                                     @L8A 10690000
   AIF ('&BNDRY' EQ '').CHKCBDY7 IF BNDRY                          @L8A 10700000
  MNOTE  12,'&I323 ''CONTBDY'' PARAMETER &INVALID BNDRY.'          @L8A 10710000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 10720000
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 10730000
.CHKCBDY7 ANOP                                                     @L8A 10740000
      AIF (N'&CONTBDY LT 2).CHKCBDY1 IF NUMBER OF ARGUMENTS LT 2   @L8A 10750000
         MNOTE 12,'&I331 ''CONTBDY=&CONTBDY'' &TOLONG ''CONTBDY=&CONTBD+10760000
               Y(1)''.'                                            @L8A 10770000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 10780000
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 10790000
.CHKCBDY1 ANOP                                                     @L8A 10800000
&ICBDY   SETC   '&CONTBDY'           SAVE CONTBDY SPECIFICATION    @L8A 10810000
&ICBDY1  SETC   '&CONTBDY(1)'        SAVE CONTBDY SPECIFICATION    @L8A 10820000
         AIF ('&ICBDY' NE '').CHKCBDY3  Continue if argument       @L8A 10830000
         MNOTE  12,'&I313 &NOARG        ''CONTBDY'' PARAMETER.'    @L8A 10840000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 10850000
         AGO    .ENDCBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 10860000
.CHKCBDY3 ANOP                                                     @L8A 10870000
&BCBDY   SETC   '1'                 SET INDICATOR BIT FOR CBDY=YES @L8A 10880000
&BAR15   SETC   '1'                 SET INDICATOR BIT FOR AR 15    @L8A 10890000
.ENDCBDY ANOP                       End of CONTBDY processing      @L8A 10900000
.*                                                                      10910000
.********************************************************************** 10920000
.*                                                                      10930000
.* Check keyword for the STARTBDY specification.                        10940000
.* STARTBDY is not allowed with RELEASE.                           @L8A 10950000
.* STARTBDY is not allowed with variable-form                      @L8A 10960000
.* STARTBDY is not allowed with LOC=EXPLICIT                       @L8A 10970000
.* STARTBDY is not allowed with BNDRY                              @L8A 10980000
.*                                                                      10990000
.********************************************************************** 11000000
.*                                                                      11010000
&BSBDY   SETC   '0'  SET INDICATOR BIT TO ASSUME NO SBDY           @L8A 11020000
&ISBDY   SETC   ''        SET ARGUMENT TO ASSUME NO SBDY           @L8A 11030000
         AIF ('&STARTBDY' EQ '').ENDSBDY IF SBDY WAS NOT SPECed    @L8A 11040000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKSBDY4 IF 'OBTAIN' FUNCTION  @L8A 11050000
        MNOTE  12,'&I323 ''STARTBDY'' PARAMETER &INVALID  ''&IFUNC''.' +11060000
                                                                   @L8A 11070000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 11080000
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 11090000
.CHKSBDY4 ANOP                                                     @L8A 11100000
         AIF (N'&LENGTH LT 2).CHKSBDY5  Variable-length            @L8A 11110000
         MNOTE 12,'&I323 ''STARTBDY'' PARAMETER &INVALID ''LENGTH=&LENG+11120000
               TH''.'                                              @L8A 11130000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 11140000
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 11150000
.CHKSBDY5 ANOP                                                     @L8A 11160000
   AIF ('&ILOC1' NE 'EXPLICIT').CHKSBDY6 IF LOC=EXPLICIT           @L8A 11170000
  MNOTE  12,'&I323 ''STARTBDY'' PARAMETER &INVALID  ''LOC=EXPLICIT''.' +11180000
                                                                   @L8A 11190000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 11200000
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 11210000
.CHKSBDY6 ANOP                                                     @L8A 11220000
   AIF ('&BNDRY' EQ '').CHKSBDY7 IF BNDRY                          @L8A 11230000
  MNOTE  12,'&I323 ''STARTBDY'' PARAMETER &INVALID BNDRY.'         @L8A 11240000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 11250000
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 11260000
.CHKSBDY7 ANOP                                                     @L8A 11270000
      AIF (N'&STARTBDY LT 2).CHKSBDY1 IF NUMBER OF ARGUMENTS LT 2  @L8A 11280000
      MNOTE  8,'&I331 ''STARTBDY=&STARTBDY'' &TOLONG ''STARTBDY=&STARTB+11290000
               DY(1)''.'                                           @L8A 11300000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 11310000
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 11320000
.CHKSBDY1 ANOP                                                     @L8A 11330000
&ISBDY   SETC   '&STARTBDY'          SAVE STARTBDY SPECIFICATION   @L8A 11340000
&ISBDY1  SETC   '&STARTBDY(1)'       SAVE STARTBDY SPECIFICATION   @L8A 11350000
         AIF ('&ISBDY' NE '').CHKSBDY3  Continue if argument       @L8A 11360000
         MNOTE  12,'&I313 &NOARG        ''STARTBDY'' PARAMETER.'   @L8A 11370000
&ERROR12 SETA   12                     NOTE ERROR                  @L8A 11380000
         AGO    .ENDSBDY            CONTINUE TO CHECK NEXT KEYWORD @L8A 11390000
.CHKSBDY3 ANOP                                                     @L8A 11400000
&BSBDY   SETC   '1'                 SET INDICATOR BIT FOR SBDY=YES @L8A 11410000
&BAR15   SETC   '1'                 SET INDICATOR BIT FOR AR 15    @L8A 11420000
.ENDSBDY ANOP                       End of STARTBDY processing     @L8A 11430000
.*                                                                      11440000
.********************************************************************** 11450000
.*                                                                      11460000
.* CHECK KEYWORD FOR THE ADDRESS OF STORAGE                             11470000
.*                                                                      11480000
.*     When the ADDR parm is passed as a register, addtional checks     11490000
.* are made to make sure that a valid register is selected.  For the    11500000
.* ADDR parm only regs 1 thru 12 are valid with reg 1 being the         11510000
.* preferred register.                                                  11520000
.*                                                                      11530000
.********************************************************************** 11540000
.*                                                                      11550000
         AIF ('&ADDR' EQ '').CHKTADD   IF ADDR WAS NOT SPECIFIED   @D4C 11560000
         AIF (N'&ADDR LT 2).CHKADDR1   IF NUMBER OF ARGUMENTS LT 2      11570000
         MNOTE  4,'&I331 ''ADDR=&ADDR'' &TOLONG ''ADDR=&ADDR(1)''.'     11580000
&ERROR4  SETA   4                      NOTE ERROR                       11590000
&IADDR   SETC   '&ADDR(1)'             SAVE ADDR SPECIFICATION          11600000
         AGO    .CHKADDR2              CONTINUE TO CHECK THE KEYWORD    11610000
.CHKADDR1 ANOP                                                          11620000
&IADDR   SETC   '&ADDR'                SAVE ADDR SPECIFICATION          11630000
.CHKADDR2 ANOP                                                          11640000
         AIF ('&IADDR' EQ '').CHKADDR3  IF ARGUMENT NULL                11650000
&ADDRREG SETB  ('&IADDR'(1,1) EQ '(')   SET IF INA ADDR IS IN REGISTER  11660000
         AIF (NOT &ADDRREG).CHKTADD      IF ADDR NOT IN REGISTER   @D4C 11670000
&IADDR   SETC   '&IADDR'(2,K'&IADDR-2)  STRIP PARENS           @YA30573 11680000
         AIF ('&IADDR' EQ '').CHKADDR3  IF ARGUMENT NULL       @YA30573 11690000
         AIF ('&IADDR' EQ '0').CHKADDR12 IF REG NOT VALID FOR ADDR      11700000
.*                                      ISSUE MNOTE            @YA30573 11710000
         AIF ('&IADDR' EQ '00').CHKADDR12 IF REG NOT VALID FOR ADDR     11720000
.*                                      ISSUE MNOTE            @YA30573 11730000
         AIF ('&IADDR' EQ '13').CHKADDR12 IF REG NOT VALID FOR ADDR     11740000
.*                                      ISSUE MNOTE            @YA30573 11750000
         AIF ('&IADDR' EQ '14').CHKADDR12 IF REG NOT VALID FOR ADDR     11760000
.*                                      ISSUE MNOTE            @YA30573 11770000
         AIF ('&IADDR' EQ '15').CHKADDR12 IF REG NOT VALID FOR ADDR     11780000
.*                                      ISSUE MNOTE            @YA30573 11790000
         AGO    .CHKTADD               CONTINUE WITH NEXT KEYWORD  @D4C 11800000
.*                                                             @YA30573 11810000
.CHKADDR12 ANOP                                                @YA30573 11820000
         MNOTE  12,'&I343 &REGNOGD  ''ADDR'' &VALDREG 1-12.' REG        11830000
.*                                     SPECIFIED WAS NOT 1-12  @YA30573 11840000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 11850000
         AGO    .CHKTADD               CONTINUE WITH NEXT KEYWORD  @D4C 11860000
.*                                                             @YA30573 11870000
.CHKADDR3 ANOP                                                          11880000
        MNOTE  12,'&I313 &NOARG        ''ADDR'' PARAMETER.'             11890000
&ERROR12 SETA   12                     NOTE ERROR                       11900000
.*                                                                      11910000
.********************************************************************** 11920000
.*                                                                      11930000
.* CHECK KEYWORD FOR THE TCB ADDRESS                                    11940000
.*                                                                      11950000
.*     When the TCBADDR parm is passed as a register, additional checks 11960000
.* are made to make sure that a valid register is selected.  For the    11970000
.* TCBADDR parm only regs 2 through 12 are valid.                       11980000
.*                                                                      11990000
.********************************************************************** 12000000
.*                                                                      12010000
.CHKTADD ANOP                                                      @D4A 12020000
&ITCBADB SETC '0'                      TCBADDR NOT SPECIFIED       @D4A 12030000
         AIF ('&TCBADDR' EQ '').CHKIADD IF TCBADDR NOT SPECIFIED   @D4A 12040000
         AIF ('&ILINK' EQ 'SYSTEM').TADDLINKOK                          12050000
    MNOTE  12,'STORAGE --> TCBADDR is valid only with LINKAGE=SYSTEM'   12060000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 12070000
.TADDLINKOK ANOP                                                        12080000
         AIF (N'&TCBADDR LT 2).CHKTCBA1 IF NUMBER OF ARGUMENTS<2   @D4A 12090000
 MNOTE  4,'&I331 ''TCBADDR=&TCBADDR'' &TOLONG ''TCBADDR=&TCBADDR(1)''.'*12100000
                                                                   @D4A 12110000
&ERROR4  SETA   4                      NOTE ERROR                  @D4A 12120000
&ITCBADD SETC  '&TCBADDR(1)'           SAVE TCBADDR SPECIFICATION  @D4A 12130000
         AGO    .CHKTCBA2            CONTINUE TO CHECK THE KEYWORD @D4A 12140000
.CHKTCBA1 ANOP                                                     @D4A 12150000
&ITCBADD  SETC  '&TCBADDR'             SAVE TCBADDR SPECIFICATION  @D4A 12160000
.CHKTCBA2 ANOP                                                     @D4A 12170000
&ITCBADB SETC '1'                      TCBADDR SPECIFIED           @D4A 12180000
         AIF ('&ITCBADD' EQ '').CHKTCBA3 IF ARGUMENT NULL          @D4A 12190000
&TCBAREG SETB  ('&ITCBADD'(1,1) EQ '(') SET IF TCBADDR IN REGISTER @D4A 12200000
         AIF (NOT &TCBAREG).CHKIADD      IF TCBADDR NOT IN REG     @D4A 12210000
&ITCBADD SETC  '&ITCBADD'(2,K'&ITCBADD-2) STRIP PARENS             @D4A 12220000
         AIF ('&ITCBADD' EQ '').CHKTCBA3 IF ARGUMENT NULL          @D4A 12230000
         AIF (T'&ITCBADD NE 'N').CHKIADD   NOT NUMERIC             @D4A 12240000
         AIF ('&ITCBADD' LT '2').CHKTCBA12   Issue Mnote if not         12250000
.*                                      valid reg for TCBADDR      @D4A 12260000
         AIF ('&ITCBADD' GT '12').CHKTCBA12   Issue Mnote if not        12270000
.*                                      valid reg for TCBADDR      @D4A 12280000
         AGO    .CHKIADD               CONTINUE WITH NEXT KEYWORD  @D4A 12290000
.*                                                                 @D4A 12300000
.CHKTCBA12 ANOP                                                    @D4A 12310000
         MNOTE  12,'&I343 &REGNOGD  ''TCBADDR'' &VALDREG 2-12.' REG     12320000
.*                                     SPECIFIED WAS NOT 2-12      @D4A 12330000
&ERROR12 SETA   12                     NOTE ERROR                  @D4A 12340000
         AGO    .CHKIADD               CONTINUE WITH NEXT KEYWORD  @D4A 12350000
.*                                                                 @D4A 12360000
.CHKTCBA3 ANOP                                                     @D4A 12370000
        MNOTE  12,'&I313 &NOARG        ''TCBADDR'' PARAMETER.'     @D4A 12380000
&ERROR12 SETA   12                     NOTE ERROR                  @D4A 12390000
.*                                                                      12400000
.********************************************************************** 12410000
.*                                                                      12420000
.* CHECK KEYWORD FOR THE INPUT ADDRESS OF STORAGE TO OBTAIN        @L4A 12430000
.*                                                                      12440000
.*     When the INADDR parm is passed as a register, addtional checks   12450000
.* are made to make sure that a valid register is selected.  For the    12460000
.* INADDR parm only regs 1 thru 12 are valid with reg 1 being the       12470000
.* preferred register.                                                  12480000
.*     INADDR requires that (OBTAIN) and LOC=EXPLICIT be specified.     12490000
.*     INADDR is mutually exclusive with BNDRY and variable length      12500000
.*                                                                      12510000
.********************************************************************** 12520000
.*                                                                      12530000
.CHKIADD ANOP                                                           12540000
         AIF ('&INADDR' EQ '').CHKALET IF INADDR WAS NOT SPECIFIED @L4A 12550000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKIAD1 IF 'OBTAIN' FUNCTION   @P7A 12560000
         MNOTE  12,'&I323 ''INADDR'' PARAMETER &INVALID ''&IFUNC''.'    12570000
&ERROR12 SETA   12                     NOTE ERROR                  @P7A 12580000
         AGO    .CHKALET               CONTINUE TO CHECK NEXT      @P7A 12590000
.CHKIAD1 ANOP                                                      @P7A 12600000
         AIF ('&ILINK' NE 'GLOBALBRANCH').INADDRLINKOK                  12610000
 MNOTE  12,'STORAGE --> INADDR is not valid with LINKAGE=GLOBALBRANCH'  12620000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 12630000
.INADDRLINKOK ANOP                                                      12640000
         AIF (N'&INADDR LT 2).CHKIADD1 IF NUMBER OF ARGUMENTS LT 2 @L4A 12650000
         MNOTE  4,'&I331 ''INADDR=&INADDR'' &TOLONG                    +12660000
                                     ''INADDR=&INADDR(1)''.'       @L4A 12670000
&ERROR4  SETA   4                      NOTE ERROR                  @L4A 12680000
&IINADDR SETC   '&INADDR(1)'           SAVE INADDR SPECIFICATION   @L4A 12690000
         AGO    .CHKIADD2              CONTINUE TO CHECK KEYWORD   @L4A 12700000
.CHKIADD1 ANOP                                                          12710000
&IINADDR SETC   '&INADDR'              SAVE INADDR SPECIFICATION   @L4A 12720000
.CHKIADD2 ANOP                                                          12730000
         AIF ('&IINADDR' EQ '').CHKIADD3 IF ARGUMENT NULL          @L4A 12740000
&IADRREG SETB  ('&IINADDR'(1,1) EQ '(') SET IF INADDR IN REGISTER  @L4A 12750000
        AIF (NOT &IADRREG).CHKIADDZ     IF INADDR NOT IN REGISTER  @L4A 12760000
&IINADDR SETC   '&IINADDR'(2,K'&IINADDR-2) STRIP PARENS            @L4A 12770000
         AIF ('&IINADDR' EQ '').CHKIADD3 IF ARGUMENT NULL          @L4A 12780000
         AIF ('&IINADDR' EQ '0').CHKIADDY IF REG NOT VALID FOR INADDR   12790000
.*                                      ISSUE MNOTE                @L4A 12800000
         AIF ('&IINADDR' EQ '00').CHKIADDY IF REG NOT VALID FOR INADDR  12810000
.*                                      ISSUE MNOTE                @L4A 12820000
         AIF ('&IINADDR' EQ '13').CHKIADDY IF REG NOT VALID FOR INADDR  12830000
.*                                      ISSUE MNOTE                @L4A 12840000
         AIF ('&IINADDR' EQ '14').CHKIADDY IF REG NOT VALID FOR INADDR  12850000
.*                                      ISSUE MNOTE                @L4A 12860000
         AIF ('&IINADDR' EQ '15').CHKIADDY IF REG NOT VALID FOR INADDR  12870000
.*                                      ISSUE MNOTE                @L4A 12880000
.CHKIADDZ ANOP                                                     @L4A 12890000
         AIF ('&LOC(1)' NE 'EXPLICIT').CHKIADD4 LOC=EXPLICIT MUST BE    12900000
.*                                      SPECIFIED WITH INADDR      @L4A 12910000
         AIF ('&IFUNC' EQ 'RELEASE').CHKIADD5  CANNOT USE INADDR ON     12920000
.*                                      RELEASE REQUEST            @L4A 12930000
         AIF ('&BNDRY' NE '').CHKIADD6  BNDRY NOT ALLOWED WITH INADDR   12940000
.*                                                                 @L4A 12950000
         AIF ('&LENGTH' NE '' AND N'&LENGTH GT 1).CHKIADD7         @L4A 12960000
.*                                     VARIABLE LENGTH WITH INADDR @L4A 12970000
         AIF ('&OWNER' NE '').CHKIADD8 OWNER WITH INADDR           @P7A 12980000
         AGO    .CHKALET               CONTINUE TO CHECK NEXT KEYWORD   12990000
.*                                                                 @L4A 13000000
.CHKIADDY ANOP                                                     @L4A 13010000
         MNOTE  12,'&I343 &REGNOGD  ''INADDR'' &VALDREG 1-12.' REG      13020000
.*                                     SPECIFIED WAS NOT 1-12      @L4A 13030000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 13040000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 13050000
.*                                                                 @L4A 13060000
.CHKIADD3 ANOP                                                     @L4A 13070000
         MNOTE  12,'&I313 &NOARG       ''INADDR'' PARAMETER.'           13080000
.*                                                                 @L4A 13090000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 13100000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 13110000
.CHKIADD4 ANOP                                                     @L4A 13120000
         MNOTE  12,'&I313 ''LOC=EXPLICIT'' REQUIRED WITH ''INADDR''.'   13130000
.*                                                                 @P7C 13140000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 13150000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 13160000
.CHKIADD5 ANOP                                                     @L4A 13170000
         MNOTE  12,'&I313 ''INADDR'' ONLY ALLOWED WITH ''OBTAIN''.'     13180000
.*                                                                 @L4A 13190000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 13200000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 13210000
.CHKIADD6 ANOP                                                     @L4A 13220000
         MNOTE  12,'&I313 ''BNDRY'' NOT ALLOWED WITH ''INADDR''.'       13230000
.*                                                                 @L4A 13240000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 13250000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 13260000
.CHKIADD7 ANOP                                                     @L4A 13270000
         MNOTE  12,'&I313 VARIABLE LENGTH NOT ALLOWED WITH ''INADDR''.' 13280000
.*                                                                 @L4A 13290000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 13300000
         AGO    .CHKALET               CONTINUE WITH NEXT KEYWORD  @L4A 13310000
.CHKIADD8 ANOP                                                     @L4A 13320000
         MNOTE  12,'&I313 ''OWNER'' NOT ALLOWED WITH ''INADDR''.'       13330000
.*                                                                 @P7C 13340000
&ERROR12 SETA   12                     NOTE ERROR                  @L4A 13350000
.*                                                                      13360000
.********************************************************************** 13370000
.*                                                                      13380000
.* CHECK KEYWORD FOR THE ACCESS LIST ENTRY TOKEN                        13390000
.*                                                                      13400000
.********************************************************************** 13410000
.*                                                                      13420000
.CHKALET ANOP                                                           13430000
&BALET   SETC   '0'  SET INDICATOR BIT TO ASSUME PRIMARY ADDRESS SPACE  13440000
&IALET   SETC   '0'  SET ARGUMENT TO ASSUME PRIMARY ADDRESS SPACE       13450000
         AIF ('&ALET' EQ '').CHKLEN    IF ALET WAS NOT SPECIFIED        13460000
         AIF ('&ILINK' EQ 'SYSTEM').ALETLINKOK                          13470000
    MNOTE  12,'STORAGE --> ALET is valid only with LINKAGE=SYSTEM'      13480000
&ERROR12 SETA   12                     NOTE ERROR                  @L2A 13490000
.ALETLINKOK ANOP                                                        13500000
         AIF (N'&ALET LT 2).CHKALET1   IF NUMBER OF ARGUMENTS LT 2      13510000
         MNOTE  4,'&I331 ''ALET=&ALET'' &TOLONG ''ALET=&ALET(1)''.'     13520000
&ERROR4  SETA   4                      NOTE ERROR                       13530000
&IALET   SETC   '&ALET(1)'             SAVE ALET SPECIFICATION          13540000
         AGO    .CHKALET2              CONTINUE TO CHECK THE KEYWORD    13550000
.CHKALET1 ANOP                                                          13560000
&IALET   SETC   '&ALET'                SAVE ALET SPECIFICATION          13570000
.CHKALET2 ANOP                                                          13580000
         AIF ('&IALET' EQ '').CHKALET21 IF ARGUMENT IS NULL             13590000
&ALETREG SETB  ('&IALET'(1,1) EQ '(')   SET BIT IF ALET IS IN REGISTER  13600000
         AIF (NOT &ALETREG).CHKALET3    IF ALET IS NOT IN REGISTER      13610000
         AIF ('&IALET'(2,K'&IALET-2) NE '').CHKALET3 IF ARG NOT NULL    13620000
.CHKALET21 ANOP                                                         13630000
         MNOTE  12,'&I313 &NOARG        ''ALET'' PARAMETER.'            13640000
&ERROR12 SETA   12                     NOTE ERROR                       13650000
         AGO    .CHKLEN                CONTINUE TO CHECK NEXT KEYWORD   13660000
.CHKALET3 ANOP                                                          13670000
&BALET   SETC   '1'                    INDICATE ALET SPECIFIED          13680000
.*                                                                      13690000
.********************************************************************** 13700000
.*                                                                      13710000
.* CHECK KEYWORD FOR THE LENGTH OF STORAGE                              13720000
.*                                                                      13730000
.*     When the LENGTH parm is passed as a register, addtional checks   13740000
.* are made to make sure that a valid register is selected.  For the    13750000
.* LENGTH parm only regs 0, 2-12 are valid with reg 0 being the         13760000
.* preferred register.  If min and max lengths are passed, the valid    13770000
.* regs for the min value are 0, 2-12 (with reg 0 being preferred),     13780000
.* the valid regs for the max value are 1-12 (with reg 1 being          13790000
.* preferred).                                                          13800000
.*                                                                      13810000
.********************************************************************** 13820000
.*                                                                      13830000
.CHKLEN  ANOP                                                           13840000
&BVAR    SETC   '0'                    ASSUME SINGLE LENGTH REQUEST     13850000
         AIF ('&LENGTH' NE '').CHKLEN0 IF LENGTH WAS NOT SPECIFIED      13860000
         AIF ('&IFUNC' EQ 'RELEASE').CHKSP   IF RELEASE                 13870000
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               13880000
&ERROR12 SETA   12                     NOTE ERROR                       13890000
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   13900000
.CHKLEN0 ANOP                                                           13910000
         AIF ('&IFUNC' NE 'RELEASE').CHKLNOB IF NOT RELEASE             13920000
         AIF (N'&LENGTH LT 2).CHKLEN11 IF NUMBER OF ARGUMENTS LT 2      13930000
         MNOTE  4,'&I331 ''LENGTH=&LENGTH'' &TOLONG ''LENGTH=&LENGTH(1)+13940000
               ''.'                                                     13950000
&ERROR4  SETA   4                      NOTE ERROR                       13960000
         AGO   .CHKLEN1                CONTINUE TO CHECK THE KEYWORD    13970000
.CHKLNOB ANOP                                                           13980000
         AIF (N'&LENGTH LT 3).CHKLEN10 IF NUMBER  OF ARGUMENTS LT 3     13990000
         MNOTE  4,'&I331 ''LENGTH=&LENGTH'' &TOLONG ''LENGTH=(&LENGTH(1+14000000
               ),&LENGTH(2))''.'                                        14010000
&ERROR4  SETA   4                      NOTE ERROR                       14020000
         AGO   .CHKLEN1                CONTINUE TO CHECK THE KEYWORD    14030000
.CHKLEN10 ANOP                                                          14040000
         AIF (N'&LENGTH LT 2).CHKLEN11 IF NUMBER OF ARGUMENTS LT 2      14050000
.CHKLEN1 ANOP                                                           14060000
&ILEN1   SETC   '&LENGTH(1)'           SAVE 1ST ARGUMENT OF LENGTH      14070000
         AGO   .CHKLEN12               CONTINUE TO CHECK THE KEYWORD    14080000
.CHKLEN11 ANOP                                                          14090000
&ILEN1   SETC   '&LENGTH'              SAVE ARGUMENT OF LENGTH          14100000
.CHKLEN12 ANOP                                                          14110000
         AIF ('&ILEN1' EQ '').CHKLEN13 IF 1ST ARGUMENT IS NULL          14120000
&LEN1REG SETB  ('&ILEN1'(1,1) EQ '(')  SET BIT IF LEN1 IS IN REGISTER   14130000
         AIF (NOT &LEN1REG).CHKLEN2    IF LEN1 IS NOT IN REGISTER       14140000
&ILEN1   SETC   '&ILEN1'(2,K'&ILEN1-2) STRIP PARENS            @YA30573 14150000
         AIF ('&ILEN1' EQ '').CHKLEN13 IF 1ST ARGUMENT IS NULL @YA30573 14160000
         AIF ('&ILEN1' EQ '1').CHKLEN14 IF REG NOT VALID                14170000
.*                                     ISSUE MNOTE             @YA30573 14180000
         AIF ('&ILEN1' EQ '01').CHKLEN14 IF REG NOT VALID               14190000
.*                                     ISSUE MNOTE             @YA30573 14200000
         AIF ('&ILEN1' EQ '13').CHKLEN14 IF REG NOT VALID               14210000
.*                                     ISSUE MNOTE             @YA30573 14220000
         AIF ('&ILEN1' EQ '14').CHKLEN14 IF REG NOT VALID               14230000
.*                                     ISSUE MNOTE             @YA30573 14240000
         AIF ('&ILEN1' EQ '15').CHKLEN14 IF REG NOT VALID               14250000
.*                                     ISSUE MNOTE             @YA30573 14260000
         AGO    .CHKLEN2               CONTINUE TO CHECK NEXT ARGUMENT  14270000
.*                                                             @YA30573 14280000
.CHKLEN14 ANOP                                                 @YA30573 14290000
         MNOTE  12,'&I343 &REGNOGD  ''LENGTH'' &VALDREG 0,2-12.' REG    14300000
.*                                    SPECIFIED WAS NOT 0,2-12 @YA30573 14310000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 14320000
         AGO    .CHKLEN2               CONTINUE TO CHECK NEXT ARGUMENT  14330000
.*                                                             @YA30573 14340000
.CHKLEN13 ANOP                                                          14350000
         MNOTE  12,'&I313 &NOVALU1 ''LENGTH'' PARAMETER.'               14360000
&ERROR12 SETA   12                                                      14370000
.CHKLEN2 ANOP                                                           14380000
         AIF (N'&LENGTH EQ 1).CHKSP    IF ONLY ONE ARGUMENT SPECIFIED   14390000
         AIF ('&IFUNC' EQ 'RELEASE').CHKSP IF RELEASE                   14400000
&ILEN2 SETC     '&LENGTH(2)'           SAVE 2ND ARGUMENT OF LENGTH      14410000
&BVAR    SETC   '1'                    INDICATE VARIABLE LENGTH REQUEST 14420000
         AIF ('&ILEN2' EQ '').CHKLEN21 IF 2ND ARGUMENT IS NULL          14430000
&LEN2REG SETB  ('&ILEN2'(1,1) EQ '(')  SET BIT IF LEN2 IS IN REGISTER   14440000
         AIF (NOT &LEN2REG).CHKSP      IF LEN2 IS NOT IN REGISTER       14450000
&ILEN2   SETC   '&ILEN2'(2,K'&ILEN2-2) STRIP PARENS            @YA30573 14460000
         AIF ('&ILEN2' EQ '').CHKLEN21 IF 2ND ARGUMENT IS NULL @YA30573 14470000
         AIF ('&ILEN2' EQ '0').CHKLEN24 IF REG NOT VALID                14480000
.*                                     ISSUE MNOTE             @YA30573 14490000
         AIF ('&ILEN2' EQ '00').CHKLEN24 IF REG NOT VALID               14500000
.*                                     ISSUE MNOTE             @YA30573 14510000
         AIF ('&ILEN2' EQ '13').CHKLEN24 IF REG NOT VALID               14520000
.*                                     ISSUE MNOTE             @YA30573 14530000
         AIF ('&ILEN2' EQ '14').CHKLEN24 IF REG NOT VALID               14540000
.*                                     ISSUE MNOTE             @YA30573 14550000
         AIF ('&ILEN2' EQ '15').CHKLEN24 IF REG NOT VALID               14560000
.*                                     ISSUE MNOTE             @YA30573 14570000
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   14580000
.*                                                             @YA30573 14590000
.CHKLEN24 ANOP                                                 @YA30573 14600000
         MNOTE  12,'&I343 &REGNOGD  2ND ''LENGTH'' &VALDREG 1-12.' REG  14610000
.*                                     SPECIFIED WAS NOT 1-12  @YA30573 14620000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 14630000
         AGO    .CHKSP                 CONTINUE TO CHECK NEXT KEYWORD   14640000
.*                                                             @YA30573 14650000
.CHKLEN21 ANOP                                                          14660000
         MNOTE  12,'&I313 &NOVALU2 ''LENGTH'' PARAMETER.'               14670000
&ERROR12 SETA   12                     NOTE ERROR                       14680000
.*                                                                      14690000
.********************************************************************** 14700000
.*                                                                      14710000
.* CHECK KEYWORD FOR THE SUBPOOL                                        14720000
.*                                                                      14730000
.*     When the SP parm is passed as a register, additional checks      14740000
.* are made to make sure that a valid register is selected.  For the    14750000
.* SP parm only regs 2 - 12 and 15 are valid with reg 15 being the      14760000
.* preferred register.  KEY and SP can be passed in the same reg but    14770000
.* the KEY value must be in bits 8-11 and the SP value must be in       14780000
.* bits 16-23.  if SP is passed in its own reg it must be in bits       14790000
.* 24-31.  the remainder of the bits should be zero in either case.     14800000
.*     When the SP parm is passed as a decimal number, the value is     14810000
.* checked to be 0-255.                                                 14820000
.*                                                                      14830000
.********************************************************************** 14840000
.*                                                                      14850000
.CHKSP   ANOP                                                           14860000
&ISP     SETC   '0'                    ASSUME SUBPOOL 0                 14870000
         AIF ('&SP' EQ '').CHKBNDY     IF SP WAS NOT SPECIFIED          14880000
         AIF (N'&SP  LT 2).CHKSP1      IF NUMBER OF ARGUMENTS LT 2      14890000
         MNOTE  4,'&I331 ''SP=&SP'' &TOLONG ''SP=&SP(1)''.'             14900000
&ERROR4  SETA   4                      NOTE ERROR                       14910000
&ISP     SETC   '&SP(1)'               SAVE SP SPECIFICATION            14920000
         AGO    .CHKSP10               CONTINUE TO CHECK NEXT KEYWORD   14930000
.CHKSP1  ANOP                                                           14940000
&ISP     SETC   '&SP'                  SAVE SP SPECIFICATION            14950000
.CHKSP10 ANOP                                                           14960000
         AIF ('&ISP' EQ '').CHKSP11    IF ARGUMENT IS NULL              14970000
&SPREG   SETB  ('&ISP'(1,1) EQ '(')    SET BIT IF SP IS IN REGISTER     14980000
         AIF (NOT &SPREG).CHKSP2       IF SP IS NOT IN REGISTER         14990000
&ISP     SETC '&ISP'(2,K'&ISP-2)       STRIP PARENS            @YA30573 15000000
         AIF ('&ISP' EQ '').CHKSP11    IF ARGUMENT IS NULL     @YA30573 15010000
         AIF ('&ISP' EQ '0').CHKSP12   IF REG NOT VALID                 15020000
.*                                     ISSUE MNOTE             @YA30573 15030000
         AIF ('&ISP' EQ '1').CHKSP12   IF REG NOT VALID                 15040000
.*                                     ISSUE MNOTE             @YA30573 15050000
         AIF ('&ISP' EQ '00').CHKSP12  IF REG NOT VALID                 15060000
.*                                     ISSUE MNOTE             @YA30573 15070000
         AIF ('&ISP' EQ '01').CHKSP12  IF REG NOT VALID                 15080000
.*                                     ISSUE MNOTE             @YA30573 15090000
         AIF ('&ISP' EQ '13').CHKSP12  IF REG NOT VALID                 15100000
.*                                     ISSUE MNOTE             @YA30573 15110000
         AIF ('&ISP' EQ '14').CHKSP12  IF REG NOT VALID                 15120000
.*                                     ISSUE MNOTE             @YA30573 15130000
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   15140000
.*                                                             @YA30573 15150000
.CHKSP12 ANOP                                                  @YA30573 15160000
         MNOTE  12,'&I343 &REGNOGD  ''SP'' &VALDREG 2-12,15.' REG       15170000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 15180000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 15190000
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   15200000
.*                                                             @YA30573 15210000
.CHKSP11 ANOP                                                           15220000
         MNOTE  12,'&I313 &NOARG        ''SP'' PARAMETER.'              15230000
&ERROR12 SETA   12                     NOTE ERROR                       15240000
         AGO    .CHKBNDY               CONTINUE TO CHECK NEXT KEYWORD   15250000
.CHKSP2  ANOP                                                           15260000
         AIF (T'&ISP NE 'N').CHKBNDY   NOT SPECIFIED AS A DECIMAL       15270000
         AIF (&ISP LE 255).CHKBNDY     VALUE LESS THAN OR EQUAL TO 255  15280000
&ERROR12 SETA   12                     NOTE ERROR                       15290000
         MNOTE  12,'&I343 ''&ISP'' IN ''SP=&ISP'' MUST BE LESS THAN 256+15300000
               .'                                                       15310000
.*                                                                      15320000
.********************************************************************** 15330000
.*                                                                      15340000
.* CHECK KEYWORD FOR THE BOUNDARY USAGE.  ARGUMENT ONE CAN BE EITHER    15350000
.* 'DBLWD' OR 'PAGE'.                                                   15360000
.* BNDRY CANNOT BE SPECIFIED WITH RELEASE.                              15370000
.*                                                                      15380000
.********************************************************************** 15390000
.*                                                                      15400000
.CHKBNDY ANOP                                                           15410000
&BBND    SETC   '0'      SET INDICATOR BIT TO ASSUME BNDRY=DBLWD        15420000
&IBNDRY  SETC   'DBLWD'  SET ARGUMENT TO ASSUME BNDRY=DBLWD             15430000
         AIF ('&BNDRY' EQ '').CHKKEY   IF BNDRY WAS NOT SPECIFIED       15440000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKBNDY1 IF 'OBTAIN' FUNCTION       15450000
         MNOTE  12,'&I323 ''BNDRY'' PARAMETER &INVALID  ''&IFUNC''.'    15460000
&ERROR12 SETA   12                     NOTE ERROR                       15470000
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   15480000
.CHKBNDY1 ANOP                                                          15490000
         AIF (N'&BNDRY LT 2).CHKBNDY2  IF NUMBER OF ARGUMENTS LT 2      15500000
         MNOTE  4,'&I331 ''BNDRY=&BNDRY'' &TOLONG ''BNDRY=&BNDRY(1)''.' 15510000
&ERROR4  SETA   4                      NOTE ERROR                       15520000
.CHKBNDY2 ANOP                                                          15530000
&IBNDRY  SETC   '&BNDRY(1)'            SAVE BNDRY SPECIFICATION         15540000
         AIF ('&IBNDRY' NE '').CHKBNDY3 IF ARGUMENT NOT NULL            15550000
         MNOTE  12,'&I313 &NOARG        ''BNDRY'' PARAMETER.'           15560000
&ERROR12 SETA   12                     NOTE ERROR                       15570000
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   15580000
.CHKBNDY3 ANOP                                                          15590000
         AIF ('&IBNDRY' EQ 'PAGE').CHKBNDY4 IF BNDRY=PAGE               15600000
         AIF ('&IBNDRY' EQ 'DBLWD').CHKKEY  IF BNDRY=DBLWD              15610000
&ERROR12 SETA   12                     NOTE ERROR                       15620000
         MNOTE  12,'&I343 ''&BNDRY(1)'' IN ''BNDRY=&BNDRY'' MUST BE ''P+15630000
               AGE'' OR ''DBLWD''.'                                     15640000
         AGO    .CHKKEY                CONTINUE TO CHECK NEXT KEYWORD   15650000
.CHKBNDY4 ANOP                                                          15660000
&BBND    SETC   '1'                    SET INDICATOR BIT FOR BNDRY=PAGE 15670000
.*                                                                      15680000
.********************************************************************** 15690000
.*                                                                      15700000
.* CHECK KEYWORD FOR THE KEY NUMBER                                     15710000
.*                                                                      15720000
.*     When the KEY parm is passed as a register, addtional checks      15730000
.* are made to make sure that a valid register is selected.  For the    15740000
.* KEY parm only regs 2 - 12 and 15 are valid with reg 15 being the     15750000
.* preferred register.  KEY and SP can be passed in the same reg but    15760000
.* the KEY value must be in bits 8-11 and the SP value must be in       15770000
.* bits 16-23.  if KEY is passed in its own reg it must be in bits      15780000
.* 24-27.  the remainder of the bits should be zero in either case.     15790000
.*     When the KEY parm is passed as a decimal number, the value is    15800000
.* checked to be 0-16.                                                  15810000
.*                                                                      15820000
.********************************************************************** 15830000
.*                                                                      15840000
.CHKKEY  ANOP                                                           15850000
&IKEY    SETC   '0'                    ASSUME KEY 0                     15860000
         AIF ('&KEY' EQ '').CHKLOC     IF KEY WAS NOT SPECIFIED         15870000
         AIF ('&ILINK' EQ 'SYSTEM').KEYLINK                             15880000
&BCKEY    SETC   '1'                GETMAIN uses the same bit for KEY   15890000
*                                   that STORAGE uses for CALLRKY       15900000
.KEYLINK ANOP                                                           15910000
         AIF (N'&KEY LT 2).CHKKEY1     IF NUMBER OF ARGUMENTS LT 2      15920000
         MNOTE  4,'&I331 ''KEY=&KEY'' &TOLONG ''KEY=&KEY(1)''.'         15930000
&ERROR4  SETA   4                      NOTE ERROR                       15940000
&IKEY    SETC   '&KEY(1)'              SAVE KEY SPECIFICATION           15950000
         AGO    .CHKKEY10              CONTINUE TO CHECK NEXT KEYWORD   15960000
.CHKKEY1 ANOP                                                           15970000
&IKEY    SETC   '&KEY'                 SAVE KEY SPECIFICATION           15980000
.CHKKEY10 ANOP                                                          15990000
         AIF ('&IKEY' EQ '').CHKKEY11  IF ARGUMENT NULL                 16000000
&KEYREG  SETB  ('&IKEY'(1,1) EQ '(')   SET BIT IF KEY IS IN REG         16010000
         AIF (NOT &KEYREG).CHKKEY2     IF KEY IS NOT IN REGISTER        16020000
&IKEY    SETC   '&IKEY'(2,K'&IKEY-2)   STRIP PARENS            @YA30573 16030000
         AIF ('&IKEY' EQ '').CHKKEY11  IF ARGUMENT NULL        @YA30573 16040000
         AIF ('&IKEY' EQ '0').CHKKEY12 IF REG NOT VALID                 16050000
.*                                     ISSUE MNOTE             @YA30573 16060000
         AIF ('&IKEY' EQ '1').CHKKEY12 IF REG NOT VALID                 16070000
.*                                     ISSUE MNOTE             @YA30573 16080000
         AIF ('&IKEY' EQ '00').CHKKEY12 IF REG NOT VALID                16090000
.*                                     ISSUE MNOTE             @YA30573 16100000
         AIF ('&IKEY' EQ '01').CHKKEY12 IF REG NOT VALID                16110000
.*                                     ISSUE MNOTE             @YA30573 16120000
         AIF ('&IKEY' EQ '13').CHKKEY12 IF REG NOT VALID                16130000
.*                                     ISSUE MNOTE             @YA30573 16140000
         AIF ('&IKEY' EQ '14').CHKKEY12 IF REG NOT VALID                16150000
.*                                     ISSUE MNOTE             @YA30573 16160000
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   16170000
.*                                                             @YA30573 16180000
.CHKKEY12 ANOP                                                 @YA30573 16190000
         MNOTE  12,'&I343 &REGNOGD  ''KEY'' &VALDREG 2-12,15.' REG      16200000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 16210000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 16220000
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   16230000
.*                                                             @YA30573 16240000
.CHKKEY11 ANOP                                                          16250000
         MNOTE  12,'&I313 &NOARG        ''KEY'' PARAMETER.'             16260000
&ERROR12 SETA   12                     NOTE ERROR                       16270000
         AGO    .CHKLOC                CONTINUE TO CHECK NEXT KEYWORD   16280000
.CHKKEY2 ANOP                                                           16290000
         AIF (T'&IKEY NE 'N').CHKLOC   IF NOT A DECIMAL NUMBER          16300000
         AIF (&IKEY LT 16).CHKLOC      IF LESS THAN 16                  16310000
         MNOTE  12,'&I343 ''&IKEY'' IN ''KEY=&IKEY'' MUST BE A DECIMAL +16320000
               NUMBER LESS THAN 16.'                                    16330000
&ERROR12 SETA   12                     NOTE ERROR                       16340000
.*                                                                      16350000
.********************************************************************** 16360000
.*                                                                      16370000
.* CHECK KEYWORD FOR THE LOCATION SPECIFICATION. THERE MAY BE EITHER    16380000
.* ONE OR TWO ARGUMENTS.  THE FIRST STANDS FOR THE VIRTUAL STORAGE AND  16390000
.* MAY BE EITHER 'RES', '24', '31' or 'EXPLICIT'.        THE 2nd   @L4C 16400000
.* ARGUMENT STANDS FOR REAL STORAGE AND MAY BE '31',                    16410000
.* OR '64', OR 'PAGEFRAMESIZE1MB', OR IF EXPLICIT                  @L9C 16420000
.* WAS SPECIFIED FOR THE FIRST ARGUMENT, '24'. THE DEFAULT FOR     @L4C 16430000
.* THE SECOND ARGUMENT WHEN THE FIRST ARGUMENT IS 'EXPLICIT' IS    @L4C 16440000
.* '31'.THE DEFAULT FOR THE FIRST ARGUMENT IS 'RES'.               @L4C 16450000
.* 'PAGEFRAMESIZE1MB' CAN BE SPECIFIED FOR THE 2ND ARGUMENT ONLY   @L9A 16460000
.* IF '31' OR 'EXPLICIT' IS  SPECIFIED FOR THE 1ST ARGUMENT.       @L9A 16470000
.* LOC CANNOT BE SPECIFIED WITH RELEASE.                                16480000
.* INADDR IS REQUIRED WITH LOC=EXPLICIT                            @L4A 16490000
.*                                                                      16500000
.********************************************************************** 16510000
.*                                                                      16520000
.CHKLOC  ANOP                                                           16530000
&BLOC    SETC   '00'                   ASSUME RES FOR VIRTUAL           16540000
&BREAL   SETC   '0'                    ASSUME 31 NOT SPECIFIED          16550000
&BREAL64 SETC   '0'                    ASSUME 64 NOT SPECIFIED     @L7A 16560000
&BFRSZMB  SETC   '0'               PAGEFRAMESIZE1MB OFF BY DEFAULT @A5M 16570000
         AIF ('&LOC' EQ '').CHKLOCEND  IF LOC WAS NOT SPECIFIED         16580000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKLOC1 IF 'OBTAIN' FUNCTION        16590000
         MNOTE  12,'&I323 ''LOC'' PARAMETER &INVALID    ''&IFUNC''.'    16600000
&ERROR12 SETA   12                     NOTE ERROR                       16610000
         AGO    .CHKLOCEND             CONTINUE TO CHECK NEXT KEYWORD   16620000
.CHKLOC1 ANOP                                                           16630000
         AIF (N'&LOC  LT 3).CHKLOC2    IF NUMBER OF ARGUMENTS LT 3      16640000
         MNOTE  4,'&I331 ''LOC=&LOC'' &TOLONG ''LOC=(&LOC(1),&LOC(2))''+16650000
               .'                                                       16660000
&ERROR4  SETA   4                      NOTE ERROR                       16670000
.CHKLOC2 ANOP                                                           16680000
&ILOC1   SETC   '&LOC(1)'              SAVE FIRST ARGUMENT              16690000
         AIF ('&ILOC1' NE '').CHKLOC3  IF FIRST ARGUMENT NOT NULL       16700000
         MNOTE  12,'&I313 &NOVALU1 ''LOC'' PARAMETER.'                  16710000
&ERROR12 SETA   12                     NOTE ERROR                       16720000
         AGO    .CHKLOC6               CONTINUE TO CHECK THE KEYWORD    16730000
.CHKLOC3 ANOP                                                           16740000
         AIF ('&ILOC1' EQ 'EXPLICIT').CHKLOC6 IF EXPLICIT LOCATION      16750000
         AIF ('&ILOC1' EQ 'RES').CHKLOC7    IF RES LOCATION             16760000
         AIF ('&ILOC1' EQ 'BELOW').CHKLOC4  IF BELOW LOCATION           16770000
         AIF ('&ILOC1' EQ '24').CHKLOC4     IF 24 LOCATION              16780000
         AIF ('&ILOC1' EQ 'ANY').CHKLOC5    IF ANY LOCATION             16790000
         AIF ('&ILOC1' EQ '31').CHKLOC5     IF ANY LOCATION             16800000
         MNOTE  12,'&I343 &ARGM1 ''LOC=&LOC'' MUST BE ''RES'', ''24'', +16810000
               ''31'' OR ''EXPLICIT''.'                            @L4C 16820000
&ERROR12 SETA   12                     NOTE ERROR                       16830000
         AGO    .CHKLOC7               CONTINUE TO CHECK KEYWORD   @L4C 16840000
.CHKLOC4 ANOP                          24 LOCATION                      16850000
&BLOC    SETC   '01'                   SET INDICATOR BIT                16860000
         AGO    .CHKLOC7               CHECK SECOND OPERAND        @L4C 16870000
.CHKLOC5 ANOP                          31 LOCATION                      16880000
&BLOC    SETC   '11'                   SET INDICATOR BIT                16890000
&BREAL   SETC   '1'                    INDICATE 31 SPECIFIED            16900000
         AGO    .CHKLOC7               CHECK SECOND OPERAND        @L4A 16910000
.CHKLOC6 ANOP                          EXPLICIT LOCATION           @L4A 16920000
&BLOC    SETC   '10'                   SET INDICATOR BIT           @L4A 16930000
         AIF ('&IINADDR' NE '').CHKLOC7 INADDR REQUIRED WITH EXPLICIT   16940000
.*                                                                 @L4A 16950000
         MNOTE  12,'&I313 ''INADDR'' IS REQUIRED WITH ''LOC=EXPLICIT''.+16960000
               '                                                   @L4A 16970000
&ERROR12 SETA   12                     NOTE ERROR                       16980000
         AGO    .CHKLOCEND             CONTINUE TO CHECK NEXT KEYWORD   16990000
.CHKLOC7 ANOP                          CHECK SECOND OPERAND        @L4C 17000000
         AIF (N'&LOC  EQ 1).CHKLOC9    IF ONLY 1 ARGUMENT WAS SPECIFIED 17010000
&ILOC2   SETC   '&LOC(2)'              SAVE SECOND ARGUMENT             17020000
         AIF ('&ILOC2' NE '').CHKLOC8  IF SECOND ARGUMENT NOT NULL @L4C 17030000
         MNOTE  12,'&I313 &NOVALU2 ''LOC'' PARAMETER.'                  17040000
&ERROR12 SETA   12                     NOTE ERROR                       17050000
         AGO    .CHKLOCEND             CONTINUE TO CHECK NEXT KEYWORD   17060000
.CHKLOC8 ANOP                          SECOND OPERAND IS 31        @L4C 17070000
         AIF ('&ILOC2' EQ 'ANY').CHKLOCA ANY LOCATION                   17080000
         AIF ('&ILOC2' EQ '31').CHKLOCA ANY LOCATION                    17090000
         AIF ('&ILOC2' EQ '64').CHKLOC64 ANY 64                    @L8A 17100000
         AIF ('&ILOC2' EQ 'PAGEFRAMESIZE1MB').CHKLOCMB             @L9A 17110000
         AIF ('&ILOC1' EQ 'EXPLICIT').CHKLOCB MAYBE EXPLICIT,24    @L4A 17120000
         MNOTE  12,'&I343 &ARGM2 ''LOC=&LOC'' MUST BE ''31''.'          17130000
&ERROR12 SETA   12                     NOTE ERROR                       17140000
         AGO    .CHKLOCEND             CONTINUE TO CHECK NEXT KEYWORD   17150000
.CHKLOC9 ANOP                          NO SECOND OPERAND SPECIFIED @L4A 17160000
         AIF ('&ILOC1' NE 'EXPLICIT').CHKLOCEND NOT EXPICIT        @L4A 17170000
.CHKLOCA ANOP                          SECOND OPERAND IS 31        @L4C 17180000
&BREAL   SETC   '1'                    INDICATE 31 SPECIFIED            17190000
         AGO    .CHKLOCEND             CHECK NEXT KEYWORD          @L4A 17200000
.CHKLOC64 ANOP                         SECOND OPERAND IS 64        @L8A 17210000
&BREAL64 SETC   '1'                    INDICATE 64 SPECIFIED       @L7A 17220000
&BREAL   SETC   '1'                    INDICATE 31 SPECIFIED       @02A 17230000
         AGO    .CHKLOCEND             CHECK NEXT KEYWORD          @L8A 17240000
.CHKLOCB ANOP                          EXPLICIT,xxx                @L4C 17250000
         AIF ('&ILOC2' EQ 'BELOW').CHKLOCEND BELOW SPECIFIED            17260000
         AIF ('&ILOC2' EQ '24').CHKLOCEND   24 SPECIFIED                17270000
         MNOTE  12,'&I343 &ARGM2 ''LOC=&LOC'' MUST BE ''24'', ''31'', O+17280000
               R ''64''.'                                               17290000
&ERROR12 SETA   12                     NOTE ERROR                       17300000
         AGO    .CHKLOCEND             CONTINUE TO CHECK NEXT KEYWORD   17310000
.CHKLOCMB ANOP                         xxx,PAGEFRAMESIZE1MB        @L9A 17320000
         AIF ('&ILOC1' EQ '31').SETLOCMB        31 SPECIFIED       @L9A 17330000
         AIF ('&ILOC1' EQ 'EXPLICIT').SETLOCMB  EXPLICIT SPECIFIED @L9A 17340000
         MNOTE  12,'&I343 &ARGM1 ''LOC=&LOC'' MUST BE ''EXPLICIT'', OR +17350000
                 ''31''.'                                               17360000
&ERROR12 SETA   12                     NOTE ERROR                       17370000
         AGO    .CHKLOCEND             CHECK NEXT KEYWORD          @L9A 17380000
.SETLOCMB ANOP                         SET PAGEFRAMESIZE1MB FLAG   @L9A 17390000
&BFRSZMB  SETC   '1'                   INDICATE PAGEFRAMESIZE1MB   @L9A 17400000
&BAR15    SETC   '1'                 Set indicator bit for AR 15   @PDA 17410000
.CHKLOCEND ANOP                                                         17420000
.*                                                                      17430000
.********************************************************************** 17440000
.*                                                                      17450000
.* CHECK KEYWORD FOR THE BACK.                                     @PBA 17460000
.*                                                                      17470000
.********************************************************************** 17480000
.*                                                                      17490000
&IBACK   SETC   '00'                   Assume BACK=BYSPT           @PBA 17500000
         AIF ('&BACK' EQ '').BACKEND     IF BACK NOT SPECIFIED     @PBA 17510000
         AIF (N'&BACK     LT 2).CHKBACK1 IF NUMBER OF ARGS LT 2    @PBA 17520000
         MNOTE  4,'&I331 ''BACK=&BACK'' &TOLONG ''BACK=&BACK(1)''.'    *17530000
                                                                   @PBA 17540000
&ERROR4  SETA   4                      Note error                  @PBA 17550000
.CHKBACK1 ANOP                                                     @PBA 17560000
         AIF   ('&BACK(1)' NE 'BYSPT').CHKBACK2                    @PBA 17570000
&IBACK   SETC   '00'                   BACK=BYSPT                  @PBA 17580000
         AGO   .CHKBACK9                                           @PBA 17590000
.CHKBACK2 ANOP                                                     @PBA 17600000
&BAR15   SETC   '1'                 Set indicator bit for AR 15    @PBA 17610000
         AIF   ('&BACK(1)' NE 'NONE').CHKBACK3                     @PBA 17620000
&IBACK   SETC   '01'                   BACK = NONE                 @PBA 17630000
         AGO   .CHKBACK9                                           @PBA 17640000
.CHKBACK3 ANOP                                                     @PBA 17650000
         AIF   ('&BACK(1)' NE 'ALL').CHKBACK5                      @PBA 17660000
&IBACK   SETC   '10'                   BACK = ALL                  @PBA 17670000
         AGO   .CHKBACK9                                           @PBA 17680000
.CHKBACK5 ANOP                                                     @PBA 17690000
         MNOTE 12,'&I343 ''&BACK(1)'' IN ''BACK=&BACK'' MUST BE ''BYSPT+17700000
               '', ''NONE'',  OR ''ALL''.'                         @PBA 17710000
&ERROR12 SETA   12                     NOTE ERROR                  @PBA 17720000
.CHKBACK9 ANOP                                                     @PBA 17730000
         AIF ('&IFUNC' EQ 'OBTAIN').BACKEND IF 'OBTAIN' FUNCTION   @PBA 17740000
      MNOTE 12,'&I323 ''BACK'' PARAMETER &INVALID ''RELEASE''.'    @PBA 17750000
&ERROR12 SETA   12                     NOTE ERROR                  @PBA 17760000
.BACKEND ANOP                                                      @PBA 17770000
.*                                                                      17780000
.********************************************************************** 17790000
.*                                                                      17800000
.* CHECK KEYWORD FOR THE FIX.                                      @PBA 17810000
.*                                                                      17820000
.********************************************************************** 17830000
.*                                                                      17840000
&IFIX    SETC   '00'                   Assume FIX=NONE             @PBA 17850000
         AIF ('&FIX' EQ '').FIXEND       IF FIX NOT SPECIFIED      @PBA 17860000
         AIF (N'&FIX      LT 2).CHKFIX1 IF NUMBER OF ARGS LT 2     @PBA 17870000
         MNOTE  4,'&I331 ''FIX=&FIX'' &TOLONG ''FIX=&FIX(1)''.'        *17880000
                                                                   @PBA 17890000
&ERROR4  SETA   4                      Note error                  @PBA 17900000
.CHKFIX1 ANOP                                                      @PBA 17910000
         AIF   ('&FIX(1)' NE 'NONE').CHKFIX2                       @PBA 17920000
&IFIX    SETC   '00'                   FIX=NONE                    @PBA 17930000
         AGO   .CHKFIX9                                            @PBA 17940000
.CHKFIX2 ANOP                                                      @PBA 17950000
&BAR15   SETC   '1'                 Set indicator bit for AR 15    @PBA 17960000
         AIF   ('&FIX(1)' NE 'SHORT').CHKFIX3                      @PBA 17970000
&IFIX    SETC   '01'                   FIX = SHORT                 @PBA 17980000
         AGO   .CHKFIX9                                            @PBA 17990000
.CHKFIX3 ANOP                                                      @PBA 18000000
         AIF   ('&FIX(1)' NE 'LONG').CHKFIX5                       @PBA 18010000
&IFIX    SETC   '10'                   FIX = LONG                  @PBA 18020000
         AGO   .CHKFIX9                                            @PBA 18030000
.CHKFIX5 ANOP                                                      @PBA 18040000
         MNOTE 12,'&I343 ''&FIX(1)'' IN ''FIX=&FIX'' MUST BE ''NONE'','+18050000
               'SHORT'',  OR ''LONG''.'                            @PBA 18060000
&ERROR12 SETA   12                     NOTE ERROR                  @PBA 18070000
.CHKFIX9 ANOP                                                      @PBA 18080000
         AIF ('&IFUNC' EQ 'OBTAIN').FIXEND IF 'OBTAIN' FUNCTION    @PBA 18090000
      MNOTE 12,'&I323 ''FIX'' PARAMETER &INVALID ''RELEASE''.'     @PBA 18100000
&ERROR12 SETA   12                     NOTE ERROR                  @PBA 18110000
.FIXEND ANOP                                                       @PBA 18120000
.*                                                                      18130000
.********************************************************************** 18140000
.*                                                                      18150000
.* CHECK KEYWORD FOR THE OWNER.                                    @L3A 18160000
.*                                                                      18170000
.********************************************************************** 18180000
.*                                                                      18190000
.CHKOWNR ANOP                                                      @L3A 18200000
&IOWN    SETC   '00'                   ASSUME OWNER=HOME           @L3A 18210000
         AIF ('&OWNER' EQ '').CHKEXEC    IF OWNER NOT SPECIFIED    @A5C 18220000
         AIF (N'&OWNER    LT 2).CHKOWN1  IF NUMBER OF ARGS LT 2    @L3A 18230000
         MNOTE  4,'&I331 ''OWNER=&OWNER'' &TOLONG ''OWNER=&OWNER(1)''.'*18240000
                                                                   @L3A 18250000
&ERROR4  SETA   4                      NOTE ERROR                  @L3A 18260000
.CHKOWN1 ANOP                                                      @L3A 18270000
         AIF   ('&OWNER(1)' NE 'HOME').CHKOWN2                     @L3A 18280000
&IOWN    SETC   '00'                   OWNER=HOME                  @L3A 18290000
         AGO   .CHKOWN9                                            @L3A 18300000
.CHKOWN2 ANOP                                                      @L3A 18310000
         AIF   ('&OWNER(1)' NE 'PRIMARY').CHKOWN3                  @L3A 18320000
&IOWN    SETC   '01'                   OWNER = PRIMARY             @L3A 18330000
         AGO   .CHKOWN9                                            @L3A 18340000
.CHKOWN3 ANOP                                                      @L3A 18350000
         AIF   ('&OWNER(1)' NE 'SECONDARY').CHKOWN4                @L3A 18360000
&IOWN    SETC   '10'                   OWNER = SECONDARY           @L3A 18370000
         AGO   .CHKOWN9                                            @L3A 18380000
.CHKOWN4 ANOP                                                      @L3A 18390000
         AIF   ('&OWNER(1)' NE 'SYSTEM').CHKOWN5                   @L3A 18400000
&IOWN    SETC   '11'                   OWNER = SYSTEM              @L3A 18410000
         AGO   .CHKOWN9                                            @L3A 18420000
.CHKOWN5 ANOP                                                      @L3A 18430000
         MNOTE 12,'&I343 ''&OWNER(1)'' IN ''OWNER=&OWNER'' MUST BE ''HO+18440000
               ME'', ''PRIMARY'', ''SECONDARY'', OR ''SYSTEM''.'   @L3A 18450000
&ERROR12 SETA   12                     NOTE ERROR                  @L3A 18460000
.CHKOWN9 ANOP                                                      @L3A 18470000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKEXEC IF 'OBTAIN' FUNCTION   @A5C 18480000
      MNOTE 12,'&I323 ''OWNER'' PARAMETER &INVALID ''RELEASE''.'   @L3A 18490000
&ERROR12 SETA   12                     NOTE ERROR                  @L3A 18500000
         AGO    .CHKEXEC               CHECK NEXT KEYWORD          @A5C 18510000
.*                                                                      18520000
.********************************************************************** 18530000
.*                                                                      18540000
.* CHECK KEYWORD FOR THE EXECUTABLE.                               @A5A 18550000
.*                                                                      18560000
.********************************************************************** 18570000
.*                                                                      18580000
.CHKEXEC ANOP                                                           18590000
&IEXECUTNO SETC '0'                    Assume no EXECUTABLE keywd  @LAC 18600000
&IEXECUTYES SETC '0'                   Assume no EXECUTABLE keywd  @LAA 18601000
         AIF ('&EXECUTABLE' EQ '').CHKRTCD If not specified        @A5A 18610000
&BAR15   SETC   '1'                 Set indicator bit for AR 15    @LAM 18611001
         AIF (N'&EXECUTABLE LT 2).CHKEXE1 If number of args lt 2   @A5A 18620000
         MNOTE  4,'&I331 ''EXECUTABLE=&EXECUTABLE'' &TOLONG ''EXECUTABL*18630000
                E=&EXECUTABLE(1)''.'                               @A5A 18640000
&ERROR4  SETA   4                      Note error                  @A5A 18650000
.CHKEXE1 ANOP                                                      @A5A 18660000
         AIF   ('&EXECUTABLE(1)' NE 'YES').CHKEXE2                 @A5A 18670000
&IEXECUTYES SETC '1'                   EXECUTABLE=YES              @LAC 18681000
         AGO   .CHKEXE9                                            @A5A 18690000
.CHKEXE2 ANOP                                                      @A5A 18700000
         AIF   ('&EXECUTABLE(1)' NE 'NO').CHKEXE3                  @A5A 18710000
&IEXECUTNO SETC '1'                    EXECUTABLE=NO               @LAC 18720000
         AGO   .CHKEXE9                                                 18740000
.CHKEXE3 ANOP                                                           18750000
         MNOTE 12,'&I343 ''&EXECUTABLE(1)'' IN ''EXECUTABLE=&EXECUTABLE+18760000
               '' MUST BE ''YES'', OR ''NO''.'                     @A5A 18770000
&ERROR12 SETA   12                     NOTE ERROR                  @A5A 18780000
.CHKEXE9 ANOP                                                      @A5A 18790000
.*                                                                      18840000
.********************************************************************** 18850000
.*                                                                      18860000
.* CHECK KEYWORD FOR THE RETURN CODE                                    18870000
.*                                                                      18880000
.*     When the RTCD parm is passed as a register, addtional checks     18890000
.* are made to make sure that a valid register is selected.  For the    18900000
.* RTCD parm only regs 2 - 12 and 15 are valid with reg 15 being the    18910000
.* preferred register.                                                  18920000
.*                                                                      18930000
.********************************************************************** 18940000
.*                                                                      18950000
.CHKRTCD ANOP                                                           18960000
         AIF ('&RTCD' EQ '').CHKSEM    IF RTCD WAS NOT SPECIFIED        18970000
         AIF ('&ICOND' EQ 'NO' AND '&ICHKZ' EQ 'NO').CHKSEM   If        18980000
.*                                     neither COND=YES or              18990000
.*                                     CHECKZERO=YES               @D5C 19000000
         AIF (N'&RTCD LT 2).CHKRTCD1   IF NUMBER OF ARGUMENTS LT 2      19010000
         MNOTE  4,'&I331 ''RTCD=&RTCD'' &TOLONG ''RTCD=&RTCD(1)''.'     19020000
&ERROR4  SETA   4                      NOTE ERROR                       19030000
&IRTCD   SETC   '&RTCD(1)'             SAVE RTCD SPECIFICATION          19040000
         AGO    .CHKRTCD10                                              19050000
.CHKRTCD1 ANOP                                                          19060000
&IRTCD   SETC   '&RTCD'                SAVE RTCD SPECIFICATION          19070000
.CHKRTCD10 ANOP                                                         19080000
         AIF ('&IRTCD' EQ '').CHKRTCD2 IF ARGUMENT NULL                 19090000
&RTCDREG SETB  ('&IRTCD'(1,1) EQ '(')   SET BIT IF RTCD IS IN REGISTER  19100000
         AIF (NOT &RTCDREG).CHKSEM      IF RTCD IS NOT IN REGISTER      19110000
&IRTCD   SETC   '&IRTCD'(2,K'&IRTCD-2)   STRIP PARENS          @YA30573 19120000
         AIF ('&IRTCD' EQ '').CHKRTCD2 IF ARGUMENT NULL        @YA30573 19130000
         AIF ('&IRTCD' EQ '0').CHKRTCD12 IF REG NOT VALID               19140000
.*                                     ISSUE MNOTE             @YA30573 19150000
         AIF ('&IRTCD' EQ '1').CHKRTCD12 IF REG NOT VALID               19160000
.*                                     ISSUE MNOTE             @YA30573 19170000
         AIF ('&IRTCD' EQ '00').CHKRTCD12 IF REG NOT VALID              19180000
.*                                     ISSUE MNOTE             @YA30573 19190000
         AIF ('&IRTCD' EQ '01').CHKRTCD12 IF REG NOT VALID              19200000
.*                                     ISSUE MNOTE             @YA30573 19210000
         AIF ('&IRTCD' EQ '13').CHKRTCD12 IF REG NOT VALID              19220000
.*                                     ISSUE MNOTE             @YA30573 19230000
         AIF ('&IRTCD' EQ '14').CHKRTCD12 IF REG NOT VALID              19240000
.*                                     ISSUE MNOTE             @YA30573 19250000
         AGO    .CHKSEM                CONTINUE TO CHECK NEXT KEYWORD   19260000
.*                                                             @YA30573 19270000
.CHKRTCD12 ANOP                                                @YA30573 19280000
         MNOTE  12,'&I343 &REGNOGD  ''RTCD'' &VALDREG 2-12,15.' REG     19290000
.*                                   SPECIFIED WAS NOT 2-12,15 @YA30573 19300000
&ERROR12 SETA   12                     NOTE ERROR              @YA30573 19310000
         AGO    .CHKSEM                CONTINUE TO CHECK NEXT KEYWORD   19320000
.*                                                             @YA30573 19330000
.CHKRTCD2 ANOP                                                          19340000
         MNOTE  12,'&I313 &NOARG        ''RTCD'' PARAMETER.'            19350000
&ERROR12 SETA   12                     NOTE ERROR                       19360000
.*                                                                      19370000
.********************************************************************** 19380000
.*                                                                      19390000
.*    CHECK SEMANTICS FOR 'OBTAIN' AND 'RELEASE'                        19400000
.*       - SUBPOOL MUST BE SPECIFIED WHEN KEY IS SPECIFIED              19410000
.*       - RTCD CAN ONLY BE SPECIFIED WITH COND=YES or                  19420000
.*              CHECKZERO=YES                                     @D5C  19430000
.*                                                                      19440000
.********************************************************************** 19450000
.*                                                                      19460000
.CHKSEM  ANOP                                                           19470000
         AIF ('&SP' NE '' OR '&KEY' EQ '').CHKSEM1 IF SP WAS           +19480000
                                       SPECIFIED OR KEY WAS NOT        +19490000
                                       SPECIFIED                        19500000
&ERROR12 SETA   12                     NOTE ERROR                       19510000
         MNOTE  12,'&I351 ''SP'' IS REQUIRED WHEN ''KEY'' IS       SPEC+19520000
               IFIED.'                                                  19530000
.CHKSEM1 AIF ('&RTCD' NE '' AND '&ICOND' EQ 'NO' AND '&ICHKZ' EQ 'NO').+19540000
               CHKSEM2                 If RTCD was specified without   +19550000
                                       COND=YES or CHECKZERO=YES   @D5C 19560000
         AGO  .CHKSPRLS                                                 19570000
.CHKSEM2 ANOP                                                           19580000
&ERROR12 SETA  12                      NOTE ERROR                       19590000
         MNOTE 12,'&I323 ''RTCD'' PARAMETER &INVALID   ''COND=NO'' AND +19600000
               ''CHECKZERO=NO''.'                                  @D5C 19610000
.*                                                                      19620000
.********************************************************************** 19630000
.*                                                                      19640000
.*    IF SUBPOOL RELEASE REQUEST:                                       19650000
.*       - ADDR AND LENGTH CANNOT BE SPECIFIED, AND SP IS REQUIRED      19660000
.*                                                                      19670000
.********************************************************************** 19680000
.*                                                                      19690000
.CHKSPRLS ANOP                                                          19700000
         AIF ('&IFUNC' EQ 'OBTAIN').CHKEND  DO NOT PROCESS SUBPOOL     +19710000
                                       RELEASE IF OBTAIN FUNCTION       19720000
         AIF ('&ADDR' EQ '').SPRLS1         IF ADDR WAS NOT SPECIFIED   19730000
         AIF ('&LENGTH' NE '').CHKEND       IF LENGTH WAS SPECIFIED     19740000
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               19750000
&ERROR12 SETA   12                     NOTE ERROR                       19760000
         AGO    .CHKEND                CONTINUE CHECKING                19770000
.SPRLS1  ANOP                                                           19780000
         AIF ('&LENGTH' EQ '').SPRLS2       IF LENGTH WAS NOT SPECIFIED 19790000
         MNOTE  12,'&I313 ''ADDR'' PARAMETER &NOTSPEC.'                 19800000
&ERROR12 SETA   12                     NOTE ERROR                       19810000
         AGO    .CHKEND                CONTINUE CHECKING                19820000
.SPRLS2  ANOP                                                           19830000
         AIF ('&SP' NE '').SPRLS3           IF SP WAS SPECIFIED         19840000
         MNOTE  12,'&I313 ''ADDR'' PARAMETER &NOTSPEC.'                 19850000
         MNOTE  12,'&I313 ''LENGTH'' PARAMETER &NOTSPEC.'               19860000
&ERROR12 SETA   12                     NOTE ERROR                       19870000
         AGO    .CHKEND                CONTINUE CHECKING                19880000
.SPRLS3  ANOP                                                           19890000
&BSPRLS  SETB   1                      SET BIT IF SUBPOOL RELEASE       19900000
&IADDR   SETC   '0'                    SET ADDR TO ZERO                 19910000
.*                                                                      19920000
.********************************************************************** 19930000
.*       GENERATE ASSEMBLER CODE IF NO SEVERE ERROR FOUND               19940000
.********************************************************************** 19950000
.*                                                                      19960000
.CHKEND  ANOP                                                           19970000
         AIF (&ERROR12 EQ 0).GENTEXT     CONTINUE PROCESSING IF NO     +19980000
                                         SEVERE ERROR WAS FOUND         19990000
         MEXIT                           OTHERWISE TERMINATE PROCESSING 20000000
.GENTEXT ANOP                                                           20010000
         AIF ('&INAME' EQ '').GENDCL     IF NO LABEL TO BE GENERATED    20020000
&INAME   DS     0H                                                      20030000
.*                                                                      20040000
.********************************************************************** 20050000
.*     DECLARE VARIABLES                                                20060000
.********************************************************************** 20070000
.*                                                                      20080000
.GENDCL  ANOP                                                           20090000
         AIF    (&SYSALVL GT 0).ALVL1A                             @P9A 20100000
&GNAMEA  SETC  '&GNAME.A'                                          @P9A 20110000
&GNAMEL  SETC  '&GNAME.L'                                          @P9A 20120000
&GNAMEM  SETC  '&GNAME.M'                                          @P9A 20130000
&GNAMEF  SETC  '&GNAME.F'                                          @P9A 20140000
&GNAMEA15 SETC  '&GNAME.A15'                                       @P9A 20150000
         CNOP   0,4                                                     20160000
         B      &GNAME.B                     .BRANCH AROUND DATA        20170000
         AIF   (('&ALET' EQ '') OR &ALETREG                            +20180000
               OR (T'&IALET NE 'N')).REGLEN1 IF ALET WAS NOT SPECIFIED,+20190000
                                              OR ALET IS IN REGISTER,  +20200000
                                              OR ALET IS A SYMBOL  @P4C 20210000
&GNAME.A DC     A(&IALET)                    .ALET                      20220000
.REGLEN1 ANOP                                                           20230000
         AIF   (&LEN1REG OR &BSPRLS).REGLEN2  LEN1 IN REG OR SP RELEASE 20240000
&GNAME.L DC     A(&ILEN1)                    .STORAGE LENGTH            20250000
.REGLEN2 ANOP                                                           20260000
         AIF   (('&ILEN2' EQ '') OR &LEN2REG).REGADDR IF LEN2 WAS NOT  +20270000
                                             SPECIFIED, OR IN REGISTER  20280000
&GNAME.M DC     A(&ILEN2)                    .MINIMUM STORAGE LENGTH    20290000
.REGADDR ANOP                                                           20300000
         AIF ('&FLAGVALUE' NE '').NOFLAG1    Skip if FLAGVALUE          20310000
         AIF ('&IFUNC' EQ 'OBTAIN').FLAGOBT  IF OBTAIN WAS SPECIFIED    20320000
.*                                                                3@P4D 20330000
&FLAGS   SETC   '&BALET.00000&BUNCN&BFUNC'   FLAGS FOR RELEASE          20340000
         AGO   .BYTE0                                                   20350000
.FLAGOBT ANOP                                                           20360000
&FLAGS   SETC   '&BALET&BREAL&BLOC&BVAR&BBND&BUNCN&BFUNC' FLAGS FOR    +20370000
                                             OBTAIN                     20380000
.BYTE0   ANOP                                                           20390000
&GNAME.F DC     BL1'0&BCKEY.&BAR15&BREAL64&BCHKZ&ITCBADB.&IOWN.'        20400000
         AIF ('&KEY' EQ '').BYTE1            IF KEY WAS NOT SPECIFIED   20410000
         AIF   (&KEYREG).BYTE2               IF KEY IN REG              20420000
.BYTE1   ANOP                                                           20430000
         DC     AL1(&IKEY*16)                .KEY                       20440000
.BYTE2   ANOP                                                           20450000
         AIF ('&SP' EQ '').BYTE2A            IF SP WAS NOT SPECIFIED    20460000
         AIF   (&SPREG).BYTE3                SUBPOOL IN REGISTER        20470000
.BYTE2A  DC     AL1(&ISP)                    .SUBPOOL                   20480000
.BYTE3   ANOP                                                           20490000
         DC     BL1'&FLAGS'                  .FLAGS                     20500000
.NOFLAG1 ANOP                                                           20510000
.*                                                                      20520000
.********************************************************************** 20530000
.*     GENERATE CODE TO SET UP ACCESS REGISTER 15                       20540000
.********************************************************************** 20550000
.*                                                                      20560000
         AIF ('&AR15VALUE' NE '').NOAR15     Skip if AR15VALUE          20570000
         AIF   ('&BAR15' EQ '0').NOAR15                            @01C 20580000
.A15BYTE0 ANOP                                                          20590000
           DS   0F                                                      20600000
&GNAME.A15 DC   BL1'0&BFRSZMB.&IEXECUTNO.&IEXECUTYES.0000' .Flags  @LAC 20610000
         AIF   ('&ICBDY' EQ '').A15BYTE1A    If CBDY, branch       @L8A 20620000
         AIF   ('&ICBDY'(1,1) EQ '(').A15BYTE1A if reg, branch     @L8A 20630000
         AIF   (T'&ICBDY EQ 'N').A15BYTE1    Numeric               @L8A 20640000
.A15BYTE1A ANOP                                                         20650000
         DC    AL1(0)                        .No CBDY              @L8A 20660000
         AGO   .A15BYTE2                                           @L8A 20670000
.A15BYTE1 ANOP                                                          20680000
         DC    AL1(&ICBDY)                   .CBDY                      20690000
.A15BYTE2 ANOP                                                          20700000
         AIF   ('&ISBDY' EQ '').A15BYTE2A1   If SBDY, branch       @L8A 20710000
         AIF   ('&ISBDY'(1,1) EQ '(').A15BYTE2A1 if reg, branch    @L8A 20720000
         AIF   (T'&ISBDY EQ 'N').A15BYTE2A   Numeric               @L8A 20730000
.A15BYTE2A1 ANOP                                                        20740000
         DC    AL1(0)                        .No SBDY              @L8A 20750000
         AGO   .A15BYTE3                                           @L8A 20760000
.A15BYTE2A ANOP                                                         20770000
         DC    AL1(&ISBDY)                   .SBDY                      20780000
.A15BYTE3 ANOP                                                          20790000
         DC    BL1'&BCAUB&BOWNA&IFIX&IBACK&BCBDY&BSBDY.' .FLAGS    @PBC 20800000
.*                                                                      20810000
.********************************************************************** 20820000
.*     GENERATE CODE TO SET UP ACCESS REGISTER 15                       20830000
.********************************************************************** 20840000
.*                                                                      20850000
.NOAR15  ANOP                                                      @L8A 20860000
&GNAME.B DS     0F                                                      20870000
         AGO    .ALVL1B                                            @P9A 20880000
.ALVL1A  ANOP                                                      @P9A 20890000
         AIF   (('&ALET' EQ '') OR &ALETREG                            +20900000
               OR (T'&IALET NE 'N')).AREGLEN1 IF ALET NOT SPECIFIED,   +20910000
                                              OR ALET IS IN REGISTER,  +20920000
                                              OR ALET IS A SYMBOL  @P9A 20930000
&GNAMEA  SETC '=A(&IALET)'                   .ALET                 @P9A 20940000
.AREGLEN1 ANOP                                                     @P9A 20950000
         AIF   (&LEN1REG OR &BSPRLS).AREGLEN2 LEN1 IN REG OR SPREL @P9A 20960000
&GNAMEL  SETC '=A(&ILEN1)'                   .STORAGE LENGTH       @P9A 20970000
.AREGLEN2 ANOP                                                     @P9A 20980000
         AIF   (('&ILEN2' EQ '') OR &LEN2REG).AREGADDR IF LEN2 WAS NOT +20990000
                                             SPECIFIED, OR IN REG  @P9A 21000000
&GNAMEM  SETC '=A(&ILEN2)'                   .MINIMUM STORAGE LEN  @P9A 21010000
.AREGADDR ANOP                                                     @P9A 21020000
         AIF ('&FLAGVALUE' NE '').ANOFLAG1   Skip if FLAGVALUE          21030000
         AIF ('&IFUNC' EQ 'OBTAIN').AFLAGOBT IF OBTAIN WAS SPEC    @P9A 21040000
&FLAGS   SETC   '&BALET.00000&BUNCN&BFUNC'   FLAGS FOR RELEASE     @P9A 21050000
         AGO   .ABYTE0                                             @P9A 21060000
.AFLAGOBT ANOP                                                     @P9A 21070000
&FLAGS   SETC   '&BALET&BREAL&BLOC&BVAR&BBND&BUNCN&BFUNC' FLAGS FOR    +21080000
                                             OBTAIN                @P9A 21090000
.ABYTE0  ANOP                                                      @P9A 21100000
&GNAMEF  SETC '=AL1(B''0&BCKEY.&BAR15&BREAL64&BCHKZ&ITCBADB.&IOWN.'''   21110000
         AIF ('&KEY' EQ '').ABYTE1           IF KEY WAS NOT SPEC   @P9A 21120000
         AIF   (&KEYREG).ABYTE2              IF KEY IN REG         @P9A 21130000
.ABYTE1  ANOP                                                      @P9A 21140000
&GNAMEF SETC '&GNAMEF.,(&IKEY*16)'                .KEY             @P9A 21150000
.ABYTE2  ANOP                                                      @P9A 21160000
         AIF ('&SP' EQ '').ABYTE2A           IF SP WAS NOT SPEC    @P9A 21170000
         AIF   (&SPREG).ABYTE3               SUBPOOL IN REGISTER   @P9A 21180000
.ABYTE2A ANOP                                                      @P9A 21190000
&GNAMEF  SETC '&GNAMEF.,(&ISP)'                    .SUBPOOL        @P9A 21200000
.ABYTE3  ANOP                                                      @P9A 21210000
&GNAMEF  SETC '&GNAMEF.,B''&FLAGS'')'              .FLAGS          @P9A 21220000
.ANOFLAG1 ANOP                                                          21230000
.*                                                                      21240000
.********************************************************************** 21250000
.*     GENERATE CODE TO SET UP ACCESS REGISTER 15                       21260000
.********************************************************************** 21270000
.*                                                                      21280000
         AIF ('&AR15VALUE' NE '').ANOAR15    Skip if AR15VALUE          21290000
         AIF   ('&BAR15' EQ '0').ANOAR15                           @P9A 21300000
.AA15BYTE0 ANOP                                                    @P9A 21310000
&GNAMEA15 SETC '=AL1(B''0&BFRSZMB.&IEXECUTNO.&IEXECUTYES.0000'''   @LAC 21320000
         AIF   ('&ICBDY' EQ '').AA15BYTE1A   If CBDY, branch       @P9A 21330000
         AIF   ('&ICBDY'(1,1) EQ '(').AA15BYTE1A if reg, branch    @P9A 21340000
         AIF   (T'&ICBDY EQ 'N').AA15BYTE1   Numeric               @P9A 21350000
.AA15BYTE1A ANOP                                                   @P9A 21360000
&GNAMEA15 SETC '&GNAMEA15.,(0)'                                    @P9A 21370000
         AGO   .AA15BYTE2                                          @P9A 21380000
.AA15BYTE1 ANOP                                                    @P9A 21390000
&GNAMEA15 SETC '&GNAMEA15.,(&ICBDY)'                               @P9A 21400000
.AA15BYTE2 ANOP                                                    @P9A 21410000
         AIF   ('&ISBDY' EQ '').AA15BYTE2A1  If SBDY, branch       @P9A 21420000
         AIF   ('&ISBDY'(1,1) EQ '(').AA15BYTE2A1 if reg, branch   @P9A 21430000
         AIF   (T'&ISBDY EQ 'N').AA15BYTE2A  Numeric               @P9A 21440000
.AA15BYTE2A1 ANOP                                                  @P9A 21450000
&GNAMEA15 SETC '&GNAMEA15.,(0)'                                    @P9A 21460000
         AGO   .AA15BYTE3                                          @P9A 21470000
.AA15BYTE2A ANOP                                                   @P9A 21480000
&GNAMEA15 SETC '&GNAMEA15.,(&ISBDY)'                               @P9A 21490000
.AA15BYTE3 ANOP                                                    @P9A 21500000
&GNAMEA15 SETC '&GNAMEA15.,B''&BCAUB&BOWNA&IFIX&IBACK&BCBDY&BSBDY.'')'  21510000
.*                                                                 @PBC 21520000
.*                                                                 @P9A 21530000
.********************************************************************** 21540000
.*     GENERATE CODE TO SET UP ACCESS REGISTER 15                       21550000
.********************************************************************** 21560000
.*                                                                      21570000
.ANOAR15 ANOP                                                      @P9A 21580000
.ALVL1B  ANOP                                                      @P9A 21590000
.* We can just load the value we formed if there are no dynamic    @L8A 21600000
.* specifications of cbdy/sbdy                                     @L8A 21610000
         AIF ('&AR15VALUE' NE '').DOAR15V    Skip if AR15VALUE          21620000
         AIF   ('&BAR15' EQ '0').NOAR15A                           @L8A 21630000
         AIF   ('&ISBDY' EQ '').CKAR15A                            @L8A 21640000
         AIF   ('&ISBDY'(1,1) EQ '(').AR15B     if reg, branch     @L8A 21650000
         AIF   (T'&ISBDY NE 'N').AR15B                             @L8A 21660000
.CKAR15A ANOP                                                      @L8A 21670000
         AIF   ('&ICBDY' EQ '').DOAR15A                            @L8A 21680000
         AIF   ('&ICBDY'(1,1) EQ '(').AR15B     if reg, branch     @L8A 21690000
         AIF   (T'&ICBDY NE 'N').AR15B                             @L8A 21700000
.DOAR15A ANOP                                                      @L8A 21710000
         LAM   15,15,&GNAMEA15                 .SET AR 15          @P9C 21720000
.*                                                                 @L8A 21730000
         AGO   .NOAR15A                                            @L8A 21740000
.* When there was a dynamic specification of cbdy/sbdy, we must    @L8A 21750000
.* process each individually                                       @L8A 21760000
.AR15B   ANOP                                                      @L8A 21770000
         L     14,&GNAMEA15                  .SET GPR 14           @P9C 21780000
         AIF   ('&ISBDY' EQ '').AR15B1                             @L8A 21790000
         AIF   ('&ISBDY'(1,1) EQ '(').AR15B1R  Check for "(n)"     @L8A 21800000
         AIF   (T'&ISBDY EQ 'N').AR15B1                            @L8A 21810000
         SLR   15,15                         .clear work reg       @L8A 21820000
         IC    15,&ISBDY                     .move to work reg     @L8A 21830000
         AGO   .AR15B1R1                                           @L8A 21840000
.AR15B1R ANOP                                                      @L8A 21850000
         LR    15,&ISBDY1                    .move to work reg     @L8A 21860000
.AR15B1R1 ANOP                                                     @L8A 21870000
         SLL   15,8                          .Shift to 16-23       @L8A 21880000
         OR    14,15                         .Put into GPR         @L8A 21890000
.AR15B1  ANOP                                                      @L8A 21900000
         AIF   ('&ICBDY' EQ '').AR15B2                             @L8A 21910000
         AIF   ('&ICBDY'(1,1) EQ '(').AR15B2R   Check for "(n)"    @L8A 21920000
         AIF   (T'&ICBDY EQ 'N').AR15B2                            @L8A 21930000
         SLR   15,15                         .Clear work reg       @L8A 21940000
         IC    15,&ICBDY                     .Put into work reg    @L8A 21950000
         AGO   .AR15B2R1                                           @L8A 21960000
.AR15B2R ANOP                                                      @L8A 21970000
         LR    15,&ICBDY1                    .Move to work reg     @L8A 21980000
.AR15B2R1 ANOP                                                     @L8A 21990000
         SLL   15,16                         .Shift to 8-15        @L8A 22000000
         OR    14,15                         .Put into GPR         @L8A 22010000
.AR15B2  ANOP                                                      @L8A 22020000
         SAR   15,14                         .SET AR 15            @L8A 22030000
         AGO   .ENDAR15A                                                22040000
.DOAR15V ANOP                                                           22050000
         AIF (&AR15REG).AR15VR                                     @PBC 22060000
         LAM    15,15,&IAR15                                       @PBC 22070000
         AGO   .ENDAR15A                                                22080000
.AR15VR  ANOP                                                           22090000
         AIF ('&IAR15' EQ '&FLAGREG').ENDAR15A                     @PBC 22100000
         SAR    15,&IAR15                                          @PBC 22110000
.ENDAR15A ANOP                                                          22120000
.NOAR15A ANOP                                                      @L8A 22130000
.*                                                                      22140000
.********************************************************************** 22150000
.*     GENERATE CODE TO SET UP ACCESS REGISTER 1                        22160000
.********************************************************************** 22170000
.*                                                                      22180000
         AIF   ('&ALET' EQ '').GENLN1        IF ALET WAS NOT SPECIFIED  22190000
.********************************************************************** 22200000
.*     Generate code to set ALET in Access Register 1                   22210000
.********************************************************************** 22220000
         AIF   (&ALETREG).ALETRG             ALET IN REGISTER           22230000
         AIF   (T'&IALET NE 'N').ALETVAR     NOT SPECIFIED AS A NUMBER  22240000
         LAM    1,1,&GNAMEA                  .SET ACCESS REGISTER 1     22250000
.*                                                                 @P9C 22260000
         AGO   .GENLN1                                            @P4C  22270000
.ALETVAR ANOP                                                           22280000
         LAM    1,1,&IALET                   .SET ACCESS REGISTER 1     22290000
.*                                                                @P4C  22300000
.*                                                               2@P4D  22310000
         AGO   .GENLN1                                                  22320000
.ALETRG  ANOP                                                           22330000
&IALET   SETC   '&IALET'(2,K'&IALET-2)  STRIP PARENS                    22340000
         AIF ('&IALET' EQ '1').GENLN1  ACCESS REG SPECIFICATION IS 1    22350000
         CPYA   1,&IALET                     .SET ACCESS REGISTER 1     22360000
.GENLN1  ANOP                                                      @PBM 22370000
         AIF   ('&IOWNA' EQ '').GENLN1A      If OWNERASID not specified 22380000
.*                                                                 @PBA 22390000
.********************************************************************** 22400000
.*     Generate code to set OWNERASID in Access Register 1              22410000
.********************************************************************** 22420000
         AIF   (&OWNAREG).OWNARG             OWNERASID in register @PBA 22430000
         AIF   (T'&IOWNA EQ 'N').OWNANUM     OWNERASID is numeric  @PBA 22440000
         ICM   14,B'0011',&IOWNA                                   @PBA 22450000
         SAR    1,14                                               @PBA 22460000
         AGO   .GENLN1A                                            @PBA 22470000
.OWNANUM ANOP                                                      @PBA 22480000
         LAM    1,1,=A(&IOWNA)              .Set AR1               @PBA 22490000
         AGO   .GENLN1A                                            @PBA 22500000
.OWNARG  ANOP                                                      @PBA 22510000
         SAR    1,&IOWNA                     .Set AR 1             @PBA 22520000
.GENLN1A ANOP                                                      @PBM 22530000
.********************************************************************** 22540000
.*     Generate code to set AR1VALUE in Access Register 1               22550000
.********************************************************************** 22560000
         AIF ('&AR1VALUE' EQ '').ANOAR1V     Skip if no AR1VALUE   @PBA 22570000
         AIF (&AR1REG).AR1VR                                       @PBA 22580000
         LAM    1,1,&IAR1                                          @PBA 22590000
         AGO   .ENDAR1A                                            @PBA 22600000
.AR1VR   ANOP                                                      @PBA 22610000
         AIF ('&IAR1' EQ '&FLAGREG').ENDAR1A                       @PBA 22620000
         SAR    1,&IAR1                                            @PBA 22630000
.ENDAR1A ANOP                                                      @PBA 22640000
.ANOAR1V ANOP                                                      @PBA 22650000
.*                                                                      22660000
.********************************************************************** 22670000
.*     GENERATE CODE TO SET UP REGISTER 0 FOR 'OBTAIN', AND 'RELEASE'   22680000
.********************************************************************** 22690000
.*                                                                      22700000
         AIF (&BSPRLS).GENSPRLL              IF SUBPOOL RELEASE         22710000
         AIF (&LEN1REG).GENLN1R              IN REGISTER                22720000
.*                                                                @P4D  22730000
         L      0,&GNAMEL                    .STORAGE LENGTH       @P9C 22740000
         AGO    .GENLN2            CONTINUE GENERATING                  22750000
* GENERAL REGISTER                                                      22760000
.GENLN1R ANOP                                                           22770000
         AIF ('&ILEN1' EQ '0').GENLN2 REGISTER SPECIFICATION IS 0       22780000
         LR     0,&ILEN1                     .STORAGE LENGTH            22790000
         AGO    .GENLN2            CONTINUE GENERATING                  22800000
.*                                                               3@P4D  22810000
.GENSPRLL ANOP                                                          22820000
         SR     0,0                          .STORAGE LENGTH            22830000
.GENLN2  ANOP                                                           22840000
.*                                                                      22850000
.********************************************************************** 22860000
.*     GENERATE CODE TO SET UP AR 0 with TCBADDR                        22870000
.********************************************************************** 22880000
.*                                                                      22890000
.GENTC0  ANOP                                                     @D4A  22900000
         AIF ('&ITCBADB' EQ '0').GENLN3      No TCB to do         @D4A  22910000
         AIF (&TCBAREG).GENTC0R              IN REGISTER          @D4A  22920000
         LAM    0,0,&ITCBADD                 .TCB ADDRESS         @D4A  22930000
         AGO    .GENLN3            CONTINUE GENERATING            @D4A  22940000
* GENERAL REGISTER                                                @D4A  22950000
.GENTC0R ANOP                                                     @D4A  22960000
         SAR    0,&ITCBADD                   .TCB ADDRESS         @D4A  22970000
         AGO    .GENLN3            CONTINUE GENERATING            @D4A  22980000
.*                                                                      22990000
.********************************************************************** 23000000
.*     GENERATE CODE TO SET UP REGISTER1 FOR 'OBTAIN'                   23010000
.********************************************************************** 23020000
.*                                                                      23030000
.GENLN3  ANOP                                                           23040000
         AIF ('&IFUNC' EQ 'RELEASE').GENADDR IF RELEASE WAS SPECIFIED   23050000
         AIF ('&ILEN2' EQ '').GENIA       MINIMUM LENGTH NOT SPECIFIED  23060000
         AIF (&LEN2REG).GENLN2R           IN REGISTER                   23070000
.*                                                                @P4D  23080000
         L      1,&GNAMEM                    .MINIMUM LENGTH       @P9C 23090000
         AGO    .GENFLAGREG        CONTINUE GENERATING                  23100000
* GENERAL REGISTER                                                      23110000
.GENLN2R ANOP                      A REGISTER                           23120000
         AIF ('&ILEN2' EQ '1').GENFLAGREG REGISTER SPECIFICATION IS 1   23130000
         LR     1,&ILEN2                     .MINIMUM STORAGE LENGTH    23140000
         AGO    .GENFLAGREG        CONTINUE GENERATING                  23150000
.GENIA   ANOP                                                      @L4A 23160000
         AIF   ('&IINADDR' EQ '').GENFLAGREG INADDR not specified  @L4A 23170000
         AIF   (&IADRREG).GENIA1             A REGISTER            @L4A 23180000
.* RX-TYPE ADDRESS                                                 @L4A 23190000
         L      1,&IINADDR                   .ADDRESS OF STORAGE   @L4A 23200000
         AGO    .GENFLAGREG        CONTINUE GENERATING             @L4A 23210000
.* REGISTER                                                        @L4A 23220000
.GENIA1 ANOP                                                       @L4A 23230000
         AIF ('&IINADDR' EQ '1').GENFLAGREG REG SPECIFIED IS 1     @L4A 23240000
         LR     1,&IINADDR                   .ADDRESS OF STORAGE   @L4A 23250000
         AGO    .GENFLAGREG        CONTINUE GENERATING             @L4A 23260000
.*                                                                 @L4A 23270000
.*                                                                      23280000
.********************************************************************** 23290000
.*     GENERATE CODE TO SET UP REGISTER1 FOR 'RELEASE'                  23300000
.********************************************************************** 23310000
.*                                                                      23320000
.GENADDR ANOP                                                           23330000
         AIF (&BSPRLS).GENSPRLA               IF SUBPOOL RELEASE        23340000
         AIF (&ADDRREG).GENADR                A REGISTER                23350000
.* RX-TYPE ADDRESS                                               @D3C   23360000
         L      1,&IADDR                     .ADDRESS OF STORAGE        23370000
         AGO    .GENFLAGREG        CONTINUE INITIALIZATION              23380000
.* REGISTER                                                             23390000
.GENADR ANOP                       A REGISTER                           23400000
         AIF ('&IADDR' EQ '1').GENFLAGREG REGISTER SPECIFICATION IS 1   23410000
         LR     1,&IADDR                     .ADDRESS OF STORAGE        23420000
         AGO    .GENFLAGREG        CONTINUE INITIALIZATION              23430000
.GENSPRLA ANOP                                                          23440000
         SR     1,1                          .ADDRESS OF STORAGE        23450000
.*                                                                      23460000
.********************************************************************** 23470000
.*     GENERATE CODE TO SET UP REGISTER 15/3                            23480000
.*                                                                      23490000
.*    BYTE 0   **********************                                   23500000
.*             *   RESERVED         *                                   23510000
.*    BYTE 1   **********************                                   23520000
.*             *   KEY   *   RSVD   *                                   23530000
.*    BYTE 2   **********************                                   23540000
.*             *   SUBPOOL          *                                   23550000
.*    BYTE 3   **********************                                   23560000
.*             *   FLAGS            *                                   23570000
.*             **********************                                   23580000
.*                                                                      23590000
.********************************************************************** 23600000
.*                                                                      23610000
.GENFLAGREG ANOP                                                        23620000
         AIF    ('&FLAGVALUE' NE '').DOFLAGV                            23630000
         AIF    (&KEYREG OR &SPREG).KYSPREG  IF KEY OR SP IN REG        23640000
         AIF   (&SYSALVL LT 1).LOADPARM00                          @PCA 23650000
      AIF ('&GNAMEF' EQ '=AL1(B''00000000'',(0*16),(0),B''00000011'')')*23660000
               .LOADPARM03                                         @PCA 23670000
      AIF ('&GNAMEF' EQ '=AL1(B''00000000'',(0*16),(0),B''00000001'')')*23680000
               .LOADPARM01                                         @PCA 23690000
.LOADPARM00 ANOP                                                   @PCA 23700000
         L      &FLAGREG,&GNAMEF             .CONTROL INFORMATION  @P9C 23710000
         AGO   .GENLINKAGE                   CONTINUE GENERATING        23720000
.LOADPARM03 ANOP                                                   @PCA 23730000
         LHI    &FLAGREG.,X'0003'            .Add in parameters    @PCA 23740000
         AGO   .GENLINKAGE                                         @PCA 23750000
.LOADPARM01 ANOP                                                   @PCA 23760000
         LHI    &FLAGREG.,X'0001'            .Add in parameters    @PCA 23770000
         AGO   .GENLINKAGE                                         @PCA 23780000
.KYSPREG ANOP                                                           23790000
         AIF    (&KEYREG AND &SPREG).BOTHREG IF KEY AND SP IN REG       23800000
         AIF    (&KEYREG).KEYINREG           IF KEY IN REG              23810000
         AIF ('&ISP' EQ '&FLAGREG').SPINPRG  If SP is in proper reg     23820000
         LR     &FLAGREG,&ISP                .OBTAIN SUBPOOL ID         23830000
.SPINPRG SLL    &FLAGREG,8(0)                .MOVE SUBPOOL TO BYTE 2    23840000
         AIF   (&SYSALVL LT 2).LOADPARM10                          @PCA 23850000
         AIF  ('&GNAMEF' EQ '=AL1(B''00000000'',(0*16),B''00000011'')')*23860000
               .LOADPARM13                                         @PCA 23870000
         AIF  ('&GNAMEF' EQ '=AL1(B''00000000'',(0*16),B''00000001'')')*23880000
               .LOADPARM11                                         @PCA 23890000
.LOADPARM10 ANOP                                                   @PCA 23900000
         ICM    &FLAGREG,13,&GNAMEF          .CONTROL INFORMATION  @P9C 23910000
         AGO   .GENLINKAGE                   CONTINUE GENERATING        23920000
.LOADPARM13 ANOP                                                   @PCA 23930000
         NILH   &FLAGREG.,X'0000'            .Clear high bytes     @PCA 23940000
         OILL   &FLAGREG.,X'0003'            .Add in parameters    @PCA 23950000
         AGO   .GENLINKAGE                                         @PCA 23960000
.LOADPARM11 ANOP                                                   @PCA 23970000
         NILH   &FLAGREG.,X'0000'            .Clear high bytes     @PCA 23980000
         OILL   &FLAGREG.,X'0001'            .Add in parameters    @PCA 23990000
         AGO   .GENLINKAGE                                         @PCA 24000000
.KEYINREG ANOP                                                          24010000
        AIF ('&IKEY' EQ '&FLAGREG').KEYINFLAGREG IF KEY ALREADY IN REG  24020000
.*                                                             @YA30573 24030000
         LR     &FLAGREG,&IKEY               .GET STORAGE KEY           24040000
.KEYINFLAGREG ANOP                                             @YA30573 24050000
         SLL    &FLAGREG,16(0)               .MOVE KEY TO BITS 8-11     24060000
         ICM    &FLAGREG,11,&GNAMEF          .CONTROL INFORMATION  @P9C 24070000
         AGO   .GENLINKAGE                   CONTINUE GENERATING        24080000
.BOTHREG ANOP                                                  @YA30573 24090000
         AIF ('&IKEY' EQ '&ISP').SAMEREG     IF KEY AND SP IN SAME REG  24100000
.*                                                             @YA30573 24110000
         AIF ('&IKEY' EQ '&FLAGREG').KEYREGOK IF KEY ALREADY IN REG     24120000
.*                                                             @YA30573 24130000
         AIF ('&ISP' EQ '&FLAGREG').SPREGOK  IF SP ALREADY IN REG       24140000
.*                                                             @YA30573 24150000
         LR     &FLAGREG,&IKEY               .OBTAIN KEY       @YA30573 24160000
.KEYREGOK ANOP                                                 @YA30573 24170000
         SLL    &FLAGREG,8(0)                .MOVE KEY OVER    @YA30573 24180000
         OR     &FLAGREG,&ISP                .GET SUBPOOL ID   @YA30573 24190000
         SLL    &FLAGREG,8(0)                .MOVE KEY AND SUBPOOL      24200000
.*                                                             @YA30573 24210000
         ICM    &FLAGREG,9,&GNAMEF           .CONTROL FLAGS        @P9C 24220000
         AGO   .GENLINKAGE                                     @YA30573 24230000
.SPREGOK ANOP                                                  @YA30573 24240000
         LR     14,&IKEY                     .OBTAIN KEY       @YA30573 24250000
         SLL    14,8(0)                      .MOVE KEY OVER    @YA30573 24260000
         OR     &FLAGREG,14                  .OR INTO REG 15   @YA30573 24270000
         SLL    &FLAGREG,8(0)                .MOVE KEY AND SUBPOOL      24280000
.*                                                             @YA30573 24290000
         ICM    &FLAGREG,9,&GNAMEF           .CONTROL FLAGS        @P9C 24300000
         AGO   .GENLINKAGE                                     @YA30573 24310000
.SAMEREG ANOP                                                  @YA30573 24320000
         AIF ('&IKEY' EQ '&FLAGREG').BOTHR15 IF KEY AND SP IN REG 15    24330000
.*                                                             @YA30573 24340000
         LR     &FLAGREG,&IKEY               .OBTAIN KEY & SP  @YA30573 24350000
.BOTHR15 ANOP                                                  @YA30573 24360000
         ICM    &FLAGREG,9,&GNAMEF           .CONTROL INFORMATION  @P9C 24370000
         AGO   .GENLINKAGE                                     @YA30573 24380000
.DOFLAGV ANOP                                                           24390000
         AIF   (&FLAGRG).FLAGVR                                    @PBC 24400000
         L      &FLAGREG,&IFLAG                                    @PBC 24410000
         AGO   .GENLINKAGE                                              24420000
.FLAGVR  ANOP                                                           24430000
         AIF ('&IFLAG' EQ '&FLAGREG').GENLINKAGE                   @PBC 24440000
         LR     &FLAGREG,&IFLAG                                    @PBC 24450000
.*                                                                      24460000
.********************************************************************** 24470000
.*     GENERATE CODE TO SET UP REGISTER 14                              24480000
.********************************************************************** 24490000
.*                                                                      24500000
.GENLINKAGE ANOP                                                        24510000
         AIF    ('&ILINK' EQ 'SVC').SVCLINKAGE                          24520000
         AIF    ('&ILINK' EQ 'BRANCH').BRANCHLINKAGE                    24530000
         AIF    ('&ILINK' EQ 'GLOBALBRANCH').BRANCHLINKAGE              24540000
         &L     14,16(0,0)                   .CVT ADDRESS               24550000
         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   24560000
.*                                                                 @P4C 24570000
         AIF ('&IFUNC' EQ 'RELEASE').GENPC1  IF RELEASE WAS SPECIFIED   24580000
.*                                                                 @P5A 24590000
         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   24600000
.*                                                                 @P4C 24610000
         AGO    .GENPC2                                            @P5A 24620000
.GENPC1  ANOP                                                      @P5A 24630000
         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  24640000
.*                                                                 @P5A 24650000
.GENPC2  ANOP                                                      @P5A 24660000
         PC     0(14)                        .PC TO STORAGE RTN         24670000
         AGO    .ENDLINKAGE                                             24680000
.SVCLINKAGE ANOP                                                        24690000
         AIF    ('&IFUNC' NE 'OBTAIN').SVCLEAVER1                       24700000
         AIF    ('&ILOC1' EQ 'EXPLICIT').SVCLEAVER1                     24710000
         AIF    (N'&LENGTH GE 2).SVCLEAVER1                             24720000
         SR     1,1                                                     24730000
.SVCLEAVER1 ANOP                                                        24740000
         SVC    120                                                     24750000
         AGO    .ENDLINKAGE                                             24760000
.BRANCHLINKAGE ANOP                                                     24770000
         AIF    ('&IFUNC' NE 'OBTAIN').BRANCHLEAVER1                    24780000
         AIF    ('&ILOC1' EQ 'EXPLICIT').BRANCHLEAVER1                  24790000
         AIF    (N'&LENGTH GE 2).BRANCHLEAVER1                          24800000
         SR     1,1                                                     24810000
.BRANCHLEAVER1 ANOP                                                     24820000
         AIF    ('&SYSAM64' NE 'YES').AM641                        @P9A 24830000
         SAM31 ,                                                   @P9A 24840000
.AM641   ANOP                                                      @P9A 24850000
         &L     15,16(0,0)        ADDRESS OF CVT               @G860P30 24860000
         AIF ('&SYSASCE' EQ 'P').SKIPSW1  If we are already in     @D1A 24870000
.*                                primary ASC mode, do not         @D1A 24880000
.*                                produce a SAC to switch to       @D1A 24890000
.*                                primary.  (That is, skip the     @D1A 24900000
.*                                switch.)                         @D1A 24910000
         SAC   0                  Switch to primary ASC mode.      @D1A 24920000
.SKIPSW1 ANOP                                                      @D1A 24930000
         AIF    ('&ILINK' EQ 'GLOBALBRANCH').GLOBALBR1                  24940000
         L      15,504(15,0)      CVTCRMN ENTRY POINT          @G860P30 24950000
         AGO    .ENDBR1                                                 24960000
.GLOBALBR1 ANOP                                                         24970000
         L      15,680(15,0)      CVTGLMN ENTRY POINT          @G860P30 24980000
.ENDBR1  ANOP                                                           24990000
         BALR   14,15             CALL GETMAIN                     @D1A 25000000
         AIF ('&SYSASCE' EQ 'P').SKIPSW2 If we were entered in     @D1A 25010000
.*                                primary ASC mode, do not         @D1A 25020000
.*                                produce a SAC to switch back     @D1A 25030000
.*                                to AR mode.  (That is, skip      @D1A 25040000
.*                                the switch.)                     @D1A 25050000
         SAC   512                Switch back to AR mode.          @D1A 25060000
.SKIPSW2 ANOP                                                      @D1A 25070000
         AIF    ('&SYSAM64' NE 'YES').AM642                        @P9A 25080000
         SAM64 ,                                                   @P9A 25090000
.AM642   ANOP                                                      @P9A 25100000
         AGO    .ENDLINKAGE                                             25110000
.ENDLINKAGE ANOP                                                        25120000
.*                                                                      25130000
.********************************************************************** 25140000
.*     GENERATE CODE TO SAVE RETURN CODE, AND ADDRESS IF SPECIFIED      25150000
.*     WITH 'OBTAIN'                                                    25160000
.********************************************************************** 25170000
.*                                                                      25180000
         AIF   ('&IFUNC' NE 'OBTAIN' OR '&IADDR' EQ '').SAVERC          25190000
         AIF   (&ADDRREG).SAVEA              A REGISTER                 25200000
.* RX-TYPE ADDRESS                                              @D3C    25210000
         ST     1,&IADDR                     .SAVE ADDR OF STORAGE      25220000
         AGO    .SAVERC            CONTINUE SAVE RETURN CODE            25230000
.* REGISTER                                                             25240000
.SAVEA  ANOP                                                            25250000
         AIF ('&IADDR' EQ '1').SAVERC REGISTER SPECIFICATION IS 1       25260000
         &LR    &IADDR,1                     .SAVE ADDR OF STORAGE      25270000
.SAVERC  AIF   ('&IRTCD' EQ '').MMEND                                   25280000
         AIF   (&RTCDREG).SAVERC1            A REGISTER                 25290000
.* A-TYPE ADDRESS                                                       25300000
         ST     15,&IRTCD                    .SAVE RETURN CODE          25310000
         AGO    .MMEND             CONTINUE SAVE RETURN CODE            25320000
.* REGISTER                                                             25330000
.SAVERC1 ANOP                       A REGISTER                          25340000
         AIF ('&IRTCD' EQ '15').MMEND  REGISTER SPECIFICATION IS 15     25350000
         LR     &IRTCD,15                    .SAVE RETURN CODE          25360000
.MMEND   MEXIT                     MACRO IS COMPLETE                    25370000
         MEND                                                           25380000
*      */                                                               25390000
* %PLSSKIP:  ;                                                          25400000
*%    STORAGE:                                                          25410000
* MACRO KEYS(COND,                       /* COND=YES!NO              */ 25420000
*            INADDR,                     /* ADDR OF STORAGE TO OBTAIN   25430000
*                                                                @L4A*/ 25440000
*            ADDR,                       /* ADDRESS OF STORAGE   @P8A*/ 25450000
*            AREA,                       /* AREA OF STORAGE          */ 25460000
*            LENGTH,                     /* AMOUNT OF STORAGE        */ 25470000
*            SP,                         /* SUBPOOL ID               */ 25480000
*            ALET,                       /* ACCESS LIST ENTRY TOKEN  */ 25490000
*            BNDRY,                      /* BOUNDARY ALIGNMENT       */ 25500000
*            KEY,                        /* KEY                      */ 25510000
*            CALLRKY,                    /* CALLRKY(YES!NO)      @L2A*/ 25520000
*            LOC,                        /* LOCATION                 */ 25530000
*            RTCD, RETCODE,              /* RETURN CODE              */ 25540000
*            LINKAGE,                    /* SYSTEM!SVC!BRANCH!          25550000
*                                           GLOBALBRANCH         @PAC*/ 25560000
*            OWNER,                      /* OWNER                @L3A*/ 25570000
*            OWNERASID,                  /* OWNER ASID           @PBA*/ 25580000
*            CAUB,                       /* CAUB(CURRENT!ADDRSPACE)     25590000
*                                                                @PBA*/ 25600000
*            TCBADDR,                    /* TCB ADDRESS          @D4A*/ 25610000
*            ASCBADDR,                   /* ASCB ADDRESS         @D4A*/ 25620000
*            FLAGVALUE,                  /* FLAGS for GPR 15     @L5A*/ 25630000
*            AR15VALUE,                  /* Value for AR 15      @L8A*/ 25640000
*            AR1VALUE,                   /* Value for AR 1       @PBA*/ 25650000
*            FAILPROCESS,                /* Statements in               25660000
*                          ASAXCODE anyprocess format to be executed    25670000
*                          when non-zero RC is returned          @L5A*/ 25680000
*            CHECKZERO,                  /* CHECKZERO(YES!NO)    @D5A*/ 25690000
*            BACK,                       /* BACK(BYSPT!NONE!ALL) @L6A*/ 25700000
*            CONTBDY, STARTBDY,          /* CONTBDY,STARTBDY     @L8A*/ 25710000
*            FIX,                        /* FIX(SHORT!LONG!NONE) @PAA*/ 25720000
*            EXECUTABLE,                 /* EXECUTABLE(YES!NO)   @A5A*/ 25730000
*            RELATED);                   /* INFORMATION USED TO         25740000
*                                           SELF-DOCUMENT            */ 25750000
*    ANS('?'!! MACLABEL !! 'STORAGEP' !! MACLIST !! MACKEYS !! ';');    25760000
*%END STORAGE;                                                          25770000
