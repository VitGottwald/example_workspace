         MACRO                                                                  
         HWTHIASM                                                               
         EJECT                                                                  
****START OF SPECIFICATIONS*******************************************          
***                                                                  *          
***  Macro Name: HWTHIASM                                            *          
***                                                                  *          
***  Descriptive Name: Assembler Interface Declaration File for the  *          
***                    HTTP Enabler portion of the z/OS Client Web   *          
***                    Enablement Toolkit.                           *          
***                                                                  *          
***    Acronym: none                                                 *          
***                                                                  *          
***  Proprietary statement:                                          *          
***                                                                  *          
***   LICENSED MATERIALS - PROPERTY OF IBM                           *          
***   5650-ZOS, 5655-ZOS COPYRIGHT IBM CORP. 2015, 2023              *          
***                                                                  *          
***   STATUS= HWT0500                                                *          
***                                                                  *          
***    DSECT Name: n/a                                               *          
***                                                                  *          
***  Component: HWT (SCHWT)                                          *          
***                                                                  *          
***  External Classification: PI                                     *          
***  End of External Classification:                                 *          
***                                                                  *          
***  Eye-Catcher: none                                               *          
***                                                                  *          
***  Storage Attributes:                                             *          
***                                                                  *          
***    Subpool: n/a                                                  *          
***    Key: n/a                                                      *          
***    Residency: n/a                                                *          
***                                                                  *          
***  Function:                                                       *          
***    HWTHIASM defines HWT Constants and declares for               *          
***    programs written in the Assembler language which              *          
***    will invoke the HWT HTTP/HTTPS callable services.             *          
***                                                                  *          
***  Method of Access:                                               *          
***    macro HWTHIASM                                                *          
***                                                                  *          
***  Created by: n/a                                                 *          
***                                                                  *          
***  Pointed to by: n/a                                              *          
***                                                                  *          
***  Size: n/a                                                       *          
***                                                                  *          
***  Serialization: n/a                                              *          
***                                                                  *          
***  Change Activity:                                                *          
***                                                                  *          
***   PN   REASON  RLSE     DATE   ORG   COMMENTS                    *          
***   -------------------------------------------------------------- *          
***   $01= OA48505 HBB77A0 150806 PDSCW: z/OS Client Web Enablement  *          
***        Toolkit Support (HTTP enablement)                         *          
***   $02= OA49002 HBB77A0 151130 PDLH:-Add HWTH_RBDYEXITEXITFLAGSPTR*          
***                                    - Add service constants       *          
***                                    - Add Verbose DD option       *          
***                                    - Miscellaneous changes       *          
***   $03= OA51673 HBB7790 161201 PDJK: - HEAD method support        *          
***   $L1= 152124  HBB77B0 170112 PDJK: - Streaming support          *          
***   $D1= 158189  HBB77B0 170217 PDJK: - Handle GET underflows      *          
***   $04= OA52791 HBB77B0 170622 PDJK: - TRSQ V2R3 APAR             *          
***                                       AT-TLS toleration          *          
***                                       Roll up of OA50957         *          
***   $05= OA53546 HBB7790 170925 PDLH: - Support for user-defined   *          
***                                       cipher specs               *          
***   $06= OA54207 HBB7790 171103 PDLH: - Add missing ExitFlag       *          
***                                       constants                  *          
***   $L2= 212350  HBB77C0 180501 PDLH: - Proxy Enhancement          *          
***                                       Add                        *          
***                                      HWTH_SERVICE_WRAP_TRACE_MASK*          
***   $P1= 269588  HBB77C0 181031   GG:  HWTH_SERVICE_INIT_TRACE     *          
***             incorrectly became  HWTH_SERVICE_INIT_TRACE_MASK.    *          
***   $08= OA56234 HBB77A0 181110   GG: - read socket error (268362) *          
***   $14= 306522  HBB77B0 190506   BW: - trace redaction            *          
***   $16= 328334  HBB77B0 191007   BW:  PATCH and OPTIONS support   *          
***        328185  HBB77B0 191011   BW:  HWTH_OPT_SSLTRACE support   *          
***        346397  HBB77B0 191125 PDJK: - correct parmlist names     *          
***   $17= 328197  HBB77C0 191206   BW:  TLSv13 support              *          
***   $1M= OA63772 HBB77B0 230207   BW:  Check server certificate    *          
***                                      Disallow cross-tunnel redir *          
****END OF SPECIFICATIONS*********************************************          
*                                                                               
*--------------------------------------------------------------------*          
*                                                                    *          
*                          ABEND Reason Codes                        *          
*                                                                    *          
*--------------------------------------------------------------------*          
HWTH_HCONN_PRIM_ADDR                    EQU 268500992  ('10010000'X)   -        
                                    The parameters passed by           -        
                                    the caller are not in the primary  -        
                                    address space.                              
HWTH_HCONN_BAD_PARM                     EQU 268500993  ('10010001'X)   -        
                                    Number of parameters passed        -        
                                    by the caller is incorrect.                 
HWTH_HDISC_PRIM_ADDR                    EQU 268566528  ('10020000'X)   -        
                                    The parameters passed by           -        
                                    the caller are not in the primary  -        
                                    address space.                              
HWTH_HDISC_BAD_PARM                     EQU 268566529  ('10020001'X)   -        
                                    Number of parameters passed        -        
                                    by the caller is incorrect.                 
HWTH_HINIT_PRIM_ADDR                    EQU 268632064  ('10030000'X)   -        
                                    The parameters passed by           -        
                                    the caller are not in the primary  -        
                                    address space.                              
HWTH_HINIT_BAD_PARM                     EQU 268632065  ('10030001'X)   -        
                                    Number of parameters passed        -        
                                    by the caller is incorrect.                 
HWTH_HRQST_PRIM_ADDR                    EQU 268697600  ('10040000'X)   -        
                                    The parameters passed by           -        
                                    the caller are not in the primary  -        
                                    address space.                              
HWTH_HRQST_BAD_PARM                     EQU 268697601  ('10040001'X)   -        
                                    Number of parameters passed        -        
                                    by the caller is incorrect.                 
HWTH_HRSET_PRIM_ADDR                    EQU 268763136  ('10050000'X)   -        
                                    The parameters passed by           -        
                                    the caller are not in the primary  -        
                                    address space.                              
HWTH_HRSET_BAD_PARM                     EQU 268763137  ('10050001'X)   -        
                                    Number of parameters passed        -        
                                    by the caller is incorrect.                 
HWTH_HSET_PRIM_ADDR                     EQU 268828672  ('10060000'X)   -        
                                    The parameters passed by           -        
                                    the caller are not in the primary  -        
                                    address space.                              
HWTH_HSET_BAD_PARM                      EQU 268828673  ('10060001'X)   -        
                                    Number of parameters passed        -        
                                    by the caller is incorrect.                 
HWTH_HSLST_PRIM_ADDR                    EQU 268894208  ('10070000'X)   -        
                                    The parameters passed by           -        
                                    the caller are not in the primary  -        
                                    address space.                              
HWTH_HSLST_BAD_PARM                     EQU 268894209  ('10070001'X)   -        
                                    Number of parameters passed        -        
                                    by the caller is incorrect.                 
HWTH_HTERM_PRIM_ADDR                    EQU 268959744  ('10080000'X)   -        
                                    The parameters passed by           -        
                                    the caller are not in the primary  -        
                                    address space.                              
HWTH_HTERM_BAD_PARM                     EQU 268959745  ('10080001'X)   -        
                                    Number of parameters passed        -        
                                    by the caller is incorrect.                 
  SPACE 2                                                                       
*--------------------------------------------------------------------*          
*                                                                    *          
*                             Return Codes                           *          
*                                                                    *          
*--------------------------------------------------------------------*          
HWTH_OK                                 EQU            0 ('00000000'X) -        
                                    Operation successful                        
HWTH_WARNING                            EQU            4 ('00000004'X) -        
                                    Warning.  See service-specific     -        
                                    documentation for further          -        
                                    explanation.                                
HWTH_HANDLE_INV                         EQU          257 ('00000101'X) -        
                                    Invalid handle.                             
HWTH_HANDLE_INUSE                       EQU          258 ('00000102'X) -        
                                    Handle is being used by another    -        
                                    caller.                                     
HWTH_HANDLETYPE_INV                     EQU          259 ('00000103'X) -        
                                    For services with handleType       -        
                                    parameter, handleType is not a     -        
                                    valid value.  For other services,  -        
                                    handle does not match type of      -        
                                    handle expected.                            
HWTH_INACCESSIBLE_PARM                  EQU          260 ('00000104'X) -        
                                    One of the parameters passed       -        
                                    by the caller is not accessible.            
HWTH_CANNOT_OBTAIN_WORKAREA             EQU          261 ('00000105'X) -        
                                    HWTHINIT cannot obtain the         -        
                                    workarea required by the HTTP      -        
                                    enabler.                                    
HWTH_COMMUNICATION_ERROR                EQU          262 ('00000106'X) -        
                                    A failure in communication         -        
                                    or in the attempt of communication -        
                                    with a web server or the server    -        
                                    application occurred.                       
HWTH_CANNOT_INCREASE_WORKAREA           EQU          263 ('00000107'X) -        
                                    Unable to increase the HTTP        -        
                                    enabler toolkit workarea.                   
HWTH_CANNOT_FREE_WORKAREA               EQU          264 ('00000108'X) -        
                                    Unable to free workarea.                    
HWTH_CONNECTION_NOT_ACTIVE              EQU          265 ('00000109'X) -        
                                    The specified request requires     -        
                                    an active connection to the server.         
HWTH_HSET_OPTIONVALADDR_INV             EQU          513 ('00000201'X) -        
                                    The optionValueAddr was zero but   -        
                                    the optionValueLen was nonzero.             
HWTH_HSET_OPTIONVALLEN_INV              EQU          514 ('00000202'X) -        
                                    The optionValueLen was zero but    -        
                                    the optionValueAddr was non-zero,  -        
                                    or the optionValueLen is not valid -        
                                    for the option specified.                   
HWTH_HSET_OPTION_INV                    EQU          515 ('00000203'X) -        
                                    Bad option specified or option     -        
                                    did not match the handle specified.         
HWTH_HSET_OPTIONVALUE_INV               EQU          516 ('00000204'X) -        
                                    Bad optionValue specified.                  
HWTH_HSET_CONN_ALREADY_ACTIVE           EQU          517 ('00000205'X) -        
                                    The specified connect option is    -        
                                    not allowed to be set when the     -        
                                    connection associated with the     -        
                                    connect handle has already been    -        
                                    established.                                
HWTH_HSLST_SLIST_INV                    EQU          769 ('00000301'X) -        
                                    Bad sList parameter. For           -        
                                    HWTH_SLST_NEW, must be zero. For   -        
                                    HWTH_SLST_APPEND or HWTH_SLST_FREE,-        
                                    must be a valid sList.                      
HWTH_HSLST_FUNCTION_INV                 EQU          770 ('00000302'X) -        
                                    Bad HWTHSLST function.                      
HWTH_HSLST_STRINGLEN_INV                EQU          771 ('00000303'X) -        
                                    Invalid stringLen. For             -        
                                    HWTH_SLST_NEW or HWTH_SLST_APPEND, -        
                                    stringLen must be non-zero. For    -        
                                    HWTH_SLST_FREE, must be zero.               
HWTH_HSLST_STRINGADDR_INV               EQU          772 ('00000304'X) -        
                                    Invalid stringAddr. For            -        
                                    HWTH_SLST_NEW or HWTH_SLST_APPEND, -        
                                    stringAddr must be non-zero. For   -        
                                    HWTH_SLST_FREE, must be zero.               
HWTH_HTERM_FORCEOPTION_INV              EQU         1025 ('00000401'X) -        
                                    Specified ForceOption parameter    -        
                                    is not HWTH_FORCE or HWTH_NOFORCE.          
HWTH_HCONN_CONNECT_INV                  EQU         1281 ('00000501'X) -        
                                    Invalid combination of option      -        
                                    values specified on the connection.         
HWTH_HRQST_REQUEST_INV                  EQU         1537 ('00000601'X) -        
                                    Invalid combination of option      -        
                                    values specified on the request             
HWTH_INTERRUPT_STATUS_INV               EQU         3841 ('00000F01'X) -        
                                    Caller is disabled                          
HWTH_LOCKS_HELD                         EQU         3842 ('00000F02'X) -        
                                    Caller is holding one or           -        
                                       more locks                               
HWTH_MODE_INV                           EQU         3843 ('00000F03'X) -        
                                    Caller is not in task mode or is   -        
                                    running in cross-memory mode                
HWTH_AUTHLEVEL_INV                      EQU         3844 ('00000F04'X) -        
                                    Caller is running in key 0                  
HWTH_ENVIRONMENTAL_ERROR                EQU         3845 ('00000F05'X) -        
                                    The proper z/OS UNIX environment   -        
                                    is not available, an LE environment-        
                                    failed to be created, or another   -        
                                    environmental error was detected            
HWTH_UNSUPPORTED_RELEASE                EQU         3846 ('00000F06'X) -        
                                    The system level does not support  -        
                                    the service                                 
HWTH_UNEXPECTED_ERROR                   EQU         4095 ('00000FFF'X) -        
                                    The service routine encountered    -        
                                    an unexpected error                         
  SPACE 2                                                                       
*--------------------------------------------------------------------*          
*                                                                    *          
*                       Diag Reason Codes                            *          
*                                                                    *          
* Constants to aid applications in determining the cause of          *          
* HWTH_WARNING or HWTH_COMMUNICATION_ERROR return codes.  Other      *          
* return codes may also fill in the diag reason code with a value    *          
* related to the particular error.                                   *          
*                                                                    *          
*--------------------------------------------------------------------*          
HWTH_RSN_REDIRECTED                     EQU            1 ('00000001'X) -        
                                    The request was successful but a   -        
                                    redirect.occurred. See             -        
                                    HWTH_reasonDesc for the redirected -        
                                    path.                                       
HWTH_RSN_NEEDED_REDIRECT                EQU            2 ('00000002'X) -        
                                    The request was attempted but a    -        
                                    redirect action was needed to      -        
                                    complete the request. However,     -        
                                    the HWTH_OPT_MAX_REDIRECTS option  -        
                                    was set to a value that prevented  -        
                                    this action.                                
HWTH_RSN_REDIRECT_XDOMAIN               EQU            3 ('00000003'X) -        
                                    The request was attempted but a    -        
                                    but a redirect action was needed   -        
                                    to complete the request. However   -        
                                    the HWTH_OPT_XDOMAIN_REDIRECTS     -        
                                    option was set to a value that     -        
                                    prevented this action.                      
HWTH_RSN_REDIRECT_TO_HTTP               EQU            4 ('00000004'X) -        
                                    The request was attempted but a    -        
                                    redirect action was needed to      -        
                                    complete the request. However the  -        
                                    HWTH_OPT_REDIRECT_PROTOCOLS option -        
                                    was set to a value that prevented  -        
                                    a redirect to go from HTTPS to     -        
                                    HTTP.                                       
HWTH_RSN_REDIRECT_TO_HTTPS              EQU            5 ('00000005'X) -        
                                    The request was attempted but a    -        
                                    redirect action was needed to      -        
                                    complete the request. However the  -        
                                    HWTH_OPT_REDIRECT_PROTOCOLS option -        
                                    was set to a value that prevented  -        
                                    a redirect to go from HTTP to      -        
                                    HTTPS.                                      
HWTH_RSN_NO_REDIRECT_LOCATION           EQU            6 ('00000006'X) -        
                                    The response from the server was   -        
                                    received with a redirect status    -        
                                    but the redirect location was not  -        
                                    provided.                                   
HWTH_RSN_HDR_EXIT_ABORT                 EQU            7 ('00000007'X) -        
                                    The user response header exit      -        
                                    indicated the request should be    -        
                                    aborted.                                    
HWTH_RSN_TUNNEL_UNSUCCESSFUL            EQU            8 ('00000008'X) -        
                                    An attempt was made to establish   -        
                                    a tunnel through a proxy but the   -        
                                    proxy returned a non-success       -        
                                    return code.                                
HWTH_RSN_MALFORMED_CHNK_ENCODE          EQU            9 ('00000009'X) -        
                                    The response from the server was   -        
                                    received with malformed chunked    -        
                                    encoding data.                              
HWTH_RSN_MALFORMED_REDIRECT_URI         EQU           10 ('0000000A'X) -        
                                    The response from the server was   -        
                                    received with a redirect location  -        
                                    which was a malformed uri.     @L1A         
                                                                                
HWTH_RSN_STREAM_SEND_EXIT_ABORT         EQU           11 ('0000000B'X) -        
                                    The user streaming send exit       -        
                                    indicated that the request should  -        
                                    be aborted.                    @L1A         
HWTH_RSN_STREAM_SEND_EXIT_INVALID       EQU           12 ('0000000C'X) -        
                                    The user streaming send exit       -        
                                    supplied an invalid data           -        
                                    description.                   @L1A         
HWTH_RSN_STREAM_SEND_EXIT_NODATA        EQU           13 ('0000000D'X) -        
                                    The user streaming send exit       -        
                                    failed to supply required data @L1A         
HWTH_RSN_STREAM_SEND_EXIT_STATE         EQU           14 ('0000000E'X) -        
                                    The user streaming send exit       -        
                                    indicated an unsupported state     -        
                                    value.                         @L1A         
HWTH_RSN_STREAM_RECV_EXIT_ABORT         EQU           15 ('0000000F'X) -        
                                    The user streaming receive exit    -        
                                    indicated that the request should  -        
                                    be aborted.                    @L1A         
HWTH_RSN_STREAM_RECV_EXIT_INVALID       EQU           16 ('00000010'X) -        
                                    The user streaming receive exit    -        
                                    supplied an invalid data           -        
                                    description.                   @L1A         
HWTH_RSN_STREAM_RECV_EXIT_NODATA        EQU           17 ('00000011'X) -        
                                    The user streaming receive exit    -        
                                    failed to supply required          -        
                                    buffers.                       @L1A         
HWTH_RSN_STREAM_RECV_EXIT_STATE         EQU           18 ('00000012'X) -        
                                    The user streaming send exit       -        
                                    indicated an illegal state         -        
                                    value.                         @L1A         
HWTH_RSN_UNSUPPORTED_XFERENCODING       EQU           19 ('00000013'X) -        
                                    The response used an unsupported   -        
                                    transfer encoding type.        @L1A         
HWTH_RSN_UNSUPPORTED_BODY_SIZE          EQU           20 ('00000014'X) -        
                                    The response body size requires    -        
                                    streaming receive.             @L1A         
HWTH_RSN_UNSUPPORTED_CHUNK_SIZE         EQU           21 ('00000015'X) -        
                                    The response from the server was   -        
                                    received as chunk-encoded data     -        
                                    whose chunks are excessively large -        
                                    (likely indicating malformedness   -        
                                    of data).                      @L1A         
HWTH_RSN_INCOMPLETE_RESPONSE            EQU           22 ('00000016'X) -        
                                    The response from the server was   -        
                                    smaller than the indicated content -        
                                    length.                        @D1A         
HWTH_RSN_PROXY_AUTH_REQD                EQU           23 ('00000017'X) -        
                                    The HTTP proxy specified for the   -        
                                    HTTPS connection URI requires      -        
                                    authentication.                @L2A         
HWTH_RSN_SOCKET_READ_ZERO               EQU           24 ('00000018'X) -        
                                    No response was received from a    -        
                                    request due to a closed non-SSL    -        
                                    socket.                        @08A         
HWTH_RSN_CERT_CHECK_CONN                EQU           25 ('00000019'X) -        
                                    The HWTHCONN was successful, but   -        
                                    the HTTPS origin server presented  -        
                                    a certificate not valid for its    -        
                                    hostname.                      @1MA         
HWTH_RSN_CERT_CHECK_RQST                EQU           26 ('0000001A'X) -        
                                    The HWTHRQST was successful, but   -        
                                    the connection used an HTTPS       -        
                                    origin server that presented a     -        
                                    certificate not valid for its      -        
                                    hostname.                      @1MA         
HWTH_RSN_CERT_CHECK_REDIR               EQU           27 ('0000001B'X) -        
                                    The HWTHRQST was successful, but   -        
                                    was redirected to one or more      -        
                                    HTTPS origin server(s) that        -        
                                    presented a certificate not        -        
                                    valid for its hostname.        @1MA         
HWTH_RSN_CROSS_TUNNEL_REDIR             EQU           28 ('0000001C'X) -        
                                    The request was sent in a tunnel   -        
                                    (via proxy) to an HTTPS server.    -        
                                    The request needed a redirect      -        
                                    action to a new HTTPS tunnel.      -        
                                    Cross-tunnel redirects are not     -        
                                    supported.                     @1MA         
*--------------------------------------------------------------------*          
HWTH_RSN_COOKIE_STORE_FULL              EQU           51 ('00000033'X) -        
                                    A new cookie could not be added    -        
                                    to the current cookie store        -        
                                    because it was full.                        
HWTH_RSN_COOKIE_INVALID                 EQU           52 ('00000034'X) -        
                                    A new cookie was not added to the  -        
                                    current cookie store because it    -        
                                    had invalid format or content.              
HWTH_RSN_COOKIE_STORE_INV_PARM          EQU           53 ('00000035'X) -        
                                    A supplied buffer area had invalid -        
                                    format or content.                          
HWTH_RSN_COOKIE_ST_INCOMPLETE           EQU           54 ('00000036'X) -        
                                    Some but not all contents of the   -        
                                    current cookie store were written  -        
                                    to (or read from) the supplied     -        
                                    buffer area.                                
HWTH_RSN_COOKIE_ST_MALLOC_ERR           EQU           57 ('00000039'X) -        
                                    A memory-related error condition   -        
                                    occurred while reading or writing  -        
                                    the current cookie store.                   
HWTH_RSN_COOKIE_ST_FREE_ERROR           EQU           58 ('0000003A'X) -        
                                    A memory-related error condition   -        
                                    occurred while reading or writing  -        
                                    the current cookie store.                   
HWTH_RSN_COOKIE_ST_UNEXP_ERROR          EQU           59 ('0000003B'X) -        
                                    An unexpected error occurred while -        
                                    reading or writing the current     -        
                                    cookie store.                               
                                                                                
*--------------------------------------------------------------------*          
*                                                                    *          
*                                                                    *          
*                 Diag Service Masks                                 *          
*                                                                    *          
*  4-byte mask constants representating the values returned in the   *          
*  HWTH_DIAGAREA_SERVICE.  Each value is comprised of two half       *          
*  words.  The first half word is the service identifier which       *          
*  can be used to aid applications in determining the service that   *          
*  caused the HWT_WARNING, HWTH_COMMUNICATION_ERROR or               *          
*  HWTH_UNEXPECTED_ERROR.  The second half word is for IBM use only. *          
*                                                                    *          
*  For instance:                                                     *          
*  If the HWTH_DIAGAREA_SERVICE is in the format of 'xxxxyyyy',      *          
*  xxxx is the service identifier.                                   *          
*                                                                    *          
*  When one of the above errors occurs, callers can 'AND' the value  *          
*  returned in the HWTH_DIAGAREA_SERVICE with these masks to test    *          
*  for service identifier in determining what service caused the     *          
*  failure.                                                          *          
*                                                              @02A  *          
*--------------------------------------------------------------------*          
HWTH_SERVICE_SEND_REQUEST_MASK          EQU       196607 ('0002FFFF'X) -        
                                    processing send request                     
HWTH_SERVICE_SOCKET_CLOSE_MASK          EQU       262143 ('0003FFFF'X) -        
                                    close()                                     
HWTH_SERVICE_SECURE_ENCODE64_MASK       EQU       327679 ('0004FFFF'X) -        
                                    gsk_encode_base64()                         
HWTH_SERVICE_SETSTACK_AFFINITY_MASK     EQU       393215 ('0005FFFF'X) -        
                                    setibmopt()                                 
HWTH_SERVICE_SOCKET_BIND_MASK           EQU       458751 ('0006FFFF'X) -        
                                    bind()                                      
HWTH_SERVICE_SET_SOCK_OPT_MASK          EQU       524287 ('0007FFFF'X) -        
                                    setsockopt()                                
HWTH_SERVICE_SOCKET_SEND_MASK           EQU       589823 ('0008FFFF'X) -        
                                    send()                                      
HWTH_SERVICE_SOCKET_RECEIVE_MASK        EQU       655359 ('0009FFFF'X) -        
                                    recv()                                      
HWTH_SERVICE_SOCKET_CONNECT_MASK        EQU       786431 ('000BFFFF'X) -        
                                    connect()                                   
HWTH_SERVICE_ICONV_OPEN_MASK            EQU       851967 ('000CFFFF'X) -        
                                    iconv_open()                                
HWTH_SERVICE_ICONV_MASK                 EQU       917503 ('000DFFFF'X) -        
                                    iconv()                                     
HWTH_SERVICE_SEC_SOCKET_SEND_MASK       EQU       983039 ('000EFFFF'X) -        
                                    gsk_secure_socket_write()                   
HWTH_SERVICE_SEC_SOCKET_READ_MASK       EQU      1048575 ('000FFFFF'X) -        
                                    gsk_secure_socket_read()                    
HWTH_SERVICE_SEC_ENVIRON_OPEN_MASK      EQU      1114111 ('0010FFFF'X) -        
                                    gsk_environment_open()                      
HWTH_SERVICE_SEC_ATTR_SET_ENUM_MASK     EQU      1179647 ('0011FFFF'X) -        
                                    gsk_attribute_set_enum()                    
HWTH_SERVICE_SEC_ATTR_SET_BUFF_MASK     EQU      1245183 ('0012FFFF'X) -        
                                    gsk_attribute_set_buffer()                  
HWTH_SERVICE_SEC_ENVIRON_INIT_MASK      EQU      1310719 ('0013FFFF'X) -        
                                    gsk_environment_init()                      
HWTH_SERVICE_SEC_SOCKET_OPEN_MASK       EQU      1376255 ('0014FFFF'X) -        
                                    gsk_secure_socket_open()                    
HWTH_SERVICE_SEC_SET_NUM_VALUE_MASK     EQU      1441791 ('0015FFFF'X) -        
                                    gsk_attribute_set_numeric_value()           
HWTH_SERVICE_SEC_SOCKET_INIT_MASK       EQU      1507327 ('0016FFFF'X) -        
                                    gsk_secure_socket_init()                    
HWTH_SERVICE_SEC_SOCKETSHUTDWN_MASK     EQU      1572863 ('0017FFFF'X) -        
                                    gsk_secure_socket_shutdown()                
HWTH_SERVICE_SEC_SOCKET_CLOSE_MASK      EQU      1638399 ('0018FFFF'X) -        
                                    gsk_secure_socket_close()                   
HWTH_SERVICE_SEC_ENVIRON_CLOSE_MASK     EQU      1703935 ('0019FFFF'X) -        
                                    gsk_environment_close()                     
HWTH_SERVICE_RECEIVE_RESPONSE_MASK      EQU      1769471 ('001AFFFF'X) -        
                                    processing to receive response              
HWTH_SERVICE_GETADDRINFO_MASK           EQU      1900543 ('001CFFFF'X) -        
                                    getaddrinfo()                               
HWTH_SERVICE_HDR_EXIT_ABORT_MASK        EQU      1966079 ('001DFFFF'X) -        
                                    headerCallback()                            
HWTH_SERVICE_SOCKET_SHUTDOWN_MASK       EQU      2031615 ('001EFFFF'X) -        
                                    shutdown()                                  
HWTH_SERVICE_MALLOC_MASK                EQU      2097151 ('001FFFFF'X) -        
                                    malloc()                                    
HWTH_SERVICE_REALLOC_MASK               EQU      2162687 ('0020FFFF'X) -        
                                    realloc()                                   
HWTH_SERVICE_ESTABLISH_TUNNEL_MASK      EQU      2228223 ('0021FFFF'X) -        
                                    processing response                         
HWTH_SERVICE_INIT_TRACE                 EQU      2293759 ('0022FFFF'X) -        
                                    initTrace()                   @P1C          
HWTH_SERVICE_WRAP_TRACE_MASK            EQU      2359295 ('0023FFFF'X) -        
                                    wrapTraceFile()               @L2A          
HWTH_SERVICE_SETUP_REDIRECT             EQU      2424831 ('0024FFFF'X) -        
                                    setupRedirect()               @L1A          
HWTH_SERVICE_INLINE_SEND                EQU      2490367 ('0025FFFF'X) -        
                                    sendInlineRequest()           @L1A          
HWTH_SERVICE_STREAM_SEND                EQU      2555903 ('0026FFFF'X) -        
                                    sendStreamedRequest()         @L1A          
HWTH_SERVICE_DO_SENDSTREAMED            EQU      2621439 ('0027FFFF'X) -        
                                    doSendStreamed()              @L1A          
HWTH_SERVICE_DO_SENDMULTICHUNK          EQU      2686975 ('0028FFFF'X) -        
                                    doSendMultiChunked()          @L1A          
HWTH_SERVICE_VALIDATE_SENDLIST          EQU      2752511 ('0029FFFF'X) -        
                                    validateStreamingSendList()   @L1A          
HWTH_SERVICE_STREAM_RECV                EQU      2818047 ('002AFFFF'X) -        
                                    receiveStreamedResponse()     @L1A          
HWTH_SERVICE_GET_CHUNKSIZE              EQU      2883583 ('002BFFFF'X) -        
                                    getChunkDataSize()            @L1A          
HWTH_SERVICE_GET_NEXT_RSPDATA_STRM      EQU      2949119 ('002CFFFF'X) -        
                                    getNextResponseDataStreamed() @L1A          
HWTH_SERVICE_BUILD_RTNLIST_CHNKD        EQU      3014655 ('002DFFFF'X) -        
                                    buildReturnListChunked()      @L1A          
HWTH_SERVICE_STRMRESP_END_CHNKD         EQU      3080191 ('002EFFFF'X) -        
                                    processStreamedRespEndChnkd() @L1A          
HWTH_SERVICE_STRMRESP_TRAILER           EQU      3145727 ('002FFFFF'X) -        
                                    processStreamedRespTrailers() @L1A          
HWTH_SERVICE_PARSE_RESP_HDRS            EQU      3211263 ('0030FFFF'X) -        
                                    parseResponsetHeaders()       @L1A          
HWTH_SERVICE_HANDLE_NEXTCHUNKD          EQU      3276799 ('0031FFFF'X) -        
                                    handleNextChunkedData()       @L1A          
HWTH_SERVICE_HANDLE_NEXTRAWD            EQU      3342335 ('0032FFFF'X) -        
                                    handleNextRawData()           @L1A          
HWTH_SERVICE_BUILD_RTNLIST_RAW          EQU      3407871 ('0033FFFF'X) -        
                                    buildReturnListRaw()          @L1A          
HWTH_SERVICE_SUPPLYDATA_TO_BUF          EQU      3473407 ('0034FFFF'X) -        
                                    supplyListDataToBuffer()      @L1A          
HWTH_SERVICE_INITIAL_RESPDATA           EQU      3538943 ('0035FFFF'X) -        
                                    handleInitialResponseData()   @L1A          
HWTH_SERVICE_ICONN_IMPL                 EQU      3604479 ('0036FFFF'X) -        
                                    iconnImpl()                   @04A          
HWTH_SERVICE_CHECK_TTLS                 EQU      3670015 ('0037FFFF'X) -        
                                    checkForTTLS()                @04A          
HWTH_SERVICE_CERT_CHECK                 EQU      3735551 ('0038FFFF'X) -        
                                    checkServerCertificate()      @1MA          
HWTH_SERVICE_SET_COOKIE_MASK            EQU      6684671 ('0065FFFF'X) -        
                                    setCookie()                                 
HWTH_SERVICE_GET_COOKIE_HEADER_MASK     EQU      6750207 ('0066FFFF'X) -        
                                    getCookieHeader()                           
HWTH_SERVICE_SERIALIZE_MASK             EQU      6815743 ('0067FFFF'X) -        
                                    serializeCookies()                          
HWTH_SERVICE_DESERIALIZE_MASK           EQU      6881279 ('0068FFFF'X) -        
                                    deserializeCookies()                        
HWTH_SERVICE_GET_CELL_MASK              EQU      6946815 ('0069FFFF'X) -        
                                    getCell()                                   
HWTH_SERVICE_FREE_CELL_MASK             EQU      7012351 ('006AFFFF'X) -        
                                    freeCell()                                  
HWTH_SERVICE_LIST_INSERT_MASK           EQU      7077887 ('006BFFFF'X) -        
                                    listInsert()                                
HWTH_SERVICE_LIST_DELETE_MASK           EQU      7143423 ('006CFFFF'X) -        
                                    listDelete()                                
HWTH_SERVICE_FIND_APPL_COOKIES_MASK     EQU      7208959 ('006DFFFF'X) -        
                                    findApplicableCookies                       
HWTH_SERVICE_GET_RQST_COOKIES_MASK      EQU      7274495 ('006EFFFF'X) -        
                                    getRequestCookies()                         
HWTH_SERVICE_TOCOOKIE_STRARRAY_MASK     EQU      7340031 ('006FFFFF'X) -        
                                    toCookieStringArray()                       
HWTH_SERVICE_COOKIE_TO_STRING_MASK      EQU      7405567 ('0070FFFF'X) -        
                                    cookieToString()                            
HWTH_SERVICE_TO_CANONICAL_MASK          EQU      7471103 ('0071FFFF'X) -        
                                    toCanonical()                               
HWTH_SERVICE_STORAGE_MASK               EQU     13238271 ('00C9FFFF'X) -        
                                    ?STORAGE macro                              
HWTH_SERVICE_CSRPBLD_MASK               EQU     13303807 ('00CAFFFF'X) -        
                                    CSRPBLD                                     
HWTH_SERVICE_CSRPEXP_MASK               EQU     13369343 ('00CBFFFF'X) -        
                                    CSRPEXP                                     
HWTH_SERVICE_LOAD_MASK                  EQU     13434879 ('00CCFFFF'X) -        
                                    ?LOAD                                       
HWTH_SERVICE_CEEPIPI_MASK               EQU     13500415 ('00CDFFFF'X) -        
                                    CEEPIPI                                     
HWTH_SERVICE_PREP_LEENV_MASK            EQU     13565951 ('00CEFFFF'X) -        
                                    Service to prepare an LE           -        
                                    environment                                 
*====================================================================*          
*  Generic type definitions for multiple services                    *          
*====================================================================*          
                        DSECT                                                   
*--------------------------------------------------------------------*          
*  Connection / Request Handle Type definition                       *          
*--------------------------------------------------------------------*          
HWTH_HANDLE_TYPE         DS   CL(12)                                            
*                                                                               
*--------------------------------------------------------------------*          
*  returnCode Type definition                                        *          
*--------------------------------------------------------------------*          
HWTH_RETURNCODE_TYPE     DS   F                                                 
*                                                                               
*--------------------------------------------------------------------*          
*  Diagnostics Area Type definition                                  *          
*--------------------------------------------------------------------*          
HWTH_DIAGDESC_TYPE       DS   CL(128)                                           
                                                                                
HWTH_DIAGAREA_TYPE      DSECT                                                   
HWTH_DIAGAREA_SERVICE    DS F                                                   
HWTH_DIAGAREA_REASONCODE DS F                                                   
HWTH_DIAGAREA_REASONDESC DS CL(L'HWTH_DIAGDESC_TYPE)                            
*                                                                               
* DiagArea structure length                                                     
HWTH_DIAGAREA_TYPE_LENGTH EQU *-HWTH_DIAGAREA_TYPE                              
*                                                                               
  SPACE 2                                                                       
*====================================================================*          
*  HWTHINIT Parameter Type Definitions and Constants                 *          
*====================================================================*          
*                                                                               
*-----------------------------------------------------------------*             
*handleType                                                       *             
*  Used to specify which tupe of resources need to be initialized.*             
*---------------------------------------------------------------- *             
                        DSECT                                                   
HWTH_HANDLETYPE_TYPE     DS F                                                   
                                                                                
HWTH_HANDLETYPE_CONNECTION    EQU  1                                            
HWTH_HANDLETYPE_HTTPREQUEST   EQU  2                                            
                                                                                
*====================================================================*          
*  HWTHSET Parameter Type Definitions and Constants                  *          
*====================================================================*          
*                                                                               
* ----------------------------------------------------------------*             
* option                                                          *             
*  Used to specify which option is to be set for either a         *             
*  connection or a request.                                       *             
* ----------------------------------------------------------------*             
                        DSECT                                                   
HWTH_SET_OPTION_TYPE     DS F                                                   
*                                                                               
* HTTP Enabler Connection / Request Options                                     
HWTH_OPT_URI                  EQU   1   ('0001'X)                      -        
                                   Can be connection or request        -        
                                   option.  For a connection handle,   -        
                                   the network location (w/o port #)   -        
                                   is required (see documentation).    -        
                                   For a request handle, an optional   -        
                                   resource being targeted (path name  -        
                                   with optional query string and/or   -        
                                   fragment).                                   
*                                                                               
*                                  2 - 20 reserved                              
*                                                                               
* HTTP Enabler Connection-only Options                                          
HWTH_OPT_PORT                 EQU   21  ('0015'X)                      -        
                                    An optional remote port number.             
HWTH_OPT_IPSTACK              EQU   22  ('0016'X)                      -        
                                   An optional 1 to 8 character z/OS   -        
                                   TCP/IP stack name to be used.                
HWTH_OPT_LOCALIPADDR          EQU   23  ('0017'X)                      -        
                                   An optional outgoing local IP       -        
                                   address the connection is to        -        
                                   originate from.                              
HWTH_OPT_LOCALPORT            EQU   24  ('0018'X)                      -        
                                   An optional outgoing local port     -        
                                   the connection is to originate from.         
HWTH_OPT_PROXY                EQU   25  ('0019'X)                      -        
                                   An optional HTTP proxy.                      
HWTH_OPT_PROXYPORT            EQU   26  ('001A'X)                      -        
                                   An optional proxy port.                      
HWTH_OPT_USE_SSL              EQU   27  ('001B'X)                      -        
                                   An optional value to tell toolkit   -        
                                   whether or not to use SSL/TLS       -        
                                   connection.                                  
HWTH_OPT_SSLVERSION           EQU   28  ('001C'X)                      -        
                                   An optional set of SSL levels to be -        
                                   used as part of SSL negotiations.            
HWTH_OPT_SSLKEYTYPE           EQU   29  ('001D'X)                      -        
                                   An optional value to tell the       -        
                                   toolkit which type of key store to  -        
                                   use.                                         
HWTH_OPT_SSLKEY               EQU   30  ('001E'X)                      -        
                                   An optional name of the key store   -        
                                   to be used.                                  
HWTH_OPT_SSLKEYSTASHFILE      EQU   31  ('001F'X)                      -        
                                   An optional stash file where the    -        
                                   key database file password is kept. -        
                                   Required if SSLKEYTYPE is           -        
                                   HWTH_SSLKEYTYPE_KEYDBFILE.                   
HWTH_OPT_SSLCLIENTAUTHLABEL   EQU   32  ('0020'X)                      -        
                                   An optional label representing a    -        
                                   client certificate label if client  -        
                                   authentication is required.                  
HWTH_OPT_SNDTIMEOUTVAL        EQU   33  ('0021'X)                      -        
                                   An optional timeout value for       -        
                                   outgoing requests.                           
HWTH_OPT_RCVTIMEOUTVAL        EQU   34  ('0022'X)                      -        
                                   An optional timeout value for       -        
                                   incoming responses.                          
HWTH_OPT_MAX_REDIRECTS        EQU   35  ('0023'X)                      -        
                                   An optional value specifying        -        
                                   the max number of redirects for a   -        
                                   request using this connection.               
HWTH_OPT_XDOMAIN_REDIRECTS    EQU   36  ('0024'X)                      -        
                                   An optional value specifying the    -        
                                   redirect behavior regarding         -        
                                   cross-domain redirects.                      
HWTH_OPT_REDIRECT_PROTOCOLS   EQU   37  ('0025'X)                      -        
                                   An optional value specifying        -        
                                   the redirect behavior regarding     -        
                                   allowed redirect protocols.                  
HWTH_OPT_COOKIETYPE           EQU   38  ('0026'X)                      -        
                                   An optional value specifying        -        
                                   the cookie engine behavior of the   -        
                                   toolkit for this connection.                 
HWTH_OPT_COOKIE_INPUT_BUFFER  EQU   39  ('0027'X)                      -        
                                   An optional buffer containing       -        
                                   a previously saved cookie store to  -        
                                   be used to prime the cookie engine  -        
                                   for this connection.                         
HWTH_OPT_COOKIE_OUTPUT_BUFFER  EQU  40  ('0028'X)                      -        
                                   An optional buffer for cookies to   -        
                                   be saved when the connection is     -        
                                   disconnected.                                
HWTH_OPT_VERBOSE               EQU  41  ('0029'X)                      -        
                                   An optional debugging option.                
HWTH_OPT_VERBOSE_OUTPUT        EQU  42  ('002A'X)                      -        
                                   An optional DD (data definition)    -        
                                   specification where verbose         -        
                                   debugging messages should be routed          
HWTH_OPT_SSLCIPHERSPECS        EQU  43  ('002B'X)                      -        
                                   An optional specification of        -        
                                   the cipher suites to be used by SSL.         
*                                                                  @05A         
HWTH_OPT_PROXYAUTH             EQU  44  ('002C'X)                      -        
                                   An optional value specifying        -        
                                   the proxy authentication type to    -        
                                   be used on the connection.      @L2A         
HWTH_OPT_PROXYAUTH_USERNAME    EQU  45  ('002D'X)                      -        
                                   An optional user name to be used    -        
                                   with the proxy authentication.      -        
                                   Required if HWTH_OPT_PROXYAUTH is   -        
                                   HWTH_PROXYAUTH_BASIC.           @L2A         
HWTH_OPT_PROXYAUTH_PASSWORD    EQU  46  ('002E'X)                      -        
                                   An optional password to be used     -        
                                   with the proxy authentication.      -        
                                   Required if HWTH_OPT_PROXYAUTH is   -        
                                   HWTH_PROXYAUTH_BASIC.           @L2A         
HWTH_OPT_SSLTRACE              EQU  47 ('002F'X)                       -        
                                   Enables optional debugging aid for  -        
                                   secure connect failures.        @16A         
HWTH_OPT_CERT_CHECK            EQU  48 ('0030'X)                       -        
                                   Control the reporting of            -        
                                   server certificate validation       -        
                                   errors.                         @1MA         
*                                                                               
*                                  49 - 70 reserved                @1MC         
*                                                                               
* HTTP Enabler Request-only Options                                             
*                                                                               
HWTH_OPT_HTTP_VERSION         EQU   71  ('0047'X)                      -        
                                   An optional HTTP version.                    
HWTH_OPT_REQUESTMETHOD        EQU   72  ('0048'X)                      -        
                                   A required HTTP request             -        
                                   method.                                      
HWTH_OPT_HTTPHEADERS          EQU   73  ('0049'X)                      -        
                                   An optional sList (created          -        
                                   by the HWTHSLST service) specifying -        
                                   a list of HTTP request headers to   -        
                                   be sent.                                     
HWTH_OPT_REQUESTBODY          EQU   74  ('004A'X)                      -        
                                    An optional request body                    
HWTH_OPT_TRANSLATE_REQBODY    EQU   75  ('004B'X)                      -        
                                   An optional value specifying        -        
                                   the request body codepage           -        
                                   translation behavior of the toolkit.         
HWTH_OPT_RESPONSEHDR_EXIT     EQU   76  ('004C'X)                      -        
                                   An optional address of the          -        
                                   response header callback routine.            
HWTH_OPT_RESPONSEHDR_USERDATA EQU  77 ('004D'X)                        -        
                                   An optional buffer of user          -        
                                   data to be passed to the response   -        
                                   header exit.                                 
HWTH_OPT_RESPONSEBODY_EXIT    EQU   78  ('004E'X)                      -        
                                   An optional address of the          -        
                                   response body callback routine.              
HWTH_OPT_RESPONSEBODY_USERDATA EQU  79  ('004F'X)                      -        
                                   An optional buffer of user          -        
                                   data to be passed to the response   -        
                                   body exit.                                   
HWTH_OPT_TRANSLATE_RESPBODY   EQU   80  ('0050'X)                      -        
                                   An optional value specifying        -        
                                   the response body codepage          -        
                                   translation behavior of the toolkit.         
HWTH_OPT_HTTPAUTH             EQU   81  ('0051'X)                      -        
                                   An optional value specifying        -        
                                   the HTTP authentication level to be -        
                                   used on the request.                         
HWTH_OPT_USERNAME             EQU   82  ('0052'X)                      -        
                                   An optional HTTP user name          -        
                                   to be used with the HTTP            -        
                                   authentiation. Required if          -        
                                   HWTH_OPT_HTTPAUTH is HWTH_HTTPAUTH_ -        
                                   BASIC.                                       
HWTH_OPT_PASSWORD             EQU   83  ('0053'X)                      -        
                                   An optional HTTP password           -        
                                   to be used with the HTTP            -        
                                   authentiation. Required if          -        
                                   HWTH_OPT_HTTPAUTH is HWTH_HTTPAUTH_ -        
                                   BASIC.                                       
HWTH_OPT_COOKIE               EQU   84  ('0054'X)                      -        
                                   An optional buffer of user-         -        
                                   supplied cookies for this request.           
HWTH_OPT_STREAM_SEND_EXIT     EQU   85  ('0055'X)                      -        
                                   An optional address of the streamed -        
                                   request body callback routine.  @L1A         
HWTH_OPT_STREAM_RECEIVE_EXIT  EQU   86  ('0056'X)                      -        
                                   An optional address of the streamed -        
                                   response body callback routine. @L1A         
HWTH_OPT_REQUESTBODY_USERDATA EQU   87  ('0057'X)                      -        
                                   An optional buffer of user data to  -        
                                   be passed to the streamed request   -        
                                   body callback routine.          @L1A         
*                                  88 - 120 reserved               @L1C         
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_OPT_IPSTACK type definition                                *             
* IPStack                                                         *             
*   Use this type to declare a data area representing the local   *             
*   TCP/IP stack that is optionally selected for HTTP             *             
*   communications to the remote HTTP server.                     *             
* ----------------------------------------------------------------*             
                        DSECT                                                   
HWTH_IPSTACK_TYPE        DS CL(8)                                               
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_OPT_USE_SSL type and      EQU    values                    *             
* SSL On/Off Switch                                               *             
*   Use these constants to determine if SSL/TLS secure HTTPS      *             
*   communication is used when establishing the connection.       *             
* ----------------------------------------------------------------*             
                        DSECT                                                   
HWTH_USESSL_TYPE         DS F                                                   
*                                                                               
HWTH_SSL_NONE                 EQU   0            SSL/TLS not used               
HWTH_SSL_USE                  EQU   1            SSL/TLS used                   
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_OPT_SSLVERSION constant values                             *             
* SSL Version                                                     *             
*   Use these constants to set one or more supported SSL versions *             
*   If more than one level is desired, use successive calls.      *             
* ----------------------------------------------------------------*             
                        DSECT                                                   
HWTH_SSLVERSION_TYPE     DS F                                                   
*                                                                               
HWTH_SSLVERSION_SSLV3         EQU   1                                           
HWTH_SSLVERSION_TLSV1         EQU   2                                           
HWTH_SSLVERSION_TLSV11        EQU   3                                           
HWTH_SSLVERSION_TLSV12        EQU   4                                           
HWTH_SSLVERSION_TLSV13        EQU   5                         @17A              
HWTH_SSLVERSION_DEFAULT       EQU   99  SSL used, use default System   -        
                                        SSL values                              
*                                                                               
* -----------------------------------------------------------------*            
* HWTH_OPT_SSLKEYTYPE type and constant values                     *            
* Key Repository Types                                             *            
*   Use these constants to specify a key repository type           *            
* -----------------------------------------------------------------*            
                        DSECT                                                   
HWTH_SSLKEYTYPE_TYPE     DS F                                                   
*                                                                               
HWTH_SSLKEYTYPE_KEYDBFILE     EQU   1                                           
HWTH_SSLKEYTYPE_KEYRINGNAME   EQU   2                                           
*                                                                               
* -----------------------------------------------------------------*            
* HWTH_OPT_SSLKEY constant values                                  *            
* Key Repository Values                                            *            
*   Use these constants to aid in naming a key repository          *            
* -----------------------------------------------------------------*            
HWTH_KEYDBFILE_MAX            EQU   251                                         
HWTH_KEYRINGNAME_MAX          EQU   237                                         
HWTH_KEYDBLABEL_MAX           EQU   127                                         
HWTH_KEYRINGLABEL_MAX         EQU    32                                         
                                                                                
* -----------------------------------------------------------------*            
* HWTH_OPT_SSLKEYSTASHFILE constant value                          *            
* Key Repository Password                                          *            
*   Use this constant to set the value of the password stash file  *            
*   associated with the key database file.                         *            
*   (only used when HWTH_OPT_SSLKEYTYPE =                          *            
*   HWTH_SSLKEYTYPE_KEYDBFILE)                                     *            
* -----------------------------------------------------------------*            
HWTH_SSLKEYSTASHFILE_MAX      EQU   251                                         
                                                                                
* -----------------------------------------------------------------*            
* HWTH_OPT_MAXREDIRECTS type                                       *            
* Maximum number of redirects for the connection.                  *            
*   Use this setting to limit the number of times a redirect will  *            
*   be followed by the toolkit.                                    *            
*   Default: 5                                                     *            
*   Zero: Redirects not allowed                                    *            
*   Max value: 50                                                  *            
* -----------------------------------------------------------------*            
                        DSECT                                                   
HWTH_MAXREDIRECTS_TYPE   DS F                                                   
*                                                                               
* -----------------------------------------------------------------*            
* HWTH_OPT_XDOMAIN_REDIRECTS type and constant values              *            
* Redirect behavior of the connection.                             *            
*   Use this setting to allow or disallow redirects to a domain    *            
*   other than the domain represented by this connection.          *            
* -----------------------------------------------------------------*            
                        DSECT                                                   
HWTH_OPT_XDOMAIN_REDIRECTS_TYPE DS F                                            
*                                                                               
HWTH_XDOMAIN_REDIRS_NOTALLOWED EQU 0                                            
HWTH_XDOMAIN_REDIRS_ALLOWED    EQU 1                                            
*                                                                               
* -----------------------------------------------------------------*            
* HWTH_OPT_REDIRECT_PROTOCOLS type and constant values             *            
* Specifies which additional protocols are allowed in the case     *            
*   of a redirect.                                                 *            
* -----------------------------------------------------------------*            
                        DSECT                                                   
HWTH_REDIRPROTOCOL_TYPE  DS F                                                   
*                                                                               
HWTH_REDIRECT_NOPROTCHANGE    EQU 0                                             
HWTH_REDIRECT_HTTPS           EQU 1                                             
HWTH_REDIRECT_HTTP            EQU 2                                             
HWTH_REDIRECT_NOHTTPS         EQU 3                                             
*                                                                               
* -----------------------------------------------------------------*            
* HWTH_OPT_COOKIETYPE type and constant values                     *            
* Cookie behavior of the connection                                *            
*   Use this setting to determine how cookies should be handled    *            
* -----------------------------------------------------------------*            
                        DSECT                                                   
HWTH_COOKIETYPE_TYPE     DS F                                                   
*                                                                               
HWTH_COOKIETYPE_NONE          EQU 0                                             
HWTH_COOKIETYPE_SESSION       EQU 1                                             
HWTH_COOKIETYPE_PERSIST       EQU 2                                             
*                                                                               
* -----------------------------------------------------------------*            
* HWTH_OPT_VERBOSE type and constant values                        *            
* Tracing behavior of the toolkit                                  *            
*   Use this setting to set if additional debugging messages       *            
*   should be cut to standard output or to the specified           *            
*   HWTH_OPT_VERBOSE_OUTPUT DD.                                    *            
* -----------------------------------------------------------------*            
                        DSECT                                                   
HWTH_VERBOSE_TYPE        DS F                                                   
*                                                                               
HWTH_VERBOSE_OFF              EQU 0                                             
HWTH_VERBOSE_ON               EQU 1                                             
HWTH_VERBOSE_UNREDACTED       EQU 2                             @14A            
*                                                                               
* ---------------------------------------------------------------- *            
* HWTH_OPT_VERBOSE_OUTPUT type definition                          *            
* Verbose output                                                   *            
*   Use this type to declare the name of a DD (data definition)    *            
*   representing the location for any verbose debugging messages   *            
*   to be directed to.                                             *            
*                                                                  *            
* ---------------------------------------------------------------- *            
                        DSECT                                                   
HWTH_VERBOSE_OUTPUT_TYPE DS CL(8)                                               
*                                                                               
* ---------------------------------------------------------------- *            
* HWTH_OPT_HTTP_VERSION constant values                            *            
* HTTP version                                                     *            
*   Use these constants specify the HTTP version level             *            
* ---------------------------------------------------------------- *            
                        DSECT                                                   
HWTH_HTTPVERSION_TYPE    DS F                                                   
*                                                                               
HWTH_HTTP_VERSION_NONE        EQU 0                                             
HWTH_HTTP_VERSION_1_0         EQU 1                                             
HWTH_HTTP_VERSION_1_1         EQU 2                                             
*                                                                               
* ---------------------------------------------------------------- *            
* HWTH_OPT_PROXYAUTH constant values                         @L2A  *            
* Authenticating proxy options                                     *            
*   Use these constants to specify the proxy authentication type   *            
* ---------------------------------------------------------------- *            
                        DSECT                                    @L2A           
HWTH_PROXYAUTH_TYPE      DS F                                    @L2A           
*                                                                @L2A           
HWTH_PROXYAUTH_NONE           EQU 0                              @L2A           
HWTH_PROXYAUTH_BASIC          EQU 1                              @L2A           
*                                                                               
* ---------------------------------------------------------------- *            
* HWTH_OPT_REQUESTMETHOD constant values                           *            
* HTTP Request Operations                                          *            
* ...are the CRUD methods:  Create, Read, Update, and Delete.      *            
*   They correspond to HTTP commands POST, GET, PUT, and DELETE.   *            
*   Use these constants to choose the desired HTTP method.         *            
* ---------------------------------------------------------------- *            
                        DSECT                                                   
HWTH_REQUESTMETHOD_TYPE  DS F                                                   
*                                                                               
HWTH_HTTP_REQUEST_POST        EQU 1                                             
HWTH_HTTP_REQUEST_GET         EQU 2                                             
HWTH_HTTP_REQUEST_PUT         EQU 3                                             
HWTH_HTTP_REQUEST_DELETE      EQU 4                                             
HWTH_HTTP_REQUEST_HEAD        EQU 5                               @03A          
HWTH_HTTP_REQUEST_PATCH       EQU 6                               @16A          
HWTH_HTTP_REQUEST_OPTIONS     EQU 7                               @16A          
*                                                                               
* ---------------------------------------------------------------- *            
* HWTH_OPT_HTTPAUTH constant values                                *            
* HTTP Authorization level                                         *            
*   Use these constants to specify the HTTP authorization level    *            
* ---------------------------------------------------------------- *            
                        DSECT                                                   
HWTH_HTTPAUTH_TYPE       DS F                                                   
*                                                                               
HWTH_HTTPAUTH_NONE            EQU 0                                             
HWTH_HTTPAUTH_BASIC           EQU 1                                             
*                                                                               
* ---------------------------------------------------------------- *            
* HWTH_OPT_TRANSLATE_REQBODY type and constant values              *            
* HTTP request body translation behavior                           *            
*   Use these constants to specify if the toolkit is to attempt    *            
*   translation of the request body, if present                    *            
* ---------------------------------------------------------------- *            
                        DSECT                                                   
HWTH_XLATE_REQBODY_TYPE  DS F                                                   
*                                                                               
HWTH_XLATE_REQBODY_NONE       EQU 0          No translation                     
HWTH_XLATE_REQBODY_E2A        EQU 1          EBCDIC to ASCII                    
*                                                                               
* ---------------------------------------------------------------- *            
* HWTH_OPT_TRANSLATE_RESPBODY type and constant values             *            
* HTTP response body translation behavior                          *            
*   Use these constants to specify if the toolkit is to attempt    *            
*   translation of the incoming response body, if present          *            
* ---------------------------------------------------------------- *            
                        DSECT                                                   
HWTH_XLATE_RESPBODY_TYPE DS F                                                   
*                                                                               
HWTH_XLATE_RESPBODY_NONE      EQU 0          No translation                     
HWTH_XLATE_RESPBODY_A2E       EQU 1          ASCII to EBCDIC                    
*                                                                               
* ================================================================ *            
* HWTSLST Parameter Type Definitions and Constants                 *            
* ================================================================ *            
* ---------------------------------------------------------------- *            
* SLIST                                                            *            
*  address of the linked list to be created or used to append a    *            
*  specified string.                                               *            
* ---------------------------------------------------------------- *            
                        DSECT                                                   
HWTH_SLIST_TYPE          DS A                                                   
* ---------------------------------------------------------------- *            
* function                                                         *            
*  Used to specify which function to perform on the linked list    *            
*  append service.                                                 *            
* ---------------------------------------------------------------- *            
                        DSECT                                                   
HWTH_SLST_FUNCTION_TYPE  DS F                                                   
*                                                                               
HWTH_SLST_NEW             EQU 1    Create a new linked list and        -        
                                   append the first string                      
HWTH_SLST_APPEND          EQU 2    Append string to the linked list             
HWTH_SLST_FREE            EQU 3    Clean up/Free the linked list                
*                                                                               
* ================================================================ *            
* HWTHTERM Parameter Type Definitions and Constants                *            
* ================================================================ *            
*------------------------------------------------------------------*            
* forceOption                                                      *            
*   Used to determine if the terminate service should force        *            
*   the workarea memory created by HWTHINIT to be freed, even      *            
*   if the handle appears to be in use.                            *            
*------------------------------------------------------------------*            
HWTH_FORCEOPTION_TYPE    DS F                                                   
*                                                                               
HWTH_NOFORCE              EQU 0                                                 
HWTH_FORCE                EQU 1                                                 
*                                                                               
* ================================================================*             
* HTTP Enabler callback routine definitions and constants         *             
* ================================================================*             
* ----------------------------------------------------------------*             
* HWTH_STATUS_LINE_TYPE definition                                *             
* HTTP Response Information                                       *             
*   Use this type to declare the structure containing the HTTP    *             
*   status information returned from the server on a response for *             
*   a given request.                                              *             
* ----------------------------------------------------------------*             
HWTH_STATUS_LINE_TYPE          DSECT                                            
HWTH_STATUSCODE                DS F  statusCode                                 
HWTH_VERSIONPTR                DS A  Address of version                         
HWTH_VERSIONLEN                DS F  Length of version                          
HWTH_REASONPTR                 DS A  Address of reason                          
HWTH_REASONLEN                 DS F  Length of reason                           
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_RESP_EXIT_FLAGS type definition                            *             
* HTTP Response Header Exit Flags                                 *             
*   Use this type to declare the user exit flag variable which    *             
*   may include status on processing of the HTTP response.        *             
* ----------------------------------------------------------------*             
                               DSECT                                            
HWTH_RESP_EXIT_FLAGS_TYPE      DS F                                             
                                                                                
HWTH_EXITFLAG_COOKIESTORE_FULL EQU  1  ('00000001'X);                           
HWTH_EXITFLAG_COOKIE_INVALID   EQU  2  ('00000002'X);             @06A          
HWTH_EXITFLAG_CHUNKED_TRAILER  EQU 16  ('00000010'X);             @06A          
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_RESP_EXIT_RC type definition                               *             
* HTTP Response Header Exit Return Code                           *             
*   Use this type to declare the return code value returned from  *             
*   the HTTP response header callback routine to the toolkit      *             
* ----------------------------------------------------------------*             
                               DSECT                                            
HWTH_RESP_EXIT_RC_TYPE         DS F                                             
                                                                                
HWTH_RESP_EXIT_RC_OK           EQU  0                                           
HWTH_RESP_EXIT_RC_ABORT        EQU  1                                           
*                                                                               
* ----------------------------------------------------------------*             
* HTTP Response Header Exit                                       *             
*   Use this type to declare a callback (exit) routine to process *             
*   the HTTP response headers that are returned by the remote HTTP*             
*   server.                                                       *             
* ----------------------------------------------------------------*             
HWTH_RHDREXITPARMLIST          DSECT                                            
HWTH_RHDREXITHHTTPSTATUSPTR    DS A  Address of Status Line struct     -        
                                     (mapped by HWTH_STATUS_LINE_TYPE)          
HWTH_RHDREXITEXITFLAGSPTR      DS A  Address of exitFlags                       
HWTH_RHDREXITHEADERNAMEPTRPTR  DS A  Address of headerNamePtr                   
HWTH_RHDREXITHEADERNAMELENPTR  DS A  Address of headerNameLen                   
HWTH_RHDREXITHEADERVALUEPTRPTR DS A  Address of headerValuePtr                  
HWTH_RHDREXITHEADERVALUELENPTR DS A  Address of headerValueLen                  
HWTH_RHDREXITUSERDATAPTRPTR    DS A  Address of headerUserDataPtr               
HWTH_RHDREXITUSERDATALENPTR    DS A  Address of headerUserDataLen               
*                                                                               
* ----------------------------------------------------------------*             
* HTTP Response Body Exit                                         *             
*   Use this type to declare a callback (exit) routine to process *             
*   the HTTP response body that is returned by the remote HTTP    *             
*   server.                                                       *             
* ----------------------------------------------------------------*             
HWTH_RBDYEXITPARMLIST          DSECT                                            
HWTH_RBDYEXITHHTTPSTATUSPTR    DS A  Address of Status Line struct     -        
                                     (mapped by HWTH_STATUS_LINE_TYPE)          
HWTH_RBDYEXITEXITFLAGSPTR      DS A  Address of exitFlags          @02A         
HWTH_RBDYEXITRESPBODYPTRPTR    DS A  Address of respBodyPtr                     
HWTH_RBDYEXITRESPBODYLENPTR    DS A  Address of respBodyLen                     
HWTH_RBDYEXITUSERDATAPTRPTR    DS A  Address of bodyUserDataPtr                 
HWTH_RBDYEXITUSERDATALENPTR    DS A  Address of bodyerUserDataLen               
*                                                                               
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_STREAM_PROGRESS_TYPE type definition                       *             
*                                                                 *             
*  HTTP Streaming Send or Receive Progress Information:           *             
*    The toolkit provides one of these to a streaming send or     *             
*    receive exit so that the latter can understand and monitor   *             
*    the current progress of the (request body) send or (response *             
*    body) receive.                                               *             
*    The request uri fields identify the request to the streaming *             
*    exit.  The streaming exit may use the userData field for any *             
*    purpose.  The response status line field is only meaningful  *             
*    for receive, and locates an HWTH_STATUS_LINE_TYPE.       @L1A*             
* ----------------------------------------------------------------*             
HWTH_STREAM_PROGRESS_TYPE      DSECT                                            
HWTH_REQUEST_URI_PTR           DS A                                             
HWTH_REQUEST_URI_LENGTH        DS F                                             
HWTH_NUM_CHUNKS                DS D                                             
HWTH_TOTAL_BYTES               DS D                                             
HWTH_USER_DATA_PTR             DS A                                             
HWTH_RESPONSE_STATUS_LINE_PTR  DS A                                             
*                                                                               
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_STREAM_DATADESC_TYPE type definition                       *             
*                                                                 *             
*  HTTP Streaming Send or Receive Data Area Description:          *             
*   For streaming send, use an array of these to describe an      *             
*   ordered list of contiguous data areas which comprise the next *             
*   payload of request body data to be sent to the remote HTTP    *             
*   server.                                                       *             
*   For streaming receive, use an array of these to describe an   *             
*   ordered list of contiguous data areas into which the next     *             
*   payload of response body data received from the remote HTTP   *             
*   server is to be buffered (the supply list).  The array of     *             
*   these returned by toolkit (the return list) describes those   *             
*   portions of the buffered data which are actual response body  *             
*   content (free of transfer-encoding related metadata).     @L1A*             
* ----------------------------------------------------------------*             
HWTH_STREAM_DATADESC_TYPE      DSECT                                            
HWTH_DATA_PTR                  DS A     Address of described area               
HWTH_DATA_LENGTH               DS F     Size of described area                  
*                                                                               
*                                                                               
* ----------------------------------------------------------------*             
* HTTP Streaming Send Exit                                        *             
*   Use this type to declare a callback (exit) routine to send    *             
*   a large HTTP request body to the remote HTTP server.          *             
*                                                                 *             
*  The PROGDESC_PTR parameter addresses a data area supplied by   *             
*  the toolkit (mapped by HWTH_STREAM_PROGRESS_TYPE) which the    *             
*  streaming send exit may consult to learn send progress.        *             
*                                                                 *             
*  The STATE_PTR parameter addresses a HWTH_STREAM_SEND_STATE     *             
*  type variable which is used by both toolkit and send exit to   *             
*  control the streaming send.                                    *             
*                                                                 *             
*  The Send List is an array of of HWTH_STREAM_DATADESC_TYPE      *             
*  whose elements describe data areas which, taken together in    *             
*  order, define the exit's next payload of data which is to be   *             
*  sent by the toolkit.  That array may vary with each callback,  *             
*  and the SENDLIST_PTR and LISTSIZE_PTR parameters allow the     *             
*  exit to describe their Send List on any given callback.        *             
*                                                             @L1A*             
* ----------------------------------------------------------------*             
HWTH_SENDEXIT_PARMLIST         DSECT                                            
HWTH_SENDEXIT_PROGDESC_PTR     DS A  Address of Progress Descriptor             
HWTH_SENDEXIT_STATE_PTR        DS A  Address of send state                      
HWTH_SENDEXIT_SENDLIST_PTR     DS A  Address of ptr to send list                
HWTH_SENDEXIT_LISTSIZE_PTR     DS A  Address of send list size                  
*                                                                               
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_STREAM_SEND_STATE type definition                          *             
*                                                                 *             
* The SEND_CONTINUE constant is the initial state setting and is  *             
* used by the streaming send exit to indicate to the toolkit that *             
* the entire request body has not yet been supplied.              *             
*                                                                 *             
* The SEND_EOD (end of data) constant is used by the streaming    *             
* send exit to indicate to the toolkit that the request body has  *             
* now been supplied in its entirety.  The exit may set this state *             
* when providing the final installment of request body data, or   *             
* may set it independently on the subsequent callback.            *             
*                                                                 *             
* The SEND_ABORT constant is used by the streaming send exit to   *             
* indicate to the toolkit that the balance of request body send   *             
* processing should not be performed.                             *             
*                                                                 *             
* The SEND_COMPLETE constant is used by the toolkit to convey to  *             
* the streaming send exit that the supplied request body has been *             
* sent in its entirety.                                           *             
*                                                                 *             
* The SEND_ERROR constant is used by the toolkit to convey to the *             
* streaming send exit that the supplied request body could not be *             
* sent successfully.                                          @L1A*             
* ----------------------------------------------------------------*             
                               DSECT                                            
HWTH_STREAM_SEND_STATE         DS F                                             
HWTH_STREAM_SEND_CONTINUE      EQU  0                                           
HWTH_STREAM_SEND_EOD           EQU  1                                           
HWTH_STREAM_SEND_ABORT         EQU  2                                           
HWTH_STREAM_SEND_COMPLETE      EQU  3                                           
HWTH_STREAM_SEND_ERROR         EQU  4                                           
*                                                                               
*                                                                               
* ----------------------------------------------------------------*             
* HTTP Streaming Receive Exit                                     *             
*   Use this type to declare a callback (exit) routine to receive *             
*   a large HTTP response body from the remote HTTP server.       *             
*                                                                 *             
*  The PROGDESC_PTR and STATE_PTR parameters are as already       *             
*  described above for the streaming send exit.                   *             
*                                                                 *             
*  The Supply List is an array of of HWTH_STREAM_DATADESC_TYPE    *             
*  whose elements describe empty, writable data areas which will  *             
*  be used (in order) to hold the next payload of data which is   *             
*  received by the toolkit (from the request endpoint).  This     *             
*  array may vary with each callback, and the SUPLIST_PTR and     *             
*  SUPLISTSIZE_PTR parameters allow the receive exit to describe  *             
*  their Supply List on any given callback.                       *             
*                                                                 *             
*  The Return List is an array of of HWTH_STREAM_DATADESC_TYPE    *             
*  whose elements describe those                                                
*                                                             @L1A*             
* ----------------------------------------------------------------*             
HWTH_RECVEXIT_PARMLIST         DSECT                                            
HWTH_RECVEXIT_PROGDESC_PTR     DS A  Address of Progress Descriptor             
HWTH_RECVEXIT_STATE_PTR        DS A  Address of receive state                   
HWTH_RECVEXIT_SUPLIST_PTR      DS A  Address of ptr to supply list              
HWTH_RECVEXIT_SUPLISTDIM_PTR   DS A  Address of supply list dim   @16A          
HWTH_RECVEXIT_RETLIST_PTR      DS A  Address of ptr to return list              
HWTH_RECVEXIT_RETLISTDIM_PTR   DS A  Address of return list dim   @16A          
*                                                                               
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_STREAM_RECEIVE_STATE type definition                       *             
*                                                                 *             
* The RECEIVE_CONTINUE constant is the initial state setting and  *             
* is used by the toolkit to indicate to the streaming receive     *             
* exit that the entire response body has not yet been supplied.   *             
*                                                                 *             
* The RECEIVE_EOD (end of data) constant is used by the toolkit   *             
* to indicate that the response body has been supplied in its     *             
* entirety.                                                       *             
*                                                                 *             
* The RECEIVE_ABORT constant is used by the streaming receive     *             
* exit to indicate to the toolkit that the balance of receive     *             
* processing should not be performed.                             *             
*                                                                 *             
* The RECEIVE_COMPLETE constant is used by the streaming receive  *             
* exit to indicate to the toolkit that the complete response body *             
* has been accepted.                                              *             
*                                                                 *             
* The RECEIVE_ERROR constant is used by the toolkit to convey to  *             
* the streaming receive exit that the response body could not be  *             
* received successfully.                                      @L1A*             
* ----------------------------------------------------------------*             
                               DSECT                                            
HWTH_STREAM_RECEIVE_STATE      DS F                                             
HWTH_STREAM_RECEIVE_CONTINUE   EQU  0                                           
HWTH_STREAM_RECEIVE_EOD        EQU  1                                           
HWTH_STREAM_RECEIVE_ABORT      EQU  2                                           
HWTH_STREAM_RECEIVE_COMPLETE   EQU  3                                           
HWTH_STREAM_RECEIVE_ERROR      EQU  4                                           
*                                                                               
*                                                                               
* ----------------------------------------------------------------*             
* HWTH_OPT_CERT_CHECK type and constant values                    *             
* Validation types                                                *             
*   Use these constants to control certificate validation     @1MA*             
* ----------------------------------------------------------------*             
                               DSECT                                            
HWTH_CERT_CHECK_TYPE           DS F                            @1MA             
*                                                                               
HWTH_CERT_CHECK_SAN_ONLY       EQU  1                          @1MA             
HWTH_CERT_CHECK_SAN_CN_DNS     EQU  3                          @1MA             
HWTH_CERT_CHECK_WARN           EQU  8                          @1MA             
*                                                                               
* ----------------------------------------------------------------*             
* HTTP Enabler service call parameter lists                       *             
* ----------------------------------------------------------------*             
* HWTHCONN - Connect to HTTP server                                             
HWTHCONNPARMLIST               DSECT                                            
HWTHCONNRETURNCODEPTR          DS A  Address of Returncode                      
HWTHCONNCONNECTIONHANDLEPTR    DS A  Address of ConnectionHandle                
HWTHCONNDIAGAREAPTR            DS A  Address of Diag Area                       
*                                                                               
* HWTHDISC - Disconnect from HTTP Server                                        
HWTHDISCPARMLIST               DSECT                                            
HWTHDISCRETURNCODEPTR          DS A  Address of Returncode                      
HWTHDISCCONNECTIONHANDLEPTR    DS A  Address of ConnectionHandle                
HWTHDISCDIAGAREAPTR            DS A  Address of Diag Area                       
*                                                                               
* HWTHINIT - Initialize HTTP connection / request                               
HWTHINITPARMLIST               DSECT                                            
HWTHINITRETURNCODEPTR          DS A  Address of Returncode                      
HWTHINITHANDLETYPEPTR          DS A  Address of HandleType                      
HWTHINITCONNORREQHANDLEPTR     DS A  Address of ConOrReqHandle                  
HWTHINITDIAGAREAPTR            DS A  Address of Diag Area                       
*                                                                               
* HWTHRQST - Send Request to HTTP server                                        
HWTHRQSTPARMLIST               DSECT                                            
HWTHRQSTRETURNCODEPTR          DS A  Address of Returncode                      
HWTHRQSTCONNECTIONHANDLEPTR    DS A  Address of ConnectionHandle                
HWTHRQSTREQUESTHANDLEPTR       DS A  Address of RequestHandle                   
HWTHRQSTDIAGAREAPTR            DS A  Address of Diag Area                       
*                                                                               
* HWTHRSET - Reset HTTP connection / request                                    
HWTHRSETPARMLIST               DSECT                                            
HWTHRSETRETURNCODEPTR          DS A  Address of Returncode                      
HWTHRSETCONNORREQHANDLEPTR     DS A  Address of ConOrReqHandle                  
HWTHRSETDIAGAREAPTR            DS A  Address of Diag Area                       
*                                                                               
* HWTHSET - Set HTTP connection / request options                               
HWTHSETPARMLIST                DSECT                                            
HWTHSETRETURNCODEPTR           DS A  Address of Returncode                      
HWTHSETCONNORREQHANDLEPTR      DS A  Address of ConOrReqHandle                  
HWTHSETOPTIONPTR               DS A  Address of Option                          
HWTHSETOPTIONVALUEADDRPTR      DS A  Address of OptionValueAddr                 
HWTHSETOPTIONVALUELENPTR       DS A  Address of OptionValueLen                  
HWTHSETDIAGAREAPTR             DS A  Address of Diag Area                       
*                                                                               
* HWTHSLST - Linked List Append Service                                         
HWTHSLSTPARMLIST                DSECT                                           
HWTHSLSTRETURNCODEPTR           DS A  Address of Returncode                     
HWTHSLSTREQUESTHANDLEPTR        DS A  Address of RequestHandle                  
HWTHSLSTFUNCTIONPTR             DS A  Address of Function                       
HWTHSLSTSLISTPTR                DS A  Address of SList                          
HWTHSLSTSTRINGADDRPTR           DS A  Address of StringAddr                     
HWTHSLSTSTRINGLENPTR            DS A  Address of StringLen                      
HWTHSLSTDIAGAREAPTR             DS A  Address of Diag Area                      
*                                                                               
* HWTHTERM - Terminate HTTP connection / request                                
HWTHTERMPARMLIST               DSECT                                            
HWTHTERMRETURNCODEPTR          DS A  Address of Returncode                      
HWTHTERMCONNORREQHANDLEPTR     DS A  Address of ConOrReqHandle                  
HWTHTERMFORCEOPTIONPTR         DS A  Address of ForceOption                     
HWTHTERMDIAGAREAPTR            DS A  Address of Diag Area                       
*                                                                               
      MEND                                                                      
