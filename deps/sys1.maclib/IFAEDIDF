*                                                                       00001000
* %DCL IFAEDIDF_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IFAEDIDF_INCLUDED;                                        00003000
* %IF IFAEDIDF_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 18051. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IFAEDIDF &DSECT=YES,&LIST=YES,&TITLE=YES,&EDOI=YES,           *00009000
               &EDAAHDR=COND,&EDAAE=COND                                00010000
         GBLC  &IFAEDIDF_INCLUDED                                       00011000
         GBLC  &ZCBPRINT                                                00012000
&IFAEDIDF_INCLUDED SETC 'YES'                                           00013000
         AIF   ('&LIST' EQ 'NONE').P0                                   00014000
         AIF   ('&TITLE' EQ 'NO').P5                                    00015000
 TITLE   'IFAEDIDF  - IFAEDxxx IDF (return codes and output areas)   '  00016000
.P5      ANOP                                                           00017000
**/ IFAEDIDF_1:;                                                        00018000
*/* START OF SPECIFICATIONS ******************************************* 00019000
*                                                                       00020000
*  **PROPRIETARY_STATEMENT********************************************  00021000
***01* PROPRIETARY STATEMENT=                                        *  00022000
*                                                                    *  00023000
*                                                                    *  00024000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  00025000
*   5650-ZOS     COPYRIGHT IBM CORP. 1996,2017                       *  00026000
*                                                                    *  00027000
*   STATUS= HBB77A0                                                  *  00028000
*                                                                    *  00029000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  00030000
*                                                                       00031000
*01* DESCRIPTIVE NAME:  IFAEDxxx IDF (return codes and output areas)    00032000
*02*  ACRONYM:  EDOI                                                    00033000
*                                                                       00034000
*01* MACRO NAME:  IFAEDIDF                                              00035000
*                                                                       00036000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00037000
*01* END OF EXTERNAL CLASSIFICATION:                                    00038000
*                                                                       00039000
*01* DSECT NAME:                                                        00040000
*     EDOI                                                              00041000
*     EDAAHDR                                                           00042000
*     EDAAE                                                             00043000
*                                                                       00044000
*01* COMPONENT:  SMF (SC100)                                            00045000
*                                                                       00046000
*01* EYE-CATCHER:  NONE                                                 00047000
*                                                                       00048000
*01* STORAGE ATTRIBUTES:                                                00049000
*02*  SUBPOOL:  Caller-supplied                                         00050000
*02*  KEY:  Caller-supplied                                             00051000
*02*  RESIDENCY:  Caller-supplied                                       00052000
*                                                                       00053000
*01* SIZE:  Variable                                                    00054000
*                EDOI    -- X'0010' bytes                               00055000
*                EDAAE   -- X'0048' bytes                               00056000
*                EDAAHDR -- X'0020' bytes                               00057000
*                                                                       00058000
*01* CONTROL BLOCK CHANGES:                                             00059000
*02*  IFAEDIDF                                                          00060000
*02*   5.3                                                              00061000
*03*    New                                                             00062000
*03*    Migration Considerations: NONE                                  00063000
*01* END CONTROL BLOCK CHANGES                                          00064000
*                                                                       00065000
*01* CREATED BY:                                                        00066000
*     Caller and passed as parameter on ANSAREA parameter               00067000
*      on call to IFAEDLIS                                              00068000
*     Caller and passed as parameter on OUTPUTINFO parameter            00069000
*      on call to IFAEDSTA                                              00070000
*                                                                       00071000
*01* POINTED TO BY:                                                     00072000
*     IFAEDLIS parameter list                                           00073000
*     IFAEDSTA parameter list                                           00074000
*                                                                       00075000
*01* SERIALIZATION:                                                     00076000
*     None required                                                     00077000
*                                                                       00078000
*01* FUNCTION:                                                          00079000
*02* Provides return code equates for the IFAEDxxx services.            00080000
*02* Maps the ansarea data returned by the IFAEDLIS service.            00081000
*02* Maps the outputinfo data returned by the IFAEDSTA service.         00082000
*                                                                       00083000
*02* For IFAEDSTA, the EDOI DSECT maps the outputinfo area.             00084000
*                                                                       00085000
*02* For IFAEDLIS,                                                      00086000
*    the returned information consists of a header (EDAAHDR)            00087000
*    which indicates how many Registered entries                        00088000
*    (EdaahNumR, first address in EdaahFirstRAddr) and State entries    00089000
*    (EdaahNumS, first address in EdaahFirstSAddr) follow.              00090000
*    There is also 0 or 1 Status entry (address in EdaahStatusAddr, or  00091000
*    0) to indicate the policy entry that would be used to determine    00092000
*    the state of the given product.                                    00093000
*                                                                       00094000
*02* Registered, state, and status entries are all mapped by Edaae.     00095000
*    Certain fields apply only to one or the other, and are             00096000
*    commented appropriately.                                           00097000
*                                                                       00098000
*01* METHOD OF ACCESS:                                                  00099000
*02*  ASM:                                                              00100000
*      IFAEDIDF                                                         00101000
*           DSECT=YES!NO  -- Request DSECT definition                   00102000
*           EDOI=YES!NO!COND -- Request exit record mapping             00103000
*                            USING on EDOI                              00104000
*           EDAAHDR=YES!NO!COND -- Request Header record mapping        00105000
*                            USING on EdaahDR                           00106000
*           EDAAE=YES!NO!COND -- Request exit record mapping            00107000
*                            USING on Edaae                             00108000
*     Default: DSECT=YES,EDOI=YES,EDAAHDR=COND,EDAAE=COND               00109000
*     Notes: name=YES  => expand                                        00110000
*            name=NO   => do not expand                                 00111000
*            name=COND => expand only if DSECT=YES                      00112000
*                                                                       00113000
*02*  PL/X:                                                             00114000
*      %INCLUDE SYSLIB(IFAEDIDF)                                        00115000
*                                                                       00116000
*01* DELETED BY:  Caller                                                00117000
*                                                                       00118000
*01* FREQUENCY:  Created for response to IFAEDLIS service               00119000
*                Created for response to IFAEDSTA service               00120000
*                                                                       00121000
*01* DEPENDENCIES:  None                                                00122000
*                                                                       00123000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00124000
*                                                                       00125000
*01* CHANGE ACTIVITY:                                                   00126000
*   $L0=PRDEDCBG ,HBB6601,950601,PD00XB: Product Enable/Disable         00127000
*   $L1=PRDEDCBG ,HBB6601,950601,PD00XB: Product Enable/Disable         00128000
*   $01=SBG      ,HBB77A0,171121,PD00FY: Solution Billing Groups        00129000
*                                        (OA53033)                      00130000
*                                                                       00131000
* END OF SPECIFICATIONS *********************************************/  00132000
*% /*                                                                   00133000
.P0      ANOP                                                           00134000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00135000
         AIF   ('&LIST' EQ 'YES').P2                                    00136000
.P1      ANOP                                                           00137000
         PUSH  PRINT                                                    00138000
         PRINT OFF                                                      00139000
.P2      ANOP                                                           00140000
         AIF   ('&EDOI' EQ 'NO').L0002                                  00141000
         AIF   ('&DSECT' EQ 'YES').L0003                                00142000
         AIF   ('&EDOI' NE 'YES').L0002                                 00143000
EDOI     DS    0F                                                       00144000
         AGO   .L0004                                                   00145000
.L0003   ANOP                                                           00146000
EDOI     DSECT                                                          00147000
.L0004   ANOP                                                           00148000
EDOIFLAGS DS   B                                                        00149000
*  Bit definitions:                                                     00150000
EDOIREGISTERED EQU X'80' The product is registered                      00151000
EDOISTATUSNOTDEFINED EQU X'40' The product is not known to be enabled  *00152000
                         or disabled.                                   00153000
EDOISTATUSENABLED EQU X'20' The product is enabled.                     00154000
EDOINOTALLFEATURESRETURNED EQU X'10' The featureslen area was too      *00155000
                         small to hold the features provided at        *00156000
                         registration time. Field                      *00157000
                         EdoiNeededFeaturesLen contains the size       *00158000
                         provided at registration time.                 00159000
         DS    CL3                                                      00160000
EDOINEEDEDFEATURESLEN DS F The featureslen size provided at            *00161000
                         registration time.                             00162000
EDOIPRODVERSRELMOD DS CL6                                               00163000
         ORG   EDOIPRODVERSRELMOD                                       00164000
EDOIPRODVERS DS CL2      The version information provided at           *00165000
                         registration time.                             00166000
EDOIPRODREL DS CL2       The release information provided at           *00167000
                         registration time.                             00168000
EDOIPRODMOD DS CL2       The mod level information provided at         *00169000
                         registration time.                             00170000
         DS    CL2                                                      00171000
*                                                                       00172000
* ********************************************************************  00173000
* *      Constants for Parameters and Return Codes                   *  00174000
* ********************************************************************  00175000
*   Product Enable/Disable Register Constants                           00176000
*                                                                       00177000
*                                                                       00178000
IFAEDREG_TYPE_STANDARD EQU 0                                            00179000
IFAEDREG_TYPE_REQUIRED EQU 2 The register request should complete even *00180000
                         if the policy indicates that the product is   *00181000
                         disabled. This would be used when registering *00182000
                         solely so your status can be queried.          00183000
IFAEDREG_TYPE_NOREPORT EQU 4 The register request should not be        *00184000
                         reported upon by display command and SMF      *00185000
                         report. This might be used when registering   *00186000
                         solely so the status can be queried.           00187000
IFAEDREG_TYPE_LICENSEDUNDERPROD EQU 8 The registering feature is not   *00188000
                         separately licensed. Rather, the license is   *00189000
                         associated with the product specified by the  *00190000
                         prodname parameter.                            00191000
IFAEDREG_TYPE_DISABLEDMESSAGE EQU 16 If the product is found to be     *00192000
                         disabled, have the system issue the           *00193000
                         appropriate message, rather than the caller   *00194000
                         having to do it.                               00195000
IFAEDREG_TYPE_NOTFOUNDDISABLED EQU 32 If no enable/disable policy      *00196000
                         entry matches this product, treat the product *00197000
                         as disabled, rather than treating it as       *00198000
                         enabled.                                       00199000
*                                                                       00200000
*   Product Enable/Disable Register Return Codes                        00201000
*   Note: 0C4 abend if bad address provided in parmlist or user data    00202000
*                                                                       00203000
*                                                                       00204000
IFAEDREG_SUCCESS EQU 0   Register service completed successfully        00205000
IFAEDREG_DISABLED EQU 4  Register service found that the product is    *00206000
                         disabled and therefore the register service   *00207000
                         was not accepted.                              00208000
IFAEDREG_NOTAVAILABLE EQU 8 Register service is not available on this  *00209000
                         system.                                        00210000
IFAEDREG_LIMITEXCEEDED EQU 12 too many unauthorized registrations for  *00211000
                         this address space                             00212000
IFAEDREG_NOTTASKMODE EQU 16 Register service was not called in task    *00213000
                         mode.                                          00214000
IFAEDREG_XM EQU 20       Register service was not called with P=H=S     00215000
IFAEDREG_BADFEATURESLEN EQU 24 Features length exceeds 1024.            00216000
IFAEDREG_NOSTORAGE EQU 28 The system could not obtain needed storage.   00217000
IFAEDREG_BADTYPE EQU 32  The type parameter did not specify a word     *00218000
                         with a value formed from adding any           *00219000
                         combination of Ifaedreg_Type_Standard,        *00220000
                         Ifaedreg_Type_Required,                       *00221000
                         Ifaedreg_Type_NoReport, Ifaedreg              *00222000
                         _Type_LicensedUnderProd,                      *00223000
                         Ifaedreg_Type_DisabledMessage, and            *00224000
                         Ifaedreg_Type_NotFoundDisabled                 00225000
IFAEDREG_LOCKED EQU 36   Register service was called holding a system  *00226000
                         lock                                           00227000
IFAEDREG_FRR EQU 40      Register service was called having an FRR      00228000
*                                                                       00229000
*   Product Enable/Disable Deregister Return Codes                      00230000
*   Note: 0C4 abend if bad address provided in parmlist or user data    00231000
*                                                                       00232000
*                                                                       00233000
IFAEDDRG_SUCCESS EQU 0   Deregister service completed successfully      00234000
IFAEDDRG_NOTAVAILABLE EQU 8 Deregister service is not available on     *00235000
                         this system.                                   00236000
IFAEDDRG_NOTREGISTERED EQU 12 The product that was to be deregistered  *00237000
                         had not been registered                        00238000
IFAEDDRG_NOTTASKMODE EQU 16 deregister service was not called in task  *00239000
                         mode.                                          00240000
IFAEDDRG_XM EQU 20       Deregister service was not called with P=H=S   00241000
IFAEDDRG_NOTAUTH EQU 24  If not supervisor state, system key, or       *00242000
                         system PKM, the entry to be deregistered must *00243000
                         be registered from the same address space and *00244000
                         must have been registered by an equally       *00245000
                         non-authorized caller.                         00246000
IFAEDDRG_LOCKED EQU 36   Deregister service was called holding a       *00247000
                         system lock                                    00248000
IFAEDDRG_FRR EQU 40      Deregister service was called having an FRR    00249000
*                                                                       00250000
*   Product Enable/Disable Status Return Codes                          00251000
*   Note: 0C4 abend if bad address provided in parmlist or user data    00252000
*                                                                       00253000
*                                                                       00254000
IFAEDSTA_SUCCESS EQU 0   Status service completed successfully          00255000
IFAEDSTA_NOTDEFINED EQU 4 The status service found no entry            *00256000
                         corresponding to the input product.            00257000
IFAEDSTA_NOTAVAILABLE EQU 8 Status service is not available on this    *00258000
                         system.                                        00259000
IFAEDSTA_NOTTASKMODE EQU 16 Status service was not called in task      *00260000
                         mode.                                          00261000
IFAEDSTA_XM EQU 20       Status service was not called with P=H=S       00262000
IFAEDSTA_LOCKED EQU 36   Status service was called holding a system    *00263000
                         lock                                           00264000
IFAEDSTA_FRR EQU 40      Status service was called having an FRR        00265000
*                                                                       00266000
*   Product Enable/Disable List Constants                               00267000
*                                                                       00268000
*                                                                       00269000
IFAEDLIS_TYPE_REGISTERED EQU 1 Return the registration entry/entries   *00270000
                         corresponding to the input product.            00271000
IFAEDLIS_TYPE_STATE EQU 2 Return the state entry/entries corresponding *00272000
                         to the input product.                          00273000
IFAEDLIS_TYPE_STATUS EQU 4 Return the status entry corresponding to    *00274000
                         the input product.                             00275000
IFAEDLIS_TYPE_NOREPORT EQU 8 When returning registration entries,      *00276000
                         include those for which the IFAEDREG call     *00277000
                         specified Ifaedreg_Type_NoReport. If not      *00278000
                         requested, those entries are not returned.     00279000
*                                                                       00280000
*    Avoid using a constant for 16 with Ifaedlis_Type. It is reserved   00281000
* for Internal usage                                                    00282000
*   Product Enable/Disable List Return Codes                            00283000
*   Note: 0C4 abend if bad address provided in parmlist or user data    00284000
*                                                                       00285000
*                                                                       00286000
IFAEDLIS_SUCCESS EQU 0   List service completed successfully            00287000
IFAEDLIS_NOTALLDATARETURNED EQU 4 List service had more data to return *00288000
                         that would fit in the provided answer area.   *00289000
                         All the complete entries that would fit were  *00290000
                         returned.                                      00291000
IFAEDLIS_NOTAVAILABLE EQU 8 List service is not available on this      *00292000
                         system.                                        00293000
IFAEDLIS_ANSAREATOOSMALL EQU 12 The answer area, indicated by the      *00294000
                         answer len parameter is not large enough to   *00295000
                         hold the answer area header (DSECT EdaahDR).   00296000
IFAEDLIS_NOTTASKMODE EQU 16 List service was not called in task mode.   00297000
IFAEDLIS_XM EQU 20       List service was not called with P=H=S         00298000
IFAEDLIS_BADTYPE EQU 32  The type parameter did not specify a word     *00299000
                         with a value formed from adding any           *00300000
                         combination of IFAEDLIS_TYPE_REGISTERED,      *00301000
                         IFAEDLIS_TYPE_STATE, IFAEDLIS_TYPE_STATUS,    *00302000
                         and IFAEDLIS_TYPE_NOREPORT.                    00303000
IFAEDLIS_LOCKED EQU 36   List service was called holding a system lock  00304000
IFAEDLIS_FRR EQU 40      List service was called having an FRR          00305000
EDOI_LEN EQU   *-EDOI                                                   00306000
.L0002   ANOP                                                           00307000
         AIF   ('&EDAAHDR' EQ 'NO').L0005                               00308000
         AIF   ('&DSECT' EQ 'YES').L0006                                00309000
         AIF   ('&EDAAHDR' NE 'YES').L0005                              00310000
EDAAHDR  DS    0F        Header section                                 00311000
         AGO   .L0007                                                   00312000
.L0006   ANOP                                                           00313000
EDAAHDR  DSECT           Header section                                 00314000
.L0007   ANOP                                                           00315000
EDAAHNUMR DS   F         Number of Edaae entries which follow          *00316000
                         indicating registered entries. The first one  *00317000
                         is pointed to by EdaahFirstRAddr.              00318000
EDAAHNUMS DS   F         Number of Edaae entries which follow          *00319000
                         indicating state entries. The first one is    *00320000
                         pointed to by EdaahFirstSAddr.                 00321000
EDAAHTLEN DS   F         Total length of answer area needed to contain *00322000
                         all the requested information. This includes  *00323000
                         the area for the records that were returned   *00324000
                         on this call.                                  00325000
EDAAHFIRSTRADDR DS A     Address of first registered entry Edaae        00326000
EDAAHFIRSTSADDR DS A     Address of first state entry Edaae             00327000
EDAAHSTATUSADDR DS A     Address of the entry that represents the      *00328000
                         policy entry that would be used to determine  *00329000
                         if the input product was enabled. 0 if no     *00330000
                         such policy entry exists.                      00331000
         DS    CL8       Unused                                         00332000
EDAAHDR_LEN EQU *-EDAAHDR                                               00333000
.L0005   ANOP                                                           00334000
         AIF   ('&EDAAE' EQ 'NO').L0008                                 00335000
         AIF   ('&DSECT' EQ 'YES').L0009                                00336000
         AIF   ('&EDAAE' NE 'YES').L0008                                00337000
EDAAE    DS    0F        Edaae Record data format                       00338000
         AGO   .L000A                                                   00339000
.L0009   ANOP                                                           00340000
EDAAE    DSECT           Edaae Record data format                       00341000
.L000A   ANOP                                                           00342000
EDAAENEXTADDR DS A       Address of next Edaae. EdaahNumR (for the     *00343000
                         registered queue) or EdaahNumS (for the state *00344000
                         queue) must be used to determine how far      *00345000
                         along this chain to go. Not relevant for      *00346000
                         EdaahStatusAddr.                               00347000
EDAAEINFO DS   CL62                                                     00348000
         ORG   EDAAEINFO                                                00349000
EDAAEPRODOWNER DS CL16   Product owner                                  00350000
EDAAEPRODNAME DS CL16    Product name                                   00351000
EDAAEFEATURENAME DS CL16 Feature name                                   00352000
EDAAEPRODVERS DS CL2     Product version                                00353000
EDAAEPRODREL DS CL2      Product release                                00354000
EDAAEPRODMOD DS CL2      Product mod level                              00355000
EDAAEPRODID DS CL8       Product ID                                     00356000
EDAAEFLAGS DS  B         Flags                                          00357000
*  Bit definitions:                                                     00358000
EDAAESTATUSNOTDEFINED EQU X'80' This will never be on for entries on   *00359000
                         the state queue. If on, indicates that the    *00360000
                         state information does not have an entry that *00361000
                         matches this product.                          00362000
EDAAESTATUSENABLED EQU X'40' If on, indicates that the product is      *00363000
                         considered to be enabled                       00364000
EDAAENOREPORT EQU X'20'  If on, indicates that the product registered  *00365000
                         with Ifaedreg_Type_Noreport. This will never  *00366000
                         on for entries on the state queue.             00367000
EDAAELICENSEDUNDERPROD EQU X'10' If on, indicates that the product     *00368000
                         registered with Ifaedreg                      *00369000
                         _Type_LicensedUnderProd. This will never on   *00370000
                         for entries on the state queue.                00371000
         DS    CL1       Unused                                         00372000
EDAAENUMINSTANCES DS F   Number of concurrent instances of this        *00373000
                         registration                                   00374000
EDAAE_LEN EQU  *-EDAAE                                                  00375000
.L0008   ANOP                                                           00376000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00377000
         AIF   ('&LIST' EQ 'YES').P4                                    00378000
.P3      ANOP                                                           00379000
         POP   PRINT                                                    00380000
.P4      ANOP                                                           00381000
.P_EXIT  ANOP                                                           00382000
         MEND                                                           00383000
**/ IFAEDIDF_2:;                                                        00384000
* %IFAEDIDF_INCLUDED = 'YES';                                           00385000
* %DCL ZCBPRINT CHAR EXT;                                               00386000
* %DEACTIVATE ZCBPRINT;                                                 00387000
* %DCL IFAEDIDF_LIST CHAR EXT;                                          00388000
* %DEACTIVATE IFAEDIDF_LIST;                                            00389000
* %IF IFAEDIDF_LIST ^= 'NO' &                                           00390000
*    ZCBPRINT ^= 'NO' %THEN                                             00391000
*   %GOTO IFAEDIDF_3;                                                   00392000
*   @LIST PUSH NOECHO;                                                  00393000
*   @LIST NOASSEMBLE NOECHO;                                            00394000
*   @LIST OFF C NOECHO;                                                 00395000
* %IFAEDIDF_3:;                                                         00396000
*/* Start of PL/X Source                                             */ 00397000
*DCL 1 EDOI CHAR(16) BDY(WORD) TYPE,                /*           @L1A*/ 00398000
*      3 EdoiFlags BIT(8),                /*                     @L1A*/ 00399000
*        5 EdoiRegistered BIT(1),             /* The product is         00400000
*                                      registered                @L1A*/ 00401000
*        5 EdoiStatusNotDefined BIT(1),          /* The product is not  00402000
*                        known to be enabled or disabled.               00403000
*                                                                @L1A*/ 00404000
*        5 EdoiStatusEnabled BIT(1),             /* The product is      00405000
*                                      enabled.                  @L1A*/ 00406000
*        5 EdoiNotAllFeaturesReturned BIT(1),    /* The featureslen     00407000
*                        area was too small to hold the features        00408000
*                        provided at registration time. Field           00409000
*                        EdoiNeededFeaturesLen contains the size        00410000
*                        provided at registration time.          @L1A*/ 00411000
*      3 * CHAR(3),                       /*                     @L1A*/ 00412000
*      3 EdoiNeededFeaturesLen Fixed,     /* The featureslen size       00413000
*                        provided at registration time.          @L1A*/ 00414000
*      3 EdoiProdVersRelMod,    /*                               @L1A*/ 00415000
*        5 EdoiProdVers Isa(IfaedProdVers), /* The version information  00416000
*                        provided at registration time.          @L1A*/ 00417000
*        5 EdoiProdRel Isa(IfaedProdRel), /* The release information    00418000
*                        provided at registration time.          @L1A*/ 00419000
*        5 EdoiProdMod Isa(IfaedProdMod), /* The mod level information  00420000
*                        provided at registration time.          @L1A*/ 00421000
*      3 * CHAR(2);                       /*                     @L1A*/ 00422000
*                                                                       00423000
*/********************************************************************  00424000
* *      Constants for Parameters and Return Codes                   *  00425000
* ********************************************************************/ 00426000
*                                                                       00427000
*/* Product Enable/Disable Register Constants                        */ 00428000
*                                                                       00429000
*DCL Ifaedreg_Type_Standard        FIXED(31) CONSTANT(0);  /*        */ 00430000
*DCL Ifaedreg_Type_Required        FIXED(31) CONSTANT(2);  /* The       00431000
*                 register request should complete even if the policy   00432000
*                 indicates that the product is disabled. This          00433000
*                 would be used when registering solely so your         00434000
*                 status can be queried.                             */ 00435000
*DCL Ifaedreg_Type_NoReport        FIXED(31) CONSTANT(4);  /* The       00436000
*                 register request should not be reported upon          00437000
*                 by display command and SMF report. This might be      00438000
*                 used when registering solely so the status can        00439000
*                 be queried.                                        */ 00440000
*DCL Ifaedreg_Type_LicensedUnderProd FIXED(31) CONSTANT(8);  /* The     00441000
*                 registering feature is not separately licensed.       00442000
*                 Rather, the license is associated with the            00443000
*                 product specified by the prodname parameter.       */ 00444000
*DCL Ifaedreg_Type_DisabledMessage FIXED(31) CONSTANT(16);  /* If the   00445000
*                 product is found to be disabled, have the system      00446000
*                 issue the appropriate message, rather than the        00447000
*                 caller having to do it.                            */ 00448000
*DCL Ifaedreg_Type_NotFoundDisabled FIXED(31) CONSTANT(32); /* If       00449000
*                 no enable/disable policy entry matches this product,  00450000
*                 treat the product as disabled, rather than            00451000
*                 treating it as enabled.                            */ 00452000
*                                                                       00453000
*/* Product Enable/Disable Register Return Codes                     */ 00454000
*/* Note: 0C4 abend if bad address provided in parmlist or user data */ 00455000
*                                                                       00456000
*DCL Ifaedreg_Success              FIXED(31) CONSTANT(0);  /*           00457000
*                 Register service completed successfully        @L1A*/ 00458000
*                                                                       00459000
*DCL Ifaedreg_Disabled             FIXED(31) CONSTANT(4);  /*           00460000
*                 Register service found that the product is disabled   00461000
*                 and therefore the register service was not            00462000
*                 accepted.                                      @L1A*/ 00463000
*                                                                       00464000
*DCL Ifaedreg_NotAvailable         FIXED(31) CONSTANT(8);  /*           00465000
*                 Register service is not available on this system.     00466000
*                                                                @L1A*/ 00467000
*                                                                       00468000
*DCL Ifaedreg_LimitExceeded        FIXED(31) CONSTANT(12); /* too many  00469000
*                 unauthorized registrations for this address space     00470000
*                                                                @L1A*/ 00471000
*                                                                       00472000
*DCL Ifaedreg_NotTaskMode          FIXED(31) CONSTANT(16); /* Register  00473000
*                 service was not called in task mode.           @L1A*/ 00474000
*                                                                       00475000
*DCL Ifaedreg_Xm                   FIXED(31) CONSTANT(20); /* Register  00476000
*                 service was not called with P=H=S              @L1A*/ 00477000
*                                                                       00478000
*DCL Ifaedreg_BadFeaturesLen       FIXED(31) CONSTANT(24);  /* Features 00479000
*                 length exceeds 1024.                           @L1A*/ 00480000
*DCL Ifaedreg_NoStorage            FIXED(31) CONSTANT(28);  /* The      00481000
*                 system could not obtain needed storage.        @L1A*/ 00482000
*DCL Ifaedreg_BadType              FIXED(31) CONSTANT(32);  /* The      00483000
*                 type parameter did not specify a word with a value    00484000
*                 formed from adding any combination of                 00485000
*                 Ifaedreg_Type_Standard,                               00486000
*                 Ifaedreg_Type_Required,                               00487000
*                 Ifaedreg_Type_NoReport,                               00488000
*                 Ifaedreg _Type_LicensedUnderProd,                     00489000
*                 Ifaedreg_Type_DisabledMessage, and                    00490000
*                 Ifaedreg_Type_NotFoundDisabled                        00491000
*                                                                @L1A*/ 00492000
*DCL Ifaedreg_Locked               FIXED(31) CONSTANT(36);  /* Register 00493000
*                 service was called holding a system lock       @L1A*/ 00494000
*DCL Ifaedreg_FRR                  FIXED(31) CONSTANT(40);  /* Register 00495000
*                 service was called having an FRR               @L1A*/ 00496000
*                                                                       00497000
*/* Product Enable/Disable Deregister Return Codes                   */ 00498000
*/* Note: 0C4 abend if bad address provided in parmlist or user data */ 00499000
*                                                                       00500000
*DCL Ifaeddrg_Success              FIXED(31) CONSTANT(0);  /*           00501000
*                 Deregister service completed successfully      @L1A*/ 00502000
*                                                                       00503000
*DCL Ifaeddrg_NotAvailable         FIXED(31) CONSTANT(8);  /*           00504000
*                 Deregister service is not available on this system.   00505000
*                                                                @L1A*/ 00506000
*                                                                       00507000
*DCL Ifaeddrg_NotRegistered        FIXED(31) CONSTANT(12);  /*          00508000
*                 The product that was to be deregistered had not been  00509000
*                 registered                                     @L1A*/ 00510000
*                                                                       00511000
*DCL Ifaeddrg_NotTaskMode          FIXED(31) CONSTANT(16); /*           00512000
*            deregister service was not called in task mode.     @L1A*/ 00513000
*                                                                       00514000
*DCL Ifaeddrg_Xm                 FIXED(31) CONSTANT(20); /* Deregister  00515000
*                 service was not called with P=H=S              @L1A*/ 00516000
*                                                                       00517000
*DCL Ifaeddrg_NotAuth              FIXED(31) CONSTANT(24);  /*          00518000
*            If not supervisor state, system key, or system PKM,        00519000
*            the entry to be deregistered must be registered from the   00520000
*            same address space and must have been registered by an     00521000
*            equally non-authorized caller.                      @L1A*/ 00522000
*DCL Ifaeddrg_Locked             FIXED(31) CONSTANT(36);  /* Deregister 00523000
*                 service was called holding a system lock       @L1A*/ 00524000
*DCL Ifaeddrg_FRR                FIXED(31) CONSTANT(40);  /* Deregister 00525000
*                 service was called having an FRR               @L1A*/ 00526000
*                                                                       00527000
*/* Product Enable/Disable Status Return Codes                       */ 00528000
*/* Note: 0C4 abend if bad address provided in parmlist or user data */ 00529000
*                                                                       00530000
*DCL Ifaedsta_Success              FIXED(31) CONSTANT(0);  /*           00531000
*                 Status service completed successfully          @L1A*/ 00532000
*                                                                       00533000
*DCL Ifaedsta_NotDefined           FIXED(31) CONSTANT(4);  /*           00534000
*                 The status service found no entry corresponding to    00535000
*                 the input product.                             @L1A*/ 00536000
*                                                                       00537000
*DCL Ifaedsta_NotAvailable         FIXED(31) CONSTANT(8); /*            00538000
*                 Status service is not available on this system.       00539000
*                                                                @L1A*/ 00540000
*DCL Ifaedsta_NotTaskMode          FIXED(31) CONSTANT(16); /* Status    00541000
*                 service was not called in task mode.           @L1A*/ 00542000
*                                                                       00543000
*DCL Ifaedsta_Xm                   FIXED(31) CONSTANT(20); /* Status    00544000
*                 service was not called with P=H=S              @L1A*/ 00545000
*DCL Ifaedsta_Locked               FIXED(31) CONSTANT(36);  /* Status   00546000
*                 service was called holding a system lock       @L1A*/ 00547000
*DCL Ifaedsta_FRR                  FIXED(31) CONSTANT(40);  /* Status   00548000
*                 service was called having an FRR               @L1A*/ 00549000
*                                                                       00550000
*/* Product Enable/Disable List Constants                            */ 00551000
*                                                                       00552000
*DCL Ifaedlis_Type_Registered      FIXED(31) CONSTANT(1);  /* Return    00553000
*                 the registration entry/entries corresponding to the   00554000
*                 input product.                                     */ 00555000
*DCL Ifaedlis_Type_State           FIXED(31) CONSTANT(2);  /* Return    00556000
*                 the state entry/entries corresponding to the          00557000
*                 input product.                                     */ 00558000
*DCL Ifaedlis_Type_Status          FIXED(31) CONSTANT(4);  /* Return    00559000
*                 the status entry corresponding to the                 00560000
*                 input product.                                     */ 00561000
*DCL Ifaedlis_Type_NoReport        FIXED(31) CONSTANT(8);  /* When      00562000
*                 returning registration entries, include those for     00563000
*                 which the IFAEDREG call specified                     00564000
*                 Ifaedreg_Type_NoReport. If not requested, those       00565000
*                 entries are not returned.                          */ 00566000
* /* Avoid using a constant for 16 with Ifaedlis_Type. It is reserved   00567000
* for Internal usage                                             @01A*/ 00568000
*                                                                       00569000
*/* Product Enable/Disable List Return Codes                         */ 00570000
*/* Note: 0C4 abend if bad address provided in parmlist or user data */ 00571000
*                                                                       00572000
*DCL Ifaedlis_Success              FIXED(31) CONSTANT(0);  /*           00573000
*                 List service completed successfully            @L1A*/ 00574000
*                                                                       00575000
*DCL Ifaedlis_NotAllDataReturned   FIXED(31) CONSTANT(4);  /*           00576000
*                 List service had more data to return that would fit   00577000
*                 in the provided answer area. All the complete         00578000
*                 entries that would fit were returned.          @L1A*/ 00579000
*                                                                       00580000
*DCL Ifaedlis_NotAvailable         FIXED(31) CONSTANT(8);  /*           00581000
*                 List service is not available on this system.         00582000
*                                                                @L1A*/ 00583000
*                                                                       00584000
*DCL Ifaedlis_AnsareaTooSmall      FIXED(31) CONSTANT(12);  /*          00585000
*                 The answer area, indicated by the answer len          00586000
*                 parameter is not large enough to hold the             00587000
*                 answer area header (DSECT EdaahDR).            @L1A*/ 00588000
*DCL Ifaedlis_NotTaskMode          FIXED(31) CONSTANT(16); /* List      00589000
*                 service was not called in task mode.           @L1A*/ 00590000
*DCL Ifaedlis_Xm                   FIXED(31) CONSTANT(20); /* List      00591000
*                 service was not called with P=H=S              @L1A*/ 00592000
*DCL Ifaedlis_BadType              FIXED(31) CONSTANT(32);  /* The      00593000
*                 type parameter did not specify a word with a value    00594000
*                 formed from adding any combination of                 00595000
*                 IFAEDLIS_TYPE_REGISTERED,                             00596000
*                 IFAEDLIS_TYPE_STATE,                                  00597000
*                 IFAEDLIS_TYPE_STATUS, and                             00598000
*                 IFAEDLIS_TYPE_NOREPORT.                        @L1A*/ 00599000
*DCL Ifaedlis_Locked               FIXED(31) CONSTANT(36);  /* List     00600000
*                 service was called holding a system lock       @L1A*/ 00601000
*DCL Ifaedlis_FRR                  FIXED(31) CONSTANT(40);  /* List     00602000
*                 service was called having an FRR               @L1A*/ 00603000
*                                                                       00604000
*                                                                       00605000
*DCL Ifaed_BadRequest              FIXED(31) CONSTANT(100);  /*         00606000
*                 An unknown request type was detected by the           00607000
*                 IFAEDxxx processor.                            @L1A*/ 00608000
*                                                                       00609000
*/* Service Entry Declarations                                      */  00610000
*                                                                       00611000
*%DCL EHAMAPS CHAR EXTERNAL;             /*                      @L1A*/ 00612000
*%IF INDEX(EHAMAPS,'XM@')=0 %THEN        /*                      @L1A*/ 00613000
*   %EHAMAPS = EHAMAPS !! 'XM@';         /*                      @L1A*/ 00614000
*                                                                       00615000
*DCL IfaedType FIXED TYPE;               /*                      @L1A*/ 00616000
*DCL IfaedProdOwner CHAR(16) TYPE;       /*                      @L1A*/ 00617000
*DCL IfaedProdName     CHAR(16) TYPE;    /*                      @L1A*/ 00618000
*DCL IfaedFeatureName  CHAR(16) TYPE;    /*                      @L1A*/ 00619000
*DCL IfaedProdVers     CHAR(2)  TYPE;    /*                      @L1A*/ 00620000
*DCL IfaedProdRel      CHAR(2)  TYPE;    /*                      @L1A*/ 00621000
*DCL IfaedProdMod      CHAR(2)  TYPE;    /*                      @L1A*/ 00622000
*DCL IfaedProdID       CHAR(8)  TYPE;    /*                      @L1A*/ 00623000
*DCL IfaedProdToken CHAR(8) TYPE;        /*                      @L1A*/ 00624000
*DCL IfaedFeaturesLen FIXED TYPE;        /*                      @L1A*/ 00625000
*DCL IfaedFeatures CHAR(*) TYPE;         /* Note: this is limited       00626000
*                    to 1024 bytes.                              @L1A*/ 00627000
*DCL IfaedReturnCode Fixed(31) TYPE;     /*                      @L1A*/ 00628000
*                                                                       00629000
*DCL IFAEDREG ENTRY                                                     00630000
*     (Type:=Isa(IfaedType) INPUT        ] Register type                00631000
*     ,ProdOwner:=Isa(IfaedProdOwner) INPUT   ] Product Owner           00632000
*     ,ProdName:=Isa(IfaedProdName) INPUT  ] Product Name               00633000
*     ,FeatureName:=Isa(IfaedFeatureName) INPUT ]Feature Name           00634000
*     ,ProdVers:=Isa(IfaedProdVers) INPUT ] Product Version             00635000
*     ,ProdRel:=Isa(IfaedProdRel) INPUT   ] Product Release             00636000
*     ,ProdMod:=Isa(IfaedProdMod) INPUT  ] Product Mod level            00637000
*     ,ProdID:=Isa(IfaedProdID) INPUT    ] Product ID                   00638000
*     ,FeaturesLen:=Isa(IfaedFeaturesLen) INPUT                         00639000
*     ,Features:=Isa(IfaedFeatures) INPUT                               00640000
*     ,ProdToken:=Isa(IfaedProdToken) OUTPUT ] Product Token            00641000
*     ,ReturnCode:=Isa(IfaedReturnCode) OUTPUT) ] return code           00642000
*    OPTIONS(AMODE(31) ENV(PRIMARY))                                    00643000
*    BASED (((((XM@CVT+8Cx)->I031P+1C0x)->I031P+4)->I031P+0)->I031P)    00644000
*    VALRG(*);                           /*                      @L1A*/ 00645000
*                                                                       00646000
*DCL IFAEDDRG ENTRY                                                     00647000
*     (ProdToken:=Isa(IfaedProdToken) INPUT ] Product Token             00648000
*     ,ReturnCode:=Isa(IfaedReturnCode) OUTPUT) ] return code           00649000
*    OPTIONS(AMODE(31) ENV(PRIMARY))                                    00650000
*    BASED (((((XM@CVT+8Cx)->I031P+1C0x)->I031P+4)->I031P+4)->I031P)    00651000
*    VALRG(*);                           /*                      @L1A*/ 00652000
*                                                                       00653000
*DCL IFAEDSTA ENTRY                                                     00654000
*     (ProdOwner:=Isa(IfaedProdOwner) INPUT                             00655000
*     ,ProdName:=Isa(IfaedProdName) INPUT                               00656000
*     ,FeatureName:=Isa(IfaedFeatureName) INPUT                         00657000
*     ,ProdID:=Isa(IfaedProdID) INPUT                                   00658000
*     ,OutputInfo:=Isa(EDOI) OUTPUT                                     00659000
*     ,FeaturesLen:=Isa(IfaedFeaturesLen) INPUT                         00660000
*     ,Features:=Isa(IfaedFeatures) OUTPUT                              00661000
*     ,ReturnCode:=Isa(IfaedReturnCode) OUTPUT) ] return code           00662000
*    OPTIONS(AMODE(31) ENV(PRIMARY))                                    00663000
*    BASED (((((XM@CVT+8Cx)->I031P+1C0x)->I031P+4)->I031P+8)->I031P)    00664000
*    VALRG(*);                           /*                      @L1A*/ 00665000
*                                                                       00666000
*DCL IFAEDLIS ENTRY                                                     00667000
*     (Type:=Isa(IfaedType) INPUT               ]List type              00668000
*     ,ProdOwner:=Isa(IfaedProdOwner) INPUT                             00669000
*     ,ProdName:=Isa(IfaedProdName) INPUT                               00670000
*     ,FeatureName:=Isa(IfaedFeatureName) INPUT                         00671000
*     ,ProdID:=Isa(IfaedProdID) INPUT                                   00672000
*     ,AnsLen:=Fixed INPUT                                              00673000
*     ,AnsArea:=CHAR(*) OUTPUT                                          00674000
*     ,ReturnCode:=Isa(IfaedReturnCode) OUTPUT) ] return code           00675000
*    OPTIONS(AMODE(31) ENV(PRIMARY))                                    00676000
*    BASED (((((XM@CVT+8Cx)->I031P+1C0x)->I031P+4)->I031P+12)->I031P)   00677000
*    VALRG(*);                           /*                      @L1A*/ 00678000
*DCL 1 EDAAHDR TYPE,       /* Header section                     @L1A*/ 00679000
*     2 EdaahNumR FIXED(31), /* Number of Edaae entries which follow    00680000
*                indicating registered entries. The first one is        00681000
*                pointed to by EdaahFirstRAddr.                  @L1A*/ 00682000
*     2 EdaahNumS FIXED(31), /* Number of Edaae entries which follow    00683000
*                indicating state entries. The first one is             00684000
*                pointed to by EdaahFirstSAddr.                  @L1A*/ 00685000
*     2 EdaahTLEN FIXED(31),/* Total length of answer area needed to    00686000
*                             contain all the requested information.    00687000
*                             This includes the area for the records    00688000
*                             that were returned on this call.   @L1A*/ 00689000
*     2 EdaahFirstRAddr PTR(31), /* Address of first registered entry   00690000
*                Edaae                                           @L1A*/ 00691000
*     2 EdaahFirstSAddr PTR(31), /* Address of first state entry        00692000
*                Edaae                                           @L1A*/ 00693000
*     2 EdaahStatusAddr PTR(31), /* Address of the entry that           00694000
*                represents the policy entry that would be used to      00695000
*                determine if the input product was enabled. 0 if       00696000
*                no such policy entry exists.                    @L1A*/ 00697000
*     2 * CHAR(8),             /* Unused                         @L1A*/ 00698000
*     2 * CHAR(0) BDY(WORD);   /* Word-align the ending          @L1A*/ 00699000
*                                                                       00700000
*DCL 1 EDAAE TYPE            /* Edaae Record data format         @L1A*/ 00701000
*    ,2 EdaaeNextAddr PTR(31)  /* Address of next Edaae. EdaahNumR (for 00702000
*            the registered queue) or EdaahNumS (for the                00703000
*            state queue) must be used to determine how far along       00704000
*            this chain to go. Not relevant for EdaahStatusAddr. @L1A*/ 00705000
*    ,2 EdaaeInfo                                /*              @L1A*/ 00706000
*     ,3 EdaaeProdOwner CHAR(16)     /* Product owner            @L1A*/ 00707000
*     ,3 EdaaeProdName CHAR(16)      /* Product name             @L1A*/ 00708000
*     ,3 EdaaeFeatureName CHAR(16)   /* Feature name             @L1A*/ 00709000
*     ,3 EdaaeProdVers CHAR(2)       /* Product version          @L1A*/ 00710000
*     ,3 EdaaeProdRel  CHAR(2)       /* Product release          @L1A*/ 00711000
*     ,3 EdaaeProdMod  CHAR(2)       /* Product mod level        @L1A*/ 00712000
*     ,3 EdaaeProdID CHAR(8)         /* Product ID               @L1A*/ 00713000
*    ,2 EdaaeFlags BIT(8)            /* Flags                    @L1A*/ 00714000
*     ,3 EdaaeStatusNotDefined Bit(1) /* This will never be on for      00715000
*               entries on the state queue. If on, indicates that       00716000
*               the state information does not have an entry that       00717000
*               matches this product.                            @L1A*/ 00718000
*     ,3 EdaaeStatusEnabled Bit(1) /* If on, indicates that the         00719000
*               product is considered to be enabled              @L1A*/ 00720000
*     ,3 EdaaeNoReport Bit(1)      /* If on, indicates that the         00721000
*               product registered with Ifaedreg_Type_Noreport.         00722000
*               This will never on for entries on the state             00723000
*               queue.                                           @L1A*/ 00724000
*     ,3 EdaaeLicensedUnderProd BIT(1)  /* If on, indicates that the    00725000
*               product registered with                                 00726000
*               Ifaedreg _Type_LicensedUnderProd.                       00727000
*               This will never on for entries on the state             00728000
*               queue.                                           @L1A*/ 00729000
*    ,2 * CHAR(1)             /* Unused                          @L1A*/ 00730000
*    ,2 EdaaeNumInstances Fixed(31)  /* Number of concurrent instances  00731000
*                                       of this registration     @L1A*/ 00732000
*    ,2 * CHAR(0) Bdy(Word);   /* Word-align the ending          @L1A*/ 00733000
*                                                                       00734000
*/* End of Product Enable/Disable IDF                                */ 00735000
*                                                                       00736000
* @LOGIC;                                                               00737000
* #PRAGMA TOOL=CBGEN.                                                   00738000
* #USEORG.                                                              00739000
* #DELETE.Ifaed_BadRequest                                              00740000
* #EPRAGMA.                                                             00741000
* @ENDLOGIC;                                                            00742000
*/* End of PL/X Source                                               */ 00743000
* %IF IFAEDIDF_LIST ^= 'NO' &                                           00744000
*    ZCBPRINT ^= 'NO' %THEN                                             00745000
*   %GOTO IFAEDIDF_4;                                                   00746000
*   @LIST POP NOECHO;                                                   00747000
* %IFAEDIDF_4:;                                                         00748000
* %END;                                                                 00749000
