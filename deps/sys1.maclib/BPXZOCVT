*        %GOTO OCVTPRO ;        /* Bilingual header                             
         MACRO                                                                  
             BPXZOCVT                                                           
OCVT         DSECT ,                                                            
             DS    CL60                                                         
OCVTFLGS     DS    0FL4                Offset +3C                               
OCVTFLGSB1   DS    0BL1                Offset +3C                               
OCVTKERNELREADY EQU X'20'     USS Kernel Ready to accept system calls           
         ORG   OCVTFLGSB1+X'00000001'                                           
OCVTFLGSB2   DS    1BL1                                                         
OCVTFLGSB3   DS    1BL1                                                         
OCVTFLGSB4   DS    1BL1                                                         
         ORG   OCVTFLGS+X'00000004'                                             
             DS    CL513                                        @PWC            
OCVTKERNELSTATE DS X                   Offset +241              @PWA            
             DS    CL166                                        @PWA            
OCVTUIWRWCDS DS    CL8                 Offset +2E8                              
OCVT#SHUTDOWNSTARTING EQU X'01'                                 @PWA            
OCVT#SHUTDOWNCOMP EQU X'02'                                     @PWA            
OCVT#RESTARTSTARTING EQU X'03'                                  @PWA            
OCVT#NEUTRAL EQU X'00'                                          @PWA            
         MEND                                                                   
*  If this offset changes, reassemble BPXUIXBF  */                              
*%OCVTPRO : ;                                                                   
*/****START OF SPECIFICATIONS******************************************         
*                                                                               
*    $MAC (BPXZOCVT) COMP(SCPX1) PROD(BPX):                                     
*                                                                               
*01* MACRO NAME: BPXZOCVT                                                       
*                                                                               
*01* DSECT NAME: N/A                                                            
*                                                                               
*01* DESCRIPTIVE NAME: OpenMVS Component Vector Table                           
*                                                                               
*02*   ACRONYM: OCVT                                                            
**/                                                                             
*/*01* PROPRIETARY STATEMENT=                                        */         
*/***PROPRIETARY_STATEMENT********************************************/         
*/*                                                                  */         
*/*                                                                  */         
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */         
*/* 5650-ZOS COPYRIGHT IBM CORP. 1997, 2021                          */         
*/*                                                                  */         
*/* STATUS= HBB77D0                                                  */         
*/*                                                                  */         
*/***END_OF_PROPRIETARY_STATEMENT*************************************/         
*/*                                                                             
*                                                                               
*01* EXTERNAL CLASSIFICATION:                                                   
*02*         NOTPI:BASE                                                         
*02*            PI:  FIELDS                                                     
*                   OcvtKernelReady                                             
*                   OcvtKernelState                                             
*                   OcvtSuperUser                                               
*01* END OF EXTERNAL CLASSIFICATION:                                            
*                                                                               
*01* FUNCTION:                                                                  
*                                                                               
*    The OCVT is the base control block for OpenMVS. The OCVT                   
*    contains addresses of common areas for use by OpenMVS                      
*    subcomponents.                                                             
*                                                                               
*01* METHOD OF ACCESS:                                                          
*                                                                               
*02*   PL/X:                                                                    
*                                                                               
*        %INCLUDE SYSLIB(BPXZOCVT)                                              
*        By default, the OCVT is based on ECVTOCVT. If                          
*        other basing is desired, use %OCVTBASE='BASED(XXXXXX)'.                
*        If %OCVTBASE='BASED(OCVTPTR)' is coded, a Declare for                  
*        OCVTPTR is also generated.                                             
*                                                                               
*        If coded, %OCVTLPAM= or %OCVTLPAX=, will be ignored.   @PBC            
*                                                                               
*02*   ASM:                                                                     
*                                                                               
*        None                                                                   
*                                                                               
*01* SIZE: Release dependent.  Refer to the mapping.                            
*                                                                               
*01* POINTED TO BY: ECVTOCVT                                                    
*                                                                               
*01* CREATED BY: Component Initialization                                       
*                                                                               
*01* DELETED BY: Component Termination                                          
*                                                                               
*01* STORAGE ATTRIBUTES:                                                        
*02*   SUBPOOL: 245                                                             
*02*   KEY: 0                                                                   
*02*   RESIDENCY: ESQA                                                          
*                                                                               
*01* FREQUENCY: 1 per system                                                    
*                                                                               
*01* SERIALIZATION: N/A                                                         
*                                                                               
*01* DEPENDENCIES: None                                                         
*                                                                               
*01* NOTES: 1) Restriction: The offset of OcvtStep, used by REXX exec           
*              BPXWESL, can not change without changing BPXWESL.                
*                                                                               
*           2) If the size of OCVT changes, the following modules               
*              need to be re-compiled:                                          
*              . BPXINRIM     BPXGKSER     BPXGMFST                             
*              . BPXFRBRI     BPXGMACC     BPXGMQHT                             
*              . BPXFSLIT     BPXGMCBS     BPXGPPRT                             
*              . BPXCFLT      BPXGMDAC     BPXRRTRM                             
*              . BPXCLBF      BPXGMDEL                                          
*                                                                               
*01* COMPONENT: OpenMVS (SCPX1)                                                 
*                                                                               
*01* DISTRIBUTION LIBRARY:  AINTLIB                                             
*                                                                               
*01* EYE-CATCHER: OCVT                                                          
*02*   OFFSET:  0                                                               
*02*   LENGTH:  4                                                               
*                                                                               
*01* CHANGE-ACTIVITY:                                                           
*                                                                               
*    $L0=POSIXXI  HOM1110 921201 PDF4: OpenMVS Initial Release                  
*    $P1=PL70371  HOM1110 921201 PDJI: Fork RSMCOPY parmlist cpoolid            
*    $D1=DL70014  HOM1110 920901 PDJC: Pthread Support                          
*    $P2=PL70577  HOM1110 921218 PDJC: Enable 9er to do sdump before            
*                                      doing cleanup                            
*    $D2=DL70034  HOM1110 930114 PDPB: Change Proprietary statement             
*                                      for IPCS format models                   
*    $P3=PL70632  HOM1110 930201 PDJD: Delay SIGKILL Until Safe                 
*    $P4=PL70642  HOM1110 930401 PDJC: Reduce window of opportunity             
*                                      for the IPT to go away with              
*                                      us knowing about it                      
*    $P5=PL70729  HOM1110 930419 PDJI: Add Fork freed cell count                
*    $L1=DOAA006  HOM1120 930323 PDI6: OpenMVS Second Release                   
*    $D6=DOAA017  HOM1120 930608 PDI6: Fast Path Fork Support                   
*    $D7=DOAA041  HOM1120 930626 PDJI: Fork propagate of account data           
*    $D8=DL7A045  HOM1110 930820 PDJD: A045.01 STEPLIB Support                  
*    $D9=DPFA065  HOM1130 940126 PDI6: A065.02 Universal Unix Support           
*    $DA=DPFA079  HOM1130 940126 PDI6: A079.01 Spawn Support                    
*    $DB=DPFA052  HOM1130 940215 PDAZ: NFSC (A052.02) CABC anchor ptr           
*    $P6=POA0296  HOM1120 940228 PDJC: Check if KSER is inuse before            
*                                      releasing storage                        
*    $P6=PPF0003  HOM1130 940310 PDJC: Check if KSER is inuse before            
*                                      releasing storage                        
*    $P7=POA0367  HOM1120 940310 PDJI: Limit fork wait time on APPC             
*    $P8=POA0398  HOM1120 940316 PDJC: Shoot Kernel callers at kernel           
*                                      termination                              
*    $DC=DPFA079  HOM1130 940330 PDJI: (A079.02) Support RangList               
*                                      option of IARVSERV service               
*    $DD=DPFA052  HOM1130 940401 PDJT: A052.03 File System PC                   
*    $P9=POA0464  HOM1120 940411 PDHA: Allow multiple passes through            
*                                      termination                              
*    $DE=DPFA065  HOM1130 940418 PDXU: A065.03 mmap support                     
*    $DF=DPFA088  HOM1130 940425 PDJM: A088.00 Fast Kern Post                   
*    $DG=DPFA065  HOM1130 940505 PDAX: A065.05 Rlimits/Rusage                   
*    $DH=DFFA069  HOM1130 940509 PDJG: Add Remote TTY devices                   
*                                      (A069.02)                                
*    $DI=DPFA051  HOM1130 940622 PDJJ: A051.07 Fork daemon                      
*    $DJ=DPFA069  HOM1130 940914 PDJC: DCR A069.10 Kernel Timer Support         
*    $DK=DPFA052  HOM1130 940921 PDJD: DCR A052.07 Out of kernel Times          
*    $DL=DPFA094  HOM1130 940923 PDJD: DCR A094.02 Expanded SU command          
*    $DM=DPFA069  HOM1130 941122 PDJC: DCR A069.05 Ocs support phase 4          
*    $PA=PPF0177  HOM1130 950105 PDJI: Separate BPXJCSS module (perf)           
*    $DN=DPFA079  HOM1130 950112 PDI6: DCR A079.13 SQA Control Support          
*    $PB=PPF0190  HOM1130 950113 PDJM: Remove optional declares                 
*    $PC=PPF0317  HOM1130 950331 PDJI: Add OcvtForkCellSeqNo                    
*    $DO=DRGA055  HOM1140 950331 PDJI: Sysplex support (A055.03)                
*    $DP=DRGA112  HOM1140 950414 PDI6: Permanent Kernel (A112.01)               
*    $PD=PRG0017  HOM1140,950620,PDKG: Rollup Rel 3 DCR A130.00                 
*    $DQ=DRGA112  HOM1140 950923 PDAE: Permanent Kernel (A112.00)               
*    $DR=DRGA153  HOM1140 950911 PDJI: Add CDS field for fork A153.05           
*    $DS=DSPA158  HOM1150 960109 PDJI: A158.00 AF-ESCON support                 
*    $PE=PSP0076  HOM1150 960329 PDI6: SRB Mode support                         
*    $PF=PSP0092  HOM1150 960513 PDJC: OE termination action message            
*    $DT=DSPA175  HOM1150 960425 PDPY: SRB Mode Support (A175.01)               
*    $PG=PQC1829  HBB6603 960715 PDJI: CSVFORKM integrity fix                   
*    $PH=PQC1429  HBB6603 960731 PDKG: UseridAlias table performance            
*    $PI=PQC2105  HBB6603 960807 PDI6: Merge up APAR OW21989                    
*    $PJ=PQC2201  HBB6603 960823 PDJG: fix for last buffer not being            
*                                      written, and STK support.                
*    $DU=DSYA195  JBB6604 960915 PDJI: AF_INET UDP sockets A195.01              
*    $DV=DSYA211  JBB6604 961121 PDI6: A211.01 Fastpath Syscalls                
*    $DW=DSYA197  JBB6604 961220 PDPY: A197.00 APPC Elimination                 
*    $PK=PSY0372  JBB6604 960225 PDKG: MSGACB for WLM PRJSR                     
*    $DX=DUX0217  HBB6605 970315 PDI6: A217.07 Latch Restructure                
*    $DY=DUX0217  HBB6605 970410 PDKG: A217.06 OASB/OAPB Cpools                 
*    $DZ=DUXA233  HBB6605 970610 PDJI: A233.03 OE-TCP stack                     
*    $PL=PUXA348  HBB6605 970722 PDI6: Remove OcvtMaxExecPgmSize                
*    $E1=DVTA267  JBB6607 980208 PDSZ: Process Scrub (A267.00)                  
*                                      Remove Wall-down recovery                
*                                      Use QuickPools                           
*    $E2=DWAA217  JBB6607 971215 PDI6: A217.25 SAF Fastpath Support             
*    $E3=DWAA277  JBB6607 983009 PDSZ: A277.01 Fork service shutdown            
*    $E4=DWAA278  JBB6607 980320 PDPY: A278.01 Startup Diagnostics              
*    $E5=DWAA274  JBB6607 980320 PDJQ: A274.02 FastCGI support                  
*    $E6=DWAA271  JBB6607 980320 PDI6: A271.01 Unix 98 Support                  
*    $PM=PWA0109  JBB6607 980430 PDPY: A278.01 Add support for PMR              
*    $01=OW36163  JBB6607 981115 PDPY: Propagate MSGLEVEL to child              
*                                      PWK0443                                  
*    $E7=DWKA311  HBB6608 980717 PDSZ: A311.00 SETOMVS RESET support            
*    $E8=DCRA304  HBB6608 980815 PDZJ: A304.00 queued signals OW34166           
*    $PN=PWY0777  JBB6609 990707 PDAE: add bit in BPXMIDMX for                  
*                                      sysmdumps                                
*    $E9=DWYA254  JBB6609 990211 PDJJ: A254.01 - HP Link support                
*    $EA=DXDA402  HBB7703 990921 PDJN: Remove OCS                               
*    $EB=DXDA382  HBB7703 990929 PDQR: A382.00 Enhance RMF Support              
*    $EC=DXDA405  HBB7703 000118 PDQR: A405.08 zombie process removal           
*    $PO=???????  HBB7703 000217 PDJJ: Error exit for asaxrsn                   
*    $ED=DXDA405  HBB7703 991103 PD2S: A405.03 RAS Enhancements                 
*    $EE=DYNA519  HBB7708 010315 PDSK: LP64                                     
*    $EF=PYN0014  HBB7708 010226 PDNU: Resolver Synchronization                 
*    $EG=DYMA511  HBB7706 010305 PDPY: OMVS Restart Support                     
*    $EH=DYMA518  HBB7706 010212 PDFV: A518.00 Mount Table Limit                
*                                      Monitor                                  
*    $EI=DYNA519  HBB7708 010718 PDZJ: A510.12 Fork above the bar               
*    $PP=PYM0398  HBB7706 010807 PDI6: Shutdown Blockers Fix                    
*    $EJ=DXDA547  HBB7706 010423 PDSZ: Authorized program list                  
*    $EK=DYVA570  HBB7707 011005 PDI6: Enhanced PADS Security                   
*    $EL=DYVA568  HBB7707 010725 PDAE: DCR A568 Process start/end exit          
*    $EM=DYNA600  HBB7708 020131 PDFO: A600 SWA Above                           
*    $EN=DJKA586  HBB7709 020505 PDI6: Externalize selective OCVT               
*                                      fields                                   
*    $EO=DJKA613  HBB7709 020627 PDJI: MMAP Pause/Release Support               
*    $EP=DYNA613  HBB7708 020730 PDSZ: Dynamic CBs                              
*    $03=OW56351  HBB7705 030113 PDKG: Obtain 16meg - Fork CSV area             
*    $EQ=DYNA613  HBB7709 021204 PDSZ: Dub Message Waiting A613.02              
*    $ER=DJKA613  HBB7709 030105 PDI6: Latch Contention Detection               
*    $PQ=PJK0590  HBB7709 030724 PDJC: Need number of amode 64 parms            
*    $04=OA05868  HBB7707 031205 PDKG: Use CDS for mmap serialization           
*    $ES=DxxA613  HBB7709 030926 PDGF: Added CTRACE data area.                  
*    $ET=DJKA657  HBB7720 040215 PDI6: Dynamic Service Activation               
*    $05=OA06869  HBB7720 040518 PDKG: Colony asid list                         
*    $EU=DCRA585  HBB7730 050505 PDKG: inittab/respawn                          
*    $EV=DCRB421  HBB7760 071114 PDHA: VSCR for z/OS v1r11                      
*    $PR=ME12384  HBB7760 080121 PDHA: Fix proprietary statement                
*    $EW=ME13542  HBB7760 080508 PDHA: DCR B421 withdrawn                       
*    $EX=DCRB435  HBB7760 071019 PDJC: Performance for v1r11                    
*    $PS=ME13113  HBB7760 080710 PDJN: Save ZFS ASID                            
*    $EY=DCRC048  HBB7780 100310 PDJC: Multiple dynamic stack sizes             
*    $06=OA31967  HBB7770 100701 PDJC: Kernel timer RAS                         
*    $EZ=ME21982  HBB7790 110621 PDHA: DCR C329.00 - Dynamic service            
*                                      activation for IRBs                      
*    $F0=DCRB933  HBB7790 110131 PDJQ: 64-bit storage manager, part 1           
*    $F1=DCRC316  HBB7790 110803 PDJJ: Pprt above the bar                       
*    $PT=ME23283  HBB7790 111229 PDKG: Delete OcvtFlatch fields                 
*    $PY=OA39265  HBB7780 120412 PDJN: add Ocvt#TermLSysplex2                   
*    $F2=DCRC403  HBB7790 120630 PDJQ: Count space switch stack usage           
*    $F3=DCRC503  HBB7790 120612 PDJC: Stack overflow checking                  
*    $F4=DCRC395  HBB77A0 120201 PDHA: Pause/Release services                   
*    $07=OA42093  HBB7770 130517 PDJQ: Priv Prog checking                       
*    $F5=DCRC625  HBB77A0 130423 PDJC: Kernel/LFS stacks above the bar          
*    $F6=DCRC595  HBB77A0 140624 PDJN: AMODE64 Stack Above the Bar bar          
*    $F7=DCRC625  HBB77A0 140505 PDJC: AM64 - Stacks above                      
*    $PU=ME28646  HBB77A0 150119 PDJC: Remove temp code                         
*    $F8=DCRC625  HBB77A0 150122 PDJC: Move PPSQs to own data space             
*    $PV=ME28757  HBB77A0 150219 PDGY: Save Ctra64 CPOOL id                     
*    $08=OA47604  HBB77A0 150416 PDLO: ME29079 DetermineAvailKernelStg          
*                                      flag                                     
*    $F9=DCRC961  HBB77B0 151016 PDJJ: Multi DIE support                        
*    $FA=DCRD026  HBB77B0 160720 PDJC: KSERs above the bar                      
*    $FB=DCRC893  HBB77B0 150910 PDLO: Syscall Exits (DCR C893.00)              
*    $FC=DCRC995  HBB77B0 161212 PDMX: 2038/2042                                
*    $09=OA57510  HBB77B0 190319 PDKG: fork PARMPOOL cells not freed            
*    $PW=360631   HBB77D0 200214 PDJQ: Add OcvtKernelState and                  
*                                      associated constants to                  
*                                      Assembler definitions (PI)               
*    $FD=W299812  HBB77D0 200604 PDJQ: Remove stacks below code                 
*    $FE=WI169636 HBB77D0 190701 PDCL: MMAP in the kernel                       
*                                      (MMAP64-309293)                          
*    $FF=E323274  HBB77D0 201209 PDJR: Deprecation of Maxsharedpages            
****END OF SPECIFICATIONS*********************************************/         
*%IF OCVTBASE='' %THEN                                                          
*  %DO;                                                                         
*    %OCVTBASE='Based(EcvtOcvt)';                                               
*  %END;                                                                        
* %IF OCVTBASE='Based(OcvtPtr)' %THEN                                           
*   %DO;                                                                        
*     DCL OcvtPtr Ptr(31);           /* Pointer to the OCVT          */         
*   %END;                                                                       
*DCL                                                                            
* 1    Ocvt       OCVTBASE,                                                     
*  3 OcvtID     Char(4),     /* EBCDIC ID - OCVT                     */         
*  3 OcvtSP     Fixed(8),    /* Subpool number of this OCVT          */         
*  3 OcvtLEN    Fixed(24),   /* Length of this OCVT                  */         
*  3 OcvtOcve   Ptr(31),     /* Address of the OCVT extension        */         
*  3 OcvtOext   Ptr(31),     /* Address of the public OEXT           */         
*  3 OcvtJCpr   Ptr(31),     /* Address of BPXJCpr ----------------             
*                               This field cannot move, it must be              
*                               offset 10 hex.  This field is used              
*                               by BPXJCSR.                          */         
*  3 OcvtAscb   Ptr(31),     /* ASCB address of Kernel Address space */         
*  3 *          Fixed(32),                                                      
*    5 OcvtAsid   Fixed(16), /* ASID of Kernel address space         */         
*    5 *          Fixed(16),                                                    
*  3 OcvtTcb    Ptr(31),     /* Kernel Jobstep TCB address           */         
*  3 OcvtTcbToken Char(16),  /* TCB token for kernel JobStep TCB     */         
*  3 OcvtPC1    Ptr(31),     /* PC1 (BPXJCNS) number                 */         
*  3 OcvtPC2    Ptr(31),     /* PC2 (BPXJCSS) number                 */         
*  3 OcvtPC3    Ptr(31),     /* PC3 (BPXJCSA) number                 */         
*  3 OcvtFlgs   Bit(32),     /* Flags                                */         
*    5 OcvtStopItab    Bit(1), /* Time-out - too long to process all */         
*                              /* itab entries - quit processing @EUA*/         
*    5 OcvtTest   Bit(1),    /* OpenMVS in test mode                 */         
*    5 OcvtKernelReady Bit(1),/* OpenMVS Ready to "Dub" Processes    */         
*    5 OcvtKernelTerm  Bit(1),/* Kernel termination is active        */         
*                                                                               
*    5 OcvtSavedTOFF   Bit(1),/* Saved ASCBTOFF from the init    @DIA*/         
*    5 OcvtStacksAbove  Bit(1),/* Stacks above bar. From v2.4 forward           
*                                 this flag is hardcoded ON. Only               
*                                 stacks above the bar are supported.           
*                                                                @FDC*/         
*    5 OcvtGoalMode     Bit(1),/* WLM Goal Mode in effect        @D9A*/         
*    5 OcvtMinMode      Bit(1),/* No parmlib member specified at IPL,           
*                                 OpenMVS started in Min mode    @DPA*/         
*    5 OcvtKernelStart Bit(1),/* OpenMVS in Start Mode           @DPA*/         
*    5 OcvtUseridAlias  Bit(1),/* Userid/Alias table being used  @PDA*/         
*    5 OcvtSuperUserEnabled Bit(1),/* OpenMVS enabled for Superuser             
*                                 callers                        @DPA*/         
*    5 OcvtSETOMVSEnabled Bit(1), /* SETOMVS commands can be processed          
*                                                                @DQA*/         
*    5 OcvtMruauAttached  Bit(1), /* MRUAU task is attached      @PHA*/         
*    5 OcvtSyscallAcctng  Bit(1), /* Syscall counts activated    @DVA*/         
*    5 OcvtSafFastPath    Bit(1), /* BPX.SAFFASTPATH defined     @E2A*/         
*    5 OcvtShutdownForks  Bit(1), /* Fork service shutting down  @E3A*/         
*    5 OcvtSdJESstarted   Bit(1), /* Startup diagnostic ENF exit                
*                                    detected JES has started    @PMA*/         
*    5 OcvtSETOMVSTaskInit Bit(1), /*SETOMVS Task initialized    @E7A*/         
*    5 OcvtSysMDumpOverRide Bit(1), /* On = take the sysmdump    @PNA*/         
*    5 OcvtResolverAscre    Bit(1), /* On = ASCRE macro issued                  
*                                      by BPXFSLIT to create the                
*                                      Resolver address space.   @EFA*/         
*    5 OcvtKernelInRestart  Bit(1), /* On = kernel restarting        */         
*    5 OcvtShootInitTask Bit(1),                                                
*    5 OcvtShutDownDelayedMsgIssued Bit(1), /* On = shut down delayed           
*                               message already issued           @EGA*/         
*    5 OcvtShutDownTimerDie Bit(1), /* On = shut down of timer die              
*                               services required                @EGA*/         
*    5 OcvtBlockersCheck    Bit(1), /* On = shut down checking for              
*                               blockers                         @PPA*/         
*    5 OcvtMrAPTAttached    Bit(1), /* MRAPT task is attached    @EJA*/         
*    5 OcvtAuthPgmList      Bit(1), /* Auth pgm list being used  @EJA*/         
*    5 OcvtMainCheck        Bit(1), /* On = BPX.MAINCHECK is defined            
*                                                                @EKA*/         
*    5 OcvtSWAAbove         Bit(1), /* On = SWA above            @EMA*/         
*    5 OcvtValidLengths     Bit(1), /* Dynamic cb lengths good   @EPA*/         
*    5 OcvtDetermineAvailKernelStgRan Bit(1), /* On = BPXSMTSK routine          
*                               DetermineAvailKernelStg ran      @08A*/         
*    5 OcvtSyscallExits     Bit(1), /* SyscallExits Table in use @FBA*/         
*  3 OcvtInitAscb Ptr(31),   /* ASCB address of Init Process         */         
*  3 OcvtCadsAddr Ptr(31),   /* Address of the 'SYSZBPX1' SADS       */         
*  3 OcvtCadsAlet  Fixed(32),/* ALET of the 'SYSZBPX1' SADS          */         
*  3 OcvtCadsStoken Char(8), /* STOKEN of the 'SYSZBPX1' SADS        */         
*  3 OcvtFilesysAddr Ptr(31), /* Address of 'SYSZBPX2' filesys DS    */         
*  3 OcvtFilesysAlet Fixed(32),/* ALET of 'SYSZBPX2' filesys DS      */         
*  3 OcvtFilesysStoken Char(8), /* STOKEN of 'SYSZBPX2' filesys DS   */         
*  3 OcvtSMKLatchCount Fixed(31) Abnormal,  /*KSER Compress-LKKP @DFA*/         
*  3 OcvtTextTable@ Ptr(31), /* Message Text Table address           */         
*  3 OcvtSmca Ptr(31),       /* Storage Manager Control Area         */         
*  3 OcvtForkCellPoolToken Ptr(31), /* Token for Fork Storage Manager           
*                               call                                 */         
*  3 OcvtForkCellPoolCellSize Fixed(32), /* Size of a cell in the               
*                               Fork Cell Pool                       */         
*  3 OcvtPipeStoken Char(8), /* STOKEN of 'SYSZBPX3' pipes DS        */         
*                                                                               
*  3 OcvtSubcomponentFields,                                                    
*                                                                               
*       /* The following fields are for subcomponent use.  If the  */           
*       /* subcomponent uses ATTACH, use the subcomponent ECB on   */           
*       /* the ATTACH.  Mainline will WAIT on all subcomponent ECBs. */         
*       /* The other field is for use by the subcomponent.  For    */           
*       /* example, if the subcomponent needs to create a persistent */         
*       /* control area, put the address in this field.              */         
*    5 OcvtEcbAM Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrAM Ptr(31),         /* Subcomponent Field              */         
*    5 OcvtEcbCM Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrCM Ptr(31),         /* Subcomponent Field              */         
*    5 OcvtEcbCT Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtTca   Ptr(31),         /* Address of the Trace Control               
*                                    Area                            */         
*    5 OcvtEcbDU Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrDU Ptr(31),         /* Subcomponent Field              */         
*    5 OcvtEcbFS Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtOfsb  Ptr(31),         /* Address of the file system anchor          
*                                    block                           */         
*    5 OcvtEcbLK Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrLK Ptr(31),         /* Subcomponent Field              */         
*    5 OcvtEcbMI Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrMI Ptr(31),         /* Subcomponent Field              */         
*    5 OcvtEcbOP Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrOP Ptr(31),         /* Subcomponent Field              */         
*    5 OcvtEcbPR Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrPR Ptr(31),         /* Subcomponent Field              */         
*    5 OcvtEcbRR Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrRR Ptr(31),         /* Subcomponent Field              */         
*    5 OcvtEcbN  Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtOsig  Ptr(31),         /* Address of the Signal Main                 
*                                    Control Block                   */         
*    5 OcvtEcbSM Fixed(32),       /* Subcomponent ECB                */         
*    5 OcvtPtrSM Ptr(31),         /* Subcomponent Field              */         
*  3 OcvtMT(20) Ptr(31),          /* Module table                               
*                                    (One array element for each                
*                                    subcomponent in OpenMVS)        */         
*  3 OcvtCtr  BIT(32),            /* Trace Components Supported      */         
*    5 OcvtCtrChars   BIT(1),       /* Chars                 80000000*/         
*    5 OcvtCtrDevPTY  BIT(1),       /* Communications        40000000*/         
*                                                             /* @DHA*/         
*    5 OcvtCtrDevRTY  BIT(1),       /* COM - remote devices  20000000*/         
*    5 *              BIT(1),       /*                       10000000*/         
*    5 OcvtCtrFile    BIT(1),       /* File Services         08000000*/         
*    5 OcvtCtrXCF     BIT(1),       /* XCF Service           04000000*/         
*    5 OcvtCtrIpc     BIT(1),       /* Ipc                   02000000*/         
*    5 OcvtCtrLock    BIT(1),       /* Locking Services      01000000*/         
*    5 OcvtCtrStk     BIT(1),       /* Stack/IPC             00800000*/         
*                                                             /* @PJA*/         
*    5 OcvtCtrPipe    BIT(1),       /* Pipe                  00400000*/         
*    5 OcvtCtrProcess BIT(1),       /* Process Services      00200000*/         
*    5 OcvtCtrPtrace  BIT(1),       /* Ptrace                00100000*/         
*    5 OcvtCtrSignal  BIT(1),       /* Signalling            00080000*/         
*    5 OcvtCtrStorage BIT(1),       /* Storage Management    00040000*/         
*    5 OcvtCtrSYSCALL BIT(1),       /* SYSCALL Layer         00020000*/         
*  3 OcvtBaebCellPoolToken Ptr(31), /* Token for BAEB Storage Manager           
*                                      call                      @DIA*/         
*  3 OcvtSavedJSTL    Bit(32),    /* Saved ASCBJSTL from Init    @DIA*/         
*  3 OcvtStartName    Char(8),    /* AscbJBNS->Started task name     */         
*  3 OcvtForkExitListPtr PTR(31), /* Fork exit list                  */         
*  3 OcvtKernelSToken Char(8),    /* Current Kernel SToken           */         
*  3 OcvtTraceParm    Char(8),  /* Ctrace Define Parmlib Member Name */         
*  3 OcvtInitTCB      Ptr(31),    /* TCB of the init process         */         
*  3 OcvtSysCallAvgTime Bit(32),  /* Average CPU time for a syscall in          
*                                    microseconds (Stored in TOD                
*                                    format)                     @L1A*/         
*  3 OcvtSpawnExitListPtr PTR(31),/* Spawn exit list             @DAA*/         
*  3 OcvtKernAcctData Ptr(31),    /* Ptr to accounting data of the              
*                                    kernel and all the tasks (e.g.             
*                                    INIT, kernel daemons, etc. ) it            
*                                    subsequently forked. It is                 
*                                    setup by BPXPRFK. First word               
*                                    of account data area contains              
*                                    length of account data      @D7A*/         
*    5 OcvtNGroupsMax   Fixed(31),  /* Max # of supplementary groups,           
*                                    filled in by BPXPINPR       @DIC*/         
*  3 OcvtSRBCadsQPool Char(8), /* SRB Cads quick pool anchor     @DTA*/         
*  3 OcvtSSRBCellPoolToken Ptr(31), /* Token for SSRB cell pool  @DTA*/         
*  3 OcvtArqCellPoolToken Ptr(31), /* Token for ARQ cell pool    @DTA*/         
*  3 OcvtIEFITRLptr   ptr(31),    /* Address of SWA relocation routine          
*                                    IEFITRL.  Used by OE initiator             
*                                    job selection processing.   @DWA*/         
*  3 OcvtLotusDLL     Ptr(31),    /* Ptr to LOTUS Notes DLL CSA                 
*                                    Module                      @PIA*/         
*  3 OcvtIEFITJTptr   ptr(31),    /* Address of SWA tailoring routine           
*                                    IEFITJT.  Used by OE initiator             
*                                    job selection processing.   @DWA*/         
*  3 OcvtTfsA         Ptr(31),    /* Tfs Scaffolding                 */         
*  3 OcvtTfsB         Ptr(31),    /* Tfs Scaffolding                 */         
*  3 OcvtCsriPtr      Ptr(31),    /* Address of BPXZCSRI table in               
*                                    the nucleus                     */         
*  3 OcvtKernInitTOD  Char(8),    /* Current Kernel initialization time         
*                                    in TOD format, used by times()  */         
*  3 OcvtConsoleID    Fixed(32),  /* Console ID of terminal that                
*                                    issued Start OMVS command       */         
*  3 OcvtCART         Char(8),    /* Command and Response token      */         
*  3 OcvtJSRWorkID    Fixed(31),  /* WorkID used for job selection   */         
*                                 /* requests                    @LJN*/         
*  3 OcvtMTLen        Fixed(32),  /* Size of module table            */         
*  3 OcvtMTSP         Fixed(32),  /* Module table subpool Id         */         
*  3 OcvtCsvExitListPtr  Ptr(31), /* Fork CSV exit list ptr      @PGC*/         
*  3 OcvtSwaBlksPtr   ptr,        /*                             @DWA*/         
*  3 OcvtXcfMemberStatus  Bit(64) Bdy(Dword), /* OpenMVS SYSPLEX status         
*                                    field (monitored by XCF)    @DOA*/         
*    5 OcvtSysplexWkCnt Fixed(32), /* Count of SYSPLEX work tasks               
*                                    invoked                     @DOC*/         
*    5 OcvtSysCallCount Fixed(32) Unsigned, /* Count of syscalls                
*                                    processed                   @DOC*/         
*  3 OcvtSystime      Bit(64) Bdy(DWord), /* Time in Kernel executing           
*                                    system calls (Doubleword)       */         
*  3 OcvtLpaLoadAddr Ptr(31),  /* Load addr of BPXINLPA load module  */         
*  3 OcvtLpaEndAddr  Ptr(31),  /* End addr of BPXINLPA load module   */         
*  3 OcvtRsmCopyCellPoolToken Ptr(31),   /* Token for RSM IARVSERV              
*                                    service parmlist Storage Manager           
*                                    call (in SP 235)            @DCA*/         
*  3 OcvtDummyKserAddr Ptr(31),/* Addr of dummy Kser for Async threads          
*                                                                @D1A*/         
*  3 OcvtSvc3ModPtr    Ptr(31),   /* Address of Svc 3 module     @P4A*/         
*  3 OcvtSvc3ModLen    Fixed(31), /* Length of Svc 3 module      @P4A*/         
*  3 OcvtForkCellSeqNo Fixed(32), /* Sequence number of fork cell               
*                                    (unique for each cell)      @PCC*/         
*  3 OcvtStep          Ptr(31),   /* Address of STEPLIB sanction list           
*                                    control block BPXZSTEP                     
*                                    (Do not move offset)        @D8A*/         
*  3 OcvtSpawnExitListLen PTR(31),/* Spawn exit list length      @DAA*/         
*  3 OcvtClnyCsaPtr   Ptr(31),    /* Address of Filesystem Colony               
*                                    address space blocks in CSA @DBC*/         
*  3 OcvtPendingKsersAnchor Ptr(31), /* Anchor for chain of freed Kser          
*                                    cell storage extents that could            
*                                    not be storage released due to             
*                                    the possiblity that there may be           
*                                    a POST still pending for one or            
*                                    more of the Ksers contained in             
*                                    the exent.                  @P6A*/         
*  3 OcvtErrExit      Ptr(31),    /* Exit@ for asaxrsn           @POA*/         
*  3 OcvtTermLevel    Fixed(31),  /* Kernel termination level. See              
*                                    constants declared at end of               
*                                    control block for possible                 
*                                    values.                     @P8A*/         
*  3 OcvtFspcStuff,                /* File System XMEM support   @DDA*/         
*    5 OcvtFsPC       Fixed(32),   /*   PC Number (=LX value)    @DDA*/         
*    5 OcvtFsETtok    Fixed(32),   /*   ETCRE Token              @DDA*/         
*                                                                               
*  3 OcvtMmapStuff,               /* Memory map Area             @DEA*/         
*    5 OcvtVdacQHead   Ptr(31),   /* VDAC task queue head        @DEA*/         
*    5 OcvtVdacECB   Fixed(32),   /* VDAC task activation ECB    @DEA*/         
*    5 OcvtPFltQHead   Ptr(31),   /* Page Fault task queue head  @DEA*/         
*      7 OcvtPFltQHeadInv Bit(1), /* Page Fault task queue is invalid           
*                                    if this bit is set          @DEA*/         
*    5 OcvtPWrtQHead   Ptr(31),   /* Page Write task queue head  @DEA*/         
*      7 OcvtPWrtQHeadInv Bit(1), /* Page Write task queue is invalid           
*                                    if this bit is set          @DEA*/         
*    5 OcvtStackCpid   Ptr(31),   /* VDAC exits cpool stack      @DEA*/         
*    5 OcvtVexitWkElOrig Ptr(31), /* VDAC exits free work element               
*                                    origin addr (in common)     @DEA*/         
*  /* Task BPXPRITR communication area                               */         
*  3 OcvtItrsEcb        Fixed(32),    /* BPXPRITR task ecb       @EUA*/         
*  3 OcvtItrsRSPQ       Ptr(31),      /* queue head for respawns @EUA*/         
*  3 OcvtItrsEnvPtr     Ptr(31),      /* pointer to env vars     @EUA*/         
*  3 OcvtItrsKser       Ptr(31),      /* KSER addr for PRITR task@EUA*/         
*                                                                               
*  3 OcvtPendingBaebsAnchor Ptr(31), /* Anchor for chain of freed Baeb          
*                                    cell storage extents that could            
*                                    not be storage released due to             
*                                    the possiblity that there may be           
*                                    a FORK still pending for one or            
*                                    more of the Baebs contained in             
*                                    the exent.                  @DIA*/         
*  3 OcvtKtim         Ptr(31),    /* Kernel Timer Anchor         @DJC*/         
*  3 OcvtMiFrr        Ptr(31),    /* Addr. of BPXMIFRR           @DKC*/         
*  3 OcvtSuperUser    Char(8),    /* Name of super user root     @DLA*/         
*  3 OcvtSuperUserLen Fixed(8),   /* Length of OcvtSuperUser     @DLA*/         
*  3 OcvtKernelState  Fixed(8),   /* State of kernel             @EGA*/         
*  3 OcvtBRET         Char(2),    /* BR 14                       @POA*/         
*  3 OcvtMiDfr        Ptr(31),    /* Addr. of BPXMIDFR - disabled FRR           
*                                                                @DJA*/         
*  3 OcvtMiDqt        Ptr(31),    /* Addr. of BPXMIDQT - cancel Kernel          
*                                    DIE routine                 @DJA*/         
*  3 OcvtGyvio        Ptr(31),    /* Addr. of BPXGYVIO           @DEA*/         
*  3 OcvtGypfr        Ptr(31),    /* Addr. of BPXGYPFR           @DEA*/         
*  3 OcvtGypfw        Ptr(31),    /* Addr. of BPXGYPFW           @DEA*/         
*  3 OcvtOvrShrLibRgn    Fixed(32), /* Number of attempts to exceed             
*                                      maximum storage amount for               
*                                      shared library region     @EBC*/         
*  3 OcvtOvrQueuedSigs   Fixed(32), /* Number of attempts to exceed             
*                                      maximum number of queued                 
*                                      signals                   @EBC*/         
*  3 OcvtBPXJ    Char(24) BDY(WORD), /* Define addresses of                     
*                                    syscall layer (BPXJ...) modules            
*                                    and labels for use by BPXJCSS              
*                                    which resides in BPXINPVT   @PAA*/         
*    5 OcvtJCPRD      Ptr(31),    /* Ptr to dynamic area size for               
*                                    BPXJCPR                     @PAA*/         
*    5 OcvtJCPRS      Ptr(31),    /* Approx. starting addr of BPXJCPR,          
*                                    used to determine if the PC call           
*                                    originated from BPXJCPR     @PAA*/         
*    5 OcvtJCPRE      Ptr(31),    /* Approx. end addr of BPXJCPR,               
*                                    used to determine if the PC call           
*                                    originated from BPXJCPR     @PAA*/         
*    5 OcvtJCPRO      Fixed(31),  /* Offset of the USTA area within             
*                                    the BPXJCPR dynamic storage. Used          
*                                    to initialize USTA header   @PAA*/         
*    5 OcvtJCPRU      Fixed(31),  /* Offset of the Dynamic Storage              
*                                    In-use flag within the BPXJCPR             
*                                    dynamic storage. Used to USTA              
*                                    field UstaDynStgInUsePtr    @PAA*/         
*    5 OcvtJSLCT      Ptr(31),    /* Ptr to Syscall Layer Control               
*                                    Table                       @PAA*/         
*  3 OcvtPC4       Ptr(31),       /* PC4 (BPXJCSSX PC number)    @PAA*/         
*  3 OcvtJcpcCpid  Fixed(32),     /* CPOOL id of the dynamic storage            
*                                    stack obtained in BPXJIT    @PAA*/         
*  3 OcvtShrPageCnt   Fixed(32),  /* Count of pages in the system that          
*                                    are currently in a shared                  
*                                    relationship                @DNA*/         
*  /*************************************************************@FFC*/         
*  /* Although OCVTMaxShrPAges is set from the parmlib limit it is   */         
*  /* no longer enforced in that we do not track USS wide shared     */         
*  /* page usage                                                     */         
*  /******************************************************************/         
*  3 OcvtMaxShrPages Fixed(32),   /* Maximum # pages in the system that         
*                                    can currently be in a shared               
*                                    relationship                @DNA*/         
*  3 OcvtOvrShrPages Fixed(32),   /* Number of time MAXSHAREPAGES               
*                                    parmlib limit has been exceeded            
*                                    since last IPL              @DNA*/         
*  3 OcvtResToken     Fixed(32),  /* Resource Manager Token for EOM             
*                                                                @DOM*/         
*  3 OcvtUtab         Ptr(31),    /* Pointer to BPXZUTAB         @PDA*/         
*  3 OcvtRIMAscb   Ptr(31),       /* Ptr to ASCB of address space where         
*                                    RIM is running (Master's or                
*                                    started proc's if started                  
*                                    internally)                 @DPC*/         
*  3 OcvtPC5       Ptr(31),       /* PC5 (BPXJCSXE PC number)    @FBC*/         
*  3 OcvtKernelStwa Ptr(31),      /* Ptr to STWA for Kernel      @DPC*/         
*  3 OcvtEcbInt   Fixed(32),      /* ECB for Internal Restart    @DPC*/         
*  3 OcvtEcbRestart Ptr(31),      /* Ptr to Internal ECB         @DPC*/         
*  3 OcvtRestartAscb  Ptr(31),    /* Ascb address of BPXSTART    @DPC*/         
*  3 OcvtEcbCommand    Ptr(32),   /* ECB for command issuing     @DQA*/         
*    5 *                bit(8),   /*                             @DQA*/         
*    5 OcvtEcbCommandPC bit(24),  /* ECB Post code - identifies                 
*                                    who posted BPXOTASK         @DQA*/         
*  3 OcvtEcbProcessing Ptr(32),   /* ECB for command processing  @DQA*/         
*  3 OcvtSnidCellPoolToken Ptr(31),  /* Token for ARQ cell pool  @E5C*/         
*  3 OcvtFhCDS   Char(8) Bdy(DWORD), /* Fork header queue control               
*                                    area (updated via CDS)      @DRA*/         
*    5 OcvtFhFreePtr  Ptr(31),    /* Ptr to free queue of BPXZFH fork           
*                                    header work areas. Requires use            
*                                    of ALET of BPXZFH to access @DRA*/         
*    5 OcvtFhCnt      Fixed(16),  /* Count of allocated fork cells              
*                                                                @DRA*/         
*    5 OcvtFhSeqNum   Fixed(16),  /* Sequence number used in CDS                
*                                    (incremented whenever a fork               
*                                    work area is added or removed              
*                                    from OcvtFhFreePtr queue)   @DRA*/         
*  3 OcvtTimerArea  Bdy(Word),    /* Kernel timer area           @DSA*/         
*    5 OcvtTimerCtl Bit(32) Bdy(Word), /* Kernel timer control flags            
*                                    (used by ESCON support).                   
*                                    Updated with CS.            @DSA*/         
*      7 OcvtTimerFlgs  Bit(8),   /* 1=Kernel timer flags        @DSA*/         
*        9 OcvtTimerReview Bit(1), /* 1=A review is in progress to              
*                                    decide whether to block buffers            
*                                    for I/O or not              @DSA*/         
*        9 OcvtTimerIssued Bit(1), /* 1=Kernel timer has been                   
*                                    established via BPXXKTIM                   
*                                    macro                       @DSA*/         
*      7 *              Char(1),  /* Spare                       @DSA*/         
*      7 OcvtBlkWrtCnt Fixed(15), /* Total count of the number of               
*                                    "blocked" writes, i.e. buffered            
*                                    but not physically written  @DSA*/         
*    5 OcvtTimerIdleCnt Fixed(8), /* Number of consecutive times the            
*                                    kernel timer expired and there             
*                                    was no data written out     @DSA*/         
*    5 *            Char(3),      /* Spare                       @DSA*/         
*  3 OcvtPC6       Ptr(31),       /* PC6 (BPXJSRB  PC number)    @PEA*/         
*  3 OcvtFastA      Ptr(31),      /* Ptr to BPXZFAST "A" Section @DSA*/         
*  3 OcvtDomidReIPL Fixed(32),    /* DomId for reIPL message     @PFA*/         
*  3 OcvtZfsAsid        Fixed(16),/* ASID of ZFS Colony PFS      @PSA*/         
*  3 *                  Fixed(16),/* reserved                        */         
*  3 OcvtPC7       Ptr(31),       /* PC7 (BPXUISSR PC number)    @DUA*/         
*  3 OcvtUiTimerArea Bdy(Word),   /* Kernel timer area           @DUA*/         
*    5 OcvtUiTimerCtl Bit(32) Bdy(Word), /* Kernel timer control flags          
*                                    (used by ESCON support).                   
*                                    Updated with CS.            @DUA*/         
*      7 OcvtUiTimerFlgs Bit(8),  /* 1=Kernel timer flags        @DUA*/         
*        9 OcvtUiTimerReview Bit(1), /* 1=A review is in progress to            
*                                    decide whether to block buffers            
*                                    for I/O or not              @DUA*/         
*        9 OcvtUiBlockActive Bit(1), /* 1=UDP blocking is active                
*                                    (set on when blocking factor               
*                                    is greater than 1)          @DZA*/         
*      7 OcvtUiTimerFlgs2 Bit(8), /* 1=Kernel timer flags 2      @DUA*/         
*        9 OcvtUiToggle      Bit(1), /* 1=Toggle bit. Used by                   
*                                    BPXMIDIE to control some events            
*                                    every other time            @DZA*/         
*      7 OcvtUiTimerFlgs3 Bit(8), /* 1=Kernel timer flags 3      @DUA*/         
*        9 OcvtUiBlkWrt      Bit(1), /* 1="blocked" write issued.               
*                                    The write is buffered                      
*                                    but not physically written.                
*                                    OcvtUiBlkWrt should be on                  
*                                    separate byte as OcvtUiToggle              
*                                                                @DZA*/         
*      7 *              Char(1),  /* Spare                       @DZC*/         
*    5 OcvtUiTimerIdleCnt Fixed(8), /* Number of consecutive times the          
*                                    kernel timer expired and there             
*                                    was no data written out     @DUA*/         
*    5 *            Char(3),      /* Spare                       @DUA*/         
*  3 OcvtUiwrA      Ptr(31),      /* Ptr to BPXZUIWR "A" Section @DUA*/         
*  3 OcvtUiwrWCds   Char(8) Bdy(DWord), /* WARM Buffer chain     @DUA*/         
*  3 OcvtMpcCpid    Ptr(31),      /* CPOOL ID for MPC            @DUA*/         
*  3 OcvtColonyAsidLPtr Ptr(31),  /* Ptr to colony ASID list     @05A*/         
*  3 OcvtVExitWkElCDS  Char(8)   Bdy(DWord),                                    
*    5 OcvtVexitWkEl   Ptr(31),   /* Free work elements - head   @04M*/         
*    5 OcvtVexitWkelIx Fixed(32), /* Free work elements - index  @04A*/         
*  3 OcvtSysThdHighWater Fixed(32),/* Thread use high water maerk@F7C*/         
*  3 OcvtMaxTotalThreads Fixed(32),/* Total max threads allowed  @F7C*/         
*  3 OcvtPPRXCadsQPool Char(8) Bdy(Dword), /* PPRX Cads quick pool              
*                                    anchor                      @DWA*/         
*  3 OcvtBaebQpool Char(8) Bdy(Dword),/* Baeb quick pool anchor  @DWA*/         
*  3 OcvtPPRXCellPoolToken Ptr(31), /* Token for PPRX cell pool  @DWA*/         
*  3 OcvtJcprR        Ptr(31),    /* Ptr to the BPXJCPRR return label           
*                                    within BPXJCPR.  Used by signals           
*                                    as return spot to goto SIR. @DVA*/         
*  3 OcvtDieCpid        Fixed(32), /* CPOOL id for pool of Die                  
*                                   dynamic storage stacks       @F9A*/         
*  3 OcvtJcpcCpid2 Fixed(32),     /* CPOOL id of the small sized                
*                                    dynamic storage stack obtained             
*                                    in BPXJIT                   @F6A*/         
*  3 OcvtOapbCellPoolToken Ptr(31), /* OAPB storage manager tok  @DYA*/         
*  3 OcvtOasbCellPoolToken Ptr(31), /* OASB stroage manager tok  @DYA*/         
*  3 OcvtOapbQPool Char(8) Bdy(Dword),/* Oapb quick pool anchor  @E1A*/         
*  3 OcvtOasbQPool Char(8) Bdy(Dword),/* Oasb quick pool anchor  @E1A*/         
*  3 OcvtStwaQPool Char(8) Bdy(Dword),/* Stwa quick pool anchor  @E1A*/         
*  3 OcvtStwaCellPoolToken Ptr(31), /* STWA storage manager tok  @DYA*/         
*  3 OcvtSltb              Ptr(31), /* Sltb address              @E2A*/         
*  3 OcvtDomidForkShutdown Fixed(32),/*Domid for forks shutdown  @E3A*/         
*  3 OcvtSdDomId      Fixed(32),  /* Dom ID for startup diagnostic              
*                                    message                     @E4A*/         
*  3 OcvtSdTEI        Fixed(31),  /* Number of times the start up               
*                                    diagnostic timer has run    @E4A*/         
*  3 OcvtJCPRC        Ptr(31),    /* Ptr to the BPXJCPRC label within           
*                                   BPXJCPR. Used by socket ID change           
*                                   as PR target from BPXJCSE    @E5A*/         
*  3 OcvtECBShutdown  Fixed(32),  /* ECB for shutdown processing @E3A*/         
*  3 OcvtSdStageInfo Fixed(16),   /* Stage information           @E4A*/         
*    5 OcvtSdSubStage Fixed(8),   /* Sub-stage number            @E4A*/         
*    5 OcvtSdStage  Fixed(8),     /* Stage number                @E4A*/         
*  3 OcvtSdStageInfoPrev Fixed(16), /* Stage information - previous             
*                                                                @E4A*/         
*    5 OcvtSdSubStagePrev Fixed(8), /* Sub-stage number          @E4A*/         
*    5 OcvtSdStagePrev Fixed(8),  /* Startup diagnostics stage active           
*                                    at previous timer exit processing          
*                                                                @E4A*/         
*  3 OcvtSnidQpool    Char(8) Bdy(Dword), /* Snid QPOOL anchor   @E5A*/         
*  3 OcvtPpsqCellPoolToken Ptr(31), /* Token For Ppsq Cell Pool  @E8A*/         
*  3 OcvtJCPRQ        Ptr(31),    /* Label in CPR for SPB        @E9A*/         
*  3 OcvtCurShrLibRgn Fixed(32), /* Current amount of shared library            
*                                   storage allocated in MBytes  @EBC*/         
*  3 OcvtInitOapbPtr  Ptr(31),    /* Init process Oapb pointer   @ECC*/         
*  3 OcvtShrLibRgnHigh Fixed(31), /* Highwater usage of shared                  
*                                    library region size.        @EDA*/         
*  3 OcvtPtysCurrent     Fixed(31), /* Current count of ptys     @EDA*/         
*  3 OcvtRestartInfo Char(08) Bdy(Dword), /* USS Restart                        
*                                      processing information    @EGA*/         
*    5 OcvtRestartCounts Bdy(word), /* Number of blockers and permanent         
*                                      process                   @EGA*/         
*      7 OcvtRestartBlockCount Fixed(15), /* Blocker count       @EGA*/         
*      7 OcvtRestartPermCount Fixed(15), /* Permanent count      @EGA*/         
*    5 OcvtRestartSerialWord Bdy(word), /* Serialization word    @EGA*/         
*      7 OcvtRestartFlags Bit(8), /*                             @EGA*/         
*        9 OcvtKernelShutDown Bit(1), /* On = Kernel in SHUTDOWN                
*                                                                @EGA*/         
*        9 OcvtShutDownDisable Bit(1), /* On = Kernel not allowed to            
*                                      enter SHUTDOWN            @EGA*/         
*      7 OcvtRestartSequenceNum Fixed(24), /*                    @EGA*/         
*  3 OcvtLP64CellPoolToken Ptr(31), /* Token for LP64 cell pool  @EEA*/         
*  3 OcvtEcbCDS  Fixed(32),         /* ECB used in CDS switch.  It is           
*                                      posted by BPXMCDSF and cleared           
*                                      by BPXFTCLN.              @EHA*/         
*  3 OcvtALIS            Ptr(31),   /* Ptr to BPXZALIS           @EJA*/         
*  3 OcvtCelExitListPtr  Ptr(31), /* Fork LE exit list ptr       @EIA*/         
*  3 OcvtPECBCellPoolToken Ptr(31), /* Token For PECB Cell Pool  @ELA*/         
*  3 OcvtRestartCount    Fixed,     /* Number of restarts        @EUM*/         
*  3 OcvtPFltPET  Char(16) BDY(WORD), /* Page Fault Pause Element Token         
*                                      (PET) which identifies a pause           
*                                      element used to synchronize              
*                                      mmap page fault processing               
*                                                                @EOA*/         
*  3 OcvtPWrtPET  Char(16) BDY(WORD), /* Page Write Pause Element Token         
*                                      (PET) which identifies a pause           
*                                      element used to synchronize              
*                                      mmap page write processing               
*                                                                @EOA*/         
*  3 OcvtUpdPFltPET Char(16) BDY(WORD), /* Updated Page Fault PET               
*                                                                @EOA*/         
*  3 OcvtUpdPWrtPET Char(16) BDY(WORD), /* Updated Page Write PET               
*                                                                @EOA*/         
*  3 OcvtLengths,                   /* dynamically set lengths   @EPA*/         
*    5 OcvtKserLen        Fixed(16),/*                           @EPa*/         
*    5 OcvtOasbLen        Fixed(16),/* oasb+cof                  @EPa*/         
*    5 OcvtOasbOnlyLen    Fixed(16),/* only oasb                 @EPa*/         
*    5 OcvtOapbLen        Fixed(16),/* oapb+cof                  @EPa*/         
*    5 OcvtOapbOnlyLen    Fixed(16),/* only oapb                 @EPa*/         
*    5 OcvtOtcbLen        Fixed(16),/* otcb+cof                  @EPa*/         
*    5 OcvtOtcbOnlyLen    Fixed(16),/* only otcb                 @EPa*/         
*    5 OcvtPprpLen        Fixed(16),/* pprp+cof                  @EPa*/         
*    5 OcvtPprpOnlyLen    Fixed(16),/* only pprp                 @EPa*/         
*    5 OcvtPprtLen        Fixed(16),/* pprt stub only            @F1C*/         
*    5 OcvtPrliLen        Fixed(16),/*                           @EPa*/         
*    5 OcvtThliLen        Fixed(16),/*                           @EPa*/         
*    5 OcvtPprxLen        Fixed(16),/*                           @EPa*/         
*    5 OcvtPpsdLen        Fixed(16),/*                           @EPa*/         
*                                                                               
*  3 OcvtDomidDubWait Fixed(32),    /* DomId for Dubs waiting msg@EQA*/         
*  3 OcvtDubWaitCount Fixed(31),    /* Count of dubs waiting     @EQA*/         
*  /* Information for Kerenl data space used for contents supervisor */         
*  /* fork exit when loading large loadlibs                          */         
*  3 OcvtC2DSStoken           Char(8),                        /* @03A*/         
*  3 OcvtC2DSAddr             Ptr(31),                        /* @03A*/         
*  3 OcvtC2DSAlet             Fixed(32),                      /* @03A*/         
*  3 OcvtC2DSCellPoolToken    Ptr(31),                        /* @03A*/         
*  3 OcvtLatchContDomID Fixed(32),  /* Dom ID for Latch Contention              
*                                    message                     @ERA*/         
*  3 OcvtN64p             Ptr(31),  /* Address of N64p - list of                
*                                      number of parms for Amode 64             
*                                      syscalls                  @PQA*/         
*  3 OcvtHighForkArea   Fixed(32),                            /* @03A*/         
*  3 OcvtStmt                 Ptr(31),                        /* @ETA*/         
*                                                                               
*  3 OcvtCBTRACE,                                                               
*    5 Ocvt_CBTRCBID         CHAR(4),                         /*@ESA*/          
*                                                                               
*    5 Ocvt_CBTROFFSET       FIXED(16),                       /*@ESA*/          
*    5 Ocvt_CBTRLENGTH       FIXED(16),                       /*@ESA*/          
*    5 Ocvt_CBTRSEQMUM,                                       /*@ESA*/          
*      7 Ocvt_CBTRCBID_SEQ   Fixed(8),                        /*@ESA*/          
*      7 Ocvt_CBTROFFSET_SEQ Fixed(8),                        /*@ESA*/          
*      7 Ocvt_CBTRLENGTH_SEQ Fixed(8),                                          
*  3 * Char(01),                    /* reserved                  @ETC*/         
*  3 OcvtLp2LoadAddr Ptr(31),  /* Load addr of BPXINLP2 load mod @ETA*/         
*  3 OcvtLp2EndAddr  Ptr(31),  /* End addr of BPXINLP2 load mod  @ETA*/         
*  3 OcvtFsctNumPerCell  Fixed(31), /* Number of FSCTs per cell  @EXA*/         
*  3 OcvtFsctLen         Fixed(31), /* Length of an FSCT, at least              
*                                      large enough to contain the              
*                                      file system SMF counters and             
*                                      then rounded up to a cache               
*                                      line boundary             @EXA*/         
*  3 OcvtFsctCellPoolToken Ptr(31), /* FSCT cell pool token      @EXA*/         
*  3 OcvtFsctQPool Char(8) Bdy(Dword),/* Fsct quick pool anchor  @EXA*/         
*  3 OcvtJcpcCpid1 Fixed(32),     /* CPOOL id of the medium sized               
*                                    dynamic storage stack obtained             
*                                    in BPXJIT                   @EYA*/         
*  3 OcvtDstk      Ptr(31),         /* Address of DSTK, dynamic                 
*                                      stack size by syscall indicator          
*                                                                @EYA*/         
*  3 OcvtFlgs2  Bit(32),            /* Flags                     @06A*/         
*    5 OcvtExtendedLockTracing Bit(1),/* Do extended tracing in                 
*                                      kernwait and user kernwait               
*                                                                @06A*/         
*    5 OcvtKernelStackOverlay Bit(1),    /*                      @F3A*/         
*                                                                               
*    5 OcvtFsDisabled Bit(1),       /* Disable fast path socket  @F4A*/         
*      /*  This bit is normally OFF.  When ON, fast path sockets are            
*          disabled.  This bit is only meant to be set ON via a SLIP            
*          trap if fast path sockets needs to be shut down.      @F4A*/         
*    5 OcvtPrivPathOK      Bit(1),  /* BPX.PRIVPATHOK profile defined           
*                                                                @07A*/         
*    5 OcvtTimerDiag          Bit(1),    /* Timer Diag on        @F9A*/         
*    5 OcvtTimerCBrdy         Bit(1),    /* Timer Diag CBs rdy   @F9A*/         
*    5 OcvtMrsetAttached Bit(1),    /* Sysexit table attached    @FBA*/         
*    5 OcvtKVdacInit  Bit(1),       /* Mmap KernVDAC initialized @FEA*/         
*    5 *           Bit(24),         /* Available                 @FEC*/         
*  3 OcvtJCPRF     Ptr(31),         /* Subrtn in BPXJCPC         @EZA*/         
*  3 OcvtJCPRN     Ptr(31),         /* Subrtn in BPXJCPC         @EZA*/         
*  3 OcvtNSASY     Ptr(31),         /* EPA for BPXNSASY          @EZA*/         
*  3 Ocvt64Anchor  Char(8) Bdy(Dword),   /* Anchor for the OMVS                 
*                                   above-the-bar information    @F0A*/         
*    5 OcvtOcvg    Ptr(64),         /* Address of the OCVG       @F0A*/         
*  3 OcvtLengths2,                  /* additional CB lengths     @F1A*/         
*    5 OcvtPprtTotalLen   Fixed(16),/* pprt + pprtg              @F1A*/         
*    5 OcvtPprtGLen       Fixed(16),/* pprt (above bar section)  @F1A*/         
*    5 OcvtKserGLen       Fixed(16),/* kserg (above the bar)     @FAC*/         
*    5 *                  Fixed(16),/* reserved                  @F1A*/         
*  3 OcvtKernelStgData,  /* Kernel private storage information, used            
*                         by USS HealthChecks and D OMVS,STORAGE @F2A*/         
*    5 OcvtSysStksInUse     Fixed(32),/* System wide count of kernel            
*                                   stack cells currently in use @F2A*/         
*    5 OcvtSysStkHighWater  Fixed(32), /* High water mark for kernel            
*                           stack cells usage (OcvtSysStksInUse) @F2A*/         
*    5 OcvtPvtStgMax        Fixed(32),/* 20% of unallocated kernel stg          
*                                    before building stack CPOOL @F2A*/         
*    5 OcvtPvtStgCurrent    Fixed(32),/* Current amount of OcvtStgMax           
*                                        that has been allocated @F2A*/         
*    5 OcvtPvtStgHighWater  Fixed(32),/* High water mark for kernel             
*                 non-stack storage usage (OcvtNonStkStgCurrent) @F2A*/         
*    5 OcvtPvtStgRegionSize Fixed(32),/* Kernel private region size             
*                                                                @F2A*/         
*  3 OcvtStackOverlayTOD Char(8),   /* Stack overlay TOD (STCKE) @FCC*/         
*  3 OcvtStackOverlayCnt Fixed(31), /* Stack overlay count       @F3A*/         
*  3 OcvtJCPCStackSize   Fixed(31), /* JCPC stack size to be used               
*                                   for stack overflow check.    @F3A*/         
*  3 OcvtAboveBarDynStackCP64Token Char(8), /* Above the bar dynamic            
*                                   stack CP64 cell pool token   @F5A*/         
*  3 OcvtDieQCntCap Fixed(16),   /* waitq cnt that triggers new                 
*                                   DIE to be launched           @F9A*/         
*  3 OcvtNumDIEs        Fixed(16),/* Number of kernel timer DIEs @F9A*/         
*  3 OcvtPvtStgTotal Fixed(32),  /* Total used private storage   @F7A*/         
*  3 OcvtPpsqDSAddr Ptr(31),     /* Address of the start of the Ppsq            
*                                   dataspace 'SYSZBPX18'        @F8A*/         
*  3 OcvtPpsqDSAlet Fixed(32),   /* ALET of the Ppsq dataspace   @F8A*/         
*  3 OcvtPpsqDSStoken Char(8),   /* STOKEN of the Ppsq dataspace @F8A*/         
*  3 OcvtPpsqMasterCellPoolToken Ptr(31), /* Token for master Ppsq              
*                                   cells                        @F8A*/         
*  3 OcvtCTRA64CP64Token Char(8),/* CPool token for CTR64 stack  @PVA*/         
*  3 OcvtEtab      Ptr(31),        /* Pointer to BPXZETAB        @FBA*/         
*  3 OcvtJcst@     Ptr(31),    /* Address of BPXJCST             @FBA*/         
*  3 OcvtJCPRX     Ptr(31),    /* Address of the BPXJCPRX subroutine in         
*                                 BPXJCPR. It is used for syscall exits         
*                                 when a pre-syscall exits fails a              
*                                 non-fastpath syscall           @FBA*/         
*  3 OcvtJcstEnd@  Ptr(32),      /* Address of last byte of BPXJCST             
*                                                                @FBA*/         
*  3 OcvtForkC16MSeq Fixed(32),  /* Count of times 16M FH used   @09A*/         
*                                /*  as main FH area (RAS only)      */         
*  3 OcvtKrtPET  Char(16) BDY(WORD), /* Page Fault Pause Element Token          
*                                      (PET) which identifies a pause           
*                                      element used to synchronize              
*                                      mmap page fault processing               
*                                                                @FEA*/         
*  3 OcvtKwtPET  Char(16) BDY(WORD), /* Page Write Pause Element Token          
*                                      (PET) which identifies a pause           
*                                      element used to synchronize              
*                                      mmap page write processing               
*                                                                @FEA*/         
*  3 OcvtUpdKrtPET Char(16) BDY(WORD), /* Updated Page Fault PET @FEA*/         
*  3 OcvtUpdKwtPET Char(16) BDY(WORD), /* Updated Page Write PET @FEA*/         
*  3 OcvtKrtQHead   Ptr(31),    /* Kern Page Fault queue head    @FEA*/         
*    5 OcvtKrtQHeadInv Bit(1),  /* Kern Fault task queue is invalid             
*                                    if this bit is set          @FEA*/         
*  3 OcvtKwtQHead   Ptr(31),   /* Page Write task queue head     @FEA*/         
*    5 OcvtKwtQHeadInv Bit(1), /* Page Write task queue is invalid              
*                                    if this bit is set          @FEA*/         
*  3 *           Char(208),      /* Available                    @FEC*/         
*  3 * Char(0) Bdy(Dword);       /* Ensure CB ends on DWORD boundary */         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Constants used to set OcvtTermLevel, the Ocvt field              */         
*/* used to track the progress of kernel termination.                */         
*/*                                                                  */         
*/********************************************************************/         
*Dcl                                                                            
*  Ocvt#TermLWait  Fixed(31) Constant(1), /* Waiting for syscalls to            
*                                            exit after new entries             
*                                            are blocked.        @P8A*/         
*  Ocvt#TermLShootWaiters                                                       
*                  Fixed(31) Constant(2), /* Threads in kernwait are            
*                                            being shot and then                
*                                            waiting for syscalls to            
*                                            exit.               @P8A*/         
*  Ocvt#TermLShootAll                                                           
*                  Fixed(31) Constant(3), /* All dubbed non-permanent           
*                                            processes are being shot           
*                                                                @EGA*/         
*  Ocvt#TermLChkBlockers                                                        
*                  Fixed(31) Constant(4), /* Check for Blocking Jobs            
*                                            and processes in progress          
*                                                                @EGA*/         
*  Ocvt#TermLChkPtPerm                                                          
*                  Fixed(31) Constant(5), /* In kernel Checkpoint               
*                                            processing          @EGA*/         
*  Ocvt#TermLTermInitProc                                                       
*                  Fixed(31) Constant(6), /* In Init Process                    
*                                            Termination processing             
*                                                                @EGA*/         
*  Ocvt#TermLLFSUnMount                                                         
*                  Fixed(31) Constant(7), /* In LFS Unmount                     
*                                            processing          @EGA*/         
*  Ocvt#TermLSysplex                                                            
*                  Fixed(31) Constant(8), /* In SYSPLEX cleanup                 
*                                            processing          @EGA*/         
*  Ocvt#TermLCleanKernel                                                        
*                  Fixed(31) Constant(9), /* In Kernel Subcomponent             
*                                            cleanup processing  @EGA*/         
*  Ocvt#TermLInFileSysTerm                                                      
*                  Fixed(31) Constant(10),/* FileSys termination is             
*                                            starting            @P8A*/         
*  Ocvt#TermLFileSysTermDone                                                    
*                  Fixed(31) Constant(11),/* FileSys termination is             
*                                            finished            @P8A*/         
*  Ocvt#TermLCleanStorage                                                       
*                  Fixed(31) Constant(12),/* Cleaning up kernel storage         
*                                            and data spaces     @P8A*/         
*  Ocvt#TermLKernelTask                                                         
*                  Fixed(31) Constant(13),/* In kernel task term                
*                                            resmgr              @P8A*/         
*  Ocvt#TermLKernelMem                                                          
*                  Fixed(31) Constant(14),/* In kernel mem term                 
*                                            resmgr              @P8A*/         
*  Ocvt#TermLSysplex2                                                           
*                  Fixed(31) Constant(15);/* In SYSPLEX cleanup                 
*                                            processing Part 2   @PYA*/         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Constants used to set OcvtKernelState, the Ocvt used to track    */         
*/* the status of shutdown processing.                               */         
*/*                                                                  */         
*/********************************************************************/         
*   DECLARE                                                                     
*     Ocvt#ShutDownStarting fixed Constant(1), /* Shutdown processing           
*                                      is starting               @EGA*/         
*     Ocvt#ShutDownComp     fixed Constant(2), /* Shutdown processing           
*                                      is starting               @EGA*/         
*     Ocvt#RestartStarting  fixed Constant(3), /* Restart processing            
*                                      is starting               @EGA*/         
*     Ocvt#Neutral          fixed Constant(0); /* Setting implies               
*                                      state not active          @EGA*/         
*                                                                               
*/********************************************************************/         
*/* Some control block sizes are maintained in the ocvt and are      */         
*/* available during runtime.  These runtime sizes are then used     */         
*/* to calculate various buffer sizes for the control blocks.        */         
*/* IPCS modules use the scheme of attempting to retrieve the size of*/         
*/* the ocvt control block field sizes from the ocvt in the dump.    */         
*/* Failing that,  the ocvt control block field sizes from the       */         
*/* running system are used. Failing that---a maximum sized constant */         
*/* is used.                                                         */         
*/*                                                                  */         
*/* It is necessary to go to all this trouble: In service and test it*/         
*/* is possible to have this level of IPCS code running on a back-   */         
*/* level system, looking at a back-level dump.                      */         
*/*                                                                  */         
*/* To handle these contingencies,  a couple of new constants need   */         
*/* to be introduced.  For the instance where the size will be taken */         
*/* from the running system, the EXTRA field is used.  This will     */         
*/* attempt to take care of any discrepancy between the size of the  */         
*/* control block on the running system and the one you are trying to*/         
*/* work with.  A little bit extra is added because to handle the    */         
*/* possible mismatches from release to release. Although most of the*/         
*/* time it would be reasonable to assume that the current running   */         
*/* system size is sufficient (we always grow the contorl blocks, so */         
*/* the size should be smaller in all prior releases), it is         */         
*/* considered possible that a prior release could have a LARGER size*/         
*/* than the running system due to an APAR being installed.          */         
*/*                                                                  */         
*/* The MAXIMUMBLOCK-SIZE constant is added to be used as a last     */         
*/* ditch effort to define the sizes of the control block buffer.    */         
*/* The value for this constant has been determined to be the max    */         
*/* size of the (kser, oasb, oapb, otcb, pprp, pprt, prli, thli,     */         
*/* pprx, or ppsd) sizes in release 1.5.                             */         
*/* The maximum size is currently held by the ppsd.              @EPA*/         
*/********************************************************************/         
*Dcl                                                                            
*   Ocvt#EXTRA            Fixed(32) Constant(256),                              
*   Ocvt#MAXIMUMBLOCKSIZE Fixed(32) Constant (672);                             
*                                                                               
*Dcl                                                                            
*  Ocvt#ID     Char(4)   Constant('OCVT'), /* Control Block Acronym  */         
*  Ocvt#LEN    Fixed(24) Constant(Length(Ocvt)), /* Length of OCVT   */         
*  Ocvt#SP     Fixed(08) Constant(245); /* Subpool for the OCVT  @PAC*/         
*  ?ASAADMAC NAME(BPXZOCVE) LISTOPT(NO);                      /* @EGA*/         
