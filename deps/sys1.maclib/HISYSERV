*                                                                       00001000
* %DCL HISYSERV_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE HISYSERV_INCLUDED;                                        00003000
* %IF HISYSERV_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 18159. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         HISYSERV &DSECT=YES,&LIST=YES,&TITLE=YES,&HisAns=YES,         *00009000
               &HisArrayDesc=COND,&HisEvnTyp=COND,&HisSmpTyp=COND,     *00010000
               &HisProf=COND,&HisProfEntry=COND,&HisSmp=COND,          *00011000
               &HisSmpFacil=COND,&HisSmpFmtEntry=COND,&HisEvn=COND,    *00012000
               &HisEvnCtr=COND,&HisEvnData=COND,&HisEvnCpuEntry=COND,  *00013000
               &HisEvnCtrCpuEntry=COND,&HisCtrEntry=COND                00014000
                      GBLC  &HISYSERV_INCLUDED                          00015000
                      GBLC  &ZCBPRINT                                   00016000
&HISYSERV_INCLUDED    SETC  'YES'                                       00017000
                      AIF   ('&LIST' EQ 'NONE').P0                      00018000
                      AIF   ('&TITLE' EQ 'NO').P5                       00019000
 TITLE                'HISYSERV  - HIS Service Information area        *00020000
                           '                                            00021000
.P5                   ANOP                                              00022000
**/ HISYSERV_1:;                                                        00023000
*/* START OF SPECIFICATIONS******************************************** 00024000
*                                                                       00025000
*01* MACRO NAME: HISYSERV                                               00026000
*                                                                       00027000
*01* DESCRIPTIVE NAME: HIS Service Information area                     00028000
*02*  ACRONYM: N/A                                                      00029000
*                                                                       00030000
*01* PROPRIETARY STATEMENT=                                           * 00031000
***PROPRIETARY_STATEMENT*********************************************** 00032000
*                                                                     * 00033000
*   LICENSED MATERIALS - PROPERTY OF IBM                              * 00034000
*   5650-ZOS COPYRIGHT IBM CORP. 2012, 2019                           * 00035000
*                                                                     * 00036000
*   STATUS= HBB77C0                                                   * 00037000
*                                                                     * 00038000
***END_OF_PROPRIETARY_STATEMENT**************************************** 00039000
*                                                                       00040000
*01* EXTERNAL CLASSIFICATION:                                           00041000
*02*   PI:    BASE                                                      00042000
*02*   NOTPI: FIELDS                                                    00043000
*             HisEvn_TrcOffset                                          00044000
*             HisEvn_TrcOffset32                                        00045000
*             HisEvnTyp_SysTrace                                        00046000
*01* END OF EXTERNAL CLASSIFICATION:                                    00047000
*                                                                       00048000
*01* DSECT NAME:                                                        00049000
*        HisAns                                                         00050000
*        HisArrayDesc                                                   00051000
*        HisEvnTyp                                                      00052000
*        HisSmpTyp                                                      00053000
*        HisProf                                                        00054000
*        HisProfEntry                                                   00055000
*        HisSmp                                                         00056000
*        HisSmpFacil                                                    00057000
*        HisSmpFmtEntry                                                 00058000
*        HisEvn                                                         00059000
*        HisEvnCtr                                                      00060000
*        HisEvnData                                                     00061000
*        HisEvnCpuEntry                                                 00062000
*        HisEvnCtrCpuEntry                                              00063000
*        HisCtrEntry                                                    00064000
*                                                                       00065000
*01* COMPONENT: Hardware Instrumentation Services (SCHIS)               00066000
*                                                                       00067000
*01* EYE-CATCHER:                                                       00068000
*        HisAns            -- N/A                                       00069000
*        HisArrayDesc      -- N/A                                       00070000
*        HisEvnTyp         -- N/A                                       00071000
*        HisSmpTyp         -- N/A                                       00072000
*        HisProf           -- 'HISP'                                    00073000
*        HisProfEntry      -- NONE                                      00074000
*        HisSmp            -- 'HISS'                                    00075000
*        HisSmpFacil       -- NONE                                      00076000
*        HisSmpFmtEntry    -- NONE                                      00077000
*        HisEvn            -- 'HISE'                                    00078000
*        HisEvnCtr         -- NONE                                      00079000
*        HisEvnData        -- 'HISD'                                    00080000
*        HisEvnCpuEntry    -- NONE                                      00081000
*        HisEvnCtrCpuEntry -- NONE                                      00082000
*        HisCtrEntry       -- NONE                                      00083000
*02*  OFFSET:  0                                                        00084000
*02*  LENGTH:  4                                                        00085000
*                                                                       00086000
*01* FUNCTION: Maps the data returned by the HISSERV REQUEST=QUERY      00087000
*              request. Provides the equates for HISSERV return and     00088000
*              reason codes.                                            00089000
*                                                                       00090000
*01* METHOD OF ACCESS:                                                  00091000
*                                                                       00092000
*02*   PL/X:                                                            00093000
*        %INCLUDE SYSLIB(HISYSERV)                                      00094000
*                                                                       00095000
*02*   ASM:                                                             00096000
*        HISYSERV                                                       00097000
*            DSECT=YES!NO               -- Request DSECT definition     00098000
*            HISANS=YES!NO!COND         -- Request HisAns DSECT         00099000
*            HISARRAYDESC=YES!NO!COND   -- Request HisArrayDesc DSECT   00100000
*            HISEVNTYP=YES!NO!COND      -- Request HisEvnTyp DSECT      00101000
*            HISSMPTYP=YES!NO!COND      -- Request HisSmpTyp DSECT      00102000
*            HISPROF=YES!NO!COND        -- Request HisProf DSECT        00103000
*            HISPROFENTRY=YES!NO!COND   -- Request HisProfEntry DSECT   00104000
*            HISSMP=YES!NO!COND         -- Request HisSmp DSECT         00105000
*            HISSMPFACIL=YES!NO!COND    -- Request HisSmpFacil DSECT    00106000
*            HISSMPFMTENTRY=YES!NO!COND -- Request HisSmpFmtEntry DSECT 00107000
*            HISEVN=YES!NO!COND         -- Request HisEvn DSECT         00108000
*            HISEVNCTR=YES!NO!COND      -- Request HisEvnCtr DSECT      00109000
*            HISEVNDATA=YES!NO!COND     -- Request HisEvnData DSECT     00110000
*            HISEVNCPUENTRY=YES!NO!COND -- Request HisEvnCpuEntry DSECT 00111000
*            HISEVNCTRCPUENTRY=YES!NO!COND -- Request                   00112000
*                                          HisEvnCtrCpuEntry DSECT      00113000
*            HISCTRENTRY=YES!NO!COND    -- Request HisCtrEntry DSECT    00114000
*                                                                       00115000
*     Default: DSECT=YES,HISANS=YES,HISARRAYDESC=COND,HISEVNTYP=COND,   00116000
*                 HISSMPTYP=COND,HISPROF=YES,HISPROFENTRY=COND,         00117000
*                 HISSMP=COND,HISSMPFACIL=COND,HISSMPFMTENTRY=COND,     00118000
*                 HISEVN=COND,HISEVNCTR=COND,                           00119000
*                 HISEVNDATA=COND,HISEVNCPUENTRY=COND,                  00120000
*                 HISEVNCTRCPUENTRY=COND,HISCTRENTRY=COND               00121000
*     Notes: name=YES  => expand                                        00122000
*            name=NO   => do not expand                                 00123000
*            name=COND => expand only if DSECT=YES                      00124000
*                                                                       00125000
*01* SIZE:                                                              00126000
*        HisAns            -- X'0018' bytes                             00127000
*        HisArrayDesc      -- X'0010' bytes                             00128000
*        HisEvnTyp         -- X'0004' bytes                             00129000
*        HisSmpTyp         -- X'0004' bytes                             00130000
*        HisProf           -- X'0028' bytes                             00131000
*        HisProfEntry      -- X'0028' bytes                             00132000
*        HisSmp            -- X'0038' bytes                             00133000
*        HisSmpFacil       -- X'0030' bytes                             00134000
*        HisSmpFmtEntry    -- X'0008' bytes                             00135000
*        HisEvn            -- X'0040' bytes                             00136000
*        HisEvnCtr         -- X'0088' bytes                             00137000
*        HisEvnData        -- X'0030' bytes                             00138000
*        HisEvnCpuEntry    -- X'0018' bytes                             00139000
*        HisEvnCtrCpuEntry -- X'0098' bytes                             00140000
*        HisCtrEntry       -- X'0008' bytes                             00141000
*                                                                       00142000
*01* POINTED TO BY:                                                     00143000
*        HisAns            -- HISSERV REQUEST=QUERY generic ANSAREA     00144000
*        HisArrayDesc      -- Used as part of other mappings            00145000
*        HisEvnTyp         -- Used as part of other mappings            00146000
*        HisSmpTyp         -- Used as part of other mappings            00147000
*        HisProf           -- HISSERV REQUEST=QUERY,TYPE=PROFILERS      00148000
*                             ANSAREA                                   00149000
*        HisProfEntry      -- HisProf_ProfArrayDesc                     00150000
*        HisSmp            -- HISSERV REQUEST=QUERY,TYPE=SAMPLE ANSAREA 00151000
*        HisSmpFacil       -- HisSmp_FacilOffset                        00152000
*        HisSmpFmtEntry    -- HisSmpFacil_SmpFmtArrayDesc               00153000
*        HisEvn            -- HISSERV REQUEST=QUERY,TYPE=EVENT ANSAREA  00154000
*        HisEvnCtr         -- HisEvn_CtrOffset                          00155000
*        HisEvnData        -- HISSERV REQUEST=QUERY,TYPE=EVENTDATA      00156000
*                             ANSAREA                                   00157000
*        HisEvnCpuEntry    -- HisEvnData_CpuArrayDesc                   00158000
*        HisEvnCtrCpuEntry -- HisEvnCpuEntry_CtrOffset                  00159000
*        HisCtrEntry       -- HisEvnCtrCpuEntry_CtrArrayDesc            00160000
*                                                                       00161000
*01* CREATED BY:                                                        00162000
*        Caller and passed as parameter on ANSAREA keyword on HISSERV   00163000
*        QUERY requests.                                                00164000
*                                                                       00165000
*01* DELETED BY:  Caller                                                00166000
*                                                                       00167000
*01* STORAGE ATTRIBUTES:                                                00168000
*02*   SUBPOOL:   Caller-supplied                                       00169000
*02*   KEY:       Caller-supplied                                       00170000
*02*   RESIDENCY: Caller-supplied                                       00171000
*                                                                       00172000
*01* FREQUENCY:  Created for response to HISSERV QUERY                  00173000
*                                                                       00174000
*01* SERIALIZATION:  None                                               00175000
*                                                                       00176000
*01* DEPENDENCIES:   None                                               00177000
*                                                                       00178000
*01* NOTES:                                                             00179000
*       o See individual mappings for use and meaning                   00180000
*       o For more information about the service see macro HISSERV      00181000
*                                                                       00182000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00183000
*                                                                       00184000
*01* CHANGE-ACTIVITY:                                                   00185000
*                                                                       00186000
* $L0=HISSERV HBB7790 110110 PDBS: HIS Extendability                    00187000
* $L1=HISTRC  HBB77A0 120101 PDBS: HIS System Trace Capture             00188000
* $P1=ME25626 HBB7790 130130 PDXB: HisSmpTyp_kNoSamp                    00189000
* $01=OA42388 HBB7790 130801 PDJA: HisProfEntryFlgs_Fail                00190000
* $L2=ZZSIM2  HBB77A0 130909 PD0AAA: HIS MT-diagnostic counter set      00191000
* $L3=ME27506 HBB77A0 140425 PD0AAA: HIS MT-diagnostic counter set bit  00192000
* $L4=ME28167 HBB77A0 141201 PDJA: HisEvnTrc                            00193000
* $02=OA43366 HBB7790 131029 PD0AAA: ZZSIM2 rollup                      00194000
* $L5=HDEXT   HBB77B0 170224 PD00NJ: commentary corrections             00195000
* $L6=zCBP    HBB77C0 180424 PD00NJ: zCBP                               00196000
*                                                                       00197000
****END OF SPECIFICATIONS*********************************************/ 00198000
*% /*                                                                   00199000
.P0                   ANOP                                              00200000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00201000
                      AIF   ('&LIST' EQ 'YES').P2                       00202000
.P1                   ANOP                                              00203000
                      PUSH  PRINT                                       00204000
                      PRINT OFF                                         00205000
.P2                   ANOP                                              00206000
                      AIF   ('&HisAns' EQ 'NO').L0002                   00207000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00208000
                      AIF   ('&HisAns' NE 'YES').L0002                  00209000
.L0003                ANOP                                              00210000
*                                                                       00211000
* ********************************************************************  00212000
* * HISSERV REQUEST=QUERY Generic answer area                        *  00213000
* *                                                                  *  00214000
* * The length of the storage passed in via ANSAREA on a             *  00215000
* * HISSERV REQUEST=QUERY request must have an ANSLEN of at least    *  00216000
* * HisAns_kLength. Depending on the request, if enough storage      *  00217000
* * isn't provide for a successful request the service will return   *  00218000
* * with a warning code of Hisserv_kRsnWarn_AnsAreaSmall. Retrying   *  00219000
* * the query with an ANSLEN of HisAns_LengthRequired will           *  00220000
* * eventually be successful. To ensure future compatibility, you    *  00221000
* * must recognize that the amount of storage obtained for a specific*  00222000
* * request might not be enough, and you must provide code in case   *  00223000
* * the reason of Hisserv_kRsnWarn_AnsAreaSmall is returned, even if *  00224000
* * the request's ANSLEN appears to be static in nature.             *  00225000
* *                                                                  *  00226000
* * When navigating from one area to the next, if a field is         *  00227000
* * provided that contains the length of the current area, that field*  00228000
* * must be used to get to the next area rather than relying on the  *  00229000
* * current length of the DSECT. Similarly, when dealing with any of *  00230000
* * the arrays described within this macro, to navigate from one     *  00231000
* * entry to the next you must use the length field that is provided *  00232000
* * in the array descriptor rather than relying on the current       *  00233000
* * length of the entry's DSECT.                                     *  00234000
* *                                                                  *  00235000
* ********************************************************************  00236000
*                                                                       00237000
*                                                                       00238000
                      AIF   ('&DSECT' EQ 'YES').L0004                   00239000
HisAns                DS    0D                                          00240000
                      AGO   .L0005                                      00241000
.L0004                ANOP                                              00242000
HisAns                DSECT                                             00243000
.L0005                ANOP                                              00244000
HisAns_Eye            DS    CL4    Eyecatcher, can be used to identify *00245000
                                   the request. See each unique        *00246000
                                   request's ANSAREA DSECT for more    *00247000
                                   information.                         00248000
HisAns_Version        DS    H      Version identifier, this defines    *00249000
                                   which fields are available for a    *00250000
                                   given request. See each unique      *00251000
                                   request's ANSAREA DSECT for more    *00252000
                                   information.                         00253000
                      DS    CL2                                         00254000
HisAns_LengthSupplied DS    FL8    Length of storage supplied for the  *00255000
                                   query request. This is equal to the *00256000
                                   value supplied in ANSLEN.            00257000
HisAns_LengthRequired DS    FL8    Length of storage required for the  *00258000
                                   query request to complete           *00259000
                                   successfully. If the request        *00260000
                                   returns with a reason code of       *00261000
                                   Hisserv_kRsnWarn_AnsAreaSmall, a    *00262000
                                   subsequent request with an ANSLEN   *00263000
                                   of HisAns_LengthRequired will       *00264000
                                   eventually be successful.            00265000
HisAns_End            DS    0C                                          00266000
HisAns_kLength        EQU   24                                          00267000
*                                                                       00268000
* ********************************************************************  00269000
* * HISSERV Return/Reason Codes                                      *  00270000
* *   o It is guaranteed that no reason code will be reused (i.e.    *  00271000
* *     the same reason code will not be used for more than one      *  00272000
* *     return code).                                                *  00273000
* *   o Note carefully that bits 0-15 of the reason code may contain *  00274000
* *     component-diagnostic data and must not be assumed to be      *  00275000
* *     0.                                                           *  00276000
* ********************************************************************  00277000
*                                                                       00278000
*                                                                       00279000
Hisserv_kRsnCodeMask  EQU   65535  Use this mask to isolate the non    *00280000
                                   component-diagnostic portion of the *00281000
                                   reason code.                         00282000
*                                                                       00283000
*   HISSERV Return and Reason Code definitions                          00284000
*                                                                       00285000
*                                                                       00286000
Hisserv_kRetOk        EQU   X'00000000' Meaning: HISSERV request       *00287000
                                   successful. Action: Processing      *00288000
                                   continues.                           00289000
Hisserv_kRetWarn      EQU   X'00000004' Meaning: Warning Action: Refer *00290000
                                   to the action provided with the     *00291000
                                   specific reason code.                00292000
Hisserv_kRsnWarn_AnsAreaSmall EQU X'00000401' Meaning: For             *00293000
                                   REQUEST=QUERY, the answer area      *00294000
                                   provided was large enough to hold   *00295000
                                   the minimum amount of data required *00296000
                                   for the request, but not large      *00297000
                                   enough to hold all of the data      *00298000
                                   requested. Action: Obtain a larger  *00299000
                                   answer area using the               *00300000
                                   HisAns_LengthRequired field         *00301000
                                   returned in the request's ANSAREA.   00302000
Hisserv_kRetUser      EQU   X'00000008' Meaning: HISSERV request       *00303000
                                   failed due to a user error. Action: *00304000
                                   Refer to the action provided with   *00305000
                                   the specific reason code.            00306000
Hisserv_kRsnUser_BadParmArea EQU X'00000801' Meaning: Unable to access *00307000
                                   parameter area. Action: Check for   *00308000
                                   possible storage overlay.            00309000
Hisserv_kRsnUser_BadParmAreaALET EQU X'00000802'                        00310000
*                                                                       00311000
*                                      Meaning: Bad parameter area      00312000
*                                      ALET. Action: Make sure that     00313000
*                                      the ALET associated with the     00314000
*                                      parameter area is valid. The     00315000
*                                      access register might not have   00316000
*                                      been set up correctly.           00317000
*                                                                       00318000
Hisserv_kRsnUser_BadVersion EQU X'00000803' Meaning: Bad version for   *00319000
                                   the parameter list was specified.   *00320000
                                   Action: Check for possible storage  *00321000
                                   overlay.                             00322000
Hisserv_kRsnUser_SrbMode EQU X'00000804' Meaning: This function is     *00323000
                                   only available in task mode.        *00324000
                                   Action: Use function in task mode.   00325000
Hisserv_kRsnUser_NotEnabled EQU X'00000805' Meaning: This function is  *00326000
                                   only available to enabled programs. *00327000
                                   Action: Use function while enabled.  00328000
Hisserv_kRsnUser_LocksHeld EQU X'00000806' Meaning: This function is   *00329000
                                   only available to unlocked          *00330000
                                   programs. Action: Use function      *00331000
                                   while unlocked.                      00332000
Hisserv_kRsnUser_CallerFRR EQU X'00000807' Meaning: This function is   *00333000
                                   only available to programs that     *00334000
                                   have not established an FRR.        *00335000
                                   Action: Retry the request without   *00336000
                                   an FRR established.                  00337000
Hisserv_kRsnUser_BadRequest EQU X'00000808' Meaning: A Bad request was *00338000
                                   made to the service. Action: Check  *00339000
                                   for possible storage overlay.        00340000
Hisserv_kRsnUser_BadProfTkn EQU X'00000809' Meaning: Token specified   *00341000
                                   was not a valid token. Action: Use  *00342000
                                   a valid token provided by the       *00343000
                                   REQUEST=PROFILE,ACTION=START        *00344000
                                   request.                             00345000
Hisserv_kRsnUser_NameInUse EQU X'0000080A' Meaning: The name requested *00346000
                                   is already in use. Action: Provide  *00347000
                                   a NAME that is unique to the        *00348000
                                   service.                             00349000
Hisserv_kRsnUser_InvName EQU X'0000080B' Meaning: The name requested   *00350000
                                   is invalid. Action: Provide a valid *00351000
                                   NAME, it cannot begin with HIS.      00352000
Hisserv_kRsnUser_ExitRtnNotFound EQU X'0000080C'                        00353000
*                                                                       00354000
*                                      Meaning: The exit routine        00355000
*                                      specified wasn't found.          00356000
*                                      Action: Ensure the exit          00357000
*                                      routine specified exists in      00358000
*                                      LPA, the LNKLST concatenation,   00359000
*                                      or the nucleus.                  00360000
*                                                                       00361000
Hisserv_kRsnUser_ExitRtnInUse EQU X'0000080D' Meaning: The exit        *00362000
                                   routine specified is already in     *00363000
                                   use. Action: A different exit       *00364000
                                   routine must be provided.            00365000
Hisserv_kRsnUser_BadEvnTyp EQU X'0000080E' Meaning: For                *00366000
                                   REQUEST=PROFILE,ACTION=START        *00367000
                                   requests, one or more even types    *00368000
                                   specified could not be properly     *00369000
                                   configured for because it is not    *00370000
                                   allowed. Only event types returned  *00371000
                                   in the HisEvn_ValidEvnTyp field of  *00372000
                                   a REQUEST=QUERY,TYPE=EVENT request  *00373000
                                   can be requested. Action: Ensure    *00374000
                                   the event types being requested are  00375000
*                                  a subset of the event types         *00376000
                                   returned in the HisEvn_ValidEvnTyp  *00377000
                                   field of a REQUEST=QUERY,TYPE=EVENT *00378000
                                   request.                             00379000
Hisserv_kRsnUser_BadProfReq EQU X'0000080F' Meaning: A bad PROFILE     *00380000
                                   request was made to the service.    *00381000
                                   Action: Check for possible storage  *00382000
                                   overlay.                             00383000
Hisserv_kRsnUser_BadProfStart EQU X'00000810' Meaning: For             *00384000
                                   REQUEST=PROFILE,ACTION=START, a bad *00385000
                                   request was made. A least one event *00386000
                                   type or sampling should be          *00387000
                                   requested when starting to profile  *00388000
                                   the system. Action: Request at      *00389000
                                   least one event type or sampling.    00390000
Hisserv_kRsnUser_BadQuery EQU X'00000811' Meaning: For REQUEST=QUERY,  *00391000
                                   a bad query was requested. Action:  *00392000
                                   Check for possible storage overlay.  00393000
Hisserv_kRsnUser_BadAnsArea EQU X'00000812' Meaning: For               *00394000
                                   REQUEST=QUERY, unable to access     *00395000
                                   answer area. Action: Provide a      *00396000
                                   valid answer area.                   00397000
Hisserv_kRsnUser_BadAnsAreaALET EQU X'00000813'                         00398000
*                                                                       00399000
*                                      Meaning: Bad answer area ALET.   00400000
*                                      Action: Make sure that the       00401000
*                                      ALET associated with the         00402000
*                                      answer area is valid. The        00403000
*                                      access register might not have   00404000
*                                      been set up correctly.           00405000
*                                                                       00406000
Hisserv_kRsnUser_AnsLenTooSmall EQU X'00000814'                         00407000
*                                                                       00408000
*                                      Meaning: For REQUEST=QUERY,      00409000
*                                      the answer area length is        00410000
*                                      incorrect. Action: Ensure the    00411000
*                                      answer area length and the       00412000
*                                      storage provided as the answer   00413000
*                                      area is at least                 00414000
*                                      HisAns_kLength bytes long.       00415000
*                                                                       00416000
Hisserv_kRsnUser_BadCpuMask EQU X'00000815' Meaning: For               *00417000
                                   REQUEST=QUERY,TYPE=EVENTDATA        *00418000
                                   requests, unable to access the CPU  *00419000
                                   mask. Action: Provide a valid CPU   *00420000
                                   mask.                                00421000
Hisserv_kRsnUser_BadCpuMaskALET EQU X'00000816'                         00422000
*                                                                       00423000
*                                      Meaning: Bad CPU mask ALET.      00424000
*                                      Action: Make sure that the       00425000
*                                      ALET associated with the CPU     00426000
*                                      mask is valid. The access        00427000
*                                      register might not have been     00428000
*                                      set up correctly.                00429000
*                                                                       00430000
Hisserv_kRsnUser_NoEvnTyp EQU X'00000817' Meaning: For                 *00431000
                                   REQUEST=QUERY,TYPE=EVENTDATA        *00432000
                                   requests, the profiler making the   *00433000
                                   request is not profiling events.    *00434000
                                   Action: When registering with the   *00435000
                                   system to profile, indicate the     *00436000
                                   intention to profile events using   *00437000
                                   the EVENT= parameter.                00438000
Hisserv_kRsnUser_InvProfChange EQU X'00000818' Meaning: A              *00439000
                                   REQUEST=PROFILE request was made    *00440000
                                   from a profiler's exit routine.     *00441000
                                   Action: A REQUEST=PROFILE request   *00442000
                                   cannot be made from a profiler's    *00443000
                                   exit routine.                        00444000
Hisserv_kRetEnv       EQU   X'0000000C' Meaning: Environmental error   *00445000
                                   Action: Refer to the action         *00446000
                                   provided with the specific reason   *00447000
                                   code.                                00448000
Hisserv_kRsnEnv_NotAvailable EQU X'00000C01' Meaning: Function is not  *00449000
                                   available. Action: This function is *00450000
                                   only available when the HIS address *00451000
                                   space is running.                    00452000
Hisserv_kRsnEnv_NotReady EQU X'00000C02' Meaning: Function is          *00453000
                                   available but is not currently      *00454000
                                   ready to accept requests. Action:   *00455000
                                   Retry the request.                   00456000
Hisserv_kRsnEnv_NoStorage EQU X'00000C03' Meaning: There was not       *00457000
                                   enough storage in HIS private       *00458000
                                   storage to complete the request.    *00459000
                                   Action: Contact your system         *00460000
                                   programmer.                          00461000
Hisserv_kRetUnk       EQU   X'00000010' Meaning: Unexpected failure.   *00462000
                                   Action: Refer to the action         *00463000
                                   provided with the specific reason   *00464000
                                   code.                                00465000
Hisserv_kRsnUnk_Unk   EQU   X'00001001' Meaning: Unexpected failure.   *00466000
                                   The state of the request is         *00467000
                                   unpredictable. Action: Contact your *00468000
                                   system programmer.                   00469000
Hisserv_kRsnUnk_QueryCpu EQU X'00001002' Meaning: For                  *00470000
                                   REQUEST=QUERY,TYPE=EVENTDATA, while *00471000
                                   attempting to query a CPU's event   *00472000
                                   data an unknown error occurred.     *00473000
                                   Action: Contact your system         *00474000
                                   programmer.                          00475000
HisAns_Len            EQU   *-HisAns                                    00476000
.L0002                ANOP                                              00477000
                      AIF   ('&HisArrayDesc' EQ 'NO').L0006             00478000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00479000
                      AIF   ('&HisArrayDesc' NE 'YES').L0006            00480000
.L0007                ANOP                                              00481000
*                                                                       00482000
*   End of HISSERV Return and Reason Code definitions                   00483000
*                                                                       00484000
*                                                                       00485000
                      AIF   ('&DSECT' EQ 'YES').L0008                   00486000
HisArrayDesc          DS    0D     This DSECT describes an array of    *00487000
                                   data.                                00488000
                      AGO   .L0009                                      00489000
.L0008                ANOP                                              00490000
HisArrayDesc          DSECT        This DSECT describes an array of    *00491000
                                   data.                                00492000
.L0009                ANOP                                              00493000
HisArrayDesc_Offset   DS    FL8    Offset to the array, relative to    *00494000
                                   the start of the answer area         00495000
                      ORG   HisArrayDesc_Offset                         00496000
                      DS    CL4                                         00497000
HisArrayDesc_Offset32 DS    F      This field can be used instead of   *00498000
                                   HisArrayDesc_Offset when it is      *00499000
                                   known that the ANSLEN used is less  *00500000
                                   than or equal to 'FFFFFFFF'x         00501000
HisArrayDesc_Cnt      DS    F      The number of entries in the array   00502000
HisArrayDesc_EntryLength DS F      The length of a single entry in the *00503000
                                   array. Use this when iterating      *00504000
                                   through array entries instead of    *00505000
                                   compile time lengths. The offset to *00506000
                                   the nth entry (1-origin) from the   *00507000
                                   start of the array is               *00508000
                                   ((n-1)*HisArrayDe sc_EntryLength)    00509000
HisArrayDesc_End      DS    0C                                          00510000
HisArrayDesc_Len      EQU   *-HisArrayDesc                              00511000
.L0006                ANOP                                              00512000
                      AIF   ('&HisEvnTyp' EQ 'NO').L000A                00513000
                      AIF   ('&DSECT' EQ 'YES').L000B                   00514000
                      AIF   ('&HisEvnTyp' NE 'YES').L000A               00515000
HisEvnTyp             DS    0X     This DSECT describes the defined    *00516000
                                   event types. Being defined doesn't  *00517000
                                   necessarily mean it is valid in the *00518000
                                   service.                             00519000
                      AGO   .L000C                                      00520000
.L000B                ANOP                                              00521000
HisEvnTyp             DSECT        This DSECT describes the defined    *00522000
                                   event types. Being defined doesn't  *00523000
                                   necessarily mean it is valid in the *00524000
                                   service.                             00525000
.L000C                ANOP                                              00526000
HisEvnTyp_Byte0       DS    B                                           00527000
*  Bit definitions:                                                     00528000
HisEvnTyp_ZOSCtrs     EQU   X'80'  The z/OS counters. These counting   *00529000
                                   events are software events related  *00530000
                                   to z/OS. They are driven using the  *00531000
                                   z/Architecture Enhanced Monitor     *00532000
                                   Facility.                            00533000
HisEvnTyp_Byte1       DS    B                                           00534000
*  Bit definitions:                                                     00535000
HisEvnTyp_SysTrace    EQU   X'80'  The system trace event. This event  *00536000
                                   allows the querying of system trace *00537000
                                   events. Hardware tracing is         *00538000
                                   described in the base               *00539000
                                   z/Architecture. IBM use only.        00540000
HisEvnTyp_Byte2       DS    B                                           00541000
HisEvnTyp_Byte3       DS    B                                           00542000
*  Bit definitions:                                                     00543000
HisEvnTyp_MTDiagCtrs  EQU   X'20'  The MT-diagnostic counters. These   *00544000
                                   counting events are the             *00545000
                                   z/Architecture CPU Measurement      *00546000
                                   Counter Facility MT-diagnostic      *00547000
                                   Counter Set.                         00548000
HisEvnTyp_CryptoCtrs  EQU   X'08'  The Crypto counters. These counting *00549000
                                   events are the z/Architecture CPU   *00550000
                                   Measurement Counter Facility Crypto *00551000
                                   Counter Set.                         00552000
HisEvnTyp_ProblemCtrs EQU   X'04'  The Problem-State counters. These   *00553000
                                   counting events are the             *00554000
                                   z/Architecture CPU Measurement      *00555000
                                   Counter Facility Problem-State      *00556000
                                   Counter Set.                         00557000
HisEvnTyp_BasicCtrs   EQU   X'02'  The Basic counters. These counting  *00558000
                                   events are the z/Architecture CPU   *00559000
                                   Measurement Counter Facility Basic  *00560000
                                   Counter Set.                         00561000
HisEvnTyp_ExtendedCtrs EQU  X'01'  The Extended counters. These        *00562000
                                   counting events are the             *00563000
                                   z/Architecture CPU Measurement      *00564000
                                   Counter Facility Extended Counter   *00565000
                                   Set.                                 00566000
HisEvnTyp_End         DS    0C                                          00567000
HisEvnTyp_Len         EQU   *-HisEvnTyp                                 00568000
.L000A                ANOP                                              00569000
                      AIF   ('&HisSmpTyp' EQ 'NO').L000D                00570000
                      AIF   ('&DSECT' EQ 'YES').L000E                   00571000
                      AIF   ('&HisSmpTyp' NE 'YES').L000D               00572000
HisSmpTyp             DS    0X     This DSECT describes the defined    *00573000
                                   sampling types. Being defined       *00574000
                                   doesn't necessarily mean it is      *00575000
                                   valid in the service.                00576000
                      AGO   .L000F                                      00577000
.L000E                ANOP                                              00578000
HisSmpTyp             DSECT        This DSECT describes the defined    *00579000
                                   sampling types. Being defined       *00580000
                                   doesn't necessarily mean it is      *00581000
                                   valid in the service.                00582000
.L000F                ANOP                                              00583000
HisSmpTyp_Byte0       DS    B                                           00584000
HisSmpTyp_Byte1       DS    B                                           00585000
HisSmpTyp_Byte2       DS    B                                           00586000
HisSmpTyp_Byte3       DS    B                                           00587000
*  Bit definitions:                                                     00588000
HisSmpTyp_Basic       EQU   X'02'  The Basic sampling entry. This      *00589000
                                   sampling type is the z/Architecture *00590000
                                   CPU Measurement Sampling Facility   *00591000
                                   Basic Sample Type.                   00592000
HisSmpTyp_Diag        EQU   X'01'  The Diagnostic sampling entry. This *00593000
                                   sampling type is the z/Architecture *00594000
                                   CPU Measurement Sampling Facility   *00595000
                                   Diagnostic Sampling Type.            00596000
HisSmpTyp_End         DS    0C                                          00597000
HisSmpTyp_kNoSamp     EQU   0                                           00598000
HisSmpTyp_Len         EQU   *-HisSmpTyp                                 00599000
.L000D                ANOP                                              00600000
                      AIF   ('&HisProf' EQ 'NO').L0010                  00601000
                      AIF   ('&DSECT' EQ 'YES').L0011                   00602000
                      AIF   ('&HisProf' NE 'YES').L0010                 00603000
.L0011                ANOP                                              00604000
*                                                                       00605000
* ********************************************************************  00606000
* * HISSERV REQUEST=QUERY,TYPE=PROFILE answer area                   *  00607000
* *                                                                  *  00608000
* * The required length of the storage passed in via ANSAREA on a    *  00609000
* * HISSERV REQUEST=QUERY,TYPE=PROFILE request depends on the current*  00610000
* * number of profilers in the system.                               *  00611000
* *                                                                  *  00612000
* ********************************************************************  00613000
*                                                                       00614000
*                                                                       00615000
                      AIF   ('&DSECT' EQ 'YES').L0012                   00616000
HisProf               DS    0D                                          00617000
                      AGO   .L0013                                      00618000
.L0012                ANOP                                              00619000
HisProf               DSECT                                             00620000
.L0013                ANOP                                              00621000
HisProf_Ans           DS    CL24   The generic answer area, mapped by  *00622000
                                   DSECT HisAns. The eyecatcher for    *00623000
                                   this request is HisProf_kEye.        00624000
HisProf_ProfArrayDesc DS    CL16   The array descriptor for the        *00625000
                                   profiler entries, each entry is     *00626000
                                   mapped by HisProfEntry. This        *00627000
                                   storage is mapped by DSECT          *00628000
                                   HisArrayDesc.                        00629000
HisProf_End           DS    0C                                          00630000
HisProf_kEye          EQU   C'HISP'                                     00631000
HisProf_kVersionMax   EQU   1                                           00632000
HisProf_kVersion1     EQU   1                                           00633000
HisProf_kVersionMin   EQU   1                                           00634000
HisProf_Len           EQU   *-HisProf                                   00635000
.L0010                ANOP                                              00636000
                      AIF   ('&HisProfEntry' EQ 'NO').L0014             00637000
                      AIF   ('&DSECT' EQ 'YES').L0015                   00638000
                      AIF   ('&HisProfEntry' NE 'YES').L0014            00639000
HisProfEntry          DS    0D     An entry in the array described by  *00640000
                                   HisProf_ProfArrayDesc. This entry   *00641000
                                   represents data for one profiler     00642000
                      AGO   .L0016                                      00643000
.L0015                ANOP                                              00644000
HisProfEntry          DSECT        An entry in the array described by  *00645000
                                   HisProf_ProfArrayDesc. This entry   *00646000
                                   represents data for one profiler     00647000
.L0016                ANOP                                              00648000
HisProfEntry_Name     DS    CL8    An identifier for this profiler, as *00649000
                                   indicated through the NAME          *00650000
                                   parameter of the HISSERV            *00651000
                                   REQUEST=PROFILE,ACTION=START        *00652000
                                   request                              00653000
HisProfEntry_EvnTyp   DS    CL4    The event types this profiler is    *00654000
                                   profiling, as indicated through the *00655000
                                   EVENT parameter of the HISSERV      *00656000
                                   REQUEST=PROFILE,ACTION=START        *00657000
                                   request. Mapped by DSECT HisEvnTyp.  00658000
HisProfEntry_Flgs     DS    BL2                                         00659000
*  Bit definitions:                                                     00660000
HisProfEntryFlgs_Smp  EQU   X'80'  Whether this profiler is profiling  *00661000
                                   samples, as indicated through the   *00662000
                                   SAMPLE parameter of the HISSERV     *00663000
                                   REQUEST=PROFILE,ACTION=START        *00664000
                                   request.                             00665000
HisProfEntryFlgs_Failed EQU X'40'  The profiler had a sampling exit    *00666000
                                   routine that abended or otherwise   *00667000
                                   failed                               00668000
                      DS    CL2                                         00669000
HisProfEntry_StartTime DS   CL8    The time the profiler began         *00670000
                                   profiling the system, in STCK       *00671000
                                   format.                              00672000
HisProfEntry_EvnQueryInterval DS CL8 The average time this profiler    *00673000
                                   waits between event queries, in     *00674000
                                   STCK format. The longer the time,   *00675000
                                   the better it is for the system.    *00676000
                                   When zero, this profiler has        *00677000
                                   queried for events no more than one *00678000
                                   time.                                00679000
HisProfEntry_SmpExitTime DS CL8    The average time this profiler      *00680000
                                   takes to handle a sampling exit     *00681000
                                   callback, in STCK format. The       *00682000
                                   shorter the time, the better it is  *00683000
                                   for the system. When zero, this     *00684000
                                   profiler isn't sampling or hasn't   *00685000
                                   yet received a sampling exit        *00686000
                                   callback.                            00687000
HisProfEntry_End      DS    0C                                          00688000
HisProfEntry_Len      EQU   *-HisProfEntry                              00689000
.L0014                ANOP                                              00690000
                      AIF   ('&HisSmp' EQ 'NO').L0017                   00691000
                      AIF   ('&DSECT' EQ 'YES').L0018                   00692000
                      AIF   ('&HisSmp' NE 'YES').L0017                  00693000
.L0018                ANOP                                              00694000
*                                                                       00695000
* ********************************************************************  00696000
* * HISSERV REQUEST=QUERY,TYPE=SAMPLE answer area                    *  00697000
* *                                                                  *  00698000
* * The required length of the storage passed in via ANSAREA on a    *  00699000
* * HISSERV REQUEST=QUERY,TYPE=SAMPLE request depends on the number  *  00700000
* * of sampling entry formats known by the service.                  *  00701000
* *                                                                  *  00702000
* ********************************************************************  00703000
*                                                                       00704000
*                                                                       00705000
                      AIF   ('&DSECT' EQ 'YES').L0019                   00706000
HisSmp                DS    0D                                          00707000
                      AGO   .L001A                                      00708000
.L0019                ANOP                                              00709000
HisSmp                DSECT                                             00710000
.L001A                ANOP                                              00711000
HisSmp_Ans            DS    CL24   The common answer area, mapped by   *00712000
                                   DSECT HisAns. The eyecatcher for    *00713000
                                   this request is HisSmp_kEye.         00714000
HisSmp_ServiceSeq     DS    F      The sequence number representing    *00715000
                                   the sampling state of the service   *00716000
                                   for when data was returned. Any     *00717000
                                   other data provided by the service  *00718000
                                   with the same sampling state        *00719000
                                   sequence number is in sync with     *00720000
                                   this data.                           00721000
HisSmp_ValidSmpTyp    DS    CL4    The valid sampling types. Mapped by *00722000
                                   DSECT HisSmpTyp.                     00723000
HisSmp_HdwrAuthSmpTyp DS    CL4    The hardware authorized sampling    *00724000
                                   types. This is a subset of          *00725000
                                   HisSmp_ValidSmpTyp. Mapped by DSECT *00726000
                                   HisSmpTyp.                           00727000
HisSmp_SfwrAuthSmpTyp DS    CL4    The HIS authorized sampling types,  *00728000
                                   as indicated by the most recent     *00729000
                                   MODIFY HIS command that changed the *00730000
                                   SAMPTYPE. This is a subset of       *00731000
                                   HisSmp_ValidSmpTyp. Mapped by DSECT *00732000
                                   HisSmpTyp.                           00733000
HisSmp_EnabSmpTyp     DS    CL4    The enabled sampling types. This is *00734000
                                   a subset of HisSmp_SfwrAuthSmpTyp.  *00735000
                                   Mapped by DSECT HisSmpTyp            00736000
                      DS    CL4                                         00737000
HisSmp_FacilOffset    DS    FL8    Offset from the start of the answer *00738000
                                   area to the HisSmpFacil DSECT. If   *00739000
                                   zero, there is no HisSmpFacil       *00740000
                                   section returned and no             *00741000
                                   corresponding HisSmpFmtEntry        *00742000
                                   sections are returned.               00743000
                      ORG   HisSmp_FacilOffset                          00744000
                      DS    CL4                                         00745000
HisSmp_FacilOffset32  DS    F      This field can be used instead of   *00746000
                                   HisSmp_FacilOffset when it is known *00747000
                                   that the ANSLEN used is less than   *00748000
                                   or equal to 'FFFFFFFF'x              00749000
HisSmp_End            DS    0C                                          00750000
HisSmp_kEye           EQU   C'HISS'                                     00751000
HisSmp_kVersionMax    EQU   1                                           00752000
HisSmp_kVersion1      EQU   1                                           00753000
HisSmp_kVersionMin    EQU   1                                           00754000
HisSmp_Len            EQU   *-HisSmp                                    00755000
.L0017                ANOP                                              00756000
                      AIF   ('&HisSmpFacil' EQ 'NO').L001B              00757000
                      AIF   ('&DSECT' EQ 'YES').L001C                   00758000
                      AIF   ('&HisSmpFacil' NE 'YES').L001B             00759000
HisSmpFacil           DS    0D     Sampling info which describes CPU   *00760000
                                   Measurement sampling events          00761000
                      AGO   .L001D                                      00762000
.L001C                ANOP                                              00763000
HisSmpFacil           DSECT        Sampling info which describes CPU   *00764000
                                   Measurement sampling events          00765000
.L001D                ANOP                                              00766000
HisSmpFacil_Freq      DS    F      The sampling frequency in number of *00767000
                                   samples to be taken in one minute   *00768000
                                   across all CPUs, as indicated by    *00769000
                                   the most recent MODIFY HIS command  *00770000
                                   that changed the SAMPFREQ            00771000
HisSmpFacil_BufCnt    DS    F      The buffer count in number of SDBs  *00772000
                                   per CPU, as indicated by the most   *00773000
                                   recent MODIFY HIS command that      *00774000
                                   changed the BUFCNT.                  00775000
HisSmpFacil_SpeedCP   DS    F      Speed of a CP, in cycles per        *00776000
                                   microsecond                          00777000
HisSmpFacil_SpeedzCBP DS    F      Speed of a zCBP, in cycles per      *00778000
                                   microsecond                          00779000
                      ORG   HisSmpFacil_SpeedzCBP                       00780000
HisSmpFacil_SpeedzAAP DS    F      Speed of a zAAP, in cycles per      *00781000
                                   microsecond                          00782000
HisSmpFacil_SpeedzIIP DS    F      Speed of a zIIP, in cycles per      *00783000
                                   microsecond                          00784000
                      DS    CL4                                         00785000
HisSmpFacil_Intv      DS    FL8    The interval a CPU waits between    *00786000
                                   samples, in number of CPU cycles.    00787000
HisSmpFacil_SmpFmtArrayDesc DS CL16 The array descriptor for possible  *00788000
                                   sampling entry format codes. Each   *00789000
                                   entry is mapped by HisSmpFmtEntry.  *00790000
                                   This storage is mapped by DSECT     *00791000
                                   HisArrayDesc.                        00792000
HisSmpFacil_End       DS    0C                                          00793000
HisSmpFacil_Len       EQU   *-HisSmpFacil                               00794000
.L001B                ANOP                                              00795000
                      AIF   ('&HisSmpFmtEntry' EQ 'NO').L001E           00796000
                      AIF   ('&DSECT' EQ 'YES').L001F                   00797000
                      AIF   ('&HisSmpFmtEntry' NE 'YES').L001E          00798000
HisSmpFmtEntry        DS    0D     An entry in the array described by  *00799000
                                   HisSmpFacil_SmpFmtArrayDesc. This   *00800000
                                   entry represents the data for one   *00801000
                                   sample entry format code.            00802000
                      AGO   .L0020                                      00803000
.L001F                ANOP                                              00804000
HisSmpFmtEntry        DSECT        An entry in the array described by  *00805000
                                   HisSmpFacil_SmpFmtArrayDesc. This   *00806000
                                   entry represents the data for one   *00807000
                                   sample entry format code.            00808000
.L0020                ANOP                                              00809000
HisSmpFmtEntry_Length DS    F      The length of the sampling entry.    00810000
HisSmpFmtEntry_SmpTypBit DS H      The bit position (1-origin) into    *00811000
                                   HisSmpTyp that identifies the       *00812000
                                   sample type this format code        *00813000
                                   belongs to.                          00814000
HisSmpFmtEntry_Code   DS    H      The format code of the sampling     *00815000
                                   entry.                               00816000
HisSmpFmtEntry_End    DS    0C                                          00817000
HisSmpFmtEntry_Len    EQU   *-HisSmpFmtEntry                            00818000
.L001E                ANOP                                              00819000
                      AIF   ('&HisEvn' EQ 'NO').L0021                   00820000
                      AIF   ('&DSECT' EQ 'YES').L0022                   00821000
                      AIF   ('&HisEvn' NE 'YES').L0021                  00822000
.L0022                ANOP                                              00823000
*                                                                       00824000
* ********************************************************************  00825000
* * HISSERV REQUEST=QUERY,TYPE=EVENT answer area                     *  00826000
* *                                                                  *  00827000
* * The required length of the storage passed in via ANSAREA on a    *  00828000
* * HISSERV REQUEST=QUERY,TYPE=EVENT request is the length of a      *  00829000
* * HisEvn DSECT plus the length of a HisEvnCtr DSECT plus           *  00830000
* * HisEvn_More bytes. This is still not guaranteed to succeed in    *  00831000
* * future releases.                                                 *  00832000
* *                                                                  *  00833000
* ********************************************************************  00834000
*                                                                       00835000
*                                                                       00836000
                      AIF   ('&DSECT' EQ 'YES').L0023                   00837000
HisEvn                DS    0D                                          00838000
                      AGO   .L0024                                      00839000
.L0023                ANOP                                              00840000
HisEvn                DSECT                                             00841000
.L0024                ANOP                                              00842000
HisEvn_Ans            DS    CL24   The common answer area, mapped by   *00843000
                                   DSECT HisAns. The eyecatcher for    *00844000
                                   this request is HisEvn_kEye.         00845000
HisEvn_ServiceSeq     DS    F      The sequence number representing    *00846000
                                   the event state of the service for  *00847000
                                   when this data was returned. Any    *00848000
                                   other data provided by the service  *00849000
                                   with the same event state sequence  *00850000
                                   number is in sync with this data.    00851000
HisEvn_ValidEvnTyp    DS    CL4    The valid event types. Mapped by    *00852000
                                   DSECT HisEvnTyp.                     00853000
HisEvn_HdwrAuthEvnTyp DS    CL4    The hardware authorized event       *00854000
                                   types. This is a subset of          *00855000
                                   HisEvn_ValidEvnTyp. Mapped by DSECT *00856000
                                   HisEvnTyp.                           00857000
HisEvn_SfwrAuthEvnTyp DS    CL4    The HIS authorized event types.     *00858000
                                   This is a subset of                 *00859000
                                   HisEvn_ValidEvnTyp. Mapped by DSECT *00860000
                                   HisEvnTyp.                           00861000
HisEvn_EnabEvnTyp     DS    CL4    The enabled event types. This is a  *00862000
                                   subset of HisEvn_SfwrAuthEvnTyp.    *00863000
                                   Mapped by DSECT HisEvnTyp.           00864000
HisEvn_HdwrMTEvnTyp   DS    CL4    The event types that are MT         *00865000
                                   oriented. This is a subset of       *00866000
                                   HisEvn_HdwrAuthEvnTyp. Mapped by    *00867000
                                   DSECT HisEvnTyp.                     00868000
HisEvn_CtrOffset      DS    FL8    Offset from the start of the answer *00869000
                                   area to the HisEvnCtr DSECT. If     *00870000
                                   zero, there is no HisEvnCtr section *00871000
                                   returned.                            00872000
                      ORG   HisEvn_CtrOffset                            00873000
                      DS    CL4                                         00874000
HisEvn_CtrOffset32    DS    F      This field can be used instead of   *00875000
                                   HisEvn_CtrOffset when it is known   *00876000
                                   that the ANSLEN used is less than   *00877000
                                   or equal to 'FFFFFFFF'x              00878000
HisEvn_TrcOffset      DS    FL8    Offset from the start of the answer *00879000
                                   area to the HisEvnTrc DSECT. If     *00880000
                                   zero, there is no HisEvnTrc section *00881000
                                   returned. IBM use only.              00882000
                      ORG   HisEvn_TrcOffset                            00883000
                      DS    CL4                                         00884000
HisEvn_TrcOffset32    DS    F      This field can be used instead of   *00885000
                                   HisEvn_TrcOffset when it is known   *00886000
                                   that the ANSLEN used is less than   *00887000
                                   or equal to 'FFFFFFFF'x. IBM use    *00888000
                                   only.                                00889000
HisEvn_End            DS    0C                                          00890000
HisEvn_kEye           EQU   C'HISE'                                     00891000
HisEvn_kVersionMax    EQU   1                                           00892000
HisEvn_kVersion1      EQU   1                                           00893000
HisEvn_kVersionMin    EQU   1                                           00894000
HisEvn_More           EQU   8                                           00895000
HisEvn_Len            EQU   *-HisEvn                                    00896000
.L0021                ANOP                                              00897000
                      AIF   ('&HisEvnCtr' EQ 'NO').L0025                00898000
                      AIF   ('&DSECT' EQ 'YES').L0026                   00899000
                      AIF   ('&HisEvnCtr' NE 'YES').L0025               00900000
HisEvnCtr             DS    0D     Event info which describes counting *00901000
                                   events                               00902000
                      AGO   .L0027                                      00903000
.L0026                ANOP                                              00904000
HisEvnCtr             DSECT        Event info which describes counting *00905000
                                   events                               00906000
.L0027                ANOP                                              00907000
HisEvnCtr_CtrVersion0 DS    H      Zero counter version value, used to *00908000
                                   derive meaning to the z/OS          *00909000
                                   counters. The z/OS counters are for *00910000
                                   IBM use.                             00911000
HisEvnCtr_CtrVersion1 DS    H      First counter version value, used   *00912000
                                   to derive meaning to the counter    *00913000
                                   numbers for the Basic Counter and   *00914000
                                   Problem-State counter event types.  *00915000
                                   See macro HISYCTRS for meanings of  *00916000
                                   the counters.                        00917000
HisEvnCtr_CtrVersion2 DS    H      Second counter version value, used  *00918000
                                   to derive meaning to the counter    *00919000
                                   number for the Crypto Counter,      *00920000
                                   Extended and MT-diagnostic counter  *00921000
                                   event types. See macro HISYCTRS for *00922000
                                   meanings of the counters.            00923000
                      DS    CL2                                         00924000
HisEvnCtr_EvnTypNumCtrs DS  F      An array describing the number of   *00925000
                                   counters in each event type. An     *00926000
                                   event type's bit position in the    *00927000
                                   HisEvnTyp DSECT should be used to   *00928000
                                   index into this array to find the   *00929000
                                   number of counters for that event   *00930000
                                   type. For example, the Crypto       *00931000
                                   counters, indicated by the x'08'    *00932000
                                   bit in byte 3 of HisEvnTyp, is bit  *00933000
                                   position 29 so reference the 29th    00934000
*                                  entry in this array.                 00935000
                      ORG   HisEvnCtr_EvnTypNumCtrs+128                 00936000
HisEvnCtr_End         DS    0C                                          00937000
HisEvnCtr_Len         EQU   *-HisEvnCtr                                 00938000
.L0025                ANOP                                              00939000
                      AIF   ('&HisEvnData' EQ 'NO').L0028               00940000
                      AIF   ('&DSECT' EQ 'YES').L0029                   00941000
                      AIF   ('&HisEvnData' NE 'YES').L0028              00942000
.L0029                ANOP                                              00943000
*                                                                       00944000
* ********************************************************************  00945000
* * HISSERV REQUEST=QUERY,TYPE=EVENTDATA answer area                 *  00946000
* *                                                                  *  00947000
* * The required length of the storage passed in via ANSAREA on a    *  00948000
* * HISSERV REQUEST=QUERY,TYPE=EVENTDATA request depends on the      *  00949000
* * number of CPUs queried as well as the number of event types      *  00950000
* * queried.                                                         *  00951000
* *                                                                  *  00952000
* ********************************************************************  00953000
*                                                                       00954000
*                                                                       00955000
                      AIF   ('&DSECT' EQ 'YES').L002A                   00956000
HisEvnData            DS    0D                                          00957000
                      AGO   .L002B                                      00958000
.L002A                ANOP                                              00959000
HisEvnData            DSECT                                             00960000
.L002B                ANOP                                              00961000
HisEvnData_Ans        DS    CL24   The common answer area, mapped by   *00962000
                                   DSECT HisAns. The eyecatcher for    *00963000
                                   this request is HisEvnData_kEye.     00964000
HisEvnData_ServiceSeq DS    F      The sequence number representing    *00965000
                                   the event types of the service for  *00966000
                                   when this data was returned. Any    *00967000
                                   other data provided by the service  *00968000
                                   with the same event state sequence  *00969000
                                   number is in sync with this data.    00970000
HisEvnData_EvnTyp     DS    CL4    The event types returned for this   *00971000
                                   request. Mapped by DSECT HisEvnTyp.  00972000
HisEvnData_CpuArrayDesc DS  CL16   The array descriptor for CPU        *00973000
                                   entries, the beginning of each      *00974000
                                   entry is mapped by HisEvnCpuEntry,  *00975000
                                   though may not be a complete        *00976000
                                   representation of the CPU entry.    *00977000
                                   This storage is mapped by DSECT     *00978000
                                   HisArrayDesc.                        00979000
HisEvnData_End        DS    0C                                          00980000
HisEvnData_kEye       EQU   C'HISD'                                     00981000
HisEvnData_kVersionMax EQU  1                                           00982000
HisEvnData_kVersion1  EQU   1                                           00983000
HisEvnData_kVersionMin EQU  1                                           00984000
HisEvnData_Len        EQU   *-HisEvnData                                00985000
.L0028                ANOP                                              00986000
                      AIF   ('&HisEvnCpuEntry' EQ 'NO').L002C           00987000
                      AIF   ('&DSECT' EQ 'YES').L002D                   00988000
                      AIF   ('&HisEvnCpuEntry' NE 'YES').L002C          00989000
HisEvnCpuEntry        DS    0D     An entry in the array described by  *00990000
                                   HisEvnData_CpuArrayDesc. This entry *00991000
                                   represents the data for one CPU     *00992000
                                   that provided event data.            00993000
                      AGO   .L002E                                      00994000
.L002D                ANOP                                              00995000
HisEvnCpuEntry        DSECT        An entry in the array described by  *00996000
                                   HisEvnData_CpuArrayDesc. This entry *00997000
                                   represents the data for one CPU     *00998000
                                   that provided event data.            00999000
.L002E                ANOP                                              01000000
HisEvnCpuEntry_CpuId  DS    H      The physical CPU ID of this CPU      01001000
HisEvnCpuEntry_ProcClass DS H      The processor type of this CPU.     *01002000
                                   Will be one of the following: 0 =   *01003000
                                   Standard CP 2 = zCBP or zAAP 4 =    *01004000
                                   zIIP                                 01005000
HisEvnCpuEntry_CoreId DS    H      The physical core ID of this CPU     01006000
                      DS    CL2                                         01007000
HisEvnCpuEntry_CtrOffset DS FL8    Offset from the start of the answer *01008000
                                   area to the HisEvnCtrCpuEntry       *01009000
                                   DSECT. If zero, there is no         *01010000
                                   HisEvnCtrCpuEntry section returned.  01011000
                      ORG   HisEvnCpuEntry_CtrOffset                    01012000
                      DS    CL4                                         01013000
HisEvnCpuEntry_CtrOffset32 DS F    This field can be used instead of   *01014000
                                   HisEvnCpuEntry_CtrOffset when it is *01015000
                                   known the ANSLEN used is less than  *01016000
                                   or equal to 'FFFFFFFF'x              01017000
HisEvnCpuEntry_TrcOffset DS FL8    Offset from the start of the answer *01018000
                                   area to the HisEvnTrcCpuEntry       *01019000
                                   DSECT. If zero, there is no         *01020000
                                   HisEvnTrcCpuEntry section returned.  01021000
                      ORG   HisEvnCpuEntry_TrcOffset                    01022000
                      DS    CL4                                         01023000
HisEvnCpuEntry_TrcOffset32 DS F    This field can be used instead of   *01024000
                                   HisEvnCpuEntry_TrcOffset when it is *01025000
                                   known that the ANSLEN used is less  *01026000
                                   than or equal to 'FFFFFFFF'x         01027000
HisEvnCpuEntry_End    DS    0C                                          01028000
HisEvnCpuEntry_Len    EQU   *-HisEvnCpuEntry                            01029000
.L002C                ANOP                                              01030000
                      AIF   ('&HisEvnCtrCpuEntry' EQ 'NO').L002F        01031000
                      AIF   ('&DSECT' EQ 'YES').L0030                   01032000
                      AIF   ('&HisEvnCtrCpuEntry' NE 'YES').L002F       01033000
HisEvnCtrCpuEntry     DS    0D     Event data for one CPU that         *01034000
                                   provided counter event data.         01035000
                      AGO   .L0031                                      01036000
.L0030                ANOP                                              01037000
HisEvnCtrCpuEntry     DSECT        Event data for one CPU that         *01038000
                                   provided counter event data.         01039000
.L0031                ANOP                                              01040000
HisEvnCtrCpuEntry_CtrException DS F The number of times an invalid     *01041000
                                   z/OS counter has been counted on    *01042000
                                   this CPU. A non-zero value          *01043000
                                   indicates z/OS counter use not      *01044000
                                   known to HIS.                        01045000
                      DS    CL4                                         01046000
HisEvnCtrCpuEntry_CtrArrayDesc DS CL16 The array descriptor of counter *01047000
                                   entries, each entry is mapped by    *01048000
                                   HisCtrEntry. This storage is mapped *01049000
                                   by DSECT HisArrayDesc. Note, this   *01050000
                                   array descriptor is for all         *01051000
                                   HisCtrEntry entries for all         *01052000
                                   returned counters.                   01053000
HisEvnCtrCpuEntry_CtrSetIdx DS F   An array containing the starting    *01054000
                                   index (1-origin) into the array     *01055000
                                   described by                        *01056000
                                   HisEvnCpuEntry_CtrArrayDesc for     *01057000
                                   each set of counters. A set of      *01058000
                                   counter's bit position in the       *01059000
                                   HisEvnTyp DSECT should be used to   *01060000
                                   index into this array to find the   *01061000
                                   appropriateg starting index for     *01062000
                                   that set of counter. For example,    01063000
*                                  the Crypto counters, indicated by   *01064000
                                   the x'08' bit in byte 3 of          *01065000
                                   HisEvnTyp, is bit position 29 so    *01066000
                                   the 29th entry in this array. The   *01067000
                                   first HisCtrEntry entry for a set   *01068000
                                   of counters represents counter 0    *01069000
                                   for that set. The number of         *01070000
                                   subsequent HisCtrEntry entries that *01071000
                                   belong to the same set of counter   *01072000
                                   can be determined through a HISSERV  01073000
*                                  REQUEST=QUERY,TYPE=EVENT request.   *01074000
                                   Counter n of a set of counter will  *01075000
                                   be n HisCtrEntry entries beyond the *01076000
                                   first. When the                     *01077000
                                   HisEvnCpuEntry_CtrSetIdx value is   *01078000
                                   zero, no counters for that          *01079000
                                   specified event type were captured.  01080000
                      ORG   HisEvnCtrCpuEntry_CtrSetIdx+128             01081000
HisEvnCtrCpuEntry_End DS    0C                                          01082000
HisEvnCtrCpuEntry_Len EQU   *-HisEvnCtrCpuEntry                         01083000
.L002F                ANOP                                              01084000
                      AIF   ('&HisCtrEntry' EQ 'NO').L0032              01085000
                      AIF   ('&DSECT' EQ 'YES').L0033                   01086000
                      AIF   ('&HisCtrEntry' NE 'YES').L0032             01087000
HisCtrEntry           DS    0D     An entry in the array described by  *01088000
                                   HisEvnCtrCpuEntry _CtrArrayDesc.    *01089000
                                   This entry represents the data for  *01090000
                                   one counter.                         01091000
                      AGO   .L0034                                      01092000
.L0033                ANOP                                              01093000
HisCtrEntry           DSECT        An entry in the array described by  *01094000
                                   HisEvnCtrCpuEntry _CtrArrayDesc.    *01095000
                                   This entry represents the data for  *01096000
                                   one counter.                         01097000
.L0034                ANOP                                              01098000
HisCtrEntry_HdwrCtr   DS    FL8    When the counter belongs to the     *01099000
                                   Basic, Problem, Crypto, Extended or *01100000
                                   MT-diagnostic event types, the      *01101000
                                   counter data is 8 bytes.             01102000
                      ORG   HisCtrEntry_HdwrCtr                         01103000
                      DS    CL2                                         01104000
HisCtrEntry_SfwrCtr   DS    CL6    When the counter belongs to the     *01105000
                                   z/OS event type, the counter data   *01106000
                                   is 6 bytes.                          01107000
HisCtrEntry_End       DS    0C                                          01108000
HisCtrEntry_Len       EQU   *-HisCtrEntry                               01109000
.L0032                ANOP                                              01110000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    01111000
                      AIF   ('&LIST' EQ 'YES').P4                       01112000
.P3                   ANOP                                              01113000
                      POP   PRINT                                       01114000
.P4                   ANOP                                              01115000
.P_EXIT               ANOP                                              01116000
                      MEND                                              01117000
**/ HISYSERV_2:;                                                        01118000
* %HISYSERV_INCLUDED = 'YES';                                           01119000
* %DCL ZCBPRINT CHAR EXT;                                               01120000
* %DEACTIVATE ZCBPRINT;                                                 01121000
* %DCL HISYSERV_LIST CHAR EXT;                                          01122000
* %DEACTIVATE HISYSERV_LIST;                                            01123000
* %IF HISYSERV_LIST ^= 'NO' &                                           01124000
*    ZCBPRINT ^= 'NO' %THEN                                             01125000
*   %GOTO HISYSERV_3;                                                   01126000
*   @LIST PUSH NOECHO;                                                  01127000
*   @LIST NOASSEMBLE NOECHO;                                            01128000
*   @LIST OFF C NOECHO;                                                 01129000
* %HISYSERV_3:;                                                         01130000
*/* Start of PL/X Source                                             */ 01131000
*                                                                       01132000
*/********************************************************************/ 01133000
*/* HISSERV REQUEST=QUERY Generic answer area                        */ 01134000
*/*                                                                  */ 01135000
*/* The length of the storage passed in via ANSAREA on a             */ 01136000
*/* HISSERV REQUEST=QUERY request must have an ANSLEN of at least    */ 01137000
*/* HisAns_kLength. Depending on the request, if enough storage      */ 01138000
*/* isn't provide for a successful request the service will return   */ 01139000
*/* with a warning code of Hisserv_kRsnWarn_AnsAreaSmall. Retrying   */ 01140000
*/* the query with an ANSLEN of HisAns_LengthRequired will           */ 01141000
*/* eventually be successful. To ensure future compatibility, you    */ 01142000
*/* must recognize that the amount of storage obtained for a specific*/ 01143000
*/* request might not be enough, and you must provide code in case   */ 01144000
*/* the reason of Hisserv_kRsnWarn_AnsAreaSmall is returned, even if */ 01145000
*/* the request's ANSLEN appears to be static in nature.             */ 01146000
*/*                                                                  */ 01147000
*/* When navigating from one area to the next, if a field is         */ 01148000
*/* provided that contains the length of the current area, that field*/ 01149000
*/* must be used to get to the next area rather than relying on the  */ 01150000
*/* current length of the DSECT. Similarly, when dealing with any of */ 01151000
*/* the arrays described within this macro, to navigate from one     */ 01152000
*/* entry to the next you must use the length field that is provided */ 01153000
*/* in the array descriptor rather than relying on the current       */ 01154000
*/* length of the entry's DSECT.                                     */ 01155000
*/*                                                                  */ 01156000
*/********************************************************************/ 01157000
*Dcl                                                                    01158000
* 1 HisAns Type                                                         01159000
*  ,3 HisAns_Eye Char(4) /* Eyecatcher, can be used to identify the     01160000
*                        request. See each unique request's ANSAREA     01161000
*                        DSECT for more information.                 */ 01162000
*  ,3 HisAns_Version Fixed(16) /* Version identifier, this defines      01163000
*                        which fields are available for a given         01164000
*                        request. See each unique request's ANSAREA     01165000
*                        DSECT for more information.                 */ 01166000
*  ,3 * Char(2)                                                         01167000
*  ,3 HisAns_LengthSupplied Fixed(64) /* Length of storage supplied     01168000
*                        for the query request. This is equal to the    01169000
*                        value supplied in ANSLEN.                   */ 01170000
*  ,3 HisAns_LengthRequired Fixed(64) /* Length of storage required     01171000
*                        for the query request to complete              01172000
*                        successfully. If the request returns with a    01173000
*                        reason code of Hisserv_kRsnWarn_AnsAreaSmall,  01174000
*                        a subsequent request with an ANSLEN of         01175000
*                        HisAns_LengthRequired will eventually be       01176000
*                        successful.                                 */ 01177000
*  ,3 HisAns_End Char(0) Bdy(Dword);                                    01178000
*                                                                       01179000
*Dcl HisAns_kLength      Fixed(16) Constant(Length(HisAns));            01180000
*                                                                       01181000
*/********************************************************************/ 01182000
*/* HISSERV Return/Reason Codes                                      */ 01183000
*/*   o It is guaranteed that no reason code will be reused (i.e.    */ 01184000
*/*     the same reason code will not be used for more than one      */ 01185000
*/*     return code).                                                */ 01186000
*/*   o Note carefully that bits 0-15 of the reason code may contain */ 01187000
*/*     component-diagnostic data and must not be assumed to be      */ 01188000
*/*     0.                                                           */ 01189000
*/********************************************************************/ 01190000
*Dcl Hisserv_kRsnCodeMask          Fixed(32) Constant('0000FFFF'X); /*  01191000
*                        Use this mask to isolate the non               01192000
*                        component-diagnostic portion of the reason     01193000
*                        code.                                       */ 01194000
*                                                                       01195000
*/* HISSERV Return and Reason Code definitions                       */ 01196000
*DCL Hisserv_kRetOk BIT(32) Constant('00000000'X) ; /*                  01197000
*                        Meaning: HISSERV request successful.           01198000
*                        Action: Processing continues.               */ 01199000
*DCL Hisserv_kRetWarn BIT(32) Constant('00000004'X) ; /*                01200000
*                        Meaning: Warning                               01201000
*                        Action: Refer to the action provided with the  01202000
*                        specific reason code.                       */ 01203000
*DCL Hisserv_kRsnWarn_AnsAreaSmall BIT(32) Constant('00000401'X) ; /*   01204000
*                        Meaning: For REQUEST=QUERY, the answer area    01205000
*                        provided was large enough to hold the minimum  01206000
*                        amount of data required for the request, but   01207000
*                        not large enough to hold all of the data       01208000
*                        requested.                                     01209000
*                        Action: Obtain a larger answer area using the  01210000
*                        HisAns_LengthRequired field returned in the    01211000
*                        request's ANSAREA.                          */ 01212000
*DCL Hisserv_kRetUser BIT(32) Constant('00000008'X) ; /*                01213000
*                        Meaning: HISSERV request failed due to a user  01214000
*                        error.                                         01215000
*                        Action: Refer to the action provided with the  01216000
*                        specific reason code.                       */ 01217000
*DCL Hisserv_kRsnUser_BadParmArea BIT(32) Constant('00000801'X) ; /*    01218000
*                        Meaning: Unable to access parameter area.      01219000
*                        Action: Check for possible storage overlay. */ 01220000
*DCL Hisserv_kRsnUser_BadParmAreaALET BIT(32) Constant('00000802'X)     01221000
*                        ; /*                                           01222000
*                        Meaning: Bad parameter area ALET.              01223000
*                        Action: Make sure that the ALET associated     01224000
*                        with the parameter area is valid. The access   01225000
*                        register might not have been set up correctly. 01226000
*                                                                    */ 01227000
*DCL Hisserv_kRsnUser_BadVersion BIT(32) Constant('00000803'X) ; /*     01228000
*                        Meaning: Bad version for the parameter list    01229000
*                        was specified.                                 01230000
*                        Action: Check for possible storage overlay. */ 01231000
*DCL Hisserv_kRsnUser_SrbMode BIT(32) Constant('00000804'X) ; /*        01232000
*                        Meaning: This function is only available in    01233000
*                        task mode.                                     01234000
*                        Action: Use function in task mode.          */ 01235000
*DCL Hisserv_kRsnUser_NotEnabled BIT(32) Constant('00000805'X) ; /*     01236000
*                        Meaning: This function is only available to    01237000
*                        enabled programs.                              01238000
*                        Action: Use function while enabled.         */ 01239000
*DCL Hisserv_kRsnUser_LocksHeld BIT(32) Constant('00000806'X) ; /*      01240000
*                        Meaning: This function is only available to    01241000
*                        unlocked programs.                             01242000
*                        Action: Use function while unlocked.        */ 01243000
*DCL Hisserv_kRsnUser_CallerFRR BIT(32) Constant('00000807'X) ; /*      01244000
*                        Meaning: This function is only available to    01245000
*                        programs that have not established an FRR.     01246000
*                        Action: Retry the request without an FRR       01247000
*                        established.                                */ 01248000
*DCL Hisserv_kRsnUser_BadRequest BIT(32) Constant('00000808'X) ; /*     01249000
*                        Meaning: A Bad request was made to the         01250000
*                        service.                                       01251000
*                        Action: Check for possible storage overlay. */ 01252000
*DCL Hisserv_kRsnUser_BadProfTkn BIT(32) Constant('00000809'X) ; /*     01253000
*                        Meaning: Token specified was not a valid       01254000
*                        token.                                         01255000
*                        Action: Use a valid token provided by the      01256000
*                        REQUEST=PROFILE,ACTION=START request.       */ 01257000
*DCL Hisserv_kRsnUser_NameInUse BIT(32) Constant('0000080A'X) ; /*      01258000
*                        Meaning: The name requested is already in use. 01259000
*                        Action: Provide a NAME that is unique to the   01260000
*                        service.                                    */ 01261000
*DCL Hisserv_kRsnUser_InvName BIT(32) Constant('0000080B'X) ; /*        01262000
*                        Meaning: The name requested is invalid.        01263000
*                        Action: Provide a valid NAME, it cannot begin  01264000
*                        with HIS.                                   */ 01265000
*DCL Hisserv_kRsnUser_ExitRtnNotFound BIT(32) Constant('0000080C'X)     01266000
*                        ; /*                                           01267000
*                        Meaning: The exit routine specified wasn't     01268000
*                        found.                                         01269000
*                        Action: Ensure the exit routine specified      01270000
*                        exists in LPA, the LNKLST concatenation, or    01271000
*                        the nucleus.                                */ 01272000
*DCL Hisserv_kRsnUser_ExitRtnInUse BIT(32) Constant('0000080D'X) ; /*   01273000
*                        Meaning: The exit routine specified is already 01274000
*                        in use.                                        01275000
*                        Action: A different exit routine must be       01276000
*                        provided.                                   */ 01277000
*DCL Hisserv_kRsnUser_BadEvnTyp BIT(32) Constant('0000080E'X) ; /*      01278000
*                        Meaning: For REQUEST=PROFILE,ACTION=START      01279000
*                        requests, one or more even types specified     01280000
*                        could not be properly configured for because   01281000
*                        it is not allowed. Only event types returned   01282000
*                        in the HisEvn_ValidEvnTyp field of a           01283000
*                        REQUEST=QUERY,TYPE=EVENT request can be        01284000
*                        requested.                                     01285000
*                        Action: Ensure the event types being requested 01286000
*                        are a subset of the event types returned in    01287000
*                        the HisEvn_ValidEvnTyp field of a              01288000
*                        REQUEST=QUERY,TYPE=EVENT request.           */ 01289000
*DCL Hisserv_kRsnUser_BadProfReq BIT(32) Constant('0000080F'X) ; /*     01290000
*                        Meaning: A bad PROFILE request was made to the 01291000
*                        service.                                       01292000
*                        Action: Check for possible storage overlay. */ 01293000
*DCL Hisserv_kRsnUser_BadProfStart BIT(32) Constant('00000810'X) ; /*   01294000
*                        Meaning: For REQUEST=PROFILE,ACTION=START, a   01295000
*                        bad request was made. A least one event type   01296000
*                        or sampling should be requested when starting  01297000
*                        to profile the system.                         01298000
*                        Action: Request at least one event type or     01299000
*                        sampling.                                   */ 01300000
*DCL Hisserv_kRsnUser_BadQuery BIT(32) Constant('00000811'X) ; /*       01301000
*                        Meaning: For REQUEST=QUERY, a bad query was    01302000
*                        requested.                                     01303000
*                        Action: Check for possible storage overlay. */ 01304000
*DCL Hisserv_kRsnUser_BadAnsArea BIT(32) Constant('00000812'X) ; /*     01305000
*                        Meaning: For REQUEST=QUERY, unable to access   01306000
*                        answer area.                                   01307000
*                        Action: Provide a valid answer area.        */ 01308000
*DCL Hisserv_kRsnUser_BadAnsAreaALET BIT(32) Constant('00000813'X) ; /* 01309000
*                        Meaning: Bad answer area ALET.                 01310000
*                        Action: Make sure that the ALET associated     01311000
*                        with the answer area is valid. The access      01312000
*                        register might not have been set up correctly. 01313000
*                                                                    */ 01314000
*DCL Hisserv_kRsnUser_AnsLenTooSmall BIT(32) Constant('00000814'X) ; /* 01315000
*                        Meaning: For REQUEST=QUERY, the answer area    01316000
*                        length is incorrect.                           01317000
*                        Action: Ensure the answer area length and the  01318000
*                        storage provided as the answer area is at      01319000
*                        least HisAns_kLength bytes long.            */ 01320000
*DCL Hisserv_kRsnUser_BadCpuMask BIT(32) Constant('00000815'X) ; /*     01321000
*                        Meaning: For REQUEST=QUERY,TYPE=EVENTDATA      01322000
*                        requests, unable to access the CPU mask.       01323000
*                        Action: Provide a valid CPU mask.           */ 01324000
*DCL Hisserv_kRsnUser_BadCpuMaskALET BIT(32) Constant('00000816'X) ; /* 01325000
*                        Meaning: Bad CPU mask ALET.                    01326000
*                        Action: Make sure that the ALET associated     01327000
*                        with the CPU mask is valid. The access         01328000
*                        register might not have been set up correctly. 01329000
*                                                                    */ 01330000
*DCL Hisserv_kRsnUser_NoEvnTyp BIT(32) Constant('00000817'X) ; /*       01331000
*                        Meaning: For REQUEST=QUERY,TYPE=EVENTDATA      01332000
*                        requests, the profiler making the request is   01333000
*                        not profiling events.                          01334000
*                        Action: When registering with the system to    01335000
*                        profile, indicate the intention to profile     01336000
*                        events using the EVENT= parameter.          */ 01337000
*DCL Hisserv_kRsnUser_InvProfChange BIT(32) Constant('00000818'X) ; /*  01338000
*                        Meaning: A REQUEST=PROFILE request was made    01339000
*                        from a profiler's exit routine.                01340000
*                        Action: A REQUEST=PROFILE request cannot be    01341000
*                        made from a profiler's exit routine.        */ 01342000
*DCL Hisserv_kRetEnv BIT(32) Constant('0000000C'X) ; /*                 01343000
*                        Meaning: Environmental error                   01344000
*                        Action: Refer to the action provided with the  01345000
*                        specific reason code.                       */ 01346000
*DCL Hisserv_kRsnEnv_NotAvailable BIT(32) Constant('00000C01'X) ; /*    01347000
*                        Meaning: Function is not available.            01348000
*                        Action: This function is only available when   01349000
*                        the HIS address space is running.           */ 01350000
*DCL Hisserv_kRsnEnv_NotReady BIT(32) Constant('00000C02'X) ; /*        01351000
*                        Meaning: Function is available but is not      01352000
*                        currently ready to accept requests.            01353000
*                        Action: Retry the request.                  */ 01354000
*DCL Hisserv_kRsnEnv_NoStorage BIT(32) Constant('00000C03'X) ; /*       01355000
*                        Meaning: There was not enough storage in HIS   01356000
*                        private storage to complete the request.       01357000
*                        Action: Contact your system programmer.     */ 01358000
*DCL Hisserv_kRetUnk BIT(32) Constant('00000010'X) ; /*                 01359000
*                        Meaning: Unexpected failure.                   01360000
*                        Action: Refer to the action provided with the  01361000
*                        specific reason code.                       */ 01362000
*DCL Hisserv_kRsnUnk_Unk BIT(32) Constant('00001001'X) ; /*             01363000
*                        Meaning: Unexpected failure. The state of the  01364000
*                        request is unpredictable.                      01365000
*                        Action: Contact your system programmer.     */ 01366000
*DCL Hisserv_kRsnUnk_QueryCpu BIT(32) Constant('00001002'X) ; /*        01367000
*                        Meaning: For REQUEST=QUERY,TYPE=EVENTDATA,     01368000
*                        while attempting to query a CPU's event data   01369000
*                        an unknown error occurred.                     01370000
*                        Action: Contact your system programmer.     */ 01371000
*/* End of HISSERV Return and Reason Code definitions                */ 01372000
*                                                                       01373000
*Dcl                                                                    01374000
* 1 HisArrayDesc Type /* This DSECT describes an array of data.      */ 01375000
*  ,3 HisArrayDesc_Offset  Fixed(64) /* Offset to the array, relative   01376000
*                        to the start of the answer area             */ 01377000
*    ,5 * Char(4)                                                       01378000
*    ,5 HisArrayDesc_Offset32 Fixed(32) /* This field can be used       01379000
*                        instead of HisArrayDesc_Offset when it is      01380000
*                        known that the ANSLEN used is less than or     01381000
*                        equal to 'FFFFFFFF'x                        */ 01382000
*  ,3 HisArrayDesc_Cnt     Fixed(32) /* The number of entries in the    01383000
*                        array                                       */ 01384000
*  ,3 HisArrayDesc_EntryLength Fixed(32) /* The length of a single      01385000
*                        entry in the array. Use this when iterating    01386000
*                        through array entries instead of compile time  01387000
*                        lengths. The offset to the nth entry           01388000
*                        (1-origin) from the start of the array is      01389000
*                        ((n-1)*HisArrayDesc_EntryLength)            */ 01390000
*  ,3 HisArrayDesc_End Char(0) Bdy(Dword);                              01391000
*                                                                       01392000
*Dcl                                                                    01393000
* 1 HisEvnTyp Bit(32) Bdy(Word) Type /* This DSECT describes the        01394000
*                        defined event types. Being defined doesn't     01395000
*                        necessarily mean it is valid in the service.*/ 01396000
*  ,3 HisEvnTyp_Byte0 Bit(8)                                            01397000
*    ,5 HisEvnTyp_ZOSCtrs  Bit(1) /* The z/OS counters. These counting  01398000
*                        events are software events related to z/OS.    01399000
*                        They are driven using the z/Architecture       01400000
*                        Enhanced Monitor Facility.                  */ 01401000
*  ,3 HisEvnTyp_Byte1 Bit(8)                                            01402000
*    ,5 HisEvnTyp_SysTrace Bit(1) /* The system trace event. This event 01403000
*                        allows the querying of system trace events.    01404000
*                        Hardware tracing is described in the base      01405000
*                        z/Architecture. IBM use only.           @L1A*/ 01406000
*  ,3 HisEvnTyp_Byte2 Bit(8)                                            01407000
*  ,3 HisEvnTyp_Byte3 Bit(8)                                            01408000
*    ,5 * Bit(2)                                              /* @L3C*/ 01409000
*    ,5 HisEvnTyp_MTDiagCtrs  Bit(1) /* The MT-diagnostic counters.     01410000
*                        These counting events are the z/Architecture   01411000
*                        CPU Measurement Counter Facility               01412000
*                        MT-diagnostic Counter Set.              @02C*/ 01413000
*    ,5 * Bit(1)                      /* Reserved for IBM use    @L3A*/ 01414000
*    ,5 HisEvnTyp_CryptoCtrs   Bit(1) /* The Crypto counters. These     01415000
*                        counting events are the z/Architecture CPU     01416000
*                        Measurement Counter Facility Crypto Counter    01417000
*                        Set.                                        */ 01418000
*    ,5 HisEvnTyp_ProblemCtrs  Bit(1) /* The Problem-State counters.    01419000
*                        These counting events are the z/Architecture   01420000
*                        CPU Measurement Counter Facility Problem-State 01421000
*                        Counter Set.                                */ 01422000
*    ,5 HisEvnTyp_BasicCtrs    Bit(1) /* The Basic counters. These      01423000
*                        counting events are the z/Architecture CPU     01424000
*                        Measurement Counter Facility Basic Counter     01425000
*                        Set.                                        */ 01426000
*    ,5 HisEvnTyp_ExtendedCtrs Bit(1) /* The Extended counters. These   01427000
*                        counting events are the z/Architecture CPU     01428000
*                        Measurement Counter Facility Extended Counter  01429000
*                        Set.                                        */ 01430000
*  ,3 HisEvnTyp_End Char(0) Bdy(Word);                                  01431000
*                                                                       01432000
*Dcl                                                                    01433000
* 1 HisSmpTyp Bit(32) Bdy(Word) Type /* This DSECT describes the        01434000
*                        defined sampling types. Being defined doesn't  01435000
*                        necessarily mean it is valid in the service.*/ 01436000
*  ,3 HisSmpTyp_Byte0 Bit(8)                                            01437000
*  ,3 HisSmpTyp_Byte1 Bit(8)                                            01438000
*  ,3 HisSmpTyp_Byte2 Bit(8)                                            01439000
*  ,3 HisSmpTyp_Byte3 Bit(8)                                            01440000
*    ,5 * Bit(6)                                                        01441000
*    ,5 HisSmpTyp_Basic Bit(1) /* The Basic sampling entry. This        01442000
*                        sampling type is the z/Architecture CPU        01443000
*                        Measurement Sampling Facility Basic Sample     01444000
*                        Type.                                       */ 01445000
*    ,5 HisSmpTyp_Diag  Bit(1) /* The Diagnostic sampling entry. This   01446000
*                        sampling type is the z/Architecture CPU        01447000
*                        Measurement Sampling Facility Diagnostic       01448000
*                        Sampling Type.                              */ 01449000
*  ,3 HisSmpTyp_End Char(0) Bdy(Word);                                  01450000
*Dcl HisSmpTyp_kNoSamp Fixed(Length(HisSmpTyp)) Constant(0);  /* @P1A*/ 01451000
*                                                                       01452000
*/********************************************************************/ 01453000
*/* HISSERV REQUEST=QUERY,TYPE=PROFILE answer area                   */ 01454000
*/*                                                                  */ 01455000
*/* The required length of the storage passed in via ANSAREA on a    */ 01456000
*/* HISSERV REQUEST=QUERY,TYPE=PROFILE request depends on the current*/ 01457000
*/* number of profilers in the system.                               */ 01458000
*/*                                                                  */ 01459000
*/********************************************************************/ 01460000
*Dcl                                                                    01461000
* 1 HisProf Bdy(Dword) Type                                             01462000
*  ,3 HisProf_Ans Char(Size(HisAns)) Bdy(Dword) /* The generic answer   01463000
*                        area, mapped by DSECT HisAns. The eyecatcher   01464000
*                        for this request is HisProf_kEye.           */ 01465000
*    ,5 HisProf_Ans_IsA IsA(HisAns)                                     01466000
*  ,3 HisProf_ProfArrayDesc Char(Size(HisArrayDesc)) Bdy(Dword) /* The  01467000
*                        array descriptor for the profiler entries,     01468000
*                        each entry is mapped by HisProfEntry. This     01469000
*                        storage is mapped by DSECT HisArrayDesc.    */ 01470000
*    ,5 HisProf_ProfArrayDesc_IsA IsA(HisArrayDesc)                     01471000
*  ,3 HisProf_End Char(0) Bdy(Dword);                                   01472000
*                                                                       01473000
*Dcl HisProf_kEye        Char(4)   Constant('HISP');                    01474000
*Dcl HisProf_kVersionMax Fixed(16) Constant(HisProf_kVersion1);         01475000
*Dcl HisProf_kVersion1   Fixed(16) Constant(1);                         01476000
*Dcl HisProf_kVersionMin Fixed(16) Constant(HisProf_kVersion1);         01477000
*                                                                       01478000
*Dcl                                                                    01479000
* 1 HisProfEntry Bdy(Dword) Type /* An entry in the array described     01480000
*                        by HisProf_ProfArrayDesc. This entry           01481000
*                        represents data for one profiler            */ 01482000
*  ,3 HisProfEntry_Name   Char(8) /* An identifier for this profiler,   01483000
*                        as indicated through the NAME parameter of the 01484000
*                        HISSERV REQUEST=PROFILE,ACTION=START request*/ 01485000
*  ,3 HisProfEntry_EvnTyp Char(Size(HisEvnTyp)) Bdy(Word) /* The event  01486000
*                        types this profiler is profiling, as indicated 01487000
*                        through the EVENT parameter of the HISSERV     01488000
*                        REQUEST=PROFILE,ACTION=START request. Mapped   01489000
*                        by DSECT HisEvnTyp.                         */ 01490000
*    ,5 HisProfEntry_EvnTyp_IsA IsA(HisEvnTyp)                          01491000
*  ,3 HisProfEntry_Flgs Bit(16)                                         01492000
*    ,5 HisProfEntryFlgs_Smp Bit(1) /* Whether this profiler is         01493000
*                        profiling samples, as indicated through the    01494000
*                        SAMPLE parameter of the HISSERV                01495000
*                        REQUEST=PROFILE,ACTION=START request.       */ 01496000
*    ,5 HisProfEntryFlgs_Failed Bit(1) /* The profiler had a sampling   01497000
*                        exit routine that abended or otherwise failed  01498000
*                                                                @01A*/ 01499000
*  ,3 * Char(2)                                                         01500000
*  ,3 HisProfEntry_StartTime Char(8) /* The time the profiler began     01501000
*                        profiling the system, in STCK format.       */ 01502000
*  ,3 HisProfEntry_EvnQueryInterval Char(8) /* The average time this    01503000
*                        profiler waits between event queries, in       01504000
*                        STCK format. The longer the time, the better   01505000
*                        it is for the system. When zero, this profiler 01506000
*                        has queried for events no more than one time.  01507000
*                                                                    */ 01508000
*  ,3 HisProfEntry_SmpExitTime Char(8) /* The average time this         01509000
*                        profiler takes to handle a sampling exit       01510000
*                        callback, in STCK format. The shorter the      01511000
*                        time, the better it is for the system. When    01512000
*                        zero, this profiler isn't sampling or hasn't   01513000
*                        yet received a sampling exit callback.      */ 01514000
*  ,3 HisProfEntry_End Char(0) Bdy(Dword);                              01515000
*                                                                       01516000
*/********************************************************************/ 01517000
*/* HISSERV REQUEST=QUERY,TYPE=SAMPLE answer area                    */ 01518000
*/*                                                                  */ 01519000
*/* The required length of the storage passed in via ANSAREA on a    */ 01520000
*/* HISSERV REQUEST=QUERY,TYPE=SAMPLE request depends on the number  */ 01521000
*/* of sampling entry formats known by the service.                  */ 01522000
*/*                                                                  */ 01523000
*/********************************************************************/ 01524000
*Dcl                                                                    01525000
* 1 HisSmp Bdy(Dword) Type                                              01526000
*  ,3 HisSmp_Ans Char(Size(HisAns)) Bdy(Dword) /* The common answer     01527000
*                        area, mapped by DSECT HisAns. The eyecatcher   01528000
*                        for this request is HisSmp_kEye.            */ 01529000
*    ,5 HisSmp_Ans_IsA IsA(HisAns)                                      01530000
*  ,3 HisSmp_ServiceSeq Fixed(32) /* The sequence number representing   01531000
*                        the sampling state of the service for when     01532000
*                        data was returned. Any other data provided     01533000
*                        by the service with the same sampling state    01534000
*                        sequence number is in sync with this data.  */ 01535000
*  ,3 HisSmp_ValidSmpTyp Char(Size(HisSmpTyp)) Bdy(Word) /* The valid   01536000
*                        sampling types. Mapped by DSECT HisSmpTyp.  */ 01537000
*    ,5 HisSmp_ValidSmpTyp_IsA  IsA(HisSmpTyp)                          01538000
*  ,3 HisSmp_HdwrAuthSmpTyp Char(Size(HisSmpTyp)) Bdy(Word) /* The      01539000
*                        hardware authorized sampling types. This is  a 01540000
*                        subset of HisSmp_ValidSmpTyp. Mapped by DSECT  01541000
*                        HisSmpTyp.                                  */ 01542000
*    ,5 HisSmp_HdwrAuthSmpTyp_IsA IsA(HisSmpTyp)                        01543000
*  ,3 HisSmp_SfwrAuthSmpTyp Char(Size(HisSmpTyp)) Bdy(Word) /* The HIS  01544000
*                        authorized sampling types, as indicated by the 01545000
*                        most recent MODIFY HIS command that changed    01546000
*                        the SAMPTYPE. This is a subset of              01547000
*                        HisSmp_ValidSmpTyp. Mapped by DSECT            01548000
*                        HisSmpTyp.                                  */ 01549000
*    ,5 HisSmp_SfwrAuthSmpTyp_IsA IsA(HisSmpTyp)                        01550000
*  ,3 HisSmp_EnabSmpTyp Char(Size(HisSmpTyp)) Bdy(Word) /* The enabled  01551000
*                        sampling types. This is a subset of            01552000
*                        HisSmp_SfwrAuthSmpTyp. Mapped by DSECT         01553000
*                        HisSmpTyp                                   */ 01554000
*    ,5 HisSmp_EnabSmpTyp_IsA     IsA(HisSmpTyp)                        01555000
*  ,3 * Char(4)                                                         01556000
*  ,3 HisSmp_FacilOffset Fixed(64) /* Offset from the start of the      01557000
*                        answer area to the HisSmpFacil DSECT. If zero, 01558000
*                        there is no HisSmpFacil section returned and   01559000
*                        no corresponding HisSmpFmtEntry sections are   01560000
*                        returned.                               @L5C*/ 01561000
*    ,5 * Char(4)                                                       01562000
*    ,5 HisSmp_FacilOffset32 Fixed(32) /* This field can be used        01563000
*                        instead of HisSmp_FacilOffset when it is       01564000
*                        known that the ANSLEN used is less than or     01565000
*                        equal to 'FFFFFFFF'x                    @L5C*/ 01566000
*  ,3 HisSmp_End Char(0) Bdy(Dword);                                    01567000
*                                                                       01568000
*Dcl HisSmp_kEye         Char(4)   Constant('HISS');                    01569000
*Dcl HisSmp_kVersionMax  Fixed(16) Constant(HisSmp_kVersion1);          01570000
*Dcl HisSmp_kVersion1    Fixed(16) Constant(1);                         01571000
*Dcl HisSmp_kVersionMin  Fixed(16) Constant(HisSmp_kVersion1);          01572000
*                                                                       01573000
*Dcl                                                                    01574000
* 1 HisSmpFacil Bdy(Dword) Type /* Sampling info which describes        01575000
*                        CPU Measurement sampling events             */ 01576000
*  ,3 HisSmpFacil_Freq  Fixed(31) /* The sampling frequency in number   01577000
*                        of samples to be taken in one minute across    01578000
*                        all CPUs, as indicated by the most recent      01579000
*                        MODIFY HIS command that changed the SAMPFREQ*/ 01580000
*  ,3 HisSmpFacil_BufCnt Fixed(32) /* The buffer count in number of     01581000
*                        SDBs per CPU, as indicated by the most recent  01582000
*                        MODIFY HIS command that changed the BUFCNT. */ 01583000
*  ,3 HisSmpFacil_SpeedCP Fixed(32) /* Speed of a CP, in cycles per     01584000
*                        microsecond                                 */ 01585000
*  ,3 HisSmpFacil_SpeedzCBP Fixed(32) /* Speed of a zCBP, in cycles per 01586000
*                        microsecond                             @L6A*/ 01587000
*    ,5 HisSmpFacil_SpeedzAAP Fixed(32) /* Speed of a zAAP, in cycles   01588000
*                        per microsecond                         @L6C*/ 01589000
*  ,3 HisSmpFacil_SpeedzIIP Fixed(32) /* Speed of a zIIP, in cycles per 01590000
*                        microsecond                                 */ 01591000
*  ,3 * Char(4)                                                         01592000
*  ,3 HisSmpFacil_Intv  Fixed(64) /* The interval a CPU waits between   01593000
*                        samples, in number of CPU cycles.           */ 01594000
*  ,3 HisSmpFacil_SmpFmtArrayDesc Char(Size(HisArrayDesc))              01595000
*                                 Bdy(Dword) /*                         01596000
*                        The array descriptor for possible sampling     01597000
*                        entry format codes. Each entry is mapped by    01598000
*                        HisSmpFmtEntry. This storage is mapped by      01599000
*                        DSECT HisArrayDesc.                         */ 01600000
*    ,5 HisSmpFacil_SmpFmtArrayDesc_IsA IsA(HisArrayDesc)               01601000
*  ,3 HisSmpFacil_End Char(0) Bdy(Dword);                               01602000
*                                                                       01603000
*Dcl                                                                    01604000
* 1 HisSmpFmtEntry Bdy(Dword) Type /* An entry in the array described   01605000
*                        by HisSmpFacil_SmpFmtArrayDesc. This entry     01606000
*                        represents the data for one sample entry       01607000
*                        format code.                            @L5C*/ 01608000
*  ,3 HisSmpFmtEntry_Length Fixed(32) /* The length of the sampling     01609000
*                        entry.                                      */ 01610000
*  ,3 HisSmpFmtEntry_SmpTypBit Fixed(16) /* The bit position (1-origin) 01611000
*                        into HisSmpTyp that identifies the sample      01612000
*                        type this format code belongs to.           */ 01613000
*  ,3 HisSmpFmtEntry_Code Fixed(16) /* The format code of the sampling  01614000
*                        entry.                                      */ 01615000
*  ,3 HisSmpFmtEntry_End Char(0) Bdy(Dword);                            01616000
*                                                                       01617000
*/********************************************************************/ 01618000
*/* HISSERV REQUEST=QUERY,TYPE=EVENT answer area                     */ 01619000
*/*                                                                  */ 01620000
*/* The required length of the storage passed in via ANSAREA on a    */ 01621000
*/* HISSERV REQUEST=QUERY,TYPE=EVENT request is the length of a      */ 01622000
*/* HisEvn DSECT plus the length of a HisEvnCtr DSECT plus           */ 01623000
*/* HisEvn_More bytes. This is still not guaranteed to succeed in    */ 01624000
*/* future releases.                                                 */ 01625000
*/*                                                                  */ 01626000
*/********************************************************************/ 01627000
*Dcl                                                                    01628000
* 1 HisEvn Bdy(Dword) Type                                              01629000
*  ,3 HisEvn_Ans Char(Size(HisAns)) Bdy(Dword) /* The common answer     01630000
*                        area, mapped by DSECT HisAns. The eyecatcher   01631000
*                        for this request is HisEvn_kEye.            */ 01632000
*    ,5 HisEvn_Ans_IsA IsA(HisAns)                                      01633000
*  ,3 HisEvn_ServiceSeq Fixed(32) /* The sequence number representing   01634000
*                        the event state of the service for when this   01635000
*                        data was returned. Any other data provided     01636000
*                        by the service with the same event state       01637000
*                        sequence number is in sync with this data.  */ 01638000
*  ,3 HisEvn_ValidEvnTyp Char(Size(HisEvnTyp)) Bdy(Word) /* The valid   01639000
*                        event types. Mapped by DSECT HisEvnTyp.     */ 01640000
*    ,5 HisEvn_ValidEvnTyp_IsA IsA(HisEvnTyp)                           01641000
*  ,3 HisEvn_HdwrAuthEvnTyp Char(Size(HisEvnTyp)) Bdy(Word) /* The      01642000
*                        hardware authorized event types. This is a     01643000
*                        subset of HisEvn_ValidEvnTyp. Mapped by DSECT  01644000
*                        HisEvnTyp.                                  */ 01645000
*    ,5 HisEvn_HdwrAuthEvnTyp_IsA IsA(HisEvnTyp)                        01646000
*  ,3 HisEvn_SfwrAuthEvnTyp Char(Size(HisEvnTyp)) Bdy(Word) /* The HIS  01647000
*                        authorized event types. This is a subset of    01648000
*                        HisEvn_ValidEvnTyp. Mapped by DSECT HisEvnTyp. 01649000
*                                                                    */ 01650000
*    ,5 HisEvn_SfwrAuthEvnTyp_IsA    IsA(HisEvnTyp)                     01651000
*  ,3 HisEvn_EnabEvnTyp  Char(Size(HisEvnTyp)) Bdy(Word) /* The enabled 01652000
*                        event types. This is a subset of               01653000
*                        HisEvn_SfwrAuthEvnTyp. Mapped by DSECT         01654000
*                        HisEvnTyp.                                  */ 01655000
*    ,5 HisEvn_EnabEvnTyp_IsA  IsA(HisEvnTyp)                           01656000
*  ,3 HisEvn_HdwrMTEvnTyp Char(Size(HisEvnTyp)) Bdy(Word) /* The        01657000
*                        event types that are MT oriented. This is a    01658000
*                        subset of HisEvn_HdwrAuthEvnTyp. Mapped by     01659000
*                        DSECT HisEvnTyp.                        @02C*/ 01660000
*    ,5 HisEvn_HdwrMTEvnTyp_IsA  IsA(HisEvnTyp)               /* @02C*/ 01661000
*  ,3 HisEvn_CtrOffset   Fixed(64) /* Offset from the start of the      01662000
*                        answer area to the HisEvnCtr DSECT. If zero,   01663000
*                        there is no HisEvnCtr section returned.     */ 01664000
*    ,5 * Char(4)                                                       01665000
*    ,5 HisEvn_CtrOffset32 Fixed(32) /* This field can be used          01666000
*                        instead of HisEvn_CtrOffset when it is         01667000
*                        known that the ANSLEN used is less than or     01668000
*                        equal to 'FFFFFFFF'x                        */ 01669000
*  ,3 HisEvn_TrcOffset   Fixed(64) /* Offset from the start of the      01670000
*                        answer area to the HisEvnTrc DSECT. If zero,   01671000
*                        there is no HisEvnTrc section returned.        01672000
*                        IBM use only.                               */ 01673000
*    ,5 * Char(4)                                                       01674000
*    ,5 HisEvn_TrcOffset32 Fixed(32) /* This field can be used          01675000
*                        instead of HisEvn_TrcOffset when it is         01676000
*                        known that the ANSLEN used is less than or     01677000
*                        equal to 'FFFFFFFF'x.                          01678000
*                        IBM use only.                               */ 01679000
*  ,3 HisEvn_End Char(0) Bdy(Dword);                                    01680000
*                                                                       01681000
*Dcl HisEvn_kEye        Char(4)   Constant('HISE');                     01682000
*Dcl HisEvn_kVersionMax Fixed(16) Constant(HisEvn_kVersion1);           01683000
*Dcl HisEvn_kVersion1   Fixed(16) Constant(1);                          01684000
*Dcl HisEvn_kVersionMin Fixed(16) Constant(HisEvn_kVersion1);           01685000
*Dcl HisEvn_More        Fixed(16) Constant(8);                /* @L4A*/ 01686000
*                                                                       01687000
*Dcl                                                                    01688000
* 1 HisEvnCtr Bdy(Dword) Type /* Event info which describes counting    01689000
*                        events                                      */ 01690000
*  ,3 HisEvnCtr_CtrVersion0 Fixed(16) /* Zero counter version value,    01691000
*                        used to derive meaning to the z/OS counters.   01692000
*                        The z/OS counters are for IBM use.          */ 01693000
*  ,3 HisEvnCtr_CtrVersion1 Fixed(16) /* First counter version value,   01694000
*                        used to derive meaning to the counter numbers  01695000
*                        for the Basic Counter and Problem-State        01696000
*                        counter event types. See macro HISYCTRS for    01697000
*                        meanings of the counters.                   */ 01698000
*  ,3 HisEvnCtr_CtrVersion2 Fixed(16) /* Second counter version value,  01699000
*                        used to derive meaning to the counter number   01700000
*                        for the Crypto Counter, Extended and           01701000
*                        MT-diagnostic counter event types. See macro   01702000
*                        HISYCTRS for meanings of the counters. @02C */ 01703000
*  ,3 * Char(2)                                                         01704000
*  ,3 HisEvnCtr_EvnTypNumCtrs(Length(HisEvnTyp)) Fixed(32) /* An array  01705000
*                        describing the number of counters in each      01706000
*                        event type. An event type's bit position in    01707000
*                        the HisEvnTyp DSECT should be used to index    01708000
*                        into this array to find the number of counters 01709000
*                        for that event type. For example, the Crypto   01710000
*                        counters, indicated by the x'08' bit in        01711000
*                        byte 3 of HisEvnTyp, is bit position 29 so     01712000
*                        reference the 29th entry in this array.     */ 01713000
*  ,3 HisEvnCtr_End Char(0) Bdy(Dword);                                 01714000
*                                                                       01715000
*                                                                       01716000
*/********************************************************************/ 01717000
*/* HISSERV REQUEST=QUERY,TYPE=EVENTDATA answer area                 */ 01718000
*/*                                                                  */ 01719000
*/* The required length of the storage passed in via ANSAREA on a    */ 01720000
*/* HISSERV REQUEST=QUERY,TYPE=EVENTDATA request depends on the      */ 01721000
*/* number of CPUs queried as well as the number of event types      */ 01722000
*/* queried.                                                         */ 01723000
*/*                                                                  */ 01724000
*/********************************************************************/ 01725000
*Dcl                                                                    01726000
* 1 HisEvnData Bdy(Dword) Type                                          01727000
*  ,3 HisEvnData_Ans Char(Size(HisAns)) Bdy(Dword) /* The common answer 01728000
*                        area, mapped by DSECT HisAns. The eyecatcher   01729000
*                        for this request is HisEvnData_kEye.        */ 01730000
*    ,5 HisEvnData_Ans_IsA IsA(HisAns)                                  01731000
*  ,3 HisEvnData_ServiceSeq Fixed(32) /* The sequence number            01732000
*                        representing the event types of the service    01733000
*                        for when this data was returned. Any other     01734000
*                        data provided by the service with the same     01735000
*                        event state sequence number is in sync with    01736000
*                        this data.                                  */ 01737000
*  ,3 HisEvnData_EvnTyp Char(Size(HisEvnTyp)) Bdy(Word) /* The event    01738000
*                        types returned for this request. Mapped by     01739000
*                        DSECT HisEvnTyp.                            */ 01740000
*    ,5 HisEvnData_EvnTyp_IsA IsA(HisEvnTyp)                            01741000
*  ,3 HisEvnData_CpuArrayDesc Char(Size(HisArrayDesc)) Bdy(Dword) /*    01742000
*                        The array descriptor for CPU entries, the      01743000
*                        beginning of each entry is mapped by           01744000
*                        HisEvnCpuEntry, though may not be a complete   01745000
*                        representation of the CPU entry. This          01746000
*                        storage is mapped by DSECT HisArrayDesc.    */ 01747000
*    ,5 HisEvnData_CpuArrayDesc_IsA IsA(HisArrayDesc)                   01748000
*  ,3 HisEvnData_End Char(0) Bdy(Dword);                                01749000
*                                                                       01750000
*Dcl HisEvnData_kEye        Char(4)   Constant('HISD');                 01751000
*Dcl HisEvnData_kVersionMax Fixed(16) Constant(HisEvnData_kVersion1);   01752000
*Dcl HisEvnData_kVersion1   Fixed(16) Constant(1);                      01753000
*Dcl HisEvnData_kVersionMin Fixed(16) Constant(HisEvnData_kVersion1);   01754000
*                                                                       01755000
*Dcl                                                                    01756000
* 1 HisEvnCpuEntry Bdy(Dword) Type /* An entry in the array described   01757000
*                        by HisEvnData_CpuArrayDesc. This entry         01758000
*                        represents the data for one CPU that provided  01759000
*                        event data.                                 */ 01760000
*  ,3 HisEvnCpuEntry_CpuId Fixed(16) /* The physical CPU ID of this CPU 01761000
*                                                                    */ 01762000
*  ,3 HisEvnCpuEntry_ProcClass Fixed(15) /* The processor type of this  01763000
*                        CPU. Will be one of the following:             01764000
*                                 0 = Standard CP                       01765000
*                                 2 = zCBP or zAAP                      01766000
*                                 4 = zIIP                              01767000
*                                                                @L6C*/ 01768000
*  ,3 HisEvnCpuEntry_CoreId Fixed(16) /* The physical core ID of this   01769000
*                                        CPU                     @02C*/ 01770000
*  ,3 * Char(2)                                               /* @L2C*/ 01771000
*  ,3 HisEvnCpuEntry_CtrOffset Fixed(64) /* Offset from the start of    01772000
*                        the answer area to the HisEvnCtrCpuEntry       01773000
*                        DSECT. If zero, there is no HisEvnCtrCpuEntry  01774000
*                        section returned.                           */ 01775000
*    ,5 * Char(4)                                                       01776000
*    ,5 HisEvnCpuEntry_CtrOffset32 Fixed(32) /* This field can be used  01777000
*                        instead of HisEvnCpuEntry_CtrOffset when it is 01778000
*                        known the ANSLEN used is less than or equal    01779000
*                        to 'FFFFFFFF'x                              */ 01780000
*  ,3 HisEvnCpuEntry_TrcOffset Fixed(64) /* Offset from the start of    01781000
*                        the answer area to the HisEvnTrcCpuEntry       01782000
*                        DSECT. If zero, there is no HisEvnTrcCpuEntry  01783000
*                        section returned.                       @L1C*/ 01784000
*    ,5 * Char(4)                                                       01785000
*    ,5 HisEvnCpuEntry_TrcOffset32 Fixed(32) /* This field can be used  01786000
*                        instead of HisEvnCpuEntry_TrcOffset when it is 01787000
*                        known that the ANSLEN used is less than or     01788000
*                        equal to 'FFFFFFFF'x                    @L1A*/ 01789000
*  ,3 HisEvnCpuEntry_End Char(0) Bdy(Dword);                            01790000
*                                                                       01791000
*Dcl                                                                    01792000
* 1 HisEvnCtrCpuEntry Bdy(Dword) Type /* Event data for one CPU that    01793000
*                        provided counter event data.                */ 01794000
*  ,3 HisEvnCtrCpuEntry_CtrException Fixed(32) /* The number of times   01795000
*                        an invalid z/OS counter has been counted on    01796000
*                        this CPU. A non-zero value indicates z/OS      01797000
*                        counter use not known to HIS.               */ 01798000
*  ,3 * Char(4)                                                         01799000
*  ,3 HisEvnCtrCpuEntry_CtrArrayDesc Char(Size(HisArrayDesc))           01800000
*                                 Bdy(Dword) /* The array descriptor    01801000
*                        of counter entries, each entry is mapped by    01802000
*                        HisCtrEntry. This storage is mapped by DSECT   01803000
*                        HisArrayDesc. Note, this array descriptor is   01804000
*                        for all HisCtrEntry entries for all returned   01805000
*                        counters.                                   */ 01806000
*    ,5 HisEvnCtrCpuEntry_CtrArrayDesc_IsA IsA(HisArrayDesc)            01807000
*  ,3 HisEvnCtrCpuEntry_CtrSetIdx(Length(HisEvnTyp)) Fixed(31) /* An    01808000
*                        array containing the starting index (1-origin) 01809000
*                        into the array described by                    01810000
*                        HisEvnCpuEntry_CtrArrayDesc for each set of    01811000
*                        counters. A set of counter's bit position in   01812000
*                        the HisEvnTyp DSECT should be used to index    01813000
*                        into this array to find the appropriateg       01814000
*                        starting index for that set of counter. For    01815000
*                        example, the Crypto counters, indicated by     01816000
*                        the x'08' bit in byte 3 of HisEvnTyp, is bit   01817000
*                        position 29 so the 29th entry in this array.   01818000
*                        The first HisCtrEntry entry for a set of       01819000
*                        counters represents counter 0 for that         01820000
*                        set. The number of subsequent HisCtrEntry      01821000
*                        entries that belong to the same set of         01822000
*                        counter can be determined through a            01823000
*                        HISSERV REQUEST=QUERY,TYPE=EVENT request.      01824000
*                        Counter n of a set of counter will be n        01825000
*                        HisCtrEntry entries beyond the first. When     01826000
*                        the HisEvnCpuEntry_CtrSetIdx value is zero,    01827000
*                        no counters for that specified event type      01828000
*                        were captured.                              */ 01829000
*  ,3 HisEvnCtrCpuEntry_End Char(0) Bdy(Dword);                         01830000
*                                                                       01831000
*Dcl                                                                    01832000
* 1 HisCtrEntry Bdy(Dword) Type /* An entry in the array described      01833000
*                        by HisEvnCtrCpuEntry_CtrArrayDesc. This entry  01834000
*                        represents the data for one counter.        */ 01835000
*  ,3 HisCtrEntry_HdwrCtr Fixed(64) /* When the counter belongs to the  01836000
*                        Basic, Problem, Crypto, Extended or            01837000
*                        MT-diagnostic event types, the counter data    01838000
*                        is 8 bytes.                             @02C*/ 01839000
*    ,5 * Char(2)                                                       01840000
*    ,5 HisCtrEntry_SfwrCtr Char(6) /* When the counter belongs to the  01841000
*                        z/OS event type, the counter data is           01842000
*                        6 bytes.                                    */ 01843000
*  ,3 HisCtrEntry_End Char(0) Bdy(Dword);                               01844000
*                                                                       01845000
* %If HISYSERV_CBGEN ^= 'YES' %Then                                     01846000
* %Do;                                                                  01847000
*   %include syslib(hisyseri);                                          01848000
* %End;                                                                 01849000
*                                                                       01850000
* @LOGIC;                                                               01851000
* #PRAGMA TOOL=CBGEN.                                                   01852000
* #USEORG.                                                              01853000
* #ALIGNOP.                                                             01854000
* #NOTUPPER.                                                            01855000
* #LINE.%HISYSERV_CBGEN = 'YES';                                        01856000
* #LINE.%include syslib(HISYSERV);                                      01857000
* #DELETE.HisProf_Ans_IsA                                               01858000
* #DELETE.HisProf_ProfArrayDesc_IsA                                     01859000
* #DELETE.HisProfEntry_EvnTyp_IsA                                       01860000
* #DELETE.HisSmp_Ans_IsA                                                01861000
* #DELETE.HisSmp_ValidSmpTyp_IsA                                        01862000
* #DELETE.HisSmp_HdwrAuthSmpTyp_IsA                                     01863000
* #DELETE.HisSmp_SfwrAuthSmpTyp_IsA                                     01864000
* #DELETE.HisSmp_EnabSmpTyp_IsA                                         01865000
* #DELETE.HisSmpFacil_SmpFmtArrayDesc_IsA                               01866000
* #DELETE.HisEvn_Ans_IsA                                                01867000
* #DELETE.HisEvn_ValidEvnTyp_IsA                                        01868000
* #DELETE.HisEvn_HdwrAuthEvnTyp_IsA                                     01869000
* #DELETE.HisEvn_SfwrAuthEvnTyp_IsA                                     01870000
* #DELETE.HisEvn_EnabEvnTyp_IsA                                         01871000
* #DELETE.HisEvn_HdwrMTEvnTyp_IsA                                       01872000
* #DELETE.HisEvnData_Ans_IsA                                            01873000
* #DELETE.HisEvnData_EvnTyp_IsA                                         01874000
* #DELETE.HisEvnData_CpuArrayDesc_IsA                                   01875000
* #DELETE.HisEvnCtrCpuEntry_CtrArrayDesc_IsA                            01876000
* #EPRAGMA.                                                             01877000
* @ENDLOGIC;                                                            01878000
*/* End of PL/X Source                                               */ 01879000
* %IF HISYSERV_LIST ^= 'NO' &                                           01880000
*    ZCBPRINT ^= 'NO' %THEN                                             01881000
*   %GOTO HISYSERV_4;                                                   01882000
*   @LIST POP NOECHO;                                                   01883000
* %HISYSERV_4:;                                                         01884000
* %END;                                                                 01885000
