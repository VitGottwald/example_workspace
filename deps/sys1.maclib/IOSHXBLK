*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IOSHXBLK                              -08/26/09-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  HyperSwap Programmatic Block Interface        * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 2009, 2009                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7760                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IOSHXBLK macro is used by an authorized application to     * 00002100
*      request one of the following actions by Basic Hyperswap        * 00002200
*      Services:                                                      * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      BLOCK     Suspend Basic HyperSwap services while an            * 00002600
*                application performs some function.                  * 00002700
*                                                                     * 00002800
*      UNBLOCK   Resume Basic HyperSwp services after the application * 00002900
*                has completed the function.                          * 00003000
*                                                                     * 00003100
*      TESTBLOCK Test whether or not all systems in the SYSPLEX       * 00003200
*                support programmatic blocking.                       * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*      The IOSHXBLK macro does not return control to the invoking     * 00003700
*      application until Basic HyperSwap Services have completed the  * 00003800
*      BLOCK or UNBLOCK request.                                      * 00003900
*                                                                     * 00004000
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00004100
*                                                                     * 00004200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004300
*                                                                     * 00004400
*01* ENVIRONMENT:                                                     * 00004500
*                                                                     * 00004600
*                                                                     * 00004700
*      Dispatchable unit mode: Task mode.                             * 00004800
*                                                                     * 00004900
*      Minimum authorization: Supervisor state.  System PSW key.      * 00005000
*                                                                     * 00005100
*      AMODE:            31-bit.                                      * 00005200
*                                                                     * 00005300
*      ASC mode:         Primary.                                     * 00005400
*                                                                     * 00005500
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*01* RESTRICTIONS:                                                    * 00006000
*    The invoker must not hold any locks.                             * 00006100
*                                                                     * 00006200
*01* SYNTAX:                                                          * 00006300
*                                                                     * 00006400
*Ýxlabel¨  IOSHXBLK  Ð  BLOCK                                         * 00006500
*                    !     ,NAMEPTR=xnameptr                          * 00006600
*                    !     ,TOKENPTR=xtokenptr                        * 00006700
*                    Ô ,UNBLOCK                                       * 00006800
*                    !     ,NAMEPTR=xnameptr                          * 00006900
*                    !     ,TOKENPTR=xtokenptr                        * 00007000
*                    !    Ý,FORCE=»NO!YESº¨                           * 00007100
*                    ¿ ,TESTBLOCK                                     * 00007200
*                     Ý,RETCODE=xretcode¨                             * 00007300
*                     Ý,RSNCODE=xrsncode¨                             * 00007400
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00007500
*                    ÐÝ,MF=S¨                                         * 00007600
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00007700
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*      Where:                                                         * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*      Ýxlabel¨                                                       * 00008400
*          is an optional symbol, starting in column 1, that is the   * 00008500
*          name on the IOSHXBLK macro invocation.  The name must      * 00008600
*          conform to the rules for an ordinary assembler language    * 00008700
*          symbol.                                                    * 00008800
*          DEFAULT: No name.                                          * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*      The following is a set of mutually exclusive keys.  This set   * 00009400
*      is required; only one key must be specified.                   * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*      BLOCK                                                          * 00009800
*          Suspend Basic HyperSwap services.                          * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*          NAMEPTR=xnameptr                                           * 00010200
*              is the name (RS-type), or address in register          * 00010300
*              (2)-(12), of a required 4 byte input that contains the * 00010400
*              address of a 8-character area that contains the name   * 00010500
*              of the application issuing the BLOCK request.          * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*          TOKENPTR=xtokenptr                                         * 00011100
*              is the name (RS-type), or address in register          * 00011200
*              (2)-(12), of a required 4 byte input that contains the * 00011300
*              address of a 8-byte area that contains a token         * 00011400
*              uniquely identifying this instance of a BLOCK request. * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*      UNBLOCK                                                        * 00011900
*          Resume Basic Hyperswap services.                           * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*          NAMEPTR=xnameptr                                           * 00012300
*              is the name (RS-type), or address in register          * 00012400
*              (2)-(12), of a required 4 byte input that contains the * 00012500
*              address of a 8-character area that contains the name   * 00012600
*              of the application issuing the UNBLOCK request. If     * 00012700
*              this name does not match the name of the application   * 00012800
*              for which Basic HyperSwap is currently blocked, the    * 00012900
*              UNBLOCK request will be rejected.                      * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*          TOKENPTR=xtokenptr                                         * 00013500
*              is the name (RS-type), or address in register          * 00013600
*              (2)-(12), of a required 4 byte input that contains the * 00013700
*              address of a 8-byte area that contains the token       * 00013800
*              specified on the previous BLOCK request. If this token * 00013900
*              does not match the token specified on the BLOCK        * 00014000
*              request for which Basic HyperSwap is currently blocked * 00014100
*              or if FORCE(YES) is not specified on this UNBLOCK      * 00014200
*              request, the request will be rejected.                 * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*          ÝFORCE=»NO!YESº¨                                           * 00014800
*              is an optional keyword input that specifies whether to * 00014900
*              allow unblock if the token value on an UNBLOCK request * 00015000
*              does not match the token value on the BLOCK request    * 00015100
*              for which Basic HyperSwap is currently blocked.        * 00015200
*              DEFAULT: NO                                            * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*              FORCE=NO                                               * 00015600
*                  Do not unblock unless name and token specified on  * 00015700
*                  this UNBLOCK request match the name and token      * 00015800
*                  specified on the BLOCK request for which Basic     * 00015900
*                  HyperSwap is currently blocked.                    * 00016000
*                                                                     * 00016100
*              FORCE=YES                                              * 00016200
*                  Even though the token specified on this request    * 00016300
*                  does not match the token specifed on the BLOCK     * 00016400
*                  request for which Basic HyperSwap is currently     * 00016500
*                  blocked, honor this UNBLOCK request as long as the * 00016600
*                  name specified on this request matches the name    * 00016700
*                  specified on the BLOCK request for which Basic     * 00016800
*                  HyperSwap is currently blocked.                    * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*      TESTBLOCK                                                      * 00017500
*          Test whether or not all systems in the SYSPLEX support     * 00017600
*          programmatic blocking.                                     * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*      End of a set of mutually exclusive required keys.              * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*      ÝRETCODE=xretcode¨                                             * 00018500
*          is the name (RS-type) of an optional fullword output       * 00018600
*          variable, or register (2)-(12) or (15), into which the     * 00018700
*          return code is to be copied from GPR 15.  If you specify   * 00018800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00018900
*          the value will be left in GPR 15.                          * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*      ÝRSNCODE=xrsncode¨                                             * 00019500
*          is the name (RS-type) of an optional fullword output       * 00019600
*          variable into which the reason code is to be copied from   * 00019700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00019800
*          R0 (within or without parentheses), the value will be left * 00019900
*          in GPR 0.                                                  * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00020500
*          is an optional byte input decimal value in the "1-1" range * 00020600
*          that specifies the macro version.  PLISTVER is the only    * 00020700
*          key allowed on the list form of MF and determines which    * 00020800
*          parameter list is generated.  Note that MAX may be         * 00020900
*          specified instead of a number, and the parameter list will * 00021000
*          be of the largest size currently supported. This size may  * 00021100
*          grow from release to release (thus possibly affecting the  * 00021200
*          amount of storage needed by your program).  If your        * 00021300
*          program can tolerate this, IBM recommends that you always  * 00021400
*          specify MAX when creating the list form parameter list as  * 00021500
*          that will ensure that the list form parameter list is      * 00021600
*          always long enough to hold whatever parameters might be    * 00021700
*          specified on the execute form.                             * 00021800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00021900
*          default is the lowest version which allows all of the      * 00022000
*          parameters specified on the invocation to be processed.    * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*      ÝMF=»S!L!Eº¨                                                   * 00022600
*          is an optional keyword input which specifies the macro     * 00022700
*          form.                                                      * 00022800
*          DEFAULT: S                                                 * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*          ÝMF=S¨                                                     * 00023200
*              specifies the standard form of the macro.  The "S"     * 00023300
*              form generates code to put the parameters into an      * 00023400
*              in-line parameter list and invoke the desired service. * 00023500
*              Full checking for required macro keys is done along    * 00023600
*              with supplying defaults for omitted optional           * 00023700
*              parameters.                                            * 00023800
*                                                                     * 00023900
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00024000
*              specifies the list form of the macro.  The "L" form    * 00024100
*              defines an area to be used for the parameter list.     * 00024200
*              Only the PLISTVER key may be specified on the          * 00024300
*              invocation.  All other macro parameters are flagged as * 00024400
*              errors.  If PLISTVER is not specified, the original    * 00024500
*              parameter list definition is used.                     * 00024600
*                                                                     * 00024700
*            ,xmfctrl                                                 * 00024800
*              is a required input.  It is the name of a storage area * 00024900
*              for the parameter list.                                * 00025000
*                                                                     * 00025100
*            »,xmfattr!0Dº                                            * 00025200
*              is an optional 60 character input string that varies   * 00025300
*              from 1 to 60 characters. Use it to force boundary      * 00025400
*              alignment of the parameter list. Use only 0F or 0D.    * 00025500
*              DEFAULT: 0D which forces the parameter list to a       * 00025600
*              doubleword boundary.                                   * 00025700
*                                                                     * 00025800
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00025900
*              specifies the execute form of the macro.  The "E" form * 00026000
*              generates code to put the parameters into the          * 00026100
*              parameter list specified by xmfctrl and provides full  * 00026200
*              syntax checking with default setting.                  * 00026300
*                                                                     * 00026400
*            ,xmfctrl                                                 * 00026500
*              is a required input.  It is the name (RS-type), or     * 00026600
*              address in register (1)-(12), of a storage area for    * 00026700
*              the parameter list.                                    * 00026800
*                                                                     * 00026900
*            »,COMPLETEº                                              * 00027000
*              is an optional keyword input which specifies the       * 00027100
*              degree of macro parameter syntax checking.             * 00027200
*              DEFAULT: COMPLETE                                      * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*              COMPLETE                                               * 00027600
*                  Checking for required macro keys is done and       * 00027700
*                  defaults are supplied for omitted optional         * 00027800
*                  parameters.                                        * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*01* RETURN CODES:                                                    * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*                 X'00'     Basic HyperSwap Services have             * 00029100
*                           successfully completed the requested      * 00029200
*                           action.  For TESTBLOCK request, all       * 00029300
*                           systems support programmatic blocking.    * 00029400
*                                                                     * 00029500
*                 X'04'     Basic HyperSwap Services did not complete * 00029600
*                           requested action.  For TESTBLOCK request, * 00029700
*                           at least one system does not support      * 00029800
*                           programmatic blocking.                    * 00029900
*                                                                     * 00030000
*                           Reason codes                              * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                           X'00'     Basic HyperSwap Services not    * 00030400
*                                     started.                        * 00030500
*                                                                     * 00030600
*                           X'01'     Basic HyperSwap Services        * 00030700
*                                     initialization incomplete.      * 00030800
*                                                                     * 00030900
*                           X'41'     HyperSwap in progress.          * 00031000
*                                                                     * 00031100
*                           X'42'     Basic HyperSwap Services are    * 00031200
*                                     temporarily busy.               * 00031300
*                                                                     * 00031400
*                           X'43'     Basic HyperSwap blocking        * 00031500
*                                     services are in unknown state   * 00031600
*                                     due to a system error. Unblock  * 00031700
*                                     with force option is required   * 00031800
*                                     to clear this condition.        * 00031900
*                                                                     * 00032000
*                           X'44'     IOSHXBLK service timed out      * 00032100
*                                     waiting for Basic HyperSwap     * 00032200
*                                     blocking services to complete   * 00032300
*                                     the request.  Unblock with      * 00032400
*                                     force option may be required    * 00032500
*                                     before retrying the request.    * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*                 X'08'     Basic Hyperswap Services did not accept   * 00033000
*                           the request.                              * 00033100
*                                                                     * 00033200
*                           Reason codes                              * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*                           X'01'     Invalid function code           * 00033600
*                                                                     * 00033700
*                           X'02'     Caller not task mode            * 00033800
*                                                                     * 00033900
*                           X'03'     Caller not supervisor state     * 00034000
*                                                                     * 00034100
*                           X'04'     Caller not primary ascmode      * 00034200
*                                                                     * 00034300
*                           X'05'     Caller not enabled for I/O and  * 00034400
*                                     external interrupts             * 00034500
*                                                                     * 00034600
*                           X'06'     Caller is holding lock(s)       * 00034700
*                                                                     * 00034800
*                           X'07'     System resources unavailable to * 00034900
*                                     copy request                    * 00035000
*                                                                     * 00035100
*                           X'08'     Internal function code mismatch * 00035200
*                                                                     * 00035300
*                           X'09'     Routing of request in sysplex   * 00035400
*                                     failed                          * 00035500
*                                                                     * 00035600
*                           X'0A'     System service error occurred   * 00035700
*                                     while processing the request    * 00035800
*                                                                     * 00035900
*                           X'0B'     Blocking not supported by       * 00036000
*                                     HyperSwap master system         * 00036100
*                                                                     * 00036200
*                           X'0C'     Blocking not supported by one   * 00036300
*                                     or more HyperSwap member        * 00036400
*                                     systems                         * 00036500
*                                                                     * 00036600
*                           X'0D'     API address space not active on * 00036700
*                                     one or more HyperSwap member    * 00036800
*                                     systems                         * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                 X'0C'     Programming error.                        * 00037300
*                                                                     * 00037400
*                           Reason codes                              * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                           X'01'     BLOCK request while already     * 00037800
*                                     blocked. The name pointed to by * 00037900
*                                     NAMEPTR on the BLOCK request is * 00038000
*                                     the same as the name of the     * 00038100
*                                     application currently blocking  * 00038200
*                                     Basic HyperSwap.                * 00038300
*                                                                     * 00038400
*                           X'02'     BLOCK request while already     * 00038500
*                                     blocked. The name pointed to by * 00038600
*                                     NAMEPTR on the BLOCK request is * 00038700
*                                     different from the name of the  * 00038800
*                                     application currently blocking  * 00038900
*                                     Basic HyperSwap.                * 00039000
*                                                                     * 00039100
*                           X'03'     UNBLOCK request while not       * 00039200
*                                     blocked.                        * 00039300
*                                                                     * 00039400
*                           X'04'     Name or token specified on an   * 00039500
*                                     UNBLOCK request did not match   * 00039600
*                                     name or token specified on the  * 00039700
*                                     BLOCK request that is currently * 00039800
*                                     blocking Basic HyperSwap.       * 00039900
*                                                                     * 00040000
*                           X'05'     Not a BLOCK or UNBLOCK request. * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                 X'10'     Environmental error.                      * 00040500
*                                                                     * 00040600
*                           Reason codes                              * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*                           X'00'     Caller not authorized or        * 00041000
*                                     invocation environment wrong    * 00041100
*                                                                     * 00041200
*                           X'01'     Unable to establish a recovery  * 00041300
*                                     environment                     * 00041400
*                                                                     * 00041500
*                           X'02'     System resources unavailable    * 00041600
*                                     for the request                 * 00041700
*                                                                     * 00041800
*                           X'03'     ALSESERV service failed for the * 00041900
*                                     request                         * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*                 X'20'     System abend occurred while processing    * 00042400
*                           request                                   * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*01* REASON CODES:                                                    * 00043100
*                                                                     * 00043200
*       See return codes section.                                     * 00043300
*                                                                     * 00043400
*01* MODULE TYPE:  ASSEM MACRO                                        * 00043500
*                                                                     * 00043600
*02*   PROCESSOR:  ASSEM                                              * 00043700
*                                                                     * 00043800
*01* COMPONENT:  SC1C3                                                * 00043900
*                                                                     * 00044000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00044100
*                                                                     * 00044200
*01* MACRO USAGE NOTES:                                               * 00044300
*                                                                     * 00044400
*                                                                     * 00044500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00044600
*        global macro variable.  Any value other than 'NO' will       * 00044700
*        result in the macro expansion being printed.  The default is * 00044800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00044900
*        variable should be set.                                      * 00045000
*                                                                     * 00045100
*                    GBLC &ZPRINT                                     * 00045200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00045300
*                                                                     * 00045400
*                                                                     * 00045500
*    2.  All   keys   currently   contained  in  the  IOSHXBLK  macro * 00045600
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00045700
*        value of 1 or MAX.                                           * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*01* CHANGE ACTIVITY:                                                 * 00046300
*                                                                     * 00046400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00046500
*                                                                     * 00046600
*    $01=OA26509  HBB7740 090630 PDDB:  Basic HyperSwap Programmatic  * 00046700
*                                         Blocking Interface          * 00046800
****** END OF SPECIFICATIONS *****************************************/ 00046900
*/********************************************************************* 00047000
         MACRO                                                          00047100
&XLABEL  IOSHXBLK &NAMEPTR=,&TOKENPTR=,&FORCE=,&RETCODE=,&RSNCODE=,    *00047200
               &PLISTVER=,&MF=                                          00047300
.*                                                                      00047400
*               MACDATE -08/26/09-<1>                                   00047500
.*                                                                      00047600
.*******************************************************************    00047700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00047800
.*******************************************************************    00047900
               GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                  00048000
               GBLC  &ZTEST      YES=TEST NO=NO TEST                    00048100
               GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX            00048200
.*                                                                      00048300
               GBLC  &ZIOSHXBLK  YES=MACRO USED AT LEAST ONCE           00048400
.*******************************************************************    00048500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00048600
.*******************************************************************    00048700
               LCLC  &ZMS        ERROR MESSAGE WORK AREA                00048800
               LCLC  &ZCNDX      SYSNDX CHARACTERS                      00048900
               LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED             00049000
               LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR            00049100
               LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE            00049200
               LCLA  &ZAWRK      USED AS A WORK AREA                    00049300
               LCLA  &ZASIZ      USED FOR SIZE OF VALUE                 00049400
               LCLA  &ZN         NUMERIC WORK VARIABLE                  00049500
               LCLC  &ZC         CHARACTER WORK VARIABLE                00049600
               LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE            00049700
               LCLA  &ZTLA       VALUE TOO LONG VARIABLE                00049800
               LCLC  &ZMAC_G     "G" or null                            00049900
&ZMAC_G        SETC  ''                                                 00050000
               LCLC  &ZMAC_LR                                           00050100
&ZMAC_LR       SETC  'LR'                                               00050200
               LCLC  &ZMAC_L                                            00050300
&ZMAC_L        SETC  'L'                                                00050400
               LCLC  &ZMAC_ST                                           00050500
&ZMAC_ST       SETC  'ST'                                               00050600
               LCLA  &ZMACRET    MACRO RETURN CODE                      00050700
&ZMACRET       SETA  0           ASSUME NO ERRORS                       00050800
.*                                                                      00050900
               LCLC  &ZCSYSLIST(255)            NONXKEY, POS ARRAY      00051000
               LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()             00051100
               LCLA  &ZPLLEN     PARAMETER LIST LENGTH                  00051200
               LCLC  &ZENDBASEPL                End of base PL          00051300
               LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                  00051400
.*******************************************************************    00051500
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00051600
.*******************************************************************    00051700
               LCLA  &ZI         INDEX FOR ARRAY                        00051800
               LCLA  &ZJ         INDEX FOR PARMS                        00051900
               LCLA  &ZK         INDEX FOR PARSE                        00052000
               LCLA  &ZLO        LOW RANGE VALUE                        00052100
               LCLA  &ZHI        HIGH RANGE VALUE                       00052200
               LCLC  &ZW         WORK AREA FOR PARM                     00052300
.********************************************************************   00052400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00052500
.********************************************************************   00052600
               GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                00052700
               GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE         00052800
               GBLA  &SYSALVL    SYSSTATE ARCHLVL                       00052900
               GBLC  &SYSAM64    SYSSTATE AMODE64                       00053000
.*                                                                      00053100
               AIF   (K'&SYSASCE GT 0).ZSYS4    SYS STATE DEFINED       00053200
               AIF   (K'&SYSSPLV GT 0).ZSYS2    SP LEVEL DEFINED        00053300
               SPLEVEL  TEST                                            00053400
.ZSYS2         ANOP  ,                                                  00053500
               AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1              00053600
               AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1              00053700
               SYSSTATE TEST                                            00053800
               AGO   .ZSYS4                                             00053900
.ZSYS3         ANOP  ,                                                  00054000
&SYSASCE       SETC  'P'         ASSUME SYSSTATE PRIMARY                00054100
.ZSYS4         ANOP  ,                                                  00054200
.*******************************************************************    00054300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00054400
.*******************************************************************    00054500
               LCLC  &XFUNCTION  ++ VALUE                               00054600
               LCLC  &XBLOCK     ++ VALUE                               00054700
               LCLC  &XNAMEPTR   ++ NAME                                00054800
               LCLC  &XTOKENPTR  ++ NAME                                00054900
               LCLC  &XUNBLOCK   ++ VALUE                               00055000
               LCLC  &XFORCE     ++ VALUE                               00055100
               LCLC  &XTESTBLOCK                ++ VALUE                00055200
               LCLC  &XRETCODE   ++ NAME                                00055300
               LCLC  &XRSNCODE   ++ NAME                                00055400
               LCLA  &XPLISTVER  ++ VALUE                               00055500
               LCLC  &XMF        ++ VALUE                               00055600
               LCLC  &XMFCTRL    ++ NAME                                00055700
               LCLC  &XMFATTR    ++ VALUE                               00055800
               LCLC  &XMFSCK     ++ VALUE                               00055900
.*******************************************************************    00056000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00056100
.*******************************************************************    00056200
               LCLC  &ZXFUNCTION                ++ INPUT VALUE          00056300
               LCLC  &ZXBLOCK    ++ INPUT VALUE                         00056400
               LCLC  &ZXNAMEPTR  ++ INPUT NAME                          00056500
               LCLC  &ZXTOKENPTR                ++ INPUT NAME           00056600
               LCLC  &ZXUNBLOCK  ++ INPUT VALUE                         00056700
               LCLC  &ZXFORCE    ++ INPUT VALUE                         00056800
               LCLC  &ZXTESTBLOCK               ++ INPUT VALUE          00056900
               LCLC  &ZXRETCODE  ++ OUTPUT NAME                         00057000
               LCLC  &ZXRSNCODE  ++ OUTPUT NAME                         00057100
               LCLC  &ZXPLISTVER                ++ INPUT VALUE          00057200
               LCLC  &ZXMF       ++ INPUT VALUE                         00057300
               LCLC  &ZXMFCTRL   ++ INPUT NAME                          00057400
               LCLC  &ZXMFATTR   ++ INPUT VALUE                         00057500
               LCLC  &ZXMFSCK    ++ INPUT VALUE                         00057600
.********************************************************************   00057700
.***AC.PLV01  PROCESS PLISTVER                                      *   00057800
.********************************************************************   00057900
&XPLISTVER      SETA  1                                                 00058000
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00058100
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00058200
&XPLISTVER      SETA  1                                                 00058300
.ZPLV0          ANOP  ,                                                 00058400
.*                                                                      00058500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00058600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00058700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00058800
.*-------------------------------------------------------------------   00058900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00059000
&ZMS            SETC  '"PLISTVER='                                      00059100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00059200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00059300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00059400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00059500
                AGO   .ZPVCK2                                           00059600
.ZPVCK3         ANOP  ,                                                 00059700
.*-------------------------------------------------------------------   00059800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00059900
&ZMS            SETC  '"PLISTVER='                                      00060000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00060100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00060200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00060300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060400
                AGO   .ZPVCKE                                           00060500
.ZPVCK2         ANOP  ,                                                 00060600
.*-------------------------------------------------------------------   00060700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00060800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00060900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00061000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00061100
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      00061200
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00061300
.ZPVCK6         ANOP  ,                                                 00061400
&ZMS            SETC  '"PLISTVER='                                      00061500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00061600
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00061700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00061800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00061900
&XPLISTVER      SETA  1                                                 00062000
                AGO   .ZPVCKE                                           00062100
.*-------------------------------------------------------------------   00062200
.ZPVCK4A        ANOP  ,                                                 00062300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00062400
&ZMS            SETC  'PLISTVER='                                       00062500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00062600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00062700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00062800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00062900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00063000
                AGO   .ZPVCK5                                           00063100
.ZPVCK4         ANOP  ,                                                 00063200
&XPLISTVER      SETA  &PLISTVER(1)                                      00063300
.ZPVCK5         ANOP  ,                                                 00063400
.ZPVCKE         ANOP  ,                                                 00063500
.********************************************************************   00063600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00063700
.********************************************************************   00063800
               ACTR  10000                                              00063900
.*------------------------------------------------------------------    00064000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00064100
&XMF           SETC  ''          INITIALIZE XVARIABLE                   00064200
.*-------------------------------------------------------------------   00064300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00064400
.ZG34          ANOP  ,                                                  00064500
&ZTLC          SETC 'S'                                                 00064600
               AIF   ('&MF(1)' NE '&ZTLC').ZG35                         00064700
&XMF           SETC  'S'         SET KEYWORD                            00064800
               AIF   (N'&MF LE 1).ZG34A         CK NUM                  00064900
&ZMS           SETC  '"MF='                                             00065000
&ZMS           SETC  '&ZMS.&MF"'                                        00065100
&ZMS           SETC  '&ZMS "MF"'                                        00065200
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00065300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00065400
.ZG34A         ANOP  ,                                                  00065500
.*-------------------------------------------------------------------   00065600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00065700
.ZG35          ANOP  ,                                                  00065800
&ZTLC          SETC 'L'                                                 00065900
               AIF   ('&MF(1)' NE '&ZTLC').ZG42                         00066000
&XMF           SETC  'L'         SET KEYWORD                            00066100
               AIF   (N'&MF LE 3).ZG35A         CK NUM                  00066200
&ZMS           SETC  '"MF='                                             00066300
&ZMS           SETC  '&ZMS.&MF"'                                        00066400
&ZMS           SETC  '&ZMS "MF"'                                        00066500
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00066600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00066700
.ZG35A         ANOP  ,                                                  00066800
.*-------------------------------------------------------------------   00066900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00067000
               AIF   (N'&SYSLIST NE 0).ZG35B    POSITIONALS?            00067100
               AIF   ('&NAMEPTR' NE '').ZG35B   KEYS?                   00067200
               AIF   ('&TOKENPTR' NE '').ZG35B  KEYS?                   00067300
               AIF   ('&FORCE' NE '').ZG35B     KEYS?                   00067400
               AIF   ('&RETCODE' NE '').ZG35B   KEYS?                   00067500
               AIF   ('&RSNCODE' NE '').ZG35B   KEYS?                   00067600
               AGO    .ZG35C     INVOCATION OKAY                        00067700
.ZG35B         ANOP  ,                                                  00067800
&ZMS           SETC  'THE "L" FORM OF "MF"'                             00067900
&ZMS           SETC  '&ZMS CAN ONLY HAVE'                               00068000
&ZMS           SETC  '&ZMS THE "PLISTVER" KEY'                          00068100
               MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'             00068200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00068300
.ZG35C         ANOP  ,                                                  00068400
.*-------------------------------------------------------------------   00068500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00068600
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00068700
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00068800
               AIF   (N'&MF(2) GT 1).ZG37B      MULTI PARMS             00068900
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00069000
.ZG37B         AIF   (K'&MF(2) GT 0).ZG37C                              00069100
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00069200
&ZMS           SETC  'WHEN "L" IS SPECIFIED'                            00069300
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00069400
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00069500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00069600
.ZG37C         ANOP  ,                                                  00069700
.*-------------------------------------------------------------------   00069800
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00069900
               AIF   (K'&ZXMFCTRL LE 0).ZG37P   NOT I/O                 00070000
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG37P                     00070100
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00070200
&ZMS           SETC  '"MF='                                             00070300
&ZMS           SETC  '&ZMS.&MF"'                                        00070400
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00070500
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                  00070600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00070700
.ZG37P         ANOP  ,                                                  00070800
.*-------------------------------------------------------------------   00070900
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00071000
&ZXMFATTR      SETC  'INPUT'     SET IN/OUTPUT                          00071100
&XMFATTR       SETC  '0D'                                               00071200
               AIF   (K'&MF(3) LE 0).ZG40B      PARM                    00071300
&XMFATTR       SETC  '&MF(3,1)'  SET XVARIABLE                          00071400
               AIF   (N'&MF(3) GT 1).ZG40B      MULTI                   00071500
&XMFATTR       SETC  '&MF(3)'    SET XVARIABLE                          00071600
.ZG40B         ANOP  ,                                                  00071700
.*-------------------------------------------------------------------   00071800
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00071900
               AIF   (K'&ZXMFATTR LE 0).ZG40P   NOT I/O                 00072000
               AIF   ('&XMFATTR'(1,1) NE '(').ZG40P                     00072100
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00072200
&ZMS           SETC  '"MF='                                             00072300
&ZMS           SETC  '&ZMS.&MF"'                                        00072400
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00072500
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                  00072600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00072700
.ZG40P         ANOP  ,                                                  00072800
.*-------------------------------------------------------------------   00072900
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00073000
               AIF   (K'&ZXMFATTR LE 0).ZG40S   NOT I/O                 00073100
               AIF   (K'&XMFATTR LE 60).ZG40S   LNG OK                  00073200
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00073300
&ZMS           SETC  '"MF='                                             00073400
&ZMS           SETC  '&ZMS.&MF"'                                        00073500
&ZMS           SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'              00073600
               MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                 00073700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00073800
.ZG40S         ANOP  ,                                                  00073900
.*-------------------------------------------------------------------   00074000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074100
.ZG42          ANOP  ,                                                  00074200
&ZTLC          SETC 'E'                                                 00074300
               AIF   ('&MF(1)' NE '&ZTLC').ZG50                         00074400
&XMF           SETC  'E'         SET KEYWORD                            00074500
               AIF   (N'&MF LE 3).ZG42A         CK NUM                  00074600
&ZMS           SETC  '"MF='                                             00074700
&ZMS           SETC  '&ZMS.&MF"'                                        00074800
&ZMS           SETC  '&ZMS "MF"'                                        00074900
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00075000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00075100
.ZG42A         ANOP  ,                                                  00075200
.*-------------------------------------------------------------------   00075300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00075400
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00075500
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00075600
               AIF   (N'&MF(2) GT 1).ZG44B      MULTI PARMS             00075700
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00075800
.ZG44B         AIF   (K'&MF(2) GT 0).ZG44C                              00075900
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00076000
&ZMS           SETC  'WHEN "E" IS SPECIFIED'                            00076100
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00076200
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00076300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00076400
.ZG44C         ANOP  ,                                                  00076500
.*-------------------------------------------------------------------   00076600
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00076700
               AIF   (K'&ZXMFCTRL LE 0).ZG44R   NOT I/O                 00076800
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG44R                     00076900
&ZCGPR         SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                         00077000
               AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                       00077100
               AIF   (K'&ZCGPR GT 2).ZG44Q                              00077200
               AIF   ('&ZCGPR' EQ '0').ZG44Q                            00077300
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00077400
               AIF   (T'&ZCGPR NE 'N').ZG44Q    INVALID REG NAME        00077500
.ZG44P         ANOP  ,                                                  00077600
               AIF   (T'&ZCGPR NE 'N').ZG44R    NON NUMERIC             00077700
               AIF   ('&ZCGPR' LT '1').ZG44Q                            00077800
               AIF   ('&ZCGPR' LE '12').ZG44R                           00077900
.ZG44Q         ANOP  ,                                                  00078000
&ZMS           SETC  '"MF='                                             00078100
&ZMS           SETC  '&ZMS.&MF"'                                        00078200
&ZMS           SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'          00078300
               MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                   00078400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00078500
.ZG44R         ANOP  ,                                                  00078600
.*-------------------------------------------------------------------   00078700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00078800
&XMFSCK        SETC  ''          INITIALIZE XVARIABLE                   00078900
.ZG48A   AIF   ('&MF(3)' NE 'COMPLETE').ZG49A                           00079000
&XMFSCK        SETC  'COMPLETE'  SET KEYWORD                            00079100
.*-------------------------------------------------------------------   00079200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00079300
.ZG49A         AIF   (K'&XMFSCK GT 0).ZG49C     KEYWORD                 00079400
               AIF   (K'&MF(3) LE 0).ZG49B                              00079500
&ZMS           SETC  '"MF='                                             00079600
&ZMS           SETC  '&ZMS.&MF"'                                        00079700
&ZMS           SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '          00079800
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00079900
&ZMS           SETC  '&ZMS "COMPLETE".'                                 00080000
               MNOTE 8,' &ZMS '                                         00080100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00080200
.ZG49B         ANOP  ,                                                  00080300
&XMFSCK        SETC  'COMPLETE'  SET DEFAULT KEYWORD                    00080400
.ZG49C         ANOP  ,                                                  00080500
&ZXMFSCK       SETC  'INPUT'     SET IN/OUTPUT                          00080600
.*------------------------------------------------------------------    00080700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00080800
.ZG50          ANOP  ,                                                  00080900
&ZXMF          SETC  'INPUT'     SET IN/OUTPUT                          00081000
               AIF   (K'&XMF GT 0).ZG50E        VALID ARG               00081100
               AIF   (T'&MF EQ 'O').ZG50D       OMITTED                 00081200
&ZASYSLNDX     SETA  0                                                  00081300
.ZG50A         ANOP  ,           POSITIONAL MACRO KEY                   00081400
&ZASYSLNDX     SETA  &ZASYSLNDX+1                                       00081500
               AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG50C                   00081600
&ZTLC          SETC 'MF'                                                00081700
               AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG50A          00081800
.ZG50B         ANOP  ,                                                  00081900
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00082000
&ZMS           SETC  'THE "MF" KEY'                                     00082100
&ZMS           SETC  '&ZMS MUST CONTAIN ONE'                            00082200
               MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                   00082300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00082400
               AGO   .ZG50E                                             00082500
.ZG50C         ANOP  ,                                                  00082600
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00082700
&ZMS           SETC  '"MF='                                             00082800
&ZMS           SETC  '&ZMS.&MF"'                                        00082900
&ZMS           SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '          00083000
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00083100
&ZMS           SETC  '&ZMS "S",'                                        00083200
&ZMS           SETC  '&ZMS "L",'                                        00083300
&ZMS           SETC  '&ZMS OR "E".'                                     00083400
               MNOTE 8,' &ZMS '                                         00083500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00083600
               AGO   .ZG50E                                             00083700
.ZG50D         ANOP  ,                                                  00083800
&XMF           SETC  'S'         SET DEFAULT KEYWORD                    00083900
&XMFSCK        SETC  'COMPLETE'  COMPLETE CHECKING                      00084000
.ZG50E         ANOP  ,                                                  00084100
.********************************************************************   00084200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00084300
.********************************************************************   00084400
               ACTR  10000                                              00084500
.*-------------------------------------------------------------------   00084600
.***AG.MF03 MF=(SLE)                                                    00084700
               AIF   ('&XMF' EQ 'L').ZGMFX                              00084800
.*-------------------------------------------------------------------   00084900
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00085000
&XFUNCTION     SETC  ''          INITIALIZE XVARIABLE                   00085100
&ZASYSLNDX     SETA  0                                                  00085200
.ZG2A          ANOP  ,           POSITIONAL KEY SEARCH                  00085300
&ZASYSLNDX     SETA  &ZASYSLNDX+1               NEXT POSITIONAL         00085400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    00085500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             00085600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'BLOCK').ZG2A                 00085700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00085800
&ZXFUNCTION    SETC  'INPUT'     SET IN/OUTPUT                          00085900
&XFUNCTION     SETC  'BLOCK'     SET XVARIABLE                          00086000
&ZXBLOCK       SETC  'INPUT'     SET IN/OUTPUT                          00086100
&XBLOCK        SETC  'BLOCK'     SET XVARIABLE PARM                     00086200
.ZG2B          ANOP  ,                                                  00086300
.*-------------------------------------------------------------------   00086400
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00086500
&ZASYSLNDX     SETA  0                                                  00086600
.ZG9A          ANOP  ,           POSITIONAL KEY SEARCH                  00086700
&ZASYSLNDX     SETA  &ZASYSLNDX+1               NEXT POSITIONAL         00086800
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG9C  DONE                    00086900
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG9A             00087000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'UNBLOCK').ZG9A               00087100
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00087200
               AIF   (K'&XFUNCTION LE 0).ZG9B   VALID                   00087300
&ZMS           SETC  '"UNBLOCK'                                         00087400
&ZMS           SETC  '&ZMS."'                                           00087500
&ZMS           SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'              00087600
&ZMS           SETC  '&ZMS "&XFUNCTION"'                                00087700
               MNOTE 8,' &ZMS KEY.'                                     00087800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00087900
               AGO   .ZG9C                                              00088000
.*                                                                      00088100
.ZG9B          ANOP  ,                                                  00088200
&ZXFUNCTION    SETC  'INPUT'     SET IN/OUTPUT                          00088300
&XFUNCTION     SETC  'UNBLOCK'   SET XVARIABLE                          00088400
&ZXUNBLOCK     SETC  'INPUT'     SET IN/OUTPUT                          00088500
&XUNBLOCK      SETC  'UNBLOCK'   SET XVARIABLE PARM                     00088600
.ZG9C          ANOP  ,                                                  00088700
.*-------------------------------------------------------------------   00088800
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00088900
&ZASYSLNDX     SETA  0                                                  00089000
.ZG21A         ANOP  ,           POSITIONAL KEY SEARCH                  00089100
&ZASYSLNDX     SETA  &ZASYSLNDX+1               NEXT POSITIONAL         00089200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG21C  DONE                   00089300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG21A            00089400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'TESTBLOCK').ZG21A            00089500
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00089600
               AIF   (K'&XFUNCTION LE 0).ZG21B  VALID                   00089700
&ZMS           SETC  '"TESTBLOCK'                                       00089800
&ZMS           SETC  '&ZMS."'                                           00089900
&ZMS           SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'              00090000
&ZMS           SETC  '&ZMS "&XFUNCTION"'                                00090100
               MNOTE 8,' &ZMS KEY.'                                     00090200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00090300
               AGO   .ZG21C                                             00090400
.*                                                                      00090500
.ZG21B         ANOP  ,                                                  00090600
&ZXFUNCTION    SETC  'INPUT'     SET IN/OUTPUT                          00090700
&XFUNCTION     SETC  'TESTBLOCK'                SET XVARIABLE           00090800
&ZXTESTBLOCK   SETC  'INPUT'     SET IN/OUTPUT                          00090900
&XTESTBLOCK    SETC  'TESTBLOCK'                SET XVARIABLE PARM      00091000
.ZG21C         ANOP  ,                                                  00091100
.*------------------------------------------------------------------    00091200
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00091300
               AIF   (K'&XFUNCTION GT 0).ZG22B                          00091400
&ZXFUNCTION    SETC  ''          RESET IN/OUTPUT                        00091500
&ZXBLOCK       SETC  ''          RESET IN/OUTPUT                        00091600
&XFUNCTION     SETC  ''          ENSURE NULL                            00091700
&XBLOCK        SETC  ''          ENSURE NULL                            00091800
&ZMS           SETC  'ONE OF THE FOLLOWING'                             00091900
&ZMS           SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                00092000
&ZMS           SETC  '&ZMS REQUIRED:'                                   00092100
&ZMS           SETC  '&ZMS "BLOCK",'            VALID ME KEY            00092200
&ZMS           SETC  '&ZMS "UNBLOCK",'          VALID ME KEY            00092300
&ZMS           SETC  '&ZMS OR "TESTBLOCK".'     VALID ME KEY            00092400
               MNOTE 8,' &ZMS '                                         00092500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00092600
.ZG22B         ANOP  ,                                                  00092700
.*-------------------------------------------------------------------   00092800
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00092900
.ZG2ZY  AIF    ('&XFUNCTION' NE 'BLOCK').ZG9ZY                          00093000
.*-------------------------------------------------------------------   00093100
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00093200
&ZCVAL         SETC ''           ERROR KEY FIELD                        00093300
.ZG2I0         AIF   (K'&FORCE LE 0).ZG2I1                              00093400
&ZCVAL         SETC '&ZCVAL FORCE'              DISALLOWED KEY          00093500
.ZG2I1         AIF   (K'&ZCVAL LE 0).ZG2J       KEY                     00093600
&ZCVAL         SETC '&ZCVAL'(2,K'&ZCVAL-1)                              00093700
&ZMS           SETC  '"BLOCK'                                           00093800
&ZMS           SETC  '&ZMS."'                                           00093900
&ZMS           SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'               00094000
               MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'               00094100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00094200
.ZG2J          ANOP  ,                                                  00094300
.*----------------------------------------------------------------***   00094400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00094500
               AIF   (N'&NAMEPTR LE 1).ZG4A     CK NUM                  00094600
&ZMS           SETC  '"NAMEPTR='                                        00094700
&ZMS           SETC  '&ZMS.&NAMEPTR"'                                   00094800
&ZMS           SETC  '&ZMS "NAMEPTR"'                                   00094900
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00095000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00095100
.ZG4A          ANOP  ,                                                  00095200
.*-------------------------------------------------------------------   00095300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00095400
&ZXNAMEPTR     SETC  'INPUT'     SET IN/OUTPUT                          00095500
&XNAMEPTR      SETC  '&NAMEPTR(1)'              SET XVARIABLE           00095600
               AIF   (N'&NAMEPTR GT 1).ZG4B     MULTI PARMS             00095700
&XNAMEPTR      SETC  '&NAMEPTR'  SET XVARIABLE                          00095800
.ZG4B          AIF   (K'&NAMEPTR(1) GT 0).ZG4C                          00095900
&ZXNAMEPTR     SETC  ''          RESET IN/OUTPUT                        00096000
&ZMS           SETC  ' '                                                00096100
&ZMS           SETC  '&ZMS "NAMEPTR" KEY AND ITS'                       00096200
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00096300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00096400
.ZG4C          ANOP  ,                                                  00096500
.*-------------------------------------------------------------------   00096600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00096700
               AIF   (K'&ZXNAMEPTR LE 0).ZG4R   NOT I/O                 00096800
               AIF   ('&XNAMEPTR'(1,1) NE '(').ZG4R                     00096900
&ZCGPR         SETC  '&XNAMEPTR'(2,K'&XNAMEPTR-2)                       00097000
               AIF   ('&ZCGPR'(1,1) NE '0').ZG4P                        00097100
               AIF   (K'&ZCGPR GT 2).ZG4Q                               00097200
               AIF   ('&ZCGPR' EQ '0').ZG4Q                             00097300
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00097400
               AIF   (T'&ZCGPR NE 'N').ZG4Q     INVALID REG NAME        00097500
.ZG4P          ANOP  ,                                                  00097600
               AIF   (T'&ZCGPR NE 'N').ZG4R     NON NUMERIC             00097700
               AIF   ('&ZCGPR' LT '2').ZG4Q                             00097800
               AIF   ('&ZCGPR' LE '12').ZG4R                            00097900
.ZG4Q          ANOP  ,                                                  00098000
&ZMS           SETC  '"NAMEPTR='                                        00098100
&ZMS           SETC  '&ZMS.&NAMEPTR"'                                   00098200
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00098300
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00098400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00098500
.ZG4R          ANOP  ,                                                  00098600
.*----------------------------------------------------------------***   00098700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00098800
               AIF   (N'&TOKENPTR LE 1).ZG7A    CK NUM                  00098900
&ZMS           SETC  '"TOKENPTR='                                       00099000
&ZMS           SETC  '&ZMS.&TOKENPTR"'                                  00099100
&ZMS           SETC  '&ZMS "TOKENPTR"'                                  00099200
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00099300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00099400
.ZG7A          ANOP  ,                                                  00099500
.*-------------------------------------------------------------------   00099600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00099700
&ZXTOKENPTR    SETC  'INPUT'     SET IN/OUTPUT                          00099800
&XTOKENPTR     SETC  '&TOKENPTR(1)'             SET XVARIABLE           00099900
               AIF   (N'&TOKENPTR GT 1).ZG7B    MULTI PARMS             00100000
&XTOKENPTR     SETC  '&TOKENPTR'                SET XVARIABLE           00100100
.ZG7B          AIF   (K'&TOKENPTR(1) GT 0).ZG7C                         00100200
&ZXTOKENPTR    SETC  ''          RESET IN/OUTPUT                        00100300
&ZMS           SETC  ' '                                                00100400
&ZMS           SETC  '&ZMS "TOKENPTR" KEY AND ITS'                      00100500
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00100600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00100700
.ZG7C          ANOP  ,                                                  00100800
.*-------------------------------------------------------------------   00100900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00101000
               AIF   (K'&ZXTOKENPTR LE 0).ZG7R  NOT I/O                 00101100
               AIF   ('&XTOKENPTR'(1,1) NE '(').ZG7R                    00101200
&ZCGPR         SETC  '&XTOKENPTR'(2,K'&XTOKENPTR-2)                     00101300
               AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                        00101400
               AIF   (K'&ZCGPR GT 2).ZG7Q                               00101500
               AIF   ('&ZCGPR' EQ '0').ZG7Q                             00101600
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00101700
               AIF   (T'&ZCGPR NE 'N').ZG7Q     INVALID REG NAME        00101800
.ZG7P          ANOP  ,                                                  00101900
               AIF   (T'&ZCGPR NE 'N').ZG7R     NON NUMERIC             00102000
               AIF   ('&ZCGPR' LT '2').ZG7Q                             00102100
               AIF   ('&ZCGPR' LE '12').ZG7R                            00102200
.ZG7Q          ANOP  ,                                                  00102300
&ZMS           SETC  '"TOKENPTR='                                       00102400
&ZMS           SETC  '&ZMS.&TOKENPTR"'                                  00102500
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00102600
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00102700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00102800
.ZG7R          ANOP  ,                                                  00102900
.*-------------------------------------------------------------------   00103000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00103100
.ZG9ZY  AIF    ('&XFUNCTION' NE 'UNBLOCK').ZG21ZY                       00103200
.*----------------------------------------------------------------***   00103300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00103400
               AIF   (N'&NAMEPTR LE 1).ZG11A    CK NUM                  00103500
&ZMS           SETC  '"NAMEPTR='                                        00103600
&ZMS           SETC  '&ZMS.&NAMEPTR"'                                   00103700
&ZMS           SETC  '&ZMS "NAMEPTR"'                                   00103800
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00103900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00104000
.ZG11A         ANOP  ,                                                  00104100
.*-------------------------------------------------------------------   00104200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00104300
&ZXNAMEPTR     SETC  'INPUT'     SET IN/OUTPUT                          00104400
&XNAMEPTR      SETC  '&NAMEPTR(1)'              SET XVARIABLE           00104500
               AIF   (N'&NAMEPTR GT 1).ZG11B    MULTI PARMS             00104600
&XNAMEPTR      SETC  '&NAMEPTR'  SET XVARIABLE                          00104700
.ZG11B         AIF   (K'&NAMEPTR(1) GT 0).ZG11C                         00104800
&ZXNAMEPTR     SETC  ''          RESET IN/OUTPUT                        00104900
&ZMS           SETC  ' '                                                00105000
&ZMS           SETC  '&ZMS "NAMEPTR" KEY AND ITS'                       00105100
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00105200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00105300
.ZG11C         ANOP  ,                                                  00105400
.*-------------------------------------------------------------------   00105500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00105600
               AIF   (K'&ZXNAMEPTR LE 0).ZG11R  NOT I/O                 00105700
               AIF   ('&XNAMEPTR'(1,1) NE '(').ZG11R                    00105800
&ZCGPR         SETC  '&XNAMEPTR'(2,K'&XNAMEPTR-2)                       00105900
               AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                       00106000
               AIF   (K'&ZCGPR GT 2).ZG11Q                              00106100
               AIF   ('&ZCGPR' EQ '0').ZG11Q                            00106200
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00106300
               AIF   (T'&ZCGPR NE 'N').ZG11Q    INVALID REG NAME        00106400
.ZG11P         ANOP  ,                                                  00106500
               AIF   (T'&ZCGPR NE 'N').ZG11R    NON NUMERIC             00106600
               AIF   ('&ZCGPR' LT '2').ZG11Q                            00106700
               AIF   ('&ZCGPR' LE '12').ZG11R                           00106800
.ZG11Q         ANOP  ,                                                  00106900
&ZMS           SETC  '"NAMEPTR='                                        00107000
&ZMS           SETC  '&ZMS.&NAMEPTR"'                                   00107100
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00107200
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00107300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00107400
.ZG11R         ANOP  ,                                                  00107500
.*----------------------------------------------------------------***   00107600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00107700
               AIF   (N'&TOKENPTR LE 1).ZG14A   CK NUM                  00107800
&ZMS           SETC  '"TOKENPTR='                                       00107900
&ZMS           SETC  '&ZMS.&TOKENPTR"'                                  00108000
&ZMS           SETC  '&ZMS "TOKENPTR"'                                  00108100
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00108200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00108300
.ZG14A         ANOP  ,                                                  00108400
.*-------------------------------------------------------------------   00108500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00108600
&ZXTOKENPTR    SETC  'INPUT'     SET IN/OUTPUT                          00108700
&XTOKENPTR     SETC  '&TOKENPTR(1)'             SET XVARIABLE           00108800
               AIF   (N'&TOKENPTR GT 1).ZG14B   MULTI PARMS             00108900
&XTOKENPTR     SETC  '&TOKENPTR'                SET XVARIABLE           00109000
.ZG14B         AIF   (K'&TOKENPTR(1) GT 0).ZG14C                        00109100
&ZXTOKENPTR    SETC  ''          RESET IN/OUTPUT                        00109200
&ZMS           SETC  ' '                                                00109300
&ZMS           SETC  '&ZMS "TOKENPTR" KEY AND ITS'                      00109400
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00109500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00109600
.ZG14C         ANOP  ,                                                  00109700
.*-------------------------------------------------------------------   00109800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00109900
               AIF   (K'&ZXTOKENPTR LE 0).ZG14R  NOT I/O                00110000
               AIF   ('&XTOKENPTR'(1,1) NE '(').ZG14R                   00110100
&ZCGPR         SETC  '&XTOKENPTR'(2,K'&XTOKENPTR-2)                     00110200
               AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                       00110300
               AIF   (K'&ZCGPR GT 2).ZG14Q                              00110400
               AIF   ('&ZCGPR' EQ '0').ZG14Q                            00110500
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00110600
               AIF   (T'&ZCGPR NE 'N').ZG14Q    INVALID REG NAME        00110700
.ZG14P         ANOP  ,                                                  00110800
               AIF   (T'&ZCGPR NE 'N').ZG14R    NON NUMERIC             00110900
               AIF   ('&ZCGPR' LT '2').ZG14Q                            00111000
               AIF   ('&ZCGPR' LE '12').ZG14R                           00111100
.ZG14Q         ANOP  ,                                                  00111200
&ZMS           SETC  '"TOKENPTR='                                       00111300
&ZMS           SETC  '&ZMS.&TOKENPTR"'                                  00111400
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00111500
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00111600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00111700
.ZG14R         ANOP  ,                                                  00111800
.*----------------------------------------------------------------***   00111900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00112000
               AIF   (N'&FORCE LE 1).ZG17A      CK NUM                  00112100
&ZMS           SETC  '"FORCE='                                          00112200
&ZMS           SETC  '&ZMS.&FORCE"'                                     00112300
&ZMS           SETC  '&ZMS "FORCE"'                                     00112400
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00112500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00112600
.ZG17A         ANOP  ,                                                  00112700
.*-------------------------------------------------------------------   00112800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00112900
&XFORCE        SETC  ''          INITIALIZE XVARIABLE                   00113000
.ZG18A   AIF   ('&FORCE(1)' NE 'NO').ZG19A                              00113100
&XFORCE        SETC  'NO'        SET KEYWORD                            00113200
.*-------------------------------------------------------------------   00113300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00113400
.ZG19A   AIF   ('&FORCE(1)' NE 'YES').ZG20A                             00113500
&XFORCE        SETC  'YES'       SET KEYWORD                            00113600
.*-------------------------------------------------------------------   00113700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00113800
.ZG20A         AIF   (K'&XFORCE GT 0).ZG20C     KEYWORD                 00113900
               AIF   (K'&FORCE(1) LE 0).ZG20B                           00114000
&ZMS           SETC  '"FORCE='                                          00114100
&ZMS           SETC  '&ZMS.&FORCE"'                                     00114200
&ZMS           SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '          00114300
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00114400
&ZMS           SETC  '&ZMS "NO"'                                        00114500
&ZMS           SETC  '&ZMS OR "YES".'                                   00114600
               MNOTE 8,' &ZMS '                                         00114700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00114800
.ZG20B         ANOP  ,                                                  00114900
&XFORCE        SETC  'NO'        SET DEFAULT KEYWORD                    00115000
.ZG20C         ANOP  ,                                                  00115100
&ZXFORCE       SETC  'INPUT'     SET IN/OUTPUT                          00115200
.*-------------------------------------------------------------------   00115300
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00115400
.ZG21ZY  AIF    ('&XFUNCTION' NE 'TESTBLOCK').ZG22ZY                    00115500
.*-------------------------------------------------------------------   00115600
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00115700
&ZCVAL         SETC ''           ERROR KEY FIELD                        00115800
.ZG21I0        AIF   (K'&NAMEPTR LE 0).ZG21I1                           00115900
&ZCVAL         SETC '&ZCVAL NAMEPTR'            DISALLOWED KEY          00116000
.ZG21I1        AIF   (K'&TOKENPTR LE 0).ZG21I2                          00116100
&ZCVAL         SETC '&ZCVAL TOKENPTR'           DISALLOWED KEY          00116200
.ZG21I2        AIF   (K'&FORCE LE 0).ZG21I3                             00116300
&ZCVAL         SETC '&ZCVAL FORCE'              DISALLOWED KEY          00116400
.ZG21I3        AIF   (K'&ZCVAL LE 0).ZG21J      KEY                     00116500
&ZCVAL         SETC '&ZCVAL'(2,K'&ZCVAL-1)                              00116600
&ZMS           SETC  '"TESTBLOCK'                                       00116700
&ZMS           SETC  '&ZMS."'                                           00116800
&ZMS           SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'               00116900
               MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'               00117000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00117100
.ZG21J         ANOP  ,                                                  00117200
.*-------------------------------------------------------------------   00117300
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00117400
.ZG22ZY        ANOP ,            END MUTUALLY EXCLUSIVE KEYS            00117500
.*----------------------------------------------------------------***   00117600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00117700
               AIF   (N'&RETCODE LE 1).ZG24A    CK NUM                  00117800
&ZMS           SETC  '"RETCODE='                                        00117900
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00118000
&ZMS           SETC  '&ZMS "RETCODE"'                                   00118100
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00118200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00118300
.ZG24A         ANOP  ,                                                  00118400
.*-------------------------------------------------------------------   00118500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00118600
               AIF   (K'&RETCODE(1) LE 0).ZG24C  NO PARM                00118700
&ZXRETCODE     SETC  'OUTPUT'    SET OUTPUT                             00118800
&XRETCODE      SETC  '&RETCODE(1)'              SET XVARIABLE           00118900
               AIF   (N'&RETCODE GT 1).ZG24C                            00119000
&XRETCODE      SETC  '&RETCODE'  SET XVARIABLE                          00119100
.ZG24C         ANOP  ,                                                  00119200
.*-------------------------------------------------------------------   00119300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00119400
               AIF   (K'&ZXRETCODE LE 0).ZG24R  NOT I/O                 00119500
               AIF   ('&XRETCODE'(1,1) NE '(').ZG24R                    00119600
&ZCGPR         SETC  '&XRETCODE'(2,K'&XRETCODE-2)                       00119700
               AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                       00119800
               AIF   (K'&ZCGPR GT 2).ZG24Q                              00119900
               AIF   ('&ZCGPR' EQ '0').ZG24Q                            00120000
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00120100
               AIF   (T'&ZCGPR NE 'N').ZG24Q    INVALID REG NAME        00120200
.ZG24P         ANOP  ,                                                  00120300
               AIF   (T'&ZCGPR NE 'N').ZG24R    NON NUMERIC             00120400
               AIF   ('&ZCGPR' EQ '15').ZG24R                           00120500
               AIF   ('&ZCGPR' LT '2').ZG24Q                            00120600
               AIF   ('&ZCGPR' LE '12').ZG24R                           00120700
.ZG24Q         ANOP  ,                                                  00120800
&ZMS           SETC  '"RETCODE='                                        00120900
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00121000
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00121100
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'           00121200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00121300
.ZG24R         ANOP  ,                                                  00121400
.*----------------------------------------------------------------***   00121500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00121600
               AIF   (N'&RSNCODE LE 1).ZG27A    CK NUM                  00121700
&ZMS           SETC  '"RSNCODE='                                        00121800
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00121900
&ZMS           SETC  '&ZMS "RSNCODE"'                                   00122000
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00122100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00122200
.ZG27A         ANOP  ,                                                  00122300
.*-------------------------------------------------------------------   00122400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00122500
               AIF   (K'&RSNCODE(1) LE 0).ZG27C  NO PARM                00122600
&ZXRSNCODE     SETC  'OUTPUT'    SET OUTPUT                             00122700
&XRSNCODE      SETC  '&RSNCODE(1)'              SET XVARIABLE           00122800
               AIF   (N'&RSNCODE GT 1).ZG27C                            00122900
&XRSNCODE      SETC  '&RSNCODE'  SET XVARIABLE                          00123000
.ZG27C         ANOP  ,                                                  00123100
.*-------------------------------------------------------------------   00123200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00123300
               AIF   (K'&ZXRSNCODE LE 0).ZG27R  NOT I/O                 00123400
               AIF   ('&XRSNCODE'(1,1) NE '(').ZG27R                    00123500
&ZCGPR         SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                       00123600
               AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                       00123700
               AIF   (K'&ZCGPR GT 2).ZG27Q                              00123800
               AIF   ('&ZCGPR' EQ '0').ZG27R                            00123900
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00124000
               AIF   (T'&ZCGPR NE 'N').ZG27Q    INVALID REG NAME        00124100
.ZG27P         ANOP  ,                                                  00124200
               AIF   (T'&ZCGPR NE 'N').ZG27R    NON NUMERIC             00124300
               AIF   ('&ZCGPR' EQ '0').ZG27R                            00124400
               AIF   ('&ZCGPR' LT '2').ZG27Q                            00124500
               AIF   ('&ZCGPR' LE '12').ZG27R                           00124600
.ZG27Q         ANOP  ,                                                  00124700
&ZMS           SETC  '"RSNCODE='                                        00124800
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00124900
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00125000
               MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'            00125100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00125200
.ZG27R         ANOP  ,                                                  00125300
.******************************************************************     00125400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00125500
.******************************************************************     00125600
               ACTR  10000                                              00125700
.*-------------------------------------------------------------------   00125800
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00125900
&ZCVAL         SETC  ''          ERROR FIELD                            00126000
&ZAWRK         SETA  0           POSITIONAL COUNTER                     00126100
&ZASYSLNDX     SETA  0           NON-X KEY COUNTER                      00126200
.ZGLIST2       ANOP  ,                                                  00126300
&ZASYSLNDX     SETA  &ZASYSLNDX+1               NEXT NON-X KEY          00126400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00126500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00126600
&ZAWRK         SETA  &ZAWRK+1    NEXT POSITIONAL                        00126700
               AIF   (&ZAWRK LE 0).ZGLIST2                              00126800
&ZCVAL         SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA                00126900
               AGO   .ZGLIST2                                           00127000
.*                                                                      00127100
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00127200
&ZCVAL         SETC '&ZCVAL'(2,K'&ZCVAL-1)      STRIP COMMA             00127300
&ZMS           SETC  'POSITIONAL ARGUMENT(S),'                          00127400
&ZMS           SETC  '&ZMS "&ZCVAL"'                                    00127500
&ZMS           SETC  '&ZMS CANNOT BE USED.'                             00127600
&ZMS           SETC  '&ZMS NO POSITIONAL ARGUMENTS'                     00127700
               MNOTE 8,' &ZMS ARE ALLOWED.'                             00127800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00127900
.ZGLISTX       ANOP  ,                                                  00128000
&ZASYSLNDX     SETA  0                                                  00128100
.*-------------------------------------------------------------------   00128200
.***AG.MF04 MF=(SLE)                                                    00128300
.ZGMFX         ANOP  ,           END OF FULL SYNTAX CHECK               00128400
.*******************************************************************    00128500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00128600
.*******************************************************************    00128700
               AIF   (&ZMACRET NE 0).ZLX2       ERROR DETECTED          00128800
.*******************************************************************    00128900
.***AE.01  START OF IOSHXBLK MACRO CODE                                 00129000
.*******************************************************************    00129100
               LCLC  &M0M0001                 NAME                      00129200
&M0M0001       SETC  '&XLABEL'                SET NAME                  00129300
               AIF   (K'&XLABEL NE 0).XLAB2                             00129400
&M0M0001       SETC  'M00M&SYSNDX'            DEFAULT NAME              00129500
.*                                                                      00129600
.XLAB2         ANOP  ,                                                  00129700
               AIF   ('&XMF' EQ 'L').XLAB3                              00129800
&M0M0001 DS    0H                             IOSHXBLK-1                00129900
.XLAB3         ANOP  ,                                                  00130000
.*******************************************************************    00130100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00130200
.*******************************************************************    00130300
              PUSH  PRINT                                               00130400
               AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON         00130500
               PRINT OFF         ++ PR01                                00130600
               AGO   .ZPRNTXX                                           00130700
.ZPRINTX       PRINT ON                                                 00130800
.ZPRNTXX       ANOP  ,                                                  00130900
.********************************************************************   00131000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00131100
.********************************************************************   00131200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00131300
                      LCLA  &ZOPN1         INVOCATION INDEX             00131400
                      LCLC  &ZOPL(4095)    LABEL                        00131500
                      LCLC  &ZOPO(4095)    OPERATION                    00131600
                      LCLC  &ZOPV(4095)    VALUE                        00131700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00131800
.*                                                                      00131900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00132000
.******************************************************************     00132100
.***AL.L10 IOSHXBLK FMT=LIST MF=S!L PARAMETERS                          00132200
.******************************************************************     00132300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00132400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00132500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00132600
&XMFATTR              SETC  '0D'                                        00132700
.*                                                                      00132800
&ZOPN                 SETA  &ZOPN+1                                     00132900
&ZOPL(&ZOPN)          SETC  ' '                                         00133000
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00133100
&ZOPO(&ZOPN)          SETC  'B'                                         00133200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00133300
                      AGO   .ZALVL6B                                    00133400
.ZALVL6A              ANOP                                              00133500
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00133600
&ZOPV(&ZOPN)          SETC  '4,8'                                       00133700
&ZOPN                 SETA  &ZOPN+1                                     00133800
&ZOPL(&ZOPN)          SETC  ' '                                         00133900
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00134000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00134100
.ZALVL6B              ANOP                                              00134200
&ZOPD(&ZOPN)          SETC  '++ IOSHXBLK ARG PARMS'                     00134300
.*                                                                      00134400
&ZOPN                 SETA  &ZOPN+1                                     00134500
&ZOPL(&ZOPN)          SETC  ' '                                         00134600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00134700
&ZOPV(&ZOPN)          SETC  '1'                                         00134800
&ZOPD(&ZOPN)          SETC  ' '                                         00134900
.*                                                                      00135000
.ZLMFSL2              ANOP  ,                                           00135100
.*-------------------------------------------------------------------   00135200
.***AM.L00  IOSHXBLK FMT=LIST name                                      00135300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00135400
&ZOPN                 SETA &ZOPN+1                                      00135500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00135600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00135700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00135800
&ZOPD(&ZOPN)          SETC '++ IOSHXBLK NAME'                           00135900
.ZLMFSL2M             ANOP  ,                                           00136000
.*-------------------------------------------------------------------   00136100
.***AM.L01  IOSHXBLK FMT=LIST PARAMETERS                                00136200
&ZOPN                 SETA &ZOPN+1                                      00136300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00136400
&ZOPO(&ZOPN)          SETC 'DS'                                         00136500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00136600
&ZOPD(&ZOPN)          SETC '++ IOSHXBLK PARM LIST'                      00136700
.*-------------------------------------------------------------------   00136800
.***AM.L02 XVERSION XL1                                                 00136900
&ZOPN                 SETA &ZOPN+1                                      00137000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00137100
&ZOPO(&ZOPN)          SETC 'DS'                                         00137200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00137300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00137400
.*-------------------------------------------------------------------   00137500
.***AM.L03 XFLAGS BL.8                                                  00137600
&ZOPN                 SETA &ZOPN+1                                      00137700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00137800
&ZOPO(&ZOPN)          SETC 'DS'                                         00137900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00138000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00138100
.*                                                                      00138200
&ZOPN                 SETA  &ZOPN+1                                     00138300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORCE_YES'                      00138400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00138500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00138600
&ZOPD(&ZOPN)          SETC  '++ XFORCE.'                                00138700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00138800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00138900
.*-------------------------------------------------------------------   00139000
.***AM.L05 XFUNCTION H                                                  00139100
&ZOPN                 SETA &ZOPN+1                                      00139200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFUNCTION'                        00139300
&ZOPO(&ZOPN)          SETC 'DS'                                         00139400
&ZOPV(&ZOPN)          SETC 'H'                                          00139500
&ZOPD(&ZOPN)          SETC '++ &ZXFUNCTION XFUNCTION'                   00139600
.*                                                                      00139700
&ZOPN                 SETA  &ZOPN+1                                     00139800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BLOCK'                   00139900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00140000
&ZOPV(&ZOPN)          SETC  '38'                                        00140100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00140200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BLOCK'                        00140300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00140400
.*                                                                      00140500
&ZOPN                 SETA  &ZOPN+1                                     00140600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_UNBLOCK'                 00140700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00140800
&ZOPV(&ZOPN)          SETC  '39'                                        00140900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00141000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNBLOCK'                      00141100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00141200
.*                                                                      00141300
&ZOPN                 SETA  &ZOPN+1                                     00141400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_TESTBLOCK'               00141500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00141600
&ZOPV(&ZOPN)          SETC  '43'                                        00141700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00141800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TESTBLOCK'                    00141900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00142000
.*-------------------------------------------------------------------   00142100
.***AM.L09  XNAMEPTR A                                                  00142200
&ZOPN                 SETA &ZOPN+1                                      00142300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAMEPTR'                         00142400
&ZOPO(&ZOPN)          SETC 'DS'                                         00142500
&ZOPV(&ZOPN)          SETC 'A'                                          00142600
&ZOPD(&ZOPN)          SETC '++ &ZXNAMEPTR '                             00142700
.*-------------------------------------------------------------------   00142800
.***AM.L09  XTOKENPTR A                                                 00142900
&ZOPN                 SETA &ZOPN+1                                      00143000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKENPTR'                        00143100
&ZOPO(&ZOPN)          SETC 'DS'                                         00143200
&ZOPV(&ZOPN)          SETC 'A'                                          00143300
&ZOPD(&ZOPN)          SETC '++ &ZXTOKENPTR '                            00143400
.*-------------------------------------------------------------------   00143500
.***AM.L10 END OF IOSHXBLK LIST PARAMETERS                              00143600
&ZOPN                 SETA &ZOPN+1                                      00143700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00143800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00143900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00144000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00144100
.*                                                                      00144200
&ZOPN                 SETA &ZOPN+1                                      00144300
&ZOPL(&ZOPN)          SETC ' '                                          00144400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00144500
&ZOPV(&ZOPN)          SETC '1'                                          00144600
&ZOPD(&ZOPN)          SETC ' '                                          00144700
.*-------------------------------------------------------------------   00144800
.***AL.L12 IOSHXBLK FMT=LIST MF=S!L PARAMETERS                          00144900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00145000
.*                                                                      00145100
&ZOPN                 SETA  &ZOPN+1                                     00145200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00145300
&ZOPO(&ZOPN)          SETC  'DC'                                        00145400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00145500
&ZOPD(&ZOPN)          SETC  '++ IOSHXBLK ARG PARMS'                     00145600
.*                                                                      00145700
.ZLMFSLX              ANOP  ,                                           00145800
.*-------------------------------------------------------------------   00145900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00146000
&ZPLLEN               SETA 12                                           00146100
.*                                                                      00146200
.******************************************************************     00146300
.***AI.L01 IOSHXBLK FMT=LIST FILL IN PARAMETER AREA                     00146400
.******************************************************************     00146500
                      ACTR  10000                                       00146600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00146700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00146800
&ZCVAL                SETC  'LAE'          XAX MODE                     00146900
.ZIMFXA               ANOP ,                                            00147000
.*                                                                      00147100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00147200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00147300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00147400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00147500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00147600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00147700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00147800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00147900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00148000
&ZOPN                 SETA  &ZOPN+1                                     00148100
&ZOPL(&ZOPN)          SETC  ' '                                         00148200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00148300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00148400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00148500
                      AGO   .ZIMFNX                                     00148600
.*                                                                      00148700
.ZIMFN2               ANOP ,                                            00148800
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00148900
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00149000
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00149100
&ZOPN                 SETA  &ZOPN+1                                     00149200
&ZOPL(&ZOPN)          SETC  ' '                                         00149300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00149400
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00149500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00149600
                      AGO   .ZIMFNX                                     00149700
.ZIMFNX1              ANOP ,                                            00149800
&ZOPN                 SETA  &ZOPN+1                                     00149900
&ZOPL(&ZOPN)          SETC  ' '                                         00150000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00150100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00150200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00150300
.ZIMFNX               ANOP ,                                            00150400
.********************************************************************   00150500
.***AI.L02 IOSHXBLK FMT=LIST INITIALIZE PARAMETER AREA                  00150600
.********************************************************************   00150700
.***AI.L03 MF=(SLE)                                                     00150800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00150900
.*                                                                      00151000
&ZOPN                 SETA  &ZOPN+1                                     00151100
&ZOPL(&ZOPN)          SETC  ' '                                         00151200
&ZOPO(&ZOPN)          SETC  'XC'                                        00151300
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00151400
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00151500
.ZIMFLX               ANOP  ,                                           00151600
.*-------------------------------------------------------------------   00151700
.***AI.L04B XVERSION XL1                                                00151800
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00151900
&ZOPN                 SETA  &ZOPN+1                                     00152000
&ZOPL(&ZOPN)          SETC  ' '                                         00152100
&ZOPO(&ZOPN)          SETC  'MVI'                                       00152200
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00152300
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00152400
.ZIMFVZ               ANOP  ,                                           00152500
.*-------------------------------------------------------------------   00152600
.***AI.L05 XFLAGS BL1                                                   00152700
&ZW                   SETC  ''                                          00152800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00152900
.*-------------------------------------------------------------------   00153000
.***AI.L08 XFLAGS "YES"                                                 00153100
.***      BL1'1XXXXXXX'                                                 00153200
         AIF   ('&XFORCE' NE 'YES').ZI3A                                00153300
&ZW                   SETC  '&ZW.10000000'                              00153400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00153500
                      AGO   .ZI3C                                       00153600
.*                                                                      00153700
.ZI3A                 ANOP  ,                                           00153800
&ZW                   SETC  '&ZW.00000000'                              00153900
.ZI3C                 ANOP  ,                                           00154000
.*-------------------------------------------------------------------   00154100
.***AI.L11 XFLAGS BL1                                                   00154200
                      AIF   ('&ZCLNG' NE 'YES').ZI3E  ALL ZERO BITS     00154300
&ZOPN                 SETA  &ZOPN+1                                     00154400
&ZOPL(&ZOPN)          SETC  ' '                                         00154500
&ZOPO(&ZOPN)          SETC  'OI'                                        00154600
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00154700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00154800
.ZI3E                 ANOP  ,                                           00154900
.*-------------------------------------------------------------------   00155000
.***AI.L07 XFUNCTION AL2                                                00155100
&ZW                   SETC  ''                                          00155200
.*-------------------------------------------------------------------   00155300
.***AI.L15 XFUNCTION "BLOCK" AL2                                        00155400
         AIF   ('&XBLOCK' EQ '').ZI5A                                   00155500
&ZW                   SETC  '38'                                        00155600
.ZI5A                 ANOP  ,                                           00155700
.*-------------------------------------------------------------------   00155800
.***AI.L15 XFUNCTION "UNBLOCK" AL2                                      00155900
         AIF   ('&XUNBLOCK' EQ '').ZI6A                                 00156000
&ZW                   SETC  '39'                                        00156100
.ZI6A                 ANOP  ,                                           00156200
.*-------------------------------------------------------------------   00156300
.***AI.L15 XFUNCTION "TESTBLOCK" AL2                                    00156400
         AIF   ('&XTESTBLOCK' EQ '').ZI7A                               00156500
&ZW                   SETC  '43'                                        00156600
.ZI7A                 ANOP  ,                                           00156700
.*-------------------------------------------------------------------   00156800
.***AI.L15 XFUNCTION AL2                                                00156900
                      AIF   ('&ZW' EQ '0').ZI7B                         00157000
                      AIF   ('&ZW' EQ '').ZI7B                          00157100
.*                                                                      00157200
&ZOPN                 SETA  &ZOPN+1                                     00157300
&ZOPL(&ZOPN)          SETC  ' '                                         00157400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00157500
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZW)'                          00157600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED AL2'                            00157700
.ZI7B                 ANOP  ,                                           00157800
.*-------------------------------------------------------------------   00157900
.***AI.L25  XNAMEPTR AL4                                                00158000
                      AIF   ('&ZXNAMEPTR' EQ '').ZI8E                   00158100
                      AIF   ('&ZXNAMEPTR' EQ 'OUTPUT').ZI8E             00158200
&ZCGPR                SETC  '&XNAMEPTR'                                 00158300
.*                                                                      00158400
                      AIF   ('&XNAMEPTR'(1,1) NE '(').ZI8B              00158500
&ZCGPR   SETC  '0('.'&XNAMEPTR'(2,K'&XNAMEPTR-2).')'                    00158600
                      AGO   .ZI8D                                       00158700
.ZI8B                 ANOP  ,                                           00158800
.*                                                                      00158900
&ZC                   SETC  '&XNAMEPTR'(1,1)                            00159000
                      AIF   (T'&ZC NE 'N').ZI8D                         00159100
&ZC                   SETC  '&XNAMEPTR'                                 00159200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00159300
&ZCGPR                SETC  '=AL4(&XNAMEPTR)'                           00159400
.*                                                                      00159500
.ZI8D                 ANOP  ,                                           00159600
.*                                                                      00159700
&ZOPN                 SETA  &ZOPN+1                                     00159800
&ZOPL(&ZOPN)          SETC  ' '                                         00159900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00160000
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00160100
&ZOPD(&ZOPN)          SETC  '++ &ZXNAMEPTR XNAMEPTR'                    00160200
.*                                                                      00160300
.ZI8E                 ANOP  ,                                           00160400
.*-------------------------------------------------------------------   00160500
.***AI.L25  XTOKENPTR AL4                                               00160600
                      AIF   ('&ZXTOKENPTR' EQ '').ZI9E                  00160700
                      AIF   ('&ZXTOKENPTR' EQ 'OUTPUT').ZI9E            00160800
&ZCGPR                SETC  '&XTOKENPTR'                                00160900
.*                                                                      00161000
                      AIF   ('&XTOKENPTR'(1,1) NE '(').ZI9B             00161100
&ZCGPR   SETC  '0('.'&XTOKENPTR'(2,K'&XTOKENPTR-2).')'                  00161200
                      AGO   .ZI9D                                       00161300
.ZI9B                 ANOP  ,                                           00161400
.*                                                                      00161500
&ZC                   SETC  '&XTOKENPTR'(1,1)                           00161600
                      AIF   (T'&ZC NE 'N').ZI9D                         00161700
&ZC                   SETC  '&XTOKENPTR'                                00161800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00161900
&ZCGPR                SETC  '=AL4(&XTOKENPTR)'                          00162000
.*                                                                      00162100
.ZI9D                 ANOP  ,                                           00162200
.*                                                                      00162300
&ZOPN                 SETA  &ZOPN+1                                     00162400
&ZOPL(&ZOPN)          SETC  ' '                                         00162500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00162600
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00162700
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKENPTR XTOKENPTR'                  00162800
.*                                                                      00162900
.ZI9E                 ANOP  ,                                           00163000
.*-------------------------------------------------------------------   00163100
&ZOPN1                SETA &ZOPN                                        00163200
.*******************************************************************    00163300
.***  PROCESS IOSHXBLK OUTPUT PARAMETERS                                00163400
.*******************************************************************    00163500
                      ACTR  10000                                       00163600
.*******************************************************************    00163700
.***AO.X02  RETURN CODE PROCESSING                                      00163800
.*******************************************************************    00163900
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00164000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00164100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00164200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00164300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00164400
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00164500
&ZOPN                 SETA  &ZOPN+1                                     00164600
&ZOPL(&ZOPN)          SETC  ' '                                         00164700
&ZOPO(&ZOPN)          SETC  'ST'                                        00164800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00164900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00165000
                      AGO   .ZMRETX                                     00165100
.*                                                                      00165200
.ZMRET2               ANOP  ,                                           00165300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00165400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00165500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00165600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00165700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00165800
&ZOPN                 SETA  &ZOPN+1                                     00165900
&ZOPL(&ZOPN)          SETC  ' '                                         00166000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00166100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00166200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00166300
.ZMRETX               ANOP  ,                                           00166400
.*******************************************************************    00166500
.***AO.X03  REASON CODE PROCESSING                                      00166600
.*******************************************************************    00166700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00166800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00166900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00167000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00167100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00167200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00167300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00167400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00167500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00167600
&ZOPN                 SETA  &ZOPN+1                                     00167700
&ZOPL(&ZOPN)          SETC  ' '                                         00167800
&ZOPO(&ZOPN)          SETC  'ST'                                        00167900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00168000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00168100
                      AGO   .ZMRSNX                                     00168200
.*                                                                      00168300
.ZMRSN2               ANOP  ,                                           00168400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00168500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00168600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00168700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00168800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00168900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00169000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00169100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00169200
&ZOPN                 SETA  &ZOPN+1                                     00169300
&ZOPL(&ZOPN)          SETC  ' '                                         00169400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00169500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00169600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00169700
.ZMRSNX               ANOP  ,                                           00169800
.*******************************************************************    00169900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00170000
.*******************************************************************    00170100
.ZMFLX                ANOP  ,              MF=L PROCESSING              00170200
.*******************************************************************    00170300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00170400
.*******************************************************************    00170500
                      ACTR  10000                                       00170600
.*                                                                      00170700
                      LCLA  &ZLC           COLUMN POSITION              00170800
                      LCLA  &ZOPX          LIST TABLE INDEX             00170900
                      LCLC  &ZLL           LABEL                        00171000
                      LCLC  &ZLOP          OPERATION                    00171100
                      LCLC  &ZLV           VALUE                        00171200
                      LCLC  &ZLD           DESCRIPTION                  00171300
.*                                                                      00171400
&ZOPX                 SETA  1                                           00171500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00171600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00171700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00171800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00171900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00172000
                      AIF   (K'&ZLD LE 0).ZL5                           00172100
&ZLC                  SETA  35             COMMENT COLUMN               00172200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00172300
&ZLC                  SETA  33             COMMMENT COLUMN              00172400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00172500
&ZLV                  SETC  '&ZLV'.' '                                  00172600
                      AGO   .ZL3                                        00172700
.*                                                                      00172800
.ZL4                  ANOP  ,                                           00172900
&ZLV                  SETC  '&ZLV'.' '                                  00173000
.ZL5                  ANOP  ,                                           00173100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00173200
.*                                                                      00173300
&ZLL     &ZLOP &ZLV                                                     00173400
.*                                                                      00173500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00173600
                      AGO   .ZL2           CONTINUE LOOPING             00173700
.*                                                                      00173800
.ZLX                  ANOP  ,                                           00173900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00174000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00174100
.*********************************************************************  00174200
.*                                                                   *  00174300
.*  Get addressability to CVT                                        *  00174400
.*                                                                   *  00174500
.*********************************************************************  00174600
         L     15,16(0,0)                                               00174700
.*********************************************************************  00174800
.*                                                                   *  00174900
.*  Get addressability to IOCOM                                      *  00175000
.*                                                                   *  00175100
.*********************************************************************  00175200
         L     15,124(15,0)                                             00175300
.*********************************************************************  00175400
.*                                                                   *  00175500
.*  Get addressability to IOVT                                       *  00175600
.*                                                                   *  00175700
.*********************************************************************  00175800
         L     15,208(15,0)                                             00175900
.*********************************************************************  00176000
.*                                                                   *  00176100
.*  Check to see if HyperSwap Blocking support is available          *  00176200
.*                                                                   *  00176300
.*********************************************************************  00176400
         TM    293(15),B'00000001'                                      00176500
.*********************************************************************  00176600
.*                                                                   *  00176700
.*  Branch to set return code if not available                       *  00176800
.*                                                                   *  00176900
.*********************************************************************  00177000
         BNO   XBLK1&SYSNDX                                             00177100
.*********************************************************************  00177200
.*                                                                   *  00177300
.*  Link to Basic HyperSwap Blocking Service Interface               *  00177400
.*                                                                   *  00177500
.*********************************************************************  00177600
          LINK EP=IOSHMBLI                                              00177700
.*********************************************************************  00177800
.*                                                                   *  00177900
.*  Branch to check result                                           *  00178000
.*                                                                   *  00178100
.*********************************************************************  00178200
         B     XBLK2&SYSNDX                                             00178300
.*********************************************************************  00178400
.*                                                                   *  00178500
.*  Set HyperSwap Blocking not available return code                 *  00178600
.*                                                                   *  00178700
.*********************************************************************  00178800
XBLK1&SYSNDX DS    0H                                                   00178900
         LA    15,8(0,0)                                                00179000
         LA    0,12(0,0)                                                00179100
XBLK2&SYSNDX DS    0H                                                   00179200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00179300
.ZLINKX               ANOP  ,                                           00179400
.*******************************************************************    00179500
.***AP.X01  FORMAT GENERATED CODE                                       00179600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00179700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00179800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00179900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00180000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00180100
                      AIF   (K'&ZLD LE 0).ZL51                          00180200
&ZLC                  SETA  35             COMMENT COLUMN               00180300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00180400
&ZLC                  SETA  33             COMMENT COLUMN               00180500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00180600
&ZLV                  SETC  '&ZLV'.' '                                  00180700
                      AGO   .ZL31                                       00180800
.*                                                                      00180900
.ZL41                 ANOP  ,                                           00181000
&ZLV                  SETC  '&ZLV'.' '                                  00181100
.ZL51                 ANOP  ,                                           00181200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00181300
.*                                                                      00181400
&ZLL     &ZLOP &ZLV                                                     00181500
.*                                                                      00181600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00181700
                      AGO   .ZL21          CONTINUE LOOPING             00181800
.*                                                                      00181900
.ZLX1                 ANOP  ,                                           00182000
.*******************************************************************    00182100
.***AP.X02  END OF IOSHXBLK MACRO                                       00182200
&ZIOSHXBLK            SETC  'YES'          SET IOSHXBLK USED            00182300
         POP   PRINT                                                    00182400
*                                            IOSHXBLK-1                 00182500
         SPACE 1                                                        00182600
.ZLX2                 ANOP  ,                                           00182700
         MEND                                                           00182800
**********************************************************************/ 00182900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00183000
*%IOSHXBLK: MACRO KEYS(BLOCK,NAMEPTR,TOKENPTR,UNBLOCK,FORCE,TESTBLOCK,  00183100
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00183200
*  ANS('?'!!MACLABEL!!' '!!'IOSHBLKP '!!MACLIST!!                       00183300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00183400
*%END IOSHXBLK;                                                         00183500
