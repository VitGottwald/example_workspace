*                                                                               
*        %GOTO SMCXL1;            /* Bilingual Mapping Macro                    
         MACRO                                                                  
         IEESMCX                                                                
*                                                                               
.*/      %SMCXL1: ;                                               /* */         
*/**** START OF SPECIFICATIONS ***************************************/         
*/*                                                                  */         
*/*    MACRO NAME = IEESMCX                                      @P2C*/         
*/*                                                                  */         
*/*     ACRONYM = SMCX                                               */         
*/*                                                                  */         
*/*    DESCRIPTIVE NAME = SMF CONTROL TABLE EXTENSION                */         
*/*                                                                  */         
*/*    PROPRIETARY STATEMENT =                                       */         
*/*     LICENSED MATERIALS - PROPERTY OF IBM                         */         
*/*     5650-ZOS COPYRIGHT IBM CORP. 1992, 2021                      */         
*/*                                                                  */         
*/*    STATUS = HBB77D0                                              */         
*/*                                                                  */         
*/*    FUNCTION = Extended communications area used to hold data     */         
*/*               by SMF or other MVS components                     */         
*/*                                                                  */         
*/*    EXTERNAL CLASSIFICATION:  DMTI                            @P2A*/         
*/*    END OF EXTERNAL CLASSIFICATION:                           @P2A*/         
*/*                                                                  */         
*/*    NOTES =                                                       */         
*/*                                                                  */         
*/*        Bilingual Mapping Macro (PL/AS and BAL)                   */         
*/*                                                                  */         
*/*      DEPENDENCIES =                                              */         
*/*                                                                  */         
*/*        PL/AS Version =                                           */         
*/*         %INCLUDE SYSLIB(CVT) TO DEFINE CVTSMCA                   */         
*/*         %INCLUDE SYSLIB(IEESMCA) TO DEFINE SMCASMCX              */         
*/*                                                                  */         
*/*        BAL Version =                                             */         
*/*         A DSECT IS PRODUCED AND A USING ON SMCX GIVES            */         
*/*         ADDRESSABILITY FOR ALL SYMBOLS.                          */         
*/*                                                                  */         
*/*      RESTRICTIONS =                                              */         
*/*                                                                  */         
*/*        PL/AS Version = None                                      */         
*/*                                                                  */         
*/*        BAL Version = None                                        */         
*/*                                                                  */         
*/**** INVOCATION ****************************************************/         
*/*                                                                  */         
*/*    METHOD OF ACCESS =                                            */         
*/*                                                                  */         
*/*      PL/AS Invocation =                                          */         
*/*                                                                  */         
*/*  %INCLUDE SYSLIB(IEESMCX)                                        */         
*/*                                                                  */         
*/*    PARAMETER DESCRIPTION =  None                                 */         
*/*                                                                  */         
*/*    PARAMETER INTERDEPENDENCIES = None                            */         
*/*                                                                  */         
*/*------------------------------------------------------------------*/         
*/*                                                                  */         
*/*      BAL Invocation =                                            */         
*/*                                                                  */         
*/*      name            name: symbol. Begin name in column 1.       */         
*/*  b                   one or more blanks (up to nine)             */         
*/*  IEESMCX             should start in column 10                   */         
*/*  b                   one or more blanks                          */         
*/*                                                                  */         
*/*    PARAMETER DESCRIPTION =  None                                 */         
*/*                                                                  */         
*/*    PARAMETER INTERDEPENDENCIES = None                            */         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                  */         
*/*    DSECT NAME = SMCX                                             */         
*/*                                                                  */         
*/*    COMPONENT =  SYSTEM MANAGEMENT FACILITIES (SC100)             */         
*/*                                                                  */         
*/*    EYE-CATCHER = "SMCX"                                          */         
*/*     OFFSET = 0 ('0' in hex)                                      */         
*/*     LENGTH = 4 bytes                                             */         
*/*                                                                  */         
*/*    CREATED BY = IFASTART                                         */         
*/*                                                                  */         
*/*    POINTED TO BY = SMCASMCX                                      */         
*/*                                                                  */         
*/*    DELETED BY = N/A                                              */         
*/*                                                                  */         
*/*    SERIALIZATION = None                                          */         
*/*                                                                  */         
*/*    STORAGE ATTRIBUTES =                                          */         
*/*                                                                  */         
*/*      ALLOCATION METHOD = GETMAIN                                 */         
*/*      SUBPOOL           = 245                                     */         
*/*      KEY               = 0                                       */         
*/*      RESIDENCY         = Above                                   */         
*/*      SIZE              = 128 bytes ('80' in hex)             @03C*/         
*/*      FREQUENCY         = 1 per MVS system                        */         
*/*                                                                  */         
*/*    DISTRIBUTION LIBRARY = AMACLIB                                */         
*/*                                                                  */         
*/**** END OF SPECIFICATIONS *****************************************/         
*/*                                                                  */         
*/*  CHANGE ACTIVITY = @L0, @LR, @LS                                 */         
*/*                                                                  */         
*/*    $MAC(IEESMCX),COMP(SC100)                                     */         
*/*                                                                  */         
*/*  A - DEFINE CONTROL BLOCK FIELDS FOR SMF INTERVAL SYNC SUPPORT   */         
*/*  A - ADD SMCXINTT (POINTER TO GLOBAL INTERVAL TQE)           @LRA*/         
*/*  A - ADD SMCXENFP (POINTER TO ENF PARAMETER LIST AREA)       @LSA*/         
*/*  A - POINTER TO REGISTER SAVE AREA FOR SYSEVENT IN IEEMB839  @LTA*/         
*/*  A - POINTER TO 'DEFERRED' SCHEDULE TIMER CHAIN (SMCADFRQ)   @LTA*/         
*/*  A - ADD SMCXBIT1 (SMCX BIT INDICATORS)                      @LUA*/         
*/*  A - ADD SMCXSPDB (SYNC PROCESSING DISABLED INDICATOR)       @LUA*/         
*/*  A - ADD SMCXEXPT (POINTER TO INTEXPT RTN IN IEEMB839)       @LUA*/         
*/*  A - ADD SMCX839A (POINTER TO IEEMB839 WORK AREA)            @LUA*/         
*/*  D - DELETE ASSEMBLER CONSTANTS (SMCXSMCX and SMCXLVL1)      @P1A*/         
*/*  A - Add CDPI information to prolog                          @P2A*/         
*/*  A - ADD SMCXMEM and SMCXMEML for Memlimit Support           @LVA*/         
*/*  A - Corrected Change Activity statement for Memlimit Support@P3A*/         
*/*  A - Fixed copyright and prologue for SHOWHDR compliance     @T0A*/         
*/*  A - Add PL/X-capable extension prior to SMCXEND             @LWA*/         
*/*  A - Add SMCX_SpeedChangeSeq#                                @H1A*/         
*/*  A - Add new field SMCX838M pointed to IEEMB838, because the     */         
*/*      old field SMCAMACR points to the glue routine IEEMB8G8  @LXA*/         
*/*  A - Add new fields for SMF data volume                      @LYA*/         
*/*  A - Add new fields for SMF data volume                      @LZA*/         
*/*  C - SMCXLSDI is not used any more                           @P4A*/         
*/*  D - SMCX_SWITCH_MANXY is not used any more                  @P5A*/         
*/*  A - Add flag to suppress empty EXCP sections of type 30 rec @L1A*/         
*/*  C - Un-Defined SMCX838M. This field was changed to reserved @01A*/         
*/*      because the address of IEEMB838 is now housed in the    @01A*/         
*/*      SMCA (SMCA838M).                                        @01A*/         
*/*  A - Add SmcxSmfRestarts (number of times SMF address space  @P8A*/         
*/*      has been restarted)                                     @P8A*/         
*/*  A - Add SMCX824A                                            @P9A*/         
*/*  A - Defined SMCX_Logger_Restarted                           @02A*/         
*/*  A - Add RSM SMF Type 23 statistics fields for deltas        @03A*/         
*/*  A - Add pointer to flood statistics table                   @L2A*/         
*/*  A - Add pointer capacity data                               @L2A*/         
*/*  C - Minor updates found in roll down review                 @P6A*/         
*/*  A - Define DSECT for dump exit table                        @04A*/         
*/*  A - Added SMCX_PCD_RMCTADJN_Nominal                         @PAA*/         
*/*  C - Corrected the commentary for SMCXTSWT and SMCXTTWT      @PCA*/         
*/*  A - Added SMCXJCST for SMF REALTIME, plus reserved space    @05A*/         
*/*  A - Define SmcxHFTS                                         @06A*/         
*/*  A - Added SMCX_CVTLSO_Changed, SMCX_Saved_CVTLSO and            */         
*/*      SMCX_CVTLSO_ECB.  Defined SMCX_BE_ECB in the Assembler      */         
*/*      portion to keep it consistent with the PL/X portion.    @09A*/         
*/*  A - Defined SMCX_crypCtrs_Sum_Area_Ptr,                         */         
*/*      SMCX_crypCtrs_Sum_Area and SMCX_ENF86_ECB.              @0BA*/         
*/*  A - Defined SMCX_WTDE_F_Avail_TempArea_Enqd.                @0CA*/         
*/*                                                                  */         
*/*  $L0=SYNCS   ,HBB4430,910910,PDDH: SMF INTERVAL SYNC SUPPORT @L0A*/         
*/*                                    (STAGE 1)                 @L0A*/         
*/*  $LR=SYNCS   ,HBB4430,911108,PDDH: SMF INTERVAL SYNC SUPPORT @LRA*/         
*/*                                    (STAGE 3)                 @LRA*/         
*/*  $LS=SYNCS   ,HBB4430,911209,PDDH: SMF INTERVAL SYNC SUPPORT @LSA*/         
*/*                                    (STAGE 4)                 @LSA*/         
*/*  $LT=SYNCS   ,HBB4430,911209,PDBR: DEFER INTERVAL SCHED      @LTA*/         
*/*  $LU=SYNCS   ,HBB4430,920115,PDDH: SMF INTERVAL SYNC SUPPORT @LUA*/         
*/*                                    (STAGE 4)                 @LUA*/         
*/*  $P1=PKB1796 ,HBB4430,920506,PDDH: Incorrectly Parsed        @P1A*/         
*/*                                    Assembler Constants       @P1A*/         
*/*  $P2=PIG2206 ,HBB5510,930720,PDDH: CDPI: SHOWHDR Compliance  @P2A*/         
*/*                                                                  */         
*/*  $LV=V64BIT  ,HBB7705,001009,PDB6: Memlimit Support          @LVA*/         
*/*  $P3=PX01036 ,HBB7705,010117,PDB6: Prologue Changes          @P3A*/         
*/*  $T0=TX00786 ,HBB7705,010123,PDB6: Prologue Changes          @T0A*/         
*/*  $LW=SMFBXL  ,HBB7709,030529,PDTC: SMF Constraints II        @LWA*/         
*/*  $H1=IFA     ,HBB7709,040109,PDXB: SpeedChangeSeq#           @H1A*/         
*/*  $LX=VSCR    ,HBB7740,051215,PDNIZ:add new field SMCX838M        */         
*/*                                    pointed to IEEMB838       @LXA*/         
*/*  $LY=SMFDV   ,HBB7740,060724,PDNIZ:SMF Data Volume           @LYA*/         
*/*  $LZ=SMFDV   ,HBB7740,060915,PDNIZ:SMF Data Volume           @LZA*/         
*/*  $P4=ME08586 ,HBB7740,061121,PDNIZ:test RECORDING keyword before */         
*/*                                    SET SMF processing        @P4A*/         
*/*  $P5=ME08867 ,HBB7740,070105,PDNIZ:Hang-up of IFASMF task    @P5A*/         
*/*  $P7=ME10104 ,HBB7750,070427,PDOO: Asset Protection          @P7A*/         
*/*                                    Compliance                @P7A*/         
*/*  $L1=ELIMEXCP,HBB7750,070416,PDAT: Suppress empty EXCP entry @L1A*/         
*/*  $01=OA22791  HBB7740 071130 PDOO: ABEND 0C1 during restart  @01A*/         
*/*  $P8=ME13887 ,HBB7760,080627,PDH6: Add SmcxSmfRestarts       @P8A*/         
*/*  $P9=ME14342 ,HBB7760,080822,PDH6: STQE processing cleanup   @P9A*/         
*/*  $02=OA24662  HBB7740 080720 PDOO: Logstreams remain         @02A*/         
*/*                                    disconnected after Logger @02A*/         
*/*                                    fails and restarts        @02A*/         
*/*  $03=OA27161 ,HBB7730,081126,PDOH: RSM Delta SMF23 Stats     @03A*/         
*/*  $L2=SMFFLD  ,HBB7770,090430,PDAS: SMF Record Flood Automation   */         
*/*                                                              @L2A*/         
*/*  $L5=SMFPOWER HBB7770 090820 PDOO: SMF ZGRYPHON support      @L5A*/         
*/*                                    Feature: ME16946          @L5A*/         
*/*  $P6=ME18275 ,HBB7770,100129,PDOO: SMFPOWER cosmetic updates @P6A*/         
*/*  $04=OA29894 ,HBB7740,091231,PDAS: Register dump exits       @04A*/         
*/*  $PA=ME22089  HBB7790,110826,PDOO: Add SMF30_RMCTADJN_Nominal@PAA*/         
*/*  $PB=ME24004 ,HBB7790,120424,PDOO: Separate Wait Time Limits @PBA*/         
*/*                                    For Batch TSO And STC     @PBA*/         
*/*  $PC=ME28244  HBB77A0,141023,PDOO: Correct commentary        @PCA*/         
*/*  $05=OA49263 ,HBB7790,160715,PDNM: SMF REALTIME support      @05A*/         
*/*  $06=OA48570 ,HBB77A0,160630,PDJI: High frequency throughput     */         
*/*                                    statistics (HFTS)         @06A*/         
*/*  $07=FB       HBB77B0 190131 PDXB: FB                        @07A*/         
*/*  $08=FB2      HBB77C0 200131 PDXB: FB2                       @08A*/         
*/*  $09=OA56950  HBB77D0 200715 PDOO:  Synched interval is off by   */         
*/*                                     leap seconds (SUG APAR)  @09A*/         
*/*     =W385484  HBB77D0 200901 PDTA: Create C header (metadata-    */         
*/*                                    only change)                  */         
*/*  $0A=OA60659  HBB77C0 210105 PDXB: FB3                       @0AA*/         
*/*  $0B=OA61511  HBB77C0 220415 PDOO: CPACF                     @0BA*/         
*/*  $0C=OA63064  HBB77B0 220621 PDOO: ESQA exhausted after TempArea */         
*/*                                    data loss                 @0CA*/         
*/*                                                                  */         
*/********************************************************************/         
*/*                                                                  */         
*        %GOTO SMCXL2;                                            /* *          
*                                                                               
*   BAL mapping definitions...                                                  
*                                                                               
         SPACE 1                                                                
SMCX     DSECT                                                                  
         SPACE 1                                                                
SMCXID   DS    CL4 -          SMCX CONTROL BLOCK ID - "SMCX"                    
SMCXLVL  DS    H -            SMCX CONTROL BLOCK LEVEL INDICATOR                
SMCXLEN  DS    H -            SMCX CONTROL BLOCK LENGTH                         
SMCXINTV DS    CL8 -          GLOBAL INTERVAL VALUE (TOD FORMAT)                
SMCXSYNV DS    CL8 -          GLOBAL INTERVAL SYNC VALUE (TOD FORMAT)           
SMCXINTP DS    CL2 -          INTVAL PARM VALUE (CHARACTER FORMAT)              
SMCXSYNP DS    CL2 -          SYNCVAL PARM VALUE (CHARACTER FORMAT)             
SMCXINTE DS    CL8 -          TOD FORMAT OF THE NEXT SCHEDULED GLOBAL           
*                             SYNCHED INTERVAL EXPIRATION                       
SMCXINTT DS    A -            POINTER TO THE GLOBAL INTERVAL TQE   @LRA         
SMCXENFP DS    A -            POINTER TO ENF PARAMETER LIST AREA   @LSA         
SMCXDFRQ DS    A              ADDRESS OF DEFERRED INTERVAL STQE    @LTA         
*                             CHAIN                                @LTA         
SMCX824A DS    A              Address of IEEMB824                  @P9C         
SMCXBIT1 DS    CL4 -          BIT INDICATOR MASK (WORD 1)          @LUA         
SMCXSPDB EQU   X'80'          SYNC PROCESSING DISABLED INDICATOR   @LUA         
SMCXEXCP EQU   X'40'          FLAG TO SUPPRESS EMPTY EXCP ENTRIES  @L1A         
SMCXWFLD EQU   X'20'          1-IFALSWTR is currently                           
*                             performing SMF Flood Automation                   
*                             processing                           @L2A         
SMCXRFER EQU   X'10'          1-No successful flood policy                      
*                             updates have been made since                      
*                             the last failure                     @L2A         
SMCXFTST EQU   X'08'          1-SMF Record flooding has been disabled           
*                             due to errors                        @L2A         
SMCXPCC  EQU   X'04'          Processor capacity change indicator  @L5A         
SMCX_IBS EQU   X'02'                                               @07A         
SMCX_IBE EQU   X'01'                                               @07A         
SMCX_SDB EQU   X'80'          In byte SMCXBIT1+1                   @07A         
SMCX_RPB EQU   X'40'                                               @08A         
SMCX_CVTLSO_Changed EQU x'20' A change to CVTLSO occurred          @09A         
SMCX_RPBED EQU X'10'          RP boost enable/disable              @0AA         
SMCX_RPBI EQU  X'08'          RP boost info                        @0AA         
SMCX_WTDE_F_Avail_TempArea_Enqd EQU X'04'  When on, a WTDE for                  
*                             F_Avail_TempArea has been enqueued                
*                             and not yet processed.               @0CA         
SMCXEXPT DS    A -            POINTER TO INTEXPT RTN IN IEEMB839   @LUA         
SMCX839A DS    A -            POINTER TO IEEMB839 WORK AREA        @LUA         
SMCXMEML DS    D -            MEMLIMIT CONVERTED TO M-BYTES IN HEX @LVA         
SMCXMEM  DS    0CL6           MEMLIMIT IN EBCDIC                   @LVA         
SMCXMEMD DS    CL5            FIRST 5 CHARACTERS OF MEMLIMIT AS                 
*                             ENTERED IN SMFPRMxx - DIGITS 0-9     @LVA         
SMCXMEMU DS    CL1            LAST CHARACTER OF MEMLIMIT (UNITS                 
*                             M, G, T, OR P) AS ENTERED IN                      
*                             SMFPRMxx                             @LVA         
SMCX_SpeedChangeSeq# DS H     Used to tell if end-interval processing           
*                             needs to be done due to a concurrent              
*                             speed-change that occurred         @H1A*/         
SMCXFldTablePtr DS A          SMF Record Flood Table               @L2C         
SMCXPCWT DS    A              pointer to IFAPCWTR                  @LYA         
SMCXLSBT DS    CL1            Log Stream bits                      @LYA         
SMCXLSDS EQU   X'80'          1-LogStream or 0-ManX/Y output       @LYA         
*              0 - if RECORDING(DATASET)   parameter is  processed              
*              1 - if RECORDING(LOGSTREAM) parameter is  processed @P4C         
SMCX_Logger_Restarted EQU X'40' Indicates that Logger has restarted             
*                               after having been unavailable. Set to           
*                               ON by IFALSENF, Set to OFF by                   
*                               IFALSMOD.                          @02A         
SMCXLMOD EQU   X'20'          1-IFALSMOD was ACTIVE.                            
*                             The bit is set to ON once and forever             
*                             if IFALSMOD even once received                    
*                             control. (It is needed while IPLing               
*                             to know were logstream parameters                 
*                             processed or not)                    @LYA         
         DS    CL1            RESERVED (Can be used later)         @P8C         
SmcxSmfRestarts DS H          Number of times SMF address                       
*                             space has been restarted             @P8A         
SMCX_WTDE_HEAD DS A           Pointer to head of Work_To_Do Element             
SMCX_WTDE_TAIL DS A           Pointer to tail of Work_To_Do Element             
*                             Used by IFALSMOD to do extra work    @LZA         
SMCX_SMFType23Stats  DS 0CL28      SMF Type 23 Statistics section  @03A         
SMCX_RCENumOfGetmainRequests DS F  Number of Getmain requests      @03A         
*                                  since last SMF type 23 record   @03A         
SMCX_RCEPgsBackedOnGtmnReqs  DS F  Number of pages backed during   @03A         
*                                  Getmain requests                @03A         
*                                  since last SMF type 23 record   @03A         
SMCX_RCENumOfFixRequests     DS F  Number of fix requests for      @03A         
*                                  storage (address space only)    @03A         
*                                  below two gigabytes             @03A         
*                                  since last SMF Type 23 record   @03A         
SMCX_RCENumFramesFx          DS F  Number of frames requested to   @03A         
*                                  be fixed for storage (address   @03A         
*                                  space only) below two gigabytes @03A         
*                                  since last SMF Type 23 record   @03A         
SMCX_RCE1stRefFaults         DS F  Number of first                 @03A         
*                                  reference faults taken          @03A         
*                                  since last SMF Type 23 record   @03A         
SMCX_RCENon1stRefFaults      DS F  Number of non-first             @03A         
*                                  reference faults taken          @03A         
*                                  since last SMF Type 23 record   @03A         
SMCX_SMF23CPUArrayPtr        DS A  Pointer to the                  @03A         
*                                  SMF Type 23 Statistics          @03A         
*                                  CPU array section               @03A         
SMCX_Capacity_Change_ECB        DS F  Processor capacity chg ECB   @L5A         
SMCX_Curr_PCD_Ptr               DS F Pointer to current Processor               
*                                    Capacity data area            @L5A         
SMCX_Curr_Capacity_Change_Cnt   DS H Number of processor capacity  @L5A         
*                                    changes that occurred since   @L5A         
*                                    the previous regular interval @L5A         
*                                    record was written.           @L5A         
SMCX_Intv_Capacity_Change_Cnt   DS H Number of processor capacity  @L5A         
*                                    changes that occurred since   @L5A         
*                                    the previous (event or non    @L5A         
*                                    event driven) interval record @L5A         
*                                    was written. This field is    @L5A         
*                                    cleared when an event driven  @L5A         
*                                    interval record is written    @L5A         
*                                    and its value will be > 1     @L5A         
*                                    when the number of processor  @L5A         
*                                    capacity changes exceeds the  @L5A         
*                                    value specified by            @L5A         
*                                    MAXEVENTINTRECS               @L5A         
SMCX_MAXEVENTINTRECS            DS H value of MAXEVENTINTRECS      @L5A         
SMCXRSV3                        DS CL2    Reserved for alignment   @L5A         
SMCX_DPEXITS_Ptr             DS A  Pointer to valid IFASMFDP exits @04A         
SMCX_DLEXITS_Ptr             DS A  Pointer to valid IFASMFDL exits @04A         
*                                                                               
SMCX_Tmr_Ecb_Ptr             DS A  Pointer to ECB used for STIMER               
*                                  when ENQ not available          @04A         
SMCXESWT                   DS CL4  SWT(hhmm) value as entered in   @PBA         
*                                  in SMFPRMxx                     @PBA         
SMCXMSWT                     DS F  SWT(hhmm) value in minutes      @PBA         
SMCXTSWT                     DS F  SWT(hhmm) value in units        @PCC         
*                                  of 2**20 microseconds      @PBA @PCC         
SMCXETWT                   DS CL4  TWT(hhmm) value as entered in   @PBA         
*                                  in SMFPRMxx                     @PBA         
SMCXMTWT                     DS F  TWT(hhmm) value in minutes      @PBA         
SMCXTTWT                     DS F  TWT(hhmm) value in units        @PCC         
*                                  of 2**20 microseconds      @PBA @PCC         
SMCXJCST                     DS A  Pointer to SMF Callable         @05C         
*                                  Services stub routine (IFAJCST) @05A         
SMCXHFTS                     DS A  Pointer to HFTS control table   @06A         
SMCX_BE_ECB                  DS F  Set by IFAENFL for posting                   
*                                  by IFASMF                       @09A         
SMCX_Saved_CVTLSO            DS D  Current or previous CVTLSO      @09A         
SMCX_CVTLSO_ECB              DS F  Set by IEEMB842 when a change                
*                                  to CVTLSO is detected           @09A         
SMCX_CrypCtrs_Sum_Area_Ptr   DS A  Address of the system crypto                 
*                                  counters work area              @0BA         
SMCX_ENF86_ECB               DS F  Set by IFAENFL for Compliance                
*                                  processing by IFASMF            @0BA         
SMCXRSV4                   DS CL12 Reserved                        @0BC         
SMCXEND  EQU   *              END OF SMCX MAPPING                               
*                                                                               
*                                                                               
*                                                                               
SMCX_SMF23CPUArray DSECT           SMF Type 23 Statistics          @03A         
*                                  CPU array section               @03A         
SMCX_nextcpu                 DS A  Address of next cpu array       @03A         
*                                  element (0 if last one)         @03A         
SMCX_iowiocnt                DS F  Number of I/Os                  @03A         
*                                  since last SMF Type 23 record   @03A         
SMCX_lccatcbc                DS F  Number of unlocked TCB          @03A         
*                                  dispatches                      @03A         
*                                  since last SMF Type 23 record   @03A         
SMCX_lccasrbc                DS F  Number of SRB dispatches        @03A         
*                                  since last SMF Type 23 record   @03A         
SMCXEND1 EQU *                     END OF SMCX_SMF23CPUARRAY       @03A         
*                                                                               
*                                                                               
*                                                                               
SMCX_Dump_Exit_Tbl DSECT           Mapping for a dump exit table   @04A         
*                                                                               
SMCX_DMPETB_Hdr              DS 0CL16 Table header                 @04A         
SMCX_DMPTBL_ID               DS CL8   Eye catcher                  @04A         
SMCX_DMPTBPL                 DS 0F    Length and subpool           @04A         
SMCX_DMPTBSP                 DS BL1   Subpool of table             @04A         
SMCX_DMPTBLN                 DS BL3   Length of table              @04A         
SMCX_DMP_Entries             DS F     Number of entries            @04A         
SMCX_DMP_Flags               DS CL4 Flags                          @04A         
SMCX_DMP_Updated_Wo_Enq      EQU x'80' This table was updated      @04A         
*                                  without serialization on        @04A         
*                                  the enqueue                     @04A         
SMCX_DMPEXTS                 DS 0F    Exit name array              @04A         
SMCX_DMPExit_Flags           DS BL3   Exit entry flags             @04A         
SMCX_DMP_Last_Entry          EQU x'80' Last entry flag             @04A         
SMCX_DMPUSRN                 DS BL1   1 - USER1                    @04A         
*                                  2 - USER2                       @04A         
*                                  3 - USER3                       @04A         
SMCX_DMPNM                   DS CL8   Dump exit name               @04A         
*                                                                  @04A         
*         ;                                                                     
***********************************************************************         
*    Processor Capacity Data (PCD) map.                               *         
*    - Top of the chain pointed to by SMCX_Curr_PCD_Ptr               *         
*    - Always contains at least 2 entries (curr and curr->prior)      *         
*    - New instance per change in Processor Capacity. If no changes   *         
*      in processor capacity occur, the current PCD will equal        *         
*      the prior PCD.                                                 *         
*    - New PCD will go at the top of the stack.                       *         
*    - Last PCD will point to zero.                                   *         
*    - PCDs (past the first 2) are unchained and freed when the       *         
*      SMCX_PCD_Scheduled_SRBs count is zero.                     @P6A*         
***********************************************************************         
SMCX_Proc_Capacity_Data      DSECT   Processor Capacity Data from               
*                                    WLM fields, as indicated      @L5A         
SMCX_PCD_Eye_Catcher         DS CL4  'PCD '                                     
SMCX_PCD_Prior               DS F  PCD that was built prior to                  
*                                  this PCD                        @L5A         
SMCX_PCD_Change_Time         DS D  From RMCTZ_Capacity_Change_Time              
*                                  (STCK format)                   @P6C         
SMCX_PCD_RQSVSuS             DS F  RQSVSuS                         @L5A         
SMCX_PCD_RCTPCPUA_actual     DS F  RCTPCPUA_actual                 @L5A         
SMCX_PCD_RCTPCPUA_Nominal    DS F  RCTPCPUA_nominal                @L5A         
SMCX_PCD_RCTPCPUA_Scaling    DS F  RCTPCPUA_scaling_factor         @L5A         
SMCX_PCD_Capacity_Adj_Ind    DS X  RMCTZ_Capacity_Adjustment_      @L5A         
*                                    Indication                    @L5A         
SMCX_PCD_Capacity_Chg_Rsn    DS X  RMCTZ_Capacity_Change_Reason    @L5A         
SMCX_PCD_Intv_Change_Cnt     DS H  COpied from                                  
*                                  SMCX_Intv_Capacity_Change_Cnt   @L5A         
SMCX_PCD_Scheduled_SRBs      DS F   The number of SRBs currently                
*                                   scheduled to run that point to              
*                                   this PCD. This count is decremented         
*                                   at the end of the SRB routine. When         
*                                   the count is zero, the PCD is               
*                                   eligible to be freed.          @L5A         
SMCX_PCD_Flags               DS CL1                                @L5A         
SMCX_PCD_RQSVSuS_Err         EQU X'80' Error retrieving RQSVSuS    @L5A         
SMCX_PCD_Err                 EQU X'40' Error retrieving rest of    @L5A         
*                                      capacity group data         @L5A         
SMCX_PCD_Event_Intv          EQU X'20' Set to on when the current  @L5A         
*                                      STQE is for an event driven @L5A         
*                                      interval                    @L5A         
*                                                                @L5A*/         
SMCXRSV2                     DS CL3 Reserved for alignment         @PAC         
SMCX_PCD_RMCTADJN_Nominal    DS F   Nominal CPU rate adjustment    @PAA         
SMCXEND2 EQU *                      End OF SMCX_Proc_Capacity_Data @L5A         
.*                                                                              
.*                            DELETED ASSEMBLER CONSTANTS         2@P1D         
.*                                                                              
         MEND  , */                                                             
*    %SMCXL2: ;                                                                 
*/*                               */                                            
*/* PL/AS mapping definitions...  */                                            
*/*                               */                                            
*   DECLARE                                                                     
*     1 SMCX BASED(SMCASMCX) BDY(DWORD),                                        
*       3 SMCXID    CHAR(4),       /* SMCX CONTROL BLOCK ID - "SMCX" */         
*       3 SMCXLVL   FIXED(15),     /* SMCX CONTROL BLOCK LEVEL                  
*                                     INDICATOR                      */         
*       3 SMCXLEN   FIXED(15),     /* SMCX CONTROL BLOCK LENGTH      */         
*       3 SMCXINTV  CHAR(8),       /* GLOBAL INTERVAL VALUE                     
*                                     (TOD FORMAT)                   */         
*       3 SMCXSYNV  CHAR(8),       /* GLOBAL INTERVAL SYNC VALUE                
*                                     (TOD FORMAT)                   */         
*       3 SMCXINTP  CHAR(2),       /* INTVAL PARM VALUE                         
*                                     (CHARACTER FORMAT)             */         
*       3 SMCXSYNP  CHAR(2),       /* SYNCVAL PARM VALUE                        
*                                     (CHARACTER FORMAT)             */         
*       3 SMCXINTE  CHAR(8),       /* TOD FORMAT OF THE NEXT                    
*                                     SCHEDULED GLOBAL SYNCHED                  
*                                     INTERVAL EXPIRATION            */         
*       3 SMCXINTT  PTR(31),       /* POINTER TO THE GLOBAL INTERVAL            
*                                     TQE                        @LRA*/         
*       3 SMCXENFP  PTR(31),       /* POINTER TO ENF PARAMETER LIST             
*                                     AREA                       @LSA*/         
*       3 SMCXDFRQ  PTR(31),       /* ADDRESS OF THE DEFERRED INTERVAL          
*                                     STQE CHAIN                 @LTA*/         
*       3 SMCX824A  PTR(31),       /* Address of IEEMB824        @P9C*/         
*       3 SMCXBIT1  CHAR(4),       /* BIT INDICATOR MASK (WORD 1)               
*                                                                @LUA*/         
*         5 SMCXSPDB BIT(1),       /* SYNC PROCESSING DISABLED                  
*                                     INDICATOR                  @LUA*/         
*         5 SMCXEXCP BIT(1),       /* SUPPRESS EMPTY EXCP FLAG   @L1A*/         
*         5 SMCXWFLD BIT(1),       /* 1-IFALSWTR is currently                   
*                                     performing SMF Flood Automation           
*                                     processing                 @L2A*/         
*         5 SMCXRFER Bit(1),       /* 1-No successful flood policy              
*                                     updates have been made since              
*                                     the last failure           @L2A*/         
*         5 SMCXFTST BIT(1),       /* 1-SMF Record flooding has been            
*                                     disabled due to errors     @L2A*/         
*         5 SMCXPCC  BIT(1),       /* Processor capacity change  @L5A*/         
* %IF SYSVERSION = '' %THEN %GOTO SMCX_1A;                    /* @07A*/         
* %IF SYSRULESMOD='PL/S-III ' %THEN %GOTO SMCX_1A;            /* @07A*/         
*         5 SMCX_IBS Bit(1),       /*                            @07A*/         
*         5 SMCX_IBE Bit(1),       /*                            @07A*/         
*         5 SMCX_SDB Bit(1),       /*                            @07A*/         
*         5 SMCX_RPB Bit(1),       /*                            @08A*/         
*         5 SMCX_CVTLSO_Changed BIT(1), /* CVTLSO changed        @09A*/         
*         5 SMCX_RPBED Bit(1),     /* RP boost enable/disable    @0AA*/         
*         5 SMCX_RPBI Bit(1),      /* RP boost info              @0AA*/         
*         5 SMCX_WTDE_F_Avail_TempArea_Enqd BIT(1), /* When on, A WTDE          
*                                     for F_Avail_TempArea has been             
*                                      enqueued and not yet                     
*                                      processed.                @0CA*/         
* %SMCX_1A:;                                                  /* @07A*/         
*       3 SMCXEXPT PTR(31),        /* ADDRESS OF INTEXPT RTN IN                 
*                                     IEEMB839                   @LUA*/         
*       3 SMCX839A PTR(31),        /* POINTER TO IEEMB839 WORK AREA             
*                                                                @LUA*/         
*/********************************************************************/         
*/*                                                                  */         
*/*     Variables Used to Process MEMLIMIT Keyword in IEEMB821   @LVA*/         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*                                                                               
*       3 SMCXMEML CHAR(8),        /* MEMLIMIT converted to                     
*                                     M-BYTES in HEX             @LVA*/         
*       3 SMCXMEM CHAR(6),         /* MEMLIMIT in EBCDIC         @LVA*/         
*         5 SMCXMEMD CHAR(5),      /* First 5 characters of                     
*                                     MEMLIMIT as entered in                    
*                                     SMFPRMxx - digits 0-9      @LVA*/         
*         5 SMCXMEMU CHAR(1)      /* Last character of MEMLIMIT                 
*                                     - units M, G, T or P                      
*                                     as entered in SMFPRMxx     @LVA*/         
* %IF SYSVERSION = '' %THEN %GOTO SMCX_END;                   /* @LWA*/         
* %IF SYSRULESMOD='PL/S-III ' %THEN %GOTO SMCX_END;           /* @LWA*/         
*      ,3 SMCX_SpeedChangeSeq# Fixed(15)  /* Used to tell                       
*                             if end-interval processing needs to be            
*                             done due to a concurrent speed-change             
*                             that occurred                      @H1A*/         
*      ,3 SMCXFldTablePtr Ptr(31) /* SMF Flood Table             @L2C*/         
*      ,3 SMCXPCWT  PTR(31)   /* pointer to IFAPCWTR             @LYA*/         
*      ,3 SMCXLSBT CHAR(1)    /* Log Stream bits                 @LYA*/         
*        ,5 SMCXLSDS BIT(1)   /* 1-LogStream or 0-ManX/Y output                 
*            0 - if RECORDING(DATASET)   parameter is  processed                
*            1 - if RECORDING(LOGSTREAM) parameter is  processed @P4C*/         
*        ,5 SMCX_Logger_Restarted BIT(1)  /* ON indicates that Logger           
*                                has restarted after having been                
*                                unavailable. Set to ON by IFALSENF,            
*                                set to OFF by IFALSMOD.         @02C*/         
*        ,5 SMCXLMOD BIT(1)   /* 1-IFALSMOD was ACTIVE                          
*                                The bit is set to ON once and forever          
*                                if IFALSMOD even once received                 
*                                control. (It is needed while IPLing            
*                                to know were logstream parameters              
*                                processed or not)               @LYA*/         
*  /* Put new things here. Long names are OK */               /* @LWA*/         
*      ,3 *        CHAR(1)    /* RESERVED (Can be used later)    @P8C*/         
*      ,3 SmcxSmfRestarts Fixed(16) /* Number of times SMF address              
*                                space has been restarted        @P8A*/         
*      ,3 SMCX_WTDE_HEAD PTR(31) /*Ptr to head of Work_To_Do Element,*/         
*      ,3 SMCX_WTDE_TAIL PTR(31) /*Ptr to tail of Work_To_Do Element,*/         
*                        /* Used by IFALSMOD to do extra work    @LZA*/         
*      ,3 SMCX_SMFType23Stats Char(28) Bdy(Word)  /* SMF Type 23                
*                                     Statistics section         @03A*/         
*        ,5 SMCX_RCENumOfGetmainRequests Fixed(32)  /* Number of                
*                                     Getmain requests                          
*                                     since last SMF type 23 record             
*                                                                @03A*/         
*        ,5 SMCX_RCEPgsBackedOnGtmnReqs Fixed(32)  /* Number of pages           
*                                     backed during Getmain requests            
*                                     since last SMF type 23 record             
*                                                                @03A*/         
*        ,5 SMCX_RCENumOfFixRequests Fixed(32)  /* Number of fix                
*                                     requests for storage (address             
*                                     space only) below two gigabytes           
*                                     since last SMF Type 23 record             
*                                                                @03A*/         
*        ,5 SMCX_RCENumFramesFx Fixed(32)  /* Number of frames                  
*                                     requested to be fixed for                 
*                                     storage (address space only)              
*                                     below two gigabytes                       
*                                     since last SMF Type 23 record             
*                                                                @03A*/         
*        ,5 SMCX_RCE1stRefFaults Fixed(32)  /* Number of first                  
*                                     reference faults taken                    
*                                     since last SMF Type 23 record             
*                                                                @03A*/         
*        ,5 SMCX_RCENon1stRefFaults Fixed(32)  /* Number of non-first           
*                                     reference faults taken                    
*                                     since last SMF Type 23 record             
*                                                                @03A*/         
*        ,5 SMCX_SMF23CPUArrayPtr Ptr(31)  /* Pointer to the                    
*                                     SMF Type 23 Statistics                    
*                                     CPU array section          @03A*/         
*      ,3 SMCX_Capacity_Change_ECB  FIXED(31) /* Set by IFAENFL for             
*                                                POSTing IFASMF  @L5A*/         
*      ,3 SMCX_Curr_PCD_Ptr  PTR(31)   /* Pointer to current Processor          
*                                         Capacity data area     @L5A*/         
*      ,3 SMCX_Curr_Capacity_Change_Cnt   FIXED(16) /* Number of                
*                                         processor capacity changes            
*                                         that occurred since the               
*                                         previous regular interval             
*                                         record was written.    @L5A*/         
*      ,3 SMCX_Intv_Capacity_Change_Cnt   FIXED(16) /* Number of                
*                                         processor capacity changes            
*                                         that occurred since the               
*                                         previous (event or non event          
*                                         driven) interval record was           
*                                         written. This field is                
*                                         cleared when an event driven          
*                                         interval record is written.           
*                                         and its value will be > 1             
*                                         when the number of processor          
*                                         capacity changes exceeds the          
*                                         value specified by                    
*                                         MAXEVENTINTRECS        @L5A*/         
*      ,3 SMCX_MAXEVENTINTRECS  FIXED(16) /* value of                           
*                                            MAXEVENTINTRECS     @L5A*/         
*      ,3 SMCXRSV3              CHAR(2) /* reserved for alignment@L5A*/         
*      ,3 SMCX_DPEXITS_Ptr Ptr(31)  /* Pointer to valid IFASMFDP                
*                                      exits                     @04A*/         
*      ,3 SMCX_DLEXITS_Ptr Ptr(31)  /* Pointer to valid IFASMFDL                
*                                      exits                     @04A*/         
*      ,3 SMCX_Tmr_Ecb_Ptr Ptr(31)  /* Pointer to ECB used                      
*                                      for STIMER when ENQ not                  
*                                      available                 @04A*/         
*      ,3 SMCXESWT         CHAR(4)  /* SWT(hhmm)value as entered                
*                                      in SMFPRMxx               @PBA*/         
*      ,3 SMCXMSWT        FIXED(31) /* SWT(hhmm)value in minutes @PBA*/         
*      ,3 SMCXTSWT        FIXED(31) /* SWT(hhmm)value in units of               
*                                      2**20 microseconds   @PBA @PCC*/         
*      ,3 SMCXETWT         CHAR(4)  /* TWT(hhmm)value as entered                
*                                      in SMFPRMxx               @PBA*/         
*      ,3 SMCXMTWT        FIXED(31) /* TWT(hhmm)value in minutes @PBA*/         
*      ,3 SMCXTTWT        FIXED(31) /* TWT(hhmm)value in units of               
*                                      2**20 microseconds   @PBA @PCC*/         
*      ,3 SmcxJcst        Ptr(31)   /* Pointer to SMF Callable                  
*                                      services stub routine                    
*                                      (IFAJCST)                 @05C*/         
*      ,3 SmcxHFTS        Ptr(31)   /* Pointer to HFTS control table            
*                                                                @06A*/         
*      ,3 SMCX_BE_ECB Fixed(32)        /* Set by IFAENFL for                    
*                                      Posting by IFASMF         @07A*/         
*      ,3 SMCX_Saved_CVTLSO CHAR(8) /* Current or previous CVTLSO               
*                                                                @09A*/         
*      ,3 SMCX_CVTLSO_ECB FIXED(31) /* Set by IEEMB842 when a change            
*                                      to CVTLSO is detected.    @09A*/         
*      ,3 SMCX_CrypCtrs_Sum_Area_Ptr PTR(31) /* Address of the system           
*                                      crypto counters work area @0BA*/         
*      ,3 SMCX_ENF86_ECB FIXED(31)  /* Set by IFAENFL for Compliance            
*                                      processing by IFASMF      @0BA*/         
*      ,3 SmcxRsv4       Char(12)   /* Reserved                  @0BC*/         
* %SMCX_END:;                                                 /* @LWA*/         
*      ,3 SMCXEND CHAR(0) BDY(DWORD);  /* End of SMCX mapping    @H1C*/         
*                                                                               
* %IF SYSVERSION = '' %THEN %GOTO SMCX_END1;                  /* @03A*/         
* %IF SYSRULESMOD='PL/S-III ' %THEN %GOTO SMCX_END1;          /* @03A*/         
*   Dcl 1 SMCX_SMF23CPUArray Based(SMCX_SMF23CPUArrayPtr) Bdy(DWord) /*         
*                                     SMF Type 23 Statistics                    
*                                     CPU array section          @03A*/         
*          ,3 SMCX_nextcpu Ptr(31)  /* Address of next cpu array                
*                                     element (0 if last one)    @03A*/         
*          ,3 SMCX_iowiocnt Fixed(32)  /* Number of I/Os                        
*                                     since last SMF Type 23 record             
*                                                                @03A*/         
*          ,3 SMCX_lccatcbc Fixed(32)  /* Number of unlocked TCB                
*                                     dispatches                                
*                                     since last SMF Type 23 record             
*                                                                @03A*/         
*          ,3 SMCX_lccasrbc Fixed(32)  /* Number of SRB dispatches              
*                                     since last SMF Type 23 record             
*                                                                @03A*/         
*      ,3 SMCXEND1 CHAR(0) BDY(DWORD); /* End of SMCX_SMF23CPUArray             
*                                      mapping                   @03A*/         
*  Dcl 1 SMCX_Dump_Exit_Tbl Based Bdy(DWord) /* Mapping for a dump exit         
*                                     table                      @04A*/         
*      ,3 SMCX_DMPETB_Hdr              /* Table header           @04A*/         
*         ,5 SMCX_DMPTBL_ID Char(8)    /* Eye catcher 'SMCXDMPT' @04A*/         
*         ,5 SMCX_DMPTBPL Fixed(31)    /* Length and subpool     @04A*/         
*           ,7 SMCX_DMPTBSP Fixed(8)   /* Subpool of table       @04A*/         
*           ,7 SMCX_DMPTBLN Fixed(24)  /* Length of table        @04A*/         
*         ,5 SMCX_DMP_Entries Fixed(31) /* Number of entries     @04A*/         
*         ,5 SMCX_DMP_Flags Char(4)    /* Flags                  @04A*/         
*           ,7 SMCX_DMP_Updated_Wo_Enq Bit(1) /* This table was updated         
*                                         without serialization on              
*                                         the enqueue            @04A*/         
*      ,3 SMCX_DMPEXTS(*)              /* Exit name array        @04A*/         
*         ,5 SMCX_DMPExit_Flags Char(3) /* Flags for this exit   @04A*/         
*           ,7 SMCX_DMP_Last_Entry Bit(1) /* Last entry flag     @04A*/         
*         ,5 SMCX_DMPUSRN Fixed(8)     /* 1 - USER1                             
*                                         2 - USER2                             
*                                         3 - USER3              @04A*/         
*         ,5 SMCX_DMPNM Char(8)        /* Dump exit name         @04A*/         
*         ;                                                                     
*                                                                               
*/********************************************************************/         
*/*   Processor Capacity Data (PCD) map.                             */         
*/*   - Top of the chain pointed to by SMCX_Curr_PCD_Ptr             */         
*/*   - Always contains at least 2 entries (curr and curr->prior)    */         
*/*   - New instance per change in Processor Capacity. If no changes */         
*/*     in processor capacity occur, the current PCD will equal      */         
*/*     the prior PCD.                                               */         
*/*   - New PCD will go at the top of the stack.                     */         
*/*   - Last PCD will point to zero.                                 */         
*/*   - PCDs (past the first 2) are unchained and freed when the     */         
*/*     SMCX_PCD_Scheduled_SRBs count is zero.                   @P6A*/         
*/********************************************************************/         
*   DCL                                   /*                     @P6C*/         
*     1 SMCX_Proc_Capacity_Data  BASED    /* Processor Capacity Data            
*                                            from WLM fields, as                
*                                            indicated           @L5A*/         
*      ,3 SMCX_PCD_Eye_Catcher  CHAR(4)   /* 'PCD '              @L5A*/         
*      ,3 SMCX_PCD_Prior        PTR(31)   /* PCD that was built                 
*                                            prior to this PCD   @L5A*/         
*      ,3 SMCX_PCD_Change_Time  BIT(64)   /*                                    
*                                     RMCTZ_Capacity_Change_Time                
*                                     (STCK format)              @P6C*/         
*      ,3 SMCX_PCD_RQSVSUS      FIXED(31) /* RQSVSUS             @L5A*/         
*      ,3 SMCX_PCD_RCTPCPUA_actual  FIXED(31) /* RCTPCPUA_actual @L5A*/         
*      ,3 SMCX_PCD_RCTPCPUA_Nominal FIXED(31) /* RCTPCPUA_nominal@L5A*/         
*      ,3 SMCX_PCD_RCTPCPUA_Scaling FIXED(31) /*                                
*                                      RCTPCPUA_scaling_factor   @L5A*/         
*      ,3 SMCX_PCD_Capacity_Adj_Ind  FIXED(8)  /*                               
*                        RMCTZ_Capacity_Adjustment_Indication    @L5A*/         
*      ,3 SMCX_PCD_Capacity_Chg_Rsn  FIXED(8)  /*                               
*                                 RMCTZ_Capacity_Change_Reason   @L5A*/         
*      ,3 SMCX_PCD_Intv_Change_Cnt FIXED(16) /* COpied from                     
*                                SMCX_Intv_Capacity_Change_Cnt   @L5A*/         
*      ,3 SMCX_PCD_Scheduled_SRBs FIXED(31) /* The number of SRBs               
*                                           currently scheduled to              
*                                           run that point to this              
*                                           PCD. This count is                  
*                                           decremented at the end of           
*                                           each SRB routine. When the          
*                                           count is zero, the PCD is           
*                                           eligible to be freed.@L5A*/         
*      ,3 SMCX_PCD_Flags          BIT(8)  /*                     @L5A*/         
*         ,5 SMCX_PCD_RQSVSuS_Err BIT(1)  /* Error retrieving                   
*                                            RQSVSuS             @L5A*/         
*         ,5 SMCX_PCD_Err         BIT(1)  /* Error retrieving                   
*                                            the rest of the capacity           
*                                            group data          @L5A*/         
*         ,5 SMCX_PCD_Event_Intv  BIT(1)  /* Set to on when the                 
*                                            current STQE is for an             
*                                            event driven interval              
*                                                                @L5A*/         
*      ,3 SMCXRSV2             CHAR(3) /* Reserved for alignment @PAC*/         
*      ,3 SMCX_PCD_RMCTADJN_Nominal FIXED(31)  /* Nominal CPU rate              
*                                                 adjustment     @PAA*/         
*      ,3 SMCXEND2 CHAR(0) BDY(DWORD); /* End of SMCX_Processor_                
*                                         Capacity_Data mapping  @L5A*/         
*/********************************************************************/         
*/*                 The CrypCtrs sum area                            */         
*/* This area is used to hold system wide aggregated crypto          */         
*/* instruction counts to be reported in the SMF type 1154 subtype   */         
*/* 128 ('80'x) record. IEFTB728 calculates delta entry ID count     */         
*/* values on each global interval per address space. At that time   */         
*/* the delta is added to the corresponding entry in this table. An  */         
*/* entry ID is equivalent to each entry's index value. The values   */         
*/* in this table are cleared at the time when the SMF 1154 record   */         
*/* is written which occurs in response to an ENF 86 signal.         */         
*/*                                                                  */         
*/* Subpool: 245 SQA/ESQA fixed                                      */         
*/*                                                                  */         
*/* Size:  LENGTH(SMCX_CrypCtrs_Sum_Area_Hdr) +                      */         
*/*       (LENGTH(SMCX_CrypCtr_Sum_Value) * GSDA_Num_CrypCtrs)       */         
*/*                                                                  */         
*/* Created by: IFASTART                                             */         
*/*                                                                  */         
*/* Deleted by: This area is never deleted                           */         
*/*                                                                  */         
*/* Pointed to by: SMCX_CrypCtrs_Sum_Area_Ptr                        */         
*/*                                                                  */         
*/* Frequency:  One per system                                       */         
*/*                                                              @0BA*/         
*/********************************************************************/         
*  DCL 1 SMCX_CrypCtrs_Sum_Area BASED(SMCX_crypCtrs_Sum_Area_Ptr) /*            
*                                                                @0BA*/         
*       ,3 SMCX_CrypCtrs_Sum_Area_Hdr BDY(DWORD)              /* @0BA*/         
*         ,5 SMCX_CrypCtrs_Sum_EyeC CHAR(8)   /* 'SMCXCRYP'      @0BA*/         
*         ,5 SMCX_CrypCtrs_Sum_SP   FIXED(8)  /* SP=245          @0BA*/         
*         ,5 SMCX_CrypCtrs_Sum_Len  FIXED(24) /* See size above  @0BA*/         
*         ,5 SMCX_ENF86_Request_ID CHAR(16) /* Request ID passed                
*                                       by the ENF 86 signaler   @0BA*/         
*         ,5 * CHAR(4)               /* Reserved for alignment   @0BA*/         
*       ,3 SMCX_CrypCtrs_Body        /* CrypCtrs work area       @0BA*/         
*         ,5 SMCX_Crypctr_Sum_Table  /* This table contains the number          
*                                       of entries as defined in                
*                                       GSDA_Num_CrypCtrs.       @0BA*/         
*           ,7 SMCX_CrypCtr_Sum_Value(*) BIT(64)     /*          @0BA*/         
*      ;                             /*                          @0BA*/         
*  DCL kSMCX_CrypCtrs_SUM_Area_EyeC CHAR(8)                                     
*                                   CONSTANT('SMCXCRYP') /*      @0BA*/         
*     ,kSMCX_CrypCtrs_SUM_Area_SP FIXED(8) CONSTANT(245)   /*    @0BA*/         
*    ;                                /*                         @0BA*/         
* %SMCX_END1:;                                                /* @03A*/         
*   DECLARE                        /* CONSTANT SECTION               */         
*     SMCXSMCX CHAR(4)   CONSTANT('SMCX'), /* "SMCX" EBCDIC NAME     */         
*     SMCXLVL1 FIXED(15) CONSTANT(1);      /* LEVEL 1 INDICATOR      */         
*                                                                               
