*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMTAFF                               -00/06/15-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Temporal Affinity Service                 * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1999, 1999                     * 00001200
*                                                                     * 00001300
* STATUS= HBB6608                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMTAFF service should be used to inform WLM when a        * 00002100
*      temporal affinity for a specific server region starts and when * 00002200
*      it ends. WLM will ensure that server regions will not be       * 00002300
*      terminated as long as temporal affinities exist.               * 00002400
*                                                                     * 00002500
*      The caller must have previously connected to WLM using the     * 00002600
*      IWMCONN as server or as queue manager.                         * 00002700
*                                                                     * 00002800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002900
*                                                                     * 00003000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003100
*                                                                     * 00003200
*01* ENVIRONMENT:                                                     * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00003600
*                        key.                                         * 00003700
*                                                                     * 00003800
*      Dispatchable unit mode: Task mode.                             * 00003900
*                                                                     * 00004000
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00004100
*                                                                     * 00004200
*      AMODE:            31-bit.                                      * 00004300
*                                                                     * 00004400
*      ASC mode:         Primary.                                     * 00004500
*                                                                     * 00004600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004700
*                                                                     * 00004800
*      Locks:            No locks held.                               * 00004900
*                                                                     * 00005000
*      Control parameters: Control parameters must be in the primary  * 00005100
*                        address space.                               * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*01* PROGRAMMING REQUIREMENTS:                                        * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*    1.  Make sure no EUT FRRs are established.                       * 00005900
*                                                                     * 00006000
*    2.  The macro CVT must be included to use this macro.            * 00006100
*                                                                     * 00006200
*    3.  The macro IWMYCON must be included to use this macro.        * 00006300
*                                                                     * 00006400
*    4.  The macro IWMPB must be in the library concatenation, since  * 00006500
*        it is included by IWMYCON.                                   * 00006600
*                                                                     * 00006700
*    5.  Note that the high order halfword of register 0, and the     * 00006800
*        reason code variable when specified, may be non-zero and     * 00006900
*        represents diagnostic data which is NOT part of the external * 00007000
*        interface.  The high order halfword should thus be excluded  * 00007100
*        from comparison with the reason code values described above. * 00007200
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007300
*        be used for this purpose.                                    * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*01* RESTRICTIONS:                                                    * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*    1.  The PL/X  version of the macro needs the EPILOG macro to be  * 00008100
*        included.                                                    * 00008200
*                                                                     * 00008300
*    2.  This macro may not be used during task/address space         * 00008400
*        termination.                                                 * 00008500
*                                                                     * 00008600
*    3.  Before using this macro the caller must connect to WLM via   * 00008700
*        IWMCONN Server_Manager=YES, Server_Type=Queue or IWMCONN     * 00008800
*        Queue_Manager=YES.                                           * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*01* INPUT REGISTER INFORMATION:                                      * 00009300
*                                                                     * 00009400
*    Before issuing the IWMTAFF macro, the caller does not have to    * 00009500
*    place any information into any register unless using it in       * 00009600
*    register notation for a particular parameter, or using it as a   * 00009700
*    base register.                                                   * 00009800
*                                                                     * 00009900
*01* OUTPUT REGISTER INFORMATION:                                     * 00010000
*                                                                     * 00010100
*    When control returns to the caller, the GPRs contain:            * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*    REGISTER  CONTENTS                                               * 00010500
*                                                                     * 00010600
*    0         Reason code if GR15 return code is non-zero            * 00010700
*                                                                     * 00010800
*    1         Used as work registers by the system                   * 00010900
*                                                                     * 00011000
*    2-13      Unchanged                                              * 00011100
*                                                                     * 00011200
*    14        Used as work registers by the system                   * 00011300
*                                                                     * 00011400
*    15        Return code                                            * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*    When control returns to the caller, the ARs contain:             * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*    REGISTER  CONTENTS                                               * 00012200
*                                                                     * 00012300
*    0-1       Used as work registers by the system                   * 00012400
*                                                                     * 00012500
*    2-13      Unchanged                                              * 00012600
*                                                                     * 00012700
*    14-15     Used as work registers by the system                   * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*    Some callers depend on register contents remaining the same      * 00013200
*    before and after issuing a service.  If the system changes the   * 00013300
*    contents of registers on which the caller depends, the caller    * 00013400
*    must save them before issuing the service, and restore them      * 00013500
*    after the system returns control.                                * 00013600
*                                                                     * 00013700
*01* PERFORMANCE IMPLICATIONS:                                        * 00013800
*                                                                     * 00013900
*    None                                                             * 00014000
*                                                                     * 00014100
*01* SYNTAX:                                                          * 00014200
*                                                                     * 00014300
*Ýxlabel¨  IWMTAFF  Ð  AFFINITY=YES                                   * 00014400
*                   ¿ ,AFFINITY=NO                                    * 00014500
*                    Ý,REGION_TOKEN=»xregion_token!0º¨                * 00014600
*                    Ý,RETCODE=xretcode¨                              * 00014700
*                    Ý,RSNCODE=xrsncode¨                              * 00014800
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00014900
*                   ÐÝ,MF=S¨                                          * 00015000
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00015100
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*      Where:                                                         * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*      Ýxlabel¨                                                       * 00015800
*          is an optional symbol, starting in column 1, that is the   * 00015900
*          name on the IWMTAFF macro invocation.  The name must       * 00016000
*          conform to the rules for an ordinary assembler language    * 00016100
*          symbol.                                                    * 00016200
*          DEFAULT: No name.                                          * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*      AFFINITY=»YES!NOº                                              * 00016800
*          is a required keyword input indicating whether a temporal  * 00016900
*          affinity begins or ends                                    * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*          AFFINITY=YES                                               * 00017300
*              A new temporal affinity for the server region begins.  * 00017400
*              WLM will ensure that the server regions is not         * 00017500
*              terminated before all temporal affinity have ended.    * 00017600
*                                                                     * 00017700
*          AFFINITY=NO                                                * 00017800
*              A temporal affinity for the server region has ended.   * 00017900
*              WLM will start to terminate server regions if all      * 00018000
*              temporal affinities have ended.                        * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*      ÝREGION_TOKEN=»xregion_token!0º¨                               * 00018800
*          is the name (RS-type), or address in register (2)-(12), of * 00018900
*          an optional 16 character input which contains the region   * 00019000
*          token.  The region token is not required if the macro is   * 00019100
*          invoked from the server region for which the temporal      * 00019200
*          affinity should be started or stopped. The region token    * 00019300
*          must be used if the services is used from the queueing     * 00019400
*          manager.  The region token is returned by the IWMSSEL      * 00019500
*          macro.                                                     * 00019600
*                                                                     * 00019700
*          The caller must be supervisor state or have PSW key mask   * 00019800
*          0-7 authority to use this service with the REGION_TOKEN    * 00019900
*          parameter.                                                 * 00020000
*                                                                     * 00020100
*          Coding REGION_TOKEN=0 is equivalent to omitting the        * 00020200
*          REGION_TOKEN keyword.                                      * 00020300
*          DEFAULT: 0                                                 * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*      ÝRETCODE=xretcode¨                                             * 00020900
*          is the name (RS-type) of an optional fullword output       * 00021000
*          variable, or register (2)-(12), into which the return code * 00021100
*          is to be copied from GPR 15.                               * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*      ÝRSNCODE=xrsncode¨                                             * 00021700
*          is the name (RS-type) of an optional fullword output       * 00021800
*          variable, or register (2)-(12), into which the reason code * 00021900
*          is to be copied from GPR 0.                                * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00022500
*          is an optional byte input decimal value in the "0-0" range * 00022600
*          that specifies the macro version.  PLISTVER is the only    * 00022700
*          key allowed on the list form of MF and determines which    * 00022800
*          parameter list is generated.  Note that MAX may be         * 00022900
*          specified instead of a number, and the parameter list will * 00023000
*          be of the largest size currently supported. This size may  * 00023100
*          grow from release to release (thus possibly affecting the  * 00023200
*          amount of storage needed by your program).  If your        * 00023300
*          program can tolerate this, IBM recommends that you always  * 00023400
*          specify MAX when creating the list form parameter list as  * 00023500
*          that will ensure that the list form parameter list is      * 00023600
*          always long enough to hold whatever parameters might be    * 00023700
*          specified on the execute form.                             * 00023800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00023900
*          default is the lowest version which allows all of the      * 00024000
*          parameters specified on the invocation to be processed.    * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*      ÝMF=»S!L!Eº¨                                                   * 00024600
*          is an optional keyword input which specifies the macro     * 00024700
*          form.                                                      * 00024800
*          DEFAULT: S                                                 * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*          ÝMF=S¨                                                     * 00025200
*              specifies the standard form of the macro.  The "S"     * 00025300
*              form generates code to put the parameters into an      * 00025400
*              in-line parameter list and invoke the desired service. * 00025500
*              Full checking for required macro keys is done along    * 00025600
*              with supplying defaults for omitted optional           * 00025700
*              parameters.                                            * 00025800
*                                                                     * 00025900
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00026000
*              specifies the list form of the macro.  The "L" form    * 00026100
*              defines an area to be used for the parameter list.     * 00026200
*              Only the PLISTVER key may be specified on the          * 00026300
*              invocation.  All other macro parameters are flagged as * 00026400
*              errors.  If PLISTVER is not specified, the original    * 00026500
*              parameter list definition is used.                     * 00026600
*                                                                     * 00026700
*            ,xmfctrl                                                 * 00026800
*              is a required input.  It is the name of a storage area * 00026900
*              for the parameter list.                                * 00027000
*                                                                     * 00027100
*            »,xmfattr!0Dº                                            * 00027200
*              is an optional 60 character input string that varies   * 00027300
*              from 1 to 60 characters. Use it to force boundary      * 00027400
*              alignment of the parameter list. Use only 0F or 0D.    * 00027500
*              DEFAULT: 0D which forces the parameter list to a       * 00027600
*              doubleword boundary.                                   * 00027700
*                                                                     * 00027800
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00027900
*              specifies the execute form of the macro.  The "E" form * 00028000
*              generates code to put the parameters into the          * 00028100
*              parameter list specified by xmfctrl and provides full  * 00028200
*              syntax checking with default setting.                  * 00028300
*                                                                     * 00028400
*            ,xmfctrl                                                 * 00028500
*              is a required input.  It is the name (RS-type), or     * 00028600
*              address in register (1)-(12), of a storage area for    * 00028700
*              the parameter list.                                    * 00028800
*                                                                     * 00028900
*            »,COMPLETEº                                              * 00029000
*              is an optional keyword input which specifies the       * 00029100
*              degree of macro parameter syntax checking.             * 00029200
*              DEFAULT: COMPLETE                                      * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*              COMPLETE                                               * 00029600
*                  Checking for required macro keys is done and       * 00029700
*                  defaults are supplied for omitted optional         * 00029800
*                  parameters.                                        * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*01* ABEND CODES:  None.                                              * 00030700
*                                                                     * 00030800
*01* RETURN CODES:                                                    * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*            0    Name: IwmRetCodeOk                                  * 00031200
*                                                                     * 00031300
*                 Meaning: Successful completion.                     * 00031400
*                                                                     * 00031500
*                 Action: None required.                              * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*            4    Name: IwmRetCodeWarning                             * 00031900
*                                                                     * 00032000
*                 Meaning: Successful completion, unusual conditions  * 00032100
*                 noted.                                              * 00032200
*                                                                     * 00032300
*                 Action: None required.                              * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                 HEX REASON  MEANING/ACTION                          * 00032800
*                 CODE                                                * 00032900
*                                                                     * 00033000
*                 xxxx0439    Name: IwmRsnCodeNoAffinityFound         * 00033100
*                                                                     * 00033200
*                             Meaning: The service has been invoked   * 00033300
*                             to tell WLM that an existing server     * 00033400
*                             region affinity has been terminated but * 00033500
*                             WLM has no affinity defined for this    * 00033600
*                             server region.                          * 00033700
*                                                                     * 00033800
*                             Action: If region token was not         * 00033900
*                             specified make sure to use the service  * 00034000
*                             properly at the beginning and end of    * 00034100
*                             each affinity.  If the region token has * 00034200
*                             been defined make sure that it is used  * 00034300
*                             for the correct server region.          * 00034400
*                                                                     * 00034500
*                 xxxx043A    Name: IwmRsnCodeRegionNotFound          * 00034600
*                                                                     * 00034700
*                             Meaning: The region token does not      * 00034800
*                             identify a valid server region.         * 00034900
*                                                                     * 00035000
*                             Action: Please specify the correct      * 00035100
*                             region token.                           * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*            8    Name: IwmRetCodeInvocError                          * 00035700
*                                                                     * 00035800
*                 Meaning: Invalid invocation environment or          * 00035900
*                 parameters.                                         * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                 HEX REASON  MEANING/ACTION                          * 00036400
*                 CODE                                                * 00036500
*                                                                     * 00036600
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00036700
*                                                                     * 00036800
*                             Meaning: Caller is in SRB mode.         * 00036900
*                                                                     * 00037000
*                             Action: Avoid requesting this function  * 00037100
*                             while in SRB mode.                      * 00037200
*                                                                     * 00037300
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00037400
*                                                                     * 00037500
*                             Meaning: Caller is disabled.            * 00037600
*                                                                     * 00037700
*                             Action: Avoid requesting this function  * 00037800
*                             while disabled.                         * 00037900
*                                                                     * 00038000
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00038100
*                                                                     * 00038200
*                             Meaning: Caller is locked.              * 00038300
*                                                                     * 00038400
*                             Action: Avoid requesting this function  * 00038500
*                             while locked.                           * 00038600
*                                                                     * 00038700
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00038800
*                                                                     * 00038900
*                             Meaning: Error accessing parameter      * 00039000
*                             list.                                   * 00039100
*                                                                     * 00039200
*                             Action: Check for possible storage      * 00039300
*                             overlay.  Also check if you call this   * 00039400
*                             macro in 64 bit adressing mode (see     * 00039500
*                             explanations for xxxx089E).             * 00039600
*                                                                     * 00039700
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00039800
*                                                                     * 00039900
*                             Meaning: Caller invoked service but was * 00040000
*                             in 24 bit addressing mode.              * 00040100
*                                                                     * 00040200
*                             Action: Request this function only when * 00040300
*                             you are in 31 bit addressing mode.      * 00040400
*                                                                     * 00040500
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00040600
*                                                                     * 00040700
*                             Meaning: Caller invoked service but was * 00040800
*                             not in primary ASC mode.                * 00040900
*                                                                     * 00041000
*                             Action: Avoid requesting this function  * 00041100
*                             in this environment.                    * 00041200
*                                                                     * 00041300
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00041400
*                                                                     * 00041500
*                             Meaning: Version number in parameter    * 00041600
*                             list is not valid.                      * 00041700
*                                                                     * 00041800
*                             Action: Check for possible storage      * 00041900
*                             overlay of the parameter list.          * 00042000
*                                                                     * 00042100
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00042200
*                                                                     * 00042300
*                             Meaning: Caller's space connection is   * 00042400
*                             not enabled for this service.           * 00042500
*                                                                     * 00042600
*                             Action: Make sure that                  * 00042700
*                             SERVER_MANAGER=YES and                  * 00042800
*                             SERVER_TYPE=QUEUE is specified on the   * 00042900
*                             IWMCONN request to enable this service. * 00043000
*                                                                     * 00043100
*                 xxxx0841    Name: IwmRsnCodeXmemMode                * 00043200
*                                                                     * 00043300
*                             Meaning: Caller is in cross-memory      * 00043400
*                             mode.                                   * 00043500
*                                                                     * 00043600
*                             Action: Request this function only when * 00043700
*                             you are not in cross-memory mode.       * 00043800
*                                                                     * 00043900
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00044000
*                                                                     * 00044100
*                             Meaning: Caller's space is not          * 00044200
*                             connected to WLM.                       * 00044300
*                                                                     * 00044400
*                             Action:  Invoke the IWMCONN macro       * 00044500
*                             before invoking this macro.             * 00044600
*                                                                     * 00044700
*                 xxxx084D    Name: IwmRsnCodeNotAuthConnect          * 00044800
*                                                                     * 00044900
*                             Meaning:  The caller must be supervisor * 00045000
*                             state or have PSW key mask 0-7          * 00045100
*                             authority to use the requested WLM      * 00045200
*                             service. This applies only if the       * 00045300
*                             caller provides a region token for a    * 00045400
*                             server address space for which it wants * 00045500
*                             to set the affinity.                    * 00045600
*                                                                     * 00045700
*                             Action: Avoid requesting this function  * 00045800
*                             in this environment.                    * 00045900
*                                                                     * 00046000
*                 xxxx089E    Name: IwmRsnCodeServiceAModeMismatch    * 00046100
*                                                                     * 00046200
*                             Meaning:  The caller works in 64-bit    * 00046300
*                             address mode and tried to invoke a      * 00046400
*                             service macro that is only enabled for  * 00046500
*                             a 31-bit address environment.           * 00046600
*                                                                     * 00046700
*                             Action:  Use the 64-bit enabled service * 00046800
*                             macro (IWM4TAF ) or change the          * 00046900
*                             addressing mode of the caller to        * 00047000
*                             31-bit.                                 * 00047100
*                                                                     * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*            10   Name: IwmRetCodeCompError                           * 00047700
*                                                                     * 00047800
*                 Meaning: Component error.                           * 00047900
*                                                                     * 00048000
*                 Action: Contact your system programmer.             * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*01* REASON CODES:                                                    * 00048600
*                                                                     * 00048700
*       A unique reason code will be returned whenever the return     * 00048800
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00048900
*       under their corresponding return code.  Reason code and       * 00049000
*       return code constants are defined within IWMYCON.  Note that  * 00049100
*       the high order halfword of register 0, and the reason code    * 00049200
*       variable when specified, may be non-zero and represents       * 00049300
*       diagnostic data which is NOT part of the external interface.  * 00049400
*       The high order halfword should thus be excluded from          * 00049500
*       comparison with the reason code values described above.  The  * 00049600
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00049700
*       used for this purpose.                                        * 00049800
*                                                                     * 00049900
*01* MODULE TYPE:  ASSEM MACRO                                        * 00050000
*                                                                     * 00050100
*02*   PROCESSOR:  ASSEM                                              * 00050200
*                                                                     * 00050300
*01* COMPONENT:  SCWLM                                                * 00050400
*                                                                     * 00050500
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00050600
*                                                                     * 00050700
*01* EXAMPLES:                                                        * 00050800
*                                                                     * 00050900
*    To start a temporal affinity from the server region              * 00051000
*                                                                     * 00051100
*        IWMTAFF AFFINITY=YES                                         * 00051200
*                RETCODE=RC,                                          * 00051300
*                RSNCODE=RSN                                          * 00051400
*      *                                                              * 00051500
*      * Storage areas                                                * 00051600
*      *                                                              * 00051700
*      RC       DS    F               Return code                     * 00051800
*      RSN      DS    F               Reason code                     * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*01* MACRO USAGE NOTES:                                               * 00052200
*                                                                     * 00052300
*                                                                     * 00052400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00052500
*        global macro variable.  Any value other than 'NO' will       * 00052600
*        result in the macro expansion being printed.  The default is * 00052700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00052800
*        variable should be set.                                      * 00052900
*                                                                     * 00053000
*                    GBLC &ZPRINT                                     * 00053100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*    2.  All keys currently contained in the IWMTAFF macro correspond * 00053500
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00053600
*        MAX.                                                         * 00053700
*                                                                     * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*01* CHANGE ACTIVITY:                                                 * 00054200
*                                                                     * 00054300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00054400
*                                                                     * 00054500
*    $L0=OW45238  HBB6608 000615 B9HARV:  Temporal Affinity Support   * 00054600
*    $L1=WLMP64W  HBB7709 030315 3241NN:  IWM4TAF  created. Please do * 00054700
*                                         not change this macro any   * 00054800
*                                         longer.                     * 00054900
*    $P1=ME02076  HBB7720 041015 3241NN:  Added reason code for       * 00055000
*                                         callers in AMODE 64.        * 00055100
*                                         Specific to 31-bit version. * 00055200
****** END OF SPECIFICATIONS *****************************************/ 00055300
*/********************************************************************* 00055400
         MACRO                                                          00055500
&XLABEL  IWMTAFF &AFFINITY=,&REGION_TOKEN=,&RETCODE=,&RSNCODE=,        *00055600
               &PLISTVER=,&MF=                                          00055700
.*                                                                      00055800
*                  MACDATE -00/06/15-<0>                                00055900
.*                                                                      00056000
.*******************************************************************    00056100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00056200
.*******************************************************************    00056300
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00056400
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00056500
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00056600
.*                                                                      00056700
                  GBLC  &ZIWMTAFF   YES=MACRO USED AT LEAST ONCE        00056800
.*******************************************************************    00056900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00057000
.*******************************************************************    00057100
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00057200
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00057300
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00057400
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00057500
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00057600
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00057700
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00057800
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00057900
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00058000
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00058100
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00058200
                  LCLC  &ZMAC_G     "G" or null                         00058300
&ZMAC_G           SETC  ''                                              00058400
                  LCLC  &ZMAC_LR                                        00058500
&ZMAC_LR          SETC  'LR'                                            00058600
                  LCLC  &ZMAC_L                                         00058700
&ZMAC_L           SETC  'L'                                             00058800
                  LCLC  &ZMAC_ST                                        00058900
&ZMAC_ST          SETC  'ST'                                            00059000
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00059100
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00059200
.*                                                                      00059300
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00059400
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00059500
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00059600
                  LCLC  &ZENDBASEPL             End of base PL          00059700
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00059800
.*******************************************************************    00059900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00060000
.*******************************************************************    00060100
                  LCLA  &ZI         INDEX FOR ARRAY                     00060200
                  LCLA  &ZJ         INDEX FOR PARMS                     00060300
                  LCLA  &ZK         INDEX FOR PARSE                     00060400
                  LCLA  &ZLO        LOW RANGE VALUE                     00060500
                  LCLA  &ZHI        HIGH RANGE VALUE                    00060600
                  LCLC  &ZW         WORK AREA FOR PARM                  00060700
.********************************************************************   00060800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00060900
.********************************************************************   00061000
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00061100
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00061200
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00061300
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00061400
.*                                                                      00061500
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00061600
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00061700
                  SPLEVEL  TEST                                         00061800
.ZSYS2            ANOP  ,                                               00061900
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00062000
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00062100
                  SYSSTATE TEST                                         00062200
                  AGO   .ZSYS4                                          00062300
.ZSYS3            ANOP  ,                                               00062400
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00062500
.ZSYS4            ANOP  ,                                               00062600
.*******************************************************************    00062700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00062800
.*******************************************************************    00062900
                  LCLC  &XAFFINITY  ++ VALUE                            00063000
                  LCLC  &XREGION_TOKEN          ++ NAME                 00063100
                  LCLC  &XRETCODE   ++ NAME                             00063200
                  LCLC  &XRSNCODE   ++ NAME                             00063300
                  LCLA  &XPLISTVER  ++ VALUE                            00063400
                  LCLC  &XMF        ++ VALUE                            00063500
                  LCLC  &XMFCTRL    ++ NAME                             00063600
                  LCLC  &XMFATTR    ++ VALUE                            00063700
                  LCLC  &XMFSCK     ++ VALUE                            00063800
.*******************************************************************    00063900
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00064000
.*******************************************************************    00064100
                  LCLC  &ZXAFFINITY             ++ INPUT VALUE          00064200
                  LCLC  &ZXREGION_TOKEN         ++ INPUT NAME           00064300
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00064400
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00064500
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00064600
                  LCLC  &ZXMF       ++ INPUT VALUE                      00064700
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00064800
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00064900
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00065000
.********************************************************************   00065100
.***AC.PLV01  PROCESS PLISTVER                                      *   00065200
.********************************************************************   00065300
&XPLISTVER      SETA  0                                                 00065400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00065500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00065600
&XPLISTVER      SETA  0                                                 00065700
.ZPLV0          ANOP  ,                                                 00065800
.*                                                                      00065900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00066000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00066100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00066200
.*-------------------------------------------------------------------   00066300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00066400
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00066500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00066600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00066700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00066800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00066900
                AGO   .ZPVCK2                                           00067000
.ZPVCK3         ANOP  ,                                                 00067100
.*-------------------------------------------------------------------   00067200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00067300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00067400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00067500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00067600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00067700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00067800
                AGO   .ZPVCKE                                           00067900
.ZPVCK2         ANOP  ,                                                 00068000
.*-------------------------------------------------------------------   00068100
&ZCVAL          SETC  '&PLISTVER(1)'                                    00068200
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00068300
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00068400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00068500
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00068600
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00068700
.ZPVCK6         ANOP  ,                                                 00068800
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00068900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00069000
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00069100
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00069200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00069300
&XPLISTVER      SETA  0                                                 00069400
                AGO   .ZPVCKE                                           00069500
.*-------------------------------------------------------------------   00069600
.ZPVCK4A        ANOP  ,                                                 00069700
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00069800
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00069900
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00070000
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00070100
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00070200
                MNOTE 8,' &ZMS IS REQUIRED.'                            00070300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00070400
                AGO   .ZPVCK5                                           00070500
.ZPVCK4         ANOP  ,                                                 00070600
&XPLISTVER      SETA  &PLISTVER(1)                                      00070700
.ZPVCK5         ANOP  ,                                                 00070800
.ZPVCKE         ANOP  ,                                                 00070900
.********************************************************************   00071000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00071100
.********************************************************************   00071200
                  ACTR  10000                                           00071300
.*------------------------------------------------------------------    00071400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071500
&XMF              SETC  ''          INITIALIZE XVARIABLE                00071600
.*-------------------------------------------------------------------   00071700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071800
.ZG20             ANOP  ,                                               00071900
&ZTLC             SETC 'S'                                              00072000
                  AIF   ('&MF(1)' NE '&ZTLC').ZG21                      00072100
&XMF              SETC  'S'         SET KEYWORD                         00072200
                  AIF   (N'&MF LE 1).ZG20A      CK NUM                  00072300
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00072400
&ZMS              SETC  '&ZMS.&MF"'                                     00072500
&ZMS              SETC  '&ZMS "MF"'                                     00072600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00072700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00072800
.ZG20A            ANOP  ,                                               00072900
.*-------------------------------------------------------------------   00073000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073100
.ZG21             ANOP  ,                                               00073200
&ZTLC             SETC 'L'                                              00073300
                  AIF   ('&MF(1)' NE '&ZTLC').ZG28                      00073400
&XMF              SETC  'L'         SET KEYWORD                         00073500
                  AIF   (N'&MF LE 3).ZG21A      CK NUM                  00073600
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00073700
&ZMS              SETC  '&ZMS.&MF"'                                     00073800
&ZMS              SETC  '&ZMS "MF"'                                     00073900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00074000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00074100
.ZG21A            ANOP  ,                                               00074200
.*-------------------------------------------------------------------   00074300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00074400
                  AIF   (N'&SYSLIST NE 0).ZG21B  POSITIONALS?           00074500
                  AIF   ('&AFFINITY' NE '').ZG21B  KEYS?                00074600
                  AIF   ('&REGION_TOKEN' NE '').ZG21B  KEYS?            00074700
                  AIF   ('&RETCODE' NE '').ZG21B  KEYS?                 00074800
                  AIF   ('&RSNCODE' NE '').ZG21B  KEYS?                 00074900
                  AGO    .ZG21C     INVOCATION OKAY                     00075000
.ZG21B            ANOP  ,                                               00075100
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00075200
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00075300
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00075400
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00075500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00075600
.ZG21C            ANOP  ,                                               00075700
.*-------------------------------------------------------------------   00075800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00075900
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00076000
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00076100
                  AIF   (N'&MF(2) GT 1).ZG23B   MULTI PARMS             00076200
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00076300
.ZG23B            AIF   (K'&MF(2) GT 0).ZG23C                           00076400
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00076500
&ZMS              SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                00076600
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00076700
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00076800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00076900
.ZG23C            ANOP  ,                                               00077000
.*-------------------------------------------------------------------   00077100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00077200
                  AIF   (K'&ZXMFCTRL LE 0).ZG23P  NOT I/O               00077300
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG23P                  00077400
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00077500
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00077600
&ZMS              SETC  '&ZMS.&MF"'                                     00077700
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00077800
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00077900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00078000
.ZG23P            ANOP  ,                                               00078100
.*-------------------------------------------------------------------   00078200
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00078300
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00078400
&XMFATTR          SETC  '0D'                                            00078500
                  AIF   (K'&MF(3) LE 0).ZG26B   PARM                    00078600
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00078700
                  AIF   (N'&MF(3) GT 1).ZG26B   MULTI PARMS             00078800
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00078900
.ZG26B            ANOP  ,                                               00079000
.*-------------------------------------------------------------------   00079100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00079200
                  AIF   (K'&ZXMFATTR LE 0).ZG26P  NOT I/O               00079300
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG26P                  00079400
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00079500
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00079600
&ZMS              SETC  '&ZMS.&MF"'                                     00079700
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00079800
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00079900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00080000
.ZG26P            ANOP  ,                                               00080100
.*-------------------------------------------------------------------   00080200
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00080300
                  AIF   (K'&ZXMFATTR LE 0).ZG26S  NOT I/O               00080400
                  AIF   (K'&XMFATTR LE 60).ZG26S  LNG OK                00080500
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00080600
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00080700
&ZMS              SETC  '&ZMS.&MF"'                                     00080800
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00080900
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00081000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00081100
.ZG26S            ANOP  ,                                               00081200
.*-------------------------------------------------------------------   00081300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00081400
.ZG28             ANOP  ,                                               00081500
&ZTLC             SETC 'E'                                              00081600
                  AIF   ('&MF(1)' NE '&ZTLC').ZG36                      00081700
&XMF              SETC  'E'         SET KEYWORD                         00081800
                  AIF   (N'&MF LE 3).ZG28A      CK NUM                  00081900
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00082000
&ZMS              SETC  '&ZMS.&MF"'                                     00082100
&ZMS              SETC  '&ZMS "MF"'                                     00082200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00082300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00082400
.ZG28A            ANOP  ,                                               00082500
.*-------------------------------------------------------------------   00082600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00082700
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00082800
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00082900
                  AIF   (N'&MF(2) GT 1).ZG30B   MULTI PARMS             00083000
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00083100
.ZG30B            AIF   (K'&MF(2) GT 0).ZG30C                           00083200
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00083300
&ZMS              SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                00083400
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00083500
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00083600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00083700
.ZG30C            ANOP  ,                                               00083800
.*-------------------------------------------------------------------   00083900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00084000
                  AIF   (K'&ZXMFCTRL LE 0).ZG30R  NOT I/O               00084100
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG30R                  00084200
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00084300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                    00084400
                  AIF   (K'&ZCGPR GT 2).ZG30Q                           00084500
                  AIF   ('&ZCGPR' EQ '0').ZG30Q                         00084600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00084700
                  AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME       00084800
.ZG30P            ANOP  ,                                               00084900
                  AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC            00085000
                  AIF   ('&ZCGPR' LT '1').ZG30Q                         00085100
                  AIF   ('&ZCGPR' LE '12').ZG30R                        00085200
.ZG30Q            ANOP  ,                                               00085300
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00085400
&ZMS              SETC  '&ZMS.&MF"'                                     00085500
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00085600
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00085700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00085800
.ZG30R            ANOP  ,                                               00085900
.*-------------------------------------------------------------------   00086000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00086100
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00086200
.ZG34A   AIF   ('&MF(3)' NE 'COMPLETE').ZG35A                           00086300
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00086400
.*-------------------------------------------------------------------   00086500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00086600
.ZG35A            AIF   (K'&XMFSCK GT 0).ZG35C  KEYWORD                 00086700
                  AIF   (K'&MF(3) LE 0).ZG35B                           00086800
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00086900
&ZMS              SETC  '&ZMS.&MF"'                                     00087000
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00087100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00087200
&ZMS              SETC  '&ZMS "COMPLETE".'                              00087300
                  MNOTE 8,' &ZMS '                                      00087400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00087500
.ZG35B            ANOP  ,                                               00087600
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00087700
.ZG35C            ANOP  ,                                               00087800
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00087900
.*------------------------------------------------------------------    00088000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088100
.ZG36             ANOP  ,                                               00088200
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00088300
                  AIF   (K'&XMF GT 0).ZG36E     VALID ARG               00088400
                  AIF   (T'&MF EQ 'O').ZG36D    OMITTED                 00088500
&ZASYSLNDX        SETA  0                                               00088600
.ZG36A            ANOP  ,           POSITIONAL MACRO KEY                00088700
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00088800
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG36C                00088900
&ZTLC             SETC 'MF'                                             00089000
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG36A       00089100
.ZG36B            ANOP  ,                                               00089200
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00089300
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00089400
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00089500
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00089600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00089700
                  AGO   .ZG36E                                          00089800
.ZG36C            ANOP  ,                                               00089900
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00090000
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00090100
&ZMS              SETC  '&ZMS.&MF"'                                     00090200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00090300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00090400
&ZMS              SETC  '&ZMS "S",'                                     00090500
&ZMS              SETC  '&ZMS "L",'                                     00090600
&ZMS              SETC  '&ZMS OR "E".'                                  00090700
                  MNOTE 8,' &ZMS '                                      00090800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00090900
                  AGO   .ZG36E                                          00091000
.ZG36D            ANOP  ,                                               00091100
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00091200
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00091300
.ZG36E            ANOP  ,                                               00091400
.********************************************************************   00091500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00091600
.********************************************************************   00091700
                  ACTR  10000                                           00091800
.*-------------------------------------------------------------------   00091900
.***AG.MF03 MF=(SLE)                                                    00092000
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00092100
.*------------------------------------------------------------------    00092200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092300
&XAFFINITY        SETC  ''          INITIALIZE XVARIABLE                00092400
.*-------------------------------------------------------------------   00092500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092600
.ZG3              ANOP  ,                                               00092700
                  AIF   (K'&AFFINITY(1) LE 0).ZG3A                      00092800
&ZTLC             SETC 'YES'                                            00092900
                  AIF   ('&AFFINITY(1)' NE '&ZTLC').ZG4                 00093000
&XAFFINITY        SETC  'YES'       SET KEYWORD                         00093100
                  AIF   (N'&AFFINITY LE 1).ZG3A  CK NUM                 00093200
&ZMS              SETC  '"AFFINITY='            *KPOSA* MNOTE           00093300
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00093400
&ZMS              SETC  '&ZMS "AFFINITY"'                               00093500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00093600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00093700
.ZG3A             ANOP  ,                                               00093800
.*-------------------------------------------------------------------   00093900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094000
.ZG4              ANOP  ,                                               00094100
&ZTLC             SETC 'NO'                                             00094200
                  AIF   ('&AFFINITY(1)' NE '&ZTLC').ZG5                 00094300
&XAFFINITY        SETC  'NO'        SET KEYWORD                         00094400
                  AIF   (N'&AFFINITY LE 1).ZG4A  CK NUM                 00094500
&ZMS              SETC  '"AFFINITY='            *KPOSA* MNOTE           00094600
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00094700
&ZMS              SETC  '&ZMS "AFFINITY"'                               00094800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00094900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00095000
.ZG4A             ANOP  ,                                               00095100
.*------------------------------------------------------------------    00095200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00095300
.ZG5              ANOP  ,                                               00095400
&ZXAFFINITY       SETC  'INPUT'     SET IN/OUTPUT                       00095500
                  AIF   (K'&XAFFINITY GT 0).ZG5E  VALID ARG             00095600
                  AIF   (T'&AFFINITY EQ 'O').ZG5D  OMITTED              00095700
&ZASYSLNDX        SETA  0                                               00095800
.ZG5A             ANOP  ,           POSITIONAL MACRO KEY                00095900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00096000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG5C                 00096100
&ZTLC             SETC 'AFFINITY'                                       00096200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG5A        00096300
.ZG5B             ANOP  ,                                               00096400
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00096500
&ZMS              SETC  'THE "AFFINITY" KEY'    *KOPTA* MNOTE           00096600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00096700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00096800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00096900
                  AGO   .ZG5E                                           00097000
.ZG5C             ANOP  ,                                               00097100
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00097200
&ZMS              SETC  '"AFFINITY='            *KUKWA* MNOTE           00097300
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00097400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00097500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00097600
&ZMS              SETC  '&ZMS "YES"'                                    00097700
&ZMS              SETC  '&ZMS OR "NO".'                                 00097800
                  MNOTE 8,' &ZMS '                                      00097900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00098000
                  AGO   .ZG5E                                           00098100
.ZG5D             ANOP  ,                                               00098200
&XAFFINITY        SETC  'YES'       SET DEFAULT KEYWORD                 00098300
.ZG5E             ANOP  ,                                               00098400
.*------------------------------------------------------------------    00098500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00098600
                  AIF   (K'&AFFINITY(1) GT 0).ZG5F  PARM                00098700
&XAFFINITY        SETC  ''          ENSURE NULL KEYWORD                 00098800
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00098900
&ZMS              SETC  'THE'                                           00099000
&ZMS              SETC  '&ZMS "AFFINITY" KEY AND ITS'                   00099100
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00099200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00099300
&ZMS              SETC  '&ZMS "YES"'                                    00099400
&ZMS              SETC  '&ZMS OR "NO".'                                 00099500
                  MNOTE 8,' &ZMS '                                      00099600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00099700
.ZG5F             ANOP  ,                                               00099800
.*----------------------------------------------------------------***   00099900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00100000
                  AIF   (N'&REGION_TOKEN LE 1).ZG7A  CK NUM             00100100
&ZMS              SETC  '"REGION_TOKEN='        *KPOSA* MNOTE           00100200
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00100300
&ZMS              SETC  '&ZMS "REGION_TOKEN"'                           00100400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00100500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00100600
.ZG7A             ANOP  ,                                               00100700
.*-------------------------------------------------------------------   00100800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00100900
&ZXREGION_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00101000
&XREGION_TOKEN    SETC  '0'                                             00101100
                  AIF   (K'&REGION_TOKEN(1) LE 0).ZG7B  PARM            00101200
&XREGION_TOKEN    SETC  '&REGION_TOKEN(1)'      SET XVARIABLE           00101300
                  AIF   (N'&REGION_TOKEN GT 1).ZG7B  MULTI PARMS        00101400
&XREGION_TOKEN    SETC  '&REGION_TOKEN'         SET XVARIABLE           00101500
.ZG7B             ANOP  ,                                               00101600
.*-------------------------------------------------------------------   00101700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00101800
                  AIF   (K'&ZXREGION_TOKEN LE 0).ZG7R  NOT I/O          00101900
                  AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZG7R             00102000
&ZCGPR            SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)          00102100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                     00102200
                  AIF   (K'&ZCGPR GT 2).ZG7Q                            00102300
                  AIF   ('&ZCGPR' EQ '0').ZG7Q                          00102400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00102500
                  AIF   (T'&ZCGPR NE 'N').ZG7Q  INVALID REG NAME        00102600
.ZG7P             ANOP  ,                                               00102700
                  AIF   (T'&ZCGPR NE 'N').ZG7R  NON NUMERIC             00102800
                  AIF   ('&ZCGPR' LT '2').ZG7Q                          00102900
                  AIF   ('&ZCGPR' LE '12').ZG7R                         00103000
.ZG7Q             ANOP  ,                                               00103100
&ZMS              SETC  '"REGION_TOKEN='        *KGPRA* MNOTE           00103200
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00103300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00103400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00103500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00103600
.ZG7R             ANOP  ,                                               00103700
.*----------------------------------------------------------------***   00103800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00103900
                  AIF   (N'&RETCODE LE 1).ZG10A  CK NUM                 00104000
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00104100
&ZMS              SETC  '&ZMS.&RETCODE"'                                00104200
&ZMS              SETC  '&ZMS "RETCODE"'                                00104300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00104400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00104500
.ZG10A            ANOP  ,                                               00104600
.*-------------------------------------------------------------------   00104700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00104800
                  AIF   (K'&RETCODE(1) LE 0).ZG10C  NO PARM             00104900
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00105000
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00105100
                  AIF   (N'&RETCODE GT 1).ZG10C                         00105200
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00105300
.ZG10C            ANOP  ,                                               00105400
.*-------------------------------------------------------------------   00105500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00105600
                  AIF   (K'&ZXRETCODE LE 0).ZG10R  NOT I/O              00105700
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG10R                 00105800
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00105900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                    00106000
                  AIF   (K'&ZCGPR GT 2).ZG10Q                           00106100
                  AIF   ('&ZCGPR' EQ '0').ZG10Q                         00106200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00106300
                  AIF   (T'&ZCGPR NE 'N').ZG10Q  INVALID REG NAME       00106400
.ZG10P            ANOP  ,                                               00106500
                  AIF   (T'&ZCGPR NE 'N').ZG10R  NON NUMERIC            00106600
                  AIF   ('&ZCGPR' LT '2').ZG10Q                         00106700
                  AIF   ('&ZCGPR' LE '12').ZG10R                        00106800
.ZG10Q            ANOP  ,                                               00106900
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00107000
&ZMS              SETC  '&ZMS.&RETCODE"'                                00107100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00107200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00107300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00107400
.ZG10R            ANOP  ,                                               00107500
.*----------------------------------------------------------------***   00107600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00107700
                  AIF   (N'&RSNCODE LE 1).ZG13A  CK NUM                 00107800
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00107900
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00108000
&ZMS              SETC  '&ZMS "RSNCODE"'                                00108100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00108200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00108300
.ZG13A            ANOP  ,                                               00108400
.*-------------------------------------------------------------------   00108500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00108600
                  AIF   (K'&RSNCODE(1) LE 0).ZG13C  NO PARM             00108700
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00108800
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00108900
                  AIF   (N'&RSNCODE GT 1).ZG13C                         00109000
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00109100
.ZG13C            ANOP  ,                                               00109200
.*-------------------------------------------------------------------   00109300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00109400
                  AIF   (K'&ZXRSNCODE LE 0).ZG13R  NOT I/O              00109500
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG13R                 00109600
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00109700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                    00109800
                  AIF   (K'&ZCGPR GT 2).ZG13Q                           00109900
                  AIF   ('&ZCGPR' EQ '0').ZG13Q                         00110000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00110100
                  AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME       00110200
.ZG13P            ANOP  ,                                               00110300
                  AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC            00110400
                  AIF   ('&ZCGPR' LT '2').ZG13Q                         00110500
                  AIF   ('&ZCGPR' LE '12').ZG13R                        00110600
.ZG13Q            ANOP  ,                                               00110700
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00110800
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00110900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00111000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00111100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00111200
.ZG13R            ANOP  ,                                               00111300
.******************************************************************     00111400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00111500
.******************************************************************     00111600
                  ACTR  10000                                           00111700
.*----------------------------------------------------------------***   00111800
.***AH.P02 EXTRA POSITIONALS                                            00111900
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00112000
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00112100
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00112200
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00112300
.ZGLISTX1         ANOP  ,                                               00112400
&ZCVAL            SETC  ''          ERROR FIELD                         00112500
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00112600
.ZGLIST2          ANOP  ,                                               00112700
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00112800
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00112900
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00113000
                  AGO   .ZGLIST2                                        00113100
.*                                                                      00113200
.ZGLIST3          ANOP  ,                                               00113300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00113400
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00113500
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00113600
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00113700
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00113800
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00113900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00114000
.ZGLISTX          ANOP  ,                                               00114100
&ZASYSLNDX        SETA  0                                               00114200
.*-------------------------------------------------------------------   00114300
.***AG.MF04 MF=(SLE)                                                    00114400
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00114500
.*******************************************************************    00114600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00114700
.*******************************************************************    00114800
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00114900
.*******************************************************************    00115000
.***AE.01  START OF IWMTAFF MACRO CODE                                  00115100
.*******************************************************************    00115200
                  LCLC  &M0M0001                 NAME                   00115300
&M0M0001          SETC  '&XLABEL'                SET NAME               00115400
                  AIF   (K'&XLABEL NE 0).XLAB2                          00115500
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00115600
.*                                                                      00115700
.XLAB2            ANOP  ,                                               00115800
                  AIF   ('&XMF' EQ 'L').XLAB3                           00115900
&M0M0001 DS    0H                             IWMTAFF-0                 00116000
.XLAB3            ANOP  ,                                               00116100
.*******************************************************************    00116200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00116300
.*******************************************************************    00116400
              PUSH  PRINT                                               00116500
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00116600
                  PRINT OFF         ++ PR01                             00116700
                  AGO   .ZPRNTXX                                        00116800
.ZPRINTX          PRINT ON                                              00116900
.ZPRNTXX          ANOP  ,                                               00117000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00117100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00117200
.********************************************************************   00117300
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00117400
.********************************************************************   00117500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00117600
                      LCLA  &ZOPN1         INVOCATION INDEX             00117700
                      LCLC  &ZOPL(4095)    LABEL                        00117800
                      LCLC  &ZOPO(4095)    OPERATION                    00117900
                      LCLC  &ZOPV(4095)    VALUE                        00118000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00118100
.*                                                                      00118200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00118300
.******************************************************************     00118400
.***AL.L10 IWMTAFF FMT=LIST MF=S!L PARAMETERS                           00118500
.******************************************************************     00118600
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00118700
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00118800
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00118900
&XMFATTR              SETC  '0D'                                        00119000
.*                                                                      00119100
&ZOPN                 SETA  &ZOPN+1                                     00119200
&ZOPL(&ZOPN)          SETC  ' '                                         00119300
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00119400
&ZOPO(&ZOPN)          SETC  'B'                                         00119500
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00119600
                      AGO   .ZALVL6B                                    00119700
.ZALVL6A              ANOP                                              00119800
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00119900
&ZOPV(&ZOPN)          SETC  '4,8'                                       00120000
&ZOPN                 SETA  &ZOPN+1                                     00120100
&ZOPL(&ZOPN)          SETC  ' '                                         00120200
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00120300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00120400
.ZALVL6B              ANOP                                              00120500
&ZOPD(&ZOPN)          SETC  '++ IWMTAFF ARG PARMS'                      00120600
.*                                                                      00120700
&ZOPN                 SETA  &ZOPN+1                                     00120800
&ZOPL(&ZOPN)          SETC  ' '                                         00120900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00121000
&ZOPV(&ZOPN)          SETC  '1'                                         00121100
&ZOPD(&ZOPN)          SETC  ' '                                         00121200
.*                                                                      00121300
.ZLMFSL2              ANOP  ,                                           00121400
.*-------------------------------------------------------------------   00121500
.***AM.L00  IWMTAFF FMT=LIST name                                       00121600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00121700
&ZOPN                 SETA &ZOPN+1                                      00121800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00121900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00122000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00122100
&ZOPD(&ZOPN)          SETC '++ IWMTAFF NAME'                            00122200
.ZLMFSL2M             ANOP  ,                                           00122300
.*-------------------------------------------------------------------   00122400
.***AM.L01  IWMTAFF FMT=LIST PARAMETERS                                 00122500
&ZOPN                 SETA &ZOPN+1                                      00122600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00122700
&ZOPO(&ZOPN)          SETC 'DS'                                         00122800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00122900
&ZOPD(&ZOPN)          SETC '++ IWMTAFF PARM LIST'                       00123000
.*-------------------------------------------------------------------   00123100
.***AM.L02 XVERSION XL1                                                 00123200
&ZOPN                 SETA &ZOPN+1                                      00123300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00123400
&ZOPO(&ZOPN)          SETC 'DS'                                         00123500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00123600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00123700
.*-------------------------------------------------------------------   00123800
.***AM.L09  XOPTIONS BL.8                                               00123900
&ZOPN                 SETA &ZOPN+1                                      00124000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00124100
&ZOPO(&ZOPN)          SETC 'DS'                                         00124200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00124300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOPTIONS'                   00124400
.*-------------------------------------------------------------------   00124500
.***AM.L09  XPLISTLEN XL2                                               00124600
&ZOPN                 SETA &ZOPN+1                                      00124700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00124800
&ZOPO(&ZOPN)          SETC 'DS'                                         00124900
&ZOPV(&ZOPN)          SETC 'XL2'                                        00125000
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00125100
.*-------------------------------------------------------------------   00125200
.***AM.L03 XFLAG_WORD BL.8                                              00125300
&ZOPN                 SETA &ZOPN+1                                      00125400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAG_WORD'                       00125500
&ZOPO(&ZOPN)          SETC 'DS'                                         00125600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00125700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00125800
.*                                                                      00125900
&ZOPN                 SETA  &ZOPN+1                                     00126000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAFFINITY_YES'                   00126100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00126200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00126300
&ZOPD(&ZOPN)          SETC  '++ XAFFINITY.'                             00126400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00126500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00126600
.*-------------------------------------------------------------------   00126700
.***AM.L09  XRSV0002 CL3                                                00126800
&ZOPN                 SETA &ZOPN+1                                      00126900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00127000
&ZOPO(&ZOPN)          SETC 'DS'                                         00127100
&ZOPV(&ZOPN)          SETC 'CL3'                                        00127200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      00127300
.*-------------------------------------------------------------------   00127400
.***AM.L09  XREGION_TOKEN CL16                                          00127500
&ZOPN                 SETA &ZOPN+1                                      00127600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGION_TOKEN'                    00127700
&ZOPO(&ZOPN)          SETC 'DS'                                         00127800
&ZOPV(&ZOPN)          SETC 'CL16'                                       00127900
&ZOPD(&ZOPN)          SETC '++ &ZXREGION_TOKEN  XREGION_TOKEN'          00128000
.*-------------------------------------------------------------------   00128100
.***AM.L10 END OF IWMTAFF LIST PARAMETERS                               00128200
&ZOPN                 SETA &ZOPN+1                                      00128300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00128400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00128500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00128600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00128700
.*                                                                      00128800
&ZOPN                 SETA &ZOPN+1                                      00128900
&ZOPL(&ZOPN)          SETC ' '                                          00129000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00129100
&ZOPV(&ZOPN)          SETC '1'                                          00129200
&ZOPD(&ZOPN)          SETC ' '                                          00129300
.*-------------------------------------------------------------------   00129400
.***AL.L12 IWMTAFF FMT=LIST MF=S!L PARAMETERS                           00129500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00129600
.*                                                                      00129700
&ZOPN                 SETA  &ZOPN+1                                     00129800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00129900
&ZOPO(&ZOPN)          SETC  'DC'                                        00130000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00130100
&ZOPD(&ZOPN)          SETC  '++ IWMTAFF ARG PARMS'                      00130200
.*                                                                      00130300
.ZLMFSLX              ANOP  ,                                           00130400
.*-------------------------------------------------------------------   00130500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00130600
&ZPLLEN               SETA 24                                           00130700
.*                                                                      00130800
.******************************************************************     00130900
.***AI.L01 IWMTAFF FMT=LIST FILL IN PARAMETER AREA                      00131000
.******************************************************************     00131100
                      ACTR  10000                                       00131200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00131300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00131400
&ZCVAL                SETC  'LAE'          XAX MODE                     00131500
.ZIMFXA               ANOP ,                                            00131600
.*                                                                      00131700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00131800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00131900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00132000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00132100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00132200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00132300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00132400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00132500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00132600
&ZOPN                 SETA  &ZOPN+1                                     00132700
&ZOPL(&ZOPN)          SETC  ' '                                         00132800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00132900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00133000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00133100
                      AGO   .ZIMFNX                                     00133200
.*                                                                      00133300
.ZIMFN2               ANOP ,                                            00133400
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00133500
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00133600
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00133700
&ZOPN                 SETA  &ZOPN+1                                     00133800
&ZOPL(&ZOPN)          SETC  ' '                                         00133900
&ZOPO(&ZOPN)          SETC  'LAE'                                       00134000
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00134100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00134200
                      AGO   .ZIMFNX                                     00134300
.ZIMFNX1              ANOP ,                                            00134400
&ZOPN                 SETA  &ZOPN+1                                     00134500
&ZOPL(&ZOPN)          SETC  ' '                                         00134600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00134700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00134800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00134900
.ZIMFNX               ANOP ,                                            00135000
.********************************************************************   00135100
.***AI.L02 IWMTAFF FMT=LIST INITIALIZE PARAMETER AREA                   00135200
.********************************************************************   00135300
.***AI.L03 MF=(SLE)                                                     00135400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00135500
.*                                                                      00135600
&ZOPN                 SETA  &ZOPN+1                                     00135700
&ZOPL(&ZOPN)          SETC  ' '                                         00135800
&ZOPO(&ZOPN)          SETC  'XC'                                        00135900
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00136000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00136100
.ZIMFLX               ANOP  ,                                           00136200
.*-------------------------------------------------------------------   00136300
.***AI.L04 XPLISTLEN XL2                                                00136400
&ZOPN                 SETA  &ZOPN+1                                     00136500
&ZOPL(&ZOPN)          SETC  ' '                                         00136600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00136700
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00136800
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00136900
.*-------------------------------------------------------------------   00137000
.***AI.L05 XFLAG_WORD BL1                                               00137100
&ZW                   SETC  ''                                          00137200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00137300
.*-------------------------------------------------------------------   00137400
.***AI.L08 XFLAG_WORD "YES"                                             00137500
.***      BL1'1XXXXXXX'                                                 00137600
         AIF   ('&XAFFINITY' NE 'YES').ZI5A                             00137700
&ZW                   SETC  '&ZW.10000000'                              00137800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00137900
                      AGO   .ZI5C                                       00138000
.*                                                                      00138100
.ZI5A                 ANOP  ,                                           00138200
&ZW                   SETC  '&ZW.00000000'                              00138300
.ZI5C                 ANOP  ,                                           00138400
.*-------------------------------------------------------------------   00138500
.***AI.L11 XFLAG_WORD BL1                                               00138600
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00138700
&ZOPN                 SETA  &ZOPN+1                                     00138800
&ZOPL(&ZOPN)          SETC  ' '                                         00138900
&ZOPO(&ZOPN)          SETC  'OI'                                        00139000
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00139100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00139200
.ZI5E                 ANOP  ,                                           00139300
.*-------------------------------------------------------------------   00139400
.***AI.L25  XREGION_TOKEN CL16                                          00139500
                      AIF   ('&ZXREGION_TOKEN' EQ '').ZI7E              00139600
                      AIF   ('&ZXREGION_TOKEN' EQ 'OUTPUT').ZI7E        00139700
&ZCGPR                SETC  '&XREGION_TOKEN'                            00139800
         AIF   ('&XREGION_TOKEN' EQ '0').ZI7E                           00139900
         AIF   ('&XREGION_TOKEN' EQ '0').ZI7E                           00140000
.*                                                                      00140100
                      AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZI7B         00140200
&ZCGPR   SETC  '0('.'&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2).')'          00140300
                      AGO   .ZI7D                                       00140400
.ZI7B                 ANOP  ,                                           00140500
.*                                                                      00140600
                      AIF   ('&REGION_TOKEN(1)' EQ '').ZI7I  OMITTED    00140700
&ZC                   SETC  '0'                                         00140800
                      AIF   ('&XREGION_TOKEN' NE '&ZC').ZI7C            00140900
.ZI7I                 ANOP  ,                                           00141000
&ZCGPR                SETC  '=CL16''&XREGION_TOKEN'''                   00141100
.ZI7C                 ANOP  ,                                           00141200
.*                                                                      00141300
.ZI7D                 ANOP  ,                                           00141400
.*                                                                      00141500
&ZOPN                 SETA  &ZOPN+1                                     00141600
&ZOPL(&ZOPN)          SETC  ' '                                         00141700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00141800
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00141900
&ZOPD(&ZOPN)          SETC  '++ &ZXREGION_TOKEN XREGION_TOKEN'          00142000
.*                                                                      00142100
.ZI7E                 ANOP  ,                                           00142200
.*-------------------------------------------------------------------   00142300
&ZOPN1                SETA &ZOPN                                        00142400
.*******************************************************************    00142500
.***  PROCESS IWMTAFF OUTPUT PARAMETERS                                 00142600
.*******************************************************************    00142700
                      ACTR  10000                                       00142800
.*******************************************************************    00142900
.***AO.X02  RETURN CODE PROCESSING                                      00143000
.*******************************************************************    00143100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00143200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00143300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00143400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00143500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00143600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00143700
&ZOPN                 SETA  &ZOPN+1                                     00143800
&ZOPL(&ZOPN)          SETC  ' '                                         00143900
&ZOPO(&ZOPN)          SETC  'ST'                                        00144000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00144100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00144200
                      AGO   .ZMRETX                                     00144300
.*                                                                      00144400
.ZMRET2               ANOP  ,                                           00144500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00144600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00144700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00144800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00144900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00145000
&ZOPN                 SETA  &ZOPN+1                                     00145100
&ZOPL(&ZOPN)          SETC  ' '                                         00145200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00145300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00145400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00145500
.ZMRETX               ANOP  ,                                           00145600
.*******************************************************************    00145700
.***AO.X03  REASON CODE PROCESSING                                      00145800
.*******************************************************************    00145900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00146000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00146100
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00146200
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00146300
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00146400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00146500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00146600
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00146700
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00146800
&ZOPN                 SETA  &ZOPN+1                                     00146900
&ZOPL(&ZOPN)          SETC  ' '                                         00147000
&ZOPO(&ZOPN)          SETC  'ST'                                        00147100
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00147200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00147300
                      AGO   .ZMRSNX                                     00147400
.*                                                                      00147500
.ZMRSN2               ANOP  ,                                           00147600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00147700
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00147800
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00147900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00148000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00148100
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00148200
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00148300
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00148400
&ZOPN                 SETA  &ZOPN+1                                     00148500
&ZOPL(&ZOPN)          SETC  ' '                                         00148600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00148700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00148800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00148900
.ZMRSNX               ANOP  ,                                           00149000
.*******************************************************************    00149100
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00149200
.*******************************************************************    00149300
.ZMFLX                ANOP  ,              MF=L PROCESSING              00149400
.*******************************************************************    00149500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00149600
.*******************************************************************    00149700
                      ACTR  10000                                       00149800
.*                                                                      00149900
                      LCLA  &ZLC           COLUMN POSITION              00150000
                      LCLA  &ZOPX          LIST TABLE INDEX             00150100
                      LCLC  &ZLL           LABEL                        00150200
                      LCLC  &ZLOP          OPERATION                    00150300
                      LCLC  &ZLV           VALUE                        00150400
                      LCLC  &ZLD           DESCRIPTION                  00150500
.*                                                                      00150600
&ZOPX                 SETA  1                                           00150700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00150800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00150900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00151000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00151100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00151200
                      AIF   (K'&ZLD LE 0).ZL5                           00151300
&ZLC                  SETA  35             COMMENT COLUMN               00151400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00151500
&ZLC                  SETA  33             COMMMENT COLUMN              00151600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00151700
&ZLV                  SETC  '&ZLV'.' '                                  00151800
                      AGO   .ZL3                                        00151900
.*                                                                      00152000
.ZL4                  ANOP  ,                                           00152100
&ZLV                  SETC  '&ZLV'.' '                                  00152200
.ZL5                  ANOP  ,                                           00152300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00152400
.*                                                                      00152500
&ZLL     &ZLOP &ZLV                                                     00152600
.*                                                                      00152700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00152800
                      AGO   .ZL2           CONTINUE LOOPING             00152900
.*                                                                      00153000
.ZLX                  ANOP  ,                                           00153100
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00153200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00153300
         L     14,16(0,0)              GET CVT ADDRESS                  00153400
         L     14,772(14,0)            GET SFT ADDRESS                  00153500
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00153600
         LA    15,98                   GET EX FOR SERVICE ROUTINE       00153700
         OR    14,15                   GET PC NUMBER                    00153800
         PC    0(14)                                                    00153900
END&SYSNDX DS    0H                    END LABEL                        00154000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00154100
.ZLINKX               ANOP  ,                                           00154200
.*******************************************************************    00154300
.***AP.X01  FORMAT GENERATED CODE                                       00154400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00154500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00154600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00154700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00154800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00154900
                      AIF   (K'&ZLD LE 0).ZL51                          00155000
&ZLC                  SETA  35             COMMENT COLUMN               00155100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00155200
&ZLC                  SETA  33             COMMENT COLUMN               00155300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00155400
&ZLV                  SETC  '&ZLV'.' '                                  00155500
                      AGO   .ZL31                                       00155600
.*                                                                      00155700
.ZL41                 ANOP  ,                                           00155800
&ZLV                  SETC  '&ZLV'.' '                                  00155900
.ZL51                 ANOP  ,                                           00156000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00156100
.*                                                                      00156200
&ZLL     &ZLOP &ZLV                                                     00156300
.*                                                                      00156400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00156500
                      AGO   .ZL21          CONTINUE LOOPING             00156600
.*                                                                      00156700
.ZLX1                 ANOP  ,                                           00156800
.*******************************************************************    00156900
.***AP.X02  END OF IWMTAFF MACRO                                        00157000
&ZIWMTAFF             SETC  'YES'          SET IWMTAFF USED             00157100
         POP   PRINT                                                    00157200
*                                            IWMTAFF-0                  00157300
         SPACE 1                                                        00157400
.ZLX2                 ANOP  ,                                           00157500
         MEND                                                           00157600
**********************************************************************/ 00157700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00157800
*%IWMTAFF: MACRO KEYS(AFFINITY,REGION_TOKEN,RETCODE,RSNCODE,PLISTVER,   00157900
*                 MF);                                                  00158000
*  ANS('?'!!MACLABEL!!' '!!'IWMTAFFP '!!MACLIST!!                       00158100
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00158200
*%END IWMTAFF;                                                          00158300
