*                                                                       00001000
* %DCL IRAECMB_INCLUDED CHAR EXT;                                       00002000
* %DEACTIVATE IRAECMB_INCLUDED;                                         00003000
* %IF IRAECMB_INCLUDED = '' %THEN                                       00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 19322. CBGEN compile date 19044         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IRAECMB &DSECT=YES,&LIST=YES,&TITLE=YES,&IRAECMB=YES,         *00009000
               &ECMB=COND                                               00010000
         GBLC  &IRAECMB_INCLUDED                                        00011000
         GBLC  &ZCBPRINT                                                00012000
&IRAECMB_INCLUDED SETC 'YES'                                            00013000
         AIF   ('&LIST' EQ 'NONE').P0                                   00014000
         AIF   ('&TITLE' EQ 'NO').P5                                    00015000
 TITLE   'IRAECMB  - Extended Channel Measurement Block mapping        *00016000
                '                                                       00017000
.P5      ANOP                                                           00018000
**/ IRAECMB_1:;                                                         00019000
*/*START OF SPECIFICATIONS ******************************************** 00020000
*                                                                       00021000
* MACRO-NAME: IRAECMB                                                   00022000
*  DSECT NAME: ECMB                                                     00023000
*                                                                       00024000
* DESCRIPTIVE-NAME: Extended Channel Measurement Block mapping          00025000
*                                                                       00026000
* COMPONENT: SRM (SC1CX)                                                00027000
*                                                                       00028000
* PROPRIETARY STATEMENT =                                               00029000
*                                                                       00030000
*   LICENSED MATERIALS - PROPERTY OF IBM                                00031000
*   5650-ZOS     COPYRIGHT IBM CORP. 2002, 2021                         00032000
*                                                                       00033000
* STATUS = HBB77D0                                                      00034000
*                                                                       00035000
* FUNCTION:  IRAECMB maps the Extended Channel Measurement Block.       00036000
*                                                                       00037000
* METHOD-OF-ACCESS:                                                     00038000
*                                                                       00039000
*   ASM:    ,DSECT=YES!NO to specify if the macro should be             00040000
*                         defined as a DSECT.                           00041000
*           ,LIST=YES!NO to control whether or not the macro will       00042000
*                        appear in the assembler listing.               00043000
*           ,TITLE=YES!NO to control whether or not the title will      00044000
*                        appear in the assembler listing.               00045000
*                                                                       00046000
*   PLX: %INCLUDE SYSLIB(IHAPSA)                                        00047000
*        %INCLUDE SYSLIB(IRARMCT)                                       00048000
*        %INCLUDE SYSLIB(IRACMCT)                                       00049000
*        %INCLUDE SYSLIB(IRAECMB)                                       00050000
*                                                                       00051000
*        To prevent the following level 1 declares:                     00052000
*          1 ECMB  Based(ECMBptr),                                      00053000
*             or                                                        00054000
*          1 ECMB  Based(ECMBptr) Via(CMCTECMBalet),                    00055000
*        %ECMBBASE='NO' must be specified.                              00056000
*                                                                       00057000
*        To specify a basing attribute, set                        @L1A 00058000
*        %ECMBBASE='basing attr'.                                  @L1A 00059000
*                                                                       00060000
*        To prevent "Via(CMCTECMBalet)" on the level 1 declares,        00061000
*        %ECMBVIA='NO' must be specified.  If this is specified,        00062000
*        the following mapping macros need not be included:             00063000
*        %INCLUDE SYSLIB(IHAPSA)                                        00064000
*        %INCLUDE SYSLIB(IRARMCT)                                       00065000
*        %INCLUDE SYSLIB(IRACMCT)                                       00066000
*                                                                       00067000
* POINTED-TO-BY: SCHCMBAD (real address)                                00068000
*                                                                       00069000
*      - To address an ECMB, the following must be done:                00070000
*                                                                       00071000
*        - CMCTECMBAlet contains the ALET of the data space             00072000
*        containing the ECMBs.  This ALET must be loaded                00073000
*        into an access register and a SAC instruction must             00074000
*        be issued to switch into access register mode.      @WLMPMSS   00075000
*                                                                       00076000
*        - CMCTECMBPtr contains the address of the array of             00077000
*        ECMB entries within the data space.  This address              00078000
*        may be zero since the data space may start at                  00079000
*        address zero.  There is an array of up 65536                   00080000
*        entries for each subchannel set.  The first element            00081000
*        in each array contains the ECMB header, which is               00082000
*        mapped by the ECMBHeader data structure.  The ECMB             00083000
*        header corresponds to ECMB array index zero within             00084000
*        the subchannel set.  CMCTECMBhighMBIs contains the             00085000
*        highest assigned ECMB index within each of the                 00086000
*        subchannel sets.                                    @WLMPMSS   00087000
*                                                                       00088000
*        The index for the ECMB entry assigned to the device            00089000
*        is in the UCBMBI field of that device's UCB.  To               00090000
*        compute the ECMB address for that device, multiply             00091000
*        the subchannel set id in UCBSSID by 65536 and add              00092000
*        that to UCBMBI.  Then multiply the result by the               00093000
*        size of an ECMB entry (64 bytes) and add                       00094000
*        CMCTECMBPtr.  That is:                              @WLMPMSS   00095000
*                                                                       00096000
*        ECMBPtr = CMCTECMBPtr + 64 * (UCBSSID * 65536 + UCBMBI)        00097000
*                                                                       00098000
*                                                                       00099000
* CREATED-BY: IEAVNP1F                                                  00100000
*                                                                       00101000
* DELETED-BY: N/A                                                       00102000
*                                                                       00103000
* STORAGE-ATTRIBUTES: Disabled reference storage                        00104000
*                                                                       00105000
*   SUBPOOL/DATASPACE: Dataspace                                        00106000
*                                                                       00107000
*   KEY: 0                                                              00108000
*                                                                       00109000
*   FREQUENCY: One ECMB for every DASD (including aliases) and tape     00110000
*              device that is connected to a subchannel                 00111000
*                                                                       00112000
* EYE-CATCHER: ECMB                                                     00113000
*  OFFSET: 0                                                            00114000
*  LENGTH: 4                                                            00115000
*                                                                       00116000
* SIZE:       ECMBHEADER -- X'0040' bytes                               00117000
*             IRAECMB -- X'0080' bytes                                  00118000
*             ECMB    -- X'0040' bytes                                  00119000
*                                                                       00120000
* SERIALIZATION: None                                                   00121000
*                                                                       00122000
* DEPENDENCIES:  None                                                   00123000
*                                                                       00124000
* EXTERNAL CLASSIFICATION: PI                                  @PJK0999 00125000
* END OF EXTERNAL CLASSIFICATION                                        00126000
*                                                                       00127000
* CHANGE-ACTIVITY:                                                      00128000
*   $L0=MCSEX  HBB7709 020215 PDON: Multiple Channel Subsystem          00129000
*   $L1=MCSEX  HBB7709 020315 PDON: Multiple Channel Subsystem          00130000
*   $WLMPMCS   JBB7717 020805 3241MB: Manfred Baudisch                  00131000
*                                     NEW part rolled into JBB7717      00132000
*   $PZJ0002   JBB7717 020913 3241BH: Bill Heisser                      00133000
*                                     correct Proprietary Statement     00134000
*   $PJK0999   HBB7709 031020 3241MB: Manfred Baudisch                  00135000
*                                     Changed 'external classification' 00136000
*                                     to NOTPI                          00137000
*   OA06164    HBB7709 040212 3241MB: Manfred Baudisch - changed        00138000
*                                     distribution library to ship      00139000
*                                     this macro externally             00140000
*   WLMPMSS    HBB7720 040423 3241GV: Guenter Vater                     00141000
*                                     Macro header update               00142000
*                                     KH. Holder, change back           00143000
*   $ME08403   HBB7740 061106 3241BH: Bill Heisser                      00144000
*                                     correcting Prop Stmt              00145000
*   $ME23121   HBB7790 111202 3241AK: Anette Kempfert                   00146000
*                                     add ECMBInterruptDelayTime        00147000
*   $CBGMETA   HBB77D0 191106 3241BH: Bill Heisser                      00148000
*                                     convert to CBGEN Metadata         00149000
*                                                                       00150000
*END OF SPECIFICATIONS ***********************************************/ 00151000
*% /*                                                                   00152000
.P0      ANOP                                                           00153000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00154000
         AIF   ('&LIST' EQ 'YES').P2                                    00155000
.P1      ANOP                                                           00156000
         PUSH  PRINT                                                    00157000
         PRINT OFF                                                      00158000
.P2      ANOP                                                           00159000
         AIF   ('&IRAECMB' EQ 'NO').L0002                               00160000
         AIF   ('&DSECT' EQ 'YES').L0003                                00161000
         AIF   ('&IRAECMB' NE 'YES').L0002                              00162000
IRAECMB  DS    0F        Extended Channel Measurement Block             00163000
         AGO   .L0004                                                   00164000
.L0003   ANOP                                                           00165000
IRAECMB  DSECT           Extended Channel Measurement Block             00166000
.L0004   ANOP                                                           00167000
ECMBHEADER DS  CL64      Extended Channel Measurement Block header      00168000
         ORG   ECMBHEADER                                               00169000
ECMBNAME DS    CL4       Acronym 'ECMB'                                 00170000
ECMBLENGTH DS  F         Length of ECMB array                           00171000
ECMBBITS DS    B         Bits                                           00172000
*  Bit definitions:                                                     00173000
ECMBSUBCHANNELSET EQU X'C0' Subchannel set ID                           00174000
         DS    CL55      Reserved                                       00175000
ECMBENTRY DS   CL64      Array of ECMB entries                          00176000
IRAECMB_LEN EQU *-IRAECMB                                               00177000
.L0002   ANOP                                                           00178000
         AIF   ('&ECMB' EQ 'NO').L0005                                  00179000
         AIF   ('&DSECT' EQ 'YES').L0006                                00180000
         AIF   ('&ECMB' NE 'YES').L0005                                 00181000
ECMB     DS    0F        Extended Channel Measurement Block             00182000
         AGO   .L0007                                                   00183000
.L0006   ANOP                                                           00184000
ECMB     DSECT           Extended Channel Measurement Block             00185000
.L0007   ANOP                                                           00186000
ECMBSSCHRSCHCOUNT DS F   Number of SSCH/RSCH instructions               00187000
ECMBSAMPLECOUNT DS F     Number of SSCH/RSCH instructions for which    *00188000
                         data was collected                             00189000
ECMBCONNECTTIME DS F     Summation of device connect times              00190000
ECMBPENDINGTIME DS F     Summation of SSCH/RSCH request pending times   00191000
ECMBDISCONNECTTIME DS F  Summation of subchannel disconnect times       00192000
ECMBCUQUEUEINGTIME DS F  Summation of control unit queueing times       00193000
ECMBDEVICEACTIVEONLYTIME DS F Summation of device- active-only times    00194000
ECMBDEVICEBUSYTIME DS F  Summation of device busy times                 00195000
ECMBINITIALCMDRESPTIME DS F Initial command response time               00196000
ECMBINTERRUPTDELAYTIME DS F Interrupt delay time                        00197000
         DS    CL24      Reserved                                       00198000
ECMBECMB EQU   C'ECMB'   Acronym for ECMBname                           00199000
ECMB_LEN EQU   *-ECMB                                                   00200000
.L0005   ANOP                                                           00201000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00202000
         AIF   ('&LIST' EQ 'YES').P4                                    00203000
.P3      ANOP                                                           00204000
         POP   PRINT                                                    00205000
.P4      ANOP                                                           00206000
.P_EXIT  ANOP                                                           00207000
         MEND                                                           00208000
**/ IRAECMB_2:;                                                         00209000
* %IRAECMB_INCLUDED = 'YES';                                            00210000
* %DCL ZCBPRINT CHAR EXT;                                               00211000
* %DEACTIVATE ZCBPRINT;                                                 00212000
* %DCL IRAECMB_LIST CHAR EXT;                                           00213000
* %DEACTIVATE IRAECMB_LIST;                                             00214000
* %IF IRAECMB_LIST = 'NO' !                                             00215000
*    ZCBPRINT = 'NO' %THEN                                              00216000
* %DO;                                                                  00217000
*   @LIST PUSH NOECHO;                                                  00218000
*   @LIST NOASSEMBLE NOECHO;                                            00219000
*   @LIST OFF C NOECHO;                                                 00220000
* %END;                                                                 00221000
*/* Start of PL/X Source                                             */ 00222000
*%DCL Via_Attr   Char;              /* VIA attribute             @L1A*/ 00223000
*%DCL H_Based_Attr Char;            /* ECMB header BASED attribute      00224000
*                                                                @L1A*/ 00225000
*%DCL E_Based_Attr Char;            /* ECMB entry BASED attribute       00226000
*                                                                @L1A*/ 00227000
*                                                                       00228000
*%If ECMBVIA = 'NO' %Then           /* If no VIA attribute then  @L1C*/ 00229000
*  %Via_Attr = '';                  /* Nullify VIA attribute     @L1A*/ 00230000
*%Else                                                         /*@L1A*/ 00231000
*  %Via_Attr = 'Via(CMCTECMBalet)'; /* Set default VIA attribute @L1A*/ 00232000
*                                                                       00233000
*%Select (ECMBBase);                /* Select on ECMB base       @L1A*/ 00234000
*                                                                       00235000
*  %When ('NO')                     /* No basing for ECMB entry  @L1A*/ 00236000
*    %Do;                                                               00237000
*      %H_Based_Attr = 'Based(ECMBPtr)'; /* ECMB header is always based 00238000
*                                                                @L1A*/ 00239000
*      %E_Based_Attr = '';          /* ECMB entry is not based   @L1A*/ 00240000
*    %End;                          /* No basing for ECMB entry  @L1A*/ 00241000
*                                                                       00242000
*  %When ('')                       /* Use default basing        @L1A*/ 00243000
*    %Do;                                                      /*@L1A*/ 00244000
*      %H_Based_Attr = 'Based(ECMBPtr)'; /* Set ECMB header base @L1A*/ 00245000
*      %E_Based_Attr = 'Based(ECMBPtr)'; /* Set ECMB entry base  @L1A*/ 00246000
*    %End;                          /* Use default basing        @L1A*/ 00247000
*                                                                       00248000
*  %Otherwise                       /* Caller defined basing     @L1A*/ 00249000
*    %Do;                                                      /*@L1A*/ 00250000
*      %H_Based_Attr = ECMBBase;    /* Use caller defined value  @L1A*/ 00251000
*      %E_Based_Attr = ECMBBase;    /* Use caller defined value  @L1A*/ 00252000
*    %End;                          /* Caller defined basing     @L1A*/ 00253000
*                                                                       00254000
*%End;                              /* Select on ECMB base       @L1A*/ 00255000
*                                                                       00256000
*DCL                                                                    00257000
*  1 IRAECMB H_Based_Attr Via_Attr,     /* Extended Channel             00258000
*                                          Measurement Block         */ 00259000
*    3 ECMBheader,                      /* Extended Channel             00260000
*                                          Measurement Block header  */ 00261000
*      5 ECMBname          Char(4),     /* Acronym 'ECMB'            */ 00262000
*      5 ECMBlength        Fixed(31),   /* Length of ECMB array      */ 00263000
*      5 ECMBbits          Bit(8),      /* Bits                      */ 00264000
*        7 ECMBsubchannelSet Bit(2),    /* Subchannel set ID         */ 00265000
*        7 *               Bit(6),      /* Reserved                  */ 00266000
*      5 *                 Char(55),    /* Reserved                  */ 00267000
* %IF ECMBBASE ^= 'NO' %THEN            /* If generating the ECMB       00268000
*                                          entry as BASED then   @L1C*/ 00269000
*   %DO;                                                       /*@L1A*/ 00270000
*    3 ECMBentry(*)        Char(64);    /* Array of ECMB entries     */ 00271000
*DCL                                                                    00272000
*  1 ECMB E_Based_Attr Via_Attr,        /* Extended Channel             00273000
*                                          Measurement Block     @L1C*/ 00274000
*   %END;                               /* ECMB entry is based   @L1A*/ 00275000
* %ELSE                                 /* ECMB entry not based  @L1A*/ 00276000
*   %DO;                                                                00277000
*    3 ECMBentry(*),                    /* Array of ECMB entries     */ 00278000
*   %END;                               /* ECMB entry is based   @L1C*/ 00279000
*      5 ECMBSschRschCount   Fixed(32), /* Number of SSCH/RSCH          00280000
*                                          instructions              */ 00281000
*      5 ECMBSampleCount     Fixed(32), /* Number of SSCH/RSCH          00282000
*                                          instructions for which       00283000
*                                          data was collected        */ 00284000
*      5 ECMBConnectTime     Fixed(32), /* Summation of device          00285000
*                                          connect times             */ 00286000
*      5 ECMBPendingTime     Fixed(32), /* Summation of SSCH/RSCH       00287000
*                                          request pending times     */ 00288000
*      5 ECMBDisconnectTime  Fixed(32), /* Summation of subchannel      00289000
*                                          disconnect times          */ 00290000
*      5 ECMBCUqueueingTime  Fixed(32), /* Summation of control unit    00291000
*                                          queueing times            */ 00292000
*      5 ECMBDeviceActiveOnlyTime Fixed(32), /* Summation of device-    00293000
*                                          active-only times         */ 00294000
*      5 ECMBDeviceBusyTime  Fixed(32), /* Summation of device busy     00295000
*                                          times                     */ 00296000
*      5 ECMBInitialCmdRespTime Fixed(32), /* Initial command response  00297000
*                                          time                      */ 00298000
*      5 ECMBInterruptDelayTime  Fixed(32), /* Interrupt delay time  */ 00299000
*      5 *                   Char(24);  /* Reserved                  */ 00300000
*DCL                                                                    00301000
*  ECMBecmb Char(4) Constant('ECMB');   /* Acronym for ECMBname      */ 00302000
*/* End of PL/X Source                                               */ 00303000
* %IF IRAECMB_LIST = 'NO' !                                             00304000
*    ZCBPRINT = 'NO' %THEN                                              00305000
* %DO;                                                                  00306000
*   @LIST POP NOECHO;                                                   00307000
* %END;                                                                 00308000
* %END;                                                                 00309000
