         MACRO                                                                  
         IST6MCDA &ECB=,&EXIT=,&BRANCH=,&OPTCD=,&CONVID=,&SENSE=,      X        
               &AREA=,&RECLEN=,&CONMODE=,&CONTROL=,&CONXMOD=,&CRYPT=,  X        
               &QUALIFY=,&INVALP1=,&INVALP2=,&VTRINA=,&VTRINL=,        X        
               &VTROUTA=,&VTROUTL=                                 @D1C         
.*                                                                              
.* /***** START OF SPECIFICATIONS ************************************/         
.* /*                                                                */         
.* /*  MACRO NAME: IST6MCDA                                          */         
.* /*                                                                */         
.* /*  DESCRIPTIVE NAME: CONTROL = DEALLOC PROCESSOR                 */         
.* /*                                                                */         
.* /*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM               */         
.* /*                                                                */         
.* /*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"*/         
.* /*                                                                */         
.* /*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1994.       */         
.* /*             ALL RIGHTS RESERVED.                               */         
.* /*                                                                */         
.* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -          */         
.* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY       */         
.* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.           */         
.* /*                                                                */         
.* /*             SEE COPYRIGHT INSTRUCTIONS.                        */         
.* /*                                                                */         
.* /*                                                                */         
.* /*  FUNCTION:                                                     */         
.* /*      GENERATES IN-LINE CODE FOR PROCESSING THE                 */         
.* /*      CONTROL=DEALLOC PARAMETER ON THE APPCCMD MACRO.           */         
.* /*                                                                */         
.* /*  NOTES:                                                        */         
.* /*                                                                */         
.* /*  PROCESSOR: ASSEMBLER                                          */         
.* /*                                                                */         
.* /*  CREATED BY:                                                   */         
.* /*                                                                */         
.* /*  INTERNAL MACROS:                                              */         
.* /*      IST6MCUA,IST6MCUP,IST6MCUC,IST6MCUI,IST6MCER              */         
.* /*                                                                */         
.* /*  EXTERNAL REFERENCES: NONE                                     */         
.* /*                                                                */         
.* /*  CHANGE ACTIVITY:                                              */         
.* /*                                                                */         
.* /* $MAC(IST6MCDA),COMP(API),PROD(VTAM): CONTROL=DEALLOC PROCESSOR */         
.* /*                                                                */         
.* /* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS          */         
.* /* ---- -------- ------- ------ ------  ------------------------- */         
.* /* $BA= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION          */         
.* /* $B1= AE@@@AMS HVT3401 890707 460025: SELECTIVE DATA ENCRYPTION */         
.* /* $I1= BD@@@MST APPCE03 911021 510689: APPC Deallocate queueing  */         
.* /* $I2= FF@@@MST APPCFDX 911118 879315: APPC Full-Duplex support  */         
.* /* $L1= KA@@@PLD APPCRR  930721 446638: DCE Security Services     */         
.* /* $U2= P110561  APPCFDX 930909 879315: Allow CONMODE/CONXMOD on  */         
.* /*                                      DEALLOC FLUSH or DATAFLU  */         
.* /* $L2= KA@DR006 APPCRR  940713 576146: Vector Format             */         
.* /* $D1= ID@@@MST FPAPI   941005 510689: Fast Path API for APPC    */         
.* /*                                                                */         
.* /***** END OF SPECIFICATIONS **************************************/         
.*                                                                              
.* A-000000-999999                                             @R495810         
.*                                                                              
         GBLB  &ISTGEN                                                          
         GBLB  &ISTDA                                                           
         AIF   (&ISTDA EQ 1).DAINVKW                                            
*                                                                               
*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM                              
*                                                                               
*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"               
*                                                                               
*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1993.                      
*             ALL RIGHTS RESERVED.                                              
*                                                                               
*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -                         
*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY                      
*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.                          
*                                                                               
*             SEE COPYRIGHT INSTRUCTIONS.                                       
*                                                                               
&ISTDA   SETB  1                                                                
.DAINVKW ANOP                                                                   
         IST6MCUC &CONTROL,CONTROL,INVALKW=&INVALP1                @I1C         
         IST6MCUC &CONTROL,CONTROL,INVALKW=&INVALP2                @I2A         
.*                                           CHECK INVALID APPCCMD              
.DAID    ANOP                                                                   
         AIF   ('&CONVID' EQ '').DAVECT                            @L1C         
         IST6MCUA KWVAL=&CONVID,LOC=RPL6CNVD-ISTRPL6X,BASEREG=14,      X        
               KW=CONVID                                                        
.*                                           PUT CONVID IN APPC AREA            
.DAVECT  ANOP                          ENSURE BOTH PARMS ARE CODED @L1A         
.*                                     OR BOTH ARE NOT CODED       @L1A         
         AIF   (('&VTRINA' EQ '') AND ('&VTRINL' EQ '')).DAVOUT    @D1C         
         AIF   (('&VTRINA' EQ '') OR  ('&VTRINL' EQ '')).DAERVI    @D1C         
         IST6MCUA KWVAL=&VTRINA,LOC=RPL6VAIA-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_ADDRESS                      @D1C         
.*                                     STORE VECTOR AREA INPUT ADDRESS          
.*                                                                 @L1A         
         IST6MCUA KWVAL=&VTRINL,LOC=RPL6VAIL-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_LENGTH,LEN=2                 @D1C         
.*                                     STORE VECTOR AREA INPUT LENGTH           
.*                                                                 @L1A         
         AGO   .DAVOUT                                             @D1C         
.DAERVI  ANOP                                                      @L1A         
         IST6MCER 13,VTRINA,VTRINL     ONLY ONE PARM CODED         @D1C         
.DAVOUT  ANOP                          ENSURE BOTH PARMS ARE CODED              
.*                                     OR BOTH ARE NOT CODED       @D1A         
         AIF   (('&VTROUTA' EQ '') AND ('&VTROUTL' EQ '')).DAQFY   @D1A         
         AIF   (('&VTROUTA' EQ '') OR ('&VTROUTL' EQ '')).DAERVO   @D1A         
         IST6MCUA KWVAL=&VTROUTA,KW=APPL_TO_VTAM_VECTOR_ADDRESS,       X        
               LOC=RPL6VAOA-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT ADDRESS            
.*                                     IN APPC AREA                @D1A         
         IST6MCUA KWVAL=&VTROUTL,KW=APPL_TO_VTAM_VECTOR_LENGTH,LEN=2,  X        
               LOC=RPL6VAOL-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT LENGTH             
.*                                     IN APPC AREA                @D1A         
         AGO   .DAQFY                                              @D1A         
.DAERVO  ANOP                                                      @D1A         
         IST6MCER 13,VTROUTA,VTROUTL   ONLY ONE PARM CODED         @D1A         
.DAQFY   ANOP                                                                   
         AIF   ('&QUALIFY' EQ '').DASENSE                                       
         AIF   ('&CONTROL' EQ 'DEALLOCQ').DAQFY5                   @I1A         
.DAQFY1  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'FLUSH').DAQFY2                                   
         IST6MCUC FLUSH,QUALIFY,INVALKW=(AREA=&AREA,RECLEN=&RECLEN,    X        
               CRYPT=&CRYPT,                                           X        
               SENSE=&SENSE)                                       @U2C         
         AIF   (NOT &ISTGEN).DACMKW3                               @U2C         
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6FLSH                                   
*                                       PUT FLUSH CODE IN APPC AREA             
         AGO   .DACMKW3                                            @U2C         
.DAQFY2  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'CONFIRM').DAQFY3                                 
         IST6MCUC CONFIRM,QUALIFY,                                     X        
               INVALKW=(SENSE=&SENSE,AREA=&AREA,RECLEN=&RECLEN,CRYPT=&CX        
               RYPT)                                               @B1A         
         AIF   (NOT &ISTGEN).DACMKW3                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6CFRM                                   
*                                        PUT CONFIRM CODE IN APPC AREA          
         AGO   .DACMKW3                                                         
.DAQFY3  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'DATAFLU').DAQFY4                                 
         IST6MCUC DATAFLU,QUALIFY,                                     X        
               INVALKW=(SENSE=&SENSE)                              @U2C         
         AIF   (NOT &ISTGEN).DACKPT1                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6DFLU                                   
*                                         PUT DATAFLU CODE IN APPC AREA         
         AGO   .DAAREA                                                          
.DAQFY4  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'DATACON').DAQFY5                                 
         IST6MCUC DATACON,QUALIFY,INVALKW=(SENSE=&SENSE)                        
         AIF   (NOT &ISTGEN).DACKPT1                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6DCON                                   
*                                         PUT DATACON CODE IN APPC AREA         
         AGO   .DAAREA                                                          
.DAQFY5  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'ABNDPROG').DAQFY6                                
         IST6MCUC ABNDPROG,QUALIFY,                                    X        
               INVALKW=(CONMODE=&CONMODE,CONXMOD=&CONXMOD,CRYPT=&CRYPT,X        
               SENSE=&SENSE)                                       @I2C         
         AIF   (NOT &ISTGEN).DACKPT1                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6APRG                                   
*                                        PUT ABNDPROG CODE IN APPC AREA         
         AGO   .DAAREA                                                          
.DAQFY6  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'ABNDSERV').DAQFY7                                
         IST6MCUC ABNDSERV,QUALIFY,                                    X        
               INVALKW=(CONMODE=&CONMODE,CONXMOD=&CONXMOD,CRYPT=&CRYPT,X        
               SENSE=&SENSE)                                       @I2C         
         AIF   (NOT &ISTGEN).DACKPT1                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6ASRV                                   
*                                        PUT ABNDSERV CODE IN APPC AREA         
         AGO   .DAAREA                                                          
.DAQFY7  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'ABNDTIME').DAQFY8                                
         IST6MCUC ABNDTIME,QUALIFY,                                    X        
               INVALKW=(CONMODE=&CONMODE,CONXMOD=&CONXMOD,CRYPT=&CRYPT,X        
               SENSE=&SENSE)                                       @I2C         
         AIF   (NOT &ISTGEN).DACKPT1                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6ATIM                                   
*                                        PUT ABNDTIME CODE IN APPC AREA         
         AGO   .DAAREA                                                          
.DAQFY8  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'ABNDUSER').DAQFY9                                
         IST6MCUC ABNDUSER,QUALIFY,INVALKW=(CRYPT=&CRYPT,              X        
               CONMODE=&CONMODE,CONXMOD=&CONXMOD)                  @I2C         
         AIF   (NOT &ISTGEN).DASENSE                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6AUSR                                   
*                                        PUT ABNDUSER CODE IN APPC AREA         
         AGO   .DASENSE                                                         
.DAQFY9  ANOP                                                                   
         IST6MCER 5,QUALIFY,&QUALIFY                                            
.DASENSE ANOP                                                                   
         AIF   ('&SENSE' EQ '').DAAREA                                          
         IST6MCUI KW=SENSE,KWVAL=&SENSE,LEN=4,                         X        
               LOC=RPL6SNSO-ISTRPL6X,BASEREG=14                                 
.*                           PUT USER SPECIFIED SENSE CODE IN APPC AREA         
.DAAREA  ANOP                                                                   
         AIF   ('&AREA' EQ '').DARLEN                                           
         IST6MCUA KWVAL=&AREA,LOC=RPLAREA-IFGRPL,BASEREG=1,            X        
               KW=DATA_ADDRESS                                                  
.*                                            PUT DATA ADDRESS IN RPL           
.DARLEN  ANOP                                                                   
         AIF   ('&RECLEN' EQ '').DACRYPT                                        
         IST6MCUA KWVAL=&RECLEN,LOC=RPLRLEN-IFGRPL,BASEREG=1,          X        
               KW=DATA_LENGTH                                                   
.*                                            PUT DATA LENGTH IN RPL            
.DACRYPT ANOP                                                    @B1A           
         AIF   ('&CRYPT' EQ '').DACKPT1 CRYPT PARAMETER?         @B1A           
         AIF   ('&CRYPT'(1,3) EQ 'YES').DACRYES CRYPT REQUEST?   @B1A           
         AIF   ('&CRYPT'(1,2) EQ 'NO').DACRYNO CRYPT NON-REQ.?   @B1A           
         MNOTE  4,'CRYPT=&CRYPT INVALID-IGNORED'                 @B1A           
         AGO   .DACKPT1                                          @B1A           
.DACRYES ANOP                                                    @B1A           
         OI    RPLEXTD1-IFGRPL(1),X'08'  SET CRYPT REQUEST ON    @B1A           
         AGO   .DACKPT1                                          @B1A           
.DACRYNO ANOP                                                    @B1A           
         NI    RPLEXTD1-IFGRPL(1),X'F7'  SET CRYPT OFF           @B1A           
.DACKPT1 ANOP                                                                   
         AIF   ('&QUALIFY' EQ 'ABNDPROG').DACMKW2                               
         AIF   ('&QUALIFY' EQ 'ABNDSERV').DACMKW2                               
         AIF   ('&QUALIFY' EQ 'ABNDTIME').DACMKW2                               
         AIF   ('&QUALIFY' EQ 'ABNDUSER').DACMKW2                               
         AIF   ('&CONTROL' EQ 'DEALLOCQ').DACMKW2                  @D1C         
.*                                                                              
.*   QUALIFY=DATACON, INVALID QUALIFY VALUE OR UNSPECIFIED QUALIFY              
.*   BRANCHES TO DACMKW1                                                        
.*                                                                              
.DACMKW1 ANOP                                                                   
         IST6MCUP CONMODE=&CONMODE,OPTCD=&OPTCD,ECB=&ECB,              X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONXMOD=&CONXMOD,             X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES, ASY/SYN IS VALID FOR OPTCD PARAMETER         X        
               CKBUFF=XBUF      XBUFLST/BUFFLST/NBUFFLST IS VALID  @D1C         
.*                              OPCTD PARAMETER                    @D1A         
         AGO   .DAREQ                                                           
.DACMKW2 ANOP                                                                   
         IST6MCUP OPTCD=&OPTCD,ECB=&ECB,EXIT=&EXIT,BRANCH=&BRANCH,     X        
               CKCMODE=NO,         DO NOT CHECK CONMODE OR CONXMOD     X        
               CKSYN=YES,          ASY/SYN IS VALID FOR OPTCD PARAMETERX        
               CKBUFF=NO           BUFFLST/NBUFFLST IS INVALID FOR              
.*                                 OPTCD PARAMETER                              
         AGO   .DAREQ                                                           
.DACMKW3 ANOP                                                                   
         IST6MCUP CONMODE=&CONMODE,OPTCD=&OPTCD,ECB=&ECB,              X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONXMOD=&CONXMOD,             X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES,          ASY/SYN IS VALID FOR OPTCD PARAMETERX        
               CKBUFF=NO           BUFFLST/NBUFFLST IS INVALID     @I2C         
.*                                 OPTCD PARAMETER                              
.DAREQ   ANOP                                                                   
         AIF   (NOT &ISTGEN).DAEXIT                                             
         AIF   ('&CONTROL' EQ 'DEALLOCQ').DAQ                      @I1A         
         MVI   RPL6REQ-ISTRPL6X(14),RPL6DEAL                                    
*                                PUT DEALLOC REQUEST CODE IN APPC AREA          
         AGO   .DAEXIT                                             @I1A         
.DAQ     ANOP                                                      @I1A         
         MVI   RPL6REQ-ISTRPL6X(14),RPL6DEAQ                       @I1A         
*                                PUT DEALLOCQ REQUEST CODE IN APPC AREA         
.DAEXIT  MEND                                                                   
