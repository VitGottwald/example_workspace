*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMDINST                              -02/16/15-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Install WLM Service Definition                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1994, 2008                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7750                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The Install Service Definition routine is given control from   * 00002100
*      the IWMDINST macro.  The Install Service Definition macro will * 00002200
*      complete the parameter list with caller provided data and      * 00002300
*      generate a stacking, program call to the install service.      * 00002400
*                                                                     * 00002500
*      The purpose of this routine is to install the WLM service      * 00002600
*      definition supplied into the WLM couple dataset for the        * 00002700
*      current sysplex. After this service definition is installed in * 00002800
*      the couple dataset all policies contained in it are eligible   * 00002900
*      to be activated in the sysplex.                                * 00003000
*                                                                     * 00003100
*      The service definition is a single logical entity decribed by  * 00003200
*      the service definition descriptor element, defined by          * 00003300
*      IWMSERVD.  The service definition descriptor element contains  * 00003400
*      offsets to the 5 distinct areas that comprise the service      * 00003500
*      definition:                                                    * 00003600
*                                                                     * 00003700
*                                                                     * 00003800
*      o   The general service definition data area.                  * 00003900
*                                                                     * 00004000
*          This data area contains general service definition         * 00004100
*          information like the service definition name and           * 00004200
*          description along with more detailed information like the  * 00004300
*          policy, workload, service class and resource group         * 00004400
*          information.  This area is mapped by the IWMSVDEF.         * 00004500
*                                                                     * 00004600
*      o   The service definition classification rules data area.     * 00004700
*                                                                     * 00004800
*          This data area contains the definitions of the             * 00004900
*          classification rules and classification groups that govern * 00005000
*          which service and report classes are associated with       * 00005100
*          incoming work when the work enters MVS.  This area is      * 00005200
*          mapped by IWMSVDCR.                                        * 00005300
*                                                                     * 00005400
*      o   The notepad data area.                                     * 00005500
*                                                                     * 00005600
*          This data area contains any comments (or change history)   * 00005700
*          that an installation chooses to associate with the service * 00005800
*          definition.  This area is mapped by IWMSVNPA.              * 00005900
*                                                                     * 00006000
*      o   The service definition application environment data area.  * 00006100
*                                                                     * 00006200
*          This data area contains the definitions of the application * 00006300
*          environments.  This area is mapped by IWMSVAEA.            * 00006400
*                                                                     * 00006500
*      o   The service definition scheduling environment data area.   * 00006600
*                                                                     * 00006700
*          This data area contains the definitions of the scheduling  * 00006800
*          environments.  This area is mapped by IWMSVSEA.            * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*      The Service definition descriptor element and all five data    * 00007300
*      areas of the service definition must be passed as inputs to    * 00007400
*      the install service definition service.  Even if certain data  * 00007500
*      areas are non-applicable, for example no notepad information   * 00007600
*      exists, the data area header information must still be         * 00007700
*      completely filled in and pointed to by the descriptor element. * 00007800
*                                                                     * 00007900
*      All input data areas must represent a valid service definition * 00008000
*      in order for the install to occur.  If validity checking for   * 00008100
*      any section of the service definition fails, the entire        * 00008200
*      install process is aborted and a return and reason code        * 00008300
*      indicating that validation of the service definition failed is * 00008400
*      returned.  In addition, a reason code describing the specific  * 00008500
*      error detected is returned in the variable specified on        * 00008600
*      keyword VALCHECK_RSN and an offset to the specific section of  * 00008700
*      the service definition where the error was detected is         * 00008800
*      returned in the variable specified on the VALCHECK_OFFSET      * 00008900
*      keyword.  Validity check processing occurs until the first     * 00009000
*      error is detected and only a single error is identified on an  * 00009100
*      invocation of this macro.                                      * 00009200
*                                                                     * 00009300
*      The caller can also request that the install occurs only if    * 00009400
*      the service definition that was used as a base for the         * 00009500
*      definition being installed is still the currently installed    * 00009600
*      service definition in the WLM couple dataset.  This allows the * 00009700
*      caller the ability to prevent inadvertent over-writes of       * 00009800
*      service defininition updates that some other user (caller)     * 00009900
*      made in the window, from when the service definition was       * 00010000
*      initially read, to when the current install with the updated   * 00010100
*      service definition was issued.  For more details, refer to the * 00010200
*      COND keyword below.                                            * 00010300
*                                                                     * 00010400
*      The parameter list must be in the caller's primary address     * 00010500
*      space or be addressable by the dispatchable unit access list.  * 00010600
*                                                                     * 00010700
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00010800
*                                                                     * 00010900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00011000
*                                                                     * 00011100
*01* ENVIRONMENT:                                                     * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*      Dispatchable unit mode: Task mode.                             * 00011500
*                                                                     * 00011600
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00011700
*                        key.                                         * 00011800
*                                                                     * 00011900
*                        The caller must have update authority to the * 00012000
*                        resource MVSADMIN.WLM.POLICY in the FACILITY * 00012100
*                        class.                                       * 00012200
*                                                                     * 00012300
*      AMODE:            31-bit.                                      * 00012400
*                                                                     * 00012500
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00012600
*                                                                     * 00012700
*      ASC mode:         Primary or Access Register.  If in Access    * 00012800
*                        Register ASC mode, specify SYSSTATE          * 00012900
*                        ASCENV=AR before invoking this macro.        * 00013000
*                                                                     * 00013100
*      Interrupt status: Enabled for I/O and external interrupts.     * 00013200
*                                                                     * 00013300
*      Locks:            No locks held.                               * 00013400
*                                                                     * 00013500
*      Control parameters:     All parameter areas must reside in     * 00013600
*                        current primary or be addressable by the     * 00013700
*                        dispatchable unit access list.               * 00013800
*                                                                     * 00013900
*                        In addition, all parameters must reside in   * 00014000
*                        storage of the same key as the caller is     * 00014100
*                        executing in when the macro is invoked       * 00014200
*                        unless the the caller is in key 0.           * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*01* PROGRAMMING REQUIREMENTS:                                        * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*    1.  The macro CVT must be included to use this macro.            * 00015000
*                                                                     * 00015100
*    2.  The macro IWMYCON must be included to use this macro.        * 00015200
*                                                                     * 00015300
*    3.  The macro IWMPB must be in the library concatenation, since  * 00015400
*        it is included by IWMYCON.                                   * 00015500
*                                                                     * 00015600
*    4.  Note that the high order halfword of register 0, and the     * 00015700
*        reason code variable when specified, may be non-zero and     * 00015800
*        represents diagnostic data which is NOT part of the external * 00015900
*        interface.  The high order halfword should thus be excluded  * 00016000
*        from comparison with the reason code values described above. * 00016100
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00016200
*        be used for this purpose.                                    * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*01* RESTRICTIONS:                                                    * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*    1.  This macro may not be used prior to the completion of WLM    * 00017000
*        address space initialization                                 * 00017100
*                                                                     * 00017200
*    2.  The caller cannot have an EUT FRR established.               * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*01* INPUT REGISTER INFORMATION:                                      * 00017700
*                                                                     * 00017800
*    Before issuing the IWMDINST macro, the caller does not have to   * 00017900
*    place any information into any register unless using it in       * 00018000
*    register notation for a particular parameter, or using it as a   * 00018100
*    base register.                                                   * 00018200
*                                                                     * 00018300
*01* OUTPUT REGISTER INFORMATION:                                     * 00018400
*                                                                     * 00018500
*    When control returns to the caller, the GPRs contain:            * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*    REGISTER  CONTENTS                                               * 00018900
*                                                                     * 00019000
*    0         Reason code if GR15 return code is non-zero            * 00019100
*                                                                     * 00019200
*    1         Used as work registers by the system                   * 00019300
*                                                                     * 00019400
*    2-13      Unchanged                                              * 00019500
*                                                                     * 00019600
*    14        Used as a work register by the system                  * 00019700
*                                                                     * 00019800
*    15        Return code                                            * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*    When control returns to the caller, the ARs contain:             * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*    REGISTER  CONTENTS                                               * 00020600
*                                                                     * 00020700
*    0-1       Used as work registers by the system                   * 00020800
*                                                                     * 00020900
*    2-13      Unchanged                                              * 00021000
*                                                                     * 00021100
*    14-15     Used as work registers by the system                   * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*    Some callers depend on register contents remaining the same      * 00021600
*    before and after issuing a service.  If the system changes the   * 00021700
*    contents of registers on which the caller depends, the caller    * 00021800
*    must save them before issuing the service, and restore them      * 00021900
*    after the system returns control.                                * 00022000
*                                                                     * 00022100
*01* PERFORMANCE IMPLICATIONS:                                        * 00022200
*                                                                     * 00022300
*    None                                                             * 00022400
*                                                                     * 00022500
*01* SYNTAX:                                                          * 00022600
*                                                                     * 00022700
*Ýxlabel¨  IWMDINST     SERVD_AREA=xservd_area                        * 00022800
*                    ÐÝ,TYPE=HEX¨                                     * 00022900
*                    ¿Ý,TYPE=XML                                      * 00023000
*                          ,XML_LEN=xxml_len¨                         * 00023100
*                     Ý,QRY_BASEID=xqry_baseid¨                       * 00023200
*                      ,PRODUCT_ID=xproduct_id                        * 00023300
*                      ,VALCHECK_RSN=xvalcheck_rsn                    * 00023400
*                      ,VALCHECK_OFFSET=xvalcheck_offset              * 00023500
*                    Ð ,COND=YES                                      * 00023600
*                    !     ,IN_BASEID=xin_baseid                      * 00023700
*                    ¿ ,COND=NO                                       * 00023800
*                     Ý,RETCODE=xretcode¨                             * 00023900
*                     Ý,RSNCODE=xrsncode¨                             * 00024000
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00024100
*                    ÐÝ,MF=S¨                                         * 00024200
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00024300
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*      Where:                                                         * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*      Ýxlabel¨                                                       * 00025000
*          is an optional symbol, starting in column 1, that is the   * 00025100
*          name on the IWMDINST macro invocation.  The name must      * 00025200
*          conform to the rules for an ordinary assembler language    * 00025300
*          symbol.                                                    * 00025400
*          DEFAULT: No name.                                          * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*      SERVD_AREA=xservd_area                                         * 00026000
*          is the name (RS-type), or address in register (2)-(12), of * 00026100
*          a required character input variable specifying an area     * 00026200
*          that contains the service definition data to be installed. * 00026300
*          This area is defined by the IWMSERVD macro.                * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*      ÝTYPE=»HEX!XMLº¨                                               * 00026900
*          is an optional keyword input indicating in which format    * 00027000
*          the service definition will be provided.                   * 00027100
*          DEFAULT: HEX                                               * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*          ÝTYPE=HEX¨                                                 * 00027500
*              The service definition needs to be provided in HEX     * 00027600
*              format mapped by IWMSERVD (default).                   * 00027700
*                                                                     * 00027800
*          ÝTYPE=XML                                                  * 00027900
*              The service definition needs to be provided in XML     * 00028000
*              format.  Note: This option is ment to be used by       * 00028100
*              validating user interfaces.                            * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*              XML_LEN=xxml_len¨                                      * 00028500
*                  is the name (RS-type), or address in register      * 00028600
*                  (2)-(12), of a required fullword input variable to * 00028700
*                  contain the length of the area specified on        * 00028800
*                  SERVD_AREA keyword to contain the service          * 00028900
*                  definition data in XML format.                     * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*      ÝQRY_BASEID=xqry_baseid¨                                       * 00029900
*          is the name (RS-type), or address in register (2)-(12), of * 00030000
*          an optional character output variable specifying an area   * 00030100
*          to contain the identifier of the service definition that   * 00030200
*          is currently installed on the WLM couple dataset.  This    * 00030300
*          area is mapped by the SVIDSSVD DSECT in macro IWMSVIDS.    * 00030400
*          When this keyword is specified, the data is returned when  * 00030500
*          the return code indicates successful completion (return    * 00030600
*          code 0) regardless of whether COND(YES) or COND(NO) was    * 00030700
*          specified. In addition, this data is returned on a         * 00030800
*          conditional request (COND(YES)) if the return and reason   * 00030900
*          code indicate that specified IN_BASEID does not match the  * 00031000
*          baseid of the installed service definition (return code 4, * 00031100
*          reason code '0413'X).                                      * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*      PRODUCT_ID=xproduct_id                                         * 00031700
*          is the name (RS-type), or address in register (2)-(12), of * 00031800
*          a required 32 character input variable specifying an area  * 00031900
*          that contains an identifier of the product (application)   * 00032000
*          performing the install.  The identifier should include     * 00032100
*          information like product name, a unique version/release    * 00032200
*          identifier, and any other information that can help        * 00032300
*          identify your product.  This area is mapped by the         * 00032400
*          SVIDSPRD DSECT in the IWMSVIDS macro.                      * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*      VALCHECK_RSN=xvalcheck_rsn                                     * 00033000
*          is the name (RS-type), or address in register (2)-(12), of * 00033100
*          a required fullword output variable that will contain the  * 00033200
*          reason code identifying the specific error in the input    * 00033300
*          service definition found during validity checking.  This   * 00033400
*          reason code is only returned if validation of the input    * 00033500
*          service definition fails and a primary return code of 8    * 00033600
*          and reason code of xxxx083D, xxxx08B2 or xxxx08B5 is       * 00033700
*          returned.  In case of xxxx083D and xxxx08B5 the            * 00033800
*          explanation can be found in the book "MVS Programming:     * 00033900
*          Workload Management Services". If the primary reason code  * 00034000
*          is xxxx08B2, the explanation can be found in the book "XML * 00034100
*          System Services Users Guide and Reference".                * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*      VALCHECK_OFFSET=xvalcheck_offset                               * 00034700
*          is the name (RS-type), or address in register (2)-(12), of * 00034800
*          a required fullword output variable that will contain the  * 00034900
*          offset identifying the specific error in the input service * 00035000
*          definition found during validity checking.  If the primary * 00035100
*          reason code is xxxx083D and the service definition type is * 00035200
*          HEX, the variable contains the offset from the beginning   * 00035300
*          of the service definition (IWMSERVD) to the section of the * 00035400
*          input service definition where validity check processing   * 00035500
*          found an error described by the reason code returned in    * 00035600
*          VALCHECK_RSN.  If the primary reason code is xxxx083D and  * 00035700
*          the service definition type is XML, the VALCHECK_OFFSET    * 00035800
*          has no meaning.  If the primary reason code is xxxx08B2 or * 00035900
*          xxx08B5, the variable contains the offset from the         * 00036000
*          beginning of the service definition in XML format.  This   * 00036100
*          offset is returned under the same conditions as when       * 00036200
*          VALCHECK_RSN is returned.                                  * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*      COND=»YES!NOº                                                  * 00036800
*          is a required keyword input which indicates whether        * 00036900
*          checking is performed prior to the install, to determine   * 00037000
*          if the service definition that the input definition was    * 00037100
*          based on is still the currently installed service          * 00037200
*          definition (i.e. another user has not made updates).       * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*          COND=YES                                                   * 00037600
*                                                                     * 00037700
*              indicates that the input service definition should     * 00037800
*              only be installed if the identifier of currently       * 00037900
*              installed service definition matches the base          * 00038000
*              identifier passed on IN_BASEID keyword. This allows    * 00038100
*              the user to detect changes in the installed service    * 00038200
*              definition, since the last extract was done, and       * 00038300
*              allows the user to confirm whether the install should  * 00038400
*              still occur.                                           * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*              IN_BASEID=xin_baseid                                   * 00038800
*                  is the name (RS-type), or address in register      * 00038900
*                  (2)-(12), of a required character input variable   * 00039000
*                  specifying an area that contains the identifier of * 00039100
*                  the service definition that was used as a base for * 00039200
*                  the service definition being installed.  This area * 00039300
*                  is mapped by the SVIDSSVD DESCT in macro IWMSVIDS. * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*          COND=NO                                                    * 00039800
*              indicates that the input service definition should be  * 00039900
*              installed unconditionally.                             * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*      ÝRETCODE=xretcode¨                                             * 00040700
*          is the name (RS-type) of an optional fullword output       * 00040800
*          variable, or register (2)-(12) or (15), into which the     * 00040900
*          return code is to be copied from GPR 15.  If you specify   * 00041000
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00041100
*          the value will be left in GPR 15.                          * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*      ÝRSNCODE=xrsncode¨                                             * 00041700
*          is the name (RS-type) of an optional fullword output       * 00041800
*          variable into which the reason code is to be copied from   * 00041900
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00042000
*          R0 (within or without parentheses), the value will be left * 00042100
*          in GPR 0.                                                  * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00042700
*          is an optional byte input decimal value in the "0-1" range * 00042800
*          that specifies the macro version.  PLISTVER is the only    * 00042900
*          key allowed on the list form of MF and determines which    * 00043000
*          parameter list is generated.  The macro keys associated    * 00043100
*          with each supported version of the macro are listed in     * 00043200
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00043300
*          instead of a number, and the parameter list will be of the * 00043400
*          largest size currently supported. This size may grow from  * 00043500
*          release to release (thus possibly affecting the amount of  * 00043600
*          storage needed by your program).  If your program can      * 00043700
*          tolerate this, IBM recommends that you always specify MAX  * 00043800
*          when creating the list form parameter list as that will    * 00043900
*          ensure that the list form parameter list is always long    * 00044000
*          enough to hold whatever parameters might be specified on   * 00044100
*          the execute form.                                          * 00044200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00044300
*          default is the lowest version which allows all of the      * 00044400
*          parameters specified on the invocation to be processed.    * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*      ÝMF=»S!L!Eº¨                                                   * 00045000
*          is an optional keyword input which specifies the macro     * 00045100
*          form.                                                      * 00045200
*          DEFAULT: S                                                 * 00045300
*                                                                     * 00045400
*                                                                     * 00045500
*          ÝMF=S¨                                                     * 00045600
*              specifies the standard form of the macro.  The "S"     * 00045700
*              form generates code to put the parameters into an      * 00045800
*              in-line parameter list and invoke the desired service. * 00045900
*              Full checking for required macro keys is done along    * 00046000
*              with supplying defaults for omitted optional           * 00046100
*              parameters.                                            * 00046200
*                                                                     * 00046300
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00046400
*              specifies the list form of the macro.  The "L" form    * 00046500
*              defines an area to be used for the parameter list.     * 00046600
*              Only the PLISTVER key may be specified on the          * 00046700
*              invocation.  All other macro parameters are flagged as * 00046800
*              errors.  If PLISTVER is not specified, the original    * 00046900
*              parameter list definition is used.                     * 00047000
*                                                                     * 00047100
*            ,xmfctrl                                                 * 00047200
*              is a required input.  It is the name of a storage area * 00047300
*              for the parameter list.                                * 00047400
*                                                                     * 00047500
*            »,xmfattr!0Dº                                            * 00047600
*              is an optional 60 character input string that varies   * 00047700
*              from 1 to 60 characters. Use it to force boundary      * 00047800
*              alignment of the parameter list. Use only 0F or 0D.    * 00047900
*              DEFAULT: 0D which forces the parameter list to a       * 00048000
*              doubleword boundary.                                   * 00048100
*                                                                     * 00048200
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00048300
*              specifies the execute form of the macro.  The "E" form * 00048400
*              generates code to put the parameters into the          * 00048500
*              parameter list specified by xmfctrl and provides full  * 00048600
*              syntax checking with default setting.                  * 00048700
*                                                                     * 00048800
*            ,xmfctrl                                                 * 00048900
*              is a required input.  It is the name (RS-type), or     * 00049000
*              address in register (1)-(12), of a storage area for    * 00049100
*              the parameter list.                                    * 00049200
*                                                                     * 00049300
*            »,COMPLETEº                                              * 00049400
*              is an optional keyword input which specifies the       * 00049500
*              degree of macro parameter syntax checking.             * 00049600
*              DEFAULT: COMPLETE                                      * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*              COMPLETE                                               * 00050000
*                  Checking for required macro keys is done and       * 00050100
*                  defaults are supplied for omitted optional         * 00050200
*                  parameters.                                        * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*01* RETURN CODES:                                                    * 00051100
*                                                                     * 00051200
*                                                                     * 00051300
*            0    Name: IwmRetCodeOk                                  * 00051400
*                                                                     * 00051500
*                 Meaning: Successful completion.                     * 00051600
*                                                                     * 00051700
*                 Action: None required.                              * 00051800
*                                                                     * 00051900
*            4    Name: IwmRetCodeWarning                             * 00052000
*                                                                     * 00052100
*                 Meaning: Successful completion, unusual conditions  * 00052200
*                 noted.                                              * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*                 HEX REASON  MEANING/ACTION                          * 00052600
*                 CODE                                                * 00052700
*                                                                     * 00052800
*                 xxxx0413    Name: IwmRsnCodeIdsDontMatch            * 00052900
*                                                                     * 00053000
*                             Meaning:  COND=YES was specified on the * 00053100
*                             IWMDINST macro, yet the service         * 00053200
*                             definition identifier specified on the  * 00053300
*                             IN_BASEID keyword did not match the     * 00053400
*                             identifier of the installed service     * 00053500
*                             definition.  The identifier of the      * 00053600
*                             currently installed service definition  * 00053700
*                             is returned in the area specified on    * 00053800
*                             the QRY_BASEID keyword.                 * 00053900
*                                                                     * 00054000
*                             Action: None required.                  * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*            8    Name: IwmRetCodeInvocError                          * 00054500
*                                                                     * 00054600
*                 Meaning: Invalid invocation environment or          * 00054700
*                 parameters.                                         * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                 HEX REASON  MEANING/ACTION                          * 00055100
*                 CODE                                                * 00055200
*                                                                     * 00055300
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00055400
*                                                                     * 00055500
*                             Meaning:  Caller is in SRB mode.        * 00055600
*                                                                     * 00055700
*                             Action: Avoid requesting this function  * 00055800
*                             while in SRB mode.                      * 00055900
*                                                                     * 00056000
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00056100
*                                                                     * 00056200
*                             Meaning: Caller is disabled.            * 00056300
*                                                                     * 00056400
*                             Action: Avoid requesting this function  * 00056500
*                             while disabled.                         * 00056600
*                                                                     * 00056700
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00056800
*                                                                     * 00056900
*                             Meaning: Caller is locked.              * 00057000
*                                                                     * 00057100
*                             Action: Avoid requesting this function  * 00057200
*                             while locked.                           * 00057300
*                                                                     * 00057400
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00057500
*                                                                     * 00057600
*                             Meaning:  Caller has EUT FRR            * 00057700
*                             established.                            * 00057800
*                                                                     * 00057900
*                             Action: Avoid requesting this function  * 00058000
*                             with an EUT FRR set.                    * 00058100
*                                                                     * 00058200
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00058300
*                                                                     * 00058400
*                             Meaning: Caller invoked service while   * 00058500
*                             DATOFF                                  * 00058600
*                                                                     * 00058700
*                             Action: Avoid requesting this function  * 00058800
*                             in this environment.                    * 00058900
*                                                                     * 00059000
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00059100
*                                                                     * 00059200
*                             Meaning: Caller invoked service but was * 00059300
*                             in 24 bit addressing mode.              * 00059400
*                                                                     * 00059500
*                             Action: Request this function only when * 00059600
*                             you are in 31 bit addressing mode.      * 00059700
*                                                                     * 00059800
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00059900
*                                                                     * 00060000
*                             Meaning:  Reserved field in parameter   * 00060100
*                             list was non-zero.                      * 00060200
*                                                                     * 00060300
*                             Action: Check for possible storage      * 00060400
*                             overlay of the parameter list.          * 00060500
*                                                                     * 00060600
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00060700
*                                                                     * 00060800
*                             Meaning: Version number in parameter    * 00060900
*                             list is not valid or the length         * 00061000
*                             specified is incorrect.                 * 00061100
*                                                                     * 00061200
*                             Action: Check for possible storage      * 00061300
*                             overlay of the parameter list.          * 00061400
*                                                                     * 00061500
*                 xxxx0829    Name: IwmRsnCodeBadOptions              * 00061600
*                                                                     * 00061700
*                             Meaning:  Parameter list omits required * 00061800
*                             parameters or supplies mutually         * 00061900
*                             exclusive parameters or provides data   * 00062000
*                             associated with options not selected.   * 00062100
*                                                                     * 00062200
*                             Action: Check for possible storage      * 00062300
*                             overlay of the parameter list.          * 00062400
*                                                                     * 00062500
*                 xxxx0830    Name: IwmRsnCodeBadAlet                 * 00062600
*                                                                     * 00062700
*                             Meaning:  Caller has passed an invalid  * 00062800
*                             ALET.                                   * 00062900
*                                                                     * 00063000
*                             Action: Check for possible storage      * 00063100
*                             overlay of the parameter list or        * 00063200
*                             variable.                               * 00063300
*                                                                     * 00063400
*                 xxxx083D    Name: IwmRsnCodeBadServDI               * 00063500
*                                                                     * 00063600
*                             Meaning:  Caller has passed a Service   * 00063700
*                             Definition area that failed validation. * 00063800
*                                                                     * 00063900
*                             Action:  See values in VALCHECK_RSN and * 00064000
*                             VALCHECK_OFFSET parameters for more     * 00064100
*                             information concerning the specific     * 00064200
*                             failure.                                * 00064300
*                                                                     * 00064400
*                 xxxx0841    Name: IwmRsnCodeXMemMode                * 00064500
*                                                                     * 00064600
*                             Meaning:  Caller is in cross memory     * 00064700
*                             mode.                                   * 00064800
*                                                                     * 00064900
*                             Action: Invoke the function in          * 00065000
*                             non-cross memory mode.                  * 00065100
*                                                                     * 00065200
*                 xxxx085B    Name: IwmRsnCodeNoSERVDArea             * 00065300
*                                                                     * 00065400
*                             Meaning:  Caller invoked service        * 00065500
*                             without a required SERVD area or the    * 00065600
*                             SERVD area address is 0.                * 00065700
*                                                                     * 00065800
*                             Action: Check for possible storage      * 00065900
*                             overlay of the parameter list or        * 00066000
*                             variable.                               * 00066100
*                                                                     * 00066200
*                 xxxx08B2    Name: IwmRsnCodeParserError             * 00066300
*                                                                     * 00066400
*                             Meaning:  The XML parser was not able   * 00066500
*                             to parse the service definition XML     * 00066600
*                             document.                               * 00066700
*                                                                     * 00066800
*                             Action:  See values in VALCHECK_RSN and * 00066900
*                             VALCHECK_OFFSET parameters for more     * 00067000
*                             information concerning the specific     * 00067100
*                             failure.  The XML parser reason codes   * 00067200
*                             can be found in the book:  "XML System  * 00067300
*                             Services Users Guide and Reference".    * 00067400
*                                                                     * 00067500
*                 xxxx08B3    Name: IwmRsnCodeXmlZeroLen              * 00067600
*                                                                     * 00067700
*                             Meaning:  The length of the provided    * 00067800
*                             XML service definition is zero.         * 00067900
*                                                                     * 00068000
*                             Action:  Provide the correct length of  * 00068100
*                             the service definition.                 * 00068200
*                                                                     * 00068300
*                 xxxx08B5    Name: IwmRsnCodeXmlInvalid              * 00068400
*                                                                     * 00068500
*                             Meaning:  The XML parser was not able   * 00068600
*                             to parse the service definition XML     * 00068700
*                             document.                               * 00068800
*                                                                     * 00068900
*                             Action:  See values in VALCHECK_RSN and * 00069000
*                             VALCHECK_OFFSET parameters for more     * 00069100
*                             information concerning the specific     * 00069200
*                             failure.  The reason codes can be found * 00069300
*                             in the book:  "MVS Programming:         * 00069400
*                             Workload Management Services".          * 00069500
*                                                                     * 00069600
*                                                                     * 00069700
*                                                                     * 00069800
*            C    Name: IwmRetCodeEnvError                            * 00069900
*                                                                     * 00070000
*                 Meaning: Environmental error.                       * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*                 HEX REASON  MEANING/ACTION                          * 00070400
*                 CODE                                                * 00070500
*                                                                     * 00070600
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00070700
*                                                                     * 00070800
*                             Meaning:  Storage is not available for  * 00070900
*                             the request.                            * 00071000
*                                                                     * 00071100
*                             Action: There is a storage shortage.    * 00071200
*                             The function may work successfully at a * 00071300
*                             later time.                             * 00071400
*                                                                     * 00071500
*                 xxxx0C0E    Name: IwmRsnCodeInsufAccess             * 00071600
*                                                                     * 00071700
*                             Meaning:  The caller does not have      * 00071800
*                             update authority to the RACF resource   * 00071900
*                             MVSADMIN.WLM.POLICY in the FACILITY     * 00072000
*                             class.                                  * 00072100
*                                                                     * 00072200
*                             Action: Invoke the function when the    * 00072300
*                             condition is fulfilled.                 * 00072400
*                                                                     * 00072500
*                 xxxx0C0F    Name: IwmRsnCodeCDSNotAvail             * 00072600
*                                                                     * 00072700
*                             Meaning:  A couple dataset for WLM has  * 00072800
*                             not been defined or it has been defined * 00072900
*                             but this system does not have           * 00073000
*                             connectivity to the dataset.            * 00073100
*                                                                     * 00073200
*                             Action: No action required.             * 00073300
*                                                                     * 00073400
*                 xxxx0C10    Name: IwmRsnCodeCDSTooSmall             * 00073500
*                                                                     * 00073600
*                             Meaning:  WLM CDS is too small to       * 00073700
*                             process the request.                    * 00073800
*                                                                     * 00073900
*                             Action: No action required.             * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*            10   Name: IwmRetCodeCompError                           * 00074400
*                                                                     * 00074500
*                 Meaning: Component error.                           * 00074600
*                                                                     * 00074700
*                                                                     * 00074800
*                 HEX REASON  MEANING/ACTION                          * 00074900
*                 CODE                                                * 00075000
*                                                                     * 00075100
*                 xxxx0F0A    Name: IwmRsnCodeEndOfBuffer             * 00075200
*                                                                     * 00075300
*                             Meaning:  Internal error.               * 00075400
*                                                                     * 00075500
*                             Action:  Contact IBM.                   * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*                                                                     * 00075900
*                                                                     * 00076000
*                                                                     * 00076100
*                                                                     * 00076200
*01* REASON CODES:                                                    * 00076300
*                                                                     * 00076400
*       A unique reason code will be returned whenever the return     * 00076500
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00076600
*       under their corresponding return code.  Reason code and       * 00076700
*       return code constants are defined within IWMYCON.  Note that  * 00076800
*       the high order halfword of register 0, and the reason code    * 00076900
*       variable when specified, may be non-zero and represents       * 00077000
*       diagnostic data which is NOT part of the external interface.  * 00077100
*       The high order halfword should thus be excluded from          * 00077200
*       comparison with the reason code values described above.  The  * 00077300
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00077400
*       used for this purpose.                                        * 00077500
*                                                                     * 00077600
*01* ABEND CODES:                                                     * 00077700
*                                                                     * 00077800
*                                                                     * 00077900
*       1C7       WLM Abend                                           * 00078000
*                                                                     * 00078100
*                                                                     * 00078200
*                                                                     * 00078300
*01* ABEND REASON CODES:                                              * 00078400
*                                                                     * 00078500
*       REASON    ABEND                                               * 00078600
*       CODE      CODE      DESCRIPTION                               * 00078700
*       ××××××××  ××××××××  ×××××××××××                               * 00078800
*                                                                     * 00078900
*                                                                     * 00079000
*       0Axx0005  1C7       An attempt to reference caller's          * 00079100
*                           parameters caused an OC4 abend.           * 00079200
*                                                                     * 00079300
*                                                                     * 00079400
*                                                                     * 00079500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00079600
*                                                                     * 00079700
*02*   PROCESSOR:  ASSEM                                              * 00079800
*                                                                     * 00079900
*01* COMPONENT:  SCWLM                                                * 00080000
*                                                                     * 00080100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00080200
*                                                                     * 00080300
*01* MACRO USAGE NOTES:                                               * 00080400
*                                                                     * 00080500
*                                                                     * 00080600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00080700
*        global macro variable.  Any value other than 'NO' will       * 00080800
*        result in the macro expansion being printed.  The default is * 00080900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00081000
*        variable should be set.                                      * 00081100
*                                                                     * 00081200
*                    GBLC &ZPRINT                                     * 00081300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00081400
*                                                                     * 00081500
*                                                                     * 00081600
*    2.  The IWMDINST macro supports multiple versions. The macro key * 00081700
*        list  below  contains the version level in which the key was * 00081800
*        first  introduced.  Positionals  are  identified by the word * 00081900
*        'Positional'  followed by the numeric value of its position. * 00082000
*        Nested  positionals  are  preceded  by their outer key.  The * 00082100
*        lowest value represents the original version and the highest * 00082200
*        value  represents  the  most  recent version of the IWMDINST * 00082300
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00082400
*        least  as high as the highest version number of all the keys * 00082500
*        being used.                                                  * 00082600
*                                                                     * 00082700
*        VERSION   KEY                                                * 00082800
*                                                                     * 00082900
*              0      COND                                            * 00083000
*                     IN_BASEID                                       * 00083100
*                     PRODUCT_ID                                      * 00083200
*                     QRY_BASEID                                      * 00083300
*                     SERVD_AREA                                      * 00083400
*                     VALCHECK_OFFSET                                 * 00083500
*                     VALCHECK_RSN                                    * 00083600
*              1      TYPE                                            * 00083700
*                     XML_LEN                                         * 00083800
*                                                                     * 00083900
*                                                                     * 00084000
*                                                                     * 00084100
*01* CHANGE ACTIVITY:                                                 * 00084200
*                                                                     * 00084300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00084400
*                                                                     * 00084500
*    $L0=WLMRM    HBB5520 940109 PD88CT:                              * 00084600
*    $L1=WLMP     HBB6603 951012 PD88RK:  Comments on application     * 00084700
*                                         environment data area       * 00084800
*    $P1=PSY0315  JBB6604 970225 PDB9RK:  Document reason code -      * 00084900
*                                         IwmRsnCodeXMemMode          * 00085000
*    $P2=PSY0321  JBB6604 970225 PDB9RK:  Document abend code - 1C7   * 00085100
*    $P3=PSY0322  JBB6604 970225 PDB9RK:  Authorization statement is  * 00085200
*                                         incorrect                   * 00085300
*    $P4=PSY0571  JBB6604 970401 PDB9DB:  Add SVSEA to prolog         * 00085400
*    $P5=LPOLMP   HBB7750 070301 D3241GV:  Add XML support            * 00085500
*    $P6=ME28290  HBB77A0 150210 D3241MG:  Doc updates                * 00085600
****** END OF SPECIFICATIONS *****************************************/ 00085700
*/********************************************************************* 00085800
         MACRO                                                          00085900
&XLABEL  IWMDINST &SERVD_AREA=,&TYPE=,&XML_LEN=,&QRY_BASEID=,          *00086000
               &PRODUCT_ID=,&VALCHECK_RSN=,&VALCHECK_OFFSET=,&COND=,   *00086100
               &IN_BASEID=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=          00086200
.*                                                                      00086300
*                     MACDATE -02/16/15-<1>                             00086400
.*                                                                      00086500
.*******************************************************************    00086600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00086700
.*******************************************************************    00086800
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00086900
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00087000
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00087100
.*                                                                      00087200
                     GBLC  &ZIWMDINST  YES=MACRO USED AT LEAST ONCE     00087300
.*******************************************************************    00087400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00087500
.*******************************************************************    00087600
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00087700
                     LCLC  &ZCNDX      SYSNDX CHARACTERS                00087800
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00087900
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00088000
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00088100
                     LCLA  &ZAWRK      USED AS A WORK AREA              00088200
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00088300
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00088400
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00088500
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00088600
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00088700
                     LCLC  &ZMAC_G     "G" or null                      00088800
&ZMAC_G              SETC  ''                                           00088900
                     LCLC  &ZMAC_LR                                     00089000
&ZMAC_LR             SETC  'LR'                                         00089100
                     LCLC  &ZMAC_L                                      00089200
&ZMAC_L              SETC  'L'                                          00089300
                     LCLC  &ZMAC_ST                                     00089400
&ZMAC_ST             SETC  'ST'                                         00089500
                     LCLC  &ZMAC_LLGT                                   00089600
&ZMAC_LLGT           SETC  'L'                                          00089700
                     LCLC  &ZMAC_LGR                                    00089800
&ZMAC_LGR            SETC  'LR'                                         00089900
                     LCLC  &ZMAC_LG                                     00090000
&ZMAC_LG             SETC  'L'                                          00090100
                     LCLC  &ZMAC_STG                                    00090200
&ZMAC_STG            SETC  'ST'                                         00090300
                     LCLA  &ZMACRET    MACRO RETURN CODE                00090400
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00090500
.*                                                                      00090600
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00090700
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00090800
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00090900
                     LCLC  &ZENDBASEPL          End of base PL          00091000
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00091100
.*******************************************************************    00091200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00091300
.*******************************************************************    00091400
                     LCLA  &ZI         INDEX FOR ARRAY                  00091500
                     LCLA  &ZJ         INDEX FOR PARMS                  00091600
                     LCLA  &ZK         INDEX FOR PARSE                  00091700
                     LCLA  &ZLO        LOW RANGE VALUE                  00091800
                     LCLA  &ZHI        HIGH RANGE VALUE                 00091900
                     LCLC  &ZW         WORK AREA FOR PARM               00092000
.********************************************************************   00092100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00092200
.********************************************************************   00092300
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00092400
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00092500
                     GBLA  &SYSALVL    SYSSTATE ARCHLVL                 00092600
                     GBLC  &SYSAM64    SYSSTATE AMODE64                 00092700
.*                                                                      00092800
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00092900
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00093000
                     SPLEVEL  TEST                                      00093100
.ZSYS2               ANOP  ,                                            00093200
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00093300
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00093400
                     SYSSTATE TEST                                      00093500
                     AGO   .ZSYS4                                       00093600
.ZSYS3               ANOP  ,                                            00093700
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00093800
.ZSYS4               ANOP  ,                                            00093900
                     AIF   ('&SYSAM64' NE 'YES').ZSYSN64                00094000
&ZMAC_LLGT           SETC 'LLGT'                                        00094100
&ZMAC_LGR            SETC 'LGR'                                         00094200
&ZMAC_LG             SETC 'LG'                                          00094300
&ZMAC_STG            SETC 'STG'                                         00094400
.ZSYSN64             ANOP  ,                                            00094500
.*******************************************************************    00094600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00094700
.*******************************************************************    00094800
                     LCLC  &XSERVD_AREA         ++ NAME                 00094900
                     LCLC  &XTYPE      ++ VALUE                         00095000
                     LCLC  &XXML_LEN   ++ NAME                          00095100
                     LCLC  &XQRY_BASEID         ++ NAME                 00095200
                     LCLC  &XPRODUCT_ID         ++ NAME                 00095300
                     LCLC  &XVALCHECK_RSN       ++ NAME                 00095400
                     LCLC  &XVALCHECK_OFFSET    ++ NAME                 00095500
                     LCLC  &XCOND      ++ VALUE                         00095600
                     LCLC  &XIN_BASEID          ++ NAME                 00095700
                     LCLC  &XRETCODE   ++ NAME                          00095800
                     LCLC  &XRSNCODE   ++ NAME                          00095900
                     LCLA  &XPLISTVER  ++ VALUE                         00096000
                     LCLC  &XMF        ++ VALUE                         00096100
                     LCLC  &XMFCTRL    ++ NAME                          00096200
                     LCLC  &XMFATTR    ++ VALUE                         00096300
                     LCLC  &XMFSCK     ++ VALUE                         00096400
.*******************************************************************    00096500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00096600
.*******************************************************************    00096700
                     LCLC  &ZXSERVD_AREA        ++ INPUT NAME           00096800
                     LCLC  &ZXTYPE     ++ INPUT VALUE                   00096900
                     LCLC  &ZXXML_LEN  ++ INPUT NAME                    00097000
                     LCLC  &ZXQRY_BASEID        ++ OUTPUT NAME          00097100
                     LCLC  &ZXPRODUCT_ID        ++ INPUT NAME           00097200
                     LCLC  &ZXVALCHECK_RSN      ++ OUTPUT NAME          00097300
                     LCLC  &ZXVALCHECK_OFFSET   ++ OUTPUT NAME          00097400
                     LCLC  &ZXCOND     ++ INPUT VALUE                   00097500
                     LCLC  &ZXIN_BASEID         ++ INPUT NAME           00097600
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00097700
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00097800
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00097900
                     LCLC  &ZXMF       ++ INPUT VALUE                   00098000
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00098100
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00098200
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00098300
.********************************************************************   00098400
.***AC.PLV01  PROCESS PLISTVER                                      *   00098500
.********************************************************************   00098600
&XPLISTVER      SETA  0                                                 00098700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00098800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00098900
&XPLISTVER      SETA  1                                                 00099000
.ZPLV0          ANOP  ,                                                 00099100
.*                                                                      00099200
                AIF   ('&TYPE' EQ '').ZPLV1E                            00099300
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00099400
&XPLISTVER      SETA  1                                                 00099500
.ZPLV1E         ANOP  ,                                                 00099600
.*                                                                      00099700
                AIF   ('&XML_LEN' EQ '').ZPLV2E                         00099800
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00099900
&XPLISTVER      SETA  1                                                 00100000
.ZPLV2E         ANOP  ,                                                 00100100
.*                                                                      00100200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00100300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00100400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00100500
.*-------------------------------------------------------------------   00100600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00100700
&ZMS            SETC  '"PLISTVER='                                      00100800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00100900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00101000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00101100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00101200
                AGO   .ZPVCK2                                           00101300
.ZPVCK3         ANOP  ,                                                 00101400
.*-------------------------------------------------------------------   00101500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00101600
&ZMS            SETC  '"PLISTVER='                                      00101700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00101800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00101900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00102000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00102100
                AGO   .ZPVCKE                                           00102200
.ZPVCK2         ANOP  ,                                                 00102300
.*-------------------------------------------------------------------   00102400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00102500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00102600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00102700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00102800
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00102900
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00103000
.ZPVCK6         ANOP  ,                                                 00103100
&ZMS            SETC  '"PLISTVER='                                      00103200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00103300
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00103400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00103500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00103600
&XPLISTVER      SETA  1                                                 00103700
                AGO   .ZPVCKE                                           00103800
.*-------------------------------------------------------------------   00103900
.ZPVCK4A        ANOP  ,                                                 00104000
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00104100
&ZMS            SETC  'PLISTVER='                                       00104200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00104300
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00104400
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00104500
                MNOTE 8,' &ZMS IS REQUIRED.'                            00104600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00104700
                AGO   .ZPVCK5                                           00104800
.ZPVCK4         ANOP  ,                                                 00104900
&XPLISTVER      SETA  &PLISTVER(1)                                      00105000
.ZPVCK5         ANOP  ,                                                 00105100
.ZPVCKE         ANOP  ,                                                 00105200
.********************************************************************   00105300
.***AG.MF01 PROCESS MF MACRO FORMS                                      00105400
.********************************************************************   00105500
                     ACTR  10000                                        00105600
.*------------------------------------------------------------------    00105700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00105800
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00105900
.*-------------------------------------------------------------------   00106000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00106100
.ZG43                ANOP  ,                                            00106200
&ZTLC                SETC 'S'                                           00106300
                     AIF   ('&MF(1)' NE '&ZTLC').ZG44                   00106400
&XMF                 SETC  'S'         SET KEYWORD                      00106500
                     AIF   (N'&MF LE 1).ZG43A   CK NUM                  00106600
&ZMS                 SETC  '"MF='                                       00106700
&ZMS                 SETC  '&ZMS.&MF"'                                  00106800
&ZMS                 SETC  '&ZMS "MF"'                                  00106900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00107000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00107100
.ZG43A               ANOP  ,                                            00107200
.*-------------------------------------------------------------------   00107300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00107400
.ZG44                ANOP  ,                                            00107500
&ZTLC                SETC 'L'                                           00107600
                     AIF   ('&MF(1)' NE '&ZTLC').ZG51                   00107700
&XMF                 SETC  'L'         SET KEYWORD                      00107800
                     AIF   (N'&MF LE 3).ZG44A   CK NUM                  00107900
&ZMS                 SETC  '"MF='                                       00108000
&ZMS                 SETC  '&ZMS.&MF"'                                  00108100
&ZMS                 SETC  '&ZMS "MF"'                                  00108200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00108300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00108400
.ZG44A               ANOP  ,                                            00108500
.*-------------------------------------------------------------------   00108600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00108700
                     AIF   (N'&SYSLIST NE 0).ZG44B  POSITIONALS?        00108800
                     AIF   ('&SERVD_AREA' NE '').ZG44B  KEYS?           00108900
                     AIF   ('&TYPE' NE '').ZG44B  KEYS?                 00109000
                     AIF   ('&XML_LEN' NE '').ZG44B  KEYS?              00109100
                     AIF   ('&QRY_BASEID' NE '').ZG44B  KEYS?           00109200
                     AIF   ('&PRODUCT_ID' NE '').ZG44B  KEYS?           00109300
                     AIF   ('&VALCHECK_RSN' NE '').ZG44B  KEYS?         00109400
                     AIF   ('&VALCHECK_OFFSET' NE '').ZG44B  KEYS?      00109500
                     AIF   ('&COND' NE '').ZG44B  KEYS?                 00109600
                     AIF   ('&IN_BASEID' NE '').ZG44B  KEYS?            00109700
                     AIF   ('&RETCODE' NE '').ZG44B  KEYS?              00109800
                     AIF   ('&RSNCODE' NE '').ZG44B  KEYS?              00109900
                     AGO    .ZG44C     INVOCATION OKAY                  00110000
.ZG44B               ANOP  ,                                            00110100
&ZMS                 SETC  'THE "L" FORM OF "MF"'                       00110200
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00110300
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00110400
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00110500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00110600
.ZG44C               ANOP  ,                                            00110700
.*-------------------------------------------------------------------   00110800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00110900
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00111000
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00111100
                     AIF   (N'&MF(2) GT 1).ZG46B  MULTI                 00111200
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00111300
.ZG46B               AIF   (K'&MF(2) GT 0).ZG46C                        00111400
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00111500
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'                      00111600
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00111700
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00111800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00111900
.ZG46C               ANOP  ,                                            00112000
.*-------------------------------------------------------------------   00112100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00112200
                     AIF   (K'&ZXMFCTRL LE 0).ZG46P  NOT I/O            00112300
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG46P               00112400
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00112500
&ZMS                 SETC  '"MF='                                       00112600
&ZMS                 SETC  '&ZMS.&MF"'                                  00112700
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00112800
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00112900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00113000
.ZG46P               ANOP  ,                                            00113100
.*-------------------------------------------------------------------   00113200
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00113300
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00113400
&XMFATTR             SETC  '0D'                                         00113500
                     AIF   (K'&MF(3) LE 0).ZG49B  PARM                  00113600
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00113700
                     AIF   (N'&MF(3) GT 1).ZG49B  MULTI                 00113800
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00113900
.ZG49B               ANOP  ,                                            00114000
.*-------------------------------------------------------------------   00114100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00114200
                     AIF   (K'&ZXMFATTR LE 0).ZG49P  NOT I/O            00114300
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG49P               00114400
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00114500
&ZMS                 SETC  '"MF='                                       00114600
&ZMS                 SETC  '&ZMS.&MF"'                                  00114700
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00114800
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00114900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00115000
.ZG49P               ANOP  ,                                            00115100
.*-------------------------------------------------------------------   00115200
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00115300
                     AIF   (K'&ZXMFATTR LE 0).ZG49S  NOT I/O            00115400
                     AIF   (K'&XMFATTR LE 60).ZG49S  LNG OK             00115500
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00115600
&ZMS                 SETC  '"MF='                                       00115700
&ZMS                 SETC  '&ZMS.&MF"'                                  00115800
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00115900
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00116000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00116100
.ZG49S               ANOP  ,                                            00116200
.*-------------------------------------------------------------------   00116300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00116400
.ZG51                ANOP  ,                                            00116500
&ZTLC                SETC 'E'                                           00116600
                     AIF   ('&MF(1)' NE '&ZTLC').ZG59                   00116700
&XMF                 SETC  'E'         SET KEYWORD                      00116800
                     AIF   (N'&MF LE 3).ZG51A   CK NUM                  00116900
&ZMS                 SETC  '"MF='                                       00117000
&ZMS                 SETC  '&ZMS.&MF"'                                  00117100
&ZMS                 SETC  '&ZMS "MF"'                                  00117200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00117300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00117400
.ZG51A               ANOP  ,                                            00117500
.*-------------------------------------------------------------------   00117600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00117700
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00117800
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00117900
                     AIF   (N'&MF(2) GT 1).ZG53B  MULTI                 00118000
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00118100
.ZG53B               AIF   (K'&MF(2) GT 0).ZG53C                        00118200
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00118300
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'                      00118400
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00118500
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00118600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00118700
.ZG53C               ANOP  ,                                            00118800
.*-------------------------------------------------------------------   00118900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00119000
                     AIF   (K'&ZXMFCTRL LE 0).ZG53R  NOT I/O            00119100
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG53R               00119200
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00119300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                 00119400
                     AIF   (K'&ZCGPR GT 2).ZG53Q                        00119500
                     AIF   ('&ZCGPR' EQ '0').ZG53Q                      00119600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00119700
                     AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME    00119800
.ZG53P               ANOP  ,                                            00119900
                     AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC         00120000
                     AIF   ('&ZCGPR' LT '1').ZG53Q                      00120100
                     AIF   ('&ZCGPR' LE '12').ZG53R                     00120200
.ZG53Q               ANOP  ,                                            00120300
&ZMS                 SETC  '"MF='                                       00120400
&ZMS                 SETC  '&ZMS.&MF"'                                  00120500
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00120600
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00120700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00120800
.ZG53R               ANOP  ,                                            00120900
.*-------------------------------------------------------------------   00121000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00121100
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00121200
.ZG57A   AIF   ('&MF(3)' NE 'COMPLETE').ZG58A                           00121300
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00121400
.*-------------------------------------------------------------------   00121500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00121600
.ZG58A               AIF   (K'&XMFSCK GT 0).ZG58C  KEYWORD              00121700
                     AIF   (K'&MF(3) LE 0).ZG58B                        00121800
&ZMS                 SETC  '"MF='                                       00121900
&ZMS                 SETC  '&ZMS.&MF"'                                  00122000
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00122100
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00122200
&ZMS                 SETC  '&ZMS "COMPLETE".'                           00122300
                     MNOTE 8,' &ZMS '                                   00122400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00122500
.ZG58B               ANOP  ,                                            00122600
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00122700
.ZG58C               ANOP  ,                                            00122800
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00122900
.*------------------------------------------------------------------    00123000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00123100
.ZG59                ANOP  ,                                            00123200
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00123300
                     AIF   (K'&XMF GT 0).ZG59E  VALID ARG               00123400
                     AIF   (T'&MF EQ 'O').ZG59D  OMITTED                00123500
&ZASYSLNDX           SETA  0                                            00123600
.ZG59A               ANOP  ,           POSITIONAL MACRO KEY             00123700
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00123800
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG59C             00123900
&ZTLC                SETC 'MF'                                          00124000
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG59A    00124100
.ZG59B               ANOP  ,                                            00124200
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00124300
&ZMS                 SETC  'THE "MF" KEY'                               00124400
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00124500
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00124600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00124700
                     AGO   .ZG59E                                       00124800
.ZG59C               ANOP  ,                                            00124900
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00125000
&ZMS                 SETC  '"MF='                                       00125100
&ZMS                 SETC  '&ZMS.&MF"'                                  00125200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00125300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00125400
&ZMS                 SETC  '&ZMS "S",'                                  00125500
&ZMS                 SETC  '&ZMS "L",'                                  00125600
&ZMS                 SETC  '&ZMS OR "E".'                               00125700
                     MNOTE 8,' &ZMS '                                   00125800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00125900
                     AGO   .ZG59E                                       00126000
.ZG59D               ANOP  ,                                            00126100
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00126200
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00126300
.ZG59E               ANOP  ,                                            00126400
.********************************************************************   00126500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00126600
.********************************************************************   00126700
                     ACTR  10000                                        00126800
.*-------------------------------------------------------------------   00126900
.***AG.MF03 MF=(SLE)                                                    00127000
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00127100
.*----------------------------------------------------------------***   00127200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00127300
                     AIF   (N'&SERVD_AREA LE 1).ZG2A  CK NUM            00127400
&ZMS                 SETC  '"SERVD_AREA='                               00127500
&ZMS                 SETC  '&ZMS.&SERVD_AREA"'                          00127600
&ZMS                 SETC  '&ZMS "SERVD_AREA"'                          00127700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00127800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00127900
.ZG2A                ANOP  ,                                            00128000
.*-------------------------------------------------------------------   00128100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00128200
&ZXSERVD_AREA        SETC  'INPUT'     SET IN/OUTPUT                    00128300
&XSERVD_AREA         SETC  '&SERVD_AREA(1)'     SET XVARIABLE           00128400
                     AIF   (N'&SERVD_AREA GT 1).ZG2B  MULTI             00128500
&XSERVD_AREA         SETC  '&SERVD_AREA'        SET XVARIABLE           00128600
.ZG2B                AIF   (K'&SERVD_AREA(1) GT 0).ZG2C                 00128700
&ZXSERVD_AREA        SETC  ''          RESET IN/OUTPUT                  00128800
&ZMS                 SETC  ' '                                          00128900
&ZMS                 SETC  '&ZMS "SERVD_AREA" KEY AND ITS'              00129000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00129100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00129200
.ZG2C                ANOP  ,                                            00129300
.*-------------------------------------------------------------------   00129400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00129500
                     AIF   (K'&ZXSERVD_AREA LE 0).ZG2R  NOT I/O         00129600
                     AIF   ('&XSERVD_AREA'(1,1) NE '(').ZG2R            00129700
&ZCGPR               SETC  '&XSERVD_AREA'(2,K'&XSERVD_AREA-2)           00129800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                  00129900
                     AIF   (K'&ZCGPR GT 2).ZG2Q                         00130000
                     AIF   ('&ZCGPR' EQ '0').ZG2Q                       00130100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00130200
                     AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME     00130300
.ZG2P                ANOP  ,                                            00130400
                     AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC          00130500
                     AIF   ('&ZCGPR' LT '2').ZG2Q                       00130600
                     AIF   ('&ZCGPR' LE '12').ZG2R                      00130700
.ZG2Q                ANOP  ,                                            00130800
&ZMS                 SETC  '"SERVD_AREA='                               00130900
&ZMS                 SETC  '&ZMS.&SERVD_AREA"'                          00131000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00131100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00131200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00131300
.ZG2R                ANOP  ,                                            00131400
.*------------------------------------------------------------------    00131500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00131600
&XTYPE               SETC  ''          INITIALIZE XVARIABLE             00131700
.*-------------------------------------------------------------------   00131800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00131900
.ZG6                 ANOP  ,                                            00132000
                     AIF   (K'&TYPE(1) LE 0).ZG6A                       00132100
&ZTLC                SETC 'HEX'                                         00132200
                     AIF   ('&TYPE(1)' NE '&ZTLC').ZG7                  00132300
&XTYPE               SETC  'HEX'       SET KEYWORD                      00132400
                     AIF   (N'&TYPE LE 1).ZG6A  CK NUM                  00132500
&ZMS                 SETC  '"TYPE='                                     00132600
&ZMS                 SETC  '&ZMS.&TYPE"'                                00132700
&ZMS                 SETC  '&ZMS "TYPE"'                                00132800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00132900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00133000
.ZG6A                ANOP  ,                                            00133100
.*------------------------------------------------------------------    00133200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00133300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00133400
.ZG6A0               AIF   (K'&XML_LEN LE 0).ZG6A1  OK                  00133500
&ZCVAL               SETC '&ZCVAL XML_LEN'      INCORRECT KEY USED      00133600
.ZG6A1               AIF   (K'&ZCVAL LE 0).ZG6A2  OK                    00133700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00133800
&ZMS                 SETC  '"TYPE'                                      00133900
&ZMS                 SETC  '&ZMS.=&TYPE"'                               00134000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00134100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00134200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00134300
.ZG6A2               ANOP  ,                                            00134400
.*-------------------------------------------------------------------   00134500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00134600
.ZG7                 ANOP  ,                                            00134700
&ZTLC                SETC 'XML'                                         00134800
                     AIF   ('&TYPE(1)' NE '&ZTLC').ZG11                 00134900
&XTYPE               SETC  'XML'       SET KEYWORD                      00135000
                     AIF   (N'&TYPE LE 1).ZG7A  CK NUM                  00135100
&ZMS                 SETC  '"TYPE='                                     00135200
&ZMS                 SETC  '&ZMS.&TYPE"'                                00135300
&ZMS                 SETC  '&ZMS "TYPE"'                                00135400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00135500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00135600
.ZG7A                ANOP  ,                                            00135700
.*----------------------------------------------------------------***   00135800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00135900
                     AIF   (N'&XML_LEN LE 1).ZG9A  CK NUM               00136000
&ZMS                 SETC  '"XML_LEN='                                  00136100
&ZMS                 SETC  '&ZMS.&XML_LEN"'                             00136200
&ZMS                 SETC  '&ZMS "XML_LEN"'                             00136300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00136400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00136500
.ZG9A                ANOP  ,                                            00136600
.*-------------------------------------------------------------------   00136700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00136800
&ZXXML_LEN           SETC  'INPUT'     SET IN/OUTPUT                    00136900
&XXML_LEN            SETC  '&XML_LEN(1)'        SET XVARIABLE           00137000
                     AIF   (N'&XML_LEN GT 1).ZG9B  MULTI                00137100
&XXML_LEN            SETC  '&XML_LEN'  SET XVARIABLE                    00137200
.ZG9B                AIF   (K'&XML_LEN(1) GT 0).ZG9C                    00137300
&ZXXML_LEN           SETC  ''          RESET IN/OUTPUT                  00137400
&ZMS                 SETC  ' '                                          00137500
&ZMS                 SETC  '&ZMS "XML_LEN" KEY AND ITS'                 00137600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00137700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00137800
.ZG9C                ANOP  ,                                            00137900
.*-------------------------------------------------------------------   00138000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00138100
                     AIF   (K'&ZXXML_LEN LE 0).ZG9R  NOT I/O            00138200
                     AIF   ('&XXML_LEN'(1,1) NE '(').ZG9R               00138300
&ZCGPR               SETC  '&XXML_LEN'(2,K'&XXML_LEN-2)                 00138400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                  00138500
                     AIF   (K'&ZCGPR GT 2).ZG9Q                         00138600
                     AIF   ('&ZCGPR' EQ '0').ZG9Q                       00138700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00138800
                     AIF   (T'&ZCGPR NE 'N').ZG9Q  INVALID REG NAME     00138900
.ZG9P                ANOP  ,                                            00139000
                     AIF   (T'&ZCGPR NE 'N').ZG9R  NON NUMERIC          00139100
                     AIF   ('&ZCGPR' LT '2').ZG9Q                       00139200
                     AIF   ('&ZCGPR' LE '12').ZG9R                      00139300
.ZG9Q                ANOP  ,                                            00139400
&ZMS                 SETC  '"XML_LEN='                                  00139500
&ZMS                 SETC  '&ZMS.&XML_LEN"'                             00139600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00139700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00139800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00139900
.ZG9R                ANOP  ,                                            00140000
.*------------------------------------------------------------------    00140100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140200
.ZG11                ANOP  ,                                            00140300
&ZXTYPE              SETC  'INPUT'     SET IN/OUTPUT                    00140400
                     AIF   (K'&XTYPE GT 0).ZG11E  VALID ARG             00140500
                     AIF   (T'&TYPE EQ 'O').ZG11D  OMITTED              00140600
&ZASYSLNDX           SETA  0                                            00140700
.ZG11A               ANOP  ,           POSITIONAL MACRO KEY             00140800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00140900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG11C             00141000
&ZTLC                SETC 'TYPE'                                        00141100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG11A    00141200
.ZG11B               ANOP  ,                                            00141300
&ZXTYPE              SETC  ''          RESET IN/OUTPUT                  00141400
&ZMS                 SETC  'THE "TYPE" KEY'                             00141500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00141600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00141700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00141800
                     AGO   .ZG11E                                       00141900
.ZG11C               ANOP  ,                                            00142000
&ZXTYPE              SETC  ''          RESET IN/OUTPUT                  00142100
&ZMS                 SETC  '"TYPE='                                     00142200
&ZMS                 SETC  '&ZMS.&TYPE"'                                00142300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00142400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00142500
&ZMS                 SETC  '&ZMS "HEX"'                                 00142600
&ZMS                 SETC  '&ZMS OR "XML".'                             00142700
                     MNOTE 8,' &ZMS '                                   00142800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00142900
                     AGO   .ZG11E                                       00143000
.ZG11D               ANOP  ,                                            00143100
&XTYPE               SETC  'HEX'       SET DEFAULT KEYWORD              00143200
.ZG11E               ANOP  ,                                            00143300
.*----------------------------------------------------------------***   00143400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00143500
                     AIF   (N'&QRY_BASEID LE 1).ZG13A  CK NUM           00143600
&ZMS                 SETC  '"QRY_BASEID='                               00143700
&ZMS                 SETC  '&ZMS.&QRY_BASEID"'                          00143800
&ZMS                 SETC  '&ZMS "QRY_BASEID"'                          00143900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00144000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00144100
.ZG13A               ANOP  ,                                            00144200
.*-------------------------------------------------------------------   00144300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00144400
                     AIF   (K'&QRY_BASEID(1) LE 0).ZG13C  NO PARM       00144500
&ZXQRY_BASEID        SETC  'OUTPUT'    SET OUTPUT                       00144600
&XQRY_BASEID         SETC  '&QRY_BASEID(1)'     SET XVARIABLE           00144700
                     AIF   (N'&QRY_BASEID GT 1).ZG13C                   00144800
&XQRY_BASEID         SETC  '&QRY_BASEID'        SET XVARIABLE           00144900
.ZG13C               ANOP  ,                                            00145000
.*-------------------------------------------------------------------   00145100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00145200
                     AIF   (K'&ZXQRY_BASEID LE 0).ZG13R  NOT I/O        00145300
                     AIF   ('&XQRY_BASEID'(1,1) NE '(').ZG13R           00145400
&ZCGPR               SETC  '&XQRY_BASEID'(2,K'&XQRY_BASEID-2)           00145500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                 00145600
                     AIF   (K'&ZCGPR GT 2).ZG13Q                        00145700
                     AIF   ('&ZCGPR' EQ '0').ZG13Q                      00145800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00145900
                     AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME    00146000
.ZG13P               ANOP  ,                                            00146100
                     AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC         00146200
                     AIF   ('&ZCGPR' LT '2').ZG13Q                      00146300
                     AIF   ('&ZCGPR' LE '12').ZG13R                     00146400
.ZG13Q               ANOP  ,                                            00146500
&ZMS                 SETC  '"QRY_BASEID='                               00146600
&ZMS                 SETC  '&ZMS.&QRY_BASEID"'                          00146700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00146800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00146900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00147000
.ZG13R               ANOP  ,                                            00147100
.*----------------------------------------------------------------***   00147200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00147300
                     AIF   (N'&PRODUCT_ID LE 1).ZG16A  CK NUM           00147400
&ZMS                 SETC  '"PRODUCT_ID='                               00147500
&ZMS                 SETC  '&ZMS.&PRODUCT_ID"'                          00147600
&ZMS                 SETC  '&ZMS "PRODUCT_ID"'                          00147700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00147800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00147900
.ZG16A               ANOP  ,                                            00148000
.*-------------------------------------------------------------------   00148100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00148200
&ZXPRODUCT_ID        SETC  'INPUT'     SET IN/OUTPUT                    00148300
&XPRODUCT_ID         SETC  '&PRODUCT_ID(1)'     SET XVARIABLE           00148400
                     AIF   (N'&PRODUCT_ID GT 1).ZG16B  MULTI            00148500
&XPRODUCT_ID         SETC  '&PRODUCT_ID'        SET XVARIABLE           00148600
.ZG16B               AIF   (K'&PRODUCT_ID(1) GT 0).ZG16C                00148700
&ZXPRODUCT_ID        SETC  ''          RESET IN/OUTPUT                  00148800
&ZMS                 SETC  ' '                                          00148900
&ZMS                 SETC  '&ZMS "PRODUCT_ID" KEY AND ITS'              00149000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00149100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00149200
.ZG16C               ANOP  ,                                            00149300
.*-------------------------------------------------------------------   00149400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00149500
                     AIF   (K'&ZXPRODUCT_ID LE 0).ZG16R  NOT I/O        00149600
                     AIF   ('&XPRODUCT_ID'(1,1) NE '(').ZG16R           00149700
&ZCGPR               SETC  '&XPRODUCT_ID'(2,K'&XPRODUCT_ID-2)           00149800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                 00149900
                     AIF   (K'&ZCGPR GT 2).ZG16Q                        00150000
                     AIF   ('&ZCGPR' EQ '0').ZG16Q                      00150100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00150200
                     AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME    00150300
.ZG16P               ANOP  ,                                            00150400
                     AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC         00150500
                     AIF   ('&ZCGPR' LT '2').ZG16Q                      00150600
                     AIF   ('&ZCGPR' LE '12').ZG16R                     00150700
.ZG16Q               ANOP  ,                                            00150800
&ZMS                 SETC  '"PRODUCT_ID='                               00150900
&ZMS                 SETC  '&ZMS.&PRODUCT_ID"'                          00151000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00151100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00151200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00151300
.ZG16R               ANOP  ,                                            00151400
.*----------------------------------------------------------------***   00151500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00151600
                     AIF   (N'&VALCHECK_RSN LE 1).ZG19A  CK NUM         00151700
&ZMS                 SETC  '"VALCHECK_RSN='                             00151800
&ZMS                 SETC  '&ZMS.&VALCHECK_RSN"'                        00151900
&ZMS                 SETC  '&ZMS "VALCHECK_RSN"'                        00152000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00152100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00152200
.ZG19A               ANOP  ,                                            00152300
.*-------------------------------------------------------------------   00152400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00152500
&ZXVALCHECK_RSN      SETC  'OUTPUT'    SET IN/OUTPUT                    00152600
&XVALCHECK_RSN       SETC  '&VALCHECK_RSN(1)'   SET XVARIABLE           00152700
                     AIF   (N'&VALCHECK_RSN GT 1).ZG19B  MULTI          00152800
&XVALCHECK_RSN       SETC  '&VALCHECK_RSN'      SET XVARIABLE           00152900
.ZG19B               AIF   (K'&VALCHECK_RSN(1) GT 0).ZG19C              00153000
&ZXVALCHECK_RSN      SETC  ''          RESET IN/OUTPUT                  00153100
&ZMS                 SETC  ' '                                          00153200
&ZMS                 SETC  '&ZMS "VALCHECK_RSN" KEY AND ITS'            00153300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00153400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00153500
.ZG19C               ANOP  ,                                            00153600
.*-------------------------------------------------------------------   00153700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00153800
                     AIF   (K'&ZXVALCHECK_RSN LE 0).ZG19R  NOT I/O      00153900
                     AIF   ('&XVALCHECK_RSN'(1,1) NE '(').ZG19R         00154000
&ZCGPR               SETC  '&XVALCHECK_RSN'(2,K'&XVALCHECK_RSN-2)       00154100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                 00154200
                     AIF   (K'&ZCGPR GT 2).ZG19Q                        00154300
                     AIF   ('&ZCGPR' EQ '0').ZG19Q                      00154400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00154500
                     AIF   (T'&ZCGPR NE 'N').ZG19Q  INVALID REG NAME    00154600
.ZG19P               ANOP  ,                                            00154700
                     AIF   (T'&ZCGPR NE 'N').ZG19R  NON NUMERIC         00154800
                     AIF   ('&ZCGPR' LT '2').ZG19Q                      00154900
                     AIF   ('&ZCGPR' LE '12').ZG19R                     00155000
.ZG19Q               ANOP  ,                                            00155100
&ZMS                 SETC  '"VALCHECK_RSN='                             00155200
&ZMS                 SETC  '&ZMS.&VALCHECK_RSN"'                        00155300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00155400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00155500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00155600
.ZG19R               ANOP  ,                                            00155700
.*----------------------------------------------------------------***   00155800
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00155900
                     AIF   (N'&VALCHECK_OFFSET LE 1).ZG22A  CK NUM      00156000
&ZMS                 SETC  '"VALCHECK_OFFSET='                          00156100
&ZMS                 SETC  '&ZMS.&VALCHECK_OFFSET"'                     00156200
&ZMS                 SETC  '&ZMS "VALCHECK_OFFSET"'                     00156300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00156400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00156500
.ZG22A               ANOP  ,                                            00156600
.*-------------------------------------------------------------------   00156700
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00156800
&ZXVALCHECK_OFFSET   SETC  'OUTPUT'    SET IN/OUTPUT                    00156900
&XVALCHECK_OFFSET    SETC  '&VALCHECK_OFFSET(1)'  SET XVARIABLE         00157000
                     AIF   (N'&VALCHECK_OFFSET GT 1).ZG22B  MULTI       00157100
&XVALCHECK_OFFSET    SETC  '&VALCHECK_OFFSET'   SET XVARIABLE           00157200
.ZG22B               AIF   (K'&VALCHECK_OFFSET(1) GT 0).ZG22C           00157300
&ZXVALCHECK_OFFSET   SETC  ''          RESET IN/OUTPUT                  00157400
&ZMS                 SETC  ' '                                          00157500
&ZMS                 SETC  '&ZMS "VALCHECK_OFFSET" KEY AND ITS'         00157600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00157700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00157800
.ZG22C               ANOP  ,                                            00157900
.*-------------------------------------------------------------------   00158000
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00158100
                     AIF   (K'&ZXVALCHECK_OFFSET LE 0).ZG22R  NOT I/O   00158200
                     AIF   ('&XVALCHECK_OFFSET'(1,1) NE '(').ZG22R      00158300
&ZCGPR               SETC  '&XVALCHECK_OFFSET'(2,K'&XVALCHECK_OFFSET-2) 00158400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                 00158500
                     AIF   (K'&ZCGPR GT 2).ZG22Q                        00158600
                     AIF   ('&ZCGPR' EQ '0').ZG22Q                      00158700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00158800
                     AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME    00158900
.ZG22P               ANOP  ,                                            00159000
                     AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC         00159100
                     AIF   ('&ZCGPR' LT '2').ZG22Q                      00159200
                     AIF   ('&ZCGPR' LE '12').ZG22R                     00159300
.ZG22Q               ANOP  ,                                            00159400
&ZMS                 SETC  '"VALCHECK_OFFSET='                          00159500
&ZMS                 SETC  '&ZMS.&VALCHECK_OFFSET"'                     00159600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00159700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00159800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00159900
.ZG22R               ANOP  ,                                            00160000
.*------------------------------------------------------------------    00160100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00160200
&XCOND               SETC  ''          INITIALIZE XVARIABLE             00160300
.*-------------------------------------------------------------------   00160400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00160500
.ZG26                ANOP  ,                                            00160600
                     AIF   (K'&COND(1) LE 0).ZG26A                      00160700
&ZTLC                SETC 'YES'                                         00160800
                     AIF   ('&COND(1)' NE '&ZTLC').ZG30                 00160900
&XCOND               SETC  'YES'       SET KEYWORD                      00161000
                     AIF   (N'&COND LE 1).ZG26A  CK NUM                 00161100
&ZMS                 SETC  '"COND='                                     00161200
&ZMS                 SETC  '&ZMS.&COND"'                                00161300
&ZMS                 SETC  '&ZMS "COND"'                                00161400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00161500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00161600
.ZG26A               ANOP  ,                                            00161700
.*----------------------------------------------------------------***   00161800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00161900
                     AIF   (N'&IN_BASEID LE 1).ZG28A  CK NUM            00162000
&ZMS                 SETC  '"IN_BASEID='                                00162100
&ZMS                 SETC  '&ZMS.&IN_BASEID"'                           00162200
&ZMS                 SETC  '&ZMS "IN_BASEID"'                           00162300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00162400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00162500
.ZG28A               ANOP  ,                                            00162600
.*-------------------------------------------------------------------   00162700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00162800
&ZXIN_BASEID         SETC  'INPUT'     SET IN/OUTPUT                    00162900
&XIN_BASEID          SETC  '&IN_BASEID(1)'      SET XVARIABLE           00163000
                     AIF   (N'&IN_BASEID GT 1).ZG28B  MULTI             00163100
&XIN_BASEID          SETC  '&IN_BASEID'         SET XVARIABLE           00163200
.ZG28B               AIF   (K'&IN_BASEID(1) GT 0).ZG28C                 00163300
&ZXIN_BASEID         SETC  ''          RESET IN/OUTPUT                  00163400
&ZMS                 SETC  ' '                                          00163500
&ZMS                 SETC  '&ZMS "IN_BASEID" KEY AND ITS'               00163600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00163700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00163800
.ZG28C               ANOP  ,                                            00163900
.*-------------------------------------------------------------------   00164000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00164100
                     AIF   (K'&ZXIN_BASEID LE 0).ZG28R  NOT I/O         00164200
                     AIF   ('&XIN_BASEID'(1,1) NE '(').ZG28R            00164300
&ZCGPR               SETC  '&XIN_BASEID'(2,K'&XIN_BASEID-2)             00164400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                 00164500
                     AIF   (K'&ZCGPR GT 2).ZG28Q                        00164600
                     AIF   ('&ZCGPR' EQ '0').ZG28Q                      00164700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00164800
                     AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME    00164900
.ZG28P               ANOP  ,                                            00165000
                     AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC         00165100
                     AIF   ('&ZCGPR' LT '2').ZG28Q                      00165200
                     AIF   ('&ZCGPR' LE '12').ZG28R                     00165300
.ZG28Q               ANOP  ,                                            00165400
&ZMS                 SETC  '"IN_BASEID='                                00165500
&ZMS                 SETC  '&ZMS.&IN_BASEID"'                           00165600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00165700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00165800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00165900
.ZG28R               ANOP  ,                                            00166000
.*-------------------------------------------------------------------   00166100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00166200
.ZG30                ANOP  ,                                            00166300
&ZTLC                SETC 'NO'                                          00166400
                     AIF   ('&COND(1)' NE '&ZTLC').ZG31                 00166500
&XCOND               SETC  'NO'        SET KEYWORD                      00166600
                     AIF   (N'&COND LE 1).ZG30A  CK NUM                 00166700
&ZMS                 SETC  '"COND='                                     00166800
&ZMS                 SETC  '&ZMS.&COND"'                                00166900
&ZMS                 SETC  '&ZMS "COND"'                                00167000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00167100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00167200
.ZG30A               ANOP  ,                                            00167300
.*------------------------------------------------------------------    00167400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00167600
.ZG30A0              AIF   (K'&IN_BASEID LE 0).ZG30A1  OK               00167700
&ZCVAL               SETC '&ZCVAL IN_BASEID'    INCORRECT KEY USED      00167800
.ZG30A1              AIF   (K'&ZCVAL LE 0).ZG30A2  OK                   00167900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00168000
&ZMS                 SETC  '"COND'                                      00168100
&ZMS                 SETC  '&ZMS.=&COND"'                               00168200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00168300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00168400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00168500
.ZG30A2              ANOP  ,                                            00168600
.*------------------------------------------------------------------    00168700
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00168800
.ZG31                ANOP  ,                                            00168900
&ZXCOND              SETC  'INPUT'     SET IN/OUTPUT                    00169000
                     AIF   (K'&XCOND GT 0).ZG31E  VALID ARG             00169100
                     AIF   (T'&COND EQ 'O').ZG31D  OMITTED              00169200
&ZASYSLNDX           SETA  0                                            00169300
.ZG31A               ANOP  ,           POSITIONAL MACRO KEY             00169400
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00169500
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C             00169600
&ZTLC                SETC 'COND'                                        00169700
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A    00169800
.ZG31B               ANOP  ,                                            00169900
&ZXCOND              SETC  ''          RESET IN/OUTPUT                  00170000
&ZMS                 SETC  'THE "COND" KEY'                             00170100
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00170200
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00170300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00170400
                     AGO   .ZG31E                                       00170500
.ZG31C               ANOP  ,                                            00170600
&ZXCOND              SETC  ''          RESET IN/OUTPUT                  00170700
&ZMS                 SETC  '"COND='                                     00170800
&ZMS                 SETC  '&ZMS.&COND"'                                00170900
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00171000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00171100
&ZMS                 SETC  '&ZMS "YES"'                                 00171200
&ZMS                 SETC  '&ZMS OR "NO".'                              00171300
                     MNOTE 8,' &ZMS '                                   00171400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00171500
                     AGO   .ZG31E                                       00171600
.ZG31D               ANOP  ,                                            00171700
&XCOND               SETC  'YES'       SET DEFAULT KEYWORD              00171800
.ZG31E               ANOP  ,                                            00171900
.*------------------------------------------------------------------    00172000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00172100
                     AIF   (K'&COND(1) GT 0).ZG31F  PARM                00172200
&XCOND               SETC  ''          ENSURE NULL KEYWORD              00172300
&ZXCOND              SETC  ''          RESET IN/OUTPUT                  00172400
&ZMS                 SETC  'THE'                                        00172500
&ZMS                 SETC  '&ZMS "COND" KEY AND ITS'                    00172600
&ZMS                 SETC  '&ZMS ARGUMENT ARE REQUIRED.'                00172700
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00172800
&ZMS                 SETC  '&ZMS "YES"'                                 00172900
&ZMS                 SETC  '&ZMS OR "NO".'                              00173000
                     MNOTE 8,' &ZMS '                                   00173100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00173200
.ZG31F               ANOP  ,                                            00173300
.*----------------------------------------------------------------***   00173400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00173500
                     AIF   (N'&RETCODE LE 1).ZG33A  CK NUM              00173600
&ZMS                 SETC  '"RETCODE='                                  00173700
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00173800
&ZMS                 SETC  '&ZMS "RETCODE"'                             00173900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00174000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00174100
.ZG33A               ANOP  ,                                            00174200
.*-------------------------------------------------------------------   00174300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00174400
                     AIF   (K'&RETCODE(1) LE 0).ZG33C  NO PARM          00174500
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       00174600
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           00174700
                     AIF   (N'&RETCODE GT 1).ZG33C                      00174800
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    00174900
.ZG33C               ANOP  ,                                            00175000
.*-------------------------------------------------------------------   00175100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00175200
                     AIF   (K'&ZXRETCODE LE 0).ZG33R  NOT I/O           00175300
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG33R              00175400
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 00175500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                 00175600
                     AIF   (K'&ZCGPR GT 2).ZG33Q                        00175700
                     AIF   ('&ZCGPR' EQ '0').ZG33Q                      00175800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00175900
                     AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME    00176000
.ZG33P               ANOP  ,                                            00176100
                     AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC         00176200
                     AIF   ('&ZCGPR' EQ '15').ZG33R                     00176300
                     AIF   ('&ZCGPR' LT '2').ZG33Q                      00176400
                     AIF   ('&ZCGPR' LE '12').ZG33R                     00176500
.ZG33Q               ANOP  ,                                            00176600
&ZMS                 SETC  '"RETCODE='                                  00176700
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00176800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00176900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'     00177000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00177100
.ZG33R               ANOP  ,                                            00177200
.*----------------------------------------------------------------***   00177300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00177400
                     AIF   (N'&RSNCODE LE 1).ZG36A  CK NUM              00177500
&ZMS                 SETC  '"RSNCODE='                                  00177600
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00177700
&ZMS                 SETC  '&ZMS "RSNCODE"'                             00177800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00177900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00178000
.ZG36A               ANOP  ,                                            00178100
.*-------------------------------------------------------------------   00178200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00178300
                     AIF   (K'&RSNCODE(1) LE 0).ZG36C  NO PARM          00178400
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       00178500
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           00178600
                     AIF   (N'&RSNCODE GT 1).ZG36C                      00178700
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    00178800
.ZG36C               ANOP  ,                                            00178900
.*-------------------------------------------------------------------   00179000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00179100
                     AIF   (K'&ZXRSNCODE LE 0).ZG36R  NOT I/O           00179200
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG36R              00179300
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 00179400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                 00179500
                     AIF   (K'&ZCGPR GT 2).ZG36Q                        00179600
                     AIF   ('&ZCGPR' EQ '0').ZG36R                      00179700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00179800
                     AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME    00179900
.ZG36P               ANOP  ,                                            00180000
                     AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC         00180100
                     AIF   ('&ZCGPR' EQ '0').ZG36R                      00180200
                     AIF   ('&ZCGPR' LT '2').ZG36Q                      00180300
                     AIF   ('&ZCGPR' LE '12').ZG36R                     00180400
.ZG36Q               ANOP  ,                                            00180500
&ZMS                 SETC  '"RSNCODE='                                  00180600
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00180700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00180800
                     MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'      00180900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00181000
.ZG36R               ANOP  ,                                            00181100
.******************************************************************     00181200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00181300
.******************************************************************     00181400
                     ACTR  10000                                        00181500
.*----------------------------------------------------------------***   00181600
.***AH.P02 EXTRA POSITIONALS                                            00181700
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00181800
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00181900
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00182000
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00182100
.ZGLISTX1            ANOP  ,                                            00182200
&ZCVAL               SETC  ''          ERROR FIELD                      00182300
&ZAWRK               SETA  0           POSITIONAL NUMBER                00182400
.ZGLIST2             ANOP  ,                                            00182500
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00182600
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00182700
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00182800
                     AGO   .ZGLIST2                                     00182900
.*                                                                      00183000
.ZGLIST3             ANOP  ,                                            00183100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00183200
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'                    00183300
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00183400
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00183500
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00183600
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00183700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00183800
.ZGLISTX             ANOP  ,                                            00183900
&ZASYSLNDX           SETA  0                                            00184000
.*-------------------------------------------------------------------   00184100
.***AG.MF04 MF=(SLE)                                                    00184200
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         00184300
.*******************************************************************    00184400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00184500
.*******************************************************************    00184600
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00184700
.*******************************************************************    00184800
.***AE.01  START OF IWMDINST MACRO CODE                                 00184900
.*******************************************************************    00185000
                     LCLC  &M0M0001                 NAME                00185100
&M0M0001             SETC  '&XLABEL'                SET NAME            00185200
                     AIF   (K'&XLABEL NE 0).XLAB2                       00185300
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00185400
.*                                                                      00185500
.XLAB2               ANOP  ,                                            00185600
                     AIF   ('&XMF' EQ 'L').XLAB3                        00185700
&M0M0001 DS    0H                             IWMDINST-1                00185800
.XLAB3               ANOP  ,                                            00185900
.*******************************************************************    00186000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00186100
.*******************************************************************    00186200
              PUSH  PRINT                                               00186300
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00186400
                     PRINT OFF         ++ PR01                          00186500
                     AGO   .ZPRNTXX                                     00186600
.ZPRINTX             PRINT ON                                           00186700
.ZPRNTXX             ANOP  ,                                            00186800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00186900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00187000
.********************************************************************   00187100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00187200
.********************************************************************   00187300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00187400
                      LCLA  &ZOPN1         INVOCATION INDEX             00187500
                      LCLC  &ZOPL(4095)    LABEL                        00187600
                      LCLC  &ZOPO(4095)    OPERATION                    00187700
                      LCLC  &ZOPV(4095)    VALUE                        00187800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00187900
.*                                                                      00188000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00188100
.******************************************************************     00188200
.***AL.L10 IWMDINST FMT=LIST MF=S!L PARAMETERS                          00188300
.******************************************************************     00188400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00188500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00188600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00188700
&XMFATTR              SETC  '0D'                                        00188800
.*                                                                      00188900
&ZOPN                 SETA  &ZOPN+1                                     00189000
&ZOPL(&ZOPN)          SETC  ' '                                         00189100
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00189200
&ZOPO(&ZOPN)          SETC  'B'                                         00189300
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00189400
                      AGO   .ZALVL6B                                    00189500
.ZALVL6A              ANOP                                              00189600
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00189700
&ZOPV(&ZOPN)          SETC  '4,8'                                       00189800
&ZOPN                 SETA  &ZOPN+1                                     00189900
&ZOPL(&ZOPN)          SETC  ' '                                         00190000
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00190100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00190200
.ZALVL6B              ANOP                                              00190300
&ZOPD(&ZOPN)          SETC  '++ IWMDINST ARG PARMS'                     00190400
.*                                                                      00190500
&ZOPN                 SETA  &ZOPN+1                                     00190600
&ZOPL(&ZOPN)          SETC  ' '                                         00190700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00190800
&ZOPV(&ZOPN)          SETC  '1'                                         00190900
&ZOPD(&ZOPN)          SETC  ' '                                         00191000
.*                                                                      00191100
.ZLMFSL2              ANOP  ,                                           00191200
.*-------------------------------------------------------------------   00191300
.***AM.L00  IWMDINST FMT=LIST name                                      00191400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00191500
&ZOPN                 SETA &ZOPN+1                                      00191600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00191700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00191800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00191900
&ZOPD(&ZOPN)          SETC '++ IWMDINST NAME'                           00192000
.ZLMFSL2M             ANOP  ,                                           00192100
.*-------------------------------------------------------------------   00192200
.***AM.L01  IWMDINST FMT=LIST PARAMETERS                                00192300
&ZOPN                 SETA &ZOPN+1                                      00192400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00192500
&ZOPO(&ZOPN)          SETC 'DS'                                         00192600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00192700
&ZOPD(&ZOPN)          SETC '++ IWMDINST PARM LIST'                      00192800
.*-------------------------------------------------------------------   00192900
.***AM.L02 XVERSION XL1                                                 00193000
&ZOPN                 SETA &ZOPN+1                                      00193100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00193200
&ZOPO(&ZOPN)          SETC 'DS'                                         00193300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00193400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00193500
.*-------------------------------------------------------------------   00193600
.***AM.L03 XINSTALL_OPTIONS BL.8                                        00193700
&ZOPN                 SETA &ZOPN+1                                      00193800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINSTALL_OPTIONS'                 00193900
&ZOPO(&ZOPN)          SETC 'DS'                                         00194000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00194100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00194200
.*                                                                      00194300
&ZOPN                 SETA  &ZOPN+1                                     00194400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCOND_YES'                       00194500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00194600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00194700
&ZOPD(&ZOPN)          SETC  '++ XCOND.'                                 00194800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00194900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00195000
.*                                                                      00195100
&ZOPN                 SETA  &ZOPN+1                                     00195200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_HEX'                       00195300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00195400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00195500
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00195600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HEX'                          00195700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00195800
.*                                                                      00195900
&ZOPN                 SETA  &ZOPN+1                                     00196000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_XML'                       00196100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00196200
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00196300
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00196400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).XML'                          00196500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00196600
.*-------------------------------------------------------------------   00196700
.***AM.L09  XRSV0001 CL2                                                00196800
&ZOPN                 SETA &ZOPN+1                                      00196900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00197000
&ZOPO(&ZOPN)          SETC 'DS'                                         00197100
&ZOPV(&ZOPN)          SETC 'CL2'                                        00197200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00197300
.*-------------------------------------------------------------------   00197400
.***AM.L09 ADDR XSERVD_AREA A                                           00197500
&ZOPN                 SETA &ZOPN+1                                      00197600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVD_AREA_ADDR'                 00197700
&ZOPO(&ZOPN)          SETC 'DS'                                         00197800
&ZOPV(&ZOPN)          SETC 'A'                                          00197900
&ZOPD(&ZOPN)          SETC '++ &ZXSERVD_AREA ADDR'                      00198000
.*-------------------------------------------------------------------   00198100
.***AM.L09 ALET XSERVD_AREA F                                           00198200
&ZOPN                 SETA &ZOPN+1                                      00198300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVD_AREA_ALET'                 00198400
&ZOPO(&ZOPN)          SETC 'DS'                                         00198500
&ZOPV(&ZOPN)          SETC 'F'                                          00198600
&ZOPD(&ZOPN)          SETC '++ &ZXSERVD_AREA ALET'                      00198700
.*-------------------------------------------------------------------   00198800
.***AM.L09 ADDR XIN_BASEID A                                            00198900
&ZOPN                 SETA &ZOPN+1                                      00199000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XIN_BASEID_ADDR'                  00199100
&ZOPO(&ZOPN)          SETC 'DS'                                         00199200
&ZOPV(&ZOPN)          SETC 'A'                                          00199300
&ZOPD(&ZOPN)          SETC '++ &ZXIN_BASEID ADDR'                       00199400
.*-------------------------------------------------------------------   00199500
.***AM.L09 ADDR XQRY_BASEID A                                           00199600
&ZOPN                 SETA &ZOPN+1                                      00199700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQRY_BASEID_ADDR'                 00199800
&ZOPO(&ZOPN)          SETC 'DS'                                         00199900
&ZOPV(&ZOPN)          SETC 'A'                                          00200000
&ZOPD(&ZOPN)          SETC '++ &ZXQRY_BASEID ADDR'                      00200100
.*-------------------------------------------------------------------   00200200
.***AM.L09 ADDR XPRODUCT_ID A                                           00200300
&ZOPN                 SETA &ZOPN+1                                      00200400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODUCT_ID_ADDR'                 00200500
&ZOPO(&ZOPN)          SETC 'DS'                                         00200600
&ZOPV(&ZOPN)          SETC 'A'                                          00200700
&ZOPD(&ZOPN)          SETC '++ &ZXPRODUCT_ID ADDR'                      00200800
.*-------------------------------------------------------------------   00200900
.***AM.L09  XVALCHECK_RSN F                                             00201000
&ZOPN                 SETA &ZOPN+1                                      00201100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVALCHECK_RSN'                    00201200
&ZOPO(&ZOPN)          SETC 'DS'                                         00201300
&ZOPV(&ZOPN)          SETC 'F'                                          00201400
&ZOPD(&ZOPN)          SETC '++ &ZXVALCHECK_RSN '                        00201500
.*-------------------------------------------------------------------   00201600
.***AM.L09  XVALCHECK_OFFSET F                                          00201700
&ZOPN                 SETA &ZOPN+1                                      00201800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVALCHECK_OFFSET'                 00201900
&ZOPO(&ZOPN)          SETC 'DS'                                         00202000
&ZOPV(&ZOPN)          SETC 'F'                                          00202100
&ZOPD(&ZOPN)          SETC '++ &ZXVALCHECK_OFFSET '                     00202200
.*-------------------------------------------------------------------   00202300
.***AM.L09  XRSV0020 CL8                                                00202400
&ZOPN                 SETA &ZOPN+1                                      00202500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0020'                         00202600
&ZOPO(&ZOPN)          SETC 'DS'                                         00202700
&ZOPV(&ZOPN)          SETC 'CL8'                                        00202800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00202900
.*-------------------------------------------------------------------   00203000
.***AM.MLM2 SAVED LOCATION COUNTER                                      00203100
                      AIF  (&XPLISTVER GE 1).ZL14LA                     00203200
                      AIF  ('&ZENDBASEPL' NE '').ZL14LA                 00203300
&ZENDBASEPL           SETC 'YES'                                        00203400
&ZOPN                 SETA &ZOPN+1                                      00203500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00203600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00203700
&ZOPV(&ZOPN)          SETC '*'                                          00203800
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00203900
.ZL14LA               ANOP  ,                                           00204000
.*-------------------------------------------------------------------   00204100
.***AM.LVER1                                                            00204200
                      AIF  (&XPLISTVER LT 1).ZL14L                      00204300
.*-------------------------------------------------------------------   00204400
.*-------------------------------------------------------------------   00204500
.***AM.L09  XXML_LEN F                                                  00204600
&ZOPN                 SETA &ZOPN+1                                      00204700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XXML_LEN'                         00204800
&ZOPO(&ZOPN)          SETC 'DS'                                         00204900
&ZOPV(&ZOPN)          SETC 'F'                                          00205000
&ZOPD(&ZOPN)          SETC '++ &ZXXML_LEN '                             00205100
.*-------------------------------------------------------------------   00205200
.***AM.LVER2                                                            00205300
.ZL14L                ANOP  ,                                           00205400
.*-------------------------------------------------------------------   00205500
.*-------------------------------------------------------------------   00205600
.***AM.L10 END OF IWMDINST LIST PARAMETERS                              00205700
&ZOPN                 SETA &ZOPN+1                                      00205800
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00205900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00206000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00206100
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00206200
.*                                                                      00206300
&ZOPN                 SETA &ZOPN+1                                      00206400
&ZOPL(&ZOPN)          SETC ' '                                          00206500
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00206600
&ZOPV(&ZOPN)          SETC '1'                                          00206700
&ZOPD(&ZOPN)          SETC ' '                                          00206800
.*-------------------------------------------------------------------   00206900
.***AL.L12 IWMDINST FMT=LIST MF=S!L PARAMETERS                          00207000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00207100
.*                                                                      00207200
&ZOPN                 SETA  &ZOPN+1                                     00207300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00207400
&ZOPO(&ZOPN)          SETC  'DC'                                        00207500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00207600
&ZOPD(&ZOPN)          SETC  '++ IWMDINST ARG PARMS'                     00207700
.*                                                                      00207800
.ZLMFSLX              ANOP  ,                                           00207900
.*-------------------------------------------------------------------   00208000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00208100
&ZPLLEN               SETA 40                                           00208200
.*                                                                      00208300
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00208400
&ZPLLEN               SETA 44                                           00208500
.ZLLEN2Z              ANOP  ,                                           00208600
.*                                                                      00208700
.******************************************************************     00208800
.***AI.L01 IWMDINST FMT=LIST FILL IN PARAMETER AREA                     00208900
.******************************************************************     00209000
                      ACTR  10000                                       00209100
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00209200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00209300
&ZCVAL                SETC  'LAE'          XAX MODE                     00209400
.ZIMFXA               ANOP ,                                            00209500
.*                                                                      00209600
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00209700
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00209800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00209900
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00210000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00210100
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00210200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00210300
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00210400
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00210500
&ZOPN                 SETA  &ZOPN+1                                     00210600
&ZOPL(&ZOPN)          SETC  ' '                                         00210700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00210800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00210900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00211000
                      AGO   .ZIMFNX                                     00211100
.*                                                                      00211200
.ZIMFN2               ANOP ,                                            00211300
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00211400
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00211500
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00211600
&ZOPN                 SETA  &ZOPN+1                                     00211700
&ZOPL(&ZOPN)          SETC  ' '                                         00211800
&ZOPO(&ZOPN)          SETC  'LAE'                                       00211900
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00212000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00212100
                      AGO   .ZIMFNX                                     00212200
.ZIMFNX1              ANOP ,                                            00212300
&ZOPN                 SETA  &ZOPN+1                                     00212400
&ZOPL(&ZOPN)          SETC  ' '                                         00212500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00212600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00212700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00212800
.ZIMFNX               ANOP ,                                            00212900
.********************************************************************   00213000
.***AI.L02 IWMDINST FMT=LIST INITIALIZE PARAMETER AREA                  00213100
.********************************************************************   00213200
.***AI.L03 MF=(SLE)                                                     00213300
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00213400
.*                                                                      00213500
&ZOPN                 SETA  &ZOPN+1                                     00213600
&ZOPL(&ZOPN)          SETC  ' '                                         00213700
&ZOPO(&ZOPN)          SETC  'XC'                                        00213800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00213900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00214000
.ZIMFLX               ANOP  ,                                           00214100
.*-------------------------------------------------------------------   00214200
.***AI.L04A XVERSION XL1                                                00214300
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00214400
&ZOPN                 SETA  &ZOPN+1                                     00214500
&ZOPL(&ZOPN)          SETC  ' '                                         00214600
&ZOPO(&ZOPN)          SETC  'MVI'                                       00214700
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00214800
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00214900
.ZIMFVW               ANOP  ,                                           00215000
.*-------------------------------------------------------------------   00215100
.***AI.L05 XINSTALL_OPTIONS BL1                                         00215200
&ZW                   SETC  ''                                          00215300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00215400
.*-------------------------------------------------------------------   00215500
.***AI.L08 XINSTALL_OPTIONS "YES"                                       00215600
.***      BL1'1XXXXXXX'                                                 00215700
         AIF   ('&XCOND' NE 'YES').ZI3A                                 00215800
&ZW                   SETC  '&ZW.1'                                     00215900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00216000
                      AGO   .ZI3C                                       00216100
.*                                                                      00216200
.ZI3A                 ANOP  ,                                           00216300
&ZW                   SETC  '&ZW.0'                                     00216400
.ZI3C                 ANOP  ,                                           00216500
.*-------------------------------------------------------------------   00216600
.***AI.L08 XINSTALL_OPTIONS "HEX"                                       00216700
.***      BL1'X1XXXXXX'                                                 00216800
         AIF   ('&XTYPE' NE 'HEX').ZI4A                                 00216900
&ZW                   SETC  '&ZW.1'                                     00217000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00217100
                      AGO   .ZI4C                                       00217200
.*                                                                      00217300
.ZI4A                 ANOP  ,                                           00217400
&ZW                   SETC  '&ZW.0'                                     00217500
.ZI4C                 ANOP  ,                                           00217600
.*-------------------------------------------------------------------   00217700
.***AI.L08 XINSTALL_OPTIONS "XML"                                       00217800
.***      BL1'XX1XXXXX'                                                 00217900
         AIF   ('&XTYPE' NE 'XML').ZI5A                                 00218000
&ZW                   SETC  '&ZW.100000'                                00218100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00218200
                      AGO   .ZI5C                                       00218300
.*                                                                      00218400
.ZI5A                 ANOP  ,                                           00218500
&ZW                   SETC  '&ZW.000000'                                00218600
.ZI5C                 ANOP  ,                                           00218700
.*-------------------------------------------------------------------   00218800
.***AI.L11 XINSTALL_OPTIONS BL1                                         00218900
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00219000
&ZOPN                 SETA  &ZOPN+1                                     00219100
&ZOPL(&ZOPN)          SETC  ' '                                         00219200
&ZOPO(&ZOPN)          SETC  'OI'                                        00219300
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00219400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00219500
.ZI5E                 ANOP  ,                                           00219600
.*-------------------------------------------------------------------   00219700
.***AI.L19 ADDR XSERVD_AREA A                                           00219800
                      AIF   ('&ZXSERVD_AREA' EQ '').ZI7H                00219900
&ZCLNG                SETC  '&XSERVD_AREA'                              00220000
&ZCGPR                SETC  '14'                                        00220100
         AIF   ('&XSERVD_AREA'(1,1) EQ '(').ZI7F  IN GPR                00220200
.*                                                                      00220300
&ZOPN                 SETA  &ZOPN+1                                     00220400
&ZOPL(&ZOPN)          SETC  ' '                                         00220500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00220600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00220700
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVD_AREA XSERVD_AREA'              00220800
.*                                                                      00220900
                      AGO   .ZI7G                                       00221000
.*                                                                      00221100
.ZI7F                 ANOP  ,                                           00221200
&ZCGPR   SETC  '&XSERVD_AREA'(2,K'&XSERVD_AREA-2)                       00221300
.*                                                                      00221400
.ZI7G                 ANOP  ,                                           00221500
.*                                                                      00221600
&ZOPN                 SETA  &ZOPN+1                                     00221700
&ZOPL(&ZOPN)          SETC  ' '                                         00221800
&ZOPO(&ZOPN)          SETC  'ST'                                        00221900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              00222000
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVD_AREA XSERVD_AREA'              00222100
.*                                                                      00222200
.ZI7H                 ANOP  ,                                           00222300
.*-------------------------------------------------------------------   00222400
.***AI.L23 ALET XSERVD_AREA F                                           00222500
         AIF   ('&ZXSERVD_AREA' EQ '').ZI8G                             00222600
         AIF   ('&SYSASCE' EQ 'P').ZI8G    SYSSTATE PRIMARY             00222700
&ZCLNG                SETC  '&XSERVD_AREA'                              00222800
         AIF   ('&XSERVD_AREA'(1,1) EQ '(').ZI8E  IN AR                 00222900
.*                                                                      00223000
&ZCGPR                SETC  '14'                                        00223100
                      AGO   .ZI8F                                       00223200
.*                                                                      00223300
.ZI8E                 ANOP  ,                                           00223400
&ZCGPR   SETC  '&XSERVD_AREA'(2,K'&XSERVD_AREA-2)                       00223500
.*                                                                      00223600
.ZI8F                 ANOP  ,                                           00223700
.*                                                                      00223800
&ZOPN                 SETA  &ZOPN+1                                     00223900
&ZOPL(&ZOPN)          SETC  ' '                                         00224000
&ZOPO(&ZOPN)          SETC  'STAM'                                      00224100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,8(1)'                        00224200
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVD_AREA XSERVD_AREA'              00224300
.*                                                                      00224400
.ZI8G                 ANOP  ,                                           00224500
.*-------------------------------------------------------------------   00224600
.***AI.L19 ADDR XIN_BASEID A                                            00224700
                      AIF   ('&ZXIN_BASEID' EQ '').ZI9H                 00224800
&ZCLNG                SETC  '&XIN_BASEID'                               00224900
&ZCGPR                SETC  '14'                                        00225000
         AIF   ('&XIN_BASEID'(1,1) EQ '(').ZI9F  IN GPR                 00225100
.*                                                                      00225200
&ZOPN                 SETA  &ZOPN+1                                     00225300
&ZOPL(&ZOPN)          SETC  ' '                                         00225400
&ZOPO(&ZOPN)          SETC  'LA'                                        00225500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00225600
&ZOPD(&ZOPN)          SETC  '++ &ZXIN_BASEID XIN_BASEID'                00225700
.*                                                                      00225800
                      AGO   .ZI9G                                       00225900
.*                                                                      00226000
.ZI9F                 ANOP  ,                                           00226100
&ZCGPR   SETC  '&XIN_BASEID'(2,K'&XIN_BASEID-2)                         00226200
.*                                                                      00226300
.ZI9G                 ANOP  ,                                           00226400
.*                                                                      00226500
&ZOPN                 SETA  &ZOPN+1                                     00226600
&ZOPL(&ZOPN)          SETC  ' '                                         00226700
&ZOPO(&ZOPN)          SETC  'ST'                                        00226800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             00226900
&ZOPD(&ZOPN)          SETC  '++ &ZXIN_BASEID XIN_BASEID'                00227000
.*                                                                      00227100
.ZI9H                 ANOP  ,                                           00227200
.*-------------------------------------------------------------------   00227300
.***AI.L19 ADDR XQRY_BASEID A                                           00227400
                      AIF   ('&ZXQRY_BASEID' EQ '').ZI10H               00227500
&ZCLNG                SETC  '&XQRY_BASEID'                              00227600
&ZCGPR                SETC  '14'                                        00227700
         AIF   ('&XQRY_BASEID'(1,1) EQ '(').ZI10F  IN GPR               00227800
.*                                                                      00227900
&ZOPN                 SETA  &ZOPN+1                                     00228000
&ZOPL(&ZOPN)          SETC  ' '                                         00228100
&ZOPO(&ZOPN)          SETC  'LA'                                        00228200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00228300
&ZOPD(&ZOPN)          SETC  '++ &ZXQRY_BASEID XQRY_BASEID'              00228400
.*                                                                      00228500
                      AGO   .ZI10G                                      00228600
.*                                                                      00228700
.ZI10F                ANOP  ,                                           00228800
&ZCGPR   SETC  '&XQRY_BASEID'(2,K'&XQRY_BASEID-2)                       00228900
.*                                                                      00229000
.ZI10G                ANOP  ,                                           00229100
.*                                                                      00229200
&ZOPN                 SETA  &ZOPN+1                                     00229300
&ZOPL(&ZOPN)          SETC  ' '                                         00229400
&ZOPO(&ZOPN)          SETC  'ST'                                        00229500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,16(,1)'                             00229600
&ZOPD(&ZOPN)          SETC  '++ &ZXQRY_BASEID XQRY_BASEID'              00229700
.*                                                                      00229800
.ZI10H                ANOP  ,                                           00229900
.*-------------------------------------------------------------------   00230000
.***AI.L19 ADDR XPRODUCT_ID A                                           00230100
                      AIF   ('&ZXPRODUCT_ID' EQ '').ZI11H               00230200
&ZCLNG                SETC  '&XPRODUCT_ID'                              00230300
&ZCGPR                SETC  '14'                                        00230400
         AIF   ('&XPRODUCT_ID'(1,1) EQ '(').ZI11F  IN GPR               00230500
.*                                                                      00230600
&ZOPN                 SETA  &ZOPN+1                                     00230700
&ZOPL(&ZOPN)          SETC  ' '                                         00230800
&ZOPO(&ZOPN)          SETC  'LA'                                        00230900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00231000
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODUCT_ID XPRODUCT_ID'              00231100
.*                                                                      00231200
                      AGO   .ZI11G                                      00231300
.*                                                                      00231400
.ZI11F                ANOP  ,                                           00231500
&ZCGPR   SETC  '&XPRODUCT_ID'(2,K'&XPRODUCT_ID-2)                       00231600
.*                                                                      00231700
.ZI11G                ANOP  ,                                           00231800
.*                                                                      00231900
&ZOPN                 SETA  &ZOPN+1                                     00232000
&ZOPL(&ZOPN)          SETC  ' '                                         00232100
&ZOPO(&ZOPN)          SETC  'ST'                                        00232200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00232300
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODUCT_ID XPRODUCT_ID'              00232400
.*                                                                      00232500
.ZI11H                ANOP  ,                                           00232600
.*-------------------------------------------------------------------   00232700
.***AI.LVER01                                                           00232800
                      AIF  (&XPLISTVER LT 1).ZI15Z                      00232900
.*-------------------------------------------------------------------   00233000
.***AI.L25  XXML_LEN F                                                  00233100
                      AIF   ('&ZXXML_LEN' EQ '').ZI15E                  00233200
                      AIF   ('&ZXXML_LEN' EQ 'OUTPUT').ZI15E            00233300
&ZCGPR                SETC  '&XXML_LEN'                                 00233400
.*                                                                      00233500
                      AIF   ('&XXML_LEN'(1,1) NE '(').ZI15B             00233600
&ZCGPR   SETC  '0('.'&XXML_LEN'(2,K'&XXML_LEN-2).')'                    00233700
                      AGO   .ZI15D                                      00233800
.ZI15B                ANOP  ,                                           00233900
.*                                                                      00234000
&ZC                   SETC  '&XXML_LEN'(1,1)                            00234100
                      AIF   (T'&ZC NE 'N').ZI15D                        00234200
&ZC                   SETC  '&XXML_LEN'                                 00234300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00234400
&ZCGPR                SETC  '=AL4(&XXML_LEN)'                           00234500
.*                                                                      00234600
.ZI15D                ANOP  ,                                           00234700
.*                                                                      00234800
&ZOPN                 SETA  &ZOPN+1                                     00234900
&ZOPL(&ZOPN)          SETC  ' '                                         00235000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00235100
&ZOPV(&ZOPN)          SETC  '40(4,1),&ZCGPR'                            00235200
&ZOPD(&ZOPN)          SETC  '++ &ZXXML_LEN XXML_LEN'                    00235300
.*                                                                      00235400
.ZI15E                ANOP  ,                                           00235500
.*-------------------------------------------------------------------   00235600
.***AI.LVER02                                                           00235700
.ZI15Z                ANOP  ,                                           00235800
.*-------------------------------------------------------------------   00235900
&ZOPN1                SETA &ZOPN                                        00236000
.*******************************************************************    00236100
.***  PROCESS IWMDINST OUTPUT PARAMETERS                                00236200
.*******************************************************************    00236300
                      ACTR  10000                                       00236400
.*------------------------------------------------------------------    00236500
.***AO.L02 XVALCHECK_RSN F                                              00236600
         AIF   ('&ZXVALCHECK_RSN' EQ 'OUTPUT').ZO12A  OUTPUT            00236700
         AIF   ('&ZXVALCHECK_RSN' NE 'INOUT').ZO12C  INOUT              00236800
.ZO12A    AIF   ('&XVALCHECK_RSN'(1,1) NE '(').ZO12B  ADDR IN GPR       00236900
&ZCGPR   SETC  '&XVALCHECK_RSN'(2,K'&XVALCHECK_RSN-2)                   00237000
&ZOPN                 SETA  &ZOPN+1                                     00237100
&ZOPL(&ZOPN)          SETC  ' '                                         00237200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00237300
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),24(1)'                         00237400
&ZOPD(&ZOPN)          SETC  '++ XVALCHECK_RSN F'                        00237500
                      AGO   .ZO12C                                      00237600
.*                                                                      00237700
.ZO12B                ANOP  ,                                           00237800
&ZAWRK   SETA  K'&XVALCHECK_RSN                                         00237900
         AIF   ('&XVALCHECK_RSN'(&ZAWRK,1) NE ')').ZO12G                00238000
&ZN      SETA  2                                                        00238100
.ZO12H    ANOP                                                          00238200
         AIF   (&ZN GE &ZAWRK).ZO12G                                    00238300
         AIF   ('&XVALCHECK_RSN'(&ZN,1) NE '(').ZO12I                   00238400
&ZC      SETC  '&XVALCHECK_RSN'(1,&ZN).'4'.','                          00238500
&ZC      SETC  '&ZC'.'&XVALCHECK_RSN'(&ZN+1,&ZAWRK-&ZN).',24(1)'        00238600
         AGO   .ZO12J                                                   00238700
.ZO12I    ANOP                                                          00238800
&ZN      SETA  &ZN+1                                                    00238900
         AGO   .ZO12H                                                   00239000
.ZO12G    ANOP                                                          00239100
&ZC      SETC  '&XVALCHECK_RSN.(4),24(1)'                               00239200
.ZO12J    ANOP                                                          00239300
&ZOPN                 SETA  &ZOPN+1                                     00239400
&ZOPL(&ZOPN)          SETC  ' '                                         00239500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00239600
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00239700
&ZOPD(&ZOPN)          SETC  '++ XVALCHECK_RSN F'                        00239800
.ZO12C                ANOP  ,                                           00239900
.*------------------------------------------------------------------    00240000
.***AO.L02 XVALCHECK_OFFSET F                                           00240100
         AIF   ('&ZXVALCHECK_OFFSET' EQ 'OUTPUT').ZO13A  OUTPUT         00240200
         AIF   ('&ZXVALCHECK_OFFSET' NE 'INOUT').ZO13C  INOUT           00240300
.ZO13A    AIF   ('&XVALCHECK_OFFSET'(1,1) NE '(').ZO13B  ADDR IN GPR    00240400
&ZCGPR   SETC  '&XVALCHECK_OFFSET'(2,K'&XVALCHECK_OFFSET-2)             00240500
&ZOPN                 SETA  &ZOPN+1                                     00240600
&ZOPL(&ZOPN)          SETC  ' '                                         00240700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00240800
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),28(1)'                         00240900
&ZOPD(&ZOPN)          SETC  '++ XVALCHECK_OFFSET F'                     00241000
                      AGO   .ZO13C                                      00241100
.*                                                                      00241200
.ZO13B                ANOP  ,                                           00241300
&ZAWRK   SETA  K'&XVALCHECK_OFFSET                                      00241400
         AIF   ('&XVALCHECK_OFFSET'(&ZAWRK,1) NE ')').ZO13G             00241500
&ZN      SETA  2                                                        00241600
.ZO13H    ANOP                                                          00241700
         AIF   (&ZN GE &ZAWRK).ZO13G                                    00241800
         AIF   ('&XVALCHECK_OFFSET'(&ZN,1) NE '(').ZO13I                00241900
&ZC      SETC  '&XVALCHECK_OFFSET'(1,&ZN).'4'.','                       00242000
&ZC      SETC  '&ZC'.'&XVALCHECK_OFFSET'(&ZN+1,&ZAWRK-&ZN).',28(1)'     00242100
         AGO   .ZO13J                                                   00242200
.ZO13I    ANOP                                                          00242300
&ZN      SETA  &ZN+1                                                    00242400
         AGO   .ZO13H                                                   00242500
.ZO13G    ANOP                                                          00242600
&ZC      SETC  '&XVALCHECK_OFFSET.(4),28(1)'                            00242700
.ZO13J    ANOP                                                          00242800
&ZOPN                 SETA  &ZOPN+1                                     00242900
&ZOPL(&ZOPN)          SETC  ' '                                         00243000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00243100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00243200
&ZOPD(&ZOPN)          SETC  '++ XVALCHECK_OFFSET F'                     00243300
.ZO13C                ANOP  ,                                           00243400
.*******************************************************************    00243500
.***AO.X02  RETURN CODE PROCESSING                                      00243600
.*******************************************************************    00243700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00243800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00243900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00244000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00244100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00244200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00244300
&ZOPN                 SETA  &ZOPN+1                                     00244400
&ZOPL(&ZOPN)          SETC  ' '                                         00244500
&ZOPO(&ZOPN)          SETC  'ST'                                        00244600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00244700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00244800
                      AGO   .ZMRETX                                     00244900
.*                                                                      00245000
.ZMRET2               ANOP  ,                                           00245100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00245200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00245300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00245400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00245500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00245600
&ZOPN                 SETA  &ZOPN+1                                     00245700
&ZOPL(&ZOPN)          SETC  ' '                                         00245800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00245900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00246000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00246100
.ZMRETX               ANOP  ,                                           00246200
.*******************************************************************    00246300
.***AO.X03  REASON CODE PROCESSING                                      00246400
.*******************************************************************    00246500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00246600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00246700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00246800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00246900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00247000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00247100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00247200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00247300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00247400
&ZOPN                 SETA  &ZOPN+1                                     00247500
&ZOPL(&ZOPN)          SETC  ' '                                         00247600
&ZOPO(&ZOPN)          SETC  'ST'                                        00247700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00247800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00247900
                      AGO   .ZMRSNX                                     00248000
.*                                                                      00248100
.ZMRSN2               ANOP  ,                                           00248200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00248300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00248400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00248500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00248600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00248700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00248800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00248900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00249000
&ZOPN                 SETA  &ZOPN+1                                     00249100
&ZOPL(&ZOPN)          SETC  ' '                                         00249200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00249300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00249400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00249500
.ZMRSNX               ANOP  ,                                           00249600
.*******************************************************************    00249700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00249800
.*******************************************************************    00249900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00250000
.*******************************************************************    00250100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00250200
.*******************************************************************    00250300
                      ACTR  10000                                       00250400
.*                                                                      00250500
                      LCLA  &ZLC           COLUMN POSITION              00250600
                      LCLA  &ZOPX          LIST TABLE INDEX             00250700
                      LCLC  &ZLL           LABEL                        00250800
                      LCLC  &ZLOP          OPERATION                    00250900
                      LCLC  &ZLV           VALUE                        00251000
                      LCLC  &ZLD           DESCRIPTION                  00251100
.*                                                                      00251200
&ZOPX                 SETA  1                                           00251300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00251400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00251500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00251600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00251700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00251800
                      AIF   (K'&ZLD LE 0).ZL5                           00251900
&ZLC                  SETA  35             COMMENT COLUMN               00252000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00252100
&ZLC                  SETA  33             COMMMENT COLUMN              00252200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00252300
&ZLV                  SETC  '&ZLV'.' '                                  00252400
                      AGO   .ZL3                                        00252500
.*                                                                      00252600
.ZL4                  ANOP  ,                                           00252700
&ZLV                  SETC  '&ZLV'.' '                                  00252800
.ZL5                  ANOP  ,                                           00252900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00253000
.*                                                                      00253100
&ZLL     &ZLOP &ZLV                                                     00253200
.*                                                                      00253300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00253400
                      AGO   .ZL2           CONTINUE LOOPING             00253500
.*                                                                      00253600
.ZLX                  ANOP  ,                                           00253700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00253800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00253900
         L     14,16(0,0)              GET CVT ADDRESS                  00254000
         AIF   ('&SYSASCE' EQ 'P').NOAR    CHECK FOR AR MODE CALLERS    00254100
         LAE   14,0(14,0)              CLEAR AR 14                      00254200
.NOAR    ANOP                                                           00254300
         TM    CVTOSLV1-CVT(14),X'10'      TEST FOR SP520 RELEASE       00254400
         BO    WLM&SYSNDX              BRANCH WHEN WLM IS PRESENT       00254500
         LA    0,IWMRSNCODENOPOLMGT    SET REASON CODE = NO WLM         00254600
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00254700
         B     END&SYSNDX              BRANCH TO END LABEL              00254800
WLM&SYSNDX DS    0H                    BRANCH LABEL FOR WLM PRESENT     00254900
         L     14,772(14,0)            GET SFT ADDRESS                  00255000
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00255100
         LA    15,31                   GET EX FOR SERVICE ROUTINE       00255200
         OR    14,15                   GET PC NUMBER                    00255300
         PC    0(14)                                                    00255400
END&SYSNDX DS    0H                    END LABEL                        00255500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00255600
.ZLINKX               ANOP  ,                                           00255700
.*******************************************************************    00255800
.***AP.X01  FORMAT GENERATED CODE                                       00255900
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00256000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00256100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00256200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00256300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00256400
                      AIF   (K'&ZLD LE 0).ZL51                          00256500
&ZLC                  SETA  35             COMMENT COLUMN               00256600
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00256700
&ZLC                  SETA  33             COMMENT COLUMN               00256800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00256900
&ZLV                  SETC  '&ZLV'.' '                                  00257000
                      AGO   .ZL31                                       00257100
.*                                                                      00257200
.ZL41                 ANOP  ,                                           00257300
&ZLV                  SETC  '&ZLV'.' '                                  00257400
.ZL51                 ANOP  ,                                           00257500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00257600
.*                                                                      00257700
&ZLL     &ZLOP &ZLV                                                     00257800
.*                                                                      00257900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00258000
                      AGO   .ZL21          CONTINUE LOOPING             00258100
.*                                                                      00258200
.ZLX1                 ANOP  ,                                           00258300
.*******************************************************************    00258400
.***AP.X02  END OF IWMDINST MACRO                                       00258500
&ZIWMDINST            SETC  'YES'          SET IWMDINST USED            00258600
         POP   PRINT                                                    00258700
*                                            IWMDINST-1                 00258800
         SPACE 1                                                        00258900
.ZLX2                 ANOP  ,                                           00259000
         MEND                                                           00259100
**********************************************************************/ 00259200
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00259300
*%IWMDINST: MACRO KEYS(SERVD_AREA,TYPE,XML_LEN,QRY_BASEID,PRODUCT_ID,   00259400
*                 VALCHECK_RSN,VALCHECK_OFFSET,COND,IN_BASEID,RETCODE,  00259500
*                 RSNCODE,PLISTVER,MF);                                 00259600
*  ANS('?'!!MACLABEL!!' '!!'IWMDINSP '!!MACLIST!!                       00259700
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00259800
*%END IWMDINST;                                                         00259900
