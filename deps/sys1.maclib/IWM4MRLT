*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4MRLT                              -02/22/21-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Relate monitoring environments (PBs)          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2021                               * 00001200
*                                                                     * 00001300
* STATUS= HBB77D0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The calling subsystem work manager can use IWM4MRLT to relate  * 00002100
*      two different monitoring environments that are associated with * 00002200
*      the same work request.  IWM4MRLT initializes a monitoring      * 00002300
*      environment, called a dependent monitoring environment, and    * 00002400
*      associates it with a previously established monitoring         * 00002500
*      environment, called a parent monitoring environment.           * 00002600
*                                                                     * 00002700
*      You can use IWM4MRLT when you do not have direct access to the * 00002800
*      information required by IWM4MINI. If the caller has the        * 00002900
*      monitoring for a parent environment that is previously         * 00003000
*      established for the same work request, you provide it in the   * 00003100
*      PARENTMONTKN / PARENTMONTKN64 parameter. If the caller does    * 00003200
*      not pass the monitoring token, you can use PARENTP=FINDACTIVE  * 00003300
*      to specify that the parent monitoring environment is the       * 00003400
*      active monitoring environment owned by the address space and   * 00003500
*      which is associated with the TCB provided via PARENTTCB.       * 00003600
*                                                                     * 00003700
*      IWM4MRLT must be used together with IWM4MXFR to ensure that    * 00003800
*      the dependent monitoring environment is a valid representation * 00003900
*      for the work request.                                          * 00004000
*                                                                     * 00004100
*      Optionally with this macro,you can use the OWNER_TOKEN and     * 00004200
*      OWNER_DATA parameters to use the monitoring environment for    * 00004300
*      your own purposes.You can use the token/data to keep your own  * 00004400
*      information.                                                   * 00004500
*                                                                     * 00004600
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00004700
*                                                                     * 00004800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004900
*                                                                     * 00005000
*01* ENVIRONMENT:                                                     * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*      Dispatchable unit mode: Task or SRB mode.                      * 00005400
*                                                                     * 00005500
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005600
*                                                                     * 00005700
*      Locks:            Unlocked when PARENT=FINDACTIVE is           * 00005800
*                        specified, otherwise, no restrictions.       * 00005900
*                                                                     * 00006000
*      Control parameters:     Control parameters must be in the      * 00006100
*                        primary address space, except the TCB, if    * 00006200
*                        specified, must reside in current home       * 00006300
*                        address space.                               * 00006400
*                                                                     * 00006500
*      Minimum authorization: Problem state or supervisor state.  PSW * 00006600
*                        key must either be 0 or match the value      * 00006700
*                        supplied on IWM4MCRE.                        * 00006800
*                                                                     * 00006900
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00007000
*                        mode, code SYSSTATE AMODE64=YES before       * 00007100
*                        invoking this macro.                         * 00007200
*                                                                     * 00007300
*      ASC mode:         Primary.                                     * 00007400
*                                                                     * 00007500
*      Interrupt status: Enabled for I/O and external interrupts.     * 00007600
*                                                                     * 00007700
*01* PROGRAMMING REQUIREMENTS:                                        * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*    1.  You must include the IWMYCON mapping macro in the calling    * 00008100
*        program.                                                     * 00008200
*                                                                     * 00008300
*    2.  If the key specified on IWM4MCRE for the input MONTKN /      * 00008400
*        MONTKN64 was a user key (8-F), then the following must be    * 00008500
*        true:                                                        * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*        o   If you specify PARENTP=YES, then:                        * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*            -   Primary addressability must exist to the performance * 00009200
*                block IWM4MCRE obtained (represented by the input    * 00009300
*                MONTKN / MONTKN64).  You could do this by ensuring   * 00009400
*                that current primary matches primary at the time     * 00009500
*                that IWM4MCRE was invoked. If this service is        * 00009600
*                invoked in a subspace, the condition may be          * 00009700
*                satisfied by ensuring that the performance block is  * 00009800
*                shared with the base space.                          * 00009900
*                                                                     * 00010000
*            -   You cannot specify the list form of this macro. With * 00010100
*                PARENTP=YES, IWM4MRLT produces an inline expansion   * 00010200
*                rather than an out-of-line service, so you do not    * 00010300
*                need a parameter list. Registers 0,1,14, and 15 are  * 00010400
*                not preserved across the expansion.                  * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*        o   If you specify PARENTP=FINDACTIVE, then the caller must  * 00010900
*            be in non-cross-memory mode (PASN=SASN=HASN). That is,   * 00011000
*            the current primary (and home) must match the primary    * 00011100
*            (and home) at the time that IWM4MCRE was invoked.        * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*    3.  If the key specified on IWM4MCRE for the parent environment  * 00011600
*        was a user key (8-F), then either primary or secondary       * 00011700
*        addressability must exist to the monitoring environment for  * 00011800
*        the parent environment.                                      * 00011900
*                                                                     * 00012000
*    4.  Both monitoring environments must be established on the same * 00012100
*        MVS image.                                                   * 00012200
*                                                                     * 00012300
*    5.  The caller must serialize to prevent any delay monitoring    * 00012400
*        services from being invoked concurrently for the monitoring  * 00012500
*        environment.                                                 * 00012600
*                                                                     * 00012700
*    6.  When PARENTP=YES, the caller must provide recovery.          * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*01* RESTRICTIONS:                                                    * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*    1.  This macro may only be used on z/OS V2R1 or higher.          * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*01* INPUT REGISTER INFORMATION:                                      * 00014100
*                                                                     * 00014200
*    Before issuing the IWM4MRLT macro, the caller does not have to   * 00014300
*    place any information into any register unless using it in       * 00014400
*    register notation for a particular parameter, or using it as a   * 00014500
*    base register.                                                   * 00014600
*                                                                     * 00014700
*    The following general purpose registers (GPRs) have to contain   * 00014800
*    the specified information:                                       * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*    REGISTER  CONTENTS                                               * 00015200
*                                                                     * 00015300
*    13        The address of a 216-byte standard save area in the    * 00015400
*              primary address space.                                 * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*01* OUTPUT REGISTER INFORMATION:                                     * 00015900
*                                                                     * 00016000
*    When control returns to the caller, the GPRs contain:            * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*    REGISTER  CONTENTS                                               * 00016400
*                                                                     * 00016500
*    0         Reason code if GR15 return code is non-zero            * 00016600
*                                                                     * 00016700
*    1         Used as work registers by the system                   * 00016800
*                                                                     * 00016900
*    2-13      Unchanged                                              * 00017000
*                                                                     * 00017100
*    14        Used as work registers by the system                   * 00017200
*                                                                     * 00017300
*    15        Return code                                            * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*    When control returns to the caller, the ARs contain:             * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*    REGISTER  CONTENTS                                               * 00018100
*                                                                     * 00018200
*    0-1       Used as work registers by the system                   * 00018300
*                                                                     * 00018400
*    2-13      Unchanged                                              * 00018500
*                                                                     * 00018600
*    14-15     Used as work registers by the system                   * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*    Some callers depend on register contents remaining the same      * 00019100
*    before and after issuing a service.  If the system changes the   * 00019200
*    contents of registers on which the caller depends, the caller    * 00019300
*    must save them before issuing the service, and restore them      * 00019400
*    after the system returns control.                                * 00019500
*                                                                     * 00019600
*01* PERFORMANCE IMPLICATIONS:                                        * 00019700
*                                                                     * 00019800
*    None                                                             * 00019900
*                                                                     * 00020000
*01* SYNTAX:                                                          * 00020100
*                                                                     * 00020200
*Ýxlabel¨  IWM4MRLT  Ð  FUNCTION=CREATE                               * 00020300
*                    !    Ý,OWNER_TOKEN                               * 00020400
*                    !                  =»xowner_token!NO_OWNER_TOKEN * 00020500
*                    !                  º¨                            * 00020600
*                    !    Ý,OWNER_DATA=»xowner_data!NO_OWNER_DATAº¨   * 00020700
*                    !   Ð ,DISPTYPE=TCB                              * 00020800
*                    !   !     ,TCB=xtcb                              * 00020900
*                    !   ¿ ,DISPTYPE=SRB                              * 00021000
*                    !       Ð ,SAMEDU=YES                            * 00021100
*                    !       ¿ ,SAMEDU=NO                             * 00021200
*                    !   Ð ,PARENTP=YES                               * 00021300
*                    !   !   Ð ,PARENTMONTKN=xparentmontkn            * 00021400
*                    !   !   ¿ ,PARENTMONTKN64                        * 00021500
*                    !   !                     =xparentmontkn64       * 00021600
*                    !   !    Ý,PARENTENVTKN                          * 00021700
*                    !   !                   =»xparentenvtkn!NO_PAREN * 00021800
*                    !   !                   TENVTKNº¨                * 00021900
*                    !   !    Ý,PARENTENVTKN64                        * 00022000
*                    !   !                     =»xparentenvtkn64!NO_P * 00022100
*                    !   !                     ARENTENVTKN64º¨        * 00022200
*                    !   !   Ð ,PARENTENV=NOSWITCH                    * 00022300
*                    !   !   Ô ,PARENTENV=SECONDARY                   * 00022400
*                    !   !   ¿ ,PARENTENV=HOME                        * 00022500
*                    !   ¿ ,PARENTP=FINDACTIVE                        * 00022600
*                    !         ,PARENTTCB=xparenttcb                  * 00022700
*                    ¿ ,FUNCTION=DELETE                               * 00022800
*                    Ð ,MONTKN=xmontkn                                * 00022900
*                    ¿ ,MONTKN64=xmontkn64                            * 00023000
*                     Ý,EWLM=»NOº¨                                    * 00023100
*                     Ý,RETCODE=xretcode¨                             * 00023200
*                     Ý,RSNCODE=xrsncode¨                             * 00023300
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00023400
*                    ÐÝ,MF=S¨                                         * 00023500
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00023600
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*      Where:                                                         * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*      Ýxlabel¨                                                       * 00024300
*          is an optional symbol, starting in column 1, that is the   * 00024400
*          name on the IWM4MRLT macro invocation.  The name must      * 00024500
*          conform to the rules for an ordinary assembler language    * 00024600
*          symbol.                                                    * 00024700
*          DEFAULT: No name.                                          * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*      FUNCTION=»CREATE!DELETEº                                       * 00025300
*          is a required keyword input which indicates whether the    * 00025400
*          relationship is being established or inactivated.          * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*          FUNCTION=CREATE                                            * 00025800
*              indicates that the relationship is being established.  * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*              ÝOWNER_TOKEN=»xowner_token!NO_OWNER_TOKENº¨            * 00026200
*                  is the name (RS-type), or address in register      * 00026300
*                  (2)-(12), of an optional 32 bit input which        * 00026400
*                  contains a token maintained by the user/owner of   * 00026500
*                  the monitoring environment.  The format is         * 00026600
*                  undefined to MVS.                                  * 00026700
*                  DEFAULT: NO_OWNER_TOKEN indicates that no owner    * 00026800
*                  token is provided on this service.                 * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*              ÝOWNER_DATA=»xowner_data!NO_OWNER_DATAº¨               * 00027400
*                  is the name (RS-type), or address in register      * 00027500
*                  (2)-(12), of an optional 32 bit input which        * 00027600
*                  contains data maintained by the user/owner of the  * 00027700
*                  monitoring environment.  The format is undefined   * 00027800
*                  to MVS.                                            * 00027900
*                  DEFAULT: NO_OWNER_DATA indicates that no owner     * 00028000
*                  data is provided.                                  * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*              DISPTYPE=»TCB!SRBº                                     * 00028600
*                  is a required keyword input which describes the    * 00028700
*                  dispatchable units which participate in processing * 00028800
*                  work requests associated with the monitoring       * 00028900
*                  environment represented by the monitoring token    * 00029000
*                  (MONTKN / MONTKN64).                               * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*                  DISPTYPE=TCB                                       * 00029400
*                                                                     * 00029500
*                      indicates that work requests run in TCB mode   * 00029600
*                      under a TCB within the current home address    * 00029700
*                      space. Note that in cross-memory mode, this    * 00029800
*                      may be different from the current primary      * 00029900
*                      address space.                                 * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                      TCB=xtcb                                       * 00030300
*                          is the name (RS-type), or address in       * 00030400
*                          register (2)-(12), of a required character * 00030500
*                          input which defines the TCB within the     * 00030600
*                          current home address space which will      * 00030700
*                          serve the work request.  Note that this    * 00030800
*                          name is not the pointer to the TCB, but    * 00030900
*                          the name of the data area containing the   * 00031000
*                          TCB.  A typical invocation might replace   * 00031100
*                          xTCB with TCB.                             * 00031200
*                                                                     * 00031300
*                          Ordinarily the input TCB specified should  * 00031400
*                          be the TCB under which the work request    * 00031500
*                          (e.g. transaction program) runs and under  * 00031600
*                          which the delay information is recorded    * 00031700
*                          (in spite of the fact that task switches   * 00031800
*                          may occur).                                * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                  DISPTYPE=SRB                                       * 00032300
*                                                                     * 00032400
*                      indicates that work requests run in SRB mode   * 00032500
*                      within the current home address space.         * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                      SAMEDU=»YES!NOº                                * 00032900
*                          is a required keyword input which          * 00033000
*                          describes whether the dependent monitoring * 00033100
*                          environment associated with MONTKN /       * 00033200
*                          MONTKN64 is running under the same         * 00033300
*                          dispatchable unit as the parent.  In that  * 00033400
*                          case, it would behave as a "subroutine"    * 00033500
*                          and execute on the same processor (CP,     * 00033600
*                          a.k.a. CPU) as the parent environment.     * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                          SAMEDU=YES                                 * 00034000
*                                                                     * 00034100
*                              indicates that the work request runs   * 00034200
*                              as a subroutine of the parent.         * 00034300
*                                                                     * 00034400
*                              YES may not be specified when          * 00034500
*                              PARENTP(FINDACTIVE) is coded.          * 00034600
*                                                                     * 00034700
*                          SAMEDU=NO                                  * 00034800
*                                                                     * 00034900
*                              indicates that the work request runs   * 00035000
*                              in SRB mode and is independent of the  * 00035100
*                              parent dispatchable unit.              * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*              PARENTP=»YES!FINDACTIVEº                               * 00036300
*                  is a required keyword input which describes        * 00036400
*                  whether the parent monitoring environment is known * 00036500
*                  or not.                                            * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                  PARENTP=YES                                        * 00036900
*                                                                     * 00037000
*                      indicates that the parent monitoring           * 00037100
*                      environment is known.                          * 00037200
*                                                                     * 00037300
*                      Note that this produces an inline expansion    * 00037400
*                      rather than an out-of-line service, so that no * 00037500
*                      parameter list is needed.  Thus the MF keyword * 00037600
*                      is not applicable when this option is          * 00037700
*                      specified, and is not allowed.  Registers 0,   * 00037800
*                      1, 14, and 15 are not preserved across the     * 00037900
*                      expansion.                                     * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                      The following is a set of mutually exclusive   * 00038300
*                      keys.  This set is required; only one key must * 00038400
*                      be specified.                                  * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*                      PARENTMONTKN=xparentmontkn                     * 00038800
*                          belongs to a set of mutually exclusive     * 00038900
*                          keys. It is the name (RS-type), or address * 00039000
*                          in register (2)-(12), of a 32 bit input    * 00039100
*                          which contains the delay monitoring token  * 00039200
*                          for the parent environment, i.e. the       * 00039300
*                          monitoring environment which was           * 00039400
*                          established earlier and contains the       * 00039500
*                          characteristics to be inherited.           * 00039600
*                                                                     * 00039700
*                      PARENTMONTKN64=xparentmontkn64                 * 00039800
*                          belongs to a set of mutually exclusive     * 00039900
*                          keys. It is the name (RS-type), or address * 00040000
*                          in register (2)-(12), of a 64 bit input    * 00040100
*                          which contains the long delay monitoring   * 00040200
*                          token for the parent environment, i.e. the * 00040300
*                          monitoring environment which was           * 00040400
*                          established earlier and contains the       * 00040500
*                          characteristics to be inherited.           * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*                      End of a set of mutually exclusive required    * 00041000
*                      keys.                                          * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*                      ÝPARENTENVTKN=»xparentenvtkn!NO_PARENTENVTKNº¨ * 00041500
*                                                                     * 00041600
*                          is the name (RS-type), or address in       * 00041700
*                          register (2)-(12), of an optional 32 bit   * 00041800
*                          input                                      * 00041900
*                          DEFAULT: NO_PARENTENVTKN indicates that no * 00042000
*                          parent environment token is provided on    * 00042100
*                          this service.                              * 00042200
*                                                                     * 00042300
*                      ÝPARENTENVTKN64=»xparentenvtkn64!NO_PARENTENVT * 00042400
*                          KN64º¨                                     * 00042500
*                          is the name (RS-type), or address in       * 00042600
*                          register (2)-(12), of an optional 64 bit   * 00042700
*                          input for internal use only                * 00042800
*                          DEFAULT: NO_PARENTENVTKN64 indicates that  * 00042900
*                          no parent environment token is provided on * 00043000
*                          this service.                              * 00043100
*                                                                     * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*                      PARENTENV=»NOSWITCH!SECONDARY!HOMEº            * 00043600
*                          is a required keyword input which          * 00043700
*                          describes whether a space switch is needed * 00043800
*                          to access the parent monitoring            * 00043900
*                          environment.                               * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                          PARENTENV=NOSWITCH                         * 00044300
*                                                                     * 00044400
*                              indicates that NO space switch is      * 00044500
*                              needed to access the parent monitoring * 00044600
*                              environment.  This would be            * 00044700
*                              appropriate if the parent monitoring   * 00044800
*                              environment was established (by        * 00044900
*                              IWM4MCRE) to be used by routines in a  * 00045000
*                              specific system key or if it was       * 00045100
*                              established to be used in a specific   * 00045200
*                              user key in the current primary.       * 00045300
*                                                                     * 00045400
*                          PARENTENV=SECONDARY                        * 00045500
*                                                                     * 00045600
*                              indicates that the parent monitoring   * 00045700
*                              environment was established in current * 00045800
*                              secondary (for use by a specific user  * 00045900
*                              key).                                  * 00046000
*                                                                     * 00046100
*                          PARENTENV=HOME                             * 00046200
*                                                                     * 00046300
*                              indicates that the parent monitoring   * 00046400
*                              environment was established in current * 00046500
*                              home (for use by a specific user key). * 00046600
*                              Use of this option requires that the   * 00046700
*                              program must reside in the MVS common  * 00046800
*                              area.                                  * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                  PARENTP=FINDACTIVE                                 * 00047500
*                                                                     * 00047600
*                      indicates that the parent monitoring           * 00047700
*                      environment is unknown, but requests that the  * 00047800
*                      input monitoring environment be related to the * 00047900
*                      active monitoring environment owned by the     * 00048000
*                      current HOME address space and which is        * 00048100
*                      associated with the TCB specified by PARENTTCB * 00048200
*                      and which has no further continuations to      * 00048300
*                      other monitoring environments.  When no such   * 00048400
*                      monitoring environment exists, the input       * 00048500
*                      monitoring environment will be related to the  * 00048600
*                      current home address space.                    * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                      PARENTTCB=xparenttcb                           * 00049000
*                          is the name (RS-type), or address in       * 00049100
*                          register (2)-(12), of a required character * 00049200
*                          input which defines the TCB owned by the   * 00049300
*                          current home address space associated with * 00049400
*                          a monitoring environment via               * 00049500
*                          Initialize/Relate Disptype=TCB,TCB= . This * 00049600
*                          TCB need not be the owner of the           * 00049700
*                          monitoring environment.  Note that this    * 00049800
*                          name is not the pointer to the TCB, but    * 00049900
*                          the name of the data area containing the   * 00050000
*                          TCB.  A typical invocation might replace   * 00050100
*                          xTCB with TCB.                             * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*          FUNCTION=DELETE                                            * 00051000
*              which indicates that the relationship is being         * 00051100
*              inactivated.                                           * 00051200
*                                                                     * 00051300
*              Note that this produces an inline expansion rather     * 00051400
*              than an out-of-line service, so that no parameter list * 00051500
*              is needed.  Thus the MF keyword is not applicable when * 00051600
*              this option is specified, and is not allowed.          * 00051700
*              Registers 0, 1, 14, and 15 are not preserved across    * 00051800
*              the expansion.                                         * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*      The following is a set of mutually exclusive keys.  This set   * 00052600
*      is required; only one key must be specified.                   * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*      MONTKN=xmontkn                                                 * 00053000
*          belongs to a set of mutually exclusive keys. It is the     * 00053100
*          name (RS-type), or address in register (2)-(12), of a 32   * 00053200
*          bit input which contains the delay monitoring token for    * 00053300
*          the dependent environment.                                 * 00053400
*                                                                     * 00053500
*      MONTKN64=xmontkn64                                             * 00053600
*          belongs to a set of mutually exclusive keys. It is the     * 00053700
*          name (RS-type), or address in register (2)-(12), of a 64   * 00053800
*          bit input which contains the long delay monitoring token   * 00053900
*          for the dependent environment.                             * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*      End of a set of mutually exclusive required keys.              * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*                                                                     * 00054700
*      ÝEWLM=»NOº¨                                                    * 00054800
*          is an optional keyword input which indicates if this work  * 00054900
*          manager intents to participate in cross platform           * 00055000
*          Enterprise Workload Management (eWLM).                     * 00055100
*          DEFAULT: NO                                                * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*          EWLM=NO                                                    * 00055500
*              The work manager interacts only with WLM and no        * 00055600
*              interaction with eWLM takes place.                     * 00055700
*              DEFAULT: NO                                            * 00055800
*                                                                     * 00055900
*                                                                     * 00056000
*                                                                     * 00056100
*                                                                     * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*      ÝRETCODE=xretcode¨                                             * 00056500
*          is the name (RS-type) of an optional fullword output       * 00056600
*          variable, or register (2)-(12) or (15), into which the     * 00056700
*          return code is to be copied from GPR 15.  If you specify   * 00056800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00056900
*          the value will be left in GPR 15.                          * 00057000
*                                                                     * 00057100
*                                                                     * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*      ÝRSNCODE=xrsncode¨                                             * 00057500
*          is the name (RS-type) of an optional fullword output       * 00057600
*          variable into which the reason code is to be copied from   * 00057700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00057800
*          R0 (within or without parentheses), the value will be left * 00057900
*          in GPR 0.                                                  * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00058500
*          is an optional byte input decimal value in the "0-0" range * 00058600
*          that specifies the macro version.  PLISTVER is the only    * 00058700
*          key allowed on the list form of MF and determines which    * 00058800
*          parameter list is generated.  Note that MAX may be         * 00058900
*          specified instead of a number, and the parameter list will * 00059000
*          be of the largest size currently supported. This size may  * 00059100
*          grow from release to release (thus possibly affecting the  * 00059200
*          amount of storage needed by your program).  If your        * 00059300
*          program can tolerate this, IBM recommends that you always  * 00059400
*          specify MAX when creating the list form parameter list as  * 00059500
*          that will ensure that the list form parameter list is      * 00059600
*          always long enough to hold whatever parameters might be    * 00059700
*          specified on the execute form.                             * 00059800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00059900
*          default is the lowest version which allows all of the      * 00060000
*          parameters specified on the invocation to be processed.    * 00060100
*                                                                     * 00060200
*                                                                     * 00060300
*                                                                     * 00060400
*                                                                     * 00060500
*      ÝMF=»S!L!Eº¨                                                   * 00060600
*          is an optional keyword input which specifies the macro     * 00060700
*          form.                                                      * 00060800
*          DEFAULT: S                                                 * 00060900
*                                                                     * 00061000
*                                                                     * 00061100
*          ÝMF=S¨                                                     * 00061200
*              specifies the standard form of the macro.  The "S"     * 00061300
*              form generates code to put the parameters into an      * 00061400
*              in-line parameter list and invoke the desired service. * 00061500
*              Full checking for required macro keys is done along    * 00061600
*              with supplying defaults for omitted optional           * 00061700
*              parameters.                                            * 00061800
*                                                                     * 00061900
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00062000
*              specifies the list form of the macro.  The "L" form    * 00062100
*              defines an area to be used for the parameter list.     * 00062200
*              Only the PLISTVER key may be specified on the          * 00062300
*              invocation.  All other macro parameters are flagged as * 00062400
*              errors.  If PLISTVER is not specified, the original    * 00062500
*              parameter list definition is used.                     * 00062600
*                                                                     * 00062700
*            ,xmfctrl                                                 * 00062800
*              is a required input.  It is the name of a storage area * 00062900
*              for the parameter list.                                * 00063000
*                                                                     * 00063100
*            »,xmfattr!0Dº                                            * 00063200
*              is an optional 60 character input string that varies   * 00063300
*              from 1 to 60 characters. Use it to force boundary      * 00063400
*              alignment of the parameter list. Use only 0F or 0D.    * 00063500
*              DEFAULT: 0D which forces the parameter list to a       * 00063600
*              doubleword boundary.                                   * 00063700
*                                                                     * 00063800
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00063900
*              specifies the execute form of the macro.  The "E" form * 00064000
*              generates code to put the parameters into the          * 00064100
*              parameter list specified by xmfctrl and provides full  * 00064200
*              syntax checking with default setting.                  * 00064300
*                                                                     * 00064400
*            ,xmfctrl                                                 * 00064500
*              is a required input.  It is the name (RS-type), or     * 00064600
*              address in register (1)-(12), of a storage area for    * 00064700
*              the parameter list.                                    * 00064800
*                                                                     * 00064900
*            »,COMPLETEº                                              * 00065000
*              is an optional keyword input which specifies the       * 00065100
*              degree of macro parameter syntax checking.             * 00065200
*              DEFAULT: COMPLETE                                      * 00065300
*                                                                     * 00065400
*                                                                     * 00065500
*              COMPLETE                                               * 00065600
*                  Checking for required macro keys is done and       * 00065700
*                  defaults are supplied for omitted optional         * 00065800
*                  parameters.                                        * 00065900
*                                                                     * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*                                                                     * 00066600
*01* ABEND CODES:  None.                                              * 00066700
*                                                                     * 00066800
*01* RETURN CODES:                                                    * 00066900
*                                                                     * 00067000
*                                                                     * 00067100
*            0    Name: IwmRetCodeOk                                  * 00067200
*                                                                     * 00067300
*                 Meaning: Successful completion.                     * 00067400
*                                                                     * 00067500
*            4    Name: IwmRetCodeWarning                             * 00067600
*                                                                     * 00067700
*                 Meaning: Successful completion, unusual conditions  * 00067800
*                 noted.                                              * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                 HEX REASON  MEANING/ACTION                          * 00068200
*                 CODE                                                * 00068300
*                                                                     * 00068400
*                 xxxx0402    Name: IwmRsncodeNoMonEnv                * 00068500
*                                                                     * 00068600
*                             Meaning: Input monitoring token         * 00068700
*                             indicates no monitoring environment was * 00068800
*                             established.                            * 00068900
*                                                                     * 00069000
*                 xxxx0406    Name: IwmRsncodeNoParEnv                * 00069100
*                                                                     * 00069200
*                             Meaning: No parent monitoring           * 00069300
*                             environment was established.  The input * 00069400
*                             dependent monitoring environment is now * 00069500
*                             related to the Home address space.      * 00069600
*                                                                     * 00069700
*                                                                     * 00069800
*                                                                     * 00069900
*            8    Name: IwmRetCodeInvocError                          * 00070000
*                                                                     * 00070100
*                 Meaning: Invalid invocation environment or          * 00070200
*                 parameters                                          * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*                 HEX REASON  MEANING/ACTION                          * 00070600
*                 CODE                                                * 00070700
*                                                                     * 00070800
*                 xxxx0802    Name: IwmRsnCodeXmemUserKeyTkn          * 00070900
*                                                                     * 00071000
*                             Meaning: Caller is in cross-memory mode * 00071100
*                             while the token was obtained in user    * 00071200
*                             key.                                    * 00071300
*                                                                     * 00071400
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00071500
*                                                                     * 00071600
*                             Meaning: Caller is disabled             * 00071700
*                                                                     * 00071800
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00071900
*                                                                     * 00072000
*                             Meaning: Caller is locked               * 00072100
*                                                                     * 00072200
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00072300
*                                                                     * 00072400
*                             Meaning: Error accessing parameter      * 00072500
*                             list.                                   * 00072600
*                                                                     * 00072700
*                 xxxx081A    Name: IwmRsnCodeCallerNotAuthDepEnv     * 00072800
*                                                                     * 00072900
*                             Meaning: Caller is not authorized to    * 00073000
*                             update the dependent monitoring         * 00073100
*                             environment                             * 00073200
*                                                                     * 00073300
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 00073400
*                                                                     * 00073500
*                             Meaning: Monitoring environment does    * 00073600
*                             not pass verification.                  * 00073700
*                                                                     * 00073800
*                 xxxx0822    Name: IwmRsnCodeBadParEnv               * 00073900
*                                                                     * 00074000
*                             Meaning: Parent monitoring environment  * 00074100
*                             does not pass verification.             * 00074200
*                                                                     * 00074300
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00074400
*                                                                     * 00074500
*                             Meaning: Caller invoked service while   * 00074600
*                             DATOFF                                  * 00074700
*                                                                     * 00074800
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00074900
*                                                                     * 00075000
*                             Meaning: Caller invoked service but was * 00075100
*                             was in 24 bit addressing mode.          * 00075200
*                                                                     * 00075300
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00075400
*                                                                     * 00075500
*                             Meaning: Caller invoked service but was * 00075600
*                             not DAT on Primary ASC mode.            * 00075700
*                                                                     * 00075800
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00075900
*                                                                     * 00076000
*                             Meaning: Reserved field in parameter    * 00076100
*                             list was non-zero                       * 00076200
*                                                                     * 00076300
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00076400
*                                                                     * 00076500
*                             Meaning: Version number in parameter    * 00076600
*                             list is not valid.                      * 00076700
*                                                                     * 00076800
*                 xxxx0829    Name: IwmRsnCodeBadOptions              * 00076900
*                                                                     * 00077000
*                             Meaning: Parameter list omits required  * 00077100
*                             parameters or supplies mutually         * 00077200
*                             exclusive parameters or provides data   * 00077300
*                             associated with options not selected.   * 00077400
*                                                                     * 00077500
*                 xxxx087E    Name: IwmRsnCodeRoMonEnv                * 00077600
*                                                                     * 00077700
*                             Meaning: Monitoring environment is      * 00077800
*                             report only                             * 00077900
*                                                                     * 00078000
*                 xxxx087F    Name: IwmRsnCodeRoParEnv                * 00078100
*                                                                     * 00078200
*                             Meaning: Parent monitoring environment  * 00078300
*                             is report only                          * 00078400
*                                                                     * 00078500
*                 xxxx08A4    Name: IwmRsnCodeBPParEnv                * 00078600
*                                                                     * 00078700
*                             Meaning: Parent monitoring environment  * 00078800
*                             is buffer pool management only          * 00078900
*                                                                     * 00079000
*                                                                     * 00079100
*                                                                     * 00079200
*            10   Name: IwmRetCodeCompError:                          * 00079300
*                                                                     * 00079400
*                 Meaning: Component error                            * 00079500
*                                                                     * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*01* REASON CODES:                                                    * 00079900
*                                                                     * 00080000
*       A unique reason code will be returned whenever the return     * 00080100
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00080200
*       under their corresponding return code.  Reason code and       * 00080300
*       return code constants are defined within IWMYCON.  Note that  * 00080400
*       the high order halfword of register 0, and the reason code    * 00080500
*       variable when specified, may be non-zero and represents       * 00080600
*       diagnostic data which is NOT part of the external interface.  * 00080700
*       The high order halfword should thus be excluded from          * 00080800
*       comparison with the reason code values described above.  The  * 00080900
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00081000
*       used for this purpose.                                        * 00081100
*                                                                     * 00081200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00081300
*                                                                     * 00081400
*02*   PROCESSOR:  ASSEM                                              * 00081500
*                                                                     * 00081600
*01* COMPONENT:  SCWLM                                                * 00081700
*                                                                     * 00081800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00081900
*                                                                     * 00082000
*01* EXAMPLES:                                                        * 00082100
*                                                                     * 00082200
*    To relate two monitoring environments where an address space     * 00082300
*    switch is not required, specify:                                 * 00082400
*                                                                     * 00082500
*        IWM4MRLT FUNCTION=CREATE,MONTKN64=(R7),PARENTP=YES,          * 00082600
*              PARENTMONTKN64=(R8),PARENTENV=NOSWITCH,                * 00082700
*              DISPTYPE=SRB,SAMEDU=YES,                               * 00082800
*              RETCODE=RCODE,RSNCODE=RSN                              * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*01* MACRO USAGE NOTES:                                               * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00083500
*        global macro variable.  Any value other than 'NO' will       * 00083600
*        result in the macro expansion being printed.  The default is * 00083700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00083800
*        variable should be set.                                      * 00083900
*                                                                     * 00084000
*                    GBLC &ZPRINT                                     * 00084100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00084200
*                                                                     * 00084300
*                                                                     * 00084400
*    2.  All   keys   currently   contained  in  the  IWM4MRLT  macro * 00084500
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00084600
*        value of 0 or MAX.                                           * 00084700
*                                                                     * 00084800
*                                                                     * 00084900
*    3.  The  macro  CVT  must  be  included  to  use this macro when * 00085000
*        FUNCTION(CREATE) PARENTP(FINDACTIVE) is specified.           * 00085100
*                                                                     * 00085200
*    4.  The macro IWMYCON must be included to use this macro.        * 00085300
*                                                                     * 00085400
*    5.  The  macro IWMPB must be in the library concatenation, since * 00085500
*        it is included by IWMYCON.                                   * 00085600
*                                                                     * 00085700
*    6.  Use   of  PARENTP(YES)  PARENTENV(HOME)  requires  that  the * 00085800
*        invoking program reside in the MVS common area.              * 00085900
*                                                                     * 00086000
*    7.  Note  that  the  high  order halfword of register 0, and the * 00086100
*        reason  code  variable  when  specified, may be non-zero and * 00086200
*        represents diagnostic data which is NOT part of the external * 00086300
*        interface.   The high order halfword should thus be excluded * 00086400
*        from comparison with the reason code values described above. * 00086500
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00086600
*        be used for this purpose.                                    * 00086700
*                                                                     * 00086800
*    8.  Note  that specification of PARENTP(YES) or FUNCTION(DELETE) * 00086900
*        produces  an  inline  expansion  rather  than an out-of-line * 00087000
*        service,  so  that no parameter list is needed.  Thus the MF * 00087100
*        keyword is not applicable when this option is specified, and * 00087200
*        is  not  allowed.    Registers  0,  1,  14,  and  15 are not * 00087300
*        preserved across the expansion.                              * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*                                                                     * 00087700
*01* CHANGE ACTIVITY:                                                 * 00087800
*                                                                     * 00087900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00088000
*                                                                     * 00088100
*    $L0=LPBABV   HBB7790 111019 3241AH:  Initial version PB above 2G * 00088200
*    $P0=ME24923  HBB7790 121016 3241AH:  Fix SYSAM64 logic           * 00088300
*    $P1=ME25096  HBB7790 121112 3241DW:  MONTKN not corrected ANDed  * 00088400
*                                         prior assignment            * 00088500
*    $P2=ME25540  HBB7790 130122 3241DW:  Literal not accessible in   * 00088600
*                                         AMODE 64                    * 00088700
*    $P3=ME25694  HBB7790 130225 3241AH:  Regression tests failing in * 00088800
*                                         WLMMRELA                    * 00088900
*    $P4=WI335783 HBB77D0 200408 3241AH:  New keyword                 * 00089000
*                                         PARENTENVTKN/PARENTENVTKN64 * 00089100
****** END OF SPECIFICATIONS *****************************************/ 00089200
*/********************************************************************* 00089300
         MACRO                                                          00089400
&XLABEL  IWM4MRLT &FUNCTION=,&OWNER_TOKEN=,&OWNER_DATA=,&DISPTYPE=,    *00089500
               &TCB=,&SAMEDU=,&PARENTP=,&PARENTMONTKN=,                *00089600
               &PARENTMONTKN64=,&PARENTENVTKN=,&PARENTENVTKN64=,       *00089700
               &PARENTENV=,&PARENTTCB=,&MONTKN=,&MONTKN64=,&EWLM=,     *00089800
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00089900
.*                                                                      00090000
*                    MACDATE -02/22/21-<0>                              00090100
.*                                                                      00090200
.*******************************************************************    00090300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00090400
.*******************************************************************    00090500
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00090600
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00090700
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00090800
.*                                                                      00090900
                    GBLC  &ZIWM4MRLT  YES=MACRO USED AT LEAST ONCE      00091000
.*******************************************************************    00091100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00091200
.*******************************************************************    00091300
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00091400
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00091500
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00091600
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00091700
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00091800
                    LCLA  &ZAWRK      USED AS A WORK AREA               00091900
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00092000
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00092100
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00092200
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00092300
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00092400
                    LCLC  &ZMAC_G     "G" or null                       00092500
&ZMAC_G             SETC  ''                                            00092600
                    LCLC  &ZMAC_LR                                      00092700
&ZMAC_LR            SETC  'LR'                                          00092800
                    LCLC  &ZMAC_L                                       00092900
&ZMAC_L             SETC  'L'                                           00093000
                    LCLC  &ZMAC_ST                                      00093100
&ZMAC_ST            SETC  'ST'                                          00093200
                    LCLC  &ZMAC_LLGT                                    00093300
&ZMAC_LLGT          SETC  'L'                                           00093400
                    LCLC  &ZMAC_LGR                                     00093500
&ZMAC_LGR           SETC  'LR'                                          00093600
                    LCLC  &ZMAC_LG                                      00093700
&ZMAC_LG            SETC  'L'                                           00093800
                    LCLC  &ZMAC_STG                                     00093900
&ZMAC_STG           SETC  'ST'                                          00094000
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00094100
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00094200
.*                                                                      00094300
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00094400
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00094500
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00094600
                    LCLC  &ZENDBASEPL           End of base PL          00094700
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00094800
.*******************************************************************    00094900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00095000
.*******************************************************************    00095100
                    LCLA  &ZI         INDEX FOR ARRAY                   00095200
                    LCLA  &ZJ         INDEX FOR PARMS                   00095300
                    LCLA  &ZK         INDEX FOR PARSE                   00095400
                    LCLA  &ZLO        LOW RANGE VALUE                   00095500
                    LCLA  &ZHI        HIGH RANGE VALUE                  00095600
                    LCLC  &ZW         WORK AREA FOR PARM                00095700
.********************************************************************   00095800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00095900
.********************************************************************   00096000
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00096100
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00096200
                    GBLA  &SYSALVL    SYSSTATE ARCHLVL                  00096300
                    GBLC  &SYSAM64    SYSSTATE AMODE64                  00096400
.*                                                                      00096500
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00096600
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00096700
                    SPLEVEL  TEST                                       00096800
.ZSYS2              ANOP  ,                                             00096900
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00097000
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00097100
                    SYSSTATE TEST                                       00097200
                    AGO   .ZSYS4                                        00097300
.ZSYS3              ANOP  ,                                             00097400
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00097500
.ZSYS4              ANOP  ,                                             00097600
                    AIF   ('&SYSAM64' NE 'YES').ZSYSN64                 00097700
&ZMAC_LLGT          SETC 'LLGT'                                         00097800
&ZMAC_LGR           SETC 'LGR'                                          00097900
&ZMAC_LG            SETC 'LG'                                           00098000
&ZMAC_STG           SETC 'STG'                                          00098100
.ZSYSN64            ANOP  ,                                             00098200
&ZMAC_G             SETC 'G'                                            00098300
&ZMAC_LR            SETC 'LGR'                                          00098400
&ZMAC_L             SETC 'LG'                                           00098500
&ZMAC_ST            SETC 'STG'                                          00098600
.*******************************************************************    00098700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00098800
.*******************************************************************    00098900
                    LCLC  &XFUNCTION  ++ VALUE                          00099000
                    LCLC  &XOWNER_TOKEN         ++ NAME                 00099100
                    LCLC  &XOWNER_DATA          ++ NAME                 00099200
                    LCLC  &XDISPTYPE  ++ VALUE                          00099300
                    LCLC  &XTCB       ++ NAME                           00099400
                    LCLC  &XSAMEDU    ++ VALUE                          00099500
                    LCLC  &XPARENTP   ++ VALUE                          00099600
                    LCLC  &XPARENTMONTKNKEY     ++ NAME                 00099700
                    LCLC  &XPARENTMONTKN        ++ NAME                 00099800
                    LCLC  &XPARENTMONTKN64      ++ NAME                 00099900
                    LCLC  &XPARENTENVTKN        ++ NAME                 00100000
                    LCLC  &XPARENTENVTKN64      ++ NAME                 00100100
                    LCLC  &XPARENTENV           ++ VALUE                00100200
                    LCLC  &XPARENTTCB           ++ NAME                 00100300
                    LCLC  &XUSEDMONTKNKEY       ++ NAME                 00100400
                    LCLC  &XMONTKN    ++ NAME                           00100500
                    LCLC  &XMONTKN64  ++ NAME                           00100600
                    LCLC  &XEWLM      ++ VALUE                          00100700
                    LCLC  &XRETCODE   ++ NAME                           00100800
                    LCLC  &XRSNCODE   ++ NAME                           00100900
                    LCLA  &XPLISTVER  ++ VALUE                          00101000
                    LCLC  &XMF        ++ VALUE                          00101100
                    LCLC  &XMFCTRL    ++ NAME                           00101200
                    LCLC  &XMFATTR    ++ VALUE                          00101300
                    LCLC  &XMFSCK     ++ VALUE                          00101400
.*******************************************************************    00101500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00101600
.*******************************************************************    00101700
                    LCLC  &ZXFUNCTION           ++ INPUT VALUE          00101800
                    LCLC  &ZXOWNER_TOKEN        ++ INPUT NAME           00101900
                    LCLC  &ZXOWNER_DATA         ++ INPUT NAME           00102000
                    LCLC  &ZXDISPTYPE           ++ INPUT VALUE          00102100
                    LCLC  &ZXTCB      ++ INPUT NAME                     00102200
                    LCLC  &ZXSAMEDU   ++ INPUT VALUE                    00102300
                    LCLC  &ZXPARENTP  ++ INPUT VALUE                    00102400
                    LCLC  &ZXPARENTMONTKNKEY    ++ INPUT NAME           00102500
                    LCLC  &ZXPARENTMONTKN       ++ INPUT NAME           00102600
                    LCLC  &ZXPARENTMONTKN64     ++ INPUT NAME           00102700
                    LCLC  &ZXPARENTENVTKN       ++ INPUT NAME           00102800
                    LCLC  &ZXPARENTENVTKN64     ++ INPUT NAME           00102900
                    LCLC  &ZXPARENTENV          ++ INPUT VALUE          00103000
                    LCLC  &ZXPARENTTCB          ++ INPUT NAME           00103100
                    LCLC  &ZXUSEDMONTKNKEY      ++ INPUT NAME           00103200
                    LCLC  &ZXMONTKN   ++ INPUT NAME                     00103300
                    LCLC  &ZXMONTKN64           ++ INPUT NAME           00103400
                    LCLC  &ZXEWLM     ++ INPUT VALUE                    00103500
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00103600
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00103700
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00103800
                    LCLC  &ZXMF       ++ INPUT VALUE                    00103900
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00104000
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00104100
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00104200
.********************************************************************   00104300
.***AC.PLV01  PROCESS PLISTVER                                      *   00104400
.********************************************************************   00104500
&XPLISTVER      SETA  0                                                 00104600
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00104700
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00104800
&XPLISTVER      SETA  0                                                 00104900
.ZPLV0          ANOP  ,                                                 00105000
.*                                                                      00105100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00105200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00105300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00105400
.*-------------------------------------------------------------------   00105500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00105600
&ZMS            SETC  '"PLISTVER='                                      00105700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00105800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00105900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00106000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00106100
                AGO   .ZPVCK2                                           00106200
.ZPVCK3         ANOP  ,                                                 00106300
.*-------------------------------------------------------------------   00106400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00106500
&ZMS            SETC  '"PLISTVER='                                      00106600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00106700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00106800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00106900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00107000
                AGO   .ZPVCKE                                           00107100
.ZPVCK2         ANOP  ,                                                 00107200
.*-------------------------------------------------------------------   00107300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00107400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00107500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00107600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00107700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00107800
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00107900
.ZPVCK6         ANOP  ,                                                 00108000
&ZMS            SETC  '"PLISTVER='                                      00108100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00108200
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00108300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00108400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00108500
&XPLISTVER      SETA  0                                                 00108600
                AGO   .ZPVCKE                                           00108700
.*-------------------------------------------------------------------   00108800
.ZPVCK4A        ANOP  ,                                                 00108900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00109000
&ZMS            SETC  'PLISTVER='                                       00109100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00109200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00109300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00109400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00109500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00109600
                AGO   .ZPVCK5                                           00109700
.ZPVCK4         ANOP  ,                                                 00109800
&XPLISTVER      SETA  &PLISTVER(1)                                      00109900
.ZPVCK5         ANOP  ,                                                 00110000
.ZPVCKE         ANOP  ,                                                 00110100
.********************************************************************   00110200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00110300
.********************************************************************   00110400
                    ACTR  10000                                         00110500
.*------------------------------------------------------------------    00110600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00110700
&XMF                SETC  ''          INITIALIZE XVARIABLE              00110800
.*-------------------------------------------------------------------   00110900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00111000
.ZG66               ANOP  ,                                             00111100
&ZTLC               SETC 'S'                                            00111200
                    AIF   ('&MF(1)' NE '&ZTLC').ZG67                    00111300
&XMF                SETC  'S'         SET KEYWORD                       00111400
                    AIF   (N'&MF LE 1).ZG66A    CK NUM                  00111500
&ZMS                SETC  '"MF='                                        00111600
&ZMS                SETC  '&ZMS.&MF"'                                   00111700
&ZMS                SETC  '&ZMS "MF"'                                   00111800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00111900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00112000
.ZG66A              ANOP  ,                                             00112100
.*-------------------------------------------------------------------   00112200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00112300
.ZG67               ANOP  ,                                             00112400
&ZTLC               SETC 'L'                                            00112500
                    AIF   ('&MF(1)' NE '&ZTLC').ZG74                    00112600
&XMF                SETC  'L'         SET KEYWORD                       00112700
                    AIF   (N'&MF LE 3).ZG67A    CK NUM                  00112800
&ZMS                SETC  '"MF='                                        00112900
&ZMS                SETC  '&ZMS.&MF"'                                   00113000
&ZMS                SETC  '&ZMS "MF"'                                   00113100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00113200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00113300
.ZG67A              ANOP  ,                                             00113400
.*-------------------------------------------------------------------   00113500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00113600
                    AIF   (N'&SYSLIST NE 0).ZG67B  POSITIONALS?         00113700
                    AIF   ('&FUNCTION' NE '').ZG67B  KEYS?              00113800
                    AIF   ('&OWNER_TOKEN' NE '').ZG67B  KEYS?           00113900
                    AIF   ('&OWNER_DATA' NE '').ZG67B  KEYS?            00114000
                    AIF   ('&DISPTYPE' NE '').ZG67B  KEYS?              00114100
                    AIF   ('&TCB' NE '').ZG67B  KEYS?                   00114200
                    AIF   ('&SAMEDU' NE '').ZG67B  KEYS?                00114300
                    AIF   ('&PARENTP' NE '').ZG67B  KEYS?               00114400
                    AIF   ('&PARENTMONTKN' NE '').ZG67B  KEYS?          00114500
                    AIF   ('&PARENTMONTKN64' NE '').ZG67B  KEYS?        00114600
                    AIF   ('&PARENTENVTKN' NE '').ZG67B  KEYS?          00114700
                    AIF   ('&PARENTENVTKN64' NE '').ZG67B  KEYS?        00114800
                    AIF   ('&PARENTENV' NE '').ZG67B  KEYS?             00114900
                    AIF   ('&PARENTTCB' NE '').ZG67B  KEYS?             00115000
                    AIF   ('&MONTKN' NE '').ZG67B  KEYS?                00115100
                    AIF   ('&MONTKN64' NE '').ZG67B  KEYS?              00115200
                    AIF   ('&EWLM' NE '').ZG67B  KEYS?                  00115300
                    AIF   ('&RETCODE' NE '').ZG67B  KEYS?               00115400
                    AIF   ('&RSNCODE' NE '').ZG67B  KEYS?               00115500
                    AGO    .ZG67C     INVOCATION OKAY                   00115600
.ZG67B              ANOP  ,                                             00115700
&ZMS                SETC  'THE "L" FORM OF "MF"'                        00115800
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00115900
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00116000
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00116100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00116200
.ZG67C              ANOP  ,                                             00116300
.*-------------------------------------------------------------------   00116400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00116500
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00116600
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00116700
                    AIF   (N'&MF(2) GT 1).ZG69B  MULTI                  00116800
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00116900
.ZG69B              AIF   (K'&MF(2) GT 0).ZG69C                         00117000
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00117100
&ZMS                SETC  'WHEN "L" IS SPECIFIED'                       00117200
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00117300
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00117400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00117500
.ZG69C              ANOP  ,                                             00117600
.*-------------------------------------------------------------------   00117700
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00117800
                    AIF   (K'&ZXMFCTRL LE 0).ZG69P  NOT I/O             00117900
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG69P                00118000
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00118100
&ZMS                SETC  '"MF='                                        00118200
&ZMS                SETC  '&ZMS.&MF"'                                   00118300
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00118400
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00118500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00118600
.ZG69P              ANOP  ,                                             00118700
.*-------------------------------------------------------------------   00118800
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00118900
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00119000
&XMFATTR            SETC  '0D'                                          00119100
                    AIF   (K'&MF(3) LE 0).ZG72B  PARM                   00119200
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00119300
                    AIF   (N'&MF(3) GT 1).ZG72B  MULTI                  00119400
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00119500
.ZG72B              ANOP  ,                                             00119600
.*-------------------------------------------------------------------   00119700
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00119800
                    AIF   (K'&ZXMFATTR LE 0).ZG72P  NOT I/O             00119900
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG72P                00120000
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00120100
&ZMS                SETC  '"MF='                                        00120200
&ZMS                SETC  '&ZMS.&MF"'                                   00120300
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00120400
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00120500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00120600
.ZG72P              ANOP  ,                                             00120700
.*-------------------------------------------------------------------   00120800
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00120900
                    AIF   (K'&ZXMFATTR LE 0).ZG72S  NOT I/O             00121000
                    AIF   (K'&XMFATTR LE 60).ZG72S  LNG OK              00121100
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00121200
&ZMS                SETC  '"MF='                                        00121300
&ZMS                SETC  '&ZMS.&MF"'                                   00121400
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00121500
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00121600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00121700
.ZG72S              ANOP  ,                                             00121800
.*-------------------------------------------------------------------   00121900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00122000
.ZG74               ANOP  ,                                             00122100
&ZTLC               SETC 'E'                                            00122200
                    AIF   ('&MF(1)' NE '&ZTLC').ZG82                    00122300
&XMF                SETC  'E'         SET KEYWORD                       00122400
                    AIF   (N'&MF LE 3).ZG74A    CK NUM                  00122500
&ZMS                SETC  '"MF='                                        00122600
&ZMS                SETC  '&ZMS.&MF"'                                   00122700
&ZMS                SETC  '&ZMS "MF"'                                   00122800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00122900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00123000
.ZG74A              ANOP  ,                                             00123100
.*-------------------------------------------------------------------   00123200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00123300
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00123400
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00123500
                    AIF   (N'&MF(2) GT 1).ZG76B  MULTI                  00123600
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00123700
.ZG76B              AIF   (K'&MF(2) GT 0).ZG76C                         00123800
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00123900
&ZMS                SETC  'WHEN "E" IS SPECIFIED'                       00124000
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00124100
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00124200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00124300
.ZG76C              ANOP  ,                                             00124400
.*-------------------------------------------------------------------   00124500
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00124600
                    AIF   (K'&ZXMFCTRL LE 0).ZG76R  NOT I/O             00124700
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG76R                00124800
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00124900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                  00125000
                    AIF   (K'&ZCGPR GT 2).ZG76Q                         00125100
                    AIF   ('&ZCGPR' EQ '0').ZG76Q                       00125200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00125300
                    AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME     00125400
.ZG76P              ANOP  ,                                             00125500
                    AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC          00125600
                    AIF   ('&ZCGPR' LT '1').ZG76Q                       00125700
                    AIF   ('&ZCGPR' LE '12').ZG76R                      00125800
.ZG76Q              ANOP  ,                                             00125900
&ZMS                SETC  '"MF='                                        00126000
&ZMS                SETC  '&ZMS.&MF"'                                   00126100
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00126200
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00126300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00126400
.ZG76R              ANOP  ,                                             00126500
.*-------------------------------------------------------------------   00126600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00126700
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00126800
.ZG80A   AIF   ('&MF(3)' NE 'COMPLETE').ZG81A                           00126900
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00127000
.*-------------------------------------------------------------------   00127100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00127200
.ZG81A              AIF   (K'&XMFSCK GT 0).ZG81C  KEYWORD               00127300
                    AIF   (K'&MF(3) LE 0).ZG81B                         00127400
&ZMS                SETC  '"MF='                                        00127500
&ZMS                SETC  '&ZMS.&MF"'                                   00127600
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00127700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00127800
&ZMS                SETC  '&ZMS "COMPLETE".'                            00127900
                    MNOTE 8,' &ZMS '                                    00128000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00128100
.ZG81B              ANOP  ,                                             00128200
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00128300
.ZG81C              ANOP  ,                                             00128400
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00128500
.*------------------------------------------------------------------    00128600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00128700
.ZG82               ANOP  ,                                             00128800
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00128900
                    AIF   (K'&XMF GT 0).ZG82E   VALID ARG               00129000
                    AIF   (T'&MF EQ 'O').ZG82D  OMITTED                 00129100
&ZASYSLNDX          SETA  0                                             00129200
.ZG82A              ANOP  ,           POSITIONAL MACRO KEY              00129300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00129400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG82C              00129500
&ZTLC               SETC 'MF'                                           00129600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG82A     00129700
.ZG82B              ANOP  ,                                             00129800
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00129900
&ZMS                SETC  'THE "MF" KEY'                                00130000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00130100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00130200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00130300
                    AGO   .ZG82E                                        00130400
.ZG82C              ANOP  ,                                             00130500
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00130600
&ZMS                SETC  '"MF='                                        00130700
&ZMS                SETC  '&ZMS.&MF"'                                   00130800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00130900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00131000
&ZMS                SETC  '&ZMS "S",'                                   00131100
&ZMS                SETC  '&ZMS "L",'                                   00131200
&ZMS                SETC  '&ZMS OR "E".'                                00131300
                    MNOTE 8,' &ZMS '                                    00131400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00131500
                    AGO   .ZG82E                                        00131600
.ZG82D              ANOP  ,                                             00131700
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00131800
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00131900
.ZG82E              ANOP  ,                                             00132000
.********************************************************************   00132100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00132200
.********************************************************************   00132300
                    ACTR  10000                                         00132400
.*-------------------------------------------------------------------   00132500
.***AG.MF03 MF=(SLE)                                                    00132600
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00132700
.*------------------------------------------------------------------    00132800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00132900
&XFUNCTION          SETC  ''          INITIALIZE XVARIABLE              00133000
.*-------------------------------------------------------------------   00133100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00133200
.ZG3                ANOP  ,                                             00133300
                    AIF   (K'&FUNCTION(1) LE 0).ZG3A                    00133400
&ZTLC               SETC 'CREATE'                                       00133500
                    AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG45              00133600
&XFUNCTION          SETC  'CREATE'    SET KEYWORD                       00133700
                    AIF   (N'&FUNCTION LE 1).ZG3A  CK NUM               00133800
&ZMS                SETC  '"FUNCTION='                                  00133900
&ZMS                SETC  '&ZMS.&FUNCTION"'                             00134000
&ZMS                SETC  '&ZMS "FUNCTION"'                             00134100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00134200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00134300
.ZG3A               ANOP  ,                                             00134400
.*----------------------------------------------------------------***   00134500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00134600
                    AIF   (N'&OWNER_TOKEN LE 1).ZG5A  CK NUM            00134700
&ZMS                SETC  '"OWNER_TOKEN='                               00134800
&ZMS                SETC  '&ZMS.&OWNER_TOKEN"'                          00134900
&ZMS                SETC  '&ZMS "OWNER_TOKEN"'                          00135000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00135100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00135200
.ZG5A               ANOP  ,                                             00135300
.*-------------------------------------------------------------------   00135400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00135500
&ZXOWNER_TOKEN      SETC  'INPUT'     SET IN/OUTPUT                     00135600
&XOWNER_TOKEN       SETC  'NO_OWNER_TOKEN'                              00135700
                    AIF   (K'&OWNER_TOKEN(1) LE 0).ZG5B  PARM           00135800
&XOWNER_TOKEN       SETC  '&OWNER_TOKEN(1)'     SET XVARIABLE           00135900
                    AIF   (N'&OWNER_TOKEN GT 1).ZG5B  MULTI             00136000
&XOWNER_TOKEN       SETC  '&OWNER_TOKEN'        SET XVARIABLE           00136100
.ZG5B               ANOP  ,                                             00136200
.*-------------------------------------------------------------------   00136300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00136400
                    AIF   (K'&ZXOWNER_TOKEN LE 0).ZG5R  NOT I/O         00136500
         AIF   ('&XOWNER_TOKEN' EQ 'NO_OWNER_TOKEN').ZG5R               00136600
                    AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZG5R            00136700
&ZCGPR              SETC  '&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2)          00136800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                   00136900
                    AIF   (K'&ZCGPR GT 2).ZG5Q                          00137000
                    AIF   ('&ZCGPR' EQ '0').ZG5Q                        00137100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00137200
                    AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME      00137300
.ZG5P               ANOP  ,                                             00137400
                    AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC           00137500
                    AIF   ('&ZCGPR' LT '2').ZG5Q                        00137600
                    AIF   ('&ZCGPR' LE '12').ZG5R                       00137700
.ZG5Q               ANOP  ,                                             00137800
&ZMS                SETC  '"OWNER_TOKEN='                               00137900
&ZMS                SETC  '&ZMS.&OWNER_TOKEN"'                          00138000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00138100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00138200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00138300
.ZG5R               ANOP  ,                                             00138400
.*----------------------------------------------------------------***   00138500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00138600
                    AIF   (N'&OWNER_DATA LE 1).ZG8A  CK NUM             00138700
&ZMS                SETC  '"OWNER_DATA='                                00138800
&ZMS                SETC  '&ZMS.&OWNER_DATA"'                           00138900
&ZMS                SETC  '&ZMS "OWNER_DATA"'                           00139000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00139100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00139200
.ZG8A               ANOP  ,                                             00139300
.*-------------------------------------------------------------------   00139400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00139500
&ZXOWNER_DATA       SETC  'INPUT'     SET IN/OUTPUT                     00139600
&XOWNER_DATA        SETC  'NO_OWNER_DATA'                               00139700
                    AIF   (K'&OWNER_DATA(1) LE 0).ZG8B  PARM            00139800
&XOWNER_DATA        SETC  '&OWNER_DATA(1)'      SET XVARIABLE           00139900
                    AIF   (N'&OWNER_DATA GT 1).ZG8B  MULTI              00140000
&XOWNER_DATA        SETC  '&OWNER_DATA'         SET XVARIABLE           00140100
.ZG8B               ANOP  ,                                             00140200
.*-------------------------------------------------------------------   00140300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00140400
                    AIF   (K'&ZXOWNER_DATA LE 0).ZG8R  NOT I/O          00140500
         AIF   ('&XOWNER_DATA' EQ 'NO_OWNER_DATA').ZG8R                 00140600
                    AIF   ('&XOWNER_DATA'(1,1) NE '(').ZG8R             00140700
&ZCGPR              SETC  '&XOWNER_DATA'(2,K'&XOWNER_DATA-2)            00140800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                   00140900
                    AIF   (K'&ZCGPR GT 2).ZG8Q                          00141000
                    AIF   ('&ZCGPR' EQ '0').ZG8Q                        00141100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00141200
                    AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME      00141300
.ZG8P               ANOP  ,                                             00141400
                    AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC           00141500
                    AIF   ('&ZCGPR' LT '2').ZG8Q                        00141600
                    AIF   ('&ZCGPR' LE '12').ZG8R                       00141700
.ZG8Q               ANOP  ,                                             00141800
&ZMS                SETC  '"OWNER_DATA='                                00141900
&ZMS                SETC  '&ZMS.&OWNER_DATA"'                           00142000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00142100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00142200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00142300
.ZG8R               ANOP  ,                                             00142400
.*------------------------------------------------------------------    00142500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00142600
&XDISPTYPE          SETC  ''          INITIALIZE XVARIABLE              00142700
.*-------------------------------------------------------------------   00142800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00142900
.ZG12               ANOP  ,                                             00143000
                    AIF   (K'&DISPTYPE(1) LE 0).ZG12A                   00143100
&ZTLC               SETC 'TCB'                                          00143200
                    AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG16              00143300
&XDISPTYPE          SETC  'TCB'       SET KEYWORD                       00143400
                    AIF   (N'&DISPTYPE LE 1).ZG12A  CK NUM              00143500
&ZMS                SETC  '"DISPTYPE='                                  00143600
&ZMS                SETC  '&ZMS.&DISPTYPE"'                             00143700
&ZMS                SETC  '&ZMS "DISPTYPE"'                             00143800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00143900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00144000
.ZG12A              ANOP  ,                                             00144100
.*------------------------------------------------------------------    00144200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00144300
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00144400
.ZG12A0             AIF   (K'&SAMEDU LE 0).ZG12A1  OK                   00144500
&ZCVAL              SETC '&ZCVAL SAMEDU'        INCORRECT KEY USED      00144600
.ZG12A1             AIF   (K'&ZCVAL LE 0).ZG12A2  OK                    00144700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00144800
&ZMS                SETC  '"DISPTYPE'                                   00144900
&ZMS                SETC  '&ZMS.=&DISPTYPE"'                            00145000
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00145100
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00145200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00145300
.ZG12A2             ANOP  ,                                             00145400
.*----------------------------------------------------------------***   00145500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00145600
                    AIF   (N'&TCB LE 1).ZG14A   CK NUM                  00145700
&ZMS                SETC  '"TCB='                                       00145800
&ZMS                SETC  '&ZMS.&TCB"'                                  00145900
&ZMS                SETC  '&ZMS "TCB"'                                  00146000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00146100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00146200
.ZG14A              ANOP  ,                                             00146300
.*-------------------------------------------------------------------   00146400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00146500
&ZXTCB              SETC  'INPUT'     SET IN/OUTPUT                     00146600
&XTCB               SETC  '&TCB(1)'   SET XVARIABLE                     00146700
                    AIF   (N'&TCB GT 1).ZG14B   MULTI                   00146800
&XTCB               SETC  '&TCB'      SET XVARIABLE                     00146900
.ZG14B              AIF   (K'&TCB(1) GT 0).ZG14C                        00147000
&ZXTCB              SETC  ''          RESET IN/OUTPUT                   00147100
&ZMS                SETC  ' '                                           00147200
&ZMS                SETC  '&ZMS "TCB" KEY AND ITS'                      00147300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00147400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00147500
.ZG14C              ANOP  ,                                             00147600
.*-------------------------------------------------------------------   00147700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00147800
                    AIF   (K'&ZXTCB LE 0).ZG14R  NOT I/O                00147900
                    AIF   ('&XTCB'(1,1) NE '(').ZG14R                   00148000
&ZCGPR              SETC  '&XTCB'(2,K'&XTCB-2)                          00148100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                  00148200
                    AIF   (K'&ZCGPR GT 2).ZG14Q                         00148300
                    AIF   ('&ZCGPR' EQ '0').ZG14Q                       00148400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00148500
                    AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME     00148600
.ZG14P              ANOP  ,                                             00148700
                    AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC          00148800
                    AIF   ('&ZCGPR' LT '2').ZG14Q                       00148900
                    AIF   ('&ZCGPR' LE '12').ZG14R                      00149000
.ZG14Q              ANOP  ,                                             00149100
&ZMS                SETC  '"TCB='                                       00149200
&ZMS                SETC  '&ZMS.&TCB"'                                  00149300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00149400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00149500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00149600
.ZG14R              ANOP  ,                                             00149700
.*-------------------------------------------------------------------   00149800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00149900
.ZG16               ANOP  ,                                             00150000
&ZTLC               SETC 'SRB'                                          00150100
                    AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG22              00150200
&XDISPTYPE          SETC  'SRB'       SET KEYWORD                       00150300
                    AIF   (N'&DISPTYPE LE 1).ZG16A  CK NUM              00150400
&ZMS                SETC  '"DISPTYPE='                                  00150500
&ZMS                SETC  '&ZMS.&DISPTYPE"'                             00150600
&ZMS                SETC  '&ZMS "DISPTYPE"'                             00150700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00150800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00150900
.ZG16A              ANOP  ,                                             00151000
.*------------------------------------------------------------------    00151100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00151200
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00151300
.ZG16A0             AIF   (K'&TCB LE 0).ZG16A1  OK                      00151400
&ZCVAL              SETC '&ZCVAL TCB'           INCORRECT KEY USED      00151500
.ZG16A1             AIF   (K'&ZCVAL LE 0).ZG16A2  OK                    00151600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00151700
&ZMS                SETC  '"DISPTYPE'                                   00151800
&ZMS                SETC  '&ZMS.=&DISPTYPE"'                            00151900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00152000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00152100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00152200
.ZG16A2             ANOP  ,                                             00152300
.*------------------------------------------------------------------    00152400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00152500
&XSAMEDU            SETC  ''          INITIALIZE XVARIABLE              00152600
.*-------------------------------------------------------------------   00152700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00152800
.ZG19               ANOP  ,                                             00152900
                    AIF   (K'&SAMEDU(1) LE 0).ZG19A                     00153000
&ZTLC               SETC 'YES'                                          00153100
                    AIF   ('&SAMEDU(1)' NE '&ZTLC').ZG20                00153200
&XSAMEDU            SETC  'YES'       SET KEYWORD                       00153300
                    AIF   (N'&SAMEDU LE 1).ZG19A  CK NUM                00153400
&ZMS                SETC  '"SAMEDU='                                    00153500
&ZMS                SETC  '&ZMS.&SAMEDU"'                               00153600
&ZMS                SETC  '&ZMS "SAMEDU"'                               00153700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00153800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00153900
.ZG19A              ANOP  ,                                             00154000
.*-------------------------------------------------------------------   00154100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00154200
.ZG20               ANOP  ,                                             00154300
&ZTLC               SETC 'NO'                                           00154400
                    AIF   ('&SAMEDU(1)' NE '&ZTLC').ZG21                00154500
&XSAMEDU            SETC  'NO'        SET KEYWORD                       00154600
                    AIF   (N'&SAMEDU LE 1).ZG20A  CK NUM                00154700
&ZMS                SETC  '"SAMEDU='                                    00154800
&ZMS                SETC  '&ZMS.&SAMEDU"'                               00154900
&ZMS                SETC  '&ZMS "SAMEDU"'                               00155000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00155100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00155200
.ZG20A              ANOP  ,                                             00155300
.*------------------------------------------------------------------    00155400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00155500
.ZG21               ANOP  ,                                             00155600
&ZXSAMEDU           SETC  'INPUT'     SET IN/OUTPUT                     00155700
                    AIF   (K'&XSAMEDU GT 0).ZG21E  VALID ARG            00155800
                    AIF   (T'&SAMEDU EQ 'O').ZG21D  OMITTED             00155900
&ZASYSLNDX          SETA  0                                             00156000
.ZG21A              ANOP  ,           POSITIONAL MACRO KEY              00156100
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00156200
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG21C              00156300
&ZTLC               SETC 'SAMEDU'                                       00156400
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG21A     00156500
.ZG21B              ANOP  ,                                             00156600
&ZXSAMEDU           SETC  ''          RESET IN/OUTPUT                   00156700
&ZMS                SETC  'THE "SAMEDU" KEY'                            00156800
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00156900
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00157000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00157100
                    AGO   .ZG21E                                        00157200
.ZG21C              ANOP  ,                                             00157300
&ZXSAMEDU           SETC  ''          RESET IN/OUTPUT                   00157400
&ZMS                SETC  '"SAMEDU='                                    00157500
&ZMS                SETC  '&ZMS.&SAMEDU"'                               00157600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00157700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00157800
&ZMS                SETC  '&ZMS "YES"'                                  00157900
&ZMS                SETC  '&ZMS OR "NO".'                               00158000
                    MNOTE 8,' &ZMS '                                    00158100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00158200
                    AGO   .ZG21E                                        00158300
.ZG21D              ANOP  ,                                             00158400
&XSAMEDU            SETC  'YES'       SET DEFAULT KEYWORD               00158500
.ZG21E              ANOP  ,                                             00158600
.*------------------------------------------------------------------    00158700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00158800
                    AIF   (K'&SAMEDU(1) GT 0).ZG21F  PARM               00158900
&XSAMEDU            SETC  ''          ENSURE NULL KEYWORD               00159000
&ZXSAMEDU           SETC  ''          RESET IN/OUTPUT                   00159100
&ZMS                SETC  'THE'                                         00159200
&ZMS                SETC  '&ZMS "SAMEDU" KEY AND ITS'                   00159300
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00159400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00159500
&ZMS                SETC  '&ZMS "YES"'                                  00159600
&ZMS                SETC  '&ZMS OR "NO".'                               00159700
                    MNOTE 8,' &ZMS '                                    00159800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00159900
.ZG21F              ANOP  ,                                             00160000
.*------------------------------------------------------------------    00160100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00160200
.ZG22               ANOP  ,                                             00160300
&ZXDISPTYPE         SETC  'INPUT'     SET IN/OUTPUT                     00160400
                    AIF   (K'&XDISPTYPE GT 0).ZG22E  VALID ARG          00160500
                    AIF   (T'&DISPTYPE EQ 'O').ZG22D  OMITTED           00160600
&ZASYSLNDX          SETA  0                                             00160700
.ZG22A              ANOP  ,           POSITIONAL MACRO KEY              00160800
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00160900
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C              00161000
&ZTLC               SETC 'DISPTYPE'                                     00161100
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A     00161200
.ZG22B              ANOP  ,                                             00161300
&ZXDISPTYPE         SETC  ''          RESET IN/OUTPUT                   00161400
&ZMS                SETC  'THE "DISPTYPE" KEY'                          00161500
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00161600
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00161700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00161800
                    AGO   .ZG22E                                        00161900
.ZG22C              ANOP  ,                                             00162000
&ZXDISPTYPE         SETC  ''          RESET IN/OUTPUT                   00162100
&ZMS                SETC  '"DISPTYPE='                                  00162200
&ZMS                SETC  '&ZMS.&DISPTYPE"'                             00162300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00162400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00162500
&ZMS                SETC  '&ZMS "TCB"'                                  00162600
&ZMS                SETC  '&ZMS OR "SRB".'                              00162700
                    MNOTE 8,' &ZMS '                                    00162800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00162900
                    AGO   .ZG22E                                        00163000
.ZG22D              ANOP  ,                                             00163100
&XDISPTYPE          SETC  'TCB'       SET DEFAULT KEYWORD               00163200
.ZG22E              ANOP  ,                                             00163300
.*------------------------------------------------------------------    00163400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00163500
                    AIF   (K'&DISPTYPE(1) GT 0).ZG22F  PARM             00163600
&XDISPTYPE          SETC  ''          ENSURE NULL KEYWORD               00163700
&ZXDISPTYPE         SETC  ''          RESET IN/OUTPUT                   00163800
&ZMS                SETC  'THE'                                         00163900
&ZMS                SETC  '&ZMS "DISPTYPE" KEY AND ITS'                 00164000
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00164100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00164200
&ZMS                SETC  '&ZMS "TCB"'                                  00164300
&ZMS                SETC  '&ZMS OR "SRB".'                              00164400
                    MNOTE 8,' &ZMS '                                    00164500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00164600
.ZG22F              ANOP  ,                                             00164700
.*------------------------------------------------------------------    00164800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00164900
&XPARENTP           SETC  ''          INITIALIZE XVARIABLE              00165000
.*-------------------------------------------------------------------   00165100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165200
.ZG25               ANOP  ,                                             00165300
                    AIF   (K'&PARENTP(1) LE 0).ZG25A                    00165400
&ZTLC               SETC 'YES'                                          00165500
                    AIF   ('&PARENTP(1)' NE '&ZTLC').ZG40               00165600
&XPARENTP           SETC  'YES'       SET KEYWORD                       00165700
                    AIF   (N'&PARENTP LE 1).ZG25A  CK NUM               00165800
&ZMS                SETC  '"PARENTP='                                   00165900
&ZMS                SETC  '&ZMS.&PARENTP"'                              00166000
&ZMS                SETC  '&ZMS "PARENTP"'                              00166100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00166200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00166300
.ZG25A              ANOP  ,                                             00166400
.*------------------------------------------------------------------    00166500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00166600
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00166700
.ZG25A0             AIF   (K'&PARENTTCB LE 0).ZG25A1  OK                00166800
&ZCVAL              SETC '&ZCVAL PARENTTCB'     INCORRECT KEY USED      00166900
.ZG25A1             AIF   (K'&ZCVAL LE 0).ZG25A2  OK                    00167000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00167100
&ZMS                SETC  '"PARENTP'                                    00167200
&ZMS                SETC  '&ZMS.=&PARENTP"'                             00167300
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00167400
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00167500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00167600
.ZG25A2             ANOP  ,                                             00167700
.*----------------------------------------------------------------***   00167800
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00167900
&XPARENTMONTKNKEY   SETC  ''          INITIALIZE XVARIABLE              00168000
                    AIF   (K'&PARENTMONTKN LE 0).ZG27C                  00168100
&ZXPARENTMONTKNKEY  SETC  'INPUT'     SET IN/OUTPUT                     00168200
&XPARENTMONTKNKEY   SETC  'PARENTMONTKN'        SET XVARIABLE           00168300
&ZXPARENTMONTKN     SETC  'INPUT'     SET IN/OUTPUT                     00168400
&XPARENTMONTKN      SETC  '&PARENTMONTKN(1)'    SET XVARIABLE PARM      00168500
                    AIF   (N'&PARENTMONTKN GT 1).ZG27A                  00168600
&XPARENTMONTKN      SETC  '&PARENTMONTKN'       SET XVARIABLE PARM      00168700
.ZG27A              AIF   (N'&PARENTMONTKN LE 1).ZG27B  CK NUM          00168800
&ZMS                SETC  '"PARENTMONTKN='                              00168900
&ZMS                SETC  '&ZMS.&PARENTMONTKN"'                         00169000
&ZMS                SETC  '&ZMS "PARENTMONTKN"'                         00169100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00169200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00169300
.ZG27B              AIF   (K'&XPARENTMONTKN GT 0).ZG27C  ONE PARM       00169400
&ZXPARENTMONTKNKEY  SETC  ''          RESET IN/OUTPUT                   00169500
&ZXPARENTMONTKN     SETC  ''          RESET IN/OUTPUT                   00169600
&ZMS                SETC  ' '                                           00169700
&ZMS                SETC  '&ZMS "PARENTMONTKN" KEY AND ITS'             00169800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00169900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00170000
.ZG27C              ANOP  ,                                             00170100
.*----------------------------------------------------------------***   00170200
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00170300
                    AIF   (K'&PARENTMONTKN64 LE 0).ZG28D  NO ME KEY     00170400
                    AIF   (N'&PARENTMONTKN64 LE 1).ZG28A  CK NUM        00170500
&ZMS                SETC  '"PARENTMONTKN64='                            00170600
&ZMS                SETC  '&ZMS.&PARENTMONTKN64"'                       00170700
&ZMS                SETC  '&ZMS "PARENTMONTKN64"'                       00170800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00170900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00171000
.ZG28A              AIF   (K'&XPARENTMONTKNKEY LE 0).ZG28B              00171100
&ZMS                SETC  '"PARENTMONTKN64'                             00171200
&ZMS                SETC  '&ZMS.=&PARENTMONTKN64"'                      00171300
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00171400
&ZMS                SETC  '&ZMS "&XPARENTMONTKNKEY"'                    00171500
                    MNOTE 8,' &ZMS KEY.'                                00171600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00171700
                    AGO   .ZG28D                                        00171800
.*                                                                      00171900
.ZG28B              ANOP  ,                                             00172000
&ZXPARENTMONTKNKEY  SETC  'INPUT'     SET IN/OUTPUT                     00172100
&XPARENTMONTKNKEY   SETC  'PARENTMONTKN64'      SET XVARIABLE           00172200
&ZXPARENTMONTKN64   SETC  'INPUT'     SET IN/OUTPUT                     00172300
&XPARENTMONTKN64    SETC  '&PARENTMONTKN64(1)'  SET XVARIABLE PARM      00172400
                    AIF   (N'&PARENTMONTKN64 GT 1).ZG28C                00172500
&XPARENTMONTKN64    SETC  '&PARENTMONTKN64'     SET XVARIABLE PARM      00172600
.ZG28C              AIF   (K'&XPARENTMONTKN64 GT 0).ZG28D  ONE PARM     00172700
&ZXPARENTMONTKNKEY  SETC  ''          RESET IN/OUTPUT                   00172800
&ZXPARENTMONTKN64   SETC  ''          RESET IN/OUTPUT                   00172900
&ZMS                SETC  ' '                                           00173000
&ZMS                SETC  '&ZMS "PARENTMONTKN64" KEY AND ITS'           00173100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00173200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00173300
.ZG28D              ANOP  ,                                             00173400
.*------------------------------------------------------------------    00173500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00173600
                    AIF   (K'&XPARENTMONTKNKEY GT 0).ZG29B              00173700
&ZXPARENTMONTKNKEY  SETC  ''          RESET IN/OUTPUT                   00173800
&ZXPARENTMONTKN     SETC  ''          RESET IN/OUTPUT                   00173900
&XPARENTMONTKNKEY   SETC  ''          ENSURE NULL                       00174000
&XPARENTMONTKN      SETC  ''          ENSURE NULL                       00174100
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00174200
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00174300
&ZMS                SETC  '&ZMS REQUIRED:'                              00174400
&ZMS                SETC  '&ZMS "PARENTMONTKN"'  VALID ME KEY           00174500
&ZMS                SETC  '&ZMS OR "PARENTMONTKN64".'  VALID ME KEY     00174600
                    MNOTE 8,' &ZMS '                                    00174700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00174800
.ZG29B              ANOP  ,                                             00174900
.*-------------------------------------------------------------------   00175000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00175100
.ZG27ZY  AIF    ('&XPARENTMONTKNKEY' NE 'PARENTMONTKN').ZG28ZY          00175200
.*-------------------------------------------------------------------   00175300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00175400
                    AIF   (K'&ZXPARENTMONTKN LE 0).ZG27R  NOT I/O       00175500
                    AIF   ('&XPARENTMONTKN'(1,1) NE '(').ZG27R          00175600
&ZCGPR              SETC  '&XPARENTMONTKN'(2,K'&XPARENTMONTKN-2)        00175700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                  00175800
                    AIF   (K'&ZCGPR GT 2).ZG27Q                         00175900
                    AIF   ('&ZCGPR' EQ '0').ZG27Q                       00176000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00176100
                    AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME     00176200
.ZG27P              ANOP  ,                                             00176300
                    AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC          00176400
                    AIF   ('&ZCGPR' LT '2').ZG27Q                       00176500
                    AIF   ('&ZCGPR' LE '12').ZG27R                      00176600
.ZG27Q              ANOP  ,                                             00176700
&ZMS                SETC  '"PARENTMONTKN='                              00176800
&ZMS                SETC  '&ZMS.&PARENTMONTKN"'                         00176900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00177000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00177100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00177200
.ZG27R              ANOP  ,                                             00177300
.*-------------------------------------------------------------------   00177400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00177500
.ZG28ZY  AIF    ('&XPARENTMONTKNKEY' NE 'PARENTMONTKN64').ZG29ZY        00177600
.*-------------------------------------------------------------------   00177700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00177800
                    AIF   (K'&ZXPARENTMONTKN64 LE 0).ZG28R  NOT I/O     00177900
                    AIF   ('&XPARENTMONTKN64'(1,1) NE '(').ZG28R        00178000
&ZCGPR              SETC  '&XPARENTMONTKN64'(2,K'&XPARENTMONTKN64-2)    00178100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                  00178200
                    AIF   (K'&ZCGPR GT 2).ZG28Q                         00178300
                    AIF   ('&ZCGPR' EQ '0').ZG28Q                       00178400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00178500
                    AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME     00178600
.ZG28P              ANOP  ,                                             00178700
                    AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC          00178800
                    AIF   ('&ZCGPR' LT '2').ZG28Q                       00178900
                    AIF   ('&ZCGPR' LE '12').ZG28R                      00179000
.ZG28Q              ANOP  ,                                             00179100
&ZMS                SETC  '"PARENTMONTKN64='                            00179200
&ZMS                SETC  '&ZMS.&PARENTMONTKN64"'                       00179300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00179400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00179500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00179600
.ZG28R              ANOP  ,                                             00179700
.*-------------------------------------------------------------------   00179800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00179900
.ZG29ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00180000
.*----------------------------------------------------------------***   00180100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00180200
                    AIF   (N'&PARENTENVTKN LE 1).ZG31A  CK NUM          00180300
&ZMS                SETC  '"PARENTENVTKN='                              00180400
&ZMS                SETC  '&ZMS.&PARENTENVTKN"'                         00180500
&ZMS                SETC  '&ZMS "PARENTENVTKN"'                         00180600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00180700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00180800
.ZG31A              ANOP  ,                                             00180900
.*-------------------------------------------------------------------   00181000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00181100
&ZXPARENTENVTKN     SETC  'INPUT'     SET IN/OUTPUT                     00181200
&XPARENTENVTKN      SETC  'NO_PARENTENVTKN'                             00181300
                    AIF   (K'&PARENTENVTKN(1) LE 0).ZG31B  PARM         00181400
&XPARENTENVTKN      SETC  '&PARENTENVTKN(1)'    SET XVARIABLE           00181500
                    AIF   (N'&PARENTENVTKN GT 1).ZG31B  MULTI           00181600
&XPARENTENVTKN      SETC  '&PARENTENVTKN'       SET XVARIABLE           00181700
.ZG31B              ANOP  ,                                             00181800
.*-------------------------------------------------------------------   00181900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00182000
                    AIF   (K'&ZXPARENTENVTKN LE 0).ZG31R  NOT I/O       00182100
         AIF   ('&XPARENTENVTKN' EQ 'NO_PARENTENVTKN').ZG31R            00182200
                    AIF   ('&XPARENTENVTKN'(1,1) NE '(').ZG31R          00182300
&ZCGPR              SETC  '&XPARENTENVTKN'(2,K'&XPARENTENVTKN-2)        00182400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                  00182500
                    AIF   (K'&ZCGPR GT 2).ZG31Q                         00182600
                    AIF   ('&ZCGPR' EQ '0').ZG31Q                       00182700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00182800
                    AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME     00182900
.ZG31P              ANOP  ,                                             00183000
                    AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC          00183100
                    AIF   ('&ZCGPR' LT '2').ZG31Q                       00183200
                    AIF   ('&ZCGPR' LE '12').ZG31R                      00183300
.ZG31Q              ANOP  ,                                             00183400
&ZMS                SETC  '"PARENTENVTKN='                              00183500
&ZMS                SETC  '&ZMS.&PARENTENVTKN"'                         00183600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00183700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00183800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00183900
.ZG31R              ANOP  ,                                             00184000
.*----------------------------------------------------------------***   00184100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00184200
                    AIF   (N'&PARENTENVTKN64 LE 1).ZG32A  CK NUM        00184300
&ZMS                SETC  '"PARENTENVTKN64='                            00184400
&ZMS                SETC  '&ZMS.&PARENTENVTKN64"'                       00184500
&ZMS                SETC  '&ZMS "PARENTENVTKN64"'                       00184600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00184700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00184800
.ZG32A              ANOP  ,                                             00184900
.*-------------------------------------------------------------------   00185000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00185100
&ZXPARENTENVTKN64   SETC  'INPUT'     SET IN/OUTPUT                     00185200
&XPARENTENVTKN64    SETC  'NO_PARENTENVTKN64'                           00185300
                    AIF   (K'&PARENTENVTKN64(1) LE 0).ZG32B  PARM       00185400
&XPARENTENVTKN64    SETC  '&PARENTENVTKN64(1)'  SET XVARIABLE           00185500
                    AIF   (N'&PARENTENVTKN64 GT 1).ZG32B  MULTI         00185600
&XPARENTENVTKN64    SETC  '&PARENTENVTKN64'     SET XVARIABLE           00185700
.ZG32B              ANOP  ,                                             00185800
.*-------------------------------------------------------------------   00185900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00186000
                    AIF   (K'&ZXPARENTENVTKN64 LE 0).ZG32R  NOT I/O     00186100
         AIF   ('&XPARENTENVTKN64' EQ 'NO_PARENTENVTKN64').ZG32R        00186200
                    AIF   ('&XPARENTENVTKN64'(1,1) NE '(').ZG32R        00186300
&ZCGPR              SETC  '&XPARENTENVTKN64'(2,K'&XPARENTENVTKN64-2)    00186400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                  00186500
                    AIF   (K'&ZCGPR GT 2).ZG32Q                         00186600
                    AIF   ('&ZCGPR' EQ '0').ZG32Q                       00186700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00186800
                    AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME     00186900
.ZG32P              ANOP  ,                                             00187000
                    AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC          00187100
                    AIF   ('&ZCGPR' LT '2').ZG32Q                       00187200
                    AIF   ('&ZCGPR' LE '12').ZG32R                      00187300
.ZG32Q              ANOP  ,                                             00187400
&ZMS                SETC  '"PARENTENVTKN64='                            00187500
&ZMS                SETC  '&ZMS.&PARENTENVTKN64"'                       00187600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00187700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00187800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00187900
.ZG32R              ANOP  ,                                             00188000
.*------------------------------------------------------------------    00188100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00188200
&XPARENTENV         SETC  ''          INITIALIZE XVARIABLE              00188300
.*-------------------------------------------------------------------   00188400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00188500
.ZG36               ANOP  ,                                             00188600
                    AIF   (K'&PARENTENV(1) LE 0).ZG36A                  00188700
&ZTLC               SETC 'NOSWITCH'                                     00188800
                    AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG37             00188900
&XPARENTENV         SETC  'NOSWITCH'  SET KEYWORD                       00189000
                    AIF   (N'&PARENTENV LE 1).ZG36A  CK NUM             00189100
&ZMS                SETC  '"PARENTENV='                                 00189200
&ZMS                SETC  '&ZMS.&PARENTENV"'                            00189300
&ZMS                SETC  '&ZMS "PARENTENV"'                            00189400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00189500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00189600
.ZG36A              ANOP  ,                                             00189700
.*-------------------------------------------------------------------   00189800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00189900
.ZG37               ANOP  ,                                             00190000
&ZTLC               SETC 'SECONDARY'                                    00190100
                    AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG38             00190200
&XPARENTENV         SETC  'SECONDARY'           SET KEYWORD             00190300
                    AIF   (N'&PARENTENV LE 1).ZG37A  CK NUM             00190400
&ZMS                SETC  '"PARENTENV='                                 00190500
&ZMS                SETC  '&ZMS.&PARENTENV"'                            00190600
&ZMS                SETC  '&ZMS "PARENTENV"'                            00190700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00190800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00190900
.ZG37A              ANOP  ,                                             00191000
.*-------------------------------------------------------------------   00191100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191200
.ZG38               ANOP  ,                                             00191300
&ZTLC               SETC 'HOME'                                         00191400
                    AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG39             00191500
&XPARENTENV         SETC  'HOME'      SET KEYWORD                       00191600
                    AIF   (N'&PARENTENV LE 1).ZG38A  CK NUM             00191700
&ZMS                SETC  '"PARENTENV='                                 00191800
&ZMS                SETC  '&ZMS.&PARENTENV"'                            00191900
&ZMS                SETC  '&ZMS "PARENTENV"'                            00192000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00192100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00192200
.ZG38A              ANOP  ,                                             00192300
.*------------------------------------------------------------------    00192400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00192500
.ZG39               ANOP  ,                                             00192600
&ZXPARENTENV        SETC  'INPUT'     SET IN/OUTPUT                     00192700
                    AIF   (K'&XPARENTENV GT 0).ZG39E  VALID ARG         00192800
                    AIF   (T'&PARENTENV EQ 'O').ZG39D  OMITTED          00192900
&ZASYSLNDX          SETA  0                                             00193000
.ZG39A              ANOP  ,           POSITIONAL MACRO KEY              00193100
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00193200
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C              00193300
&ZTLC               SETC 'PARENTENV'                                    00193400
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A     00193500
.ZG39B              ANOP  ,                                             00193600
&ZXPARENTENV        SETC  ''          RESET IN/OUTPUT                   00193700
&ZMS                SETC  'THE "PARENTENV" KEY'                         00193800
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00193900
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00194000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00194100
                    AGO   .ZG39E                                        00194200
.ZG39C              ANOP  ,                                             00194300
&ZXPARENTENV        SETC  ''          RESET IN/OUTPUT                   00194400
&ZMS                SETC  '"PARENTENV='                                 00194500
&ZMS                SETC  '&ZMS.&PARENTENV"'                            00194600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00194700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00194800
&ZMS                SETC  '&ZMS "NOSWITCH",'                            00194900
&ZMS                SETC  '&ZMS "SECONDARY",'                           00195000
&ZMS                SETC  '&ZMS OR "HOME".'                             00195100
                    MNOTE 8,' &ZMS '                                    00195200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00195300
                    AGO   .ZG39E                                        00195400
.ZG39D              ANOP  ,                                             00195500
&XPARENTENV         SETC  'NOSWITCH'  SET DEFAULT KEYWORD               00195600
.ZG39E              ANOP  ,                                             00195700
.*------------------------------------------------------------------    00195800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00195900
                    AIF   (K'&PARENTENV(1) GT 0).ZG39F  PARM            00196000
&XPARENTENV         SETC  ''          ENSURE NULL KEYWORD               00196100
&ZXPARENTENV        SETC  ''          RESET IN/OUTPUT                   00196200
&ZMS                SETC  'THE'                                         00196300
&ZMS                SETC  '&ZMS "PARENTENV" KEY AND ITS'                00196400
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00196500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00196600
&ZMS                SETC  '&ZMS "NOSWITCH",'                            00196700
&ZMS                SETC  '&ZMS "SECONDARY",'                           00196800
&ZMS                SETC  '&ZMS OR "HOME".'                             00196900
                    MNOTE 8,' &ZMS '                                    00197000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00197100
.ZG39F              ANOP  ,                                             00197200
.*-------------------------------------------------------------------   00197300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00197400
.ZG40               ANOP  ,                                             00197500
&ZTLC               SETC 'FINDACTIVE'                                   00197600
                    AIF   ('&PARENTP(1)' NE '&ZTLC').ZG44               00197700
&XPARENTP           SETC  'FINDACTIVE'          SET KEYWORD             00197800
                    AIF   (N'&PARENTP LE 1).ZG40A  CK NUM               00197900
&ZMS                SETC  '"PARENTP='                                   00198000
&ZMS                SETC  '&ZMS.&PARENTP"'                              00198100
&ZMS                SETC  '&ZMS "PARENTP"'                              00198200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00198300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00198400
.ZG40A              ANOP  ,                                             00198500
.*------------------------------------------------------------------    00198600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00198700
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00198800
.ZG40A0             AIF   (K'&PARENTMONTKN LE 0).ZG40A1  OK             00198900
&ZCVAL              SETC '&ZCVAL PARENTMONTKN'  INCORRECT KEY USED      00199000
.ZG40A1             AIF   (K'&PARENTMONTKN64 LE 0).ZG40A2  OK           00199100
&ZCVAL              SETC '&ZCVAL PARENTMONTKN64'  INCORRECT KEY USED    00199200
.ZG40A2             AIF   (K'&PARENTENVTKN LE 0).ZG40A3  OK             00199300
&ZCVAL              SETC '&ZCVAL PARENTENVTKN'  INCORRECT KEY USED      00199400
.ZG40A3             AIF   (K'&PARENTENVTKN64 LE 0).ZG40A4  OK           00199500
&ZCVAL              SETC '&ZCVAL PARENTENVTKN64'  INCORRECT KEY USED    00199600
.ZG40A4             AIF   (K'&PARENTENV LE 0).ZG40A5  OK                00199700
&ZCVAL              SETC '&ZCVAL PARENTENV'     INCORRECT KEY USED      00199800
.ZG40A5             AIF   (K'&ZCVAL LE 0).ZG40A6  OK                    00199900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00200000
&ZMS                SETC  '"PARENTP'                                    00200100
&ZMS                SETC  '&ZMS.=&PARENTP"'                             00200200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00200300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00200400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00200500
.ZG40A6             ANOP  ,                                             00200600
.*----------------------------------------------------------------***   00200700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00200800
                    AIF   (N'&PARENTTCB LE 1).ZG42A  CK NUM             00200900
&ZMS                SETC  '"PARENTTCB='                                 00201000
&ZMS                SETC  '&ZMS.&PARENTTCB"'                            00201100
&ZMS                SETC  '&ZMS "PARENTTCB"'                            00201200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00201300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00201400
.ZG42A              ANOP  ,                                             00201500
.*-------------------------------------------------------------------   00201600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00201700
&ZXPARENTTCB        SETC  'INPUT'     SET IN/OUTPUT                     00201800
&XPARENTTCB         SETC  '&PARENTTCB(1)'       SET XVARIABLE           00201900
                    AIF   (N'&PARENTTCB GT 1).ZG42B  MULTI              00202000
&XPARENTTCB         SETC  '&PARENTTCB'          SET XVARIABLE           00202100
.ZG42B              AIF   (K'&PARENTTCB(1) GT 0).ZG42C                  00202200
&ZXPARENTTCB        SETC  ''          RESET IN/OUTPUT                   00202300
&ZMS                SETC  ' '                                           00202400
&ZMS                SETC  '&ZMS "PARENTTCB" KEY AND ITS'                00202500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00202600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00202700
.ZG42C              ANOP  ,                                             00202800
.*-------------------------------------------------------------------   00202900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00203000
                    AIF   (K'&ZXPARENTTCB LE 0).ZG42R  NOT I/O          00203100
                    AIF   ('&XPARENTTCB'(1,1) NE '(').ZG42R             00203200
&ZCGPR              SETC  '&XPARENTTCB'(2,K'&XPARENTTCB-2)              00203300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                  00203400
                    AIF   (K'&ZCGPR GT 2).ZG42Q                         00203500
                    AIF   ('&ZCGPR' EQ '0').ZG42Q                       00203600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00203700
                    AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME     00203800
.ZG42P              ANOP  ,                                             00203900
                    AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC          00204000
                    AIF   ('&ZCGPR' LT '2').ZG42Q                       00204100
                    AIF   ('&ZCGPR' LE '12').ZG42R                      00204200
.ZG42Q              ANOP  ,                                             00204300
&ZMS                SETC  '"PARENTTCB='                                 00204400
&ZMS                SETC  '&ZMS.&PARENTTCB"'                            00204500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00204600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00204700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00204800
.ZG42R              ANOP  ,                                             00204900
.*------------------------------------------------------------------    00205000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205100
.ZG44               ANOP  ,                                             00205200
&ZXPARENTP          SETC  'INPUT'     SET IN/OUTPUT                     00205300
                    AIF   (K'&XPARENTP GT 0).ZG44E  VALID ARG           00205400
                    AIF   (T'&PARENTP EQ 'O').ZG44D  OMITTED            00205500
&ZASYSLNDX          SETA  0                                             00205600
.ZG44A              ANOP  ,           POSITIONAL MACRO KEY              00205700
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00205800
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG44C              00205900
&ZTLC               SETC 'PARENTP'                                      00206000
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG44A     00206100
.ZG44B              ANOP  ,                                             00206200
&ZXPARENTP          SETC  ''          RESET IN/OUTPUT                   00206300
&ZMS                SETC  'THE "PARENTP" KEY'                           00206400
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00206500
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00206600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00206700
                    AGO   .ZG44E                                        00206800
.ZG44C              ANOP  ,                                             00206900
&ZXPARENTP          SETC  ''          RESET IN/OUTPUT                   00207000
&ZMS                SETC  '"PARENTP='                                   00207100
&ZMS                SETC  '&ZMS.&PARENTP"'                              00207200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00207300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00207400
&ZMS                SETC  '&ZMS "YES"'                                  00207500
&ZMS                SETC  '&ZMS OR "FINDACTIVE".'                       00207600
                    MNOTE 8,' &ZMS '                                    00207700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00207800
                    AGO   .ZG44E                                        00207900
.ZG44D              ANOP  ,                                             00208000
&XPARENTP           SETC  'YES'       SET DEFAULT KEYWORD               00208100
.ZG44E              ANOP  ,                                             00208200
.*------------------------------------------------------------------    00208300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00208400
                    AIF   (K'&PARENTP(1) GT 0).ZG44F  PARM              00208500
&XPARENTP           SETC  ''          ENSURE NULL KEYWORD               00208600
&ZXPARENTP          SETC  ''          RESET IN/OUTPUT                   00208700
&ZMS                SETC  'THE'                                         00208800
&ZMS                SETC  '&ZMS "PARENTP" KEY AND ITS'                  00208900
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00209000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00209100
&ZMS                SETC  '&ZMS "YES"'                                  00209200
&ZMS                SETC  '&ZMS OR "FINDACTIVE".'                       00209300
                    MNOTE 8,' &ZMS '                                    00209400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00209500
.ZG44F              ANOP  ,                                             00209600
.*-------------------------------------------------------------------   00209700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00209800
.ZG45               ANOP  ,                                             00209900
&ZTLC               SETC 'DELETE'                                       00210000
                    AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG46              00210100
&XFUNCTION          SETC  'DELETE'    SET KEYWORD                       00210200
                    AIF   (N'&FUNCTION LE 1).ZG45A  CK NUM              00210300
&ZMS                SETC  '"FUNCTION='                                  00210400
&ZMS                SETC  '&ZMS.&FUNCTION"'                             00210500
&ZMS                SETC  '&ZMS "FUNCTION"'                             00210600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00210700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00210800
.ZG45A              ANOP  ,                                             00210900
.*------------------------------------------------------------------    00211000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211100
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00211200
.ZG45A0             AIF   (K'&OWNER_TOKEN LE 0).ZG45A1  OK              00211300
&ZCVAL              SETC '&ZCVAL OWNER_TOKEN'   INCORRECT KEY USED      00211400
.ZG45A1             AIF   (K'&OWNER_DATA LE 0).ZG45A2  OK               00211500
&ZCVAL              SETC '&ZCVAL OWNER_DATA'    INCORRECT KEY USED      00211600
.ZG45A2             AIF   (K'&DISPTYPE LE 0).ZG45A3  OK                 00211700
&ZCVAL              SETC '&ZCVAL DISPTYPE'      INCORRECT KEY USED      00211800
.ZG45A3             AIF   (K'&TCB LE 0).ZG45A4  OK                      00211900
&ZCVAL              SETC '&ZCVAL TCB'           INCORRECT KEY USED      00212000
.ZG45A4             AIF   (K'&SAMEDU LE 0).ZG45A5  OK                   00212100
&ZCVAL              SETC '&ZCVAL SAMEDU'        INCORRECT KEY USED      00212200
.ZG45A5             AIF   (K'&PARENTP LE 0).ZG45A6  OK                  00212300
&ZCVAL              SETC '&ZCVAL PARENTP'       INCORRECT KEY USED      00212400
.ZG45A6             AIF   (K'&PARENTMONTKN LE 0).ZG45A7  OK             00212500
&ZCVAL              SETC '&ZCVAL PARENTMONTKN'  INCORRECT KEY USED      00212600
.ZG45A7             AIF   (K'&PARENTMONTKN64 LE 0).ZG45A8  OK           00212700
&ZCVAL              SETC '&ZCVAL PARENTMONTKN64'  INCORRECT KEY USED    00212800
.ZG45A8             AIF   (K'&PARENTENVTKN LE 0).ZG45A9  OK             00212900
&ZCVAL              SETC '&ZCVAL PARENTENVTKN'  INCORRECT KEY USED      00213000
.ZG45A9             AIF   (K'&PARENTENVTKN64 LE 0).ZG45A10  OK          00213100
&ZCVAL              SETC '&ZCVAL PARENTENVTKN64'  INCORRECT KEY USED    00213200
.ZG45A10            AIF   (K'&PARENTENV LE 0).ZG45A11  OK               00213300
&ZCVAL              SETC '&ZCVAL PARENTENV'     INCORRECT KEY USED      00213400
.ZG45A11            AIF   (K'&PARENTTCB LE 0).ZG45A12  OK               00213500
&ZCVAL              SETC '&ZCVAL PARENTTCB'     INCORRECT KEY USED      00213600
.ZG45A12            AIF   (K'&ZCVAL LE 0).ZG45A13  OK                   00213700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00213800
&ZMS                SETC  '"FUNCTION'                                   00213900
&ZMS                SETC  '&ZMS.=&FUNCTION"'                            00214000
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00214100
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00214200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00214300
.ZG45A13            ANOP  ,                                             00214400
.*------------------------------------------------------------------    00214500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00214600
.ZG46               ANOP  ,                                             00214700
&ZXFUNCTION         SETC  'INPUT'     SET IN/OUTPUT                     00214800
                    AIF   (K'&XFUNCTION GT 0).ZG46E  VALID ARG          00214900
                    AIF   (T'&FUNCTION EQ 'O').ZG46D  OMITTED           00215000
&ZASYSLNDX          SETA  0                                             00215100
.ZG46A              ANOP  ,           POSITIONAL MACRO KEY              00215200
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00215300
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG46C              00215400
&ZTLC               SETC 'FUNCTION'                                     00215500
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG46A     00215600
.ZG46B              ANOP  ,                                             00215700
&ZXFUNCTION         SETC  ''          RESET IN/OUTPUT                   00215800
&ZMS                SETC  'THE "FUNCTION" KEY'                          00215900
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00216000
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00216100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00216200
                    AGO   .ZG46E                                        00216300
.ZG46C              ANOP  ,                                             00216400
&ZXFUNCTION         SETC  ''          RESET IN/OUTPUT                   00216500
&ZMS                SETC  '"FUNCTION='                                  00216600
&ZMS                SETC  '&ZMS.&FUNCTION"'                             00216700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00216800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00216900
&ZMS                SETC  '&ZMS "CREATE"'                               00217000
&ZMS                SETC  '&ZMS OR "DELETE".'                           00217100
                    MNOTE 8,' &ZMS '                                    00217200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00217300
                    AGO   .ZG46E                                        00217400
.ZG46D              ANOP  ,                                             00217500
&XFUNCTION          SETC  'CREATE'    SET DEFAULT KEYWORD               00217600
.ZG46E              ANOP  ,                                             00217700
.*------------------------------------------------------------------    00217800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00217900
                    AIF   (K'&FUNCTION(1) GT 0).ZG46F  PARM             00218000
&XFUNCTION          SETC  ''          ENSURE NULL KEYWORD               00218100
&ZXFUNCTION         SETC  ''          RESET IN/OUTPUT                   00218200
&ZMS                SETC  'THE'                                         00218300
&ZMS                SETC  '&ZMS "FUNCTION" KEY AND ITS'                 00218400
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00218500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00218600
&ZMS                SETC  '&ZMS "CREATE"'                               00218700
&ZMS                SETC  '&ZMS OR "DELETE".'                           00218800
                    MNOTE 8,' &ZMS '                                    00218900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00219000
.ZG46F              ANOP  ,                                             00219100
.*----------------------------------------------------------------***   00219200
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00219300
&XUSEDMONTKNKEY     SETC  ''          INITIALIZE XVARIABLE              00219400
                    AIF   (K'&MONTKN LE 0).ZG48C                        00219500
&ZXUSEDMONTKNKEY    SETC  'INPUT'     SET IN/OUTPUT                     00219600
&XUSEDMONTKNKEY     SETC  'MONTKN'    SET XVARIABLE                     00219700
&ZXMONTKN           SETC  'INPUT'     SET IN/OUTPUT                     00219800
&XMONTKN            SETC  '&MONTKN(1)'          SET XVARIABLE PARM      00219900
                    AIF   (N'&MONTKN GT 1).ZG48A                        00220000
&XMONTKN            SETC  '&MONTKN'   SET XVARIABLE PARM                00220100
.ZG48A              AIF   (N'&MONTKN LE 1).ZG48B  CK NUM                00220200
&ZMS                SETC  '"MONTKN='                                    00220300
&ZMS                SETC  '&ZMS.&MONTKN"'                               00220400
&ZMS                SETC  '&ZMS "MONTKN"'                               00220500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00220600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00220700
.ZG48B              AIF   (K'&XMONTKN GT 0).ZG48C  ONE PARM             00220800
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00220900
&ZXMONTKN           SETC  ''          RESET IN/OUTPUT                   00221000
&ZMS                SETC  ' '                                           00221100
&ZMS                SETC  '&ZMS "MONTKN" KEY AND ITS'                   00221200
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00221300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00221400
.ZG48C              ANOP  ,                                             00221500
.*----------------------------------------------------------------***   00221600
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00221700
                    AIF   (K'&MONTKN64 LE 0).ZG49D  NO ME KEY           00221800
                    AIF   (N'&MONTKN64 LE 1).ZG49A  CK NUM              00221900
&ZMS                SETC  '"MONTKN64='                                  00222000
&ZMS                SETC  '&ZMS.&MONTKN64"'                             00222100
&ZMS                SETC  '&ZMS "MONTKN64"'                             00222200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00222300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00222400
.ZG49A              AIF   (K'&XUSEDMONTKNKEY LE 0).ZG49B                00222500
&ZMS                SETC  '"MONTKN64'                                   00222600
&ZMS                SETC  '&ZMS.=&MONTKN64"'                            00222700
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00222800
&ZMS                SETC  '&ZMS "&XUSEDMONTKNKEY"'                      00222900
                    MNOTE 8,' &ZMS KEY.'                                00223000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00223100
                    AGO   .ZG49D                                        00223200
.*                                                                      00223300
.ZG49B              ANOP  ,                                             00223400
&ZXUSEDMONTKNKEY    SETC  'INPUT'     SET IN/OUTPUT                     00223500
&XUSEDMONTKNKEY     SETC  'MONTKN64'  SET XVARIABLE                     00223600
&ZXMONTKN64         SETC  'INPUT'     SET IN/OUTPUT                     00223700
&XMONTKN64          SETC  '&MONTKN64(1)'        SET XVARIABLE PARM      00223800
                    AIF   (N'&MONTKN64 GT 1).ZG49C                      00223900
&XMONTKN64          SETC  '&MONTKN64'           SET XVARIABLE PARM      00224000
.ZG49C              AIF   (K'&XMONTKN64 GT 0).ZG49D  ONE PARM           00224100
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00224200
&ZXMONTKN64         SETC  ''          RESET IN/OUTPUT                   00224300
&ZMS                SETC  ' '                                           00224400
&ZMS                SETC  '&ZMS "MONTKN64" KEY AND ITS'                 00224500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00224600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00224700
.ZG49D              ANOP  ,                                             00224800
.*------------------------------------------------------------------    00224900
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00225000
                    AIF   (K'&XUSEDMONTKNKEY GT 0).ZG50B                00225100
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00225200
&ZXMONTKN           SETC  ''          RESET IN/OUTPUT                   00225300
&XUSEDMONTKNKEY     SETC  ''          ENSURE NULL                       00225400
&XMONTKN            SETC  ''          ENSURE NULL                       00225500
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00225600
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00225700
&ZMS                SETC  '&ZMS REQUIRED:'                              00225800
&ZMS                SETC  '&ZMS "MONTKN"'       VALID ME KEY            00225900
&ZMS                SETC  '&ZMS OR "MONTKN64".'  VALID ME KEY           00226000
                    MNOTE 8,' &ZMS '                                    00226100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00226200
.ZG50B              ANOP  ,                                             00226300
.*-------------------------------------------------------------------   00226400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00226500
.ZG48ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN').ZG49ZY                  00226600
.*-------------------------------------------------------------------   00226700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00226800
                    AIF   (K'&ZXMONTKN LE 0).ZG48R  NOT I/O             00226900
                    AIF   ('&XMONTKN'(1,1) NE '(').ZG48R                00227000
&ZCGPR              SETC  '&XMONTKN'(2,K'&XMONTKN-2)                    00227100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                  00227200
                    AIF   (K'&ZCGPR GT 2).ZG48Q                         00227300
                    AIF   ('&ZCGPR' EQ '0').ZG48Q                       00227400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00227500
                    AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME     00227600
.ZG48P              ANOP  ,                                             00227700
                    AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC          00227800
                    AIF   ('&ZCGPR' LT '2').ZG48Q                       00227900
                    AIF   ('&ZCGPR' LE '12').ZG48R                      00228000
.ZG48Q              ANOP  ,                                             00228100
&ZMS                SETC  '"MONTKN='                                    00228200
&ZMS                SETC  '&ZMS.&MONTKN"'                               00228300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00228400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00228500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00228600
.ZG48R              ANOP  ,                                             00228700
.*-------------------------------------------------------------------   00228800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00228900
.ZG49ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN64').ZG50ZY                00229000
.*-------------------------------------------------------------------   00229100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00229200
                    AIF   (K'&ZXMONTKN64 LE 0).ZG49R  NOT I/O           00229300
                    AIF   ('&XMONTKN64'(1,1) NE '(').ZG49R              00229400
&ZCGPR              SETC  '&XMONTKN64'(2,K'&XMONTKN64-2)                00229500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                  00229600
                    AIF   (K'&ZCGPR GT 2).ZG49Q                         00229700
                    AIF   ('&ZCGPR' EQ '0').ZG49Q                       00229800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00229900
                    AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME     00230000
.ZG49P              ANOP  ,                                             00230100
                    AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC          00230200
                    AIF   ('&ZCGPR' LT '2').ZG49Q                       00230300
                    AIF   ('&ZCGPR' LE '12').ZG49R                      00230400
.ZG49Q              ANOP  ,                                             00230500
&ZMS                SETC  '"MONTKN64='                                  00230600
&ZMS                SETC  '&ZMS.&MONTKN64"'                             00230700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00230800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00230900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00231000
.ZG49R              ANOP  ,                                             00231100
.*-------------------------------------------------------------------   00231200
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00231300
.ZG50ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00231400
.*----------------------------------------------------------------***   00231500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00231600
                    AIF   (N'&EWLM LE 1).ZG52A  CK NUM                  00231700
&ZMS                SETC  '"EWLM='                                      00231800
&ZMS                SETC  '&ZMS.&EWLM"'                                 00231900
&ZMS                SETC  '&ZMS "EWLM"'                                 00232000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00232100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00232200
.ZG52A              ANOP  ,                                             00232300
.*-------------------------------------------------------------------   00232400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00232500
&XEWLM              SETC  ''          INITIALIZE XVARIABLE              00232600
.ZG53A   AIF   ('&EWLM(1)' NE 'NO').ZG54A                               00232700
&XEWLM              SETC  'NO'        SET KEYWORD                       00232800
.*-------------------------------------------------------------------   00232900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00233000
.ZG54A              AIF   (K'&XEWLM GT 0).ZG54C  KEYWORD                00233100
                    AIF   (K'&EWLM(1) LE 0).ZG54B                       00233200
&ZMS                SETC  '"EWLM='                                      00233300
&ZMS                SETC  '&ZMS.&EWLM"'                                 00233400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00233500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00233600
&ZMS                SETC  '&ZMS "NO".'                                  00233700
                    MNOTE 8,' &ZMS '                                    00233800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00233900
.ZG54B              ANOP  ,                                             00234000
&XEWLM              SETC  'NO'        SET DEFAULT KEYWORD               00234100
.ZG54C              ANOP  ,                                             00234200
&ZXEWLM             SETC  'INPUT'     SET IN/OUTPUT                     00234300
.*----------------------------------------------------------------***   00234400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00234500
                    AIF   (N'&RETCODE LE 1).ZG56A  CK NUM               00234600
&ZMS                SETC  '"RETCODE='                                   00234700
&ZMS                SETC  '&ZMS.&RETCODE"'                              00234800
&ZMS                SETC  '&ZMS "RETCODE"'                              00234900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00235000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00235100
.ZG56A              ANOP  ,                                             00235200
.*-------------------------------------------------------------------   00235300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00235400
                    AIF   (K'&RETCODE(1) LE 0).ZG56C  NO PARM           00235500
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00235600
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00235700
                    AIF   (N'&RETCODE GT 1).ZG56C                       00235800
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00235900
.ZG56C              ANOP  ,                                             00236000
.*-------------------------------------------------------------------   00236100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00236200
                    AIF   (K'&ZXRETCODE LE 0).ZG56R  NOT I/O            00236300
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG56R               00236400
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00236500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG56P                  00236600
                    AIF   (K'&ZCGPR GT 2).ZG56Q                         00236700
                    AIF   ('&ZCGPR' EQ '0').ZG56Q                       00236800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00236900
                    AIF   (T'&ZCGPR NE 'N').ZG56Q  INVALID REG NAME     00237000
.ZG56P              ANOP  ,                                             00237100
                    AIF   (T'&ZCGPR NE 'N').ZG56R  NON NUMERIC          00237200
                    AIF   ('&ZCGPR' EQ '15').ZG56R                      00237300
                    AIF   ('&ZCGPR' LT '2').ZG56Q                       00237400
                    AIF   ('&ZCGPR' LE '12').ZG56R                      00237500
.ZG56Q              ANOP  ,                                             00237600
&ZMS                SETC  '"RETCODE='                                   00237700
&ZMS                SETC  '&ZMS.&RETCODE"'                              00237800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00237900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'      00238000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00238100
.ZG56R              ANOP  ,                                             00238200
.*----------------------------------------------------------------***   00238300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00238400
                    AIF   (N'&RSNCODE LE 1).ZG59A  CK NUM               00238500
&ZMS                SETC  '"RSNCODE='                                   00238600
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00238700
&ZMS                SETC  '&ZMS "RSNCODE"'                              00238800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00238900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00239000
.ZG59A              ANOP  ,                                             00239100
.*-------------------------------------------------------------------   00239200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00239300
                    AIF   (K'&RSNCODE(1) LE 0).ZG59C  NO PARM           00239400
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00239500
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00239600
                    AIF   (N'&RSNCODE GT 1).ZG59C                       00239700
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00239800
.ZG59C              ANOP  ,                                             00239900
.*-------------------------------------------------------------------   00240000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00240100
                    AIF   (K'&ZXRSNCODE LE 0).ZG59R  NOT I/O            00240200
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG59R               00240300
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00240400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                  00240500
                    AIF   (K'&ZCGPR GT 2).ZG59Q                         00240600
                    AIF   ('&ZCGPR' EQ '0').ZG59R                       00240700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00240800
                    AIF   (T'&ZCGPR NE 'N').ZG59Q  INVALID REG NAME     00240900
.ZG59P              ANOP  ,                                             00241000
                    AIF   (T'&ZCGPR NE 'N').ZG59R  NON NUMERIC          00241100
                    AIF   ('&ZCGPR' EQ '0').ZG59R                       00241200
                    AIF   ('&ZCGPR' LT '2').ZG59Q                       00241300
                    AIF   ('&ZCGPR' LE '12').ZG59R                      00241400
.ZG59Q              ANOP  ,                                             00241500
&ZMS                SETC  '"RSNCODE='                                   00241600
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00241700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00241800
                    MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'       00241900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00242000
.ZG59R              ANOP  ,                                             00242100
.******************************************************************     00242200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00242300
.******************************************************************     00242400
                    ACTR  10000                                         00242500
.*----------------------------------------------------------------***   00242600
.***AH.P02 EXTRA POSITIONALS                                            00242700
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          00242800
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          00242900
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      00243000
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       00243100
.ZGLISTX1           ANOP  ,                                             00243200
&ZCVAL              SETC  ''          ERROR FIELD                       00243300
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00243400
.ZGLIST2            ANOP  ,                                             00243500
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00243600
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          00243700
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00243800
                    AGO   .ZGLIST2                                      00243900
.*                                                                      00244000
.ZGLIST3            ANOP  ,                                             00244100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00244200
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00244300
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00244400
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00244500
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00244600
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00244700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00244800
.ZGLISTX            ANOP  ,                                             00244900
&ZASYSLNDX          SETA  0                                             00245000
.*-------------------------------------------------------------------   00245100
.***AG.MF04 MF=(SLE)                                                    00245200
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00245300
.*******************************************************************    00245400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00245500
.*******************************************************************    00245600
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00245700
.*******************************************************************    00245800
.***AE.01  START OF IWM4MRLT MACRO CODE                                 00245900
.*******************************************************************    00246000
                    LCLC  &M0M0001                 NAME                 00246100
&M0M0001            SETC  '&XLABEL'                SET NAME             00246200
                    AIF   (K'&XLABEL NE 0).XLAB2                        00246300
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00246400
.*                                                                      00246500
.XLAB2              ANOP  ,                                             00246600
                    AIF   ('&XMF' EQ 'L').XLAB3                         00246700
&M0M0001 DS    0H                             IWM4MRLT-0                00246800
.XLAB3              ANOP  ,                                             00246900
.*******************************************************************    00247000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00247100
.*******************************************************************    00247200
              PUSH  PRINT                                               00247300
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00247400
                    PRINT OFF         ++ PR01                           00247500
                    AGO   .ZPRNTXX                                      00247600
.ZPRINTX            PRINT ON                                            00247700
.ZPRNTXX            ANOP  ,                                             00247800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00247900
         LCLC  &T1                                                      00248000
         LCLC  &T_Montkn                                                00248100
         LCLC  &T_Parent                                                00248200
         AIF   ('&XFUNCTION' EQ 'DELETE').TESTMF                        00248300
         AIF   ('&XPARENTP' EQ 'YES').TESTMF                            00248400
         AIF   ('&XPARENTP' NE 'FINDACTIVE').NOCODENEEDED               00248500
.*    PARENTP SPECIFIED AS FINDACTIVE                                   00248600
         AIF   ('&DISPTYPE' NE 'SRB').NOCODENEEDED                      00248700
         AIF   ('&SAMEDU' NE 'YES').NOCODENEEDED                        00248800
.*    DISPTYPE SPECIFIED AS SRB, SAMEDU SPECIFIED AS YES                00248900
&T1      SETC  'FUNCTION(CREATE) DISPTYPE(SRB) SAMEDU(YES) CANNOT BE '  00249000
&T1      SETC  '&T1.SPECIFIED WITH PARENTP(FINDACTIVE)'                 00249100
         MNOTE 8,'&T1'                                                  00249200
         MEXIT                                                          00249300
.*                                                                      00249400
.TESTMF  ANOP                                                           00249500
         AIF   ('&MF' EQ '').NOMF                                       00249600
&T1      SETC  'MF IS NOT VALID WITH FUNCTION(DELETE) OR PARENTP(YES)'  00249700
         MNOTE 4,'&T1'                                                  00249800
.NOMF    ANOP                                                           00249900
.*--------------------------------------------------------------------- 00250000
.* Do we run on HBB7790 or higher                                       00250100
.*--------------------------------------------------------------------- 00250200
         LLGT  14,16(0,0)              Get CVT address                  00250300
         TM    CVTOSLV6-CVT(14),CVTH7790   Test for HBB7790             00250400
         JO    Rela&SYSNDX._Begin      Branch when Lvl is present  @P2C 00250500
         LA    0,IWMRSNCODEBADVERSION  HBB7790 is required              00250600
         LA    15,IWMRETCODEINVOCERROR Set Return Code                  00250700
         J     Rela&SYSNDX._End        Branch to end label         @P2C 00250800
Rela&SYSNDX._Begin DS 0H                                                00250900
.*--------------------------------------------------------------------  00251000
.* MONTKN / MONTKN64 - Setup                                            00251100
.*--------------------------------------------------------------------  00251200
         AIF   ('&SYSAM64' EQ 'YES').Mrlt_A64_Switch1                   00251300
         SAM64                                                          00251400
.Mrlt_A64_Switch1 ANOP                                                  00251500
                                                                        00251600
.Mrlt_Montkn1_Begin ANOP                                                00251700
         AIF ('&MONTKN' EQ '').Mrlt_Montkn64                            00251800
&T_Montkn SETC '&MONTKN'                                                00251900
         AIF   ('&MONTKN'(1,1) NE '(').Mrlt_Montkn31_Code               00252000
&T_Montkn SETC '&MONTKN'(2,K'&MONTKN-2)                                 00252100
&T_Montkn SETC '0(&T_Montkn.)'                                          00252200
.Mrlt_Montkn31_Code ANOP                                                00252300
.* R14 is now a valid base displacement                                 00252400
         LLGT  14,&T_Montkn            Fetch 31bit Monitoring Token     00252500
         AGO .Mrlt_Montkn1_End                                          00252600
.Mrlt_Montkn64 ANOP                                                     00252700
&T_Montkn SETC '&MONTKN64'                                              00252800
         AIF   ('&MONTKN64'(1,1) NE '(').Mrlt_Montkn64_Code             00252900
&T_Montkn SETC '&MONTKN64'(2,K'&MONTKN-2)                               00253000
&T_Montkn SETC '0(&T_Montkn.)'                                          00253100
.Mrlt_Montkn64_Code ANOP                                                00253200
.* R14 is now a valid base displacement                                 00253300
         LG    14,&T_Montkn            Fetch 64bit Monitoring Token     00253400
.Mrlt_Montkn1_End ANOP                                                  00253500
         LTGR  14,14                   Test the MONTKN value            00253600
         JNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00253700
*                                                                  @P2C 00253800
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00253900
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00254000
         J     Rela&SYSNDX._End        BRANCH TO END LABEL         @P2C 00254100
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00254200
         LLILF 15,PB_ID_CONST          Load PB eyecatcher into R15 @P1A 00254300
         CL    15,PB_ID-PB(,14)        Compare PB eyecatcher       @P1C 00254400
         JE    MONENVRO&SYSNDX         BRANCH WHEN MON ENV PASSES  @P2C 00254500
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00254600
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00254700
         J     Rela&SYSNDX._End        BRANCH TO END LABEL         @P2C 00254800
         USING PB,14                                         @OW54806   00254900
MONENVRO&SYSNDX DS    0H               BRANCH LABEL FOR      @WLMPPBS   00255000
         TM    PB_FLAGS,PB_REPORT_ONLY   REPORT ONLY CHECK   @WLMPPBS   00255100
         BRC   8,MONENVOK&SYSNDX         BRANCH WHEN NOt RO        @P2C 00255200
         LA    0,IWMRSNCODEROMONENV    SET REASON CODE = RO  @WLMPPBS   00255300
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR  @WLMPPBS   00255400
         J     Rela&SYSNDX._End        BRANCH TO END LABEL         @P2C 00255500
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00255600
         AIF   ('&XFUNCTION' NE 'CREATE').ENDCREATE                     00255700
MONENVBP&SYSNDX DS    0H               BRANCH LABEL FOR      @WLMPDBM   00255800
         TM    PB_FLAGS,PB_BPMGMT_ONLY BUFFERPOOL ONLY CHECK @WLMPDBM   00255900
         BRC   4,ENDXC&SYSNDX          BRANCH IF BPMGMTONLY        @P2C 00256000
.*                                                                      00256100
.* THE FOLLOWING CODE HANDLES FUNCTION(CREATE)                          00256200
.*                                                                      00256300
         LH    1,PB_NEW_LENGTH                                     @P2C 00256400
         BCTR  1,0             Decrement length for EX             @P2C 00256500
         LARL  15,A&SYSNDX                                         @P2A 00256600
         EX    1,0(15)          EXecute the XC instruction         @P2C 00256700
         J     ENDXC&SYSNDX     Branch around Execute              @P2C 00256800
A&SYSNDX XC    PB_CLEAR_FLD(0),PB_CLEAR_FLD                   @OW26040  00256900
ENDXC&SYSNDX    DS    0H                                      @OW26040  00257000
         AIF   ('&XOWNER_TOKEN' NE 'NO_OWNER_TOKEN').OWNERTKN           00257100
         AGO   .ENDOWNERTKN                                             00257200
.*                                                                      00257300
.OWNERTKN   ANOP                                                        00257400
.* Change &OWNERTKN to &OWNER_TOKEN in the next 3 lines WLMPERS         00257500
&T1      SETC  '&OWNER_TOKEN'                                           00257600
         AIF   ('&OWNER_TOKEN'(1,1) NE '(').OWNERTKNRS                  00257700
&T1      SETC  '&OWNER_TOKEN'(2,K'&OWNER_TOKEN-2)                       00257800
&T1      SETC  '0(&T1.)'                                                00257900
.OWNERTKNRS ANOP                                                        00258000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00258100
         L     1,&T1                   COPY OWNER_TOKEN VIA L,ST        00258200
         ST    1,PB_OWNER_TKN                                           00258300
.ENDOWNERTKN   ANOP                                                     00258400
.*                                                                      00258500
.*       OWNER_DATA PROCESSING                                          00258600
.*                                                                      00258700
         AIF   ('&XOWNER_DATA' NE 'NO_OWNER_DATA').OWNER_DATA           00258800
         AGO   .ENDOWNER_DATA                                           00258900
.*                                                                      00259000
.OWNER_DATA ANOP                                                        00259100
&T1      SETC  '&OWNER_DATA'                                            00259200
         AIF   ('&OWNER_DATA'(1,1) NE '(').OWNER_DATARS                 00259300
&T1      SETC  '&OWNER_DATA'(2,K'&OWNER_DATA-2)                         00259400
&T1      SETC  '0(&T1.)'                                                00259500
.OWNER_DATARS ANOP                                                      00259600
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00259700
         L     1,&T1                   COPY OWNER_DATA VIA L,ST         00259800
         ST    1,PB_OWNER_DATA                                          00259900
.ENDOWNER_DATA ANOP                                                     00260000
*                                                                       00260100
*                                                                       00260200
         AIF   ('&XDISPTYPE' NE 'TCB').ENDTCB                           00260300
&T1      SETC  '&TCB'                                                   00260400
         AIF   ('&TCB'(1,1) NE '(').TCBRS                               00260500
&T1      SETC  '&TCB'(2,K'&TCB-2)                                       00260600
.*    &T1      SETC  '0(&T1.)'       OLD NON-OPTIMIZED CODE DID LA,ST   00260700
         ST    &T1,PB_DU                                                00260800
         AGO   .ENDDISPTYPE                                             00260900
.TCBRS ANOP                                                             00261000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00261100
         LA    0,&T1                   COPY TCB ADDRESS VIA LA,ST       00261200
         ST    0,PB_DU                                                  00261300
         AGO   .ENDDISPTYPE                                             00261400
.ENDTCB    ANOP                                                         00261500
&T1      SETC  'PB_SRB_SAMEDU_&XSAMEDU'                                 00261600
         LA    0,&T1                   INDICATE SRB MODE,SAMEDU VALUE   00261700
         ST    0,PB_DU                                                  00261800
.ENDDISPTYPE   ANOP                                                     00261900
*                                                                       00262000
         L     1,X'224'(0,0)           COPY PSAAOLD VIA L,ST            00262100
         ST    1,PB_DU_ASCB                                             00262200
*                                                                       00262300
.*--------------------------------------------------------------------  00262400
.* PARENTMONTKN / PARENTMONTKN64 - Setup                                00262500
.*--------------------------------------------------------------------  00262600
.Mrlt_Parent1_Begin ANOP                                                00262700
         AIF ('&PARENTMONTKN' EQ '').Mrlt_Parent64                      00262800
&T_Parent SETC '&PARENTMONTKN'                                          00262900
         AIF   ('&PARENTMONTKN'(1,1) NE '(').Mrlt_Parent31_Code         00263000
&T_Parent SETC '&PARENTMONTKN'(2,K'&PARENTMONTKN-2)                     00263100
&T_Parent SETC '0(&T_Parent.)'                                          00263200
.Mrlt_Parent31_Code ANOP                                                00263300
.* R15 is now a valid base displacement                                 00263400
         LLGT  15,&T_Parent            Fetch 31bit Parent Token         00263500
         AGO .Mrlt_Parent1_End                                          00263600
.Mrlt_Parent64 ANOP                                                     00263700
&T_Parent SETC '&PARENTMONTKN64'                                        00263800
         AIF   ('&PARENTMONTKN64'(1,1) NE '(').Mrlt_Parent64_Code       00263900
&T_Parent SETC '&PARENTMONTKN64'(2,K'&PARENTMONTKN-2)                   00264000
&T_Parent SETC '0(&T_Parent.)'                                          00264100
.Mrlt_Parent64_Code ANOP                                                00264200
.* R15 is now a valid base displacement                                 00264300
         LG    15,&T_Parent            Fetch 64bit Parent Token         00264400
.Mrlt_Parent1_End ANOP                                                  00264500
         LTGR  15,15                   Test the PARENTMONTKN value      00264600
         JNZ   PAR_EXISTS&SYSNDX       BRANCH IF PARENT ENV EXISTS @P2C 00264700
         LH    1,X'24'(1,0)            COPY ASID FOR CURRENT HOME       00264800
         STH   1,PB_PARENT_HOME_ASID                                    00264900
         LA    0,IWMRSNCODENOPARENV    SET REASON CODE = NO PARENT ENV  00265000
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00265100
         J     SETRELATE&SYSNDX        BRANCH TO SET STATE TO RELATE    00265200
*                                                                  @P2C 00265300
PAR_EXISTS&SYSNDX DS    0H             BRANCH LABEL FOR PAR ENV EXISTS  00265400
.*                                                                      00265500
.*                                                                      00265600
         LCLC  &SACTO2                                                  00265700
         LCLC  &SACBACK1                                                00265800
         LCLC  &SACBACK2                                                00265900
&SACBACK1 SETC  'DS'                                                    00266000
&SACBACK2 SETC  '0H'                                                    00266100
.*                                                                      00266200
         AIF   ('&XPARENTENV' NE 'NOSWITCH').NOSWITCHEND                00266300
.*                                                                      00266400
.*   THE FOLLOWING CODE HANDLES                                         00266500
.*   ===========================>    PARENTENV(PRIMARY)                 00266600
.*                                                                      00266700
         LLILF 0,PB_ID_CONST                                       @P1A 00266800
         CL    0,PB_ID-PB(,15)                                     @P1C 00266900
         AGO   .COMMONCONT1                                             00267000
.*                                                                      00267100
.NOSWITCHEND ANOP                                                       00267200
.*   THE FOLLOWING CODE HANDLES                                         00267300
.*   ===========================>    PARENTENV(SECONDARY!HOME)          00267400
.*                                                                      00267500
         AIF   ('&XPARENTENV' NE 'SECONDARY').HOMESWITCH                00267600
&SACTO2 SETC  '256'                                                     00267700
         AGO   .HOMESWITCHEND                                           00267800
.HOMESWITCH ANOP                                                        00267900
&SACTO2 SETC  '768'                                                     00268000
.HOMESWITCHEND ANOP                                                     00268100
.*                                                                      00268200
&SACBACK1 SETC  'SAC'                                                   00268300
&SACBACK2 SETC  '0'                                                     00268400
.*                                                                      00268500
.*       THE PB ACRONYM, REFERENCED AS A LITERAL, RESIDES IN CURRENT    00268600
.*         PRIMARY, AND MUST BE LOADED BEFORE CHANGING ASC MODE         00268700
.*                                                                      00268800
         SAC   &SACTO2                                                  00268900
         CL    0,PB_ID-PB(,15)                                     @P1C 00269000
.*                                                                      00269100
.*             COMMON CODE FOR SHORT-FORM/MINIMAL VERIFICATION          00269200
.*                                                                      00269300
.COMMONCONT1 ANOP                                                       00269400
         JE    PARENVRO&SYSNDX         BRANCH WHEN PARENT ENV PASSES    00269500
*                                                                  @P2C 00269600
         &SACBACK1 &SACBACK2                                            00269700
         LA    0,IWMRSNCODEBADPARENV   SET REASON CODE = BAD PAR ENV    00269800
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00269900
         J     Rela&SYSNDX._End        BRANCH TO END LABEL         @P2C 00270000
PARENVRO&SYSNDX DS    0H               BRANCH LABEL FOR      @WLMPPBS   00270100
         TM    PB_FLAGS-PB(15),PB_REPORT_ONLY                @WLMPPBS   00270200
*                                      REPORT ONLY CHECK     @WLMPPBS   00270300
         BRC   8,PARENVBP&SYSNDX       BRANCH WHEN NOT RO          @P2C 00270400
         LA    0,IWMRSNCODEROPARENV    SET REASON CODE = RO  @WLMPPBS   00270500
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR  @WLMPPBS   00270600
         J     Rela&SYSNDX._End        BRANCH TO END LABEL         @P2C 00270700
PARENVBP&SYSNDX DS    0H               BRANCH LABEL FOR      @WLMPDBM   00270800
         TM    PB_FLAGS-PB(15),PB_BPMGMT_ONLY                @WLMPDBM   00270900
*                                      BPMGMT ONLY CHECK     @WLMPDBM   00271000
         BRC   8,PARENVOK&SYSNDX     BRANCH WHEN NOT BPMGMTO       @P2C 00271100
         LA    0,IWMRSNCODEBPPARENV    SET REASON CODE = BP  @WLMPDBM   00271200
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR  @WLMPDBM   00271300
         J     Rela&SYSNDX._End        BRANCH TO END LABEL         @P2C 00271400
PARENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00271500
         LG    1,PBX_MIRROR_TKN-PB(15,0) FETCH MIRROR TOKEN  @LPBABVC   00271600
         LTGR  1,1                                                      00271700
         JNZ   Rela&SYSNDX._Parent_Load_End                        @P2C 00271800
         LGF   1,PB_MIRROR_TKN-PB(15,0)  FETCH MIRROR TOKEN  @LPBABVC   00271900
Rela&SYSNDX._Parent_Load_End DS 0H                                      00272000
         &SACBACK1 &SACBACK2                                            00272100
*                                                                       00272200
         STG   1,PBX_PARENT_MIRROR_TKN   Copy parent mirror token       00272300
         CLGFI 1,X'7FFFFFFF'                                       @P1C 00272400
         JH    Rela&SYSNDX._ParentMirror                           @P2C 00272500
         ST    1,PB_PARENT_MIRROR_TKN                                   00272600
         J     Rela&SYSNDX._ParentMirrorEnd                        @P2C 00272700
Rela&SYSNDX._ParentMirror DS 0H                                         00272800
         LLILF 0,X'7FFFF000'            Load invalid PB            @P1A 00272900
         ST    0,PB_PARENT_MIRROR_TKN   Set ivalid PB              @P1C 00273000
Rela&SYSNDX._ParentMirrorEnd DS 0H                                      00273100
*                                                                       00273200
         STG   15,PBX_PARENT_MONTKN     Copy long parent token          00273300
         CLGFI 15,X'7FFFFFFF'           Check if tkn to long       @P1C 00273400
         JZ    Rela&SYSNDX._0_Parent    No, parent token           @P2C 00273500
         JH    Rela&SYSNDX._Parent      Yes, set to long indication@P2C 00273600
         ST    15,PB_PARENT_MONTKN      Copy parent token               00273700
         OI    PB_PARENT_MONTKN,X'80'   Set High order flag             00273800
*                                       (PB_PARENT_MONTKN_HIBIT)        00273900
         J     Rela&SYSNDX._ParentEnd                              @P2C 00274000
Rela&SYSNDX._Parent DS 0H                                               00274100
         LLILF 0,X'7FFFF000'            Load invalid PB            @P1A 00274200
         ST    0,PB_PARENT_MONTKN       Set to long indication     @P1C 00274300
         J     Rela&SYSNDX._ParentEnd                              @P2C 00274400
Rela&SYSNDX._0_Parent DS 0H                                             00274500
         ST    15,PB_PARENT_MONTKN      Copy parent token               00274600
Rela&SYSNDX._ParentEnd DS 0H                                            00274700
*                                                                       00274800
         LA    15,IWMRETCODEOK          SET RETURN CODE = OK            00274900
SETRELATE&SYSNDX DS   0H                BRANCH LABEL FOR RELATE TO HOME 00275000
         OI    PB_WORKDEF,PB_RELATE     SET RELATE                      00275100
         AGO   .ENDINLINE                                               00275200
.ENDCREATE  ANOP                                                        00275300
.*                                                                      00275400
.* THE FOLLOWING CODE HANDLES FUNCTION(DELETE)                          00275500
.*                                                                      00275600
         NI    PB_WORKDEF,X'FF'-PB_RELATE     RESET RELATE              00275700
         SLGR  15,15                           SET RETURN CODE = OK     00275800
         STG   15,PBX_PARENT_MONTKN                                     00275900
         STG   15,PBX_PARENT_MIRROR_TKN                                 00276000
         ST    15,PB_PARENT_MONTKN                                      00276100
         ST    15,PB_PARENT_MIRROR_TKN                                  00276200
.ENDINLINE ANOP                                                         00276300
.*                                                                      00276400
         AIF   ('&XEWLM' NE 'YES').Mrlt_NoEwlm                     @L0A 00276500
.* THE FOLLOWING CODE HANDLES EWLM REPORTING.         @WLMPERS          00276600
.* IN CASE OF CREATE:                                                   00276700
.*   -THE MONTKN PB CAN BE HOME RELATED. IF SO, WE WILL DO NOTHING.     00276800
.*   -IF THE MONTKN PB IS NOT HOME RELATED, THE MONTKN PB AND THE       00276900
.*    PARENT PB ARE CHECKED ALREADY AND ARE VALID. WE DO NOT HAVE TO    00277000
.*    CHECK THIS AGAIN.                                                 00277100
.*                                                                      00277200
*                                                                       00277300
*   BEGIN EWLM REPORT SUPPORT                                           00277400
         AIF   ('&XFUNCTION' EQ 'DELETE').FKTDELETE                     00277500
         LG    1,PBX_PARENT_MONTKN    Extr long parent monitoring tkn   00277600
         LTGR  1,1                    Test if we have a valid token     00277700
         JZ    Rela&SYSNDX.Ewlm       Br if related to HOME SPACE(>0)   00277800
*                                                                  @P2C 00277900
         ICM   1,15,PB_PARENT_MONTKN  Extract parent monitoring token   00278000
.*  A MONITOR TOKEN HAS HIGH ORDER BIT ON, I.E. <0                      00278100
         JH    Rela&SYSNDX.Ewlm       Br if related to HOME SPACE(>0)   00278200
*                                                                  @P2C 00278300
         MVI   PB_EWLM_REQUEST,PB_EWLM_REQUEST_RELA_CREATE_&XPARENTENV  00278400
         AGO   .RPTEWLM1                                                00278500
.FKTDELETE     ANOP                                                     00278600
         MVI   PB_EWLM_REQUEST,PB_EWLM_REQUEST_RELA_DELETE              00278700
.RPTEWLM1      ANOP                                                     00278800
         AIF   ('&SYSAM64' EQ 'YES').Mrlt_A31_SwitchEwlm                00278900
         SAM31                                                          00279000
.Mrlt_A31_SwitchEwlm ANOP                                               00279100
         SGR   0,0                    Clear GPR0                        00279200
         LGR   1,14                   GPR1  ->  PB                      00279300
         LLGT  14,16(0,0)             GET  CVT  ADDRESS                 00279400
         LLGT  14,X'8C'(14,0)         Get ECVT Address                  00279500
         LLGT  14,X'C4'(14,0)         Get WMVT Address                  00279600
         AIF   ('&SYSAM64' NE 'YES').Mrlt_Amode31                       00279700
         LLGT  15,X'164'(14,0)        Get M_RELA Entry Point Addr       00279800
         BASR  14,15                  Call 64bit Classify Routine       00279900
         LGR   14,1                   GPR14 -> PB                  @L0A 00280000
         AGO   .Mrlt_End                                                00280100
.Mrlt_Amode31 ANOP                                                      00280200
         LLGTR 1,1                    Clear High Half of R1             00280300
         LLGT  15,X'160'(14,0)        Get M_RELA Entry Point Addr       00280400
         BASR  14,15                  Call 31bit Classify Routine       00280500
         LGR   14,1                   GPR14 -> PB                  @L0A 00280600
         AGO   .Mrlt_End                                           @L0A 00280700
.Mrlt_NoEwlm ANOP                                                  @L0A 00280800
         LA    15,IWMRETCODEOK        SET RETURN CODE = OK         @L0A 00280900
.Mrlt_End ANOP                                                          00281000
         AIF   ('&SYSAM64' EQ 'YES').Mrlt_A64_SwitchEwlm                00281100
         SAM64                                                          00281200
.Mrlt_A64_SwitchEwlm ANOP                                               00281300
Rela&SYSNDX.EWLM DS  0H            END LABEL FOR EWLM NOT SUPPORTED     00281400
*                                                                       00281500
*   END EWLM REPORT SUPPORT                                             00281600
*                                                                       00281700
.*                                                                      00281800
.* END EWLM Reporting                                 @WLMPERS          00281900
.*                                                                      00282000
         DROP  14                                                       00282100
Rela&SYSNDX._End DS 0H                 END LABEL                        00282200
.*******************************************************************    00282300
.***        RETURN CODE PROCESSING                                      00282400
.*******************************************************************    00282500
         AIF   (N'&RETCODE LE 0).IWM4Rela_ENDRC_EXP                     00282600
         AIF   ('&XRETCODE'(1,1) EQ '(').IWM4MRLT_RC_REG                00282700
         AIF   ('&XRETCODE' EQ 'GPR15').IWM4MRLT_ENDRC_EXP              00282800
         AIF   ('&XRETCODE' EQ 'REG15').IWM4MRLT_ENDRC_EXP              00282900
         AIF   ('&XRETCODE' EQ 'R15').IWM4MRLT_ENDRC_EXP                00283000
         AIF   ('&XRETCODE' EQ '15').IWM4MRLT_ENDRC_EXP                 00283100
         ST    15,&XRETCODE                                             00283200
         AGO   .IWM4MRLT_ENDRC_EXP                                      00283300
.*                                                                      00283400
.IWM4MRLT_RC_REG      ANOP  ,                                           00283500
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00283600
         AIF   ('&T1' EQ 'GPR15').IWM4MRLT_ENDRC_EXP                    00283700
         AIF   ('&T1' EQ 'REG15').IWM4MRLT_ENDRC_EXP                    00283800
         AIF   ('&T1' EQ 'R15').IWM4MRLT_ENDRC_EXP                      00283900
         AIF   ('&T1' EQ '15').IWM4MRLT_ENDRC_EXP                       00284000
         LR    &T1,15                                                   00284100
.IWM4MRLT_ENDRC_EXP   ANOP  ,                                           00284200
.*******************************************************************    00284300
.***        REASON CODE PROCESSING                                      00284400
.*******************************************************************    00284500
         AIF   (N'&RSNCODE LE 0).IWM4MRLT_ENDRSN_EXP                    00284600
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWM4MRLT_RSN_REG               00284700
         AIF   ('&XRSNCODE' EQ 'GPR0').IWM4MRLT_ENDRSN_EXP              00284800
         AIF   ('&XRSNCODE' EQ 'GPR00').IWM4MRLT_ENDRSN_EXP             00284900
         AIF   ('&XRSNCODE' EQ 'REG0').IWM4MRLT_ENDRSN_EXP              00285000
         AIF   ('&XRSNCODE' EQ 'REG00').IWM4MRLT_ENDRSN_EXP             00285100
         AIF   ('&XRSNCODE' EQ 'R0').IWM4MRLT_ENDRSN_EXP                00285200
         AIF   ('&XRSNCODE' EQ '0').IWM4MRLT_ENDRSN_EXP                 00285300
         AIF   ('&XRSNCODE' EQ '00').IWM4MRLT_ENDRSN_EXP                00285400
         ST    0,&XRSNCODE                                              00285500
         AGO   .IWM4MRLT_ENDRSN_EXP                                     00285600
.*                                                                      00285700
.IWM4MRLT_RSN_REG     ANOP  ,                                           00285800
&T1      SETC '&XRSNCODE'(2,K'&XRSNCODE-2)                              00285900
         AIF  ('&ZCGPR' EQ 'GPR0').IWM4MRLT_ENDRSN_EXP                  00286000
         AIF  ('&ZCGPR' EQ 'GPR00').IWM4MRLT_ENDRSN_EXP                 00286100
         AIF  ('&ZCGPR' EQ 'REG0').IWM4MRLT_ENDRSN_EXP                  00286200
         AIF  ('&ZCGPR' EQ 'REG00').IWM4MRLT_ENDRSN_EXP                 00286300
         AIF  ('&ZCGPR' EQ 'R0').IWM4MRLT_ENDRSN_EXP                    00286400
         AIF  ('&ZCGPR' EQ '0').IWM4MRLT_ENDRSN_EXP                     00286500
         AIF  ('&ZCGPR' EQ '00').IWM4MRLT_ENDRSN_EXP                    00286600
         LR   &T1,0                                                     00286700
.IWM4MRLT_ENDRSN_EXP  ANOP  ,                                           00286800
         AIF   ('&SYSAM64' EQ 'YES').Mrlt_A31_Switch1                   00286900
         SAM31                                                          00287000
.Mrlt_A31_Switch1    ANOP                                               00287100
.*******************************************************************    00287200
&ZIWM4MRLT            SETC  'YES'          SET IWM4MRLT USED            00287300
         POP   PRINT                                                    00287400
*                                            IWM4MRLT END               00287500
         SPACE 1                                                        00287600
         MEXIT                                                          00287700
.NOCODENEEDED ANOP                                                      00287800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00287900
.********************************************************************   00288000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00288100
.********************************************************************   00288200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00288300
                      LCLA  &ZOPN1         INVOCATION INDEX             00288400
                      LCLC  &ZOPL(4095)    LABEL                        00288500
                      LCLC  &ZOPO(4095)    OPERATION                    00288600
                      LCLC  &ZOPV(4095)    VALUE                        00288700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00288800
.*                                                                      00288900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00289000
.******************************************************************     00289100
.***AL.L10 IWM4MRLT FMT=LIST MF=S!L PARAMETERS                          00289200
.******************************************************************     00289300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00289400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00289500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00289600
&XMFATTR              SETC  '0D'                                        00289700
.*                                                                      00289800
&ZOPN                 SETA  &ZOPN+1                                     00289900
&ZOPL(&ZOPN)          SETC  ' '                                         00290000
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00290100
&ZOPV(&ZOPN)          SETC  '4,8'                                       00290200
&ZOPN                 SETA  &ZOPN+1                                     00290300
&ZOPL(&ZOPN)          SETC  ' '                                         00290400
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00290500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00290600
&ZOPD(&ZOPN)          SETC  '++ IWM4MRLT ARG PARMS'                     00290700
.*                                                                      00290800
&ZOPN                 SETA  &ZOPN+1                                     00290900
&ZOPL(&ZOPN)          SETC  ' '                                         00291000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00291100
&ZOPV(&ZOPN)          SETC  '1'                                         00291200
&ZOPD(&ZOPN)          SETC  ' '                                         00291300
.*                                                                      00291400
.ZLMFSL2              ANOP  ,                                           00291500
.*-------------------------------------------------------------------   00291600
.***AM.L00  IWM4MRLT FMT=LIST name                                      00291700
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00291800
&ZOPN                 SETA &ZOPN+1                                      00291900
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00292000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00292100
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00292200
&ZOPD(&ZOPN)          SETC '++ IWM4MRLT NAME'                           00292300
.ZLMFSL2M             ANOP  ,                                           00292400
.*-------------------------------------------------------------------   00292500
.***AM.L01  IWM4MRLT FMT=LIST PARAMETERS                                00292600
&ZOPN                 SETA &ZOPN+1                                      00292700
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00292800
&ZOPO(&ZOPN)          SETC 'DS'                                         00292900
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00293000
&ZOPD(&ZOPN)          SETC '++ IWM4MRLT PARM LIST'                      00293100
.*-------------------------------------------------------------------   00293200
.***AM.L02 XVERSION XL1                                                 00293300
&ZOPN                 SETA &ZOPN+1                                      00293400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00293500
&ZOPO(&ZOPN)          SETC 'DS'                                         00293600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00293700
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00293800
.*-------------------------------------------------------------------   00293900
.***AM.L03 XRELATE_OPTIONS BL.8                                         00294000
&ZOPN                 SETA &ZOPN+1                                      00294100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRELATE_OPTIONS'                  00294200
&ZOPO(&ZOPN)          SETC 'DS'                                         00294300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00294400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00294500
.*                                                                      00294600
&ZOPN                 SETA  &ZOPN+1                                     00294700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDISPTYPE_TCB'                   00294800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00294900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00295000
&ZOPD(&ZOPN)          SETC  '++ XDISPTYPE.'                             00295100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TCB'                          00295200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00295300
.*                                                                      00295400
&ZOPN                 SETA  &ZOPN+1                                     00295500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDISPTYPE_SRB'                   00295600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00295700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00295800
&ZOPD(&ZOPN)          SETC  '++ XDISPTYPE.'                             00295900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SRB'                          00296000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00296100
.*                                                                      00296200
&ZOPN                 SETA  &ZOPN+1                                     00296300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSAMEDU_YES'                     00296400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00296500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00296600
&ZOPD(&ZOPN)          SETC  '++ XSAMEDU.'                               00296700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00296800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00296900
.*                                                                      00297000
&ZOPN                 SETA  &ZOPN+1                                     00297100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARENTP_FINDACTIVE'             00297200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00297300
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00297400
&ZOPD(&ZOPN)          SETC  '++ XPARENTP.'                              00297500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FINDACTIVE'                   00297600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00297700
.*                                                                      00297800
&ZOPN                 SETA  &ZOPN+1                                     00297900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IWM4MRLT'                        00298000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00298100
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00298200
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00298300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IWM4MRLT'                     00298400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00298500
.*-------------------------------------------------------------------   00298600
.***AM.L09  XPLISTLEN XL2                                               00298700
&ZOPN                 SETA &ZOPN+1                                      00298800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00298900
&ZOPO(&ZOPN)          SETC 'DS'                                         00299000
&ZOPV(&ZOPN)          SETC 'XL2'                                        00299100
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00299200
.*-------------------------------------------------------------------   00299300
.***AM.L09  XOWNER_DATA BL.32                                           00299400
&ZOPN                 SETA &ZOPN+1                                      00299500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNER_DATA'                      00299600
&ZOPO(&ZOPN)          SETC 'DS'                                         00299700
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00299800
&ZOPD(&ZOPN)          SETC '++ &ZXOWNER_DATA '                          00299900
.*-------------------------------------------------------------------   00300000
.***AM.L09  XOWNER_TOKEN BL.32                                          00300100
&ZOPN                 SETA &ZOPN+1                                      00300200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNER_TOKEN'                     00300300
&ZOPO(&ZOPN)          SETC 'DS'                                         00300400
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00300500
&ZOPD(&ZOPN)          SETC '++ &ZXOWNER_TOKEN '                         00300600
.*-------------------------------------------------------------------   00300700
.***AM.L09  XRSV000C CL4                                                00300800
&ZOPN                 SETA &ZOPN+1                                      00300900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV000C'                         00301000
&ZOPO(&ZOPN)          SETC 'DS'                                         00301100
&ZOPV(&ZOPN)          SETC 'CL4'                                        00301200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00301300
.*-------------------------------------------------------------------   00301400
.***AM.L09  XRSV0010 CL4                                                00301500
&ZOPN                 SETA &ZOPN+1                                      00301600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0010'                         00301700
&ZOPO(&ZOPN)          SETC 'DS'                                         00301800
&ZOPV(&ZOPN)          SETC 'CL4'                                        00301900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00302000
.*-------------------------------------------------------------------   00302100
.***AM.L09  XMONTKN BL.32                                               00302200
&ZOPN                 SETA &ZOPN+1                                      00302300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN'                          00302400
&ZOPO(&ZOPN)          SETC 'DS'                                         00302500
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00302600
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN '                              00302700
.*-------------------------------------------------------------------   00302800
.***AM.L09 ADDR3164 XTCB AD                                             00302900
&ZOPN                 SETA &ZOPN+1                                      00303000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTCB_ADDR3164'                    00303100
&ZOPO(&ZOPN)          SETC 'DS'                                         00303200
&ZOPV(&ZOPN)          SETC 'AD'                                         00303300
&ZOPD(&ZOPN)          SETC '++ &ZXTCB ADDR3164'                         00303400
.*-------------------------------------------------------------------   00303500
.***AM.L09 ADDR3164 XPARENTTCB AD                                       00303600
&ZOPN                 SETA &ZOPN+1                                      00303700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARENTTCB_ADDR3164'              00303800
&ZOPO(&ZOPN)          SETC 'DS'                                         00303900
&ZOPV(&ZOPN)          SETC 'AD'                                         00304000
&ZOPD(&ZOPN)          SETC '++ &ZXPARENTTCB ADDR3164'                   00304100
.*-------------------------------------------------------------------   00304200
.***AM.L09  XMONTKN64 BL.64                                             00304300
&ZOPN                 SETA &ZOPN+1                                      00304400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN64'                        00304500
&ZOPO(&ZOPN)          SETC 'DS'                                         00304600
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00304700
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN64 '                            00304800
.*-------------------------------------------------------------------   00304900
.***AM.L10 END OF IWM4MRLT LIST PARAMETERS                              00305000
&ZOPN                 SETA &ZOPN+1                                      00305100
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00305200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00305300
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00305400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00305500
.*                                                                      00305600
&ZOPN                 SETA &ZOPN+1                                      00305700
&ZOPL(&ZOPN)          SETC ' '                                          00305800
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00305900
&ZOPV(&ZOPN)          SETC '1'                                          00306000
&ZOPD(&ZOPN)          SETC ' '                                          00306100
.*-------------------------------------------------------------------   00306200
.***AL.L12 IWM4MRLT FMT=LIST MF=S!L PARAMETERS                          00306300
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00306400
.*                                                                      00306500
&ZOPN                 SETA  &ZOPN+1                                     00306600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00306700
&ZOPO(&ZOPN)          SETC  'DC'                                        00306800
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00306900
&ZOPD(&ZOPN)          SETC  '++ IWM4MRLT ARG PARMS'                     00307000
.*                                                                      00307100
.ZLMFSLX              ANOP  ,                                           00307200
.*-------------------------------------------------------------------   00307300
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00307400
&ZPLLEN               SETA 48                                           00307500
.*                                                                      00307600
.******************************************************************     00307700
.***AI.L01 IWM4MRLT FMT=LIST FILL IN PARAMETER AREA                     00307800
.******************************************************************     00307900
                      ACTR  10000                                       00308000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00308100
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00308200
&ZCVAL                SETC  'LAE'          XAX MODE                     00308300
.ZIMFXA               ANOP ,                                            00308400
.*                                                                      00308500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00308600
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00308700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00308800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00308900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00309000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00309100
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00309200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00309300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00309400
&ZOPN                 SETA  &ZOPN+1                                     00309500
&ZOPL(&ZOPN)          SETC  ' '                                         00309600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00309700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00309800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00309900
                      AGO   .ZIMFNX                                     00310000
.*                                                                      00310100
.ZIMFN2               ANOP ,                                            00310200
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00310300
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00310400
&ZOPN                 SETA  &ZOPN+1                                     00310500
&ZOPL(&ZOPN)          SETC  ' '                                         00310600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00310700
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00310800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00310900
                      AGO   .ZIMFNX                                     00311000
.ZIMFNX1              ANOP ,                                            00311100
&ZOPN                 SETA  &ZOPN+1                                     00311200
&ZOPL(&ZOPN)          SETC  ' '                                         00311300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00311400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00311500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00311600
.ZIMFNX               ANOP ,                                            00311700
.********************************************************************   00311800
.***AI.L02 IWM4MRLT FMT=LIST INITIALIZE PARAMETER AREA                  00311900
.********************************************************************   00312000
.***AI.L03 MF=(SLE)                                                     00312100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00312200
.*                                                                      00312300
&ZOPN                 SETA  &ZOPN+1                                     00312400
&ZOPL(&ZOPN)          SETC  ' '                                         00312500
&ZOPO(&ZOPN)          SETC  'XC'                                        00312600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00312700
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00312800
.ZIMFLX               ANOP  ,                                           00312900
.*-------------------------------------------------------------------   00313000
.***AI.L05 XRELATE_OPTIONS BL1                                          00313100
&ZW                   SETC  ''                                          00313200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00313300
.*-------------------------------------------------------------------   00313400
.***AI.L08 XRELATE_OPTIONS "TCB"                                        00313500
.***      BL1'1XXXXXXX'                                                 00313600
         AIF   ('&XDISPTYPE' NE 'TCB').ZI3A                             00313700
&ZW                   SETC  '&ZW.1'                                     00313800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00313900
                      AGO   .ZI3C                                       00314000
.*                                                                      00314100
.ZI3A                 ANOP  ,                                           00314200
&ZW                   SETC  '&ZW.0'                                     00314300
.ZI3C                 ANOP  ,                                           00314400
.*-------------------------------------------------------------------   00314500
.***AI.L08 XRELATE_OPTIONS "SRB"                                        00314600
.***      BL1'X1XXXXXX'                                                 00314700
         AIF   ('&XDISPTYPE' NE 'SRB').ZI4A                             00314800
&ZW                   SETC  '&ZW.1'                                     00314900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00315000
                      AGO   .ZI4C                                       00315100
.*                                                                      00315200
.ZI4A                 ANOP  ,                                           00315300
&ZW                   SETC  '&ZW.0'                                     00315400
.ZI4C                 ANOP  ,                                           00315500
.*-------------------------------------------------------------------   00315600
.***AI.L08 XRELATE_OPTIONS "YES"                                        00315700
.***      BL1'XX1XXXXX'                                                 00315800
         AIF   ('&XSAMEDU' NE 'YES').ZI5A                               00315900
&ZW                   SETC  '&ZW.1'                                     00316000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00316100
                      AGO   .ZI5C                                       00316200
.*                                                                      00316300
.ZI5A                 ANOP  ,                                           00316400
&ZW                   SETC  '&ZW.0'                                     00316500
.ZI5C                 ANOP  ,                                           00316600
.*-------------------------------------------------------------------   00316700
.***AI.L08 XRELATE_OPTIONS "FINDACTIVE"                                 00316800
.***      BL1'XXX1XXXX'                                                 00316900
         AIF   ('&XPARENTP' NE 'FINDACTIVE').ZI6A                       00317000
&ZW                   SETC  '&ZW.1'                                     00317100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00317200
                      AGO   .ZI6C                                       00317300
.*                                                                      00317400
.ZI6A                 ANOP  ,                                           00317500
&ZW                   SETC  '&ZW.0'                                     00317600
.ZI6C                 ANOP  ,                                           00317700
.*-------------------------------------------------------------------   00317800
.***AI.L08 XRELATE_OPTIONS "IWM4MRLT"                                   00317900
.***      BL1'XXXXXXX1'                                                 00318000
&ZW                   SETC  '&ZW.0001'                                  00318100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00318200
.*-------------------------------------------------------------------   00318300
.***AI.L11 XRELATE_OPTIONS BL1                                          00318400
                      AIF   ('&ZCLNG' NE 'YES').ZI7E  ALL ZERO BITS     00318500
&ZOPN                 SETA  &ZOPN+1                                     00318600
&ZOPL(&ZOPN)          SETC  ' '                                         00318700
&ZOPO(&ZOPN)          SETC  'OI'                                        00318800
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00318900
&ZOPD(&ZOPN)          SETC  '++ 82 BL1'                                 00319000
.ZI7E                 ANOP  ,                                           00319100
.*-------------------------------------------------------------------   00319200
.***AI.L04 XPLISTLEN XL2                                                00319300
&ZOPN                 SETA  &ZOPN+1                                     00319400
&ZOPL(&ZOPN)          SETC  ' '                                         00319500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00319600
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00319700
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00319800
.*-------------------------------------------------------------------   00319900
.***AI.L18  XOWNER_DATA XL4                                             00320000
         AIF   ('&XOWNER_DATA' NE 'NO_OWNER_DATA').ZI9                  00320100
&ZXOWNER_DATA         SETC  ''             RESET INPUT/OUTPUT           00320200
.ZI9                  ANOP  ,                                           00320300
.*-------------------------------------------------------------------   00320400
.***AI.L25  XOWNER_DATA XL4                                             00320500
                      AIF   ('&ZXOWNER_DATA' EQ '').ZI9E                00320600
                      AIF   ('&ZXOWNER_DATA' EQ 'OUTPUT').ZI9E          00320700
&ZCGPR                SETC  '&XOWNER_DATA'                              00320800
.*                                                                      00320900
                      AIF   ('&XOWNER_DATA'(1,1) NE '(').ZI9B           00321000
&ZCGPR   SETC  '0('.'&XOWNER_DATA'(2,K'&XOWNER_DATA-2).')'              00321100
                      AGO   .ZI9D                                       00321200
.ZI9B                 ANOP  ,                                           00321300
.*                                                                      00321400
&ZC                   SETC  '&XOWNER_DATA'(1,1)                         00321500
                      AIF   (T'&ZC NE 'N').ZI9D                         00321600
&ZC                   SETC  '&XOWNER_DATA'                              00321700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00321800
&ZCGPR                SETC  '=BL4''&XOWNER_DATA'''                      00321900
.*                                                                      00322000
.ZI9D                 ANOP  ,                                           00322100
.*                                                                      00322200
&ZOPN                 SETA  &ZOPN+1                                     00322300
&ZOPL(&ZOPN)          SETC  ' '                                         00322400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00322500
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00322600
&ZOPD(&ZOPN)          SETC  '++ &ZXOWNER_DATA XOWNER_DATA'              00322700
.*                                                                      00322800
.ZI9E                 ANOP  ,                                           00322900
.*-------------------------------------------------------------------   00323000
.***AI.L18  XOWNER_TOKEN XL4                                            00323100
         AIF   ('&XOWNER_TOKEN' NE 'NO_OWNER_TOKEN').ZI10               00323200
&ZXOWNER_TOKEN        SETC  ''             RESET INPUT/OUTPUT           00323300
.ZI10                 ANOP  ,                                           00323400
.*-------------------------------------------------------------------   00323500
.***AI.L25  XOWNER_TOKEN XL4                                            00323600
                      AIF   ('&ZXOWNER_TOKEN' EQ '').ZI10E              00323700
                      AIF   ('&ZXOWNER_TOKEN' EQ 'OUTPUT').ZI10E        00323800
&ZCGPR                SETC  '&XOWNER_TOKEN'                             00323900
.*                                                                      00324000
                      AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZI10B         00324100
&ZCGPR   SETC  '0('.'&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2).')'            00324200
                      AGO   .ZI10D                                      00324300
.ZI10B                ANOP  ,                                           00324400
.*                                                                      00324500
&ZC                   SETC  '&XOWNER_TOKEN'(1,1)                        00324600
                      AIF   (T'&ZC NE 'N').ZI10D                        00324700
&ZC                   SETC  '&XOWNER_TOKEN'                             00324800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00324900
&ZCGPR                SETC  '=BL4''&XOWNER_TOKEN'''                     00325000
.*                                                                      00325100
.ZI10D                ANOP  ,                                           00325200
.*                                                                      00325300
&ZOPN                 SETA  &ZOPN+1                                     00325400
&ZOPL(&ZOPN)          SETC  ' '                                         00325500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00325600
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00325700
&ZOPD(&ZOPN)          SETC  '++ &ZXOWNER_TOKEN XOWNER_TOKEN'            00325800
.*                                                                      00325900
.ZI10E                ANOP  ,                                           00326000
.*-------------------------------------------------------------------   00326100
.***AI.L25  XMONTKN XL4                                                 00326200
                      AIF   ('&ZXMONTKN' EQ '').ZI13E                   00326300
                      AIF   ('&ZXMONTKN' EQ 'OUTPUT').ZI13E             00326400
&ZCGPR                SETC  '&XMONTKN'                                  00326500
.*                                                                      00326600
                      AIF   ('&XMONTKN'(1,1) NE '(').ZI13B              00326700
&ZCGPR   SETC  '0('.'&XMONTKN'(2,K'&XMONTKN-2).')'                      00326800
                      AGO   .ZI13D                                      00326900
.ZI13B                ANOP  ,                                           00327000
.*                                                                      00327100
&ZC                   SETC  '&XMONTKN'(1,1)                             00327200
                      AIF   (T'&ZC NE 'N').ZI13D                        00327300
&ZC                   SETC  '&XMONTKN'                                  00327400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI13D               00327500
&ZCGPR                SETC  '=BL4''&XMONTKN'''                          00327600
.*                                                                      00327700
.ZI13D                ANOP  ,                                           00327800
.*                                                                      00327900
&ZOPN                 SETA  &ZOPN+1                                     00328000
&ZOPL(&ZOPN)          SETC  ' '                                         00328100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00328200
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00328300
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN XMONTKN'                      00328400
.*                                                                      00328500
.ZI13E                ANOP  ,                                           00328600
.*-------------------------------------------------------------------   00328700
.***AI.L19 ADDR3164 XTCB AD                                             00328800
                      AIF   ('&ZXTCB' EQ '').ZI14H                      00328900
&ZCLNG                SETC  '&XTCB'                                     00329000
&ZCGPR                SETC  '14'                                        00329100
         AIF   ('&XTCB'(1,1) EQ '(').ZI14F  IN GPR                      00329200
.*                                                                      00329300
&ZOPN                 SETA  &ZOPN+1                                     00329400
&ZOPL(&ZOPN)          SETC  ' '                                         00329500
&ZOPO(&ZOPN)          SETC  'LA'                                        00329600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00329700
&ZOPD(&ZOPN)          SETC  '++ &ZXTCB XTCB'                            00329800
.*                                                                      00329900
                      AGO   .ZI14G                                      00330000
.*                                                                      00330100
.ZI14F                ANOP  ,                                           00330200
&ZCGPR   SETC  '&XTCB'(2,K'&XTCB-2)                                     00330300
.*                                                                      00330400
.ZI14G                ANOP  ,                                           00330500
                      AIF   ('&SYSAM64' EQ 'YES').ZI14H1A               00330600
.*                                                                      00330700
&ZOPN                 SETA  &ZOPN+1                                     00330800
&ZOPL(&ZOPN)          SETC  ' '                                         00330900
&ZOPO(&ZOPN)          SETC  'ST'                                        00331000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+24(,1)'                           00331100
&ZOPD(&ZOPN)          SETC  '++ &ZXTCB XTCB'                            00331200
.*                                                                      00331300
                      AGO   .ZI14H                                      00331400
.ZI14H1A              ANOP  ,                                           00331500
.*                                                                      00331600
&ZOPN                 SETA  &ZOPN+1                                     00331700
&ZOPL(&ZOPN)          SETC  ' '                                         00331800
&ZOPO(&ZOPN)          SETC  'STG'                                       00331900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00332000
&ZOPD(&ZOPN)          SETC  '++ &ZXTCB XTCB'                            00332100
.*                                                                      00332200
.ZI14H                ANOP  ,                                           00332300
.*-------------------------------------------------------------------   00332400
.***AI.L19 ADDR3164 XPARENTTCB AD                                       00332500
                      AIF   ('&ZXPARENTTCB' EQ '').ZI15H                00332600
&ZCLNG                SETC  '&XPARENTTCB'                               00332700
&ZCGPR                SETC  '14'                                        00332800
         AIF   ('&XPARENTTCB'(1,1) EQ '(').ZI15F  IN GPR                00332900
.*                                                                      00333000
&ZOPN                 SETA  &ZOPN+1                                     00333100
&ZOPL(&ZOPN)          SETC  ' '                                         00333200
&ZOPO(&ZOPN)          SETC  'LA'                                        00333300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00333400
&ZOPD(&ZOPN)          SETC  '++ &ZXPARENTTCB XPARENTTCB'                00333500
.*                                                                      00333600
                      AGO   .ZI15G                                      00333700
.*                                                                      00333800
.ZI15F                ANOP  ,                                           00333900
&ZCGPR   SETC  '&XPARENTTCB'(2,K'&XPARENTTCB-2)                         00334000
.*                                                                      00334100
.ZI15G                ANOP  ,                                           00334200
                      AIF   ('&SYSAM64' EQ 'YES').ZI15H1A               00334300
.*                                                                      00334400
&ZOPN                 SETA  &ZOPN+1                                     00334500
&ZOPL(&ZOPN)          SETC  ' '                                         00334600
&ZOPO(&ZOPN)          SETC  'ST'                                        00334700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+32(,1)'                           00334800
&ZOPD(&ZOPN)          SETC  '++ &ZXPARENTTCB XPARENTTCB'                00334900
.*                                                                      00335000
                      AGO   .ZI15H                                      00335100
.ZI15H1A              ANOP  ,                                           00335200
.*                                                                      00335300
&ZOPN                 SETA  &ZOPN+1                                     00335400
&ZOPL(&ZOPN)          SETC  ' '                                         00335500
&ZOPO(&ZOPN)          SETC  'STG'                                       00335600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00335700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARENTTCB XPARENTTCB'                00335800
.*                                                                      00335900
.ZI15H                ANOP  ,                                           00336000
.*-------------------------------------------------------------------   00336100
.***AI.L25  XMONTKN64 XL8                                               00336200
                      AIF   ('&ZXMONTKN64' EQ '').ZI16E                 00336300
                      AIF   ('&ZXMONTKN64' EQ 'OUTPUT').ZI16E           00336400
&ZCGPR                SETC  '&XMONTKN64'                                00336500
.*                                                                      00336600
                      AIF   ('&XMONTKN64'(1,1) NE '(').ZI16B            00336700
&ZCGPR   SETC  '0('.'&XMONTKN64'(2,K'&XMONTKN64-2).')'                  00336800
                      AGO   .ZI16D                                      00336900
.ZI16B                ANOP  ,                                           00337000
.*                                                                      00337100
&ZC                   SETC  '&XMONTKN64'(1,1)                           00337200
                      AIF   (T'&ZC NE 'N').ZI16D                        00337300
&ZC                   SETC  '&XMONTKN64'                                00337400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI16D               00337500
&ZCGPR                SETC  '=BL8''&XMONTKN64'''                        00337600
.*                                                                      00337700
.ZI16D                ANOP  ,                                           00337800
.*                                                                      00337900
&ZOPN                 SETA  &ZOPN+1                                     00338000
&ZOPL(&ZOPN)          SETC  ' '                                         00338100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00338200
&ZOPV(&ZOPN)          SETC  '40(8,1),&ZCGPR'                            00338300
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN64 XMONTKN64'                  00338400
.*                                                                      00338500
.ZI16E                ANOP  ,                                           00338600
.*-------------------------------------------------------------------   00338700
&ZOPN1                SETA &ZOPN                                        00338800
.*******************************************************************    00338900
.***  PROCESS IWM4MRLT OUTPUT PARAMETERS                                00339000
.*******************************************************************    00339100
                      ACTR  10000                                       00339200
.*******************************************************************    00339300
.***AO.X02  RETURN CODE PROCESSING                                      00339400
.*******************************************************************    00339500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00339600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00339700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00339800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00339900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00340000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00340100
&ZOPN                 SETA  &ZOPN+1                                     00340200
&ZOPL(&ZOPN)          SETC  ' '                                         00340300
&ZOPO(&ZOPN)          SETC  'ST'                                        00340400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00340500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00340600
                      AGO   .ZMRETX                                     00340700
.*                                                                      00340800
.ZMRET2               ANOP  ,                                           00340900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00341000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00341100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00341200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00341300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00341400
&ZOPN                 SETA  &ZOPN+1                                     00341500
&ZOPL(&ZOPN)          SETC  ' '                                         00341600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00341700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00341800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00341900
.ZMRETX               ANOP  ,                                           00342000
.*******************************************************************    00342100
.***AO.X03  REASON CODE PROCESSING                                      00342200
.*******************************************************************    00342300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00342400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00342500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00342600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00342700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00342800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00342900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00343000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00343100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00343200
&ZOPN                 SETA  &ZOPN+1                                     00343300
&ZOPL(&ZOPN)          SETC  ' '                                         00343400
&ZOPO(&ZOPN)          SETC  'ST'                                        00343500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00343600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00343700
                      AGO   .ZMRSNX                                     00343800
.*                                                                      00343900
.ZMRSN2               ANOP  ,                                           00344000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00344100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00344200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00344300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00344400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00344500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00344600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00344700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00344800
&ZOPN                 SETA  &ZOPN+1                                     00344900
&ZOPL(&ZOPN)          SETC  ' '                                         00345000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00345100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00345200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00345300
.ZMRSNX               ANOP  ,                                           00345400
.*******************************************************************    00345500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00345600
.*******************************************************************    00345700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00345800
.*******************************************************************    00345900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00346000
.*******************************************************************    00346100
                      ACTR  10000                                       00346200
.*                                                                      00346300
                      LCLA  &ZLC           COLUMN POSITION              00346400
                      LCLA  &ZOPX          LIST TABLE INDEX             00346500
                      LCLC  &ZLL           LABEL                        00346600
                      LCLC  &ZLOP          OPERATION                    00346700
                      LCLC  &ZLV           VALUE                        00346800
                      LCLC  &ZLD           DESCRIPTION                  00346900
.*                                                                      00347000
&ZOPX                 SETA  1                                           00347100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00347200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00347300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00347400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00347500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00347600
                      AIF   (K'&ZLD LE 0).ZL5                           00347700
&ZLC                  SETA  35             COMMENT COLUMN               00347800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00347900
&ZLC                  SETA  33             COMMMENT COLUMN              00348000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00348100
&ZLV                  SETC  '&ZLV'.' '                                  00348200
                      AGO   .ZL3                                        00348300
.*                                                                      00348400
.ZL4                  ANOP  ,                                           00348500
&ZLV                  SETC  '&ZLV'.' '                                  00348600
.ZL5                  ANOP  ,                                           00348700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00348800
.*                                                                      00348900
&ZLL     &ZLOP &ZLV                                                     00349000
.*                                                                      00349100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00349200
                      AGO   .ZL2           CONTINUE LOOPING             00349300
.*                                                                      00349400
.ZLX                  ANOP  ,                                           00349500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00349600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00349700
         L     14,16(0,0)              GET CVT ADDRESS                  00349800
         L     14,772(14,0)            GET SFT ADDRESS                  00349900
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00350000
         LA    15,3                    GET EX FOR SERVICE ROUTINE       00350100
         OR    14,15                   GET PC NUMBER                    00350200
         PC    0(14)                                                    00350300
Rela&SYSNDX._End DS 0H                 END LABEL                        00350400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00350500
.ZLINKX               ANOP  ,                                           00350600
.*******************************************************************    00350700
.***AP.X01  FORMAT GENERATED CODE                                       00350800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00350900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00351000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00351100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00351200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00351300
                      AIF   (K'&ZLD LE 0).ZL51                          00351400
&ZLC                  SETA  35             COMMENT COLUMN               00351500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00351600
&ZLC                  SETA  33             COMMENT COLUMN               00351700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00351800
&ZLV                  SETC  '&ZLV'.' '                                  00351900
                      AGO   .ZL31                                       00352000
.*                                                                      00352100
.ZL41                 ANOP  ,                                           00352200
&ZLV                  SETC  '&ZLV'.' '                                  00352300
.ZL51                 ANOP  ,                                           00352400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00352500
.*                                                                      00352600
&ZLL     &ZLOP &ZLV                                                     00352700
.*                                                                      00352800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00352900
                      AGO   .ZL21          CONTINUE LOOPING             00353000
.*                                                                      00353100
.ZLX1                 ANOP  ,                                           00353200
.*******************************************************************    00353300
.***AP.X02  END OF IWM4MRLT MACRO                                       00353400
&ZIWM4MRLT            SETC  'YES'          SET IWM4MRLT USED            00353500
         POP   PRINT                                                    00353600
*                                            IWM4MRLT-0                 00353700
         SPACE 1                                                        00353800
.ZLX2                 ANOP  ,                                           00353900
         MEND                                                           00354000
**********************************************************************/ 00354100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00354200
*%IWM4MRLT: MACRO KEYS(FUNCTION,OWNER_TOKEN,OWNER_DATA,DISPTYPE,TCB,    00354300
*                 SAMEDU,PARENTP,PARENTMONTKN,PARENTMONTKN64,           00354400
*                 PARENTENVTKN,PARENTENVTKN64,PARENTENV,PARENTTCB,      00354500
*                 MONTKN,MONTKN64,EWLM,RETCODE,RSNCODE,PLISTVER,MF);    00354600
*  ANS('?'!!MACLABEL!!' '!!'IWM4MRLP '!!MACLIST!!                       00354700
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00354800
*%END IWM4MRLT;                                                         00354900
