*                                                                       00001000
* %DCL ISGYCON_INCLUDED CHAR EXT;                                       00002000
* %DEACTIVATE ISGYCON_INCLUDED;                                         00003000
* %IF ISGYCON_INCLUDED = '' %THEN                                       00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 13023. CBGEN compile date 12258         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         ISGYCON &DSECT=YES,&LIST=YES,&TITLE=YES                        00009000
         GBLC  &ISGYCON_INCLUDED                                        00010000
         GBLC  &ZCBPRINT                                                00011000
&ISGYCON_INCLUDED SETC 'YES'                                            00012000
         AIF   ('&LIST' EQ 'NONE').P0                                   00013000
         AIF   ('&TITLE' EQ 'NO').P5                                    00014000
 TITLE   'ISGYCON  - Constants for users of GRS services             '  00015000
.P5      ANOP                                                           00016000
**/ ISGYCON_1:;                                                         00017000
*/* START OF SPECIFICATIONS ******************************************* 00018000
*                                                                       00019000
*01* PROPRIETARY STATEMENT =                                            00020000
*                                                                       00021000
*    Licensed Materials - Property of IBM                               00022000
*    5650-ZOS Copyright IBM Corp. 2001, 2013                            00023000
*                                                                       00024000
*01* STATUS = HBB7790                                                   00025000
*                                                                       00026000
*01* END OF PROPRIETARY STATEMENT                                       00027000
*                                                                       00028000
*01* EXTERNAL CLASSIFICATION: PI                                        00029000
*01* END OF EXTERNAL CLASSIFICATION:                                    00030000
*                                                                       00031000
*02* NOTE:  THIS IS A SET OF CONSTANTS NOT AN ACTUAL DATA AREA          00032000
*           DATA AREA INFORMATION IS NOT APPLICABLE.                    00033000
*                                                                       00034000
*01* DESCRIPTIVE NAME: Constants for users of GRS services              00035000
*                                                                       00036000
*02* ACRONYM:  N/A                                                      00037000
*                                                                       00038000
*01* MACRO NAME:   ISGYCON                                              00039000
*                                                                       00040000
*01* DSECT NAME:                                                        00041000
*      N/A                                                              00042000
*                                                                       00043000
*01* COMPONENT:  Global Resource Serialization (SCSDS)                  00044000
*                                                                       00045000
*01* EYE CATCHER: None                                                  00046000
*02*   OFFSET:    N/A                                                   00047000
*02*   LENGTH:    N/A                                                   00048000
*                                                                       00049000
*01* STORAGE ATTRIBUTES:                                                00050000
*02*   MAIN STORAGE: N/A                                                00051000
*                                                                       00052000
*01* SIZE:   0 bytes                                                    00053000
*                                                                       00054000
*                                                                       00055000
*01* CREATED BY: N/A                                                    00056000
*                                                                       00057000
*01* POINTED TO BY: N/A                                                 00058000
*                                                                       00059000
*01* SERIALIZATION:  None                                               00060000
*                                                                       00061000
*01* FUNCTION:  Provides a list of constants for users of GRS           00062000
*               services and exits.                                     00063000
*                                                                       00064000
*01* METHOD OF ACCESS:                                                  00065000
*                                                                       00066000
*   PL/X: %INCLUDE SYSLIB(ISGYCON)                                      00067000
*   ASM:   ISGYCON                                                      00068000
*                                                                       00069000
* DELETED-BY: N/A                                                       00070000
*                                                                       00071000
* DEPENDENCIES: N/A                                                     00072000
*                                                                       00073000
* NOTES: None                                                           00074000
*                                                                       00075000
* CHANGE-ACTIVITY:                                                      00076000
*   $L0=GRSWC    HBB7705 000419 PD2V:  GRS Wildcard                     00077000
*   $L1=PCENQ    HBB7705 010508 PDDV:  Exits                            00078000
*   $L2=PCENQ    HBB7705 010827 PDLG:  Exits                            00079000
*   $P1=PYM0237  HBB7706 011008 PDWL:  Add new Reason Codes for 4xx     00080000
*                                      ABENDS when QWA Global and Local 00081000
*                                      resource counts exceed 'FFFF'x   00082000
*   $L3=PCENQ    HBB7705 011212 PD2V:  MASID reason codes               00083000
*   $P2=PYV0363  HBB7707 020213 PDDV:  use EAX for GRS ALET             00084000
*   $P2=PYV0375  HBB7707 020405 PD2V:  Add 43x Bad Pel Prefix           00085000
*   $01=OW53321  HBB7707 020429 PDFX:  ABEND for ENQ/DEQ parameter list 00086000
*                                      not in primary                   00087000
*   $L4=64GRS    HBB7709 021125 PDFX:  ISGQUERY return codes            00088000
*   $L5=64GRS    HBB7709 030623 PDBC:  ENQ/DEQ return code updates      00089000
*   $P3=PJK0722  HBB7709 030623 PDFX:  Add ISGQUERYRsn_GRSNone          00090000
*   $P4=PJK0888  HBB7709 030915 PDFX:  ISGENQ reason code update        00091000
*      =PJK0906  HBB7709 030915 PDFX:  ISGENQ reason code update        00092000
*   $P5=PJK0902  HBB7709 030915 PDBC:  Add old ENQ ECB return codes     00093000
*   $P6=PJK1044  HBB7709 031021 PDFX:  Remove Synchres disabled RSN     00094000
*   $02=OA05229  HBB7708 031024 PDFX:  Add 73x reason for CSVDYNEX      00095000
*                                      failed                           00096000
*   $P7=PJK0875  HBB7709 031021 PDFX:  Remove unneeded ISGENQ RSN codes 00097000
*   $P8=PJK0745  HBB7709 031110 PDFX:  General doc changes              00098000
*   $P9=PJK1339  HBB7709 040310 PDFY:  Authorize ISGQUERY for MLS       00099000
*   $PA=ME01502  HBB7720 041105 PDFX:  Add ISGRsnCodeSmcInXmem          00100000
*   $L6=ENQAPI   HBB7730 050203 PDBC:  ISGADMIN return/reasons          00101000
*   $PB=ME03985  HBB7730 050721 PDBC:  Fix ISGADMIN rc C typo           00102000
*      =ME03930  HBB7730 050808 PDCJ:  Fix copyright                    00103000
*   $L7=GRSTOR2  HBB7730 050928 PDBC:  More ISGADMIN return/reasons,    00104000
*                                      Updated reasons with typos       00105000
*   $L8=GRSTOR2  HBB7740 060515 PDGA:  New reason code                  00106000
*   $L9=GRSTOR2  HBB7740 060524 PDBC:  New ISGADMIN reasons             00107000
*   $LA=GRSUDATA HBB7750 070122 PDFY:  New ISGENQ/ISGQUERY Reasons      00108000
*   $PC=ME12166  HBB7760 080701 PDBC:  New ISGENQ reason                00109000
*   $LB=GRSSTAT3 HBB7780 100216 PDFY:  New ISGQuery reasons             00110000
*   $LC=GRSCHNG  HBB7790 110223 PDFY:  New ISGEnq reasons               00111000
*   $PD=ME20098  HBB7790 110603 PDFY:  New SRB mode ENQ/DEQ reason      00112000
*                                                                       00113000
*END OF SPECIFICATIONS ***********************************************/ 00114000
*% /*                                                                   00115000
.P0      ANOP                                                           00116000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00117000
         AIF   ('&LIST' EQ 'YES').P2                                    00118000
.P1      ANOP                                                           00119000
         PUSH  PRINT                                                    00120000
         PRINT OFF                                                      00121000
.P2      ANOP                                                           00122000
*                                                                       00123000
*   Return Codes from ENQ/DEQ                                           00124000
*   ENQ RET=TEST Return Codes                                           00125000
*                                                                       00126000
*                                                                       00127000
ENQ_KTESTRCRESOURCEISAVAILABLE EQU 0                                    00128000
ENQ_KTESTRCRESOURCEISNOTAVAILABLE EQU 4                                 00129000
ENQ_KTESTRCPREVIOUSREQALREADYOWNS EQU 8                                 00130000
ENQ_KTESTRCPREVIOUSREQDOESNOTOWN EQU 20                                 00131000
ENQ_KTESTRCMATCHINGTASKOWNS EQU 32                                      00132000
*                                                                       00133000
*   ENQ RET=USE Return Codes                                            00134000
*                                                                       00135000
*                                                                       00136000
ENQ_KUSERCRESOURCEOWNED EQU 0                                           00137000
ENQ_KUSERCRESOURCENOTOWNED EQU 4                                        00138000
ENQ_KUSERCPREVIOUSREQALREADYOWNS EQU 8                                  00139000
ENQ_KUSERCPREVIOUSREQDOESNOTOWN EQU 20                                  00140000
ENQ_KUSERCENVIRONMENTALERROR EQU 24                                     00141000
*                                                                       00142000
*   ENQ RET=CHNG Return Codes                                           00143000
*                                                                       00144000
*                                                                       00145000
ENQ_KCHNGRCRESOURCECHANGED EQU 0                                        00146000
ENQ_KCHNGRCRESOURCENOTCHANGED EQU 4                                     00147000
ENQ_KCHNGRCRESOURCENOTREQED EQU 8                                       00148000
ENQ_KCHNGRCRESOURCENOTOWNED EQU 20                                      00149000
ENQ_KCHNGRCENVIRONMENTALERROR EQU 24                                    00150000
*                                                                       00151000
*   ENQ RET=HAVE ReturnCodes                                            00152000
*                                                                       00153000
*                                                                       00154000
ENQ_KHAVERCRESOURCEOWNED EQU 0                                          00155000
ENQ_KHAVERCPREVIOUSREQALREADYOWNS EQU 8                                 00156000
ENQ_KHAVERCPREVIOUSREQDOESNOTOWN EQU 20                                 00157000
ENQ_KHAVERCENVIRONMENTALERROR EQU 24                                    00158000
ENQ_KHAVERCMATCHINGTASKOWNS EQU 32                                      00159000
ENQ_KHAVERCCALLERCANNOTUSE EQU 40                                       00160000
ENQ_KHAVERCMATCHINGTASKVIOLATION EQU 68                                 00161000
*                                                                       00162000
*   ENQ RET=ECB ReturnCodes                                             00163000
*                                                                       00164000
*                                                                       00165000
ENQ_KECBRCRESOURCEOWNED EQU 0                                           00166000
ENQ_KECBRCWILLBEPOSTED EQU 4                                            00167000
ENQ_KECBRCPREVIOUSREQALREADYOWNS EQU 8                                  00168000
ENQ_KECBRCPREVIOUSREQDOESNOTOWN EQU 20                                  00169000
ENQ_KECBRCENVIRONMENTALERROR EQU 24                                     00170000
ENQ_KECBRCWAITTOOWNEXCLUSIVE EQU 36                                     00171000
*                                                                       00172000
*   DEQ ReturnCodes                                                     00173000
*                                                                       00174000
*                                                                       00175000
DEQ_KRCRESOURCERELEASED EQU 0                                           00176000
DEQ_KRCRESOURCEPREVIOUSREQDOESNOTOWN EQU 4                              00177000
DEQ_KRCRESOURCENOTOWNED EQU 8                                           00178000
*                                                                       00179000
*   Reason Codes -- GRS ABEND Reason Codes                              00180000
*   (Note that the reason codes are of the form "xxxxYYYY" where        00181000
*    "xxxx" is used to contain the module id of the failing module.     00182000
*    Module ids can be found in ISGYMT or ISGFID)                       00183000
*    Also see ISGCONST for internal reason codes.                       00184000
*                                                                       00185000
*                                                                       00186000
ISGRSNCODEMASK EQU X'0000FFFF' Used to mask off the high half word to  *00187000
                         remove the module id from the ABEND and       *00188000
                         reason codes                                   00189000
*                                                                       00190000
*    3xx Abend Reason codes                                             00191000
*                                                                       00192000
*                                                                       00193000
ISGRSNCODEUNAUTHNQDQOFAUTHRESOURCE EQU X'00000001'                      00194000
*                                                                       00195000
*                                      An unauthorized requester        00196000
*                                      attempted to ENQ or DEQ an       00197000
*                                      authorized resource              00198000
*                                                                       00199000
ISGRSNCODEUNAUTHNQDQOFAUTHRESOURCEBYEXIT EQU X'00000002' An ISGNQXIT   *00200000
                         installation exit specified an authorized     *00201000
                         resource name for an unauthorized request      00202000
ISGRSNCODEUCBNOTALLOCATED EQU X'00000003' An unauthorized requester    *00203000
                         attempted to RESERVE a device that is not     *00204000
                         allocated to the requesting task               00205000
ISGRSNCODEUCBNOTALLOCATEDBYEXIT EQU X'00000004'                         00206000
*                                                                       00207000
*                                      An ISGNQXIT installation exit    00208000
*                                      specified a UCB for a device     00209000
*                                      that is not allocated to the     00210000
*                                      requesting, unauthorized task    00211000
*                                                                       00212000
ISGRSNCODEUNAUTHMASIDREQ EQU X'00000005' An unauthorized requester     *00213000
                         attempted a MASID request                      00214000
ISGRSNCODEUNAUTHREQWITHTCBORPELSTPMC EQU X'00000006' An unauthorized   *00215000
                         requester specified TCB or Step Must Complete  00216000
ISGRSNCODEUNAUTHGENERICREQUEST EQU X'00000007' An unauthorized (DEQ)   *00217000
                         requester attempted to issue a generic        *00218000
                         request                                        00219000
ISGRSNCODEUNAUTHECBREQUEST EQU X'00000008' An unauthorized (ENQ)       *00220000
                         requester attempted to issue an ECB request    00221000
*                                                                       00222000
*   4xx Abend Reason codes                                              00223000
*                                                                       00224000
*                                                                       00225000
ISGRSNCODEPARMLISTALTEREDWHILEPROCESSING EQU X'00000001' The input     *00226000
                         parameter list was altered during ENQ/DEQ     *00227000
                         processing                                     00228000
ISGRSNCODERNLNOANDUCBSPECIFIED EQU X'00000002' The RESERVE request     *00229000
                         specified RNL=NO                               00230000
ISGRSNCODEINVALIDUCB EQU X'00000003' The storage specified by the      *00231000
                         input UCB address does not map to a valid UCB  00232000
ISGRSNCODEINVALIDUCBBYEXIT EQU X'00000004' The storage specified by    *00233000
                         the UCB address specified by an ISGNQXIT exit *00234000
                         routine does not map to a valid UCB            00235000
ISGRSNCODEBADUSERPEL EQU X'00000005' The storage passed to ENQ/DEQ     *00236000
                         processing could not be accessed in the       *00237000
                         caller's key                                   00238000
ISGRSNCODEBADQNAME EQU X'00000006' The storage containing the QNAME    *00239000
                         could not be accessed in the caller's key      00240000
ISGRSNCODEBADRNAME EQU X'00000007' The storage containing the RNAME    *00241000
                         could not be accessed in the caller's key      00242000
ISGRSNCODEBADUCBPTR EQU X'00000008' The storage containing the pointer *00243000
                         to the UCB address could not be accessed in   *00244000
                         the caller's key                               00245000
ISGRSNCODEBADUCBADDRESS EQU X'00000009' The storage containing the UCB *00246000
                         address could not be accessed in the caller's *00247000
                         key                                            00248000
ISGRSNCODELOCALRESOURCECOUNTOVERRUN EQU X'0000000A' The local resource *00249000
                         count exceeded 'FFFF'x resources               00250000
ISGRSNCODEGLOBALRESOURCECOUNTOVERRUN EQU X'0000000B' The global        *00251000
                         resource count exceeded 'FFFF'x resources      00252000
ISGRSNCODEINVALIDFORMATWORD EQU X'0000000C' The format word value was  *00253000
                         invalid                                        00254000
ISGRSNCODEBADTCBSTORAGE EQU X'0000000D' The storage specified by the   *00255000
                         input TCB is invalid                           00256000
ISGRSNCODENOTATCB EQU X'0000000E' The storage specified by the input   *00257000
                         TCB does not map to a valid TCB                00258000
ISGRSNCODEMASIDREQSPECIFIEDTCBORPELSTPMC EQU X'0000000F' A MASID       *00259000
                         request incorrectly specified TCB or PelStpMC  00260000
ISGRSNCODEINVALIDMASIDRNAMELENGTH EQU X'00000010'                       00261000
*                                                                       00262000
*                                      A MASID request has an rname     00263000
*                                      with a bad length                00264000
*                                                                       00265000
ISGRSNCODEMASIDREQINVALIDRET EQU X'00000011' A MASID request specified *00266000
                         invalid RET= value                             00267000
ISGRSNCODEMASIDREQWITHNOTCB EQU X'00000012' A MASID request has no TCB *00268000
                         associated with it                             00269000
ISGRSNCODEMASIDREQSUBTASKOFTARGET EQU X'00000013'                       00270000
*                                                                       00271000
*                                      Issuing tasks TCB is a subtask   00272000
*                                      of the target TCB, illegal       00273000
*                                                                       00274000
*                                                                       00275000
ISGRSNCODEREQSETOBSOLETEFLAG EQU X'00000014' Request tried to set an   *00276000
                         obsolete bit in the Pel                        00277000
ISGRSNCODETCBSPECIFIEDANDPELSTPMC EQU X'00000015'                       00278000
*                                                                       00279000
*                                      Request illegally specified      00280000
*                                      TCB with PelStpMC                00281000
*                                                                       00282000
ISGRSNCODEDEQREQSPECIFIEDPELSAVE EQU X'00000016'                        00283000
*                                                                       00284000
*                                      Deq request illegally            00285000
*                                      specified PelSave                00286000
*                                                                       00287000
ISGRSNCODEINVALIDRETSPECIFIED EQU X'00000017' Request specified        *00288000
                         invalid RET= value                             00289000
ISGRSNCODEGENERICREQWITHINVALIDRET EQU X'00000018'                      00290000
*                                                                       00291000
*                                      Generic request specified        00292000
*                                      invalid RET= value               00293000
*                                                                       00294000
ISGRSNCODEENQREQSPECIFIEDGENERIC EQU X'00000019'                        00295000
*                                                                       00296000
*                                      Enq request illegally            00297000
*                                      specified PelGen2                00298000
*                                                                       00299000
ISGRSNCODEDIRENQNOMATCHINGTCB EQU X'0000001A' A directed enq request   *00300000
                         was issued with no matching TCB in the        *00301000
                         requestor's address space                      00302000
ISGRSNCODEDIRENQANDUCBSPECIFIED EQU X'0000001B'                         00303000
*                                                                       00304000
*                                      Directed enq request illegally   00305000
*                                      specified UCB                    00306000
*                                                                       00307000
ISGRSNCODEDIRENQNOECBANDINVALIDRET EQU X'0000001C'                      00308000
*                                                                       00309000
*                                      Directed enq request illegally   00310000
*                                      specified no ECB with an         00311000
*                                      invalid RET= value               00312000
*                                                                       00313000
ISGRSNCODEOECBREQWITHBADRET EQU X'0000001D' This label has a typo but  *00314000
                         is kept for compatibility                      00315000
ISGRSNCODEECBREQWITHBADRET EQU X'0000001D' An ECB request but RET does *00316000
                         not specify ECB                                00317000
ISGRSNCODEOECBREQWITHSTEPMUSTCOMPLETE EQU X'0000001E' This label has a *00318000
                         typo but is kept for compatibility             00319000
ISGRSNCODEECBREQWITHSTEPMUSTCOMPLETE EQU X'0000001E' An ECB request    *00320000
                         illegally specified PelStpMC                   00321000
ISGRSNCODEBADFORMATWORD EQU X'0000001F' The storage containing the     *00322000
                         format word could not be accessed in the      *00323000
                         caller's key                                   00324000
ISGRSNCODEBADFORMATVALUE EQU X'00000020' The storage containing the    *00325000
                         format value could not be accessed in the     *00326000
                         caller's key                                   00327000
ISGRSNCODEPARMLISTALETNOTZERO EQU X'00000021' ENQ/DEQ parameter list   *00328000
                         was not in the primary address space           00329000
ISGRSNCODEBADPELPREFIX EQU X'00000022' The storage containing the      *00330000
                         format value could not be accessed in the     *00331000
                         caller's key                                   00332000
ISGRSNCODESMCINXMEM EQU X'00000023' SMC or RMC was specified while     *00333000
                         P^=H.                                          00334000
ISGRSNCODESRBMODE EQU X'00000024' PC-ENQ or PC-DEQ was entered in SRB  *00335000
                         mode.                                          00336000
*                                                                       00337000
*   7xx Abend Reason codes                                              00338000
*                                                                       00339000
*                                                                       00340000
ISGRSNCODEGENERALFAILURE EQU X'00000000' General module failure in     *00341000
                         ENQ/DEQ processing                             00342000
ISGRSNCODEIOSVDSTFFAILURE EQU X'00000001' Synchronous RESERVE failed   *00343000
                         during device state transition flushing        00344000
ISGRSNCODERESERVESTARTFAILURE EQU X'00000002' RESERVE start processing *00345000
                         failed                                         00346000
ISGRSNCODERESERVEDONEFAILURE EQU X'00000003' Synchronous RESERVE done  *00347000
                         processing failed                              00348000
ISGRSNCODECOULDNOTOBTAINHOMESTORAGE EQU X'00000004' ENQ/DEQ processing *00349000
                         could not obtain storage in the home address  *00350000
                         space                                          00351000
ISGRSNCODECOULDNOTOBTAINCOMMONSTORAGE EQU X'00000005' ENQ/DEQ          *00352000
                         processing could not obtain storage in the    *00353000
                         common area                                    00354000
ISGRSNCODECOULDNOTOBTAINPRIMARYALET EQU X'00000006' ENQ/DEQ processing *00355000
                         could not obtain the ALET of the caller's     *00356000
                         primary address space                          00357000
ISGRSNCODECOULDNOTSUSPENDFORRNLCHANGE EQU X'00000007' ENQ processing   *00358000
                         could not obtain a DSQE to suspend a request  *00359000
                         for a RNL change                               00360000
ISGRSNCODECOULDNOTOBTAINGRSALET EQU X'00000008'                         00361000
*                                                                       00362000
*                                      ENQ/DEQ processing could not     00363000
*                                      obtain the ALET of the GRS       00364000
*                                      address space                    00365000
*                                                                       00366000
ISGRSNCODECOULDNOTOBTAINPRIMARYSTORAGE EQU X'00000009' ENQ/DEQ         *00367000
                         processing could not obtain storage in the    *00368000
                         primary address space                          00369000
ISGRSNCODECOULDNOTQUERYLSE EQU X'00000100' ENQ/DEQ processing could    *00370000
                         not query the LSE of an ENQ requestor          00371000
ISGRSNCODECOULDNOTUPDATELSE EQU X'00000200' ENQ/DEQ processing could   *00372000
                         not update the LSE of an ENQ requestor         00373000
ISGRSNCODECSVDYNEXABEND EQU X'000000FD' Abend in CSVDYNEX               00374000
ISGRSNCODEEXITABEND EQU X'000000FE' Abend in dynamic exit               00375000
ISGRSNCODEUCBOVERFLOW EQU X'000000FF' RESERVE processing detected an   *00376000
                         overflow when updating the RESERVE count       00377000
*                                                                       00378000
*   ISGQUERY Return and Reason Codes                                    00379000
*   (Note that the reason codes are of the form "xxxxYYYY" where        00380000
*    "xxxx" is used to contain the module id of the failing module.     00381000
*    Module ids can be found in ISGYMT or ISGFID)                       00382000
*    Use ISGRsnCodeMask to remove the module id from the reason codes   00383000
*                                                                       00384000
*                                                                       00385000
*                                                                       00386000
ISGQUERYRC_OK EQU X'00000000'                                           00387000
ISGQUERYRC_WARN EQU X'00000004'                                         00388000
ISGQUERYRSN_NOMATCHINGRNLE EQU X'00000401'                              00389000
ISGQUERYRSN_RNLCHANGEINPROGRESS EQU X'00000402'                         00390000
ISGQUERYRSN_GRSRNLEXCLUDE EQU X'00000403'                               00391000
ISGQUERYRSN_NOMATCHINGRESOURCES EQU X'00000404'                         00392000
ISGQUERYRSN_ANSWERAREAFULL EQU X'00000405'                              00393000
ISGQUERYRSN_GRSNONE EQU X'00000406'                                     00394000
ISGQUERYRC_PARMERROR EQU X'00000008'                                    00395000
ISGQUERYRSN_BADPLISTADDRESS EQU X'00000801'                             00396000
ISGQUERYRSN_BADPLISTALET EQU X'00000802'                                00397000
ISGQUERYRSN_BADPLISTVERSION EQU X'00000803'                             00398000
ISGQUERYRSN_RESERVEDFIELDNOTNULL EQU X'00000804'                        00399000
ISGQUERYRSN_BADREQINFO EQU X'00000805'                                  00400000
ISGQUERYRSN_BADRNL EQU X'00000806'                                      00401000
ISGQUERYRSN_BADRNAMEADDRESS EQU X'00000807'                             00402000
ISGQUERYRSN_BADRNAMEALET EQU X'00000808'                                00403000
ISGQUERYRSN_BADRNAMELEN EQU X'00000809'                                 00404000
ISGQUERYRSN_BADRNLEADDRESS EQU X'0000080A'                              00405000
ISGQUERYRSN_BADRNLEALET EQU X'0000080B'                                 00406000
ISGQUERYRSN_MUTUALLYEXCLUSIVE EQU X'0000080C'                           00407000
ISGQUERYRSN_BADANSAREAADDRESS EQU X'0000080D'                           00408000
ISGQUERYRSN_BADANSAREAALET EQU X'0000080E'                              00409000
ISGQUERYRSN_BADSCANACTION EQU X'0000080F'                               00410000
ISGQUERYRSN_BADRESUMETOKENADDRESS EQU X'00000810'                       00411000
ISGQUERYRSN_BADRESUMETOKENALET EQU X'00000811'                          00412000
ISGQUERYRSN_BADGATHERFROM EQU X'00000812'                               00413000
ISGQUERYRSN_BADSEARCH EQU X'00000813'                                   00414000
ISGQUERYRSN_BADENQTOKENADDRESS EQU X'00000814'                          00415000
ISGQUERYRSN_BADENQTOKENALET EQU X'00000815'                             00416000
ISGQUERYRSN_BADQNAMEMATCH EQU X'00000816'                               00417000
ISGQUERYRSN_BADRNAMEMATCH EQU X'00000817'                               00418000
ISGQUERYRSN_BADSCOPE EQU X'00000818'                                    00419000
ISGQUERYRSN_BADSERIALIZEBY EQU X'00000819'                              00420000
ISGQUERYRSN_ANSLENTOOSMALL EQU X'0000081A'                              00421000
ISGQUERYRSN_RESUMETOKENNOTVALID EQU X'0000081B'                         00422000
ISGQUERYRSN_RESUMETOKENTOOOLD EQU X'0000081C'                           00423000
ISGQUERYRSN_ENQTOKENNOTVALID EQU X'0000081D'                            00424000
ISGQUERYRSN_BADREQUESTERLIMIT EQU X'0000081E'                           00425000
ISGQUERYRSN_NOPOSSIBLEMATCH EQU X'0000081F'                             00426000
ISGQUERYRSN_BADANSDETAIL EQU X'00000820'                                00427000
ISGQUERYRSN_NOTAUTHTOQSCAN EQU X'00000821'                              00428000
ISGQUERYRSN_BADASID EQU X'00000822'                                     00429000
ISGQUERYRSN_BADUSERDATAADDRESS EQU X'00000823'                          00430000
ISGQUERYRSN_BADUSERDATAALET EQU X'00000824'                             00431000
ISGQUERYRSN_BADUSERDATALEN EQU X'00000825'                              00432000
ISGQUERYRSN_BADUSERDATAMATCH EQU X'00000826'                            00433000
ISGQUERYRSN_BADANALYZE EQU X'00000827'                                  00434000
ISGQUERYRSN_NOTAUTHTOLATCHECA EQU X'00000828'                           00435000
ISGQUERYRC_ENVERROR EQU X'0000000C'                                     00436000
ISGQUERYRSN_SRBMODE EQU X'00000C01'                                     00437000
ISGQUERYRSN_NOTENABLED EQU X'00000C02'                                  00438000
ISGQUERYRSN_COMPLEXMIGRATING EQU X'00000C03'                            00439000
ISGQUERYRSN_CANNOTOBTAINLOCKS EQU X'00000C04'                           00440000
ISGQUERYRSN_LOCKHELD EQU X'00000C05'                                    00441000
ISGQUERYRSN_MAXCONCURRENTREQUESTS EQU X'00000C06'                       00442000
ISGQUERYRSN_RINGRESUMEINSTAR EQU X'00000C07'                            00443000
ISGQUERYRSN_INSUFFICIENTSTORAGE EQU X'00000C08'                         00444000
ISGQUERYRSN_FRRHELD EQU X'00000C09'                                     00445000
ISGQUERYRC_COMPERROR EQU X'00000010'                                    00446000
*                                                                       00447000
*   ISGENQ Return and Reason Codes                                      00448000
*   (Note that the reason codes are of the form "xxxxYYYY" where        00449000
*    "xxxx" is used to contain the module id of the failing module.     00450000
*    Module ids can be found in ISGYMT or ISGFID)                       00451000
*    Use ISGRsnCodeMask to remove the module id from the reason codes   00452000
*                                                                       00453000
*                                                                       00454000
*                                                                       00455000
ISGENQRC_OK EQU X'00000000'                                             00456000
ISGENQRC_WARN EQU X'00000004'                                           00457000
ISGENQRSN_NONZERORETURNCODES EQU X'00000401'                            00458000
ISGENQRSN_REQUESTNOTPROCESSED EQU X'00000402'                           00459000
ISGENQRSN_ECBWILLBEPOSTED EQU X'00000403'                               00460000
ISGENQRSN_NOTIMMEDIATELYAVAILABLE EQU X'00000404'                       00461000
ISGENQRSN_TASKOWNSEXCLUSIVE EQU X'00000405'                             00462000
ISGENQRSN_TASKOWNSSHARED EQU X'00000406'                                00463000
ISGENQRSN_TASKWAITING EQU X'00000407'                                   00464000
ISGENQRSN_OTHERSHAREDOWNERS EQU X'00000409'                             00465000
ISGENQRSN_TASKDOESNOTOWN EQU X'0000040A'                                00466000
ISGENQRSN_TASKSUSPENDEDFORRESOURCE EQU X'0000040B'                      00467000
ISGENQRSN_UNPROTECTEDQNAME EQU X'0000040D'                              00468000
ISGENQRSN_UNPROTECTEDEXITQNAME EQU X'0000040E'                          00469000
ISGENQRSN_ECBATLEASTONEREQUESTFAILED EQU X'0000040F'                    00470000
ISGENQRC_PARMERROR EQU X'00000008'                                      00471000
ISGENQRSN_BADPLISTADDRESS EQU X'00000801'                               00472000
ISGENQRSN_BADPLISTALET EQU X'00000802'                                  00473000
ISGENQRSN_BADPLISTVERSION EQU X'00000803'                               00474000
ISGENQRSN_RESERVEDFIELDNOTNULL EQU X'00000804'                          00475000
ISGENQRSN_MUTUALLYEXCLUSIVE EQU X'00000805'                             00476000
ISGENQRSN_BADREQUEST EQU X'00000806'                                    00477000
ISGENQRSN_BADCONTENTIONACT EQU X'00000807'                              00478000
ISGENQRSN_BADOWNINGTTOKEN EQU X'00000808'                               00479000
ISGENQRSN_BADANSAREAADDRESS EQU X'00000809'                             00480000
ISGENQRSN_BADANSAREAALET EQU X'0000080A'                                00481000
ISGENQRSN_ANSLENTOOSMALL EQU X'0000080B'                                00482000
ISGENQRSN_BADRNAMEADDRESS EQU X'0000080C'                               00483000
ISGENQRSN_BADRNAMEALET EQU X'0000080D'                                  00484000
ISGENQRSN_BADRNAMELEN EQU X'0000080E'                                   00485000
ISGENQRSN_BADSCOPE EQU X'0000080F'                                      00486000
ISGENQRSN_BADUCB@ EQU X'00000810'                                       00487000
ISGENQRSN_BADCOND EQU X'00000811'                                       00488000
ISGENQRSN_BADSYNCHRES EQU X'00000812'                                   00489000
ISGENQRSN_BADENQTOKENADDRESS EQU X'00000813'                            00490000
ISGENQRSN_BADENQTOKENALET EQU X'00000814'                               00491000
ISGENQRSN_BADENQTOKEN EQU X'00000815'                                   00492000
ISGENQRSN_BADNUMRES EQU X'00000816'                                     00493000
ISGENQRSN_BADRESTABLEADDRESS EQU X'00000817'                            00494000
ISGENQRSN_BADRESTABLEALET EQU X'00000818'                               00495000
ISGENQRSN_BADRESTABLE EQU X'00000819'                                   00496000
ISGENQRSN_BADENQTOKENTBLADDRESS EQU X'0000081A'                         00497000
ISGENQRSN_BADENQTOKENTBLALET EQU X'0000081B'                            00498000
ISGENQRSN_BADRETURNTABLEADDRESS EQU X'0000081C'                         00499000
ISGENQRSN_BADRETURNTABLEALET EQU X'0000081D'                            00500000
ISGENQRSN_NOTAUTHORIZEDFORQNAME EQU X'0000081E'                         00501000
ISGENQRSN_NOTAUTHORIZEDFOREXITQNAME EQU X'0000081F'                     00502000
ISGENQRSN_NOTAUTHORIZEDFORECB EQU X'00000820'                           00503000
ISGENQRSN_NOTAUTHORIZEDFOROWNINGTTOKEN EQU X'00000821'                  00504000
ISGENQRSN_BADUSERDATAADDRESS EQU X'00000822'                            00505000
ISGENQRSN_BADUSERDATAALET EQU X'00000823'                               00506000
ISGENQRSN_DEVICENOTALLOCATED EQU X'00000824'                            00507000
ISGENQRSN_EXITDEVICENOTALLOCATED EQU X'00000825'                        00508000
ISGENQRSN_BADCONTROL EQU X'00000826'                                    00509000
ISGENQRSN_BADEXITUCB@ EQU X'00000827'                                   00510000
ISGENQRSN_NOTAUTHORIZEDFORENQMAX EQU X'00000828'                        00511000
ISGENQRC_ENVERROR EQU X'0000000C'                                       00512000
ISGENQRSN_REQUESTLIMITEXCEEDED EQU X'00000C01'                          00513000
ISGENQRSN_ABENDINEXIT EQU X'00000C05'                                   00514000
ISGENQRSN_TASKENDING EQU X'00000C0A'                                    00515000
ISGENQRSN_FRRHELD EQU X'00000C0B'                                       00516000
ISGENQRSN_LOCKHELD EQU X'00000C0C'                                      00517000
ISGENQRSN_SRBMODE EQU X'00000C0D'                                       00518000
ISGENQRSN_NOTENABLED EQU X'00000C0E'                                    00519000
ISGENQRSN_MASIDTARGET EQU X'00000C0F'                                   00520000
ISGENQRSN_UNSUPPORTEDMODE EQU X'00000C10'                               00521000
ISGENQRSN_MASIDNOTSUPPORTED EQU X'00000C11'                             00522000
ISGENQRC_COMPERROR EQU X'00000010'                                      00523000
ISGENQRSN_CANNOTOBTAINHOMESTORAGE EQU X'00001002'                       00524000
ISGENQRSN_CANNOTOBTAINCOMMONSTORAGE EQU X'00001003'                     00525000
ISGENQRSN_CANNOTOBTAINPRIMARYALET EQU X'00001004'                       00526000
ISGENQRSN_SYNCHRESFLUSHFAILED EQU X'00001006'                           00527000
ISGENQRSN_RESERVESTARTFAILED EQU X'00001007'                            00528000
ISGENQRSN_RESERVECOUNTOVERFLOW EQU X'00001008'                          00529000
ISGENQRSN_CANNOTOBTAINDSQE EQU X'00001009'                              00530000
ISGENQRSN_RESERVEDONEFAILED EQU X'0000100A'                             00531000
ISGENQRSN_CANNOTOBTAINPRIMARYSTORAGE EQU X'0000100B'                    00532000
*                                                                       00533000
*   ISGADMIN Return and Reason Codes                                    00534000
*   (Note that the reason codes are of the form "xxxxYYYY" where        00535000
*    "xxxx" is used to contain the module id of the failing module.     00536000
*    Module ids can be found in ISGYMT or ISGFID)                       00537000
*    Use ISGRsnCodeMask to remove the module id from the reason codes   00538000
*                                                                       00539000
*                                                                       00540000
*                                                                       00541000
ISGADMINRC_OK EQU X'00000000'                                           00542000
ISGADMINRC_WARN EQU X'00000004'                                         00543000
ISGADMINRSN_ENQMAXVALUELOW EQU X'00000401'                              00544000
ISGADMINRSN_RESETENQMAXIGNORED EQU X'00000402'                          00545000
ISGADMINRC_PARMERROR EQU X'00000008'                                    00546000
ISGADMINRSN_BADPLISTADDRESS EQU X'00000801'                             00547000
ISGADMINRSN_BADPLISTALET EQU X'00000802'                                00548000
ISGADMINRSN_BADPLISTVERSION EQU X'00000803'                             00549000
ISGADMINRSN_RESERVEDFIELDNOTNULL EQU X'00000804'                        00550000
ISGADMINRSN_BADREQUEST EQU X'00000805'                                  00551000
ISGADMINRSN_ENQMAXVALUETOOLOW EQU X'00000806'                           00552000
ISGADMINRSN_BADMOVINGWAITERADDRESS EQU X'00000807'                      00553000
ISGADMINRSN_BADMOVINGWAITERALET EQU X'00000808'                         00554000
ISGADMINRSN_BADMOVINGWAITER EQU X'00000809'                             00555000
ISGADMINRSN_BADBEFOREREQUESTERADDRESS EQU X'0000080A'                   00556000
ISGADMINRSN_BADBEFOREREQUESTERALET EQU X'0000080B'                      00557000
ISGADMINRSN_BADBEFOREREQUESTER EQU X'0000080C'                          00558000
ISGADMINRSN_SAMEREQUESTER EQU X'0000080D'                               00559000
ISGADMINRSN_INCONSISTENTRESOURCE EQU X'0000080E'                        00560000
ISGADMINRSN_BADSCOPE EQU X'0000080F'                                    00561000
ISGADMINRSN_BADCONTROL EQU X'00000810'                                  00562000
ISGADMINRSN_CANNOTMOVEOWNER EQU X'00000811'                             00563000
ISGADMINRSN_ALREADYBEFOREREQUESTER EQU X'00000812'                      00564000
ISGADMINRSN_CANNOTMOVEBEFOREOWNER EQU X'00000813'                       00565000
ISGADMINRSN_CANNOTMOVEAFTERSHAREDOWNER EQU X'00000814'                  00566000
ISGADMINRSN_CANNOTMAKEANOTHEROWNER EQU X'00000815'                      00567000
ISGADMINRSN_ALREADYLASTREQUESTER EQU X'00000816'                        00568000
ISGADMINRSN_CANNOTMOVEMASIDUSER EQU X'00000817'                         00569000
ISGADMINRSN_MASIDCONTROLCONFLICT EQU X'00000818'                        00570000
ISGADMINRC_ENVERROR EQU X'0000000C'                                     00571000
ISGADMINRSN_NOTAUTHORIZED EQU X'00000C01'                               00572000
ISGADMINRSN_FRRHELD EQU X'00000C02'                                     00573000
ISGADMINRSN_LOCKHELD EQU X'00000C03'                                    00574000
ISGADMINRSN_SRBMODE EQU X'00000C04'                                     00575000
ISGADMINRSN_NOTENABLED EQU X'00000C05'                                  00576000
ISGADMINRSN_QUEUEDAMAGE1 EQU X'00000C06'                                00577000
ISGADMINRSN_QUEUEDAMAGE2 EQU X'00000C07'                                00578000
ISGADMINRC_COMPERROR EQU X'00000010'                                    00579000
*                                                                       00580000
* ********************************************************************  00581000
* * Declares for ENQMAXx values in GRSCNFxx, SETGRS, and ISGADMIN:   *  00582000
* * These are smallest possible maximums for authorized and          *  00583000
* * unauthorized requesters, to help prevent the installation        *  00584000
* * from inadvertently causing excessive ABEND538s.                     00585000
* ********************************************************************  00586000
*                                                                       00587000
*                                                                       00588000
ENQMAXA_SMALLESTMAXIMUM EQU 250000                                      00589000
ENQMAXU_SMALLESTMAXIMUM EQU 16384                                       00590000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00591000
         AIF   ('&LIST' EQ 'YES').P4                                    00592000
.P3      ANOP                                                           00593000
         POP   PRINT                                                    00594000
.P4      ANOP                                                           00595000
.P_EXIT  ANOP                                                           00596000
         MEND                                                           00597000
**/ ISGYCON_2:;                                                         00598000
* %ISGYCON_INCLUDED = 'YES';                                            00599000
* %DCL ZCBPRINT CHAR EXT;                                               00600000
* %DEACTIVATE ZCBPRINT;                                                 00601000
* %DCL ISGYCON_LIST CHAR EXT;                                           00602000
* %DEACTIVATE ISGYCON_LIST;                                             00603000
* %IF ISGYCON_LIST ^= 'NO' &                                            00604000
*    ZCBPRINT ^= 'NO' %THEN                                             00605000
*   %GOTO ISGYCON_3;                                                    00606000
*   @LIST PUSH NOECHO;                                                  00607000
*   @LIST NOASSEMBLE NOECHO;                                            00608000
*   @LIST OFF C NOECHO;                                                 00609000
* %ISGYCON_3:;                                                          00610000
*/* Start of PL/X Source                                             */ 00611000
*/* Return Codes from ENQ/DEQ                                        */ 00612000
*                                                                       00613000
*/* ENQ RET=TEST Return Codes                                        */ 00614000
* DCL ENQ_kTestRCResourceIsAvailable CONSTANT(00x);                     00615000
* DCL ENQ_kTestRCResourceIsNotAvailable CONSTANT(04x);                  00616000
* DCL ENQ_kTestRCPreviousReqAlreadyOwns CONSTANT(08x);                  00617000
* DCL ENQ_kTestRCPreviousReqDoesNotOwn CONSTANT(14x);                   00618000
* DCL ENQ_kTestRCMatchingTaskOwns CONSTANT(20x);                        00619000
*                                                                       00620000
*/* ENQ RET=USE Return Codes                                         */ 00621000
* DCL ENQ_kUseRCResourceOwned CONSTANT(00x);                            00622000
* DCL ENQ_kUseRCResourceNotOwned CONSTANT(04x);                         00623000
* DCL ENQ_kUseRCPreviousReqAlreadyOwns CONSTANT(08x);                   00624000
* DCL ENQ_kUseRCPreviousReqDoesNotOwn CONSTANT(14x);                    00625000
* DCL ENQ_kUseRCEnvironmentalError CONSTANT(18x);                       00626000
*                                                                       00627000
*/* ENQ RET=CHNG Return Codes                                        */ 00628000
* DCL ENQ_kChngRCResourceChanged CONSTANT(00x);                         00629000
* DCL ENQ_kChngRCResourceNotChanged CONSTANT(04x);                      00630000
* DCL ENQ_kChngRCResourceNotReqed CONSTANT(08x);                        00631000
* DCL ENQ_kChngRCResourceNotOwned CONSTANT(14x);                        00632000
* DCL ENQ_kChngRCEnvironmentalError CONSTANT(18x);                      00633000
*                                                                       00634000
*/* ENQ RET=HAVE ReturnCodes                                         */ 00635000
* DCL ENQ_kHaveRCResourceOwned CONSTANT(00x);                           00636000
* DCL ENQ_kHaveRCPreviousReqAlreadyOwns CONSTANT(08x);                  00637000
* DCL ENQ_kHaveRCPreviousReqDoesNotOwn CONSTANT(14x);                   00638000
* DCL ENQ_kHaveRCEnvironmentalError CONSTANT(18x);                      00639000
* DCL ENQ_kHaveRCMatchingTaskOwns CONSTANT(20x);                        00640000
* DCL ENQ_kHaveRCCallerCannotUse CONSTANT(28x);                         00641000
* DCL ENQ_kHaveRCMatchingTaskViolation CONSTANT(44x);                   00642000
*                                                                       00643000
*/* ENQ RET=ECB ReturnCodes                                      @L5A*/ 00644000
* DCL ENQ_kECBRCResourceOwned CONSTANT(00x);                  /* @L5A*/ 00645000
* DCL ENQ_kECBRCWillBePosted CONSTANT(04x);                   /* @L5A*/ 00646000
* DCL ENQ_kECBRCPreviousReqAlreadyOwns CONSTANT(08x);         /* @P5A*/ 00647000
* DCL ENQ_kECBRCPreviousReqDoesNotOwn CONSTANT(14x);          /* @P5A*/ 00648000
* DCL ENQ_kECBRCEnvironmentalError CONSTANT(18x);             /* @P5A*/ 00649000
* DCL ENQ_kECBRCWaitToOwnExclusive CONSTANT(24x);             /* @P5A*/ 00650000
*                                                                       00651000
*/* DEQ ReturnCodes                                              @L5A*/ 00652000
* DCL DEQ_kRCResourceReleased CONSTANT(00x);                  /* @L5A*/ 00653000
* DCL DEQ_kRCResourcePreviousReqDoesNotOwn CONSTANT(04x);     /* @L5A*/ 00654000
* DCL DEQ_kRCResourceNotOwned CONSTANT(08x);                  /* @L5A*/ 00655000
*                                                                       00656000
*/* Reason Codes -- GRS ABEND Reason Codes                           */ 00657000
*                                                                       00658000
*/* (Note that the reason codes are of the form "xxxxYYYY" where        00659000
*    "xxxx" is used to contain the module id of the failing module.     00660000
*    Module ids can be found in ISGYMT or ISGFID)                       00661000
*    Also see ISGCONST for internal reason codes.                @P8C*/ 00662000
*                                                                       00663000
* DCL ISGRsnCodeMask                                                    00664000
*     BIT(32) CONSTANT('0000FFFF'X); /* Used to mask off the high       00665000
*                                     half word to remove the module    00666000
*                                     id from the ABEND and reason      00667000
*                                     codes                      @P8C*/ 00668000
* /* 3xx Abend Reason codes                                          */ 00669000
*                                                                       00670000
* DCL ISGRsnCodeUnauthNQDQofAuthResource                                00671000
*     BIT(32) CONSTANT('00000001'X); /* An unauthorized requester       00672000
*                                     attempted to ENQ or DEQ an        00673000
*                                     authorized resource            */ 00674000
* DCL ISGRsnCodeUnauthNQDQofAuthResourceByExit                          00675000
*     BIT(32) CONSTANT('00000002'X); /* An ISGNQXIT installation exit   00676000
*                                     specified an authorized resource  00677000
*                                     name for an unauthorized request  00678000
*                                                                    */ 00679000
* DCL ISGRsnCodeUCBNotAllocated                                         00680000
*     BIT(32) CONSTANT('00000003'X); /* An unauthorized requester       00681000
*                                     attempted to RESERVE a device     00682000
*                                     that is not allocated to the      00683000
*                                     requesting task                */ 00684000
* DCL ISGRsnCodeUCBNotAllocatedByExit                                   00685000
*     BIT(32) CONSTANT('00000004'X); /* An ISGNQXIT installation exit   00686000
*                                     specified a UCB for a device      00687000
*                                     that is not allocated to the      00688000
*                                     requesting, unauthorized task  */ 00689000
* DCL ISGRsnCodeUnauthMasidReq                                          00690000
*     BIT(32) CONSTANT('00000005'X); /* An unauthorized requester       00691000
*                                     attempted a MASID request  @L3A*/ 00692000
* DCL ISGRsnCodeUnauthReqWithTCBOrPelStpMc                              00693000
*     BIT(32) CONSTANT('00000006'X); /* An unauthorized requester       00694000
*                                     specified TCB or Step Must        00695000
*                                     Complete                   @L3A*/ 00696000
* DCL ISGRsnCodeUnauthGenericRequest                                    00697000
*     BIT(32) CONSTANT('00000007'X); /* An unauthorized (DEQ) requester 00698000
*                                     attempted to issue a generic      00699000
*                                     request                    @L3A*/ 00700000
* DCL ISGRsnCodeUnauthECBRequest                                        00701000
*     BIT(32) CONSTANT('00000008'X); /* An unauthorized (ENQ) requester 00702000
*                                     attempted to issue an ECB request 00703000
*                                                                @L3A*/ 00704000
*                                                                       00705000
*/* 4xx Abend Reason codes                                           */ 00706000
*                                                                       00707000
* DCL ISGRsnCodeParmListAlteredWhileProcessing                          00708000
*     BIT(32) CONSTANT('00000001'X); /* The input parameter list was    00709000
*                                     altered during ENQ/DEQ            00710000
*                                     processing                     */ 00711000
* DCL ISGRsnCodeRNLNoAndUCBSpecified                                    00712000
*     BIT(32) CONSTANT('00000002'X); /* The RESERVE request specified   00713000
*                                     RNL=NO                         */ 00714000
* DCL ISGRsnCodeInvalidUCB                                              00715000
*     BIT(32) CONSTANT('00000003'X); /* The storage specified by the    00716000
*                                     input UCB address does not map    00717000
*                                     to a valid UCB                 */ 00718000
* DCL ISGRsnCodeInvalidUCBByExit                                        00719000
*     BIT(32) CONSTANT('00000004'X); /* The storage specified by the    00720000
*                                     UCB address specified by an       00721000
*                                     ISGNQXIT exit routine does not    00722000
*                                     map to a valid UCB             */ 00723000
* DCL ISGRsnCodeBadUserPel                                              00724000
*     BIT(32) CONSTANT('00000005'X); /* The storage passed to ENQ/DEQ   00725000
*                                     processing could not be accessed  00726000
*                                     in the caller's key            */ 00727000
* DCL ISGRsnCodeBadQname                                                00728000
*     BIT(32) CONSTANT('00000006'X); /* The storage containing the      00729000
*                                     QNAME could not be accessed in    00730000
*                                     the caller's key               */ 00731000
* DCL ISGRsnCodeBadRname                                                00732000
*     BIT(32) CONSTANT('00000007'X); /* The storage containing the      00733000
*                                     RNAME could not be accessed in    00734000
*                                     the caller's key               */ 00735000
* DCL ISGRsnCodeBadUCBPtr                                               00736000
*     BIT(32) CONSTANT('00000008'X); /* The storage containing the      00737000
*                                     pointer to the UCB address could  00738000
*                                     not be accessed in the caller's   00739000
*                                     key                            */ 00740000
* DCL ISGRsnCodeBadUCBAddress                                           00741000
*     BIT(32) CONSTANT('00000009'X); /* The storage containing the UCB  00742000
*                                     address could not be accessed in  00743000
*                                     the caller's key               */ 00744000
* DCL ISGRsnCodeLocalResourceCountOverrun                               00745000
*     BIT(32) CONSTANT('0000000A'X); /* The local resource count        00746000
*                                       exceeded 'FFFF'x resources      00747000
*                                                                @P1A*/ 00748000
* DCL ISGRsnCodeGlobalResourceCountOverrun                              00749000
*     BIT(32) CONSTANT('0000000B'X); /* The global resource count       00750000
*                                       exceeded 'FFFF'x resources      00751000
*                                                                @P1A*/ 00752000
* DCL ISGRsnCodeInvalidFormatWord                                       00753000
*     BIT(32) CONSTANT('0000000C'X); /* The format word value was       00754000
*                                     invalid                    @L3A*/ 00755000
* DCL ISGRsnCodeBadTCBStorage                                           00756000
*     BIT(32) CONSTANT('0000000D'X); /* The storage specified by the    00757000
*                                     input TCB is invalid       @L3A*/ 00758000
* DCL ISGRsnCodeNotATCB                                                 00759000
*     BIT(32) CONSTANT('0000000E'X); /* The storage specified by the    00760000
*                                     input TCB does not map to a       00761000
*                                     valid TCB                  @L3A*/ 00762000
* DCL ISGRsnCodeMasidReqSpecifiedTCBOrPelStpMc                          00763000
*     BIT(32) CONSTANT('0000000F'X); /* A MASID request incorrectly     00764000
*                                     specified TCB or PelStpMC  @L3A*/ 00765000
* DCL ISGRsnCodeInvalidMasidRnameLength                                 00766000
*     BIT(32) CONSTANT('00000010'X); /* A MASID request has an rname    00767000
*                                     with a bad length          @L3A*/ 00768000
* DCL ISGRsnCodeMasidReqInvalidRet                                      00769000
*     BIT(32) CONSTANT('00000011'X); /* A MASID request specified       00770000
*                                     invalid RET= value         @L3A*/ 00771000
* DCL ISGRsnCodeMasidReqWithNoTCB                                       00772000
*     BIT(32) CONSTANT('00000012'X); /* A MASID request has no TCB      00773000
*                                     associated with it         @L3A*/ 00774000
* DCL ISGRsnCodeMasidReqSubtaskOfTarget                                 00775000
*     BIT(32) CONSTANT('00000013'X); /* Issuing tasks TCB is a subtask  00776000
*                                     of the target TCB, illegal @L3A*/ 00777000
* DCL ISGRsnCodeReqSetObsoleteFlag                                      00778000
*     BIT(32) CONSTANT('00000014'X); /* Request tried to set an         00779000
*                                     obsolete bit in the Pel    @L3A*/ 00780000
* DCL ISGRsnCodeTCBSpecifiedANDPelStpMC                                 00781000
*     BIT(32) CONSTANT('00000015'X); /* Request illegally specified TCB 00782000
*                                     with PelStpMC              @L3A*/ 00783000
* DCL ISGRsnCodeDEQReqSpecifiedPelSave                                  00784000
*     BIT(32) CONSTANT('00000016'X); /* Deq request illegally specified 00785000
*                                     PelSave                    @L3A*/ 00786000
* DCL ISGRsnCodeInvalidRETSpecified                                     00787000
*     BIT(32) CONSTANT('00000017'X); /* Request specified invalid       00788000
*                                     RET= value                 @L3A*/ 00789000
* DCL ISGRsnCodeGenericReqWithInvalidRET                                00790000
*     BIT(32) CONSTANT('00000018'X); /* Generic request specified       00791000
*                                     invalid RET= value         @L3A*/ 00792000
* DCL ISGRsnCodeEnqReqSpecifiedGeneric                                  00793000
*     BIT(32) CONSTANT('00000019'X); /* Enq request illegally specified 00794000
*                                     PelGen2                    @L3A*/ 00795000
* DCL ISGRsnCodeDirEnqNoMatchingTCB                                     00796000
*     BIT(32) CONSTANT('0000001A'X); /* A directed enq request was      00797000
*                                     issued with no matching TCB in    00798000
*                                     the requestor's address space     00799000
*                                                                @L3A*/ 00800000
* DCL ISGRsnCodeDirEnqANDUCBSpecified                                   00801000
*     BIT(32) CONSTANT('0000001B'X); /* Directed enq request illegally  00802000
*                                     specified UCB              @L3A*/ 00803000
* DCL ISGRsnCodeDirEnqNoECBAndInvalidRet                                00804000
*     BIT(32) CONSTANT('0000001C'X); /* Directed enq request illegally  00805000
*                                     specified no ECB with an invalid  00806000
*                                     RET= value                 @L3A*/ 00807000
* DCL ISGRsnCodeoECBReqWithBadRet                                       00808000
*     BIT(32) CONSTANT('0000001D'X); /* This label has a typo but is    00809000
*                                     kept for compatibility     @L7C*/ 00810000
* DCL ISGRsnCodeECBReqWithBadRet                                        00811000
*     BIT(32) CONSTANT('0000001D'X); /* An ECB request but RET does not 00812000
*                                     specify ECB                @L7A*/ 00813000
* DCL ISGRsnCodeoECBReqWithStepMustComplete                             00814000
*     BIT(32) CONSTANT('0000001E'X); /* This label has a typo but is    00815000
*                                     kept for compatibility     @L7C*/ 00816000
* DCL ISGRsnCodeECBReqWithStepMustComplete                              00817000
*     BIT(32) CONSTANT('0000001E'X); /* An ECB request illegally        00818000
*                                     specified PelStpMC         @L7A*/ 00819000
* DCL ISGRsnCodeBadFormatWord                                           00820000
*     BIT(32) CONSTANT('0000001F'X); /* The storage containing the      00821000
*                                     format word could not be accessed 00822000
*                                     in the caller's key        @L3A*/ 00823000
* DCL ISGRsnCodeBadFormatValue                                          00824000
*     BIT(32) CONSTANT('00000020'X); /* The storage containing the      00825000
*                                     format value could not be         00826000
*                                     accessed in the caller's key      00827000
*                                                                @L3A*/ 00828000
* DCL ISGRsnCodeParmlistAletNotZero                                     00829000
*     BIT(32) CONSTANT('00000021'X); /* ENQ/DEQ parameter list was      00830000
*                                     not in the primary address        00831000
*                                     space                      @01A*/ 00832000
* DCL ISGRsnCodeBadPelPrefix                                            00833000
*     BIT(32) CONSTANT('00000022'X); /* The storage containing the      00834000
*                                     format value could not be         00835000
*                                     accessed in the caller's key      00836000
*                                                                @P2A*/ 00837000
* DCL ISGRsnCodeSmcInXmem                                               00838000
*     BIT(32) CONSTANT('00000023'X); /* SMC or RMC was specified        00839000
*                                     while P^=H.                @PAA*/ 00840000
* DCL ISGRsnCodeSrbMode                                                 00841000
*     BIT(32) CONSTANT('00000024'X); /* PC-ENQ or PC-DEQ was entered    00842000
*                                     in SRB mode.               @PDA*/ 00843000
*                                                                       00844000
*/* 7xx Abend Reason codes                                           */ 00845000
*                                                                       00846000
* DCL ISGRsnCodeGeneralFailure                                          00847000
*     BIT(32) CONSTANT('00000000'X); /* General module failure in       00848000
*                                     ENQ/DEQ processing             */ 00849000
* DCL ISGRsnCodeIOSVDSTFFailure                                         00850000
*     BIT(32) CONSTANT('00000001'X); /* Synchronous RESERVE failed      00851000
*                                     during device state transition    00852000
*                                     flushing                       */ 00853000
* DCL ISGRsnCodeReserveStartFailure                                     00854000
*     BIT(32) CONSTANT('00000002'X); /* RESERVE start processing        00855000
*                                     failed                         */ 00856000
* DCL ISGRsnCodeReserveDoneFailure                                      00857000
*     BIT(32) CONSTANT('00000003'X); /* Synchronous RESERVE done        00858000
*                                     processing failed              */ 00859000
* DCL ISGRsnCodeCouldNotObtainHomeStorage                               00860000
*     BIT(32) CONSTANT('00000004'X); /* ENQ/DEQ processing could not    00861000
*                                     obtain storage in the home        00862000
*                                     address space                  */ 00863000
* DCL ISGRsnCodeCouldNotObtainCommonStorage                             00864000
*     BIT(32) CONSTANT('00000005'X); /* ENQ/DEQ processing could not    00865000
*                                     obtain storage in the common      00866000
*                                     area                       @L1A*/ 00867000
* DCL ISGRsnCodeCouldNotObtainPrimaryALET                               00868000
*     BIT(32) CONSTANT('00000006'X); /* ENQ/DEQ processing could not    00869000
*                                     obtain the ALET of the caller's   00870000
*                                     primary address space      @L1A*/ 00871000
* DCL ISGRsnCodeCouldNotSuspendForRNLChange                             00872000
*     BIT(32) CONSTANT('00000007'X); /* ENQ processing could not        00873000
*                                     obtain a DSQE to suspend a        00874000
*                                     request for a RNL change   @L1A*/ 00875000
* DCL ISGRsnCodeCouldNotObtainGRSALET                                   00876000
*     BIT(32) CONSTANT('00000008'X); /* ENQ/DEQ processing could not    00877000
*                                     obtain the ALET of the GRS        00878000
*                                     address space              @L1A*/ 00879000
* DCL ISGRsnCodeCouldNotObtainPrimaryStorage                            00880000
*     BIT(32) CONSTANT('00000009'X); /* ENQ/DEQ processing could not    00881000
*                                     obtain storage in the primary     00882000
*                                     address space              @L8A*/ 00883000
* DCL ISGRsnCodeCouldNotQueryLSE                                        00884000
*     BIT(32) CONSTANT('00000100'X); /* ENQ/DEQ processing could not    00885000
*                                      query the LSE of an ENQ          00886000
*                                      requestor                 @P2A*/ 00887000
* DCL ISGRsnCodeCouldNotUpdateLSE                                       00888000
*     BIT(32) CONSTANT('00000200'X); /* ENQ/DEQ processing could not    00889000
*                                      update the LSE of an ENQ         00890000
*                                      requestor                 @P2A*/ 00891000
* DCL ISGRsnCodeCsvDynExAbend                                           00892000
*     BIT(32) CONSTANT('000000FD'X); /* Abend in CSVDYNEX               00893000
*                                                                @02A*/ 00894000
* DCL ISGRsnCodeExitAbend                                               00895000
*     BIT(32) CONSTANT('000000FE'X); /* Abend in dynamic exit           00896000
*                                                                @L2A*/ 00897000
* DCL ISGRsnCodeUCBOverflow                                             00898000
*     BIT(32) CONSTANT('000000FF'X); /* RESERVE processing detected an  00899000
*                                     overflow when updating the        00900000
*                                     RESERVE count                  */ 00901000
*                                                                       00902000
*/* ISGQUERY Return and Reason Codes                             @L4A*/ 00903000
*                                                                       00904000
*/* (Note that the reason codes are of the form "xxxxYYYY" where        00905000
*    "xxxx" is used to contain the module id of the failing module.     00906000
*    Module ids can be found in ISGYMT or ISGFID)                       00907000
*    Use ISGRsnCodeMask to remove the module id from the reason codes   00908000
*                                                                @P8C*/ 00909000
* DCL                                                                   00910000
*    ISGQUERYRc_OK                        bit(32) constant('00000000'X) 00911000
*   ,ISGQUERYRc_Warn                      bit(32) constant('00000004'X) 00912000
*   ,ISGQUERYRsn_NoMatchingRNLE           bit(32) constant('00000401'X) 00913000
*   ,ISGQUERYRsn_RNLChangeInProgress      bit(32) constant('00000402'X) 00914000
*   ,ISGQUERYRsn_GRSRNLExclude            bit(32) constant('00000403'X) 00915000
*   ,ISGQUERYRsn_NoMatchingResources      bit(32) constant('00000404'X) 00916000
*   ,ISGQUERYRsn_AnswerAreaFull           bit(32) constant('00000405'X) 00917000
*   ,ISGQUERYRsn_GRSNone                  bit(32) constant('00000406'X) 00918000
*   ,ISGQUERYRc_ParmError                 bit(32) constant('00000008'X) 00919000
*   ,ISGQUERYRsn_BadPlistAddress          bit(32) constant('00000801'X) 00920000
*   ,ISGQUERYRsn_BadPlistALET             bit(32) constant('00000802'X) 00921000
*   ,ISGQUERYRsn_BadPlistVersion          bit(32) constant('00000803'X) 00922000
*   ,ISGQUERYRsn_ReservedFieldNotNull     bit(32) constant('00000804'X) 00923000
*   ,ISGQUERYRsn_BadReqInfo               bit(32) constant('00000805'X) 00924000
*   ,ISGQUERYRsn_BadRNL                   bit(32) constant('00000806'X) 00925000
*   ,ISGQUERYRsn_BadRNameAddress          bit(32) constant('00000807'X) 00926000
*   ,ISGQUERYRsn_BadRNameALET             bit(32) constant('00000808'X) 00927000
*   ,ISGQUERYRsn_BadRNameLen              bit(32) constant('00000809'X) 00928000
*   ,ISGQUERYRsn_BadRNLEAddress           bit(32) constant('0000080A'X) 00929000
*   ,ISGQUERYRsn_BadRNLEALET              bit(32) constant('0000080B'X) 00930000
*   ,ISGQUERYRsn_MutuallyExclusive        bit(32) constant('0000080C'X) 00931000
*   ,ISGQUERYRsn_BadAnsAreaAddress        bit(32) constant('0000080D'X) 00932000
*   ,ISGQUERYRsn_BadAnsAreaALET           bit(32) constant('0000080E'X) 00933000
*   ,ISGQUERYRsn_BadScanAction            bit(32) constant('0000080F'X) 00934000
*   ,ISGQUERYRsn_BadResumeTokenAddress    bit(32) constant('00000810'X) 00935000
*   ,ISGQUERYRsn_BadResumeTokenALET       bit(32) constant('00000811'X) 00936000
*   ,ISGQUERYRsn_BadGatherFrom            bit(32) constant('00000812'X) 00937000
*   ,ISGQUERYRsn_BadSearch                bit(32) constant('00000813'X) 00938000
*   ,ISGQUERYRsn_BadENQTokenAddress       bit(32) constant('00000814'X) 00939000
*   ,ISGQUERYRsn_BadENQTokenALET          bit(32) constant('00000815'X) 00940000
*   ,ISGQUERYRsn_BadQNameMatch            bit(32) constant('00000816'X) 00941000
*   ,ISGQUERYRsn_BadRNameMatch            bit(32) constant('00000817'X) 00942000
*   ,ISGQUERYRsn_BadScope                 bit(32) constant('00000818'X) 00943000
*   ,ISGQUERYRsn_BadSerializeBy           bit(32) constant('00000819'X) 00944000
*   ,ISGQUERYRsn_AnsLenTooSmall           bit(32) constant('0000081A'X) 00945000
*   ,ISGQUERYRsn_ResumeTokenNotValid      bit(32) constant('0000081B'X) 00946000
*   ,ISGQUERYRsn_ResumeTokenTooOld        bit(32) constant('0000081C'X) 00947000
*   ,ISGQUERYRsn_ENQTokenNotValid         bit(32) constant('0000081D'X) 00948000
*   ,ISGQUERYRsn_BadRequesterLimit        bit(32) constant('0000081E'X) 00949000
*   ,ISGQUERYRsn_NoPossibleMatch          bit(32) constant('0000081F'X) 00950000
*   ,ISGQUERYRsn_BadAnsDetail             bit(32) constant('00000820'X) 00951000
*   ,ISGQUERYRsn_NotAuthToQscan           bit(32) constant('00000821'X) 00952000
*   ,ISGQUERYRsn_BadASID                  bit(32) constant('00000822'X) 00953000
*   ,ISGQUERYRsn_BadUserDataAddress       bit(32) constant('00000823'X) 00954000
*   ,ISGQUERYRsn_BadUserDataAlet          bit(32) constant('00000824'X) 00955000
*   ,ISGQUERYRsn_BadUserDataLen           bit(32) constant('00000825'X) 00956000
*   ,ISGQUERYRsn_BadUserDataMatch         bit(32) constant('00000826'X) 00957000
*   ,ISGQUERYRsn_BadAnalyze               bit(32) constant('00000827'X) 00958000
*   ,ISGQUERYRsn_NotAuthToLatchEca        bit(32) constant('00000828'X) 00959000
*   ,ISGQUERYRc_EnvError                  bit(32) constant('0000000C'X) 00960000
*   ,ISGQUERYRsn_SrbMode                  bit(32) constant('00000C01'X) 00961000
*   ,ISGQUERYRsn_NotEnabled               bit(32) constant('00000C02'X) 00962000
*   ,ISGQUERYRsn_ComplexMigrating         bit(32) constant('00000C03'X) 00963000
*   ,ISGQUERYRsn_CannotObtainLocks        bit(32) constant('00000C04'X) 00964000
*   ,ISGQUERYRsn_LockHeld                 bit(32) constant('00000C05'X) 00965000
*   ,ISGQUERYRsn_MaxConcurrentRequests    bit(32) constant('00000C06'X) 00966000
*   ,ISGQUERYRsn_RingResumeInStar         bit(32) constant('00000C07'X) 00967000
*   ,ISGQUERYRsn_InsufficientStorage      bit(32) constant('00000C08'X) 00968000
*   ,ISGQUERYRsn_FRRHeld                  bit(32) constant('00000C09'X) 00969000
*   ,ISGQUERYRc_CompError                 bit(32) constant('00000010'X) 00970000
*   ;                                                         /* @LBC*/ 00971000
*                                                                       00972000
*/* ISGENQ Return and Reason Codes                               @L4A*/ 00973000
*                                                                       00974000
*/* (Note that the reason codes are of the form "xxxxYYYY" where        00975000
*    "xxxx" is used to contain the module id of the failing module.     00976000
*    Module ids can be found in ISGYMT or ISGFID)                       00977000
*    Use ISGRsnCodeMask to remove the module id from the reason codes   00978000
*                                                                @P8C*/ 00979000
* DCL                                                                   00980000
*    ISGENQRc_OK                          bit(32) constant('00000000'X) 00981000
*   ,ISGENQRc_Warn                        bit(32) constant('00000004'X) 00982000
*   ,ISGENQRsn_NonZeroReturnCodes         bit(32) constant('00000401'X) 00983000
*   ,ISGENQRsn_RequestNotProcessed        bit(32) constant('00000402'X) 00984000
*   ,ISGENQRsn_ECBWillBePosted            bit(32) constant('00000403'X) 00985000
*   ,ISGENQRsn_NotImmediatelyAvailable    bit(32) constant('00000404'X) 00986000
*   ,ISGENQRsn_TaskOwnsExclusive          bit(32) constant('00000405'X) 00987000
*   ,ISGENQRsn_TaskOwnsShared             bit(32) constant('00000406'X) 00988000
*   ,ISGENQRsn_TaskWaiting                bit(32) constant('00000407'X) 00989000
*   ,ISGENQRsn_OtherSharedOwners          bit(32) constant('00000409'X) 00990000
*   ,ISGENQRsn_TaskDoesNotOwn             bit(32) constant('0000040A'X) 00991000
*   ,ISGENQRsn_TaskSuspendedForResource   bit(32) constant('0000040B'X) 00992000
*   ,ISGENQRsn_UnprotectedQName           bit(32) constant('0000040D'X) 00993000
*   ,ISGENQRsn_UnprotectedExitQName       bit(32) constant('0000040E'X) 00994000
*   ,ISGENQRsn_ECBAtleastOneRequestFailed bit(32) constant('0000040F'X) 00995000
*   ,ISGENQRc_ParmError                   bit(32) constant('00000008'X) 00996000
*   ,ISGENQRsn_BadPlistAddress            bit(32) constant('00000801'X) 00997000
*   ,ISGENQRsn_BadPlistALET               bit(32) constant('00000802'X) 00998000
*   ,ISGENQRsn_BadPlistVersion            bit(32) constant('00000803'X) 00999000
*   ,ISGENQRsn_ReservedFieldNotNull       bit(32) constant('00000804'X) 01000000
*   ,ISGENQRsn_MutuallyExclusive          bit(32) constant('00000805'X) 01001000
*   ,ISGENQRsn_BadRequest                 bit(32) constant('00000806'X) 01002000
*   ,ISGENQRsn_BadContentionAct           bit(32) constant('00000807'X) 01003000
*   ,ISGENQRsn_BadOwningTToken            bit(32) constant('00000808'X) 01004000
*   ,ISGENQRsn_BadAnsAreaAddress          bit(32) constant('00000809'X) 01005000
*   ,ISGENQRsn_BadAnsAreaALET             bit(32) constant('0000080A'X) 01006000
*   ,ISGENQRsn_AnsLenTooSmall             bit(32) constant('0000080B'X) 01007000
*   ,ISGENQRsn_BadRNameAddress            bit(32) constant('0000080C'X) 01008000
*   ,ISGENQRsn_BadRNameALET               bit(32) constant('0000080D'X) 01009000
*   ,ISGENQRsn_BadRNameLen                bit(32) constant('0000080E'X) 01010000
*   ,ISGENQRsn_BadScope                   bit(32) constant('0000080F'X) 01011000
*   ,ISGENQRsn_BadUCB@                    bit(32) constant('00000810'X) 01012000
*   ,ISGENQRsn_BadCond                    bit(32) constant('00000811'X) 01013000
*   ,ISGENQRsn_BadSynchRes                bit(32) constant('00000812'X) 01014000
*   ,ISGENQRsn_BadENQTokenAddress         bit(32) constant('00000813'X) 01015000
*   ,ISGENQRsn_BadENQTokenALET            bit(32) constant('00000814'X) 01016000
*   ,ISGENQRsn_BadENQToken                bit(32) constant('00000815'X) 01017000
*   ,ISGENQRsn_BadNumRes                  bit(32) constant('00000816'X) 01018000
*   ,ISGENQRsn_BadResTableAddress         bit(32) constant('00000817'X) 01019000
*   ,ISGENQRsn_BadResTableALET            bit(32) constant('00000818'X) 01020000
*   ,ISGENQRsn_BadResTable                bit(32) constant('00000819'X) 01021000
*   ,ISGENQRsn_BadENQTokenTblAddress      bit(32) constant('0000081A'X) 01022000
*   ,ISGENQRsn_BadENQTokenTblALET         bit(32) constant('0000081B'X) 01023000
*   ,ISGENQRsn_BadReturnTableAddress      bit(32) constant('0000081C'X) 01024000
*   ,ISGENQRsn_BadReturnTableALET         bit(32) constant('0000081D'X) 01025000
*   ,ISGENQRsn_NotAuthorizedForQName      bit(32) constant('0000081E'X) 01026000
*   ,ISGENQRsn_NotAuthorizedForExitQName  bit(32) constant('0000081F'X) 01027000
*   ,ISGENQRsn_NotAuthorizedForECB        bit(32) constant('00000820'X) 01028000
*   ,ISGENQRsn_NotAuthorizedForOWNINGTTOKEN                             01029000
*                                         bit(32) constant('00000821'X) 01030000
*   ,ISGENQRsn_BadUserDataAddress         bit(32) constant('00000822'X) 01031000
*   ,ISGENQRsn_BadUserDataAlet            bit(32) constant('00000823'X) 01032000
*   ,ISGENQRsn_DeviceNotAllocated         bit(32) constant('00000824'X) 01033000
*   ,ISGENQRsn_ExitDeviceNotAllocated     bit(32) constant('00000825'X) 01034000
*   ,ISGENQRsn_BadControl                 bit(32) constant('00000826'X) 01035000
*   ,ISGENQRsn_BadExitUCB@                bit(32) constant('00000827'X) 01036000
*   ,ISGENQRsn_NotAuthorizedForENQMAX     bit(32) constant('00000828'X) 01037000
*   ,ISGENQRc_EnvError                    bit(32) constant('0000000C'X) 01038000
*   ,ISGENQRsn_RequestLimitExceeded       bit(32) constant('00000C01'X) 01039000
*   ,ISGENQRsn_AbendInExit                bit(32) constant('00000C05'X) 01040000
*   ,ISGENQRsn_TaskEnding                 bit(32) constant('00000C0A'X) 01041000
*   ,ISGENQRsn_FRRHeld                    bit(32) constant('00000C0B'X) 01042000
*   ,ISGENQRsn_LockHeld                   bit(32) constant('00000C0C'X) 01043000
*   ,ISGENQRsn_SrbMode                    bit(32) constant('00000C0D'X) 01044000
*   ,ISGENQRsn_NotEnabled                 bit(32) constant('00000C0E'X) 01045000
*   ,ISGENQRsn_MasidTarget                bit(32) constant('00000C0F'X) 01046000
*   ,ISGENQRsn_UnsupportedMode            bit(32) constant('00000C10'X) 01047000
*   ,ISGENQRsn_MasidNotSupported          bit(32) constant('00000C11'X) 01048000
*   ,ISGENQRc_CompError                   bit(32) constant('00000010'X) 01049000
*   ,ISGENQRsn_CannotObtainHomeStorage    bit(32) constant('00001002'X) 01050000
*   ,ISGENQRsn_CannotObtainCommonStorage  bit(32) constant('00001003'X) 01051000
*   ,ISGENQRsn_CannotObtainPrimaryAlet    bit(32) constant('00001004'X) 01052000
*   ,ISGENQRsn_SynchResFlushFailed        bit(32) constant('00001006'X) 01053000
*   ,ISGENQRsn_ReserveStartFailed         bit(32) constant('00001007'X) 01054000
*   ,ISGENQRsn_ReserveCountOverflow       bit(32) constant('00001008'X) 01055000
*   ,ISGENQRsn_CannotObtainDSQE           bit(32) constant('00001009'X) 01056000
*   ,ISGENQRsn_ReserveDoneFailed          bit(32) constant('0000100A'X) 01057000
*   ,ISGENQRsn_CannotObtainPrimaryStorage bit(32) constant('0000100B'X) 01058000
*   ;                                                         /* @LCC*/ 01059000
*                                                                       01060000
*/* ISGADMIN Return and Reason Codes                             @L6A*/ 01061000
*                                                                       01062000
*/* (Note that the reason codes are of the form "xxxxYYYY" where        01063000
*    "xxxx" is used to contain the module id of the failing module.     01064000
*    Module ids can be found in ISGYMT or ISGFID)                       01065000
*    Use ISGRsnCodeMask to remove the module id from the reason codes   01066000
*                                                                @P8C*/ 01067000
* DCL                                                                   01068000
*  ISGADMINRc_OK                          bit(32) constant('00000000'X) 01069000
* ,ISGADMINRc_Warn                        bit(32) constant('00000004'X) 01070000
* ,ISGADMINRsn_ENQMaxValueLow             bit(32) constant('00000401'X) 01071000
* ,ISGADMINRsn_ResetENQMaxIgnored         bit(32) constant('00000402'X) 01072000
* ,ISGADMINRc_ParmError                   bit(32) constant('00000008'X) 01073000
* ,ISGADMINRsn_BadPlistAddress            bit(32) constant('00000801'X) 01074000
* ,ISGADMINRsn_BadPlistALET               bit(32) constant('00000802'X) 01075000
* ,ISGADMINRsn_BadPlistVersion            bit(32) constant('00000803'X) 01076000
* ,ISGADMINRsn_ReservedFieldNotNull       bit(32) constant('00000804'X) 01077000
* ,ISGADMINRsn_BadRequest                 bit(32) constant('00000805'X) 01078000
* ,ISGADMINRsn_ENQMaxValueTooLow          bit(32) constant('00000806'X) 01079000
* ,ISGADMINRsn_BadMovingWaiterAddress     bit(32) constant('00000807'X) 01080000
* ,ISGADMINRsn_BadMovingWaiterAlet        bit(32) constant('00000808'X) 01081000
* ,ISGADMINRsn_BadMovingWaiter            bit(32) constant('00000809'X) 01082000
* ,ISGADMINRsn_BadBeforeRequesterAddress  bit(32) constant('0000080A'X) 01083000
* ,ISGADMINRsn_BadBeforeRequesterAlet     bit(32) constant('0000080B'X) 01084000
* ,ISGADMINRsn_BadBeforeRequester         bit(32) constant('0000080C'X) 01085000
* ,ISGADMINRsn_SameRequester              bit(32) constant('0000080D'X) 01086000
* ,ISGADMINRsn_InconsistentResource       bit(32) constant('0000080E'X) 01087000
* ,ISGADMINRsn_BadScope                   bit(32) constant('0000080F'X) 01088000
* ,ISGADMINRsn_BadControl                 bit(32) constant('00000810'X) 01089000
* ,ISGADMINRsn_CannotMoveOwner            bit(32) constant('00000811'X) 01090000
* ,ISGADMINRsn_AlreadyBeforeRequester     bit(32) constant('00000812'X) 01091000
* ,ISGADMINRsn_CannotMoveBeforeOwner      bit(32) constant('00000813'X) 01092000
* ,ISGADMINRsn_CannotMoveAfterSharedOwner bit(32) constant('00000814'X) 01093000
* ,ISGADMINRsn_CannotMakeAnotherOwner     bit(32) constant('00000815'X) 01094000
* ,ISGADMINRsn_AlreadyLastRequester       bit(32) constant('00000816'X) 01095000
* ,ISGADMINRsn_CannotMoveMasidUser        bit(32) constant('00000817'X) 01096000
* ,ISGADMINRsn_MasidControlConflict       bit(32) constant('00000818'X) 01097000
* ,ISGADMINRc_EnvError                    bit(32) constant('0000000C'X) 01098000
* ,ISGADMINRsn_NotAuthorized              bit(32) constant('00000C01'X) 01099000
* ,ISGADMINRsn_FRRHeld                    bit(32) constant('00000C02'X) 01100000
* ,ISGADMINRsn_LockHeld                   bit(32) constant('00000C03'X) 01101000
* ,ISGADMINRsn_SrbMode                    bit(32) constant('00000C04'X) 01102000
* ,ISGADMINRsn_NotEnabled                 bit(32) constant('00000C05'X) 01103000
* ,ISGADMINRsn_QueueDamage1               bit(32) constant('00000C06'X) 01104000
* ,ISGADMINRsn_QueueDamage2               bit(32) constant('00000C07'X) 01105000
* ,ISGADMINRc_CompError                   bit(32) constant('00000010'X) 01106000
* ;                                                           /* @L9C*/ 01107000
*                                                                       01108000
*/********************************************************************/ 01109000
*/* Declares for ENQMAXx values in GRSCNFxx, SETGRS, and ISGADMIN:   */ 01110000
*/* These are smallest possible maximums for authorized and          */ 01111000
*/* unauthorized requesters, to help prevent the installation        */ 01112000
*/* from inadvertently causing excessive ABEND538s.              @L6A*/ 01113000
*/********************************************************************/ 01114000
*dcl ENQMAXA_SmallestMaximum fixed(31) constant(250000);      /* @L6A*/ 01115000
*dcl ENQMAXU_SmallestMaximum fixed(31) constant(16384);       /* @L6A*/ 01116000
*                                                                       01117000
* @LOGIC;                                                               01118000
* #PRAGMA TOOL=CBGEN.                                                   01119000
* #USEORG.                                                              01120000
* #EPRAGMA.                                                             01121000
* @ENDLOGIC;                                                            01122000
*/* End of PL/X Source                                               */ 01123000
* %IF ISGYCON_LIST ^= 'NO' &                                            01124000
*    ZCBPRINT ^= 'NO' %THEN                                             01125000
*   %GOTO ISGYCON_4;                                                    01126000
*   @LIST POP NOECHO;                                                   01127000
* %ISGYCON_4:;                                                          01128000
* %END;                                                                 01129000
