*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4TAF                               -07/07/31-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Temporal Affinity Service                 * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 2004, 2008                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7750                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWM4TAF service should be used to inform WLM when a        * 00002100
*      temporal affinity for a specific server region starts and when * 00002200
*      it ends. WLM will ensure that server regions will not be       * 00002300
*      terminated as long as temporal affinities exist.               * 00002400
*                                                                     * 00002500
*      The caller must have previously connected to WLM using the     * 00002600
*      IWM4CON as server or as queue manager.                         * 00002700
*                                                                     * 00002800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002900
*                                                                     * 00003000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003100
*                                                                     * 00003200
*01* ENVIRONMENT:                                                     * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00003600
*                        key.                                         * 00003700
*                                                                     * 00003800
*      Dispatchable unit mode: Task mode.                             * 00003900
*                                                                     * 00004000
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00004100
*                                                                     * 00004200
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00004300
*                        mode, code SYSSTATE AMODE64=YES before       * 00004400
*                        invoking this macro.                         * 00004500
*                                                                     * 00004600
*      ASC mode:         Primary.                                     * 00004700
*                                                                     * 00004800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004900
*                                                                     * 00005000
*      Locks:            No locks held.                               * 00005100
*                                                                     * 00005200
*      Control parameters: Control parameters must be in the primary  * 00005300
*                        address space.                               * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*01* PROGRAMMING REQUIREMENTS:                                        * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*    1.  Make sure no EUT FRRs are established.                       * 00006100
*                                                                     * 00006200
*    2.  The macro CVT must be included to use this macro.            * 00006300
*                                                                     * 00006400
*    3.  The macro IWMYCON must be included to use this macro.        * 00006500
*                                                                     * 00006600
*    4.  The macro IWMPB must be in the library concatenation, since  * 00006700
*        it is included by IWMYCON.                                   * 00006800
*                                                                     * 00006900
*    5.  Note that the high order halfword of register 0, and the     * 00007000
*        reason code variable when specified, may be non-zero and     * 00007100
*        represents diagnostic data which is NOT part of the external * 00007200
*        interface.  The high order halfword should thus be excluded  * 00007300
*        from comparison with the reason code values described above. * 00007400
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007500
*        be used for this purpose.                                    * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*01* RESTRICTIONS:                                                    * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*    1.  The PL/X  version of the macro needs the EPILOG macro to be  * 00008300
*        included.                                                    * 00008400
*                                                                     * 00008500
*    2.  This macro may not be used during task/address space         * 00008600
*        termination.                                                 * 00008700
*                                                                     * 00008800
*    3.  Before using this macro the caller must connect to WLM via   * 00008900
*        IWM4CON Server_Manager=YES, Server_Type=Queue or IWM4CON     * 00009000
*        Queue_Manager=YES.                                           * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*01* INPUT REGISTER INFORMATION:                                      * 00009500
*                                                                     * 00009600
*    Before issuing the IWM4TAF macro, the caller does not have to    * 00009700
*    place any information into any register unless using it in       * 00009800
*    register notation for a particular parameter, or using it as a   * 00009900
*    base register.                                                   * 00010000
*                                                                     * 00010100
*01* OUTPUT REGISTER INFORMATION:                                     * 00010200
*                                                                     * 00010300
*    When control returns to the caller, the GPRs contain:            * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*    REGISTER  CONTENTS                                               * 00010700
*                                                                     * 00010800
*    0         Reason code if GR15 return code is non-zero            * 00010900
*                                                                     * 00011000
*    1         Used as work registers by the system                   * 00011100
*                                                                     * 00011200
*    2-13      Unchanged                                              * 00011300
*                                                                     * 00011400
*    14        Used as work registers by the system                   * 00011500
*                                                                     * 00011600
*    15        Return code                                            * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*    When control returns to the caller, the ARs contain:             * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*    REGISTER  CONTENTS                                               * 00012400
*                                                                     * 00012500
*    0-1       Used as work registers by the system                   * 00012600
*                                                                     * 00012700
*    2-13      Unchanged                                              * 00012800
*                                                                     * 00012900
*    14-15     Used as work registers by the system                   * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*    Some callers depend on register contents remaining the same      * 00013400
*    before and after issuing a service.  If the system changes the   * 00013500
*    contents of registers on which the caller depends, the caller    * 00013600
*    must save them before issuing the service, and restore them      * 00013700
*    after the system returns control.                                * 00013800
*                                                                     * 00013900
*01* PERFORMANCE IMPLICATIONS:                                        * 00014000
*                                                                     * 00014100
*    None                                                             * 00014200
*                                                                     * 00014300
*01* SYNTAX:                                                          * 00014400
*                                                                     * 00014500
*Ýxlabel¨  IWM4TAF  Ð  AFFINITY=YES                                   * 00014600
*                   ¿ ,AFFINITY=NO                                    * 00014700
*                    Ý,REGION_TOKEN=»xregion_token!0º¨                * 00014800
*                    Ý,RETCODE=xretcode¨                              * 00014900
*                    Ý,RSNCODE=xrsncode¨                              * 00015000
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00015100
*                   ÐÝ,MF=S¨                                          * 00015200
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00015300
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*      Where:                                                         * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*      Ýxlabel¨                                                       * 00016000
*          is an optional symbol, starting in column 1, that is the   * 00016100
*          name on the IWM4TAF macro invocation.  The name must       * 00016200
*          conform to the rules for an ordinary assembler language    * 00016300
*          symbol.                                                    * 00016400
*          DEFAULT: No name.                                          * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*      AFFINITY=»YES!NOº                                              * 00017000
*          is a required keyword input indicating whether a temporal  * 00017100
*          affinity begins or ends                                    * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*          AFFINITY=YES                                               * 00017500
*              A new temporal affinity for the server region begins.  * 00017600
*              WLM will ensure that the server regions is not         * 00017700
*              terminated before all temporal affinity have ended.    * 00017800
*                                                                     * 00017900
*          AFFINITY=NO                                                * 00018000
*              A temporal affinity for the server region has ended.   * 00018100
*              WLM will start to terminate server regions if all      * 00018200
*              temporal affinities have ended.                        * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*      ÝREGION_TOKEN=»xregion_token!0º¨                               * 00019000
*          is the name (RS-type), or address in register (2)-(12), of * 00019100
*          an optional 16 character input which contains the region   * 00019200
*          token.  The region token is not required if the macro is   * 00019300
*          invoked from the server region for which the temporal      * 00019400
*          affinity should be started or stopped. The region token    * 00019500
*          must be used if the services is used from the queueing     * 00019600
*          manager.  The region token is returned by the IWM4SSL      * 00019700
*          macro.                                                     * 00019800
*                                                                     * 00019900
*          The caller must be supervisor state or have PSW key mask   * 00020000
*          0-7 authority to use this service with the REGION_TOKEN    * 00020100
*          parameter.                                                 * 00020200
*                                                                     * 00020300
*          Coding REGION_TOKEN=0 is equivalent to omitting the        * 00020400
*          REGION_TOKEN keyword.                                      * 00020500
*          DEFAULT: 0                                                 * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*      ÝRETCODE=xretcode¨                                             * 00021100
*          is the name (RS-type) of an optional fullword output       * 00021200
*          variable, or register (2)-(12) or (15), into which the     * 00021300
*          return code is to be copied from GPR 15.  If you specify   * 00021400
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00021500
*          the value will be left in GPR 15.                          * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*      ÝRSNCODE=xrsncode¨                                             * 00022100
*          is the name (RS-type) of an optional fullword output       * 00022200
*          variable into which the reason code is to be copied from   * 00022300
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00022400
*          R0 (within or without parentheses), the value will be left * 00022500
*          in GPR 0.                                                  * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00023100
*          is an optional byte input decimal value in the "0-0" range * 00023200
*          that specifies the macro version.  PLISTVER is the only    * 00023300
*          key allowed on the list form of MF and determines which    * 00023400
*          parameter list is generated.  Note that MAX may be         * 00023500
*          specified instead of a number, and the parameter list will * 00023600
*          be of the largest size currently supported. This size may  * 00023700
*          grow from release to release (thus possibly affecting the  * 00023800
*          amount of storage needed by your program).  If your        * 00023900
*          program can tolerate this, IBM recommends that you always  * 00024000
*          specify MAX when creating the list form parameter list as  * 00024100
*          that will ensure that the list form parameter list is      * 00024200
*          always long enough to hold whatever parameters might be    * 00024300
*          specified on the execute form.                             * 00024400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00024500
*          default is the lowest version which allows all of the      * 00024600
*          parameters specified on the invocation to be processed.    * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*      ÝMF=»S!L!Eº¨                                                   * 00025200
*          is an optional keyword input which specifies the macro     * 00025300
*          form.                                                      * 00025400
*          DEFAULT: S                                                 * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*          ÝMF=S¨                                                     * 00025800
*              specifies the standard form of the macro.  The "S"     * 00025900
*              form generates code to put the parameters into an      * 00026000
*              in-line parameter list and invoke the desired service. * 00026100
*              Full checking for required macro keys is done along    * 00026200
*              with supplying defaults for omitted optional           * 00026300
*              parameters.                                            * 00026400
*                                                                     * 00026500
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00026600
*              specifies the list form of the macro.  The "L" form    * 00026700
*              defines an area to be used for the parameter list.     * 00026800
*              Only the PLISTVER key may be specified on the          * 00026900
*              invocation.  All other macro parameters are flagged as * 00027000
*              errors.  If PLISTVER is not specified, the original    * 00027100
*              parameter list definition is used.                     * 00027200
*                                                                     * 00027300
*            ,xmfctrl                                                 * 00027400
*              is a required input.  It is the name of a storage area * 00027500
*              for the parameter list.                                * 00027600
*                                                                     * 00027700
*            »,xmfattr!0Dº                                            * 00027800
*              is an optional 60 character input string that varies   * 00027900
*              from 1 to 60 characters. Use it to force boundary      * 00028000
*              alignment of the parameter list. Use only 0F or 0D.    * 00028100
*              DEFAULT: 0D which forces the parameter list to a       * 00028200
*              doubleword boundary.                                   * 00028300
*                                                                     * 00028400
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00028500
*              specifies the execute form of the macro.  The "E" form * 00028600
*              generates code to put the parameters into the          * 00028700
*              parameter list specified by xmfctrl and provides full  * 00028800
*              syntax checking with default setting.                  * 00028900
*                                                                     * 00029000
*            ,xmfctrl                                                 * 00029100
*              is a required input.  It is the name (RS-type), or     * 00029200
*              address in register (1)-(12), of a storage area for    * 00029300
*              the parameter list.                                    * 00029400
*                                                                     * 00029500
*            »,COMPLETEº                                              * 00029600
*              is an optional keyword input which specifies the       * 00029700
*              degree of macro parameter syntax checking.             * 00029800
*              DEFAULT: COMPLETE                                      * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*              COMPLETE                                               * 00030200
*                  Checking for required macro keys is done and       * 00030300
*                  defaults are supplied for omitted optional         * 00030400
*                  parameters.                                        * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*01* ABEND CODES:  None.                                              * 00031300
*                                                                     * 00031400
*01* RETURN CODES:                                                    * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*            0    Name: IwmRetCodeOk                                  * 00031800
*                                                                     * 00031900
*                 Meaning: Successful completion.                     * 00032000
*                                                                     * 00032100
*                 Action: None required.                              * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*            4    Name: IwmRetCodeWarning                             * 00032500
*                                                                     * 00032600
*                 Meaning: Successful completion, unusual conditions  * 00032700
*                 noted.                                              * 00032800
*                                                                     * 00032900
*                 Action: None required.                              * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                 HEX REASON  MEANING/ACTION                          * 00033400
*                 CODE                                                * 00033500
*                                                                     * 00033600
*                 xxxx0439    Name: IwmRsnCodeNoAffinityFound         * 00033700
*                                                                     * 00033800
*                             Meaning: The service has been invoked   * 00033900
*                             to tell WLM that an existing server     * 00034000
*                             region affinity has been terminated but * 00034100
*                             WLM has no affinity defined for this    * 00034200
*                             server region.                          * 00034300
*                                                                     * 00034400
*                             Action: If region token was not         * 00034500
*                             specified make sure to use the service  * 00034600
*                             properly at the beginning and end of    * 00034700
*                             each affinity.  If the region token has * 00034800
*                             been defined make sure that it is used  * 00034900
*                             for the correct server region.          * 00035000
*                                                                     * 00035100
*                 xxxx043A    Name: IwmRsnCodeRegionNotFound          * 00035200
*                                                                     * 00035300
*                             Meaning: The region token does not      * 00035400
*                             identify a valid server region.         * 00035500
*                                                                     * 00035600
*                             Action: Please specify the correct      * 00035700
*                             region token.                           * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*            8    Name: IwmRetCodeInvocError                          * 00036300
*                                                                     * 00036400
*                 Meaning: Invalid invocation environment or          * 00036500
*                 parameters.                                         * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                                                                     * 00036900
*                 HEX REASON  MEANING/ACTION                          * 00037000
*                 CODE                                                * 00037100
*                                                                     * 00037200
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00037300
*                                                                     * 00037400
*                             Meaning: Caller is in SRB mode.         * 00037500
*                                                                     * 00037600
*                             Action: Avoid requesting this function  * 00037700
*                             while in SRB mode.                      * 00037800
*                                                                     * 00037900
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00038000
*                                                                     * 00038100
*                             Meaning: Caller is disabled.            * 00038200
*                                                                     * 00038300
*                             Action: Avoid requesting this function  * 00038400
*                             while disabled.                         * 00038500
*                                                                     * 00038600
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00038700
*                                                                     * 00038800
*                             Meaning: Caller is locked.              * 00038900
*                                                                     * 00039000
*                             Action: Avoid requesting this function  * 00039100
*                             while locked.                           * 00039200
*                                                                     * 00039300
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00039400
*                                                                     * 00039500
*                             Meaning: Error accessing parameter      * 00039600
*                             list.                                   * 00039700
*                                                                     * 00039800
*                             Action: Check for possible storage      * 00039900
*                             overlay.                                * 00040000
*                                                                     * 00040100
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00040200
*                                                                     * 00040300
*                             Meaning: Caller invoked service but was * 00040400
*                             in 24 bit addressing mode.              * 00040500
*                                                                     * 00040600
*                             Action: Request this function only when * 00040700
*                             you are in 31 bit addressing mode.      * 00040800
*                                                                     * 00040900
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00041000
*                                                                     * 00041100
*                             Meaning: Caller invoked service but was * 00041200
*                             not in primary ASC mode.                * 00041300
*                                                                     * 00041400
*                             Action: Avoid requesting this function  * 00041500
*                             in this environment.                    * 00041600
*                                                                     * 00041700
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00041800
*                                                                     * 00041900
*                             Meaning: Reserved field in parameter    * 00042000
*                             list was not zero.                      * 00042100
*                                                                     * 00042200
*                             Action: Check for use of keywords that  * 00042300
*                             are not supported by the MVS release on * 00042400
*                             which the program is running.           * 00042500
*                                                                     * 00042600
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00042700
*                                                                     * 00042800
*                             Meaning: Version number in parameter    * 00042900
*                             list is not valid.                      * 00043000
*                                                                     * 00043100
*                             Action: Check for possible storage      * 00043200
*                             overlay of the parameter list.          * 00043300
*                                                                     * 00043400
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00043500
*                                                                     * 00043600
*                             Meaning: Caller's space connection is   * 00043700
*                             not enabled for this service.           * 00043800
*                                                                     * 00043900
*                             Action: Make sure that                  * 00044000
*                             SERVER_MANAGER=YES and                  * 00044100
*                             SERVER_TYPE=QUEUE is specified on the   * 00044200
*                             IWM4CON request to enable this service. * 00044300
*                                                                     * 00044400
*                 xxxx0841    Name: IwmRsnCodeXmemMode                * 00044500
*                                                                     * 00044600
*                             Meaning: Caller is in cross-memory      * 00044700
*                             mode.                                   * 00044800
*                                                                     * 00044900
*                             Action: Request this function only when * 00045000
*                             you are not in cross-memory mode.       * 00045100
*                                                                     * 00045200
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00045300
*                                                                     * 00045400
*                             Meaning: Caller's space is not          * 00045500
*                             connected to WLM.                       * 00045600
*                                                                     * 00045700
*                             Action:  Invoke the IWM4CON macro       * 00045800
*                             before invoking this macro.             * 00045900
*                                                                     * 00046000
*                 xxxx084D    Name: IwmRsnCodeNotAuthConnect          * 00046100
*                                                                     * 00046200
*                             Meaning:  The caller must be supervisor * 00046300
*                             state or have PSW key mask 0-7          * 00046400
*                             authority to use the requested WLM      * 00046500
*                             service. This applies only if the       * 00046600
*                             caller provides a region token for a    * 00046700
*                             server address space for which it wants * 00046800
*                             to set the affinity.                    * 00046900
*                                                                     * 00047000
*                             Action: Avoid requesting this function  * 00047100
*                             in this environment.                    * 00047200
*                                                                     * 00047300
*                 xxxx08B1    Name: IwmRsnCodeTooManyTempAff          * 00047400
*                                                                     * 00047500
*                             Meaning: No more than 2 GB temporal     * 00047600
*                             affinities supported.                   * 00047700
*                                                                     * 00047800
*                             Action:  Avoid requesting more than 2   * 00047900
*                             GB temporal affinities to an address    * 00048000
*                             space.                                  * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                  address space                                      * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*            10   Name: IwmRetCodeCompError                           * 00048800
*                                                                     * 00048900
*                 Meaning: Component error.                           * 00049000
*                                                                     * 00049100
*                 Action: Contact your system programmer.             * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*                                                                     * 00049600
*01* REASON CODES:                                                    * 00049700
*                                                                     * 00049800
*       A unique reason code will be returned whenever the return     * 00049900
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00050000
*       under their corresponding return code.  Reason code and       * 00050100
*       return code constants are defined within IWMYCON.  Note that  * 00050200
*       the high order halfword of register 0, and the reason code    * 00050300
*       variable when specified, may be non-zero and represents       * 00050400
*       diagnostic data which is NOT part of the external interface.  * 00050500
*       The high order halfword should thus be excluded from          * 00050600
*       comparison with the reason code values described above.  The  * 00050700
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00050800
*       used for this purpose.                                        * 00050900
*                                                                     * 00051000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00051100
*                                                                     * 00051200
*02*   PROCESSOR:  ASSEM                                              * 00051300
*                                                                     * 00051400
*01* COMPONENT:  SCWLM                                                * 00051500
*                                                                     * 00051600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00051700
*                                                                     * 00051800
*01* EXAMPLES:                                                        * 00051900
*                                                                     * 00052000
*    To start a temporal affinity from the server region              * 00052100
*                                                                     * 00052200
*        IWM4TAF AFFINITY=YES                                         * 00052300
*                RETCODE=RC,                                          * 00052400
*                RSNCODE=RSN                                          * 00052500
*      *                                                              * 00052600
*      * Storage areas                                                * 00052700
*      *                                                              * 00052800
*      RC       DS    F               Return code                     * 00052900
*      RSN      DS    F               Reason code                     * 00053000
*                                                                     * 00053100
*                                                                     * 00053200
*01* MACRO USAGE NOTES:                                               * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00053600
*        global macro variable.  Any value other than 'NO' will       * 00053700
*        result in the macro expansion being printed.  The default is * 00053800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00053900
*        variable should be set.                                      * 00054000
*                                                                     * 00054100
*                    GBLC &ZPRINT                                     * 00054200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*    2.  All keys currently contained in the IWM4TAF macro correspond * 00054600
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00054700
*        MAX.                                                         * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*01* CHANGE ACTIVITY:                                                 * 00055300
*                                                                     * 00055400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00055500
*                                                                     * 00055600
*    $L0=WLMP64W  HBB7709 030315 3241NN:  WLM 64-bit support copied   * 00055700
*                                         from IWMTAFF  with flag L1  * 00055800
*    $L2=ME09974  HBB7750 070731 3241AB:  Introduce new reason code   * 00055900
*                                         IWMRSNCODETooManyTempAff    * 00056000
*                                         with flag L2                * 00056100
****** END OF SPECIFICATIONS *****************************************/ 00056200
*/********************************************************************* 00056300
         MACRO                                                          00056400
&XLABEL  IWM4TAF &AFFINITY=,&REGION_TOKEN=,&RETCODE=,&RSNCODE=,        *00056500
               &PLISTVER=,&MF=                                          00056600
.*                                                                      00056700
*                  MACDATE -07/07/31-<0>                                00056800
.*                                                                      00056900
.*******************************************************************    00057000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00057100
.*******************************************************************    00057200
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00057300
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00057400
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00057500
.*                                                                      00057600
                  GBLC  &ZIWM4TAF   YES=MACRO USED AT LEAST ONCE        00057700
.*******************************************************************    00057800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00057900
.*******************************************************************    00058000
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00058100
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00058200
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00058300
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00058400
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00058500
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00058600
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00058700
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00058800
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00058900
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00059000
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00059100
                  LCLC  &ZMAC_G     "G" or null                         00059200
&ZMAC_G           SETC  ''                                              00059300
                  LCLC  &ZMAC_LR                                        00059400
&ZMAC_LR          SETC  'LR'                                            00059500
                  LCLC  &ZMAC_L                                         00059600
&ZMAC_L           SETC  'L'                                             00059700
                  LCLC  &ZMAC_ST                                        00059800
&ZMAC_ST          SETC  'ST'                                            00059900
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00060000
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00060100
.*                                                                      00060200
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00060300
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00060400
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00060500
                  LCLC  &ZENDBASEPL             End of base PL          00060600
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00060700
.*******************************************************************    00060800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00060900
.*******************************************************************    00061000
                  LCLA  &ZI         INDEX FOR ARRAY                     00061100
                  LCLA  &ZJ         INDEX FOR PARMS                     00061200
                  LCLA  &ZK         INDEX FOR PARSE                     00061300
                  LCLA  &ZLO        LOW RANGE VALUE                     00061400
                  LCLA  &ZHI        HIGH RANGE VALUE                    00061500
                  LCLC  &ZW         WORK AREA FOR PARM                  00061600
.********************************************************************   00061700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00061800
.********************************************************************   00061900
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00062000
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00062100
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00062200
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00062300
.*                                                                      00062400
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00062500
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00062600
                  SPLEVEL  TEST                                         00062700
.ZSYS2            ANOP  ,                                               00062800
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00062900
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00063000
                  SYSSTATE TEST                                         00063100
&ZMAC_G           SETC 'G'                                              00063200
&ZMAC_LR          SETC 'LGR'                                            00063300
&ZMAC_L           SETC 'LG'                                             00063400
&ZMAC_ST          SETC 'STG'                                            00063500
                  AGO   .ZSYS4                                          00063600
.ZSYS3            ANOP  ,                                               00063700
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00063800
.ZSYS4            ANOP  ,                                               00063900
.*******************************************************************    00064000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00064100
.*******************************************************************    00064200
                  LCLC  &XAFFINITY  ++ VALUE                            00064300
                  LCLC  &XREGION_TOKEN          ++ NAME                 00064400
                  LCLC  &XRETCODE   ++ NAME                             00064500
                  LCLC  &XRSNCODE   ++ NAME                             00064600
                  LCLA  &XPLISTVER  ++ VALUE                            00064700
                  LCLC  &XMF        ++ VALUE                            00064800
                  LCLC  &XMFCTRL    ++ NAME                             00064900
                  LCLC  &XMFATTR    ++ VALUE                            00065000
                  LCLC  &XMFSCK     ++ VALUE                            00065100
.*******************************************************************    00065200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00065300
.*******************************************************************    00065400
                  LCLC  &ZXAFFINITY             ++ INPUT VALUE          00065500
                  LCLC  &ZXREGION_TOKEN         ++ INPUT NAME           00065600
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00065700
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00065800
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00065900
                  LCLC  &ZXMF       ++ INPUT VALUE                      00066000
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00066100
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00066200
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00066300
.********************************************************************   00066400
.***AC.PLV01  PROCESS PLISTVER                                      *   00066500
.********************************************************************   00066600
&XPLISTVER      SETA  0                                                 00066700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00066800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00066900
&XPLISTVER      SETA  0                                                 00067000
.ZPLV0          ANOP  ,                                                 00067100
.*                                                                      00067200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00067300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00067400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00067500
.*-------------------------------------------------------------------   00067600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00067700
&ZMS            SETC  '"PLISTVER='                                      00067800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00067900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00068000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00068100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00068200
                AGO   .ZPVCK2                                           00068300
.ZPVCK3         ANOP  ,                                                 00068400
.*-------------------------------------------------------------------   00068500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00068600
&ZMS            SETC  '"PLISTVER='                                      00068700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00068800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00068900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00069000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00069100
                AGO   .ZPVCKE                                           00069200
.ZPVCK2         ANOP  ,                                                 00069300
.*-------------------------------------------------------------------   00069400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00069500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00069600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00069700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00069800
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00069900
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00070000
.ZPVCK6         ANOP  ,                                                 00070100
&ZMS            SETC  '"PLISTVER='                                      00070200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00070300
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00070400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00070500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00070600
&XPLISTVER      SETA  0                                                 00070700
                AGO   .ZPVCKE                                           00070800
.*-------------------------------------------------------------------   00070900
.ZPVCK4A        ANOP  ,                                                 00071000
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00071100
&ZMS            SETC  'PLISTVER='                                       00071200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00071300
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00071400
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00071500
                MNOTE 8,' &ZMS IS REQUIRED.'                            00071600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00071700
                AGO   .ZPVCK5                                           00071800
.ZPVCK4         ANOP  ,                                                 00071900
&XPLISTVER      SETA  &PLISTVER(1)                                      00072000
.ZPVCK5         ANOP  ,                                                 00072100
.ZPVCKE         ANOP  ,                                                 00072200
.********************************************************************   00072300
.***AG.MF01 PROCESS MF MACRO FORMS                                      00072400
.********************************************************************   00072500
                  ACTR  10000                                           00072600
.*------------------------------------------------------------------    00072700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00072800
&XMF              SETC  ''          INITIALIZE XVARIABLE                00072900
.*-------------------------------------------------------------------   00073000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073100
.ZG20             ANOP  ,                                               00073200
&ZTLC             SETC 'S'                                              00073300
                  AIF   ('&MF(1)' NE '&ZTLC').ZG21                      00073400
&XMF              SETC  'S'         SET KEYWORD                         00073500
                  AIF   (N'&MF LE 1).ZG20A      CK NUM                  00073600
&ZMS              SETC  '"MF='                                          00073700
&ZMS              SETC  '&ZMS.&MF"'                                     00073800
&ZMS              SETC  '&ZMS "MF"'                                     00073900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00074000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00074100
.ZG20A            ANOP  ,                                               00074200
.*-------------------------------------------------------------------   00074300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074400
.ZG21             ANOP  ,                                               00074500
&ZTLC             SETC 'L'                                              00074600
                  AIF   ('&MF(1)' NE '&ZTLC').ZG28                      00074700
&XMF              SETC  'L'         SET KEYWORD                         00074800
                  AIF   (N'&MF LE 3).ZG21A      CK NUM                  00074900
&ZMS              SETC  '"MF='                                          00075000
&ZMS              SETC  '&ZMS.&MF"'                                     00075100
&ZMS              SETC  '&ZMS "MF"'                                     00075200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00075300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00075400
.ZG21A            ANOP  ,                                               00075500
.*-------------------------------------------------------------------   00075600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00075700
                  AIF   (N'&SYSLIST NE 0).ZG21B  POSITIONALS?           00075800
                  AIF   ('&AFFINITY' NE '').ZG21B  KEYS?                00075900
                  AIF   ('&REGION_TOKEN' NE '').ZG21B  KEYS?            00076000
                  AIF   ('&RETCODE' NE '').ZG21B  KEYS?                 00076100
                  AIF   ('&RSNCODE' NE '').ZG21B  KEYS?                 00076200
                  AGO    .ZG21C     INVOCATION OKAY                     00076300
.ZG21B            ANOP  ,                                               00076400
&ZMS              SETC  'THE "L" FORM OF "MF"'                          00076500
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00076600
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00076700
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00076800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00076900
.ZG21C            ANOP  ,                                               00077000
.*-------------------------------------------------------------------   00077100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00077200
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00077300
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00077400
                  AIF   (N'&MF(2) GT 1).ZG23B   MULTI PARMS             00077500
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00077600
.ZG23B            AIF   (K'&MF(2) GT 0).ZG23C                           00077700
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00077800
&ZMS              SETC  'WHEN "L" IS SPECIFIED'                         00077900
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00078000
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00078100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00078200
.ZG23C            ANOP  ,                                               00078300
.*-------------------------------------------------------------------   00078400
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00078500
                  AIF   (K'&ZXMFCTRL LE 0).ZG23P  NOT I/O               00078600
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG23P                  00078700
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00078800
&ZMS              SETC  '"MF='                                          00078900
&ZMS              SETC  '&ZMS.&MF"'                                     00079000
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00079100
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00079200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00079300
.ZG23P            ANOP  ,                                               00079400
.*-------------------------------------------------------------------   00079500
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00079600
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00079700
&XMFATTR          SETC  '0D'                                            00079800
                  AIF   (K'&MF(3) LE 0).ZG26B   PARM                    00079900
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00080000
                  AIF   (N'&MF(3) GT 1).ZG26B   MULTI                   00080100
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00080200
.ZG26B            ANOP  ,                                               00080300
.*-------------------------------------------------------------------   00080400
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00080500
                  AIF   (K'&ZXMFATTR LE 0).ZG26P  NOT I/O               00080600
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG26P                  00080700
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00080800
&ZMS              SETC  '"MF='                                          00080900
&ZMS              SETC  '&ZMS.&MF"'                                     00081000
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00081100
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00081200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00081300
.ZG26P            ANOP  ,                                               00081400
.*-------------------------------------------------------------------   00081500
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00081600
                  AIF   (K'&ZXMFATTR LE 0).ZG26S  NOT I/O               00081700
                  AIF   (K'&XMFATTR LE 60).ZG26S  LNG OK                00081800
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00081900
&ZMS              SETC  '"MF='                                          00082000
&ZMS              SETC  '&ZMS.&MF"'                                     00082100
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00082200
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00082300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00082400
.ZG26S            ANOP  ,                                               00082500
.*-------------------------------------------------------------------   00082600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00082700
.ZG28             ANOP  ,                                               00082800
&ZTLC             SETC 'E'                                              00082900
                  AIF   ('&MF(1)' NE '&ZTLC').ZG36                      00083000
&XMF              SETC  'E'         SET KEYWORD                         00083100
                  AIF   (N'&MF LE 3).ZG28A      CK NUM                  00083200
&ZMS              SETC  '"MF='                                          00083300
&ZMS              SETC  '&ZMS.&MF"'                                     00083400
&ZMS              SETC  '&ZMS "MF"'                                     00083500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00083600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00083700
.ZG28A            ANOP  ,                                               00083800
.*-------------------------------------------------------------------   00083900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00084000
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00084100
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00084200
                  AIF   (N'&MF(2) GT 1).ZG30B   MULTI PARMS             00084300
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00084400
.ZG30B            AIF   (K'&MF(2) GT 0).ZG30C                           00084500
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00084600
&ZMS              SETC  'WHEN "E" IS SPECIFIED'                         00084700
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00084800
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00084900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00085000
.ZG30C            ANOP  ,                                               00085100
.*-------------------------------------------------------------------   00085200
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00085300
                  AIF   (K'&ZXMFCTRL LE 0).ZG30R  NOT I/O               00085400
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG30R                  00085500
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00085600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                    00085700
                  AIF   (K'&ZCGPR GT 2).ZG30Q                           00085800
                  AIF   ('&ZCGPR' EQ '0').ZG30Q                         00085900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00086000
                  AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME       00086100
.ZG30P            ANOP  ,                                               00086200
                  AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC            00086300
                  AIF   ('&ZCGPR' LT '1').ZG30Q                         00086400
                  AIF   ('&ZCGPR' LE '12').ZG30R                        00086500
.ZG30Q            ANOP  ,                                               00086600
&ZMS              SETC  '"MF='                                          00086700
&ZMS              SETC  '&ZMS.&MF"'                                     00086800
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00086900
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00087000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00087100
.ZG30R            ANOP  ,                                               00087200
.*-------------------------------------------------------------------   00087300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00087400
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00087500
.ZG34A   AIF   ('&MF(3)' NE 'COMPLETE').ZG35A                           00087600
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00087700
.*-------------------------------------------------------------------   00087800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00087900
.ZG35A            AIF   (K'&XMFSCK GT 0).ZG35C  KEYWORD                 00088000
                  AIF   (K'&MF(3) LE 0).ZG35B                           00088100
&ZMS              SETC  '"MF='                                          00088200
&ZMS              SETC  '&ZMS.&MF"'                                     00088300
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00088400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00088500
&ZMS              SETC  '&ZMS "COMPLETE".'                              00088600
                  MNOTE 8,' &ZMS '                                      00088700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00088800
.ZG35B            ANOP  ,                                               00088900
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00089000
.ZG35C            ANOP  ,                                               00089100
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00089200
.*------------------------------------------------------------------    00089300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089400
.ZG36             ANOP  ,                                               00089500
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00089600
                  AIF   (K'&XMF GT 0).ZG36E     VALID ARG               00089700
                  AIF   (T'&MF EQ 'O').ZG36D    OMITTED                 00089800
&ZASYSLNDX        SETA  0                                               00089900
.ZG36A            ANOP  ,           POSITIONAL MACRO KEY                00090000
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00090100
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG36C                00090200
&ZTLC             SETC 'MF'                                             00090300
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG36A       00090400
.ZG36B            ANOP  ,                                               00090500
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00090600
&ZMS              SETC  'THE "MF" KEY'                                  00090700
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00090800
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00090900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00091000
                  AGO   .ZG36E                                          00091100
.ZG36C            ANOP  ,                                               00091200
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00091300
&ZMS              SETC  '"MF='                                          00091400
&ZMS              SETC  '&ZMS.&MF"'                                     00091500
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00091600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00091700
&ZMS              SETC  '&ZMS "S",'                                     00091800
&ZMS              SETC  '&ZMS "L",'                                     00091900
&ZMS              SETC  '&ZMS OR "E".'                                  00092000
                  MNOTE 8,' &ZMS '                                      00092100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00092200
                  AGO   .ZG36E                                          00092300
.ZG36D            ANOP  ,                                               00092400
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00092500
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00092600
.ZG36E            ANOP  ,                                               00092700
.********************************************************************   00092800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00092900
.********************************************************************   00093000
                  ACTR  10000                                           00093100
.*-------------------------------------------------------------------   00093200
.***AG.MF03 MF=(SLE)                                                    00093300
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00093400
.*------------------------------------------------------------------    00093500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00093600
&XAFFINITY        SETC  ''          INITIALIZE XVARIABLE                00093700
.*-------------------------------------------------------------------   00093800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00093900
.ZG3              ANOP  ,                                               00094000
                  AIF   (K'&AFFINITY(1) LE 0).ZG3A                      00094100
&ZTLC             SETC 'YES'                                            00094200
                  AIF   ('&AFFINITY(1)' NE '&ZTLC').ZG4                 00094300
&XAFFINITY        SETC  'YES'       SET KEYWORD                         00094400
                  AIF   (N'&AFFINITY LE 1).ZG3A  CK NUM                 00094500
&ZMS              SETC  '"AFFINITY='                                    00094600
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00094700
&ZMS              SETC  '&ZMS "AFFINITY"'                               00094800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00094900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00095000
.ZG3A             ANOP  ,                                               00095100
.*-------------------------------------------------------------------   00095200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00095300
.ZG4              ANOP  ,                                               00095400
&ZTLC             SETC 'NO'                                             00095500
                  AIF   ('&AFFINITY(1)' NE '&ZTLC').ZG5                 00095600
&XAFFINITY        SETC  'NO'        SET KEYWORD                         00095700
                  AIF   (N'&AFFINITY LE 1).ZG4A  CK NUM                 00095800
&ZMS              SETC  '"AFFINITY='                                    00095900
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00096000
&ZMS              SETC  '&ZMS "AFFINITY"'                               00096100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00096200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00096300
.ZG4A             ANOP  ,                                               00096400
.*------------------------------------------------------------------    00096500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00096600
.ZG5              ANOP  ,                                               00096700
&ZXAFFINITY       SETC  'INPUT'     SET IN/OUTPUT                       00096800
                  AIF   (K'&XAFFINITY GT 0).ZG5E  VALID ARG             00096900
                  AIF   (T'&AFFINITY EQ 'O').ZG5D  OMITTED              00097000
&ZASYSLNDX        SETA  0                                               00097100
.ZG5A             ANOP  ,           POSITIONAL MACRO KEY                00097200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00097300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG5C                 00097400
&ZTLC             SETC 'AFFINITY'                                       00097500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG5A        00097600
.ZG5B             ANOP  ,                                               00097700
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00097800
&ZMS              SETC  'THE "AFFINITY" KEY'                            00097900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00098000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00098100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00098200
                  AGO   .ZG5E                                           00098300
.ZG5C             ANOP  ,                                               00098400
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00098500
&ZMS              SETC  '"AFFINITY='                                    00098600
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00098700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00098800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00098900
&ZMS              SETC  '&ZMS "YES"'                                    00099000
&ZMS              SETC  '&ZMS OR "NO".'                                 00099100
                  MNOTE 8,' &ZMS '                                      00099200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00099300
                  AGO   .ZG5E                                           00099400
.ZG5D             ANOP  ,                                               00099500
&XAFFINITY        SETC  'YES'       SET DEFAULT KEYWORD                 00099600
.ZG5E             ANOP  ,                                               00099700
.*------------------------------------------------------------------    00099800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00099900
                  AIF   (K'&AFFINITY(1) GT 0).ZG5F  PARM                00100000
&XAFFINITY        SETC  ''          ENSURE NULL KEYWORD                 00100100
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00100200
&ZMS              SETC  'THE'                                           00100300
&ZMS              SETC  '&ZMS "AFFINITY" KEY AND ITS'                   00100400
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00100500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00100600
&ZMS              SETC  '&ZMS "YES"'                                    00100700
&ZMS              SETC  '&ZMS OR "NO".'                                 00100800
                  MNOTE 8,' &ZMS '                                      00100900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00101000
.ZG5F             ANOP  ,                                               00101100
.*----------------------------------------------------------------***   00101200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00101300
                  AIF   (N'&REGION_TOKEN LE 1).ZG7A  CK NUM             00101400
&ZMS              SETC  '"REGION_TOKEN='                                00101500
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00101600
&ZMS              SETC  '&ZMS "REGION_TOKEN"'                           00101700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00101800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00101900
.ZG7A             ANOP  ,                                               00102000
.*-------------------------------------------------------------------   00102100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00102200
&ZXREGION_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00102300
&XREGION_TOKEN    SETC  '0'                                             00102400
                  AIF   (K'&REGION_TOKEN(1) LE 0).ZG7B  PARM            00102500
&XREGION_TOKEN    SETC  '&REGION_TOKEN(1)'      SET XVARIABLE           00102600
                  AIF   (N'&REGION_TOKEN GT 1).ZG7B  MULTI              00102700
&XREGION_TOKEN    SETC  '&REGION_TOKEN'         SET XVARIABLE           00102800
.ZG7B             ANOP  ,                                               00102900
.*-------------------------------------------------------------------   00103000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00103100
                  AIF   (K'&ZXREGION_TOKEN LE 0).ZG7R  NOT I/O          00103200
                  AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZG7R             00103300
&ZCGPR            SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)          00103400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                     00103500
                  AIF   (K'&ZCGPR GT 2).ZG7Q                            00103600
                  AIF   ('&ZCGPR' EQ '0').ZG7Q                          00103700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00103800
                  AIF   (T'&ZCGPR NE 'N').ZG7Q  INVALID REG NAME        00103900
.ZG7P             ANOP  ,                                               00104000
                  AIF   (T'&ZCGPR NE 'N').ZG7R  NON NUMERIC             00104100
                  AIF   ('&ZCGPR' LT '2').ZG7Q                          00104200
                  AIF   ('&ZCGPR' LE '12').ZG7R                         00104300
.ZG7Q             ANOP  ,                                               00104400
&ZMS              SETC  '"REGION_TOKEN='                                00104500
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00104600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00104700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00104800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00104900
.ZG7R             ANOP  ,                                               00105000
.*----------------------------------------------------------------***   00105100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00105200
                  AIF   (N'&RETCODE LE 1).ZG10A  CK NUM                 00105300
&ZMS              SETC  '"RETCODE='                                     00105400
&ZMS              SETC  '&ZMS.&RETCODE"'                                00105500
&ZMS              SETC  '&ZMS "RETCODE"'                                00105600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00105700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00105800
.ZG10A            ANOP  ,                                               00105900
.*-------------------------------------------------------------------   00106000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00106100
                  AIF   (K'&RETCODE(1) LE 0).ZG10C  NO PARM             00106200
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00106300
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00106400
                  AIF   (N'&RETCODE GT 1).ZG10C                         00106500
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00106600
.ZG10C            ANOP  ,                                               00106700
.*-------------------------------------------------------------------   00106800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00106900
                  AIF   (K'&ZXRETCODE LE 0).ZG10R  NOT I/O              00107000
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG10R                 00107100
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00107200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                    00107300
                  AIF   (K'&ZCGPR GT 2).ZG10Q                           00107400
                  AIF   ('&ZCGPR' EQ '0').ZG10Q                         00107500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00107600
                  AIF   (T'&ZCGPR NE 'N').ZG10Q  INVALID REG NAME       00107700
.ZG10P            ANOP  ,                                               00107800
                  AIF   (T'&ZCGPR NE 'N').ZG10R  NON NUMERIC            00107900
                  AIF   ('&ZCGPR' EQ '15').ZG10R                        00108000
                  AIF   ('&ZCGPR' LT '2').ZG10Q                         00108100
                  AIF   ('&ZCGPR' LE '12').ZG10R                        00108200
.ZG10Q            ANOP  ,                                               00108300
&ZMS              SETC  '"RETCODE='                                     00108400
&ZMS              SETC  '&ZMS.&RETCODE"'                                00108500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00108600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'        00108700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00108800
.ZG10R            ANOP  ,                                               00108900
.*----------------------------------------------------------------***   00109000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00109100
                  AIF   (N'&RSNCODE LE 1).ZG13A  CK NUM                 00109200
&ZMS              SETC  '"RSNCODE='                                     00109300
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00109400
&ZMS              SETC  '&ZMS "RSNCODE"'                                00109500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00109600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00109700
.ZG13A            ANOP  ,                                               00109800
.*-------------------------------------------------------------------   00109900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00110000
                  AIF   (K'&RSNCODE(1) LE 0).ZG13C  NO PARM             00110100
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00110200
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00110300
                  AIF   (N'&RSNCODE GT 1).ZG13C                         00110400
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00110500
.ZG13C            ANOP  ,                                               00110600
.*-------------------------------------------------------------------   00110700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00110800
                  AIF   (K'&ZXRSNCODE LE 0).ZG13R  NOT I/O              00110900
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG13R                 00111000
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00111100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                    00111200
                  AIF   (K'&ZCGPR GT 2).ZG13Q                           00111300
                  AIF   ('&ZCGPR' EQ '0').ZG13R                         00111400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00111500
                  AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME       00111600
.ZG13P            ANOP  ,                                               00111700
                  AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC            00111800
                  AIF   ('&ZCGPR' EQ '0').ZG13R                         00111900
                  AIF   ('&ZCGPR' LT '2').ZG13Q                         00112000
                  AIF   ('&ZCGPR' LE '12').ZG13R                        00112100
.ZG13Q            ANOP  ,                                               00112200
&ZMS              SETC  '"RSNCODE='                                     00112300
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00112400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00112500
                  MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'         00112600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00112700
.ZG13R            ANOP  ,                                               00112800
.******************************************************************     00112900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00113000
.******************************************************************     00113100
                  ACTR  10000                                           00113200
.*----------------------------------------------------------------***   00113300
.***AH.P02 EXTRA POSITIONALS                                            00113400
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00113500
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00113600
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00113700
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00113800
.ZGLISTX1         ANOP  ,                                               00113900
&ZCVAL            SETC  ''          ERROR FIELD                         00114000
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00114100
.ZGLIST2          ANOP  ,                                               00114200
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00114300
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00114400
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00114500
                  AGO   .ZGLIST2                                        00114600
.*                                                                      00114700
.ZGLIST3          ANOP  ,                                               00114800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00114900
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'                       00115000
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00115100
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00115200
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00115300
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00115400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00115500
.ZGLISTX          ANOP  ,                                               00115600
&ZASYSLNDX        SETA  0                                               00115700
.*-------------------------------------------------------------------   00115800
.***AG.MF04 MF=(SLE)                                                    00115900
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00116000
.*******************************************************************    00116100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00116200
.*******************************************************************    00116300
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00116400
.*******************************************************************    00116500
.***AE.01  START OF IWM4TAF MACRO CODE                                  00116600
.*******************************************************************    00116700
                  LCLC  &M0M0001                 NAME                   00116800
&M0M0001          SETC  '&XLABEL'                SET NAME               00116900
                  AIF   (K'&XLABEL NE 0).XLAB2                          00117000
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00117100
.*                                                                      00117200
.XLAB2            ANOP  ,                                               00117300
                  AIF   ('&XMF' EQ 'L').XLAB3                           00117400
&M0M0001 DS    0H                             IWM4TAF-0                 00117500
.XLAB3            ANOP  ,                                               00117600
.*******************************************************************    00117700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00117800
.*******************************************************************    00117900
              PUSH  PRINT                                               00118000
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00118100
                  PRINT OFF         ++ PR01                             00118200
                  AGO   .ZPRNTXX                                        00118300
.ZPRINTX          PRINT ON                                              00118400
.ZPRNTXX          ANOP  ,                                               00118500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00118600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00118700
.********************************************************************   00118800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00118900
.********************************************************************   00119000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00119100
                      LCLA  &ZOPN1         INVOCATION INDEX             00119200
                      LCLC  &ZOPL(4095)    LABEL                        00119300
                      LCLC  &ZOPO(4095)    OPERATION                    00119400
                      LCLC  &ZOPV(4095)    VALUE                        00119500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00119600
.*                                                                      00119700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00119800
.******************************************************************     00119900
.***AL.L10 IWM4TAF FMT=LIST MF=S!L PARAMETERS                           00120000
.******************************************************************     00120100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00120200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00120300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00120400
&XMFATTR              SETC  '0D'                                        00120500
.*                                                                      00120600
&ZOPN                 SETA  &ZOPN+1                                     00120700
&ZOPL(&ZOPN)          SETC  ' '                                         00120800
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00120900
&ZOPV(&ZOPN)          SETC  '4,8'                                       00121000
&ZOPN                 SETA  &ZOPN+1                                     00121100
&ZOPL(&ZOPN)          SETC  ' '                                         00121200
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00121300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00121400
&ZOPD(&ZOPN)          SETC  '++ IWM4TAF ARG PARMS'                      00121500
.*                                                                      00121600
&ZOPN                 SETA  &ZOPN+1                                     00121700
&ZOPL(&ZOPN)          SETC  ' '                                         00121800
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00121900
&ZOPV(&ZOPN)          SETC  '1'                                         00122000
&ZOPD(&ZOPN)          SETC  ' '                                         00122100
.*                                                                      00122200
.ZLMFSL2              ANOP  ,                                           00122300
.*-------------------------------------------------------------------   00122400
.***AM.L00  IWM4TAF FMT=LIST name                                       00122500
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00122600
&ZOPN                 SETA &ZOPN+1                                      00122700
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00122800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00122900
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00123000
&ZOPD(&ZOPN)          SETC '++ IWM4TAF NAME'                            00123100
.ZLMFSL2M             ANOP  ,                                           00123200
.*-------------------------------------------------------------------   00123300
.***AM.L01  IWM4TAF FMT=LIST PARAMETERS                                 00123400
&ZOPN                 SETA &ZOPN+1                                      00123500
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00123600
&ZOPO(&ZOPN)          SETC 'DS'                                         00123700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00123800
&ZOPD(&ZOPN)          SETC '++ IWM4TAF PARM LIST'                       00123900
.*-------------------------------------------------------------------   00124000
.***AM.L02 XVERSION XL1                                                 00124100
&ZOPN                 SETA &ZOPN+1                                      00124200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00124300
&ZOPO(&ZOPN)          SETC 'DS'                                         00124400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00124500
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00124600
.*-------------------------------------------------------------------   00124700
.***AM.L03 XOPTIONS BL.8                                                00124800
&ZOPN                 SETA &ZOPN+1                                      00124900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00125000
&ZOPO(&ZOPN)          SETC 'DS'                                         00125100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00125200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00125300
.*                                                                      00125400
&ZOPN                 SETA  &ZOPN+1                                     00125500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IWM4TAF'                         00125600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00125700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00125800
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00125900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IWM4TAF'                      00126000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00126100
.*-------------------------------------------------------------------   00126200
.***AM.L09  XPLISTLEN XL2                                               00126300
&ZOPN                 SETA &ZOPN+1                                      00126400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00126500
&ZOPO(&ZOPN)          SETC 'DS'                                         00126600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00126700
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00126800
.*-------------------------------------------------------------------   00126900
.***AM.L03 XFLAG_WORD BL.8                                              00127000
&ZOPN                 SETA &ZOPN+1                                      00127100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAG_WORD'                       00127200
&ZOPO(&ZOPN)          SETC 'DS'                                         00127300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00127400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00127500
.*                                                                      00127600
&ZOPN                 SETA  &ZOPN+1                                     00127700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAFFINITY_YES'                   00127800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00127900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00128000
&ZOPD(&ZOPN)          SETC  '++ XAFFINITY.'                             00128100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00128200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00128300
.*-------------------------------------------------------------------   00128400
.***AM.L09  XRSV0002 CL3                                                00128500
&ZOPN                 SETA &ZOPN+1                                      00128600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00128700
&ZOPO(&ZOPN)          SETC 'DS'                                         00128800
&ZOPV(&ZOPN)          SETC 'CL3'                                        00128900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00129000
.*-------------------------------------------------------------------   00129100
.***AM.L09  XREGION_TOKEN CL16                                          00129200
&ZOPN                 SETA &ZOPN+1                                      00129300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGION_TOKEN'                    00129400
&ZOPO(&ZOPN)          SETC 'DS'                                         00129500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00129600
&ZOPD(&ZOPN)          SETC '++ &ZXREGION_TOKEN '                        00129700
.*-------------------------------------------------------------------   00129800
.***AM.L10 END OF IWM4TAF LIST PARAMETERS                               00129900
&ZOPN                 SETA &ZOPN+1                                      00130000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00130100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00130200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00130300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00130400
.*                                                                      00130500
&ZOPN                 SETA &ZOPN+1                                      00130600
&ZOPL(&ZOPN)          SETC ' '                                          00130700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00130800
&ZOPV(&ZOPN)          SETC '1'                                          00130900
&ZOPD(&ZOPN)          SETC ' '                                          00131000
.*-------------------------------------------------------------------   00131100
.***AL.L12 IWM4TAF FMT=LIST MF=S!L PARAMETERS                           00131200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00131300
.*                                                                      00131400
&ZOPN                 SETA  &ZOPN+1                                     00131500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00131600
&ZOPO(&ZOPN)          SETC  'DC'                                        00131700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00131800
&ZOPD(&ZOPN)          SETC  '++ IWM4TAF ARG PARMS'                      00131900
.*                                                                      00132000
.ZLMFSLX              ANOP  ,                                           00132100
.*-------------------------------------------------------------------   00132200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00132300
&ZPLLEN               SETA 24                                           00132400
.*                                                                      00132500
.******************************************************************     00132600
.***AI.L01 IWM4TAF FMT=LIST FILL IN PARAMETER AREA                      00132700
.******************************************************************     00132800
                      ACTR  10000                                       00132900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00133000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00133100
&ZCVAL                SETC  'LAE'          XAX MODE                     00133200
.ZIMFXA               ANOP ,                                            00133300
.*                                                                      00133400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00133500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00133600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00133700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00133800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00133900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00134000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00134100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00134200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00134300
&ZOPN                 SETA  &ZOPN+1                                     00134400
&ZOPL(&ZOPN)          SETC  ' '                                         00134500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00134600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00134700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00134800
                      AGO   .ZIMFNX                                     00134900
.*                                                                      00135000
.ZIMFN2               ANOP ,                                            00135100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00135200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00135300
&ZOPN                 SETA  &ZOPN+1                                     00135400
&ZOPL(&ZOPN)          SETC  ' '                                         00135500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00135600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00135700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00135800
                      AGO   .ZIMFNX                                     00135900
.ZIMFNX1              ANOP ,                                            00136000
&ZOPN                 SETA  &ZOPN+1                                     00136100
&ZOPL(&ZOPN)          SETC  ' '                                         00136200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00136300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00136400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00136500
.ZIMFNX               ANOP ,                                            00136600
.********************************************************************   00136700
.***AI.L02 IWM4TAF FMT=LIST INITIALIZE PARAMETER AREA                   00136800
.********************************************************************   00136900
.***AI.L03 MF=(SLE)                                                     00137000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00137100
.*                                                                      00137200
&ZOPN                 SETA  &ZOPN+1                                     00137300
&ZOPL(&ZOPN)          SETC  ' '                                         00137400
&ZOPO(&ZOPN)          SETC  'XC'                                        00137500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00137600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00137700
.ZIMFLX               ANOP  ,                                           00137800
.*-------------------------------------------------------------------   00137900
.***AI.L05 XOPTIONS BL1                                                 00138000
&ZW                   SETC  ''                                          00138100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00138200
.*-------------------------------------------------------------------   00138300
.***AI.L08 XOPTIONS "IWM4TAF"                                           00138400
.***      BL1'XXXXXXX1'                                                 00138500
&ZW                   SETC  '&ZW.00000001'                              00138600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00138700
.*-------------------------------------------------------------------   00138800
.***AI.L11 XOPTIONS BL1                                                 00138900
                      AIF   ('&ZCLNG' NE 'YES').ZI3E  ALL ZERO BITS     00139000
&ZOPN                 SETA  &ZOPN+1                                     00139100
&ZOPL(&ZOPN)          SETC  ' '                                         00139200
&ZOPO(&ZOPN)          SETC  'OI'                                        00139300
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00139400
&ZOPD(&ZOPN)          SETC  '++ 36 BL1'                                 00139500
.ZI3E                 ANOP  ,                                           00139600
.*-------------------------------------------------------------------   00139700
.***AI.L04 XPLISTLEN XL2                                                00139800
&ZOPN                 SETA  &ZOPN+1                                     00139900
&ZOPL(&ZOPN)          SETC  ' '                                         00140000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00140100
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00140200
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00140300
.*-------------------------------------------------------------------   00140400
.***AI.L05 XFLAG_WORD BL1                                               00140500
&ZW                   SETC  ''                                          00140600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00140700
.*-------------------------------------------------------------------   00140800
.***AI.L08 XFLAG_WORD "YES"                                             00140900
.***      BL1'1XXXXXXX'                                                 00141000
         AIF   ('&XAFFINITY' NE 'YES').ZI6A                             00141100
&ZW                   SETC  '&ZW.10000000'                              00141200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00141300
                      AGO   .ZI6C                                       00141400
.*                                                                      00141500
.ZI6A                 ANOP  ,                                           00141600
&ZW                   SETC  '&ZW.00000000'                              00141700
.ZI6C                 ANOP  ,                                           00141800
.*-------------------------------------------------------------------   00141900
.***AI.L11 XFLAG_WORD BL1                                               00142000
                      AIF   ('&ZCLNG' NE 'YES').ZI6E  ALL ZERO BITS     00142100
&ZOPN                 SETA  &ZOPN+1                                     00142200
&ZOPL(&ZOPN)          SETC  ' '                                         00142300
&ZOPO(&ZOPN)          SETC  'OI'                                        00142400
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00142500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00142600
.ZI6E                 ANOP  ,                                           00142700
.*-------------------------------------------------------------------   00142800
.***AI.L25  XREGION_TOKEN CL16                                          00142900
                      AIF   ('&ZXREGION_TOKEN' EQ '').ZI8E              00143000
                      AIF   ('&ZXREGION_TOKEN' EQ 'OUTPUT').ZI8E        00143100
&ZCGPR                SETC  '&XREGION_TOKEN'                            00143200
         AIF   ('&XREGION_TOKEN' EQ '0').ZI8E                           00143300
         AIF   ('&XREGION_TOKEN' EQ '0').ZI8E                           00143400
.*                                                                      00143500
                      AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZI8B         00143600
&ZCGPR   SETC  '0('.'&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2).')'          00143700
                      AGO   .ZI8D                                       00143800
.ZI8B                 ANOP  ,                                           00143900
.*                                                                      00144000
                      AIF   ('&REGION_TOKEN(1)' EQ '').ZI8I             00144100
&ZC                   SETC  '0'                                         00144200
                      AIF   ('&XREGION_TOKEN' NE '&ZC').ZI8C            00144300
.ZI8I                 ANOP  ,                                           00144400
&ZCGPR                SETC  '=CL16''&XREGION_TOKEN'''                   00144500
.ZI8C                 ANOP  ,                                           00144600
.*                                                                      00144700
.ZI8D                 ANOP  ,                                           00144800
.*                                                                      00144900
&ZOPN                 SETA  &ZOPN+1                                     00145000
&ZOPL(&ZOPN)          SETC  ' '                                         00145100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00145200
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00145300
&ZOPD(&ZOPN)          SETC  '++ &ZXREGION_TOKEN XREGION_TOKEN'          00145400
.*                                                                      00145500
.ZI8E                 ANOP  ,                                           00145600
.*-------------------------------------------------------------------   00145700
&ZOPN1                SETA &ZOPN                                        00145800
.*******************************************************************    00145900
.***  PROCESS IWM4TAF OUTPUT PARAMETERS                                 00146000
.*******************************************************************    00146100
                      ACTR  10000                                       00146200
.*******************************************************************    00146300
.***AO.X02  RETURN CODE PROCESSING                                      00146400
.*******************************************************************    00146500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00146600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00146700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00146800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00146900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00147000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00147100
&ZOPN                 SETA  &ZOPN+1                                     00147200
&ZOPL(&ZOPN)          SETC  ' '                                         00147300
&ZOPO(&ZOPN)          SETC  'ST'                                        00147400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00147500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00147600
                      AGO   .ZMRETX                                     00147700
.*                                                                      00147800
.ZMRET2               ANOP  ,                                           00147900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00148000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00148100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00148200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00148300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00148400
&ZOPN                 SETA  &ZOPN+1                                     00148500
&ZOPL(&ZOPN)          SETC  ' '                                         00148600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00148700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00148800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00148900
.ZMRETX               ANOP  ,                                           00149000
.*******************************************************************    00149100
.***AO.X03  REASON CODE PROCESSING                                      00149200
.*******************************************************************    00149300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00149400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00149500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00149600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00149700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00149800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00149900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00150000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00150100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00150200
&ZOPN                 SETA  &ZOPN+1                                     00150300
&ZOPL(&ZOPN)          SETC  ' '                                         00150400
&ZOPO(&ZOPN)          SETC  'ST'                                        00150500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00150600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00150700
                      AGO   .ZMRSNX                                     00150800
.*                                                                      00150900
.ZMRSN2               ANOP  ,                                           00151000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00151100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00151200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00151300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00151400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00151500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00151600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00151700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00151800
&ZOPN                 SETA  &ZOPN+1                                     00151900
&ZOPL(&ZOPN)          SETC  ' '                                         00152000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00152100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00152200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00152300
.ZMRSNX               ANOP  ,                                           00152400
.*******************************************************************    00152500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00152600
.*******************************************************************    00152700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00152800
.*******************************************************************    00152900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00153000
.*******************************************************************    00153100
                      ACTR  10000                                       00153200
.*                                                                      00153300
                      LCLA  &ZLC           COLUMN POSITION              00153400
                      LCLA  &ZOPX          LIST TABLE INDEX             00153500
                      LCLC  &ZLL           LABEL                        00153600
                      LCLC  &ZLOP          OPERATION                    00153700
                      LCLC  &ZLV           VALUE                        00153800
                      LCLC  &ZLD           DESCRIPTION                  00153900
.*                                                                      00154000
&ZOPX                 SETA  1                                           00154100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00154200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00154300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00154400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00154500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00154600
                      AIF   (K'&ZLD LE 0).ZL5                           00154700
&ZLC                  SETA  35             COMMENT COLUMN               00154800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00154900
&ZLC                  SETA  33             COMMMENT COLUMN              00155000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00155100
&ZLV                  SETC  '&ZLV'.' '                                  00155200
                      AGO   .ZL3                                        00155300
.*                                                                      00155400
.ZL4                  ANOP  ,                                           00155500
&ZLV                  SETC  '&ZLV'.' '                                  00155600
.ZL5                  ANOP  ,                                           00155700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00155800
.*                                                                      00155900
&ZLL     &ZLOP &ZLV                                                     00156000
.*                                                                      00156100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00156200
                      AGO   .ZL2           CONTINUE LOOPING             00156300
.*                                                                      00156400
.ZLX                  ANOP  ,                                           00156500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00156600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00156700
         AIF   ('&SYSAM64' NE 'YES').AMODE31                            00156800
         LLGTR 14,14                   CLEAR HIGH HALF IN 64BIT MODE    00156900
.AMODE31 L     14,16(0,0)              GET CVT ADDRESS                  00157000
.*-------------------------------------------------------------------   00157100
         TM    CVTOSLV3-CVT(14),CVTH7709  test for HBB7709 presence     00157200
         BNZ   VEROK&SYSNDX               running on HBB7709            00157300
         LA    0,IWMRSNCODEBADVERSION     HBB7709 is required           00157400
         LA    15,IWMRETCODEINVOCERROR    set return code               00157500
         B     END&SYSNDX                 skip service invocation       00157600
VEROK&SYSNDX DS    0H                     version check successful      00157700
.*-------------------------------------------------------------------   00157800
         L     14,772(14,0)            GET SFT ADDRESS                  00157900
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00158000
         LA    15,98                   GET EX FOR SERVICE ROUTINE       00158100
         OR    14,15                   GET PC NUMBER                    00158200
         PC    0(14)                                                    00158300
END&SYSNDX DS    0H                    END LABEL                        00158400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00158500
.ZLINKX               ANOP  ,                                           00158600
.*******************************************************************    00158700
.***AP.X01  FORMAT GENERATED CODE                                       00158800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00158900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00159000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00159100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00159200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00159300
                      AIF   (K'&ZLD LE 0).ZL51                          00159400
&ZLC                  SETA  35             COMMENT COLUMN               00159500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00159600
&ZLC                  SETA  33             COMMENT COLUMN               00159700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00159800
&ZLV                  SETC  '&ZLV'.' '                                  00159900
                      AGO   .ZL31                                       00160000
.*                                                                      00160100
.ZL41                 ANOP  ,                                           00160200
&ZLV                  SETC  '&ZLV'.' '                                  00160300
.ZL51                 ANOP  ,                                           00160400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00160500
.*                                                                      00160600
&ZLL     &ZLOP &ZLV                                                     00160700
.*                                                                      00160800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00160900
                      AGO   .ZL21          CONTINUE LOOPING             00161000
.*                                                                      00161100
.ZLX1                 ANOP  ,                                           00161200
.*******************************************************************    00161300
.***AP.X02  END OF IWM4TAF MACRO                                        00161400
&ZIWM4TAF             SETC  'YES'          SET IWM4TAF USED             00161500
         POP   PRINT                                                    00161600
*                                            IWM4TAF-0                  00161700
         SPACE 1                                                        00161800
.ZLX2                 ANOP  ,                                           00161900
         MEND                                                           00162000
**********************************************************************/ 00162100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00162200
*%IWM4TAF: MACRO KEYS(AFFINITY,REGION_TOKEN,RETCODE,RSNCODE,PLISTVER,   00162300
*                 MF);                                                  00162400
*  ANS('?'!!MACLABEL!!' '!!'IWM4TAFP '!!MACLIST!!                       00162500
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00162600
*%END IWM4TAF;                                                          00162700
